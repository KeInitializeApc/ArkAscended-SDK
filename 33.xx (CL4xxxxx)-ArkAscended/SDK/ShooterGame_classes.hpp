#pragma once

// Dumped with TateDumper!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0xB0 (0x790 - 0x6E0)
// Class ShooterGame.CustomCanvasWidget
class UCustomCanvasWidget : public UButton
{
public:
	uint8                                        Pad_1E60[0x48];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bOverrideScreenCanvasProjection;                   // 0x728(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreParentAlpha;                                // 0x729(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E62[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnDraggedObject;                                   // 0x730(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E63[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCustomCanvasWidget* GetDefaultObj();

};

// 0x148 (0x8D8 - 0x790)
// Class ShooterGame.DataListEntryButton
class UDataListEntryButton : public UCustomCanvasWidget
{
public:
	uint8                                        Pad_1E6A[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class FString                                DisplayString;                                     // 0x7A0(0x10)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FString                                AdditionalDisplayString;                           // 0x7B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ContextMenuAnchorName;                             // 0x7C0(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            ItemIcon;                                          // 0x7C8(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          ForegroundColor;                                   // 0x7D0(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	bool                                         bUseSelectedBackgroundColor;                       // 0x7E0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E6D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          SelectedBackgroundColor;                           // 0x7E4(0x10)(ConstParm, ExportObject, Net, Parm, DisableEditOnTemplate, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1E6E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            AltHighlightBGTexture;                             // 0x7F8(0x8)(Edit, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        NameOffset;                                        // 0x800(0x4)(Edit, ConstParm, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bClickable;                                        // 0x804(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bEnabled;                                          // 0x805(0x1)(Edit, ConstParm, Parm, ZeroConstructor, Transient, EditConst, GlobalConfig)
	bool                                         bUseDisplayString;                                 // 0x806(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E73[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          DisplayStringColor;                                // 0x808(0x10)(Edit, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             DisplayStringOffset;                               // 0x818(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TextDisplayStringSize;                             // 0x828(0x4)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E74[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             DisplayStringScale;                                // 0x830(0x10)(ExportObject, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisplayStringCenterX;                             // 0x840(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisplayStringCenterY;                             // 0x841(0x1)(BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSetIndexPlusOneToDisplayString;                   // 0x842(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowClickingWhenNoEntry;                         // 0x843(0x1)(Edit, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E77[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UFont*                                 DisplayStringFont;                                 // 0x848(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            SelectedIcon;                                      // 0x850(0x8)(ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, Config, DuplicateTransient)
	struct FLinearColor                          DisabledColor;                                     // 0x858(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          TintColorOverride;                                 // 0x868(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDataListAutomaticallyOverrideText : 1;            // Mask: 0x1, PropSize: 0x10x878(0x1)(Edit, ConstParm, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDataListAutomaticallyOverrideEnabled : 1;         // Mask: 0x2, PropSize: 0x10x878(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bWrapText : 1;                                     // Mask: 0x4, PropSize: 0x10x878(0x1)(Edit, ExportObject, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseDataProviderCustomColor : 1;                   // Mask: 0x8, PropSize: 0x10x878(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bOverrideTintColor : 1;                            // Mask: 0x10, PropSize: 0x10x878(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bShowDisplayStringWhenHasItem : 1;                 // Mask: 0x20, PropSize: 0x10x878(0x1)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseCustomTextColor : 1;                           // Mask: 0x40, PropSize: 0x10x878(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bSelected : 1;                                     // Mask: 0x80, PropSize: 0x10x878(0x1)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bForceDraggingDisabled : 1;                        // Mask: 0x1, PropSize: 0x10x879(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDraggable : 1;                                    // Mask: 0x2, PropSize: 0x10x879(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_E8 : 2;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAllowExtraIcon : 1;                               // Mask: 0x10, PropSize: 0x10x879(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bToggleButton : 1;                                 // Mask: 0x20, PropSize: 0x10x879(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_E9 : 2;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1E89[0x16];                                    // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            OverrideDisabledIcon;                              // 0x890(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             WrappedTextSpacingAdjust;                          // 0x898(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E8D[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                OverridenTextColor;                                // 0x8B0(0x4)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bHasEngram;                                        // 0x8B4(0x1)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bKnownEngram;                                      // 0x8B5(0x1)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOverrideStlye;                                    // 0x8B6(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E8F[0x11];                                    // Fixing Size After Last Property  > TateDumper <
	class UMaterialInstanceDynamic*              MyIconMat;                                         // 0x8C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UMenuAnchor*                           ContextMenuAnchor;                                 // 0x8D0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UDataListEntryButton* GetDefaultObj();

	class UWidget* OnGetContextMenuContent();
	class FString GetStringValue();
	class FString GetOverridenStringValue();
	void ClickedSecondaryButton(class UWidget** ClickedWidget);
	void ClickedButton(class UWidget** ClickedWidget);
};

// 0x58 (0x930 - 0x8D8)
// Class ShooterGame.AdminPlayerInfoEntryButton
class UAdminPlayerInfoEntryButton : public UDataListEntryButton
{
public:
	uint8                                        bIsCustom : 1;                                     // Mask: 0x1, PropSize: 0x10x8D8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_EB : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1E9A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                PlayerName;                                        // 0x8E0(0x10)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, SubobjectReference)
	class FString                                SteamPlayerName;                                   // 0x8F0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                LinkedPlayerID;                                    // 0x900(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bCenterDisplayName;                                // 0x910(0x1)(BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1EA1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          DisplayStringSelectedColor;                        // 0x914(0x10)(ConstParm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1EA2[0xC];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAdminPlayerInfoEntryButton* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.AhoCorasickMatch
class UAhoCorasickMatch : public UObject
{
public:

	static class UClass* StaticClass();
	static class UAhoCorasickMatch* GetDefaultObj();

	TArray<struct FIntArray> SearchWords(struct FAhoCorasickMatcher* Matcher, bool* bFilterOverlaps, bool* bGetShortest);
	void AddWords(TArray<class FString>* WordList, struct FAhoCorasickMatcher* Matcher);
};

// 0x20 (0x4E0 - 0x4C0)
// Class ShooterGame.AIAttackCoordinator
class AAIAttackCoordinator : public AActor
{
public:
	int32                                        MaxAttackersPerTarget;                             // 0x4C0(0x4)(ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        UpdateInterval;                                    // 0x4C4(0x4)(ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	TArray<TWeakObjectPtr<class APrimalDinoAIController>> Attackers;                                         // 0x4C8(0x10)(BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1EEB[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AAIAttackCoordinator* GetDefaultObj();

	void UpdateAttackGroup(TArray<class APrimalDinoAIController*>* AttackGroup);
	class APrimalDinoAIController* RemoveAttacker();
	int32 GetNumAttackersWithPriorityForTarget();
	int32 GetNumAttackersForTarget();
	void ClearAllAttackers();
	float CalculateAttackerPriorityWeight(class APrimalDinoAIController** Attacker);
	void AddAttackerCharacter(class APrimalDinoCharacter* Character);
	class APrimalDinoAIController* AddAttacker();
};

// 0xC0 (0xE8 - 0x28)
// Class ShooterGame.AllClustersInventory
class UAllClustersInventory : public UObject
{
public:
	uint8                                        Pad_1F0F[0xC0];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAllClustersInventory* GetDefaultObj();

	void OnFinishedSaveForChangingItems(bool* Success, const class FString& UserId);
	bool OnFinishedReadLockForCreateLock(bool* Success, const class FString& UserId);
	TArray<struct FItemNetInfo> OnFinishedLoadForChangingItems(bool* Success, const class FString& UserId);
	void OnFinishedCreateLockForChangingItems(bool* Success, const class FString& UserId);
	void OnFinishedClearLockForChangingItems(bool* Success, const class FString& UserId);
};

// 0x38 (0x910 - 0x8D8)
// Class ShooterGame.AllPaintingsEntryButton
class UAllPaintingsEntryButton : public UDataListEntryButton
{
public:
	class FString                                Filename;                                          // 0x8D8(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm)
	class FString                                FilePath;                                          // 0x8E8(0x10)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, EditConst, SubobjectReference)
	struct FLinearColor                          DisplayStringSelectedColor;                        // 0x8F8(0x10)(ConstParm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F29[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAllPaintingsEntryButton* GetDefaultObj();

};

// 0x48 (0x920 - 0x8D8)
// Class ShooterGame.AllPlayersEntryButton
class UAllPlayersEntryButton : public UDataListEntryButton
{
public:
	class FString                                PlayerName;                                        // 0x8D8(0x10)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, SubobjectReference)
	class FString                                TribeName;                                         // 0x8E8(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	uint64                                       PlayerID;                                          // 0x8F8(0x8)(Edit, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint64                                       TargetingTeamID;                                   // 0x900(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AShooterCharacter*                     CurrentCharachter;                                 // 0x908(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          DisplayStringSelectedColor;                        // 0x910(0x10)(ConstParm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UAllPlayersEntryButton* GetDefaultObj();

};

// 0xC8 (0x410 - 0x348)
// Class ShooterGame.AnimInstance_DinoBlueprintBase
class UAnimInstance_DinoBlueprintBase : public UAnimInstance
{
public:
	bool                                         bAllowNativeAnimations;                            // 0x348(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableBlueprint;                                 // 0x349(0x1)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F37[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              RootRotationOffset;                                // 0x350(0x18)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               RootLocationOffset;                                // 0x368(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	bool                                         bSkipAnimGraph;                                    // 0x380(0x1)(Edit, ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F38[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MovementAnimRate;                                  // 0x384(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MovementAnimRatePower;                             // 0x388(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MinMovementAnimRate;                               // 0x38C(0x4)(Edit, ConstParm, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxMovementAnimRate;                               // 0x390(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MovingAnimSpeedTreshold;                           // 0x394(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsMoving;                                         // 0x398(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseAimOffset;                                     // 0x399(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F39[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AimPitch;                                          // 0x39C(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AimYaw;                                            // 0x3A0(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseBlinking;                                      // 0x3A4(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F3A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BlinkBlend;                                        // 0x3A8(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseTurning;                                       // 0x3AC(0x1)(EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseTurnInPlaceAnimation;                          // 0x3AD(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F3D[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TurningEnabledBlendTime;                           // 0x3B0(0x4)(ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TurningDisabledBlendTime;                          // 0x3B4(0x4)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TurningDirectionBlendTime;                         // 0x3B8(0x4)(Edit, ConstParm, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MinTurnRateForTurnAnimation;                       // 0x3BC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsTurning;                                        // 0x3C0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bTurningRight;                                     // 0x3C1(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseSwimming;                                      // 0x3C2(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F40[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SwimmingMovingAnimSpeedThreshold;                  // 0x3C4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsSwimming;                                       // 0x3C8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseRunning;                                       // 0x3C9(0x1)(ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseRunningMovementAnimRate;                       // 0x3CA(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F45[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RunningMovementAnimRate;                           // 0x3CC(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsRunning;                                        // 0x3D0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseSleepingAnim;                                  // 0x3D1(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F46[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SleepingAnimTranslationOffset;                     // 0x3D8(0x18)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsSleeping;                                       // 0x3F0(0x1)(BlueprintVisible, Parm, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         bUseFalling;                                       // 0x3F1(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F47[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FallingAnimPlayRate;                               // 0x3F4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FallingBlendInTime;                                // 0x3F8(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FallingBlendOutTime;                               // 0x3FC(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsFalling;                                        // 0x400(0x1)(Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F48[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimInstance_DinoBlueprintBase* GetDefaultObj();

};

// 0xE8 (0x430 - 0x348)
// Class ShooterGame.AnimInstance_DinoRootBoneName
class UAnimInstance_DinoRootBoneName : public UAnimInstance
{
public:
	bool                                         bAllowNativeAnimations;                            // 0x348(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableBlueprint;                                 // 0x349(0x1)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F4C[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              RootRotationOffset;                                // 0x350(0x18)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               RootLocationOffset;                                // 0x368(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	float                                        IKAlpha;                                           // 0x380(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	bool                                         bDisableIK;                                        // 0x384(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableIKWhenFalling;                             // 0x385(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSleepingEnableIK;                                 // 0x386(0x1)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSkipAnimGraph;                                    // 0x387(0x1)(Edit, ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MovementAnimRate;                                  // 0x388(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MovementAnimRatePower;                             // 0x38C(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MinMovementAnimRate;                               // 0x390(0x4)(Edit, ConstParm, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxMovementAnimRate;                               // 0x394(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MovingAnimSpeedTreshold;                           // 0x398(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MovingBlendInTime;                                 // 0x39C(0x4)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MovingBlendOutTime;                                // 0x3A0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsMoving;                                         // 0x3A4(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseAimOffset;                                     // 0x3A5(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F50[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AimPitch;                                          // 0x3A8(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AimYaw;                                            // 0x3AC(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AimOffsetPitchScale;                               // 0x3B0(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AimOffsetYawScale;                                 // 0x3B4(0x4)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseAlignGround;                                   // 0x3B8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F52[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AlignGroundAlpha;                                  // 0x3BC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseBlinking;                                      // 0x3C0(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F53[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BlinkBlend;                                        // 0x3C4(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseTurning;                                       // 0x3C8(0x1)(EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseTurnInPlaceAnimation;                          // 0x3C9(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F56[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TurningEnabledBlendTime;                           // 0x3CC(0x4)(ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TurningDisabledBlendTime;                          // 0x3D0(0x4)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TurningDirectionBlendTime;                         // 0x3D4(0x4)(Edit, ConstParm, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MinTurnRateForTurnAnimation;                       // 0x3D8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsTurning;                                        // 0x3DC(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bTurningRight;                                     // 0x3DD(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseSwimming;                                      // 0x3DE(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F5A[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SwimmingMovingAnimSpeedThreshold;                  // 0x3E0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsSwimming;                                       // 0x3E4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseRunning;                                       // 0x3E5(0x1)(ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseRunningMovementAnimRate;                       // 0x3E6(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F5C[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RunningMovementAnimRate;                           // 0x3E8(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RunningBlendInTime;                                // 0x3EC(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RunningBlendOutTime;                               // 0x3F0(0x4)(Edit, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsRunning;                                        // 0x3F4(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseSleepingAnim;                                  // 0x3F5(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F62[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SleepingAnimTranslationOffset;                     // 0x3F8(0x18)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsSleeping;                                       // 0x410(0x1)(BlueprintVisible, Parm, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         bUseFalling;                                       // 0x411(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F64[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FallingAnimPlayRate;                               // 0x414(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FallingBlendInTime;                                // 0x418(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FallingBlendOutTime;                               // 0x41C(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsFalling;                                        // 0x420(0x1)(Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F68[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimInstance_DinoRootBoneName* GetDefaultObj();

};

// 0x158 (0x4A0 - 0x348)
// Class ShooterGame.AnimInstance_DinoRootTransform
class UAnimInstance_DinoRootTransform : public UAnimInstance
{
public:
	bool                                         bAllowNativeAnimations;                            // 0x348(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableBlueprint;                                 // 0x349(0x1)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F74[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              RootRotationOffset;                                // 0x350(0x18)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               RootLocationOffset;                                // 0x368(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	struct FTransform                            RootOffsetTransform;                               // 0x380(0x60)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSkipAnimGraph;                                    // 0x3E0(0x1)(Edit, ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F79[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MovementAnimRate;                                  // 0x3E4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MovementAnimRatePower;                             // 0x3E8(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MinimumMovementSpeed;                              // 0x3EC(0x4)(BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MovingBlendInTime;                                 // 0x3F0(0x4)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MovingBlendOutTime;                                // 0x3F4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsMoving;                                         // 0x3F8(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F7D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinimumMovementSpeedFlying;                        // 0x3FC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FlyingMoveBlendIn;                                 // 0x400(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FlyingMoveBlendOut;                                // 0x404(0x4)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsFlying;                                         // 0x408(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseFlyingOffset;                                  // 0x409(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F82[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               FlyingOffset;                                      // 0x410(0x18)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               CurrentFlyingOffset;                               // 0x428(0x18)(Edit, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               LandedOffset;                                      // 0x440(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseAimOffset;                                     // 0x458(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F87[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AimPitch;                                          // 0x45C(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AimYaw;                                            // 0x460(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AimOffsetPitchScale;                               // 0x464(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AimOffsetYawScale;                                 // 0x468(0x4)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseBlinking;                                      // 0x46C(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F8C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BlinkBlend;                                        // 0x470(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseTurning;                                       // 0x474(0x1)(EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F90[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TurningEnabledBlendTime;                           // 0x478(0x4)(ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TurningDisabledBlendTime;                          // 0x47C(0x4)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TurningDirectionBlendTime;                         // 0x480(0x4)(Edit, ConstParm, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MinTurnRateForTurnAnimation;                       // 0x484(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsTurning;                                        // 0x488(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bTurningRight;                                     // 0x489(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseRunning;                                       // 0x48A(0x1)(ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsRunning;                                        // 0x48B(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseSleepingAnim;                                  // 0x48C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsSleeping;                                       // 0x48D(0x1)(BlueprintVisible, Parm, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         bUseFalling;                                       // 0x48E(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FB9[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FallingAnimPlayRate;                               // 0x490(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FallingBlendInTime;                                // 0x494(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FallingBlendOutTime;                               // 0x498(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsFalling;                                        // 0x49C(0x1)(Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseMounted;                                       // 0x49D(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsMounted;                                        // 0x49E(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FBC[0x1];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimInstance_DinoRootTransform* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class ShooterGame.AnimNotifyState_Custom
class UAnimNotifyState_Custom : public UAnimNotifyState
{
public:
	class FName                                  EventName;                                         // 0x30(0x8)(Edit, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bSendNotifyToWeapon;                               // 0x38(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSendNotifyToArmorSlot;                            // 0x39(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EPrimalEquipmentType              ArmorSlotToSendNotify;                             // 0x3A(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FCC[0x5];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimNotifyState_Custom* GetDefaultObj();

};

// 0x18 (0x58 - 0x40)
// Class ShooterGame.AnimNotify_CustomEvent
class UAnimNotify_CustomEvent : public UAnimNotify
{
public:
	class FName                                  EventName;                                         // 0x40(0x8)(Edit, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bSendNotifyToWeapon;                               // 0x48(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSendNotifyToBuff;                                 // 0x49(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSendNotifyToArmorSlot;                            // 0x4A(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EPrimalEquipmentType              ArmorSlotToSendNotify;                             // 0x4B(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bLockHeadPositionNormalized;                       // 0x4C(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FD9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TimeToLockHeadPosition;                            // 0x50(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUnlockHeadPositionNormalized;                     // 0x54(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FDA[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimNotify_CustomEvent* GetDefaultObj();

};

// 0x38 (0x78 - 0x40)
// Class ShooterGame.AnimNotify_PlayCameraShake
class UAnimNotify_PlayCameraShake : public UAnimNotify
{
public:
	float                                        PercentChanceToPlay;                               // 0x40(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FF2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                TheCameraShake;                                    // 0x48(0x8)(Edit, ConstParm, BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InnerRadius;                                       // 0x50(0x4)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        OuterRadius;                                       // 0x54(0x4)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        Falloff;                                           // 0x58(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bOrientShakeTowardsEpicenter;                      // 0x5C(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FF5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ShakeScale;                                        // 0x60(0x4)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FF6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                AttachName;                                        // 0x68(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UAnimNotify_PlayCameraShake* GetDefaultObj();

};

// 0x10 (0x120 - 0x110)
// Class ShooterGame.AnimNotify_PlayParticleEffectCustom
class UAnimNotify_PlayParticleEffectCustom : public UAnimNotify_PlayParticleEffect
{
public:
	class FName                                  AttachedComponentTag;                              // 0x110(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FF9[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimNotify_PlayParticleEffectCustom* GetDefaultObj();

};

// 0x10 (0x50 - 0x40)
// Class ShooterGame.AnimNotify_StopSound
class UAnimNotify_StopSound : public UAnimNotify
{
public:
	class USoundBase*                            SoundToStop;                                       // 0x40(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        FadeOutTime;                                       // 0x48(0x4)(ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1FFA[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimNotify_StopSound* GetDefaultObj();

};

// 0x98 (0xC0 - 0x28)
// Class ShooterGame.AntiDupeTransactionLog
class UAntiDupeTransactionLog : public UObject
{
public:
	class UWorld*                                CurrentWorld;                                      // 0x28(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FFB[0x90];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAntiDupeTransactionLog* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class ShooterGame.ArkCloudInventoryData
class UArkCloudInventoryData : public UObject
{
public:
	struct FArkInventoryData                     MyArkData;                                         // 0x28(0x30)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UArkCloudInventoryData* GetDefaultObj();

};

// 0x48 (0x310 - 0x2C8)
// Class ShooterGame.AtlasWaterOverlapComponent
class UAtlasWaterOverlapComponent : public USceneComponent
{
public:
	FMulticastInlineDelegateProperty_            OnComponentEnterWater;                             // 0x2C8(0x10)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnComponentExitWater;                              // 0x2D8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2012[0x28];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAtlasWaterOverlapComponent* GetDefaultObj();

};

// 0x18 (0x4D8 - 0x4C0)
// Class ShooterGame.BaseBoxTrigger
class ABaseBoxTrigger : public AActor
{
public:
	class USceneComponent*                       SceneComp;                                         // 0x4C0(0x8)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UBoxComponent*                         TriggerBox;                                        // 0x4C8(0x8)(Edit, Net, Parm, ZeroConstructor, DisableEditOnInstance, GlobalConfig)
	uint8                                        bUseBPOnTriggerBeginOverlap : 1;                   // Mask: 0x1, PropSize: 0x10x4D0(0x1)(ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnTriggerEndOverlap : 1;                     // Mask: 0x2, PropSize: 0x10x4D0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_203F[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ABaseBoxTrigger* GetDefaultObj();

	int32 OnTriggerEndOverlap();
	struct FHitResult OnTriggerBeginOverlap();
	bool IsCharacterTouchingTrigger(class APrimalCharacter* Character);
	TArray<class APrimalCharacter*> GetAllCharactersTouchingTrigger();
	int32 BPOnTriggerEndOverlap();
	struct FHitResult BPOnTriggerBeginOverlap();
};

// 0x40 (0xB38 - 0xAF8)
// Class ShooterGame.BasePlayerController
class ABasePlayerController : public APrimalPlayerController
{
public:
	uint8                                        Pad_2057[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	class UUI_CustomOverlay*                     CustomCursor;                                      // 0xB20(0x8)(BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2059[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsGamepadActive;                                  // 0xB30(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_205A[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ABasePlayerController* GetDefaultObj();

	void SimulateInputKey(const struct FKey& Key, bool bPressed);
	class FString ServerCheat();
	class FString Say();
	void ClientStartOnlineGame();
	void ClientSetSpectatorCamera(const struct FVector& CameraLocation, const struct FRotator& CameraRotation);
	bool ClientSendRoundEndEvent(int32 ExpendedTimeInSeconds);
	void ClientGameStarted();
	void ClientEndOnlineGame();
};

// 0x10 (0x330 - 0x320)
// Class ShooterGame.PrimalUserWidget
class UPrimalUserWidget : public UUserWidget
{
public:
	uint8                                        Pad_207D[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ViewportZOrder;                                    // 0x328(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	float                                        DPIScaler;                                         // 0x32C(0x4)(ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalUserWidget* GetDefaultObj();

	void WidgetRemovedFromViewport();
	void WidgetAddedToViewport();
	void StopAnimationByString(class FString* Name);
	int32 SetZOrderInViewport();
	bool PlayAnimationByString(class FString* Name);
	void OnWidgetGamepadActiveChangedBP(bool* bIsGamepadActive);
	class FString NumCharactersThatFit(class FString* TheString, float* WidthThreshold, class UFont** TheFont);
	bool HandleVirtualBack();
	bool HandleKeyUp(struct FKey* TheKey);
	class UWidget* GetOverrideHighligteableWidgetBP();
	void ExecuteCommandForPrimalUI(class FName* CommandName, struct FBPNetExecParams* ExecParams);
	void BPExecutedCommandForPrimalUI(class FName* CommandName, struct FBPNetExecParams* ExecParams);
};

// 0x428 (0x758 - 0x330)
// Class ShooterGame.PrimalUI
class UPrimalUI : public UPrimalUserWidget
{
public:
	uint8                                        Pad_217F[0x4C];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bCaptureMouseInput;                                // 0x37C(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreventGamepadDpadNavegation;                     // 0x37D(0x1)(ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceVirtualCursorEnabled;                        // 0x37E(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsClosing;                                        // 0x37F(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bWantsPrimalItemNotifications;                     // 0x380(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2183[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DefaultToolTipWidget;                              // 0x388(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bEscapeClosesMenu;                                 // 0x390(0x1)(Edit, ExportObject, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bEscapeOpensPauseMenu;                             // 0x391(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSpecialRightOpensPauseMenu;                       // 0x392(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bMenuSupportSlomo;                                 // 0x393(0x1)(BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bClickClosesMenu;                                  // 0x394(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsGameplayUI;                                     // 0x395(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsTopUI;                                          // 0x396(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EHighlightStartingPoint           HighlightStartPointType;                           // 0x397(0x1)(Edit, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ConfirmationDialogUITemplate;                      // 0x398(0x8)(ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                XBoxFooterUITemplate;                              // 0x3A0(0x8)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShowCancelIcon;                                   // 0x3A8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShowAcceptIcon;                                   // 0x3A9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShowLStickIcon;                                   // 0x3AA(0x1)(BlueprintVisible, ExportObject, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShowRStickIcon;                                   // 0x3AB(0x1)(Edit, ConstParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShowBumpersIcon;                                  // 0x3AC(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShowStartBtnIcon;                                 // 0x3AD(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShowLTBtnIcon;                                    // 0x3AE(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShowRTBtnIcon;                                    // 0x3AF(0x1)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShowFaceBtnLeftIcon;                              // 0x3B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShowFaceBtnTopIcon;                               // 0x3B1(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShowFaceBtnRightIcon;                             // 0x3B2(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShowFaceBtnBottomIcon;                            // 0x3B3(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShowLeftShoulderBtnIcon;                          // 0x3B4(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShowXBoxFooter;                                   // 0x3B5(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreUIScaling;                                  // 0x3B6(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCloseOnPlayerDie;                                 // 0x3B7(0x1)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SplitscreenDPIScaler;                              // 0x3B8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceFullscreenVirtualCursor;                     // 0x3BC(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bConstrainVirtualCursor;                           // 0x3BD(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDoExtraDataListButtonPanelFilteringChecks;        // 0x3BE(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_218F[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  DefaultHighlightWidgetOverrideName;                // 0x3C0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShouldValidateInputOnRemove;                      // 0x3C8(0x1)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ShouldStretchMainScreenWhenHandheld;               // 0x3C9(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         WasInHandheldMode;                                 // 0x3CA(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2190[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	struct FAnchors                              OriginalUnStretchedAnchors;                        // 0x3D0(0x20)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FMargin                               OriginalUnstretchedSize;                           // 0x3F0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             OriginalSizeBoxUnstretchedSize;                    // 0x400(0x10)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FAnchors                              StretchedHandheldAnchors;                          // 0x410(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FMargin                               StretchedHandheldSize;                             // 0x430(0x10)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             SizeBoxHandheldSize;                               // 0x440(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAutoProcessSplitscreenScaling;                    // 0x450(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2195[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        VirtualCursorFrames;                               // 0x454(0x4)(Edit, ConstParm, Net, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2196[0x48];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        AnalogDeltaX;                                      // 0x4A0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AnalogDeltaY;                                      // 0x4A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2197[0x1C0];                                   // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            HTTPGetResponseEvent;                              // 0x668(0x10)(ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalStructureItemContainer> ItemContainer;                                     // 0x678(0x8)(ConstParm, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCachedIsGamepadActive;                            // 0x680(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_219A[0xD3];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         OverrideButtonSounds;                              // 0x754(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_219B[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalUI* GetDefaultObj();

	bool UsingProController(bool DebugOut);
	class UUI_GenericConfirmationDialog* ShowDLCConfirmationDialog(enum class EDLCSelector DLC);
	void ShowConfirmationDialogBP(const class FString& TitleText, class FString* MessageText, bool IsJustOKBox);
	void SetInputMode();
	void SetHighlightedWidget(class UWidget* Widget, bool bSetLastHighlightedPosition);
	void ResetAllScrollBars();
	void RemovedFromViewport();
	bool ProcessSplitscreen();
	class UWorld* PlayHapticEffect(enum class EHapticEffectType Type, struct FVector* Location);
	void OpenTheStoreDLCPage(const class FString& TheDLCName);
	struct FEventReply OnMouseButtonDownEvent(struct FGeometry* MyGeometry, struct FPointerEvent* MouseEvent);
	struct FEventReply OnKeyUpEvent(struct FGeometry* MyGeometry, struct FKeyEvent* InKeyboardEvent);
	struct FEventReply OnKeyDownEvent(struct FGeometry* MyGeometry, struct FKeyEvent* InKeyboardEvent);
	struct FEventReply OnGamepadButtonDownEvent(struct FGeometry* MyGeometry, const struct FControllerEvent& ControllerEvent);
	void OnGamepadActiveChangedBP(bool* bIsGamepadActive);
	void OnGamepadActiveChanged(bool* bIsGamepadActive);
	void OnDLCConfirmationDialogClosed(bool* bAccept);
	void OnCreateCredits(class UWidget* Widget);
	void OnConfirmationDialogClosedBP(bool* bAccept);
	void OnConfirmationDialogClosed(bool* bAccept);
	void MainMenuEscapePressed();
	bool IsRightTriggerDown();
	bool IsLeftTriggerDown();
	void HTTPGetString(const class FString& InURL);
	void HandleDockedModeChanges();
	class UWidget* GetWidgetToScaleForHandheld();
	class USizeBox* GetSizeboxForExtraHandheldScaling();
	class AShooterHUD* GetShooterHud();
	class AShooterPlayerState* GetPlayerState();
	class AShooterPlayerController* GetPC();
	class APrimalCharacter* GetPawn();
	class UComboBoxString* GetOpenComboBox();
	void FixHighlights();
	void DoExtraScalingForSplitscreen(const struct FVector2D& PlayerSize);
	void CloseWithAnimation();
	void ClickedSecondaryButton(class UWidget** ClickedWidget);
	void ClickedButton(class UWidget** ClickedWidget);
	void CheckGamepadActiveChanged(bool* bIsGamepadActive);
	bool ChangeChildrenTextColorBP(class UPanelWidget** Parent);
	void BPVirtualCursorinit();
	void BPReleasedVirtualAccept();
	int32 BPProcessSplitscreenAndAddToViewport();
	bool BPHighlightWidgetOnStart();
	void BPHandleDockedModeChange(bool bIsDocked);
	float BPGameTick(struct FGeometry* MyGeometry);
	bool BPGamepadReleased(struct FKey* TheKey);
	bool BPEscapeClosed();
	bool BPCycleHighlighted();
	void BPControlHighlighted(enum class EControlDirection Dir, struct FKey* TheKey, float AnalogValue);
	void AddedToViewport();
};

// 0x0 (0x758 - 0x758)
// Class ShooterGame.BaseSelectableButtonWidget
class UBaseSelectableButtonWidget : public UPrimalUI
{
public:

	static class UClass* StaticClass();
	static class UBaseSelectableButtonWidget* GetDefaultObj();

	bool BPSetSelected();
	bool BPIsSelected();
	class UCustomButtonWidget* BPGetButton();
};

// 0x8B8 (0xE60 - 0x5A8)
// Class ShooterGame.ShooterGameState
class AShooterGameState : public AGameState
{
public:
	uint8                                        Pad_226F[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        NumNPC;                                            // 0x5B8(0x4)(BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NumHibernatedNPC;                                  // 0x5BC(0x4)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NPCActiveCountTamed;                               // 0x5C0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NumActiveNPC;                                      // 0x5C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NumDeadNPC;                                        // 0x5C8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NumPlayerActors;                                   // 0x5CC(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NumPlayerConnected;                                // 0x5D0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bServerUseLocalizedChat;                           // 0x5D4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2271[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LocalizedChatRadius;                               // 0x5D8(0x4)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LocalizedChatRadiusUnconsiousScale;                // 0x5DC(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ServerFramerate;                                   // 0x5E0(0x4)(Edit, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2273[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                NewStructureDestructionTag;                        // 0x5E8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        DayNumber;                                         // 0x5F8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	float                                        DayTime;                                           // 0x5FC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	double                                       NetworkTime;                                       // 0x600(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint32                                       TimeUTC;                                           // 0x608(0x4)(ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NetUTC;                                            // 0x60C(0x4)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsOfficialServer;                                 // 0x610(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsListenServer;                                   // 0x611(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsDediServer;                                     // 0x612(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsServerRunningOnConsole;                         // 0x613(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsArkTributeAvailable;                            // 0x614(0x1)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsArkDownloadsAllowed;                            // 0x615(0x1)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowThirdPersonPlayer;                           // 0x616(0x1)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bServerHardcore;                                   // 0x617(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bServerPVE;                                        // 0x618(0x1)(Edit, ExportObject, Net, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAutoPvE;                                          // 0x619(0x1)(BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bServerCrosshair;                                  // 0x61A(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bServerForceNoHUD;                                 // 0x61B(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bFlyerPlatformAllowUnalignedDinoBasing;            // 0x61C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bMapPlayerLocation;                                // 0x61D(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPvEDisableFriendlyFire;                           // 0x61E(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPvEAllowTribeWar;                                 // 0x61F(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPvEAllowTribeWarCancel;                           // 0x620(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bEnablePvPGamma;                                   // 0x621(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreventDroppedItemPhysics;                        // 0x622(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisablePvEGamma;                                  // 0x623(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NumTamedDinos;                                     // 0x624(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxStructuresInRange;                              // 0x628(0x4)(BlueprintVisible, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DayCycleSpeedScale;                                // 0x62C(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        DayTimeSpeedScale;                                 // 0x630(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        NightTimeSpeedScale;                               // 0x634(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, SubobjectReference)
	int32                                        StartTimeHour;                                     // 0x638(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PvEStructureDecayPeriodMultiplier;                 // 0x63C(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        PvEDinoDecayPeriodMultiplier;                      // 0x640(0x4)(BlueprintReadOnly, Parm, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PerPlatformMaxStructuresMultiplier;                // 0x644(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ImplantSuicideCD;                                  // 0x648(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableStructureDecayPvE;                         // 0x64C(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableDinoDecayPvE;                              // 0x64D(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowCaveBuildingPvE;                             // 0x64E(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowCaveBuildingPvP;                             // 0x64F(0x1)(BlueprintVisible, EditFixedSize, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreventDownloadSurvivors;                         // 0x650(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bReachedPlatformStructureLimit;                    // 0x651(0x1)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAdminLogging;                                     // 0x652(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPvPStructureDecay;                                // 0x653(0x1)(BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreventDownloadDinos;                             // 0x654(0x1)(ExportObject, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreventDownloadItems;                             // 0x655(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreventUploadDinos;                               // 0x656(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreventUploadItems;                               // 0x657(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreventUploadSurvivors;                           // 0x658(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreventMateBoost;                                 // 0x659(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreventStructurePainting;                         // 0x65A(0x1)(Edit, EditFixedSize, Parm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowCharacterCreation;                           // 0x65B(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowSpawnPointSelection;                         // 0x65C(0x1)(ConstParm, BlueprintVisible, Net, Parm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2281[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxTamedDinos;                                     // 0x660(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableSpawnAnimations;                           // 0x664(0x1)(Edit, BlueprintReadOnly, Parm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2282[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                PlayerListString;                                  // 0x668(0x10)(ExportObject, Parm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnPlayerListPopulated;                             // 0x678(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GlobalSpoilingTimeMultiplier;                      // 0x688(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GlobalItemDecompositionTimeMultiplier;             // 0x68C(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxNumberOfPlayersInTribe;                         // 0x690(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TribeSlotReuseCooldown;                            // 0x694(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GlobalCorpseDecompositionTimeMultiplier;           // 0x698(0x4)(ConstParm, ExportObject, Net, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        EggHatchSpeedMultiplier;                           // 0x69C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ActiveEvent;                                       // 0x6A0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAllowPaintingWithoutResources;                    // 0x6A8(0x1)(Edit, BlueprintVisible, ExportObject, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bEnableExtraStructurePreventionVolumes;            // 0x6A9(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2287[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FItemCraftingCostOverride>     OverrideItemCraftingCosts;                         // 0x6B0(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FItemMaxItemQuantityOverride>  OverrideItemMaxQuantity;                           // 0x6C0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         DisableRailgunPVP;                                 // 0x6D0(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2289[0xA7];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       PrivateNetworkTime;                                // 0x778(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	double                                       LastServerSaveTime;                                // 0x780(0x8)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ServerSaveInterval;                                // 0x788(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TribeNameChangeCooldown;                           // 0x78C(0x4)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PlatformSaddleBuildAreaBoundsMultiplier;           // 0x790(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAlwaysAllowStructurePickup;                       // 0x794(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_228C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        StructurePickupTimeAfterPlacement;                 // 0x798(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        StructurePickupHoldDuration;                       // 0x79C(0x4)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowHideDamageSourceFromLogs;                    // 0x7A0(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_228D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FClassMultiplier>              DinoClassSpeedMultipliers;                         // 0x7A8(0x10)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FClassMultiplier>              TamedDinoClassSpeedMultipliers;                    // 0x7B8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bRiderDinoCollision;                               // 0x7C8(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_228E[0x1F];                                    // Fixing Size After Last Property  > TateDumper <
	class UAudioComponent*                       DynamicMusicAudioComponent;                        // 0x7E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UAudioComponent*                       DynamicMusicAudioComponent2;                       // 0x7F0(0x8)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2291[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FLevelExperienceRamp>          LevelExperienceRampOverrides;                      // 0x808(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FEngramEntryOverride>          OverrideEngramEntries;                             // 0x818(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                CustomGameUITemplate;                              // 0x828(0x8)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class FString>                        PreventDinoTameClassNames;                         // 0x830(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ListenServerTetherDistanceMultiplier;              // 0x840(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2292[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                PGMapName;                                         // 0x848(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<int32>                                SupportedSpawnRegions;                             // 0x858(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UPaintingCache*                        PaintingCache;                                     // 0x868(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, GlobalConfig)
	class USoundBase*                            StaticOverrideMusic;                               // 0x870(0x8)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bEnableDeathTeamSpectator;                         // 0x878(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2295[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               PlayerFloatingHUDOffset;                           // 0x880(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PlayerFloatingHUDOffsetScreenY;                    // 0x898(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        StructureDamageRepairCooldown;                     // 0x89C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceAllStructureLocking;                         // 0x8A0(0x1)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowCustomRecipes;                               // 0x8A1(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowRaidDinoFeeding;                             // 0x8A2(0x1)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2296[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CustomRecipeEffectivenessMultiplier;               // 0x8A4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CustomRecipeSkillMultiplier;                       // 0x8A8(0x4)(ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2297[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            OverrideAreaMusic;                                 // 0x8B0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               OverrideAreaMusicPosition;                         // 0x8B8(0x18)(BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OverrideAreaMusicRange;                            // 0x8D0(0x4)(BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowUnclaimDinos;                                // 0x8D4(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2298[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FloatingHUDRange;                                  // 0x8D8(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FloatingChatRange;                                 // 0x8DC(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ExtinctionEventTimeInterval;                       // 0x8E0(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RTSModeNumSelectableDinosScale;                    // 0x8E4(0x4)(ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RTSMaxRangeFromPlayerCharacterScale;               // 0x8E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ExtinctionEventPercent;                            // 0x8EC(0x4)(Edit, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ExtinctionEventSecondsRemaining;                   // 0x8F0(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDoExtinctionEvent;                                // 0x8F4(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_229B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        DestroyTamesOverLevelClamp;                        // 0x8F8(0x4)(Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_229C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FInventoryComponentDefaultItemsAppend> InventoryComponentAppends;                         // 0x900(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreventOfflinePvP;                                // 0x910(0x1)(ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPvPDinoDecay;                                     // 0x911(0x1)(Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowUnclaimDinosConfig;                          // 0x912(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceUseInventoryAppends;                         // 0x913(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOverideStructurePlatformPrevention;               // 0x914(0x1)(ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_229E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ItemStackSizeMultiplier;                           // 0x918(0x4)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_229F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                PreventOfflinePvPLiveTeams;                        // 0x920(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<int32>                                PreventOfflinePvPExpiringTeams;                    // 0x930(0x10)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<float>                                PreventOfflinePvPExpiringTimes;                    // 0x940(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22A0[0xA0];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bAllowAnyoneBabyImprintCuddle;                     // 0x9F0(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableImprintDinoBuff;                           // 0x9F1(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22A1[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxPersonalTamedDinos;                             // 0x9F4(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22A2[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class FString                                ClusterId;                                         // 0xA10(0x10)(ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22A3[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	class FString                                ServerSessionName;                                 // 0xA50(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreventTribeAlliances;                            // 0xA60(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22A4[0x19];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bServerUseDinoList;                                // 0xA7A(0x1)(ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPvEAllowStructuresAtSupplyDrops;                  // 0xA7B(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowForceNetUpdate;                              // 0xA7C(0x1)(BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22A6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinimumDinoReuploadInterval;                       // 0xA80(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HairGrowthSpeedMultiplier;                         // 0xA84(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DinoHairGrowthSpeedMultiplier;                     // 0xA88(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FastDecayInterval;                                 // 0xA8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                CachedSessionOwnerId;                              // 0xA90(0x10)(ConstParm, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OxygenSwimSpeedStatMultiplier;                     // 0xAA0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22A8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnHTTPGetResponse;                                 // 0xAA8(0x10)(BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnHTTPPostResponse;                                // 0xAB8(0x10)(ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowMultipleAttachedC4;                          // 0xAC8(0x1)(Edit, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCrossARKAllowForeignDinoDownloads;                // 0xAC9(0x1)(Edit, ConstParm, BlueprintVisible, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22A9[0x16];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bUseCorpseLocator;                                 // 0xAE0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bEnablePlayerMoveThroughSleeping;                  // 0xAE1(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bEnablePlayerMoveThroughAlly;                      // 0xAE2(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableStructurePlacementCollision;               // 0xAE3(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseSingleplayerSettings;                          // 0xAE4(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowPlatformSaddleMultiFloors;                   // 0xAE5(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreventSpawnAnimations;                           // 0xAE6(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22AC[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxAlliancesPerTribe;                              // 0xAE8(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxTribesPerAlliance;                              // 0xAEC(0x4)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsLegacyServer;                                   // 0xAF0(0x1)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableDinoDecayClaiming;                         // 0xAF1(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22AE[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        bEnableServerDestroyTamesAboveSoftTameLimit;       // 0xAF4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxTamedDinos_SoftTameLimit_CountdownForDeletionDuration; // 0xAF8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxTamedDinos_SoftTameLimit_NumTamedDinos_UnderLimit; // 0xAFC(0x4)(Edit, ConstParm, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxTamedDinos_SoftTameLimit_NumTamedDinos_OverLimit; // 0xB00(0x4)(ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         MaxTamedDinos_SoftTameLimit_HasDoneInitialSearch;  // 0xB04(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22B1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  UseStructurePreventionVolumeTag;                   // 0xB08(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxStructuresInSmallRadius;                        // 0xB10(0x4)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RadiusStructuresInSmallRadius;                     // 0xB14(0x4)(EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseTameLimitForStructuresOnly;                    // 0xB18(0x1)(BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCrafting;                          // 0xB19(0x1)(Edit, ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCraftingForDinos;                  // 0xB1A(0x1)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCraftingForPlayers;                // 0xB1B(0x1)(Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCraftingForStructures;             // 0xB1C(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22B4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        WirelessCraftingRangeOverride;                     // 0xB20(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22B5[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bLimitTurretsInRange;                              // 0xB30(0x1)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22B8[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LimitTurretsRange;                                 // 0xB34(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        LimitTurretsNum;                                   // 0xB38(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        LimitGeneratorsNum;                                // 0xB3C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LimitGeneratorsRange;                              // 0xB40(0x4)(Edit, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        CropPlotStackLimit;                                // 0xB44(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisablePhotoMode;                                 // 0xB48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableTekLegsBoost;                              // 0xB49(0x1)(ConstParm, ExportObject, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22BC[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PhotoModeRangeLimit;                               // 0xB4C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceAllowAllStructures;                          // 0xB50(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShowCreativeMode;                                 // 0xB51(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22BF[0x26];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        PassiveTameIntervalMultiplier;                     // 0xB78(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22C1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        UniqueDinos;                                       // 0xB80(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class FName>                          ActiveMissionTags;                                 // 0xB90(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint32                                       MinimumUniqueDownloadInterval;                     // 0xBA0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint32                                       MaximumUniqueDownloadInterval;                     // 0xBA4(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreStructuresPreventionVolumes;                // 0xBA8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreventOutOfTribePinCodeUse;                      // 0xBA9(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22C2[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDinoDownloadData>             UniqueDownloads;                                   // 0xBB0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FDataSet>                      GameDataSets;                                      // 0xBC0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UPrimalWorldSettingsEventOverrides*    ActiveEventOverrides;                              // 0xBD0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreLimitMaxStructuresInRangeTypeFlag;          // 0xBD8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22C3[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FMassTeleportData>             MassTeleportQueue;                                 // 0xBE0(0x10)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22C4[0x70];                                    // Fixing Size After Last Property  > TateDumper <
	TMap<class FName, class UDataLayerInstance*> DataLayerMap;                                      // 0xC60(0x50)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowLowGravitySpin;                              // 0xCB0(0x1)(Edit, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22C5[0x17];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnDinoDownloaded;                                  // 0xCC8(0x10)(ExportObject, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnDinoUploaded;                                    // 0xCD8(0x10)(Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FWorldBuffPersistantData>      WorldBuffPersistantDatas;                          // 0xCE8(0x10)(Edit, ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TurretCopySettingsCooldown;                        // 0xCF8(0x4)(Edit, BlueprintVisible, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BaseHexagonRewardMultiplier;                       // 0xCFC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HexagonRewardMultiplier;                           // 0xD00(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HexagonCostMultiplier;                             // 0xD04(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableHexagonStore;                              // 0xD08(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bHexStoreAllowOnlyEngramTradeOption;               // 0xD09(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowSpeedLeveling;                               // 0xD0A(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowFlyerSpeedLeveling;                          // 0xD0B(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22CB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        PreventBreedingForClassNames;                      // 0xD10(0x10)(ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        LiveTuningReplicatedChunkSize;                     // 0xD20(0x4)(ExportObject, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22CC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        LiveTuningOverloadChunks;                          // 0xD28(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22CE[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        PreventTransferForClassNames;                      // 0xD40(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        EnvironmentIndex;                                  // 0xD50(0x4)(Edit, ConstParm, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NextEnvironmentIndex;                              // 0xD54(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                FloatingPlatformProfileNameColor;                  // 0xD58(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                FloatingNameColor;                                 // 0xD5C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	double                                       NextMutagenTime;                                   // 0xD60(0x8)(BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        OverrideMaxExperiencePointsPlayer;                 // 0xD68(0x4)(ConstParm, Net, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        OverrideMaxExperiencePointsDino;                   // 0xD6C(0x4)(Edit, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<int32>                                DeferredExplorerNoteUnlockQueue;                   // 0xD70(0x10)(DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableCustomFoldersInTributeInventories;         // 0xD80(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22D0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TWeakObjectPtr<class AActor>>         ForcedRelevantPOIActors;                           // 0xD88(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableRailgunPVP;                                // 0xD98(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22D1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinimumTimebetweeninventoryRetrieval;              // 0xD9C(0x4)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        WildFollowerSpawnChanceMultiplier;                 // 0xDA0(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        WildFollowerSpawnCountMultiplier;                  // 0xDA4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableDinoItemBlacklist;                         // 0xDA8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowCryoFridgeOnSaddle;                          // 0xDA9(0x1)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22D2[0x56];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       RealtimeThrottledTickTimeAmount;                   // 0xE00(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22D3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bCharacterPaintingOnlySameTeam : 1;                // Mask: 0x1, PropSize: 0x10xE0C(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_130 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_22D4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FNetChangeDefaultPropertyValue> CurrentDefaultPropertyValueUpdates;                // 0xE10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22D6[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<int64>                                WhiteListedCustomCosmeticModSkins;                 // 0xE38(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22D7[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterGameState* GetDefaultObj();

	bool StartMassTeleport(class UClass* BuffToApply, bool bMaintainRotation);
	bool ShouldMassTeleportMoveActor(class AActor** ForActor);
	int32 SetNextEnvironmentIndex();
	int32 SetEnvironmentIndex();
	class AActor* RemoveRelevantPOIActor();
	int32 QueueExplorerNoteForDeferredUnlock();
	class APrimalCharacter* PrintCDODebugForChar();
	class APrimalCharacter* PrintCDODebug(struct FCDODebugData* CDODebugData);
	struct FMassTeleportData PrepareActorForMassTeleport();
	void OnRep_SupportedSpawnRegions();
	void OnRep_ReplicateLocalizedChatRadius();
	void OnRep_ReplicateLiveTuningOverloadChunks();
	void OnRep_CurrentDefaultPropertyValueUpdates();
	void OnRep_CosmeticWhitelist();
	class UClass* OnNewClassInitialized();
	bool OnHUDNotification();
	TArray<int32> NetUpdateOfflinePvPLiveTeams();
	TArray<float> NetUpdateOfflinePvPExpiringTeams();
	struct FVector NetSpawnFoliageVFXActorAtLocationAndDoFoliageInteraction(class UClass** AnActorClass, struct FRotator_NetQuantize* AtRotation, int32* DataIndex);
	int32 NetAddFloatingText(float FadeOutTime);
	int32 NetAddFloatingDamageText(int32* DamageAmount);
	struct FRotator Multi_SpawnCosmeticActor();
	void LoadedWorld();
	bool IsValidMassTeleportData();
	bool IsUniqueDinoAlreadySpawned(TSoftClassPtr<class APrimalDinoCharacter>* UniqueDino);
	bool IsTeamIDInvincible(int32* TargetingTeamID);
	bool IsMassTeleportInProgress();
	bool IsEngramClassHidden();
	void HTTPPostRequest(const class FString& InURL, class FString* Content);
	void HTTPGetRequest(const class FString& InURL);
	void HandleInitializedGameState();
	int32 GetStartTimeHour();
	float GetOfflineDamagePreventionTime(int32* TargetingTeamID);
	double GetNetworkTimeDelta();
	bool GetItemMaxQuantityOverride();
	TArray<struct FGameIniData> GetIniArray();
	enum class EGamePhase GetGamePhase();
	class FString GetDayTimeString();
	float GetDayCycleSpeed();
	class FString GetCleanServerSessionName();
	bool ForceStartMatch();
	void DisplayWelcomeUI();
	bool CDOGetPrintStringForObjectProperty(class FName PropertyName);
	bool CDOGetPrintStringForObjectProperties(TArray<class FName>* PropertyNames);
	bool CancelMassTeleport();
	void BPPreGameplaySetup();
	bool BPNetSpawnActorAtLocation(class UClass** AnActorClass, struct FRotator* AtRotation, int32* DataIndex);
	class AShooterHUD* BPDrawGameStateHUD();
	class APrimalBuff* BaseSpawnBuffAndAttachToCharacter(class APrimalCharacter* PrimalCharacter);
	struct FVector2D BaseProjectWorldToScreenPosition();
	bool BaseIsTribeID();
	class ACustomActorList* BaseGetCustomActors();
	TArray<class AShooterPlayerController*> BaseGetAllShooterControllers();
	TArray<class AShooterCharacter*> BaseGetAllShooterCharactersOfTeam(int32* KillerTeam);
	TArray<class AShooterCharacter*> BaseGetAllShooterCharacters();
	TArray<class APrimalDinoCharacter*> BaseGetAllDinoCharactersOfTeam(int32* KillerTeam);
	struct FColor BaseDrawTileOnCanvas(float* U, float* V, float UL, float VL);
	bool AllowDownloadDino();
	bool AllowDinoTame(class AShooterPlayerController** ForPC);
	bool AllowDinoClassTame(class AShooterPlayerController** ForPC);
	int32 AddTokens();
	class AActor* AddRelevantPOIActor();
	float AddFloatingText(float FadeOutTime);
};

// 0x0 (0xE60 - 0xE60)
// Class ShooterGame.BattleGameState
class ABattleGameState : public AShooterGameState
{
public:

	static class UClass* StaticClass();
	static class ABattleGameState* GetDefaultObj();

};

// 0xE0 (0x770 - 0x690)
// Class ShooterGame.BeamWeaponComponent
class UBeamWeaponComponent : public UPrimitiveComponent
{
public:
	class UParticleSystem*                       ParticleSystemTemplate;                            // 0x690(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UParticleSystem*                       ChargeupParticleSystemTemplate;                    // 0x698(0x8)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UParticleSystem*                       BurstWhenFiredSystemTemplate;                      // 0x6A0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UParticleSystem*                       ImpactSystemTemplate;                              // 0x6A8(0x8)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Duration;                                          // 0x6B0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	float                                        DamageRadius;                                      // 0x6B4(0x4)(ConstParm, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                DamageType;                                        // 0x6B8(0x8)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig)
	float                                        DamageDelay;                                       // 0x6C0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BaseDamage;                                        // 0x6C4(0x4)(Edit, ExportObject, EditFixedSize, Parm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        Length;                                            // 0x6C8(0x4)(ConstParm, BlueprintVisible, Net, ReturnParm)
	bool                                         IsPenetrating;                                     // 0x6CC(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22F1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TargetTrackingSpeed;                               // 0x6D0(0x4)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         UseOwnerForward;                                   // 0x6D4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22F2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Offset;                                            // 0x6D8(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	float                                        ChargeupTime;                                      // 0x6DC(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         WhenChargingWaitForCallToFire;                     // 0x6E0(0x1)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         DeactivateChargeupOnFiring;                        // 0x6E1(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22F4[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            BeamStoppedFiringEvent;                            // 0x6E8(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AActor>                 BeamTarget;                                        // 0x6F8(0x8)(ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              ParticleComp;                                      // 0x700(0x8)(Edit, Net, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              ChargeUpComp;                                      // 0x708(0x8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              ImpactComp;                                        // 0x710(0x8)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22F5[0x58];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UBeamWeaponComponent* GetDefaultObj();

	void UpdateBeamVisuals();
	void StopFiring();
	void StartFiring();
	void StartCharging();
	class AActor* SetTarget();
	class AActor* GetTarget();
	class UParticleSystemComponent* GetParticleSystem();
	double GetLastStoppedFiringTime();
	bool GetIsFiring();
	bool GetIsCharging();
	class UParticleSystemComponent* GetImpactParticleSystem();
	class UParticleSystemComponent* GetChargeupParticleSystem();
	struct FVector GetBeamEndLocation();
};

// 0x30 (0xE8 - 0xB8)
// Class ShooterGame.BeamWeaponController
class UBeamWeaponController : public UActorComponent
{
public:
	TArray<struct FComponentReference>           BeamWeapons;                                       // 0xB8(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            BeamStoppedFiringEvent;                            // 0xC8(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            BeamsStoppedFiringEvent;                           // 0xD8(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UBeamWeaponController* GetDefaultObj();

	void StopFiringBeams();
	bool StartChargingBeams();
	bool StartChargingBeam();
	void OnBeamStoppedFiringHandler(class UBeamWeaponComponent** BeamWeaponComp);
	TArray<class UBeamWeaponComponent*> GetBeamWeaponComponents();
	bool FireBeams();
	bool FireBeam();
};

// 0x10 (0x768 - 0x758)
// Class ShooterGame.BinocularsWidgetUI
class UBinocularsWidgetUI : public UPrimalUI
{
public:
	class FName                                  GamepadUnlockButtonName;                           // 0x758(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2310[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UBinocularsWidgetUI* GetDefaultObj();

	class UClass* GetDinoParentClass(class APrimalCharacter** Char);
	bool GetCharUsesStat(class APrimalCharacter** Char, enum class EPrimalCharacterStatusValue* ValueType);
	float GetCharTorpidMaxStatus(class APrimalCharacter** Char);
	float GetCharTorpidCurrentStatus(class APrimalCharacter** Char);
	class FString GetCharNumStatPointsString(class APrimalCharacter** Char, enum class EPrimalCharacterStatusValue* ValueType);
	float GetCharHealthMaxStatus(class APrimalCharacter** Char);
	float GetCharHealthCurrentStatus(class APrimalCharacter** Char);
};

// 0x90 (0x550 - 0x4C0)
// Class ShooterGame.BiomeZoneSettings
class ABiomeZoneSettings : public AActor
{
public:
	class FString                                BiomeZoneName;                                     // 0x4C0(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FinalTemperatureMultiplier;                        // 0x4D0(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FinalTemperatureExponent;                          // 0x4D4(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FinalTemperatureAddition;                          // 0x4D8(0x4)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreOffsetTemperatureMultiplier;                    // 0x4DC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreOffsetTemperatureExponent;                      // 0x4E0(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreOffsetTemperatureAddition;                      // 0x4E4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AboveTemperatureOffsetThreshold;                   // 0x4E8(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AboveTemperatureOffsetMultiplier;                  // 0x4EC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AboveTemperatureOffsetExponent;                    // 0x4F0(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BelowTemperatureOffsetThreshold;                   // 0x4F4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BelowTemperatureOffsetMultiplier;                  // 0x4F8(0x4)(ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BelowTemperatureOffsetExponent;                    // 0x4FC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AbsoluteTemperatureOverride;                       // 0x500(0x4)(Edit, ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPreventCrops : 1;                                 // Mask: 0x1, PropSize: 0x10x504(0x1)(Edit, ConstParm, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_134 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_231B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        EggRangeMaximumNumberOverride;                     // 0x508(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        EggMaximumNumberOverride;                          // 0x50C(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        EggChanceToSpawnOverride;                          // 0x510(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        EggIntervalUnstasisChanceToSpawnOverride;          // 0x514(0x4)(BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        OverrideEggLimitsDinoClasses;                      // 0x518(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        BiomeZonePriority;                                 // 0x528(0x4)(Edit, ConstParm, ExportObject, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxMultiplier;                                     // 0x52C(0x4)(Edit, ConstParm, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicDay;                            // 0x530(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicNight;                          // 0x538(0x8)(ConstParm, ExportObject, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicDay_Heavy;                      // 0x540(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicNight_Heavy;                    // 0x548(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ABiomeZoneSettings* GetDefaultObj();

};

// 0x1B8 (0x6C8 - 0x510)
// Class ShooterGame.BiomeZoneVolume
class ABiomeZoneVolume : public AVolume
{
public:
	class FString                                BiomeZoneName;                                     // 0x510(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EBiomeZone                        BiomeZone;                                         // 0x520(0x1)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2345[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FinalTemperatureMultiplier;                        // 0x524(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FinalTemperatureExponent;                          // 0x528(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FinalTemperatureAddition;                          // 0x52C(0x4)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreOffsetTemperatureMultiplier;                    // 0x530(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreOffsetTemperatureExponent;                      // 0x534(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreOffsetTemperatureAddition;                      // 0x538(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AboveTemperatureOffsetThreshold;                   // 0x53C(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AboveTemperatureOffsetMultiplier;                  // 0x540(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AboveTemperatureOffsetExponent;                    // 0x544(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BelowTemperatureOffsetThreshold;                   // 0x548(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BelowTemperatureOffsetMultiplier;                  // 0x54C(0x4)(ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BelowTemperatureOffsetExponent;                    // 0x550(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AbsoluteTemperatureOverride;                       // 0x554(0x4)(Edit, ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AbsoluteMaxTemperature;                            // 0x558(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AbsoluteMinTemperature;                            // 0x55C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPreventCrops : 1;                                 // Mask: 0x1, PropSize: 0x10x560(0x1)(Edit, ConstParm, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsOutside : 1;                                    // Mask: 0x2, PropSize: 0x10x560(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bRemoveBuffWhenLeavingVolume : 1;                  // Mask: 0x4, PropSize: 0x10x560(0x1)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_139 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_234A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        EggRangeMaximumNumberOverride;                     // 0x564(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        EggMaximumNumberOverride;                          // 0x568(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        EggChanceToSpawnOverride;                          // 0x56C(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        EggIntervalUnstasisChanceToSpawnOverride;          // 0x570(0x4)(BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_234C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        OverrideEggLimitsDinoClasses;                      // 0x578(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        BiomeZonePriority;                                 // 0x588(0x4)(Edit, ConstParm, ExportObject, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxMultiplier;                                     // 0x58C(0x4)(Edit, ConstParm, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AbsoluteWindOverride;                              // 0x590(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreOffsetWindMultiplier;                           // 0x594(0x4)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreOffsetWindExponent;                             // 0x598(0x4)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreOffsetWindAddition;                             // 0x59C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AboveWindOffsetThreshold;                          // 0x5A0(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AboveWindOffsetMultiplier;                         // 0x5A4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AboveWindOffsetExponent;                           // 0x5A8(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BelowWindOffsetThreshold;                          // 0x5AC(0x4)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BelowWindOffsetMultiplier;                         // 0x5B0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BelowWindOffsetExponent;                           // 0x5B4(0x4)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FinalWindMultiplier;                               // 0x5B8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FinalWindExponent;                                 // 0x5BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FinalWindAddition;                                 // 0x5C0(0x4)(Edit, ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2351[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<float>                                BiomeCustomDatas;                                  // 0x5C8(0x10)(ConstParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        StatusAdjustmentRateMultipliersPositive[0xC];      // 0x5D8(0x30)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        StatusAdjustmentRateMultipliersNegative[0xC];      // 0x608(0x30)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOnlyApplyAdjustmentRateValuesOutdoors;            // 0x638(0x1)(BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bStatusAdjustRateValues;                           // 0x639(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableDayTransitionSounds;                       // 0x63A(0x1)(ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2355[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class APrimalBuff>             BuffToGive;                                        // 0x640(0x30)(ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             BuffToPreventActiveUse;                            // 0x670(0x30)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicDay;                            // 0x6A0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicDay_Heavy;                      // 0x6A8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicNight;                          // 0x6B0(0x8)(ConstParm, ExportObject, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicNight_Heavy;                    // 0x6B8(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            ForceMusicInBiome;                                 // 0x6C0(0x8)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ABiomeZoneVolume* GetDefaultObj();

	void OnEndOverlap(class AActor* OverlappedActor, class AActor** Actor);
	void OnBeginOverlap(class AActor* OverlappedActor, class AActor** Actor);
	bool IsPointUnderwater(class UWorld** ForWorld);
	bool IsPointInVacuumBase(class UWorld** ForWorld);
	class APhysicsVolume* GetWaterVolumeAtPoint(class UWorld** ForWorld);
	class APhysicsVolume* GetPhysicsVolumeAtLocation(class UWorld** ForWorld);
	class ABiomeZoneVolume* GetBiomeZoneVolume(struct FVector* Location);
	class UWorld* GetAllBiomeZones(TArray<class ABiomeZoneVolume*>* BiomeZones);
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.BiomeZoneVolumeEffectUtility
class UBiomeZoneVolumeEffectUtility : public UObject
{
public:

	static class UClass* StaticClass();
	static class UBiomeZoneVolumeEffectUtility* GetDefaultObj();

	bool SpawnRelevantEffect(const TArray<struct FBiomeZoneVolumeEffect>& Effects, struct FVector* Location);
	class AActor* SpawnImpactEffect(struct FHitResult* HitResult, class AActor** Owner);
	struct FBiomeZoneVolumeEffect GetRelevantEffect(const TArray<struct FBiomeZoneVolumeEffect>& Effects, class AActor* SourceActor);
};

// 0x8 (0xA0 - 0x98)
// Class ShooterGame.BTService_FindTarget
class UBTService_FindTarget : public UBTService_BlackboardBase
{
public:
	bool                                         bDontSet;                                          // 0x98(0x1)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2378[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UBTService_FindTarget* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class ShooterGame.BTService_UpdateAggro
class UBTService_UpdateAggro : public UBTService
{
public:

	static class UClass* StaticClass();
	static class UBTService_UpdateAggro* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class ShooterGame.BTTask_AttackTarget
class UBTTask_AttackTarget : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UBTTask_AttackTarget* GetDefaultObj();

};

// 0x38 (0xD0 - 0x98)
// Class ShooterGame.BTTask_GetRandomWanderDestination
class UBTTask_GetRandomWanderDestination : public UBTTask_BlackboardBase
{
public:
	struct FVector                               LocOverride;                                       // 0x98(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RandomOffsetMultiplier;                            // 0xB0(0x4)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseRandomNegativeXDir;                            // 0xB4(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOrientRandOffsetByRotation;                       // 0xB5(0x1)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_237D[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              OrientRandOffsetByRotation;                        // 0xB8(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UBTTask_GetRandomWanderDestination* GetDefaultObj();

};

// 0x0 (0xD0 - 0xD0)
// Class ShooterGame.BTTask_RotateToFaceBBEntryWithGrab
class UBTTask_RotateToFaceBBEntryWithGrab : public UBTTask_RotateToFaceBBEntry
{
public:

	static class UClass* StaticClass();
	static class UBTTask_RotateToFaceBBEntryWithGrab* GetDefaultObj();

};

// 0x0 (0x758 - 0x758)
// Class ShooterGame.BuildingUI
class UBuildingUI : public UPrimalUI
{
public:

	static class UClass* StaticClass();
	static class UBuildingUI* GetDefaultObj();

	class APrimalStructurePlacer* GetStructurePlacer();
	class UTexture2D* GetStructureIcon(class APrimalStructure** Structure);
};

// 0x8 (0x38 - 0x30)
// Class ShooterGame.CachedDB
class UCachedDB : public UDataAsset
{
public:
	bool                                         bForceRepopulateAll;                               // 0x30(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_238C[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCachedDB* GetDefaultObj();

	void PopulateDBFromEditor();
	TArray<struct FAssetData> PopulateDB();
};

// 0x50 (0x88 - 0x38)
// Class ShooterGame.ShooterWeaponDB
class UShooterWeaponDB : public UCachedDB
{
public:
	TMap<TSoftClassPtr<class AShooterWeapon>, struct FShooterWeaponDBEntry> CachedWeaponData;                                  // 0x38(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UShooterWeaponDB* GetDefaultObj();

};

// 0x50 (0x88 - 0x38)
// Class ShooterGame.PrimalDinoDB
class UPrimalDinoDB : public UCachedDB
{
public:
	TMap<TSoftClassPtr<class APrimalDinoCharacter>, struct FPrimalDinoDBEntry> CachedDinoData;                                    // 0x38(0x50)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalDinoDB* GetDefaultObj();

};

// 0x50 (0x88 - 0x38)
// Class ShooterGame.PrimalStructureDB
class UPrimalStructureDB : public UCachedDB
{
public:
	TMap<TSoftClassPtr<class APrimalStructure>, struct FPrimalStructureDBEntry> CachedStructureData;                               // 0x38(0x50)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalStructureDB* GetDefaultObj();

};

// 0x50 (0x88 - 0x38)
// Class ShooterGame.PrimalInventoryDB
class UPrimalInventoryDB : public UCachedDB
{
public:
	TMap<TSoftClassPtr<class UPrimalInventoryComponent>, struct FPrimalInventoryDBEntry> CachedInventoryData;                               // 0x38(0x50)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalInventoryDB* GetDefaultObj();

};

// 0x50 (0x88 - 0x38)
// Class ShooterGame.PrimalMissionDB
class UPrimalMissionDB : public UCachedDB
{
public:
	TMap<TSoftClassPtr<class AMissionType>, struct FPrimalMissionDBEntry> CachedMissionData;                                 // 0x38(0x50)(Edit, ConstParm, ExportObject, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalMissionDB* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class ShooterGame.GenerateCacheDBForModsCommandlet
class UGenerateCacheDBForModsCommandlet : public UCommandlet
{
public:

	static class UClass* StaticClass();
	static class UGenerateCacheDBForModsCommandlet* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class ShooterGame.CameraModifier_Climbing
class UCameraModifier_Climbing : public UCameraModifier
{
public:
	class AShooterWeapon_Climb*                  OwningWeapon;                                      // 0x48(0x8)(Edit, Net, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UCameraModifier_Climbing* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class ShooterGame.CDOLiveUpdateData
class UCDOLiveUpdateData : public UObject
{
public:
	TArray<struct FNetChangeDefaultPropertyValue> CDOLiveUpdates;                                    // 0x28(0x10)(ExportObject, Net, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FCDODebugData                         CDODebugData;                                      // 0x38(0x18)(Edit, ConstParm, Net, EditFixedSize, OutParm, DisableEditOnInstance)

	static class UClass* StaticClass();
	static class UCDOLiveUpdateData* GetDefaultObj();

};

// 0xA50 (0x11A8 - 0x758)
// Class ShooterGame.UI_Spawn
class UUI_Spawn : public UPrimalUI
{
public:
	class FName                                  SkinColorPreviewName;                              // 0x758(0x8)(BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  HairColorPreviewName;                              // 0x760(0x8)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  EyeColorPreviewName;                               // 0x768(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  SavedPresetListPanelName;                          // 0x770(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  SavedBonePresetsListPanelName;                     // 0x778(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  IslandRgionButtonListPanelName;                    // 0x780(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  LoadConfirmationButtonName;                        // 0x788(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  CancelLoadButtonName;                              // 0x790(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  LoadFromFileScrollBoxName;                         // 0x798(0x8)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  LoadBonePresetsConfirmationButtonName;             // 0x7A0(0x8)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  CancelLoadBonePresetsButtonName;                   // 0x7A8(0x8)(Edit, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  LoadBonePresetsFromFileScrollBoxName;              // 0x7B0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  RandomizeButtonName;                               // 0x7B8(0x8)(Edit, ConstParm, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  TabBgSwitcherName;                                 // 0x7C0(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  MaleEnabledEffectName;                             // 0x7C8(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  FemaleEnabledEffectName;                           // 0x7D0(0x8)(EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  SaveToFileButtonName;                              // 0x7D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  LoadFromFileButtonName;                            // 0x7E0(0x8)(Edit, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  LoadBonePresetFromFileButtonName;                  // 0x7E8(0x8)(ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                PreviewWidgetName;                                 // 0x7F0(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  RespawnButtonName;                                 // 0x800(0x8)(BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  CreateNewPlayerButtonName;                         // 0x808(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  DefaultDestinationButtonName;                      // 0x810(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  DefaultDestinationButtonLabelName;                 // 0x818(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  RespawnLabelName;                                  // 0x820(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  MyScrollBoxName;                                   // 0x828(0x8)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  CharConfigMaleButtonName;                          // 0x830(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  CharConfigFemaleButtonName;                        // 0x838(0x8)(ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  DoCreateNewPlayerButtonName;                       // 0x840(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  NewCharacterPanelName;                             // 0x848(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  RespawnPanelName;                                  // 0x850(0x8)(BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  RespawnPanelButtonName;                            // 0x858(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  RespawnPanelMapName;                               // 0x860(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  GenderLabelName;                                   // 0x868(0x8)(BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  BodyColorSliderName;                               // 0x870(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  HairColorSliderName;                               // 0x878(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  HairTipColorSliderName;                            // 0x880(0x8)(ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  BeardColorSliderName;                              // 0x888(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  BeardTipColorSliderName;                           // 0x890(0x8)(ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  EyeColorSliderName;                                // 0x898(0x8)(Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  EyeIrisColorSliderName;                            // 0x8A0(0x8)(BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  EyebrowStyleSliderName;                            // 0x8A8(0x8)(ExportObject, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  HairStyleSliderName;                               // 0x8B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  HairLengthSliderName;                              // 0x8B8(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  BeardLengthSliderName;                             // 0x8C0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  BeardStyleSliderName;                              // 0x8C8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  GlobalMuscleMaterialSliderName;                    // 0x8D0(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  GlobalFatMaterialSliderName;                       // 0x8D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  DebugLightsUIName;                                 // 0x8E0(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FBoneModifierSlider>           BoneModifiersSliders;                              // 0x8E8(0x10)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FDynamicMaterialSlider>        DynamicMaterialSliders;                            // 0x8F8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PlayerVoiceSelectorComboboxName;                   // 0x908(0x8)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2489[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bPlayVoiceSample;                                  // 0x918(0x1)(Edit, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_248A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  CharacterNameBoxName;                              // 0x91C(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  RespawnButtonLabelName;                            // 0x924(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_248C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                SlotButtonTemplate;                                // 0x930(0x8)(Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RequestSpawnPointsInterval;                        // 0x938(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  DownloadCharacterDataButtonName;                   // 0x93C(0x8)(Edit, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ShowRegionsButtonName;                             // 0x944(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ShowBedsButtonName;                                // 0x94C(0x8)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2490[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ListCharacterDataSceneTemplate;                    // 0x958(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextActiveColor;                           // 0x960(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextInactiveColor;                         // 0x970(0x10)(OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2491[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FCameraLocationSetting>        CameraSettingsPerTab;                              // 0x988(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FCameraLocationSetting>        CameraSettingsPerTabFemale;                        // 0x998(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2492[0x40];                                    // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class UAnimInstance>           OverwrittenAnimbpMale;                             // 0x9E8(0x30)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TSoftClassPtr<class UAnimInstance>           OverwrittenAnimbpFemale;                           // 0xA18(0x30)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2496[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsFastTravel;                                     // 0xA49(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCharacterFirstSpawn;                              // 0xA4A(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsRespawning;                                     // 0xA4B(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        CurrentSpawnPointID;                               // 0xA4C(0x4)(ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalStructure>       FastTravelIgnoreBed;                               // 0xA50(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2498[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FCharacterPreset>              GenericCharacterPresets;                           // 0xA68(0x10)(BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2499[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             MousePositionOverCharacterView;                    // 0xA88(0x10)(Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_249A[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	class AShooterCharacter*                     PreviewCharacter;                                  // 0xAB8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UUI_PreviewWidget*                     PreviewWidget;                                     // 0xAC0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_249C[0xB8];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UDinoListButtonWidget*>         EntryWidgets;                                      // 0xB80(0x10)(ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_249E[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UDinoListButtonWidget*>         RespawnEntryWidgets;                               // 0xBC0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UDinoListButtonWidget*>         SavedPresetWidgets;                                // 0xBD0(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_24A1[0x80];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        MaxDistanceForMultiSpawnPointSelect;               // 0xC60(0x4)(EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_24A2[0x3C];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UDinoListButtonWidget*>         MultiSpawnPointWidgets;                            // 0xCA0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_24A3[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bCharConfigIsFemale;                               // 0xD00(0x1)(Edit, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_24A4[0x1C7];                                   // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSavedVoiceCollectionActualIndex> MasculineVoiceOptions;                             // 0xEC8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FSavedVoiceCollectionActualIndex> FeminineVoiceOptions;                              // 0xED8(0x10)(ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FSavedVoiceCollectionActualIndex> AdditionalVoiceOptions;                            // 0xEE8(0x10)(ConstParm, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FSavedVoiceCollectionActualIndex> CustomModVoiceOptions;                             // 0xEF8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FSavedVoiceCollectionActualIndex> CurrentlyDisplayedVoiceOptions;                    // 0xF08(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FPlayerBoneBodyPreset>         MaleOnlyBodyBonePresetOptions;                     // 0xF18(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FPlayerBoneBodyPreset>         FemaleOnlyBodyBonePresetOptions;                   // 0xF28(0x10)(Edit, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FPlayerBoneBodyPreset>         UniversalBodyBonePresetOptions;                    // 0xF38(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FPlayerBoneBodyPreset>         Custom_MaleOnlyBodyBonePresetOptions;              // 0xF48(0x10)(ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FPlayerBoneBodyPreset>         Custom_FemaleOnlyBodyBonePresetOptions;            // 0xF58(0x10)(ConstParm, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FPlayerBoneBodyPreset>         Custom_UniversalBodyBonePresetOptions;             // 0xF68(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FPlayerBoneBodyPreset>         CurrentlyDisplayedBodyBonePresetOptions;           // 0xF78(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FPlayerBoneBodyPreset                 CachedBodyBonePreset;                              // 0xF88(0x60)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FCustomPreviewMeshInfo>        CustomPreviewMeshes;                               // 0xFE8(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          SkinToneColor;                                     // 0xFF8(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          EyeToneColor;                                      // 0x1008(0x10)(BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          HairToneColor;                                     // 0x1018(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UDataListValueGeneric*>         BoneSliderRefs;                                    // 0x1028(0x10)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_24AA[0x130];                                   // Fixing Size After Last Property  > TateDumper <
	class UCanvasPanel*                          SplitscreenBackdrop;                               // 0x1168(0x8)(Edit, ExportObject, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Default_Hair_Style;                                // 0x1170(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Default_Hair_Length;                               // 0x1174(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Default_Beard_Style;                               // 0x1178(0x4)(Edit, ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Default_Beard_Length;                              // 0x117C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Default_Eyebrow_Style;                             // 0x1180(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        DefaultFemaleVoiceIndex;                           // 0x1184(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        DefaultMaleVoiceIndex;                             // 0x1188(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        CheatRespawnPlayerPresetIndex;                     // 0x118C(0x4)(Edit, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDebugUtilizeSliderBoneRangesInsteadOfGameData;    // 0x1190(0x1)(Edit, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_24AF[0x17];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_Spawn* GetDefaultObj();

	void UpdateCharacterPreviewImage();
	bool UpdateCharacterFirstSpawnBP();
	bool UpdateCharacterFirstSpawn();
	bool SwitchTheButton();
	int32 SpawnPointSelected(class UUI_SpawnPoint* SpawnPoint);
	void SlotButtonSelected(class UWidget* TheWidget);
	void SetupWidgetElements();
	void SetupChangeCharacterUI();
	void SetGenderVoiceOptions();
	void SetGenderBodyBoneOptions();
	void SavedPresetListButtonSelected(class UWidget* TheWidget);
	void SavedBonePresetListButtonSelected(class UWidget* TheWidget);
	void RespawnSlotButtonSelected(class UWidget* TheWidget);
	void ResetToDefault(bool Recall);
	void ResetCharacterBoneModifiersToPreset(const struct FPrimalPlayerCharacterConfigStruct& PlayerCharacterConfig, int32 PresetIndex);
	void PrintCharacterSettings();
	class FText OnSaveToFileEditableCommitted(enum class ETextCommit* CommitMethod);
	void OnResetToDefault();
	void OnMoviePlaybackFinished_SPDownload(class FString* MoviePath, bool* bPlaybackWasCancelled);
	void OnMoviePlaybackFinished_SpawnAtPoint(class FString* MoviePath, bool* bPlaybackWasCancelled);
	void OnMoviePlaybackFinished_Download(class FString* MoviePath, bool* bPlaybackWasCancelled);
	void OnMoviePlaybackFinished(class FString* MoviePath, bool* bPlaybackWasCancelled);
	void OnMaterialSliderChanged(float SliderValue);
	void OnGenderChange(bool IsFemale);
	class FText OnBedFilterChanged();
	void MultiSelectSpawnPointButtonSelected(class UWidget* TheWidget);
	void InitWidget();
	class FString GetSpawnPointName();
	class USpawnMapWidget* GetRespawnPanelMap();
	class FString GetRealBedName(int32 ChachedID);
	struct FPrimalPlayerCharacterConfigStruct GetPlayerConfigStructFromCurrentValues();
	bool GetIsSpawnPointIDDefaultDestination();
	struct FCharacterPreset GetGenericCharacterPreset();
	class FString GetDifficultRegionString();
	struct FCharacterPreset GetDefaultCharacterPreset();
	struct FCharacterPreset GetCurrentCharacterSetting();
	struct FVector2D GetCanvasLocationForRegionPoint(struct FVector* Location);
	struct FVector2D GetCanvasLocationForMinimapPoint(struct FVector* Location);
	struct FCameraLocationSetting GetCameraSettingsForTab(int32 TabIndex);
	TArray<struct FBoneModifier> GetBoneMods_Female();
	TArray<struct FBoneModifier> GetBoneMods();
	TArray<class UDataListValueGeneric*> GetAllVectorSliders();
	TArray<class UDataListValueGeneric*> GetAllFloatSliders();
	TArray<class UDataListValueGeneric*> GetAllColorSliders();
	void CheatRespawnPlayer(bool KeepGender, class AShooterPlayerController* MyPC, int32 OptionalDefaultPreset);
	class FString BPSetupButtonDataForSpawnRegion(int32 SpawnRegionIndex, const class FString& SecondText);
	bool BPSetupBed(int32 BedIndex, int32 NumBeds);
	void BPSetSelectedSpawnRegion(int32 SpawnRegionIndex, struct FVector* Location);
	int32 BPRemoveBed();
	void BPCreatedSpawnRegionWidget(int32 SpawnRegionIndex, struct FVector* Location, int32 Difficult);
	struct FPrimalPlayerCharacterConfigStruct BP_FinalAdjustPlayerCharacterConfigBeforeSpawn(const struct FPrimalPlayerCharacterConfigStruct& InPlayerCharacterConfig);
	struct FCharacterPreset ApplyCharacterPreset();
	void ApplyBodyBonePreset(const struct FPlayerBoneBodyPreset& BodyPreset);
};

// 0x8 (0x11B0 - 0x11A8)
// Class ShooterGame.CharacterChangerUI
class UCharacterChangerUI : public UUI_Spawn
{
public:
	class UPrimalUI*                             RefParentUI;                                       // 0x11A8(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UCharacterChangerUI* GetDefaultObj();

	class UUI_PreviewWidget* SetupNewPreviewWidget();
	void AcceptChangeCharacter();
};

// 0x30 (0x360 - 0x330)
// Class ShooterGame.CharacterViewPanelWidget
class UCharacterViewPanelWidget : public UPrimalUserWidget
{
public:
	class FString                                PreviewWidgetName;                                 // 0x330(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_24D9[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCharacterViewPanelWidget* GetDefaultObj();

	void RefreshPreviewWidget();
};

// 0x38 (0x910 - 0x8D8)
// Class ShooterGame.CheatFunctionInfoEntryButton
class UCheatFunctionInfoEntryButton : public UDataListEntryButton
{
public:
	uint8                                        bIsCustom : 1;                                     // Mask: 0x1, PropSize: 0x10x8D8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_156 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_24E0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                FunctionName;                                      // 0x8E0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Config, EditConst, SubobjectReference)
	bool                                         bCenterDisplayName;                                // 0x8F0(0x1)(BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_24E4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          DisplayStringSelectedColor;                        // 0x8F4(0x10)(ConstParm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FolderNameTextClipOffset;                          // 0x904(0x4)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_24E6[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCheatFunctionInfoEntryButton* GetDefaultObj();

};

// 0x540 (0xA00 - 0x4C0)
// Class ShooterGame.PointOfInterestActor
class APointOfInterestActor : public AActor
{
public:
	uint8                                        Pad_24EF[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class USceneComponent*                       PointRootComp;                                     // 0x4D0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USphereComponent*                      PointUseSphereComp;                                // 0x4D8(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTextRenderComponent*                  PointTextComp;                                     // 0x4E0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTextRenderComponent*                  PointTitleTextComp;                                // 0x4E8(0x8)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FPointOfInterestData                  MyPointOfInterestData;                             // 0x4F0(0x1E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FPointOfInterestCompanionBehavior     MyPointOfInterestCompanionBehavior;                // 0x6D0(0x300)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               UseSphereLocOffset;                                // 0x9D0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        UseSphereRadius;                                   // 0x9E8(0x4)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TitleTextZOffset;                                  // 0x9EC(0x4)(ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bHasBeenViewed : 1;                                // Mask: 0x1, PropSize: 0x10x9F0(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bSyncWithPointManager : 1;                         // Mask: 0x2, PropSize: 0x10x9F0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPreventViewMultiUseEntry : 1;                     // Mask: 0x4, PropSize: 0x10x9F0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDebugPointActor_Persistent : 1;                   // Mask: 0x8, PropSize: 0x10x9F0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDebugPointActor_Single : 1;                       // Mask: 0x10, PropSize: 0x10x9F0(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDebugPointActor_ClearDebugLines : 1;              // Mask: 0x20, PropSize: 0x10x9F0(0x1)(Edit, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_158 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_24F3[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class APointOfInterestManagerList*           MyPointManager;                                    // 0x9F8(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APointOfInterestActor* GetDefaultObj();

	void RefreshPointData();
	bool IsPointOfInterestValid();
	struct FPointOfInterestData GetMyPointOfInterestData();
	struct FPointOfInterestCompanionBehavior GetMyPointOfInterestCompanionBehavior();
};

// 0x60 (0xA60 - 0xA00)
// Class ShooterGame.CompanionEventTrigger
class ACompanionEventTrigger : public APointOfInterestActor
{
public:
	class UBoxComponent*                         BoxTriggerComp;                                    // 0xA00(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTextRenderComponent*                  EventTitleTextComp;                                // 0xA08(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FCompanionEventData                   MyEventData;                                       // 0xA10(0x50)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ACompanionEventTrigger* GetDefaultObj();

	void OnEndOverlap(class AActor* OverlappedActor, class AActor** Actor);
	void OnBeginOverlap(class AActor* OverlappedActor, class AActor** Actor);
};

// 0x18 (0x770 - 0x758)
// Class ShooterGame.ConsoleCommandButtonWidget
class UConsoleCommandButtonWidget : public UBaseSelectableButtonWidget
{
public:
	uint8                                        Pad_2500[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UConsoleCommandButtonWidget* GetDefaultObj();

};

// 0x58 (0x388 - 0x330)
// Class ShooterGame.ContextMenu
class UContextMenu : public UPrimalUserWidget
{
public:
	FDelegateProperty_                           OnPopulateMenu;                                    // 0x330(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	FDelegateProperty_                           OnPopulateMenuCustom;                              // 0x340(0x10)(EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnActiveItemChanged;                               // 0x350(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	class FName                                  CustomName;                                        // 0x360(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2520[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UContextMenu* GetDefaultObj();

	class UContextMenuItem* SetActiveItem();
	class UContextMenu* PopulateContextMenuCustom__DelegateSignature(class FName* MenuName);
	class UContextMenu* PopulateContextMenu__DelegateSignature();
	class UContextMenuItem* GetActiveItem();
	void CloseMenu(bool* CloseParents);
	void ActiveMenuItemChanged__DelegateSignature(class UContextMenu** Menu, class UContextMenuItem** NewItem, class UContextMenuItem** OldItem);
};

// 0xF8 (0x428 - 0x330)
// Class ShooterGame.ContextMenuItem
class UContextMenuItem : public UPrimalUserWidget
{
public:
	FDelegateProperty_                           OnGetMenuContentEvent;                             // 0x330(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, SubobjectReference)
	FDelegateProperty_                           OnGetMenuContentEventCustom;                       // 0x340(0x10)(OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnExecuteMainAction;                               // 0x350(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnExecuteMainActionCustom;                         // 0x360(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	class FName                                  SubmenuMenuAnchorName;                             // 0x370(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	class FName                                  SubmenuIndicatorName;                              // 0x378(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	class FName                                  ShortcutKeyWidgetName;                             // 0x380(0x8)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	class FName                                  SwitchName;                                        // 0x388(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	class FName                                  SwitchContainerName;                               // 0x390(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	enum class EUContextMenuItemSwitchMode       SwitchType;                                        // 0x398(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	bool                                         IsSwitchedOn;                                      // 0x399(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2542[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  CustomName;                                        // 0x39C(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2543[0x84];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UContextMenuItem* GetDefaultObj();

	void SetSubmenuEnabled(bool bEnabled);
	void SetShortcutKey(int32 ComboKeyIdx, const struct FKey& Key);
	void SetJustification(enum class ETextJustify* Value);
	void SetCaption(class FText Caption);
	class UWidget* OnGetContextMenuContent();
	class FName OnButtonClickedEventObjectCustom__DelegateSignature();
	class UContextMenuItem* OnButtonClickedEventObject__DelegateSignature();
	void OnButtonClicked();
	class UContextMenu* OnActiveMenuItemChanged(class UContextMenuItem* NewActiveItem, class UContextMenuItem** OldActiveItem);
	bool GetSubmenuEnabled();
	class UContextMenu* GetSubmenuContentCustom__DelegateSignature();
	class UContextMenu* GetSubmenuContent__DelegateSignature();
	enum class ETextJustify GetJustification();
	class FText GetCaption();
};

// 0x20 (0x448 - 0x428)
// Class ShooterGame.ContextMenuItem_CosmeticEntry
class UContextMenuItem_CosmeticEntry : public UContextMenuItem
{
public:
	uint8                                        Pad_254F[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UContextMenuItem_CosmeticEntry* GetDefaultObj();

	class UTexture2D* SetImage();
	int32 SetData(int64 ModId);
};

// 0x18 (0x440 - 0x428)
// Class ShooterGame.ContextMenuItem_Sort
class UContextMenuItem_Sort : public UContextMenuItem
{
public:
	class FName                                  SorDirSwitcherName;                                // 0x428(0x8)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2551[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UContextMenuItem_Sort* GetDefaultObj();

};

// 0x38 (0x460 - 0x428)
// Class ShooterGame.ContextMenuItem_Spinner
class UContextMenuItem_Spinner : public UContextMenuItem
{
public:
	FMulticastInlineDelegateProperty_            OnValueCommitted;                                  // 0x428(0x10)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, GlobalConfig, SubobjectReference)
	uint8                                        Pad_257F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MinValue;                                          // 0x43C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	int32                                        MaxValue;                                          // 0x440(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_2581[0x1C];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UContextMenuItem_Spinner* GetDefaultObj();

	void SetValue(int32 NewValue);
	void SetMinValue(int32 NewValue);
	void SetMaxValue(int32 NewValue);
	int32 OnSpinnerValueCommitedEvent__DelegateSignature(enum class ETextCommit* CommitMethod);
	class FText HandleOnTextCommited(enum class ETextCommit* CommitMethod);
	class FText HandleOnTextChanged();
	void HandleOnButtonIncreaseClicked();
	void HandleOnButtonDecreaseClicked();
	int32 GetValue();
	int32 GetMinValue();
	int32 GetMaxValue();
};

// 0x20 (0x3A8 - 0x388)
// Class ShooterGame.ContextMenu_DinoGroupEntry
class UContextMenu_DinoGroupEntry : public UContextMenu
{
public:
	class UClass*                                ItemClass_SimpleButton;                            // 0x388(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ItemClass_SimpleCaption;                           // 0x390(0x8)(Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ItemClass_Spinner;                                 // 0x398(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                SubmenuClass;                                      // 0x3A0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UContextMenu_DinoGroupEntry* GetDefaultObj();

	class UContextMenu* PopulateRootMenu();
	class UContextMenuItem* HandleActionSetGroup();
	class UContextMenuItem* HandleActionRemoveDino();
	class UContextMenuItem* HandleActionRemoveClass();
};

// 0x8 (0x390 - 0x388)
// Class ShooterGame.ContextMenu_InventorySort
class UContextMenu_InventorySort : public UContextMenu
{
public:
	class UClass*                                ItemClass_SortButton;                              // 0x388(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UContextMenu_InventorySort* GetDefaultObj();

	class UContextMenu* PopulateRootMenu();
	class UContextMenuItem* HandleActionWeight();
	class UContextMenuItem* HandleActionUnsort();
	class UContextMenuItem* HandleActionType();
	class UContextMenuItem* HandleActionSpoilTimer();
	class UContextMenuItem* HandleActionAlphabetical();
};

// 0x58 (0x3E0 - 0x388)
// Class ShooterGame.ContextMenu_PrimalItem
class UContextMenu_PrimalItem : public UContextMenu
{
public:
	class UClass*                                ItemClass_SimpleButton;                            // 0x388(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ItemClass_SimpleCaption;                           // 0x390(0x8)(Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ItemClass_Spinner;                                 // 0x398(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ItemClass_CosmeticEntry;                           // 0x3A0(0x8)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                SubmenuClass;                                      // 0x3A8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2610[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        SplitAmountValue;                                  // 0x3C0(0x4)(Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        SplitAmountMax;                                    // 0x3C4(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        CraftAmountValue;                                  // 0x3C8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        CraftAmountMax;                                    // 0x3CC(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        CraftQuantityValue;                                // 0x3D0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        CraftQuantityMax;                                  // 0x3D4(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsFreeCraftingMode : 1;                           // Mask: 0x1, PropSize: 0x10x3D8(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2611[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UContextMenu_PrimalItem* GetDefaultObj();

	class UContextMenu* PopulateSubmenuSplitStack();
	class UContextMenu* PopulateSubmenuSplitAmount();
	class UContextMenu* PopulateSubmenuRemove();
	class UContextMenu* PopulateSubmenuCustomCosmetics();
	class FName PopulateSubmenuCustom();
	class UContextMenu* PopulateSubmenuCraftAmount();
	class UContextMenu* PopulateRootMenu();
	class UContextMenu* PopulateFolderMenu();
	class UContextMenu* PopulateCraftMenu();
	int32 HandleSplitAmountValueCommit(enum class ETextCommit* CommitMethod);
	class UContextMenu* HandleOnGetSubmenuSplitStackContent();
	class UContextMenu* HandleOnGetSubmenuSplitAmountContent();
	class UContextMenu* HandleOnGetSubmenuRemoveContent();
	class UContextMenu* HandleOnGetSubmenuCustomCosmetics();
	class UContextMenu* HandleOnGetSubmenuCustomContent();
	class UContextMenu* HandleOnGetSubmenuCraftContent();
	class UContextMenu* HandleOnGetSubmenuCraftAmountContent();
	int32 HandleCraftAmountValueCommit(enum class ETextCommit* CommitMethod);
	class UContextMenuItem* HandleActionUse();
	class UContextMenuItem* HandleActionUnequip();
	class UContextMenuItem* HandleActionTransfer();
	class UContextMenuItem* HandleActionTrack();
	class UContextMenuItem* HandleActionSplitOne();
	class UContextMenuItem* HandleActionSplitHalf();
	class UContextMenuItem* HandleActionSplitAmount();
	class UContextMenuItem* HandleActionSplitAll();
	class UContextMenuItem* HandleActionSetCraftQuantity();
	class UContextMenuItem* HandleActionRepair();
	class UContextMenuItem* HandleActionRenameFolder();
	class UContextMenuItem* HandleActionRemoveSkin();
	class UContextMenuItem* HandleActionRemoveCosmetic();
	class UContextMenuItem* HandleActionRemoveAmmo();
	class UContextMenuItem* HandleActionRemoveAccessory();
	class UContextMenuItem* HandleActionFavorite();
	class UContextMenuItem* HandleActionFastInventoryInFolder();
	class UContextMenuItem* HandleActionEquipAllInFolder();
	class UContextMenuItem* HandleActionEquip();
	class UContextMenuItem* HandleActionDiscard();
	class UContextMenuItem* HandleActionDeleteFolder();
	class FName HandleActionCustom();
	class UContextMenuItem* HandleActionCraftOne();
	class UContextMenuItem* HandleActionCraftAmount();
	class UContextMenuItem* HandleActionCraftAll();
	class UContextMenuItem* HandleActionApplyCosmetic();
	void BPUpdateCanUse();
};

// 0x8 (0x4E8 - 0x4E0)
// Class ShooterGame.CorruptedAvatarAttackCoordinator
class ACorruptedAvatarAttackCoordinator : public AAIAttackCoordinator
{
public:
	uint8                                        Pad_2618[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ACorruptedAvatarAttackCoordinator* GetDefaultObj();

};

// 0x88 (0x7E0 - 0x758)
// Class ShooterGame.CosmeticSelectorPanelUI
class UCosmeticSelectorPanelUI : public UPrimalUI
{
public:
	uint8                                        Pad_2620[0x88];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCosmeticSelectorPanelUI* GetDefaultObj();

	class UUI_Inventory* SetupInventory();
	class FText SearchTextChangedItem();
	class FText SearchTextChangedCosmetic();
	enum class ESelectInfo OnFilterItemTypeSelected(const class FString& SelectedItem);
	enum class ESelectInfo OnFilterCosmeticTypeSelected(const class FString& SelectedItem);
};

// 0xB0 (0xE8 - 0x38)
// Class ShooterGame.CursorSettings
class UCursorSettings : public UDeveloperSettings
{
public:
	struct FRuntimeFloatCurve                    AnalogCursorAccelerationCurve;                     // 0x38(0x88)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxAnalogCursorSpeed;                              // 0xC0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxAnalogCursorSpeedWhenHovered;                   // 0xC4(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AnalogCursorDragCoefficient;                       // 0xC8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AnalogCursorDragCoefficientWhenHovered;            // 0xCC(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MinAnalogCursorSpeed;                              // 0xD0(0x4)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AnalogCursorDeadZone;                              // 0xD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AnalogCursorAccelerationMultiplier;                // 0xD8(0x4)(Edit, ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AnalogCursorSize;                                  // 0xDC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseEngineAnalogCursor;                            // 0xE0(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAnalogCursorNoAcceleration;                       // 0xE1(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2625[0x6];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCursorSettings* GetDefaultObj();

};

// 0x18 (0x4D8 - 0x4C0)
// Class ShooterGame.CustomActorList
class ACustomActorList : public AInfo
{
public:
	TArray<class AActor*>                        ActorList;                                         // 0x4C0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2629[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ACustomActorList* GetDefaultObj();

	void DestroyActors();
};

// 0x60 (0x740 - 0x6E0)
// Class ShooterGame.CustomButtonWidget
class UCustomButtonWidget : public UButton
{
public:
	struct FCustomButtonWidgetStyle              ExtendedWidgetStyle;                               // 0x6E0(0x48)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         IsToggleButton;                                    // 0x728(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         IsToggledOn;                                       // 0x729(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_262E[0x16];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCustomButtonWidget* GetDefaultObj();

	bool SetToggledState();
	bool SetIsToggleButton();
	bool GetToggledState();
	bool GetIsToggleButton();
	bool BPSetToggledState();
};

// 0x39E8 (0x3FB0 - 0x5C8)
// Class ShooterGame.ShooterGameMode
class AShooterGameMode : public APrimalGameMode
{
public:
	uint8                                        Pad_281C[0x108];                                   // Fixing Size After Last Property  > TateDumper <
	class FString                                BanFileName;                                       // 0x6D0(0x10)(BlueprintVisible, ExportObject, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_281D[0x188];                                   // Fixing Size After Last Property  > TateDumper <
	class UShooterCheatManager*                  ServerCheatManager;                                // 0x868(0x8)(ConstParm, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ForceLoadWorldSeconds;                             // 0x870(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_281F[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	class URCONServer*                           RCONSocket;                                        // 0x888(0x8)(BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                PlayersJoinNoCheckFilename;                        // 0x890(0x10)(ConstParm, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                PlayersExclusiveCheckFilename;                     // 0x8A0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UShooterCheatManager*                  GlobalCommandsCheatManager;                        // 0x8B0(0x8)(BlueprintVisible, Net, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2821[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class FString                                CheckGlobalEnablesURL;                             // 0x8C8(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UDatabase_LoginData*                   Database_LoginDataRef;                             // 0x8D8(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UDatabase_PubSub_GeneralNotifications* PubSub_GeneralNotificationsRef;                    // 0x8E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2822[0x88];                                    // Fixing Size After Last Property  > TateDumper <
	TMap<int32, uint64>                          PlayersIds;                                        // 0x970(0x50)(ConstParm, BlueprintVisible, ExportObject, Net, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TMap<uint64, int32>                          SteamIds;                                          // 0x9C0(0x50)(ConstParm, Net, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2823[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bGlobalDisableLoginLockCheck;                      // 0xA60(0x1)(Edit, ConstParm, BlueprintReadOnly, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bTempDisableLoginLockCheck;                        // 0xA61(0x1)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2825[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                MyServerId;                                        // 0xA68(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2827[0x70];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FTribeData>                    TribesData;                                        // 0xAE8(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class APrimalDinoCharacter*>          ActivelyTamingDinos;                               // 0xAF8(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAutoCreateNewPlayerData;                          // 0xB08(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2828[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DifficultyValue;                                   // 0xB10(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DifficultyValueMin;                                // 0xB14(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DifficultyValueMax;                                // 0xB18(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ProximityRadius;                                   // 0xB1C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ProximityRadiusUnconsiousScale;                    // 0xB20(0x4)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_282D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                CheatClass;                                        // 0xB28(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsOfficialServer;                                 // 0xB30(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsCurrentlySavingWorld;                           // 0xB31(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_282F[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsConsoleUnOfficialPCServer;                      // 0xB33(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bServerAllowArkDownload;                           // 0xB34(0x1)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2831[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bAlwaysNotifyPlayerLeft;                           // 0xB37(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAlwaysNotifyPlayerJoined;                         // 0xB38(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bServerHardcore;                                   // 0xB39(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2834[0x33];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bEnableCryoSicknessPVE;                            // 0xB6D(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2835[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CryopodNerfDamageMult;                             // 0xB70(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CryopodNerfDuration;                               // 0xB74(0x4)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bEnableMeshBitingProtection;                       // 0xB78(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2837[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CryopodNerfIncomingDamageMultPercent;              // 0xB7C(0x4)(ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2838[0x48];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        ResourcesRespawnPeriodMultiplier;                  // 0xBC8(0x4)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        KickIdlePlayersPeriod;                             // 0xBCC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MateBoostEffectMultiplier;                         // 0xBD0(0x4)(ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AutoSavePeriodMinutes;                             // 0xBD4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        XPMultiplier;                                      // 0xBD8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	class FName                                  ActiveEvent;                                       // 0xBDC(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        TribeNameChangeCooldown;                           // 0xBE4(0x4)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PlatformSaddleBuildAreaBoundsMultiplier;           // 0xBE8(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAlwaysAllowStructurePickup;                       // 0xBEC(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_283D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        StructurePickupTimeAfterPlacement;                 // 0xBF0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        StructurePickupHoldDuration;                       // 0xBF4(0x4)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowHideDamageSourceFromLogs;                    // 0xBF8(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_283F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        KillXPMultiplier;                                  // 0xBFC(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HarvestXPMultiplier;                               // 0xC00(0x4)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CraftXPMultiplier;                                 // 0xC04(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GenericXPMultiplier;                               // 0xC08(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SpecialXPMultiplier;                               // 0xC0C(0x4)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AlphaKillXPMultiplier;                             // 0xC10(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CaveKillXPMultiplier;                              // 0xC14(0x4)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        WildKillXPMultiplier;                              // 0xC18(0x4)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BossKillXPMultiplier;                              // 0xC1C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TamedKillXPMultiplier;                             // 0xC20(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        UnclaimedKillXPMultiplier;                         // 0xC24(0x4)(Edit, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ExplorerNoteXPMultiplier;                          // 0xC28(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2846[0x84];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UPrimalPlayerData*>             PlayerDatas;                                       // 0xCB0(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2848[0xE];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bForceRespawnDinos;                                // 0xCCE(0x1)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_284A[0x29];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnCharacterPossessedByPlayer;                      // 0xCF8(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnCharacterUnpossessedByPlayer;                    // 0xD08(0x10)(BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnShooterCharacterSpawned;                         // 0xD18(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnShooterCharacterDied;                            // 0xD28(0x10)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnMissionTriggerBeginOverlap;                      // 0xD38(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, GlobalConfig)
	FMulticastInlineDelegateProperty_            OnMissionTriggerEndOverlap;                        // 0xD48(0x10)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, GlobalConfig)
	float                                        TamedDinoDamageMultiplier;                         // 0xD58(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DinoDamageMultiplier;                              // 0xD5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        PlayerDamageMultiplier;                            // 0xD60(0x4)(BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        StructureDamageMultiplier;                         // 0xD64(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        PlayerResistanceMultiplier;                        // 0xD68(0x4)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        DinoResistanceMultiplier;                          // 0xD6C(0x4)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        TamedDinoResistanceMultiplier;                     // 0xD70(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        StructureResistanceMultiplier;                     // 0xD74(0x4)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	bool                                         bJoinInProgressGamesAsSpectator;                   // 0xD78(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2852[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TamingSpeedMultiplier;                             // 0xD7C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        HarvestAmountMultiplier;                           // 0xD80(0x4)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        HarvestHealthMultiplier;                           // 0xD84(0x4)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        PlayerCharacterWaterDrainMultiplier;               // 0xD88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        PlayerCharacterFoodDrainMultiplier;                // 0xD8C(0x4)(ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        DinoCharacterFoodDrainMultiplier;                  // 0xD90(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        RaidDinoCharacterFoodDrainMultiplier;              // 0xD94(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PlayerCharacterStaminaDrainMultiplier;             // 0xD98(0x4)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        DinoCharacterStaminaDrainMultiplier;               // 0xD9C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        PlayerCharacterHealthRecoveryMultiplier;           // 0xDA0(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        DinoCharacterHealthRecoveryMultiplier;             // 0xDA4(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        CarnivoreNaturalTargetingRangeMultiplier;          // 0xDA8(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CarnivorePlayerAggroMultiplier;                    // 0xDAC(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HerbivoreNaturalTargetingRangeMultiplier;          // 0xDB0(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HerbivorePlayerAggroMultiplier;                    // 0xDB4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         AIForceTargetPlayers;                              // 0xDB8(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         AIForceOverlapCheck;                               // 0xDB9(0x1)(ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_285A[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bDisableSaveLoad;                                  // 0xDC0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableXP;                                        // 0xDC1(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableDynamicMusic;                              // 0xDC2(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_285D[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FLevelExperienceRamp>          LevelExperienceRampOverrides;                      // 0xDC8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<int32>                                OverridePlayerLevelEngramPoints;                   // 0xDD8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<int32>                                ExcludeItemIndices;                                // 0xDE8(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FEngramEntryOverride>          OverrideEngramEntries;                             // 0xDF8(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FEngramEntryOverride>          OverrideNamedEngramEntries;                        // 0xE08(0x10)(Edit, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FEngramEntryAutoUnlock>        EngramEntryAutoUnlocks;                            // 0xE18(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class FString>                        PreventDinoTameClassNames;                         // 0xE28(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FClassMultiplier>              DinoClassStaminaMultipliers;                       // 0xE38(0x10)(ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FClassMultiplier>              TamedDinoClassStaminaMultipliers;                  // 0xE48(0x10)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FClassMultiplier>              DinoClassSpeedMultipliers;                         // 0xE58(0x10)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FClassMultiplier>              TamedDinoClassSpeedMultipliers;                    // 0xE68(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FDinoSpawnWeightMultiplier>    DinoSpawnWeightMultipliers;                        // 0xE78(0x10)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FClassMultiplier>              DinoClassResistanceMultipliers;                    // 0xE88(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FClassMultiplier>              TamedDinoClassResistanceMultipliers;               // 0xE98(0x10)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FClassMultiplier>              DinoClassDamageMultipliers;                        // 0xEA8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FClassMultiplier>              TamedDinoClassDamageMultipliers;                   // 0xEB8(0x10)(Edit, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FClassMultiplier>              HarvestResourceItemAmountClassMultipliers;         // 0xEC8(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FClassNameReplacement>         NPCReplacements;                                   // 0xED8(0x10)(ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PvPZoneStructureDamageMultiplier;                  // 0xEE8(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOnlyAllowSpecifiedEngrams;                        // 0xEEC(0x1)(Edit, ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2864[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        OverrideMaxExperiencePointsPlayer;                 // 0xEF0(0x4)(ConstParm, Net, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        OverrideMaxExperiencePointsDino;                   // 0xEF4(0x4)(Edit, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GlobalSpoilingTimeMultiplier;                      // 0xEF8(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GlobalItemDecompositionTimeMultiplier;             // 0xEFC(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GlobalCorpseDecompositionTimeMultiplier;           // 0xF00(0x4)(ConstParm, ExportObject, Net, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxFallSpeedMultiplier;                            // 0xF04(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAutoPvETimer;                                     // 0xF08(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAutoPvEUseSystemTime;                             // 0xF09(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2866[0xA];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AutoPvEStartTimeSeconds;                           // 0xF14(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AutoPvEStopTimeSeconds;                            // 0xF18(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2867[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AHibernationManager*                   HibernationManager;                                // 0xF20(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, Config, GlobalConfig)
	int32                                        TributeItemExpirationSeconds;                      // 0xF28(0x4)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        TributeDinoExpirationSeconds;                      // 0xF2C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        TributeCharacterExpirationSeconds;                 // 0xF30(0x4)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2868[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxTributeItems;                                   // 0xF3C(0x4)(Edit, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxTributeDinos;                                   // 0xF40(0x4)(BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxTributeCharacters;                              // 0xF44(0x4)(Edit, BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIncreasePvPRespawnInterval;                       // 0xF48(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_286B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        IncreasePvPRespawnIntervalCheckPeriod;             // 0xF4C(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalMultiplier;              // 0xF50(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalBaseAmount;              // 0xF54(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ResourceNoReplenishRadiusStructures;               // 0xF58(0x4)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ResourceNoReplenishRadiusPlayers;                  // 0xF5C(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CropGrowthSpeedMultiplier;                         // 0xF60(0x4)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LayEggIntervalMultiplier;                          // 0xF64(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PoopIntervalMultiplier;                            // 0xF68(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CropDecaySpeedMultiplier;                          // 0xF6C(0x4)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowChatFromDeadNonAdmins;                       // 0xF70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowDisablingSpectator;                          // 0xF71(0x1)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPvEDisableFriendlyFire;                           // 0xF72(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bFlyerPlatformAllowUnalignedDinoBasing;            // 0xF73(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowUnclaimDinos;                                // 0xF74(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_286F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxPerTribePlatformSaddleStructureLimit;           // 0xF78(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxPlatformSaddleStructureLimit;                   // 0xF7C(0x4)(ConstParm, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxDinoBaseLevel;                                  // 0xF80(0x4)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxNumberOfPlayersInTribe;                         // 0xF84(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TribeSlotReuseCooldown;                            // 0xF88(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MatingIntervalMultiplier;                          // 0xF8C(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        EggHatchSpeedMultiplier;                           // 0xF90(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BabyMatureSpeedMultiplier;                         // 0xF94(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BabyFoodConsumptionSpeedMultiplier;                // 0xF98(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2871[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PerLevelStatsMultiplier_Player[0xC];               // 0xFA0(0x30)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsMultiplier_DinoTamed[0xC];            // 0xFD0(0x30)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsMultiplier_DinoTamed_Add[0xC];        // 0x1000(0x30)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsMultiplier_DinoTamed_Affinity[0xC];   // 0x1030(0x30)(Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsMultiplier_DinoWild[0xC];             // 0x1060(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MutagenLevelBoost[0xC];                            // 0x1090(0x30)(Edit, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MutagenLevelBoost_Bred[0xC];                       // 0x10C0(0x30)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ItemStatClamps[0x8];                               // 0x10F0(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxGateFrameOnSaddles;                             // 0x1110(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxHexagonsPerCharacter;                           // 0x1114(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCustomGameModeAllowSpectatorJoinAfterMatchStart;  // 0x1118(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2873[0x1107];                                  // Fixing Size After Last Property  > TateDumper <
	bool                                         bGameplayLogEnabled;                               // 0x2220(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bServerGameLogEnabled;                             // 0x2221(0x1)(ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2875[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                BonusSupplyCrateItemClass;                         // 0x2228(0x8)(ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BonusSupplyCrateItemGiveInterval;                  // 0x2230(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        StructureDamageRepairCooldown;                     // 0x2234(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CustomRecipeEffectivenessMultiplier;               // 0x2238(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CustomRecipeSkillMultiplier;                       // 0x223C(0x4)(ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                BonusSupplyCrateItemString;                        // 0x2240(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         MaxDifficulty;                                     // 0x2250(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPvEAllowTribeWar;                                 // 0x2251(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPvEAllowTribeWarCancel;                           // 0x2252(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowCustomRecipes;                               // 0x2253(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPassiveDefensesDamageRiderlessDinos;              // 0x2254(0x1)(Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2877[0xB];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bEnableDeathTeamSpectator;                         // 0x2260(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bTribeStoreCharacterConfiguration;                 // 0x2261(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2878[0xF6];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxTribeLogs;                                      // 0x2358(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2879[0x1C];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxPlayersOverride;                                // 0x2378(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableFriendlyFire;                              // 0x237C(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowInactiveTribes;                              // 0x237D(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceMapPlayerLocation;                           // 0x237E(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_287C[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DinoHarvestingDamageMultiplier;                    // 0x2380(0x4)(ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PlayerHarvestingDamageMultiplier;                  // 0x2384(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DinoTurretDamageMultiplier;                        // 0x2388(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableLootCrates;                                // 0x238C(0x1)(Edit, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_287D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ExtinctionEventTimeInterval;                       // 0x2390(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_287E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       NextExtinctionEventUTC;                            // 0x2398(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_287F[0x1C];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bUseCharacterTracker;                              // 0x23B8(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShowFloatingDamageText;                           // 0x23B9(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2880[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        SavedGameModeVersion;                              // 0x23BC(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2882[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bAllowTekSuitPowersInGenesis;                      // 0x23C4(0x1)(Edit, ConstParm, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2883[0x43];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FItemCraftingCostOverride>     OverrideItemCraftingCosts;                         // 0x2408(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FConfigItemCraftingCostOverride> ConfigOverrideItemCraftingCosts;                   // 0x2418(0x10)(ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FConfigMaxItemQuantityOverride> ConfigOverrideItemMaxQuantity;                     // 0x2428(0x10)(ConstParm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2886[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FConfigSupplyCrateItemsOverride> ConfigOverrideSupplyCrateItems;                    // 0x2488(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FConfigNPCSpawnEntriesContainer> ConfigOverrideNPCSpawnEntriesContainer;            // 0x2498(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FConfigNPCSpawnEntriesContainer> ConfigAddNPCSpawnEntriesContainer;                 // 0x24A8(0x10)(BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FConfigNPCSpawnEntriesContainer> ConfigSubtractNPCSpawnEntriesContainer;            // 0x24B8(0x10)(ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BabyImprintingStatScaleMultiplier;                 // 0x24C8(0x4)(ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BabyCuddleIntervalMultiplier;                      // 0x24CC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BabyImprintAmountMultiplier;                       // 0x24D0(0x4)(ExportObject, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BabyCuddleGracePeriodMultiplier;                   // 0x24D4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BabyCuddleLoseImprintQualitySpeedMultiplier;       // 0x24D8(0x4)(Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HairGrowthSpeedMultiplier;                         // 0x24DC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DinoHairGrowthSpeedMultiplier;                     // 0x24E0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreventDiseases;                                  // 0x24E4(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bNonPermanentDiseases;                             // 0x24E5(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2888[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class UAllClustersInventory*                 AllClustersInventory;                              // 0x24E8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, GlobalConfig)
	int32                                        SaveForceRespawnDinosVersion;                      // 0x24F0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2889[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint64                                       ServerID;                                          // 0x24F8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_288B[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                SupportedSpawnRegions;                             // 0x2558(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bServerUseDinoList;                                // 0x2568(0x1)(ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_288C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxAllowedRespawnInterval;                         // 0x256C(0x4)(Edit, ExportObject, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseDinoLevelUpAnimations;                         // 0x2570(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableDinoTaming;                                // 0x2571(0x1)(Edit, BlueprintReadOnly, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableDinoRiding;                                // 0x2572(0x1)(Edit, ConstParm, BlueprintVisible, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_288E[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        SaveGameCustomVersion;                             // 0x2578(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2890[0x894];                                   // Fixing Size After Last Property  > TateDumper <
	bool                                         bFailedWaterDinoSpawnLogEnabled;                   // 0x2E10(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2891[0x88F];                                   // Fixing Size After Last Property  > TateDumper <
	float                                        PlayerBaseStatMultipliers[0xC];                    // 0x36A0(0x30)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NPCActiveCountTamed;                               // 0x36D0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NPCActiveCount;                                    // 0x36D4(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NPCCount;                                          // 0x36D8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RTSModeNumSelectableDinosScale;                    // 0x36DC(0x4)(ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RTSMaxRangeFromPlayerCharacterScale;               // 0x36E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RTSProximityToEnemyStructureScale;                 // 0x36E4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MatingSpeedMultiplier;                             // 0x36E8(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FastDecayInterval;                                 // 0x36EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseSingleplayerSettings;                          // 0x36F0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableGenesisMissions;                           // 0x36F1(0x1)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableStructurePlacementCollision;               // 0x36F2(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceUseInventoryAppends;                         // 0x36F3(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCrafting;                          // 0x36F4(0x1)(Edit, ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCraftingForDinos;                  // 0x36F5(0x1)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCraftingForPlayers;                // 0x36F6(0x1)(Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCraftingForStructures;             // 0x36F7(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        WirelessCraftingRangeOverride;                     // 0x36F8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SupplyCrateLootQualityMultiplier;                  // 0x36FC(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FishingLootQualityMultiplier;                      // 0x3700(0x4)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ItemStackSizeMultiplier;                           // 0x3704(0x4)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CraftingSkillBonusMultiplier;                      // 0x3708(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowPlatformSaddleMultiFloors;                   // 0x370C(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowUnlimitedRespecs;                            // 0x370D(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2896[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FuelConsumptionIntervalMultiplier;                 // 0x3710(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        DestroyTamesOverLevelClamp;                        // 0x3714(0x4)(Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxAlliancesPerTribe;                              // 0x3718(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxTribesPerAlliance;                              // 0x371C(0x4)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableDinoDecayClaiming;                         // 0x3720(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableNonTribePinAccess;                         // 0x3721(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseTameLimitForStructuresOnly;                    // 0x3722(0x1)(BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bLimitTurretsInRange;                              // 0x3723(0x1)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LimitTurretsRange;                                 // 0x3724(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        LimitTurretsNum;                                   // 0x3728(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bHardLimitTurretsInRange;                          // 0x372C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2899[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        LimitGeneratorsNum;                                // 0x3730(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LimitGeneratorsRange;                              // 0x3734(0x4)(Edit, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        CropPlotStackLimit;                                // 0x3738(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisablePhotoMode;                                 // 0x373C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableTekLegsBoost;                              // 0x373D(0x1)(ConstParm, ExportObject, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseOnLoadClampItemQualityRating;                  // 0x373E(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableCryopodEnemyCheck;                         // 0x373F(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowCryoFridgeOnSaddle;                          // 0x3740(0x1)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableCryopodFridgeRequirement;                  // 0x3741(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_289E[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OnLoadItemQualityRatingClamp;                      // 0x3744(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PhotoModeRangeLimit;                               // 0x3748(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAutoUnlockAllEngrams;                             // 0x374C(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_289F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ServerLastForceRespawnWildDinosTime;               // 0x3750(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                UseStructurePreventionVolumeTagString;             // 0x3758(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BaseTemperatureMultiplier;                         // 0x3768(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceAllowAllStructures;                          // 0x376C(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceAllowAscensionItemDownloads;                 // 0x376D(0x1)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShowCreativeMode;                                 // 0x376E(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28A0[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LimitNonPlayerDroppedItemsRange;                   // 0x3770(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        LimitNonPlayerDroppedItemsCount;                   // 0x3774(0x4)(ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GlobalPoweredBatteryDurabilityDecreasePerSecond;   // 0x3778(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SingleplayerSettingsCorpseLifespanMultiplier;      // 0x377C(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        UseCorpseLifeSpanMultiplier;                       // 0x3780(0x4)(Edit, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TimePeriodToHideDisconnectedPlayers;               // 0x3784(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseBPPreSpawnedDino;                              // 0x3788(0x1)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28A1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PreventOfflinePvPConnectionInvincibleInterval;     // 0x378C(0x4)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TamedDinoCharacterFoodDrainMultiplier;             // 0x3790(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        WildDinoCharacterFoodDrainMultiplier;              // 0x3794(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        WildDinoTorporDrainMultiplier;                     // 0x3798(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PassiveTameIntervalMultiplier;                     // 0x379C(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TamedDinoTorporDrainMultiplier;                    // 0x37A0(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableWeatherFog;                                // 0x37A4(0x1)(ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28A3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MeshCheckingRayDistance;                           // 0x37A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MeshCheckingSubdivisons;                           // 0x37AC(0x4)(ExportObject, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MeshCheckingPercentageToFail;                      // 0x37B0(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreStructuresPreventionVolumes;                // 0x37B4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bGenesisUseStructuresPreventionVolumes;            // 0x37B5(0x1)(Edit, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28A4[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                LiveTuningFileName;                                // 0x37B8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28A5[0x31];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bLogChatMessages;                                  // 0x37F9(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28A6[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ChatLogFlushIntervalSeconds;                       // 0x37FC(0x4)(Edit, ConstParm, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ChatLogFileSplitIntervalSeconds;                   // 0x3800(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ChatLogMaxAgeInDays;                               // 0x3804(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28A8[0x60];                                    // Fixing Size After Last Property  > TateDumper <
	struct FLeaderboardsContainer                LeaderboardContainer;                              // 0x3868(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28A9[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bHasCovertedToStore;                               // 0x38D0(0x1)(Edit, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowStoredDatas;                                 // 0x38D1(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28AA[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bDisableListenServerTethering;                     // 0x38D3(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28AB[0x17C];                                   // Fixing Size After Last Property  > TateDumper <
	TArray<struct FBuffAddition>                 AdditionalDefaultBuffs;                            // 0x3A50(0x10)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bParseServerToJson;                                // 0x3A60(0x1)(Edit, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28AF[0x7F];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnPreSpawnedDino;                                  // 0x3AE0(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnKilled;                                          // 0x3AF0(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnPostLogin;                                       // 0x3B00(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnStartNewPlayer;                                  // 0x3B10(0x10)(Edit, ConstParm, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnAddNewTribe;                                     // 0x3B20(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnRemoveTribe;                                     // 0x3B30(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate)
	FMulticastInlineDelegateProperty_            OnRemovePlayerFromTribe;                           // 0x3B40(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnServerChatMessage;                               // 0x3B50(0x10)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnServerDirectMessage;                             // 0x3B60(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnServerNotification;                              // 0x3B70(0x10)(BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnNotifyDamage;                                    // 0x3B80(0x10)(BlueprintVisible, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnSerializeForSaveFile;                            // 0x3B90(0x10)(ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28BA[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        BaseHexagonRewardMultiplier;                       // 0x3BC0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HexagonRewardMultiplier;                           // 0x3BC4(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HexagonCostMultiplier;                             // 0x3BC8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableHexagonStore;                              // 0x3BCC(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bHexStoreAllowOnlyEngramTradeOption;               // 0x3BCD(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28BC[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FClassNameReplacement>         DynamicNPCReplacements;                            // 0x3BD0(0x10)(BlueprintVisible, ExportObject, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FClassNameReplacement>         CollectiveNPCReplacements;                         // 0x3BE0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class FString>                        PreventTransferForClassNames;                      // 0x3BF0(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowSpeedLeveling;                               // 0x3C00(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowFlyerSpeedLeveling;                          // 0x3C01(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bEnableWorldBuffScaling;                           // 0x3C02(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableWorldBuffs;                                // 0x3C03(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bEnablePlayerMoveThroughSleeping;                  // 0x3C04(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bEnablePlayerMoveThroughAlly;                      // 0x3C05(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAutoCreateTribes;                                 // 0x3C06(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bRiderDinoCollision;                               // 0x3C07(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bFreezeTribes;                                     // 0x3C08(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28BF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        WorldBuffScalingEfficacy;                          // 0x3C0C(0x4)(ExportObject, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseOverrideTimeToRecoverValuesOnPlayerStatusComp; // 0x3C10(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28C0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OverrideTimeToRecoverAfterDepletionStatusValue[0xC]; // 0x3C14(0x30)(ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OverrideTimeToRecoverAfterDecreaseStatusValue[0xC]; // 0x3C44(0x30)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseOverrideTimeToRecoverValuesOnDinoStatusComp;   // 0x3C74(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28C2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OverrideDinoTimeToRecoverAfterDepletionStatusValue[0xC]; // 0x3C78(0x30)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OverrideDinoTimeToRecoverAfterDecreaseStatusValue[0xC]; // 0x3CA8(0x30)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseDisabledStatusStates;                          // 0x3CD8(0x1)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        DisabledStatusStates[0xE];                         // 0x3CD9(0xE)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28C4[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FCrateTemporaryQualityModifierSet> TemporaryCrateModifiers;                           // 0x3CE8(0x10)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FResourceTemporaryAmountModifierSet> TemporaryResourceModifiers;                        // 0x3CF8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AdjustableMutagenSpawnDelayMultiplier;             // 0x3D08(0x4)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableDefaultMapItemSets;                        // 0x3D0C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         DisableRailgunPVP;                                 // 0x3D0D(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28CC[0xA];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          DynamicDisabledWorldBuffs;                         // 0x3D18(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28CD[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        RedisTimeoutInMinutes;                             // 0x3D38(0x4)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         RestartedDueToRedisTimeout;                        // 0x3D3C(0x1)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28CF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ImprintLimit;                                      // 0x3D40(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxStructuresToAllowForPickupOverride;             // 0x3D44(0x4)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableCustomFoldersInTributeInventories;         // 0x3D48(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableRailgunPVP;                                // 0x3D49(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28D1[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinimumTimebetweeninventoryRetrieval;              // 0x3D4C(0x4)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        WildFollowerSpawnChanceMultiplier;                 // 0x3D50(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        WildFollowerSpawnCountMultiplier;                  // 0x3D54(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableDinoItemBlacklist;                         // 0x3D58(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreventHibernationManager;                        // 0x3D59(0x1)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSaveFormerTribeOwnerLog;                          // 0x3D5A(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28D5[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DinoArmorDurabilityScale;                          // 0x3D5C(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28D7[0xB0];                                    // Fixing Size After Last Property  > TateDumper <
	class UAntiDupeTransactionLog*               AntiDupeTransactionLog;                            // 0x3E10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig)
	uint8                                        Pad_28DB[0xAC];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bFilterCharacterNames;                             // 0x3EC4(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bFilterTribeNames;                                 // 0x3EC5(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bFilterChat;                                       // 0x3EC6(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28E0[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CurrentChatFilterVersion;                          // 0x3EC8(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        RequestedChatFilterVersion;                        // 0x3ECC(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceLoadingPlayerData;                           // 0x3ED0(0x1)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28E1[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                BadWordListURL;                                    // 0x3ED8(0x10)(BlueprintVisible, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                BadWordWhiteListURL;                               // 0x3EE8(0x10)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FAhoCorasickMatcher                   BadWordMatcher;                                    // 0x3EF8(0x18)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FAhoCorasickMatcher                   BadWordWhitelistMatcher;                           // 0x3F10(0x18)(BlueprintVisible, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bEnableServerDestroyTamesAboveSoftTameLimit;       // 0x3F28(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCheckSoftTameLimitOnTick;                         // 0x3F29(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28E4[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxTamedDinos_SoftTameLimit;                       // 0x3F2C(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxTamedDinos_SoftTameLimit_CountdownForDeletionDuration; // 0x3F30(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28E5[0x54];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bDestroyCharacterOnLogoutInLobby : 1;              // Mask: 0x1, PropSize: 0x10x3F88(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPreventJoiningDuringMatch : 1;                    // Mask: 0x2, PropSize: 0x10x3F88(0x1)(ExportObject, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_176 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_28E7[0x17];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnExplorerNoteUnlocked;                            // 0x3FA0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AShooterGameMode* GetDefaultObj();

	void UpdateTribeData(const struct FTribeData& NewTribeData);
	bool TryGetIntOptionIni(class FString* OptionName, int32* Value);
	bool TryGetIntOption(const class FString& Options, class FString* OptionName, int32* Value);
	bool TryGetBoolOptionIni(class FString* OptionName, bool* Value);
	bool TryGetBoolOption(const class FString& Options, class FString* OptionName, bool* Value);
	bool TriggerLevelCustomEvents(class UWorld** InWorld, class FString* EventName, int32 IDtoOnlyAllowExecutionOncePerFrame);
	float TimeSinceMissionDeactivated();
	void StartIntervalUpdatingCachedTeamTameLists(class AShooterPlayerController* RequestingPlayer);
	void SortCurrentlyEvaluatedTameIntoAppropriateCachedTeamTameListForThisCurrentBatch();
	void ShiftAwaitingNEXTBatchOfTeamsToUpdateCachedTeamTameListsToCurrentBatch();
	void SetTimeOfDay(const class FString& TimeString);
	class UClass* SetLastMissionDeactivatedUtcTime(double UtcTime);
	void SetCreatedCachedTeamTameListsOnTribeDataOrPlayerData();
	class USoundBase* SendServerNotification(class FString* MessageText, int32* ReceiverTeamId, int32* ReceiverPlayerID, bool bDoBillboard);
	class FString SendServerDirectMessage(class FString* PlayerSteamIDconst, class FString* MessageText, int32* ReceiverTeamId, int32* ReceiverPlayerID);
	class FString SendServerChatMessage(class FString* MessageText, int32* ReceiverTeamId, int32* ReceiverPlayerID);
	void SendChatMessageToTeam(int32* Team, struct FPrimalChatMessage* Message);
	void SendChatMessageToPlayer(class AShooterPlayerController* ToPlayer, struct FPrimalChatMessage* Message);
	void SendChatMessage(struct FPrimalChatMessage* Message);
	void SaveWorld(bool bForceSynchronous, bool* bForceEvenIfSaveLoadIsDisabled);
	bool SaveSimpleLogFileOfFormerTribeOwnerIDsAndTheirTimestamps(int32 TribeID, int32* OwnerIDToAdd);
	void RestartServer();
	void RequestUpdateCachedTeamTameList(class AShooterPlayerController* RequestingPlayer);
	void RequestPlayerRecieveKnownCachedTeamTameList(class AShooterPlayerController* RequestingPlayer);
	class AShooterPlayerState* RemovePlayerData();
	void RemoveInactivePlayersAndTribes();
	void ReassertColorization();
	void QueueUpTeamForItsCachedTeamTameListToBeUpdated(class AShooterPlayerController* RequestingPlayer);
	void PrintToServerGameLog(class FString* InString, bool* bSendChatToAllAdmins);
	void PrintToGameplayLog(class FString* InString);
	void PostAlarmNotificationTribe(int32 TribeID, const class FString& Title, class FString* Message);
	int32 PostAlarmNotificationPlayerID(const class FString& Title, class FString* Message);
	void PostAlarmNotification(const class FString& SteamID, const class FString& Title, class FString* Message);
	void OnLogout(class AController** Exiting);
	void OnLandscapeLevelUnloaded();
	void OnLandscapeLevelLoaded();
	void OnFinishedUpdatingCurrentBatchOfCachedTeamTameLists();
	void MovePlayersAwaitingUpdatedCachedTeamTameListToArrayOfPlayersToGetNotifiedAndRecieveUpdatedList();
	void MaxTamedDinos_SoftTameLimit_MarkAllTamesForSoftTameLimit();
	bool LoadWorld(bool* bForceEvenIfLoadingIsDisabled);
	bool LoadTribeData(int32 TribeID, struct FTribeData* LoadedTribeData, bool* bIsLoadingBackup, bool* bDontCheckDirtyTribeWar, enum class ETribeDataExclude* ExcludeFilter);
	void LoadedWorld();
	class FString LoadAbandonedTribeFile(int32 TribeID);
	void ListAllPlayers(class FString* Message);
	class APlayerController* KickPlayerController(class FString* KickMessage);
	void KickAllPlayersAndReload();
	bool IsTimeSinceMissionDeactivated(bool* bForceTrueAtZeroTime);
	bool IsTeamIncludedInNextBatchToProcessTameList(int32* Team, int32* FoundIndex);
	bool IsTeamCurrentlyUpdatingItsCachedTeamTameList(int32* Team, int32* FoundIndex);
	bool IsPlayerInNextTeamBatchPlayersAwaitingUpdatedCachedTeamTameList(class AShooterPlayerController* RequestingPlayer, int32* FoundIndex);
	bool IsPlayerControllerAllowedToJoinNoCheck(class AShooterPlayerController** ForPlayer);
	bool IsPlayerControllerAllowedToExclusiveJoin(class AShooterPlayerController** ForPlayer);
	bool IsPlayerAwaitingToRecieveCachedTeamTameListASAP(class AShooterPlayerController* RequestingPlayer, int32* FoundIndex);
	bool IsPlayerAwaitingNotificationOnceTheirCachedTeamTameListFinishesUpdating(class AShooterPlayerController* RequestingPlayer, int32* FoundIndex);
	bool IsPlayerArrayOfInAllPlayersAwaitingUpdatedCachedTeamTameLists(class AShooterPlayerController* RequestingPlayer, int32* FoundIndex);
	bool IsPlayerAllowedToCheat(class AShooterPlayerController** ForPlayer);
	bool IsCachedTeamTameListOutOfDate(class AShooterPlayerController* RequestingPlayer);
	class FString InitOptionString(class FString* Commandline);
	int32 InitOptionInteger(class FString* Commandline);
	float InitOptionFloat(class FString* Commandline);
	class FString InitOptionBool(class FString* Commandline, bool* bDefaultValue);
	void InitGameStateDataSets();
	class FString IncrementNumDeaths();
	float HitchDetected();
	bool HandleNewPlayer(class AShooterPlayerController* NewPlayer, class UPrimalPlayerData* PlayerData, class AShooterCharacter** PlayerCharacter, bool bIsFromLogin);
	struct FTribeData GetTribeDataBlueprint(int32 TribeID);
	class FString GetStringOption(class FString* OptionName);
	class FString GetSessionTimeString();
	bool GetServerSettingsFloat(class FString* KeyValue, float* OutFloat);
	class FString GetServerName(bool* bNumbersAndLettersOnly);
	class UPrimalPlayerData* GetPlayerData();
	TArray<class APrimalDinoCharacter*> GetOverlappingDinoCharactersOfTeamAndClass(float OverlapRange, int32 DinoTeam, bool bExactClassMatch, bool bIgnoreClass);
	bool GetOrLoadTribeData_ReturnAbandonedResult(int32 TribeID, struct FTribeData* LoadedTribeData, bool* IsAbandoned, enum class ETribeDataExclude* ExcludeFilter);
	bool GetOrLoadTribeData(int32 TribeID, struct FTribeData* LoadedTribeData, enum class ETribeDataExclude* ExcludeFilter);
	int32 GetNumDeaths();
	int32 GetNumberOfLivePlayersOnTribe(class FString* TribeName);
	bool GetLaunchOptionFloat(class FString* LaunchOptionKey, float* ReturnVal);
	double GetLastMissionDeactivatedUtcTime();
	int32 GetIntOptionIni(class FString* OptionName);
	float GetFloatOptionIni(class FString* OptionName);
	bool GetBoolOptionIni(class FString* OptionName, bool* bDefaultValue);
	struct FVector ForceRepopulateFoliageAtPoint(float MaxRangeFromPoint, int32* MaxNumFoliages, class UClass** RepopulatedEmitter, struct FVector* StructureDownTraceVector, struct FVector* StructureUpTraceVector, bool* bDontCheckForOverlaps, int32* TriggeredByTeamID, bool bCheckAreaAroundEachIndividualFoliage, float RadiusAroundEachIndivitualFoliageToCheck, bool bReallyForceIt);
	struct FVector ForceRepopulateAllHarvestElements(float MaxRangeFromPoint);
	int32 ForceCreateTribe(class FString* TribeName, int32 TeamOverride);
	int32 ForceAddPlayerToTribe(class AShooterPlayerState* ForPlayerState, class FString* TribeName);
	bool FilterBadWords(const class FString& String, bool bCheckWithoutSpecialChars);
	void DoMaintenanceRestartWarning();
	void DoMaintenanceRestart();
	int32 CountOverlappingDinoCharactersOfTeamAndClass(float OverlapRange, int32 DinoTeam, bool bExactClassMatch, bool bIgnoreClass);
	class UClass* ClearLastMissionDeactivatedTime();
	bool CheckJoinInProgress(bool bIsFromLogin, class APlayerController* NewPlayer);
	void ChatLogAppend(class AShooterPlayerController* SenderController, struct FPrimalChatMessage* Message);
	void BPPreSpawnedDino(class APrimalDinoCharacter** TheDino);
	bool BPIsSpawnpointPreferred(class APlayerStart* SpawnPoint, class AController** Player);
	bool BPIsSpawnpointAllowed(class APlayerStart* SpawnPoint, class AController** Player);
	void BPGetActorSaveGameTypes(const TArray<class UClass*>& SaveGameTypes);
	struct FShooterGameSessionParams BPDoInitSessionParams();
	class FString BPDoInitGame(const class FString& Options);
	bool AreTribesAllied(int32 TribeID1, int32 TribeID2);
	bool AllowTaming(int32 ForTeam);
	bool AllowDamage(class UWorld** ForWorld, int32 TargetingTeam1, int32 TargetingTeam2, bool bIgnoreDamageIfAllied);
	void AdminExit(const class FString& Verify);
	void AddToTribeLog(int32 TribeID, const class FString& NewLog);
	bool AddPlayerToNextTeamBatchPlayersAwaitingUpdatedCachedTeamTameList(class AShooterPlayerController* RequestingPlayer);
	void AddPlayerToBeNotifiedWhenCachedTeamTameListIsUpdated(class AShooterPlayerController* RequestingPlayer);
};

// 0x0 (0x3FB0 - 0x3FB0)
// Class ShooterGame.CustomGameMode
class ACustomGameMode : public AShooterGameMode
{
public:

	static class UClass* StaticClass();
	static class ACustomGameMode* GetDefaultObj();

	void SaveIntToConfig(int32 IntValue, class FString* KeyValue);
	void SaveFloatToConfig(float IntValue, class FString* KeyValue);
	void SaveBoolToConfig(bool IntValue, class FString* KeyValue);
	bool OnUpdateTribeData(const struct FTribeData& NewTribeData);
	bool OnRemoveTribe(int32 TribeID);
	bool OnPlayerCanRestart(class APlayerController** Player);
	bool OnIsUsedSpawnPointStillSupported(class APlayerStart* SpawnPoint, class AController** Player);
	bool OnIsSpawnpointAllowed(class APlayerStart* SpawnPoint, class AController** Player);
	bool OnInitOptionEvent(const class FString& Options);
	bool OnInitGameState();
	bool OnInitGame(const class FString& Options, const class FString& ErrorMessage);
	bool OnHandleLeavingMap();
	class FString OnDoGameCommand(const class FString& TheCommand);
	bool OnAllowRenameTribe(class AShooterPlayerState* ForPlayerState, class FString* TribeName);
	bool OnAllowNotifyRemotePlayerDeath(class AShooterCharacter* ForChar);
	bool OnAllowModifyStatusValue(class UPrimalCharacterStatusComponent* ForComp, enum class EPrimalCharacterStatusValue* ValueType, float* Amount);
	bool OnAllowClearTribe(class AShooterPlayerState* ForPlayerState);
	bool OnAllowAddXP(class UPrimalCharacterStatusComponent* ForComp);
	bool OnAllowAddToTribe(class AShooterPlayerState* ForPlayerState, const struct FTribeData& MyNewTribe);
	float OnAdjustDamage(class AActor* Victim, float DefaultDamage, struct FDamageEvent* DamageEvent, class AController** EventInstigator, class AActor* DamageCauser);
	struct FTribeData MakeTribeData(class FString* TribeName, int32 TribeID);
	void KickPlayersWithoutCharacter(class FString* Reason);
	void KickPlayer(class APlayerController* NewPlayer);
	bool IsInAllowedToCheatList(class APlayerController* NewPlayer);
	void InitOptionFloatToINI(const class FString& Options, float FloatValue, class FString* KeyValue);
	float GetValueFromINI(class FString* KeyValue);
	int32 GetIntValueFromINI(class FString* KeyValue);
	float GetIniFloatValue(class FString* KeyValue);
	float GetFloatValueFromINI(class FString* KeyValue);
	bool GetBoolValueFromINI(class FString* KeyValue);
	void CleanUpSotfNotificationManager();
	bool CheckForCommand(class FString* CommandName);
	TArray<struct FPrimalPlayerCharacterConfigStructReplicated> BreakTribeData(struct FTribeData* Data, class FString* TribeName, int32 TribeID);
	void BlueprintRemoveTribe(int32 TribeID);
};

// 0x148 (0xFA8 - 0xE60)
// Class ShooterGame.CustomGameState
class ACustomGameState : public AShooterGameState
{
public:
	class UClass*                                TribeFlagClass;                                    // 0xE60(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class APrimalStructureTribeFlag*>     TribesFlags;                                       // 0xE68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FSOTFScorePlayerData>          PlayerScoreData;                                   // 0xE78(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29A1[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSOTFScoreTribeData>           TribeScoreData;                                    // 0xED8(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29A2[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bReplicateScoreData : 1;                           // Mask: 0x1, PropSize: 0x10xF38(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseGetColorForTargetingTeam : 1;                  // Mask: 0x2, PropSize: 0x10xF38(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bEnableAutoUploadTribeFlag : 1;                    // Mask: 0x4, PropSize: 0x10xF38(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_181 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	bool                                         bEnableAllyRadarData;                              // 0xF39(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29A3[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AllyRadarUpdateFrequency;                          // 0xF3C(0x4)(BlueprintVisible, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29A4[0x68];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ACustomGameState* GetDefaultObj();

	class APrimalBuff* SpawnBuffAndAttachToCharacter(class APrimalCharacter* PrimalCharacter);
	void SetTribeTexture(int32 TribeID, class UPaintingTexture** NewTexture);
	void SetScoreDataForTribe(int32 ForTargetingTeam, struct FSOTFScoreTribeData* NewScoreData, bool* bReplicateToClients);
	void SetScoreDataForPlayer(int32* LinkedID, struct FSOTFScorePlayerData* NewScoreData, bool* bReplicateToClients);
	class FString SetActionReportItem(struct FActionReportItem* Data, class FString* TribeName);
	void RemoveTribeFlag(int32 TribeID);
	struct FVector2D ProjectWorldToScreenPosition();
	void OnSetHudEvent();
	void OnRep_TribeScoreData();
	void OnRep_PlayerScoreData();
	class USoundBase* OnOverrideDynamicMusic(class APrimalCharacter** ForCharacter);
	void OnNotifyPlayerDied(class AShooterCharacter** TheShooterChar, class AShooterPlayerController* PrevController, class APawn* InstigatingPawn, class AActor* DamageCauser);
	bool OnHasGameModeMatchStarted();
	void OnHandleActorEvent(class AActor** ForActor, class FName* NameParam, struct FVector* VecParam);
	bool OnForceOccludedFloatingHUD(class AActor** AnActor, class AShooterPlayerController** ForPC);
	float OnExtraShooterCharacterTick(class AShooterCharacter* ForChar);
	bool OnDrawingHUDNotifications();
	bool OnDrawHUD();
	struct FVector OnDrawExtraPlayerFloatingHUD(class AShooterCharacter** TheShooterChar);
	bool OnCheckGameStateIfCanRespawn(class APlayerController** ForPC);
	bool OnAllowTribeManager(class AShooterPlayerController** ForPC);
	bool OnAllowTribeManagement();
	bool OnAllowStartSupplyCrateSpawns();
	bool OnAllowShowPlayerHudUI(class APrimalCharacter** ForPawn);
	bool OnAllowRemoveItems(class UPrimalInventoryComponent** ForInv, class UPrimalItem** AnItemToTransfer);
	bool OnAllowPopUps();
	bool OnAllowOrbitCamera(class APrimalCharacter** ForCharacter);
	bool OnAllowFastTravel(class APrimalStructureBed** ForBed, class AShooterPlayerController** ForPC);
	bool OnAllowDaytimeTransitionSounds();
	bool OnAllowCreateSurvivor();
	struct FPlayerDeathNotification MakePlayerDeathNotification(int32* TargetingTeamID);
	struct FBattleTribeData MakeBattleTribeData(class FString* TribeName, int32 TribeID);
	struct FBattlePlayerData MakeBattlePlayerData(int32 TribeID);
	class APlayerController* KickPlayer(class FString* Reason);
	bool IsTribeID();
	bool IsAuthorityRole();
	void HideUIScene(class UClass** SceneClass);
	class UTexture2D* GetTribeTexture(int32 TribeID);
	double GetTimeSeconds();
	TArray<struct FBattlePlayerData> GetPlayerDatasForTribe(int32 TribeID, TArray<struct FBattlePlayerData>* AllPlayerDatas);
	class FString GetPawnName(class APawn* Pawn);
	class FString GetPawnKillerName(class APawn* Pawn);
	TArray<struct FAllyRadarDatas> GetFilteredAllyRadarTargets();
	class FString GetDeathNotificationText(class AShooterCharacter** TheShooterChar, class APawn* InstigatingPawn, class FString* KillerAndTribe, class FString* TheNotificationStringYou, class FString* TheNotificationStringAlly, class FString* TheNotificationStringEnemy);
	class ACustomActorList* GetCustomActors();
	void GetColorForTargetingTeam(int32 ForTargetingTeam, struct FColor* NameColor, struct FColor* PlatformProfileNameColor);
	TArray<class AShooterPlayerController*> GetAllShooterControllers();
	TArray<class AShooterCharacter*> GetAllShooterCharactersOfTeam(int32* KillerTeam);
	TArray<class AShooterCharacter*> GetAllShooterCharacters();
	TArray<class APrimalDinoCharacter*> GetAllDinoCharactersOfTeam(int32* KillerTeam);
	struct FColor DrawTileOnCanvas(float* U, float* V, float UL, float VL);
	void CreateScoreDataForTribe(TArray<int32>* TargetingTeams);
	void CreateScoreDataForPlayers(TArray<int32>* LinkedIDs);
	struct FPlayerDeathNotification CreateDeathNotification(class AShooterCharacter** TheShooterChar, class AShooterPlayerController* PrevController, class APawn* InstigatingPawn, int32 MaxNumberOfRespawns);
	struct FDamageEvent CreateDamageEvent();
	bool CheckTimeSince();
	class AActor* BroadcastActorCustomEvent(class AActor** Actor);
	TArray<struct FPrimalPlayerCharacterConfigStructReplicated> BreakTribeData(class FString* TribeName, int32 TribeID);
	TArray<struct FPrimalPlayerCharacterConfigStructReplicated> BreakPlayerDeathNotification(struct FPlayerDeathNotification* Data, int32* TargetingTeamID);
	struct FBattleTribeData BreakBattleTribeData(class FString* TribeName, int32 TribeID);
	class FString BreakBattlePlayerData(struct FBattlePlayerData* Data, int32 TribeID);
	class FString BreakActionReportItem(struct FActionReportItem* Data, class FString* TribeName);
	class APrimalStructureTribeFlag* BPGetTribeFlagRef(int32 TribeID, bool CreateFlag);
	struct FSOTFScoreTribeData BPGetScoreDataForTribe(int32 ForTargetingTeam);
	struct FSOTFScorePlayerData BPGetScoreDataForPlayer(int32* LinkedID);
	void BPClientUpdateAllyRadar();
};

// 0x30 (0x540 - 0x510)
// Class ShooterGame.DamageVolumeBase
class ADamageVolumeBase : public AVolume
{
public:
	float                                        DamageAmount;                                      // 0x510(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, GlobalConfig, SubobjectReference)
	float                                        DamageInterval;                                    // 0x514(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                DamageType;                                        // 0x518(0x8)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig)
	TArray<struct FDamageNegatingItem>           DamageNegatingItems;                               // 0x520(0x10)(BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29A7[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ADamageVolumeBase* GetDefaultObj();

	void OnEndOverlap(class AActor* OverlappedActor, class AActor** Actor);
	void OnBeginOverlap(class AActor* OverlappedActor, class AActor** Actor);
};

// 0x8 (0x548 - 0x540)
// Class ShooterGame.DamageVolumeSwamp
class ADamageVolumeSwamp : public ADamageVolumeBase
{
public:
	uint8                                        Pad_29A8[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ADamageVolumeSwamp* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class ShooterGame.DatabaseShared
class UDatabaseShared : public UObject
{
public:
	uint8                                        bInitialized : 1;                                  // Mask: 0x1, PropSize: 0x10x28(0x1)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_29A9[0x3F];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDatabaseShared* GetDefaultObj();

};

// 0x10 (0x78 - 0x68)
// Class ShooterGame.Database_LoginData
class UDatabase_LoginData : public UDatabaseShared
{
public:
	uint8                                        Pad_29AB[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDatabase_LoginData* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class ShooterGame.Database_LoginData_Redis
class UDatabase_LoginData_Redis : public UDatabase_LoginData
{
public:

	static class UClass* StaticClass();
	static class UDatabase_LoginData_Redis* GetDefaultObj();

};

// 0x10 (0x78 - 0x68)
// Class ShooterGame.Database_PubSub_GeneralNotifications
class UDatabase_PubSub_GeneralNotifications : public UDatabaseShared
{
public:
	uint8                                        Pad_29AD[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDatabase_PubSub_GeneralNotifications* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class ShooterGame.Database_PubSub_GeneralNotifications_Redis
class UDatabase_PubSub_GeneralNotifications_Redis : public UDatabase_PubSub_GeneralNotifications
{
public:

	static class UClass* StaticClass();
	static class UDatabase_PubSub_GeneralNotifications_Redis* GetDefaultObj();

};

// 0xF8 (0x9D0 - 0x8D8)
// Class ShooterGame.DataListEntryButton_CustomOverlay
class UDataListEntryButton_CustomOverlay : public UDataListEntryButton
{
public:
	uint8                                        Pad_29B0[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSlateBrush                           CustomOverlayImage;                                // 0x8E0(0xD0)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    Material;                                          // 0x9B0(0x8)(Edit, ConstParm, Net, EditFixedSize, Transient, Config, DisableEditOnInstance)
	uint8                                        bCustomOverlayEnabled : 1;                         // Mask: 0x1, PropSize: 0x10x9B8(0x1)(Edit, Net, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_183 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_29B2[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             CustomOverlayScale;                                // 0x9C0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UDataListEntryButton_CustomOverlay* GetDefaultObj();

};

// 0x10 (0x768 - 0x758)
// Class ShooterGame.DataListEntryButton_DyeResources
class UDataListEntryButton_DyeResources : public UPrimalUI
{
public:
	uint8                                        Pad_29B3[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataListEntryButton_DyeResources* GetDefaultObj();

};

// 0x100 (0x858 - 0x758)
// Class ShooterGame.DataListEntryButton_HostSession
class UDataListEntryButton_HostSession : public UBaseSelectableButtonWidget
{
public:
	uint8                                        bIsCustom : 1;                                     // Mask: 0x1, PropSize: 0x10x758(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bIsProcedural : 1;                                 // Mask: 0x2, PropSize: 0x10x758(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsActivated : 1;                                  // Mask: 0x4, PropSize: 0x10x758(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsMapMod : 1;                                     // Mask: 0x8, PropSize: 0x10x758(0x1)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsActiveModListingEntry : 1;                      // Mask: 0x10, PropSize: 0x10x758(0x1)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bSelectOnClicked : 1;                              // Mask: 0x20, PropSize: 0x10x758(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsTotalConversion : 1;                            // Mask: 0x40, PropSize: 0x10x758(0x1)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_185 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_29B7[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DisplayName;                                       // 0x760(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient)
	bool                                         bCenterDisplayName;                                // 0x770(0x1)(BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29B8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ShortMapName;                                      // 0x778(0x10)(Edit, ExportObject, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                LongMapName;                                       // 0x788(0x10)(ConstParm, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                ModName;                                           // 0x798(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                ModPath;                                           // 0x7A8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint64                                       ModItemId;                                         // 0x7B8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29B9[0x98];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataListEntryButton_HostSession* GetDefaultObj();

	bool GetHasServerData();
	bool GetHasSaveGame();
};

// 0x2E8 (0xA40 - 0x758)
// Class ShooterGame.DataListEntryButton_ListSession
class UDataListEntryButton_ListSession : public UBaseSelectableButtonWidget
{
public:
	struct FCustomButtonWidgetStyle              LastJoinedExtendedStyle;                           // 0x758(0x48)(Edit, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FCustomButtonWidgetStyle              StandardExtendedStyle;                             // 0x7A0(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                UniqueID;                                          // 0x7E8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class FString                                GameName;                                          // 0x7F8(0x10)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig)
	class FString                                BuildId;                                           // 0x808(0x10)(BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                OwnerName;                                         // 0x818(0x10)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FString                                MapName;                                           // 0x828(0x10)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                DayTimeStr;                                        // 0x838(0x10)(ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint32                                       NumPlayers;                                        // 0x848(0x4)(BlueprintVisible, Net, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint32                                       MaxNumPlayers;                                     // 0x84C(0x4)(ConstParm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint64                                       ModId;                                             // 0x850(0x8)(ConstParm, Net, Parm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint64                                       TotalConversionId;                                 // 0x858(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint64                                       Ping;                                              // 0x860(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, EditConst, SubobjectReference)
	class FString                                ModLabelString;                                    // 0x868(0x10)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bHasMods;                                          // 0x878(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bHasPassword;                                      // 0x879(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsFavourite;                                      // 0x87A(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsPVEServer;                                      // 0x87B(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29BB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            PasswordTexture;                                   // 0x880(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsOfficialServer;                                 // 0x888(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUsingBattleEye;                                   // 0x889(0x1)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowDownloadCharacters;                          // 0x88A(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowDownloadItems;                               // 0x88B(0x1)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29BC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            BattleEyeTexture;                                  // 0x890(0x8)(Edit, ConstParm, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            OfficialServerTexture;                             // 0x898(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            PVPServerTexture;                                  // 0x8A0(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            PVEServerTexture;                                  // 0x8A8(0x8)(Edit, BlueprintVisible, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          DisplayStringSelectedColor;                        // 0x8B0(0x10)(ConstParm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bSelectOnClicked : 1;                              // Mask: 0x1, PropSize: 0x10x8C0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29BF[0x17F];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataListEntryButton_ListSession* GetDefaultObj();

};

// 0x70 (0x7C8 - 0x758)
// Class ShooterGame.DataListEntryButton_MainMenu
class UDataListEntryButton_MainMenu : public UBaseSelectableButtonWidget
{
public:
	uint8                                        bIsCustom : 1;                                     // Mask: 0x1, PropSize: 0x10x758(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bIsProcedural : 1;                                 // Mask: 0x2, PropSize: 0x10x758(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_186 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_29C0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DisplayName;                                       // 0x760(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient)
	bool                                         bCenterDisplayName;                                // 0x770(0x1)(BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29C1[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                MapName;                                           // 0x778(0x10)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                ModName;                                           // 0x788(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                ModPath;                                           // 0x798(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint64                                       ModItemId;                                         // 0x7A8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bSelectOnClicked : 1;                              // Mask: 0x1, PropSize: 0x10x7B0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_187 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_29C3[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UCustomButtonWidget*                   ButtonObject;                                      // 0x7B8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTextBlock*                            EntryNameLabel;                                    // 0x7C0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UDataListEntryButton_MainMenu* GetDefaultObj();

};

// 0xA8 (0x980 - 0x8D8)
// Class ShooterGame.DataListEntryButton_PrimalFolder
class UDataListEntryButton_PrimalFolder : public UDataListEntryButton
{
public:
	struct FVector2D                             ItemNameSpacing;                                   // 0x8D8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsItemSlotButton : 1;                             // Mask: 0x1, PropSize: 0x10x8E8(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bSimpleIconOnly : 1;                               // Mask: 0x2, PropSize: 0x10x8E8(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_188 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_29C4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TextScaleMultiplier;                               // 0x8EC(0x4)(Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseNewRenderingPath;                              // 0x8F0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29C5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  TextLabelName;                                     // 0x8F4(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29C6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPrimalFolderIcons                    IconsNormal;                                       // 0x900(0x20)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FPrimalFolderIcons                    IconsSelected;                                     // 0x920(0x20)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                FolderName;                                        // 0x940(0x10)(ExportObject, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        FolderNameTextClipOffset;                          // 0x950(0x4)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FolderNameTextFontScale;                           // 0x954(0x4)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            FolderIcon;                                        // 0x958(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EFolderWidgetType                 FolderType;                                        // 0x960(0x1)(BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_29C7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                FontColor;                                         // 0x964(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        FolderLevel;                                       // 0x968(0x1)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29C8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UDataListPanel*                        ParentPanel;                                       // 0x970(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29C9[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataListEntryButton_PrimalFolder* GetDefaultObj();

};

// 0x8E8 (0x11C0 - 0x8D8)
// Class ShooterGame.DataListEntryButton_PrimalItem
class UDataListEntryButton_PrimalItem : public UDataListEntryButton
{
public:
	struct FVector2D                             DesiredSize;                                       // 0x8D8(0x10)(BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                MiscInfoStringColor;                               // 0x8E8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                ItemNameColor;                                     // 0x8EC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                ItemCategoryColor;                                 // 0x8F0(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29CC[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FButtonStyle                          WidgetStyleWhenBroken;                             // 0x900(0x3F0)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FDataListEntryButtonBorderColors      NormalBorderColors;                                // 0xCF0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FDataListEntryButtonBorderColors      BrokenBorderColors;                                // 0xD00(0x10)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BarOffsetY;                                        // 0xD10(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DurabilityBarBorderThickness;                      // 0xD14(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DurabilityBarThickness;                            // 0xD18(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                DurabilityBarFgColor;                              // 0xD1C(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                DurabilityBarBgColor;                              // 0xD20(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                SpoilingBarFgColor;                                // 0xD24(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                SpoilingBarBgColor;                                // 0xD28(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29CE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSlateBrush                           WidgetSelectedStyleBrush;                          // 0xD30(0xD0)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             WidgetSelectedStyleBrushSize;                      // 0xE00(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             WidgetSelectedStyleBrushOffset;                    // 0xE10(0x10)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FSlateBrush                           WidgetActiveStyleBrush;                            // 0xE20(0xD0)(ConstParm, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FSlateBrush                           WidgetBrokenOverlayStyleBrush;                     // 0xEF0(0xD0)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                UnselectedTintColor;                               // 0xFC0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                TintEngramRequirementsMet;                         // 0xFC4(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                TintEngramRequirementsUnmet;                       // 0xFC8(0x4)(ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                TintBlueprintRequirementsMet;                      // 0xFCC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                TintBlueprintRequirementsUnmet;                    // 0xFD0(0x4)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                TintTekBlueprintRequirementsMet;                   // 0xFD4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                TintTekBlueprintRequirementsUnmet;                 // 0xFD8(0x4)(ExportObject, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                TintCompatibleWithDraggedItem;                     // 0xFDC(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                CraftRepairIconTint;                               // 0xFE0(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FMargin                               BorderSizePx;                                      // 0xFE4(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29CF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            EngramBg;                                          // 0xFF8(0x8)(Edit, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            BlueprintBg;                                       // 0x1000(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            TekgramBg;                                         // 0x1008(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            ItemQualityOverlay;                                // 0x1010(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            SlottedIcon;                                       // 0x1018(0x8)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            ActiveSlotIcon;                                    // 0x1020(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            CraftingIcon;                                      // 0x1028(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            RepairingIcon;                                     // 0x1030(0x8)(BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            BrokenIcon;                                        // 0x1038(0x8)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             QuantityTxtPosition;                               // 0x1040(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             ArmorDamageTxtPosition;                            // 0x1050(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             ArmorDamageIconPosition;                           // 0x1060(0x10)(ConstParm, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ArmorDamageIconScale;                              // 0x1070(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29D0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             AmmoTxtPosition;                                   // 0x1078(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             WeightTxtPosition;                                 // 0x1088(0x10)(BlueprintVisible, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             NameTxtPositionPercent;                            // 0x1098(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             NameTxtBoxSizePercent;                             // 0x10A8(0x10)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             CategoryTxtPosition;                               // 0x10B8(0x10)(Edit, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             ItemNameSpacing;                                   // 0x10C8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        UseItemCraftQueueIndex;                            // 0x10D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseRemoteCraftQueue : 1;                          // Mask: 0x1, PropSize: 0x10x10DC(0x1)(ConstParm, ExportObject, Net, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsItemSlotButton : 1;                             // Mask: 0x2, PropSize: 0x10x10DC(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_189 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_29D1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TextScaleMultiplier;                               // 0x10E0(0x4)(Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TextArmorDamageSize;                               // 0x10E4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TextQuantitySize;                                  // 0x10E8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TextAmmoSize;                                      // 0x10EC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TextWeightSize;                                    // 0x10F0(0x4)(Edit, ConstParm, BlueprintVisible, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TextNameSize;                                      // 0x10F4(0x4)(ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TextCategorySize;                                  // 0x10F8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         EnableTextShadow;                                  // 0x10FC(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         EnableTextGlow;                                    // 0x10FD(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29D2[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TextGlowColor;                                     // 0x1100(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             TextGlowInnerRadius;                               // 0x1110(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             TextGlowOuterRadius;                               // 0x1120(0x10)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UFont*                                 DetailTextFont;                                    // 0x1130(0x8)(EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ItemIconScale;                                     // 0x1138(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29D3[0x74];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsUsingExtraCanvasBar;                            // 0x11B0(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29D4[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataListEntryButton_PrimalItem* GetDefaultObj();

	void HandleOnContextMenuIsOpenChanged(bool bIsOpen);
	float GetShowExtraCanvasBar(bool* IsVisible, struct FLinearColor* BarColor);
};

// 0xB8 (0x810 - 0x758)
// Class ShooterGame.DataListEntryEngramList
class UDataListEntryEngramList : public UPrimalUI
{
public:
	class UClass*                                EntryWidgetTemplate;                               // 0x758(0x8)(Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  DataPanelName;                                     // 0x760(0x8)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  LevelLabelName;                                    // 0x768(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  LevelEnabledEffectName;                            // 0x770(0x8)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ElementIconName;                                   // 0x778(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  EngramRowStartName;                                // 0x780(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  EngramRowMiddleName;                               // 0x788(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  EngramRowEndName;                                  // 0x790(0x8)(Edit, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextActiveColor;                           // 0x798(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextInactiveColor;                         // 0x7A8(0x10)(OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        WidgetLimit;                                       // 0x7B8(0x4)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29D7[0x54];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataListEntryEngramList* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.DataListEntryInterface
class IDataListEntryInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IDataListEntryInterface* GetDefaultObj();

};

// 0xC8 (0x3F8 - 0x330)
// Class ShooterGame.DataListEntryWidget
class UDataListEntryWidget : public UPrimalUserWidget
{
public:
	class FName                                  DataListButtonName;                                // 0x330(0x8)(BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ExistingButtonExplicitIndexType;                   // 0x338(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  TraditionalButtonName;                             // 0x33C(0x8)(Edit, ConstParm, BlueprintReadOnly, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  TraditionalLabelName;                              // 0x344(0x8)(ExportObject, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29DA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            ButtonBackgroundOverride;                          // 0x350(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                DisplayStringOverride;                             // 0x358(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        PrimalItemButton_UseItemCraftQueueIndex;           // 0x368(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        PrimalItemButton_bUseRemoteCraftQueue : 1;         // Mask: 0x1, PropSize: 0x10x36C(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bOverrideButtonShowDisplayStringWhenHasItem : 1;   // Mask: 0x2, PropSize: 0x10x36C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bOverrideButtonShowDisplayStringWhenHasItemValue : 1; // Mask: 0x4, PropSize: 0x10x36C(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bOverrideButtonDisplayStringCenterX : 1;           // Mask: 0x8, PropSize: 0x10x36C(0x1)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bOverrideButtonDisplayStringCenterXValue : 1;      // Mask: 0x10, PropSize: 0x10x36C(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bOverrideButtonDisplayStringCenterY : 1;           // Mask: 0x20, PropSize: 0x10x36C(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bOverrideButtonDisplayStringCenterYValue : 1;      // Mask: 0x40, PropSize: 0x10x36C(0x1)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bOverrideButtonDisplayStringOffset : 1;            // Mask: 0x80, PropSize: 0x10x36C(0x1)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29DB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             OverrideButtonDisplayStringOffsetValue;            // 0x370(0x10)(Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bOverrideButtonDisplayStringScale : 1;             // Mask: 0x1, PropSize: 0x10x380(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bOverrideButtonDisplayStringFontSize : 1;          // Mask: 0x2, PropSize: 0x10x380(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseEngramToolTips : 1;                            // Mask: 0x4, PropSize: 0x10x380(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_18B : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_29DE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OverrideButtonDisplayStringFontSizeValue;          // 0x384(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             OverrideButtonDisplayStringScaleValue;             // 0x388(0x10)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            OverrideButtonSelectedIcon;                        // 0x398(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bBoundToDragging;                                  // 0x3A0(0x1)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         CanBeHighlightedWhenEmpty;                         // 0x3A1(0x1)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29E0[0x56];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataListEntryWidget* GetDefaultObj();

	class UWidget* OnDraggedClickedEventObject();
	void InitializeMeDefaults();
	float GetShowExtraCanvasBar(bool* IsVisible, struct FLinearColor* BarColor);
	class UDataListEntryButton* GetDataListButton();
	class UPrimalUI* BPInitializeMe();
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.DataListInterface
class IDataListInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IDataListInterface* GetDefaultObj();

};

// 0x218 (0xFB0 - 0xD98)
// Class ShooterGame.DataListPanel
class UDataListPanel : public UScrollBox
{
public:
	class UClass*                                EntryWidgetTemplate;                               // 0xD98(0x8)(Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UClass*                                EntryListTemplate;                                 // 0xDA0(0x8)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                NullEntryWidgetTemplate;                           // 0xDA8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                PaddingEntryWidgetTemplate;                        // 0xDB0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                FolderWidgetTemplate;                              // 0xDB8(0x8)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                GenericWidgetTemplate;                             // 0xDC0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class FString>                        CustomFolders;                                     // 0xDC8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            FolderIcon;                                        // 0xDD8(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                FolderColor;                                       // 0xDE0(0x4)(ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29E1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            BackFolderIcon;                                    // 0xDE8(0x8)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                BackFolderColor;                                   // 0xDF0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29E2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            CustomFolderIcon;                                  // 0xDF8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                CustomFolderColor;                                 // 0xE00(0x4)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bSupportsCustomFolders : 1;                        // Mask: 0x1, PropSize: 0x10xE04(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAllowMultiLevelCustomFolders : 1;                 // Mask: 0x2, PropSize: 0x10xE04(0x1)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUsePaddingTemplate : 1;                           // Mask: 0x4, PropSize: 0x10xE04(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseForEngramList : 1;                             // Mask: 0x8, PropSize: 0x10xE04(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForceRefreshDataListWidgetAdjacents : 1;          // Mask: 0x10, PropSize: 0x10xE04(0x1)(Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_18D : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_29E3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bBringHoveredItemsToTop;                           // 0xE08(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bEnableSupportCustomFolders;                       // 0xE09(0x1)(BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceDragging;                                    // 0xE0A(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceEntryDisplayString;                          // 0xE0B(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceEntryClickWhenNoData;                        // 0xE0C(0x1)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseExistingButtons;                               // 0xE0D(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseExistingButtonExplicitEntryIndexTypeMapping;   // 0xE0E(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSelectEntriesOnHighlight;                         // 0xE0F(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MinimalItemCount;                                  // 0xE10(0x4)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSupplyAdjacentsToChildren;                        // 0xE14(0x1)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCanBeSelectedWhenEmpty;                           // 0xE15(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29E5[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        FilledRowsBeforeEnablingScrolling;                 // 0xE18(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29E6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UDataListEntryWidget*>          EntryWidgets;                                      // 0xE20(0x10)(ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29E7[0xD0];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                CustomFolderBlueprint;                             // 0xF00(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOnlySkins;                                        // 0xF08(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsSkinSelectorMode;                               // 0xF09(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIncludeSkins;                                     // 0xF0A(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCreateFolders;                                    // 0xF0B(0x1)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int8                                         FolderLevel;                                       // 0xF0C(0x1)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29E8[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                CustomFolderFilter;                                // 0xF10(0x10)(ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int8                                         SortType;                                          // 0xF20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29E9[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                NameFilter;                                        // 0xF28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29EA[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        MyDataListType;                                    // 0xF60(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29EB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UDataListEntryWidget*>          CurrentCustomFolders;                              // 0xF68(0x10)(BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UDataListEntryWidget*                  BackWidget;                                        // 0xF78(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29EC[0x30];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataListPanel* GetDefaultObj();

	bool PreemptiveRequestLoadAllEntries();
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.DataListProviderInterface
class IDataListProviderInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IDataListProviderInterface* GetDefaultObj();

};

// 0x90 (0x3C0 - 0x330)
// Class ShooterGame.DataListValueGeneric
class UDataListValueGeneric : public UPrimalUserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnValueChanged;                                    // 0x330(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, GlobalConfig, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnTextCommitted;                                   // 0x340(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig)
	class FText                                  OptionSelectedText;                                // 0x350(0x18)(ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class FText>                          OptionsValues;                                     // 0x368(0x10)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShowOverrideValue;                                // 0x378(0x1)(ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29FB[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FText                                  OverridedOptionSelectedText;                       // 0x380(0x18)(Edit, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          Color;                                             // 0x398(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm)
	struct FVector2D                             ColorPickerValue;                                  // 0x3A8(0x10)(ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29FC[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataListValueGeneric* GetDefaultObj();

	void UpdateColorPicker(struct FVector2D* ColorPickerSliderValue);
	void SetParameterValue(class FString* Value, bool* bPreventCallParent);
	void SetOverridedParameterValue(class FText* Value, bool* bPreventRecall);
	void SetOverridedFloatValue(float* Value);
	void SetIsSelectedBP(bool* Selected);
	void SetFloatValue(float* Value);
	void SetBoolValue(bool* Value);
	void OnOverridedParameterValue(class FString* Value, bool* bPreventCallParent);
	bool IsExpanded();
	class USlider* HasSlider();
	class USlider* HasExpandedSlider();
	float HandleOnValueChanged();
	class FText HandleOnOverrideValueChanged(enum class ETextCommit* CommitMethod);
	float GetOverridedFloatValue();
	bool GetIsSelectedBP();
	float GetFloatValue();
	bool GetBoolValue();
	TArray<class UWidget*> GetAllValueWidgets();
	class UWidget* CycleDataValues(class UWidget** CurrentHighlighted, int32 Dir);
	void CloseSlider();
};

// 0x30 (0x4F0 - 0x4C0)
// Class ShooterGame.DayCycleAmbientSound
class ADayCycleAmbientSound : public AActor
{
public:
	class UAudioComponent*                       AudioComponentDay;                                 // 0x4C0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UAudioComponent*                       AudioComponentNight;                               // 0x4C8(0x8)(BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DayTimeSoundMorningFadeInStart;                    // 0x4D0(0x4)(Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DayTimeSoundMorningFadeInEnd;                      // 0x4D4(0x4)(Edit, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DayTimeSoundEveningFadeOutStart;                   // 0x4D8(0x4)(Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DayTimeSoundEveningFadeOutEnd;                     // 0x4DC(0x4)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsAlwaysAudible : 1;                              // Mask: 0x1, PropSize: 0x10x4E0(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAllowConcurrentWithPostProcessSound : 1;          // Mask: 0x2, PropSize: 0x10x4E0(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bOnlyAudibleWhenRaining : 1;                       // Mask: 0x4, PropSize: 0x10x4E0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bBlueprintAudibleWhenRainingEnabled : 1;           // Mask: 0x8, PropSize: 0x10x4E0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29FE[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ADayCycleAmbientSound* GetDefaultObj();

};

// 0x180 (0x640 - 0x4C0)
// Class ShooterGame.DayCycleManager
class ADayCycleManager : public AInfo
{
public:
	uint8                                        Pad_2A1E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CurrentTime;                                       // 0x4C8(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        TrueSkyTime;                                       // 0x4CC(0x4)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A1F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        TheDayNumberToMakeSerilizationWork;                // 0x4D4(0x4)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GlobalTrueSkyBrightness;                           // 0x4D8(0x4)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A20[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               GlobalTrueSkyColorMultiplier;                      // 0x4E0(0x18)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GlobalIBLCaptureBrightness;                        // 0x4F8(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GlobalBakeAndStreamIBLMultiplier;                  // 0x4FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GlobalGroundColorMultiplier;                       // 0x500(0x4)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GlobalSkyColorMultiplier;                          // 0x504(0x4)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SM4SkyLightMult;                                   // 0x508(0x4)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SM4DirLightMult;                                   // 0x50C(0x4)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               AtmosphericFogMultiplier;                          // 0x510(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SkyIBLIntensityMultiplier;                         // 0x528(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BaseTemperature;                                   // 0x52C(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BaseWind;                                          // 0x530(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RainAmount;                                        // 0x534(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SnowAmount;                                        // 0x538(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SkyWeatherSequenceBlend_Normal;                    // 0x53C(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SkyWeatherSequenceBlend_Hot;                       // 0x540(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SkyWeatherSequenceBlend_Cold;                      // 0x544(0x4)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SkyWeatherSequenceBlend_Rainy;                     // 0x548(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SkyWeatherSequenceBlend_Fog;                       // 0x54C(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsRaining;                                        // 0x550(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bLastReplicatedIsRaining;                          // 0x551(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bLastReplicatedIsSnowing;                          // 0x552(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A21[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            Sound_TransitionToMorning;                         // 0x558(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_TransitionToMidDay;                          // 0x560(0x8)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_TransitionToNight;                           // 0x568(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Sound_TransitionToMorningTime;                     // 0x570(0x4)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Sound_TransitionToNightTime;                       // 0x574(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Sound_TransitionToMidDayTime;                      // 0x578(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DayTimeStart;                                      // 0x57C(0x4)(ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DayTimeEnd;                                        // 0x580(0x4)(ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DayTimeLengthMultiplier;                           // 0x584(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class ALevelSequenceActor*>           NewLightingSequence;                               // 0x588(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ActiveLightingSequence;                            // 0x598(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A23[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bCheckForStructureActivation;                      // 0x5A4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUsesWind;                                         // 0x5A5(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCheckForWeaponFiring;                             // 0x5A6(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseBPOverrideItemAutoDecreaseDurability;          // 0x5A7(0x1)(ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bHideSupplyCrates;                                 // 0x5A8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A24[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        PreventBuffClassesInDayCycleLevel;                 // 0x5B0(0x10)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnStartDaytime;                                    // 0x5C0(0x10)(BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnStartNighttime;                                  // 0x5D0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnDayChange;                                       // 0x5E0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnHazardChange;                                    // 0x5F0(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        GenesisTradableOptions;                            // 0x600(0x10)(Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                HexagonVFXActorClass;                              // 0x610(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A26[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        GivePlayersBuffsOnSpawn;                           // 0x620(0x10)(ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FSoftObjectPath>               GivePlayersBuffAssetsOnSpawn;                      // 0x630(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ADayCycleManager* GetDefaultObj();

	class AShooterCharacter* ShooterCharacterSpawned();
	class AShooterCharacter* ShooterCharacterPossessed();
	void SetTimeOfDay(int32* Hours, int32* Minutes, int32* Seconds);
	bool IsRainingAtLocation(struct FVector* Location);
	bool IsDaytime();
	float GetWindAtLocation();
	float GetWeatherModifiedAmbientSoundMultiplier();
	float GetWaterLineStartZ();
	float GetTemperatureAtLocation();
	TArray<class UClass*> GetPreventBuffClassesInDayCycleLevel();
	float GetDeepWaterStartZ();
	class FString GetDayNumberString();
	struct FVector2D BPPostDrawSpawnMap(class AShooterPlayerController** ForPC);
	bool BPOverrideItemAutoDecreaseDurability();
	float BPOverrideGameStateMatineePlayRate(float* InPlayRate);
	class FName BPOnDCMCheat(float* Value);
	TArray<struct FPrimalMapMarkerEntryData> BPGetAdditionalMapMarkers(class AShooterPlayerController** ForPC);
	bool BPAllowSpawningCrate();
	float BPAdjustTemperature(class ABiomeZoneVolume* BiomeZoneVolume);
	class AShooterWeapon* AttemptWeaponFiring();
	bool AllowWeaponFiring();
	bool AllowStructureActivation();
	float AdjustStructureItemInsulation(class AShooterCharacter** ForCharacter);
};

// 0xB0 (0xD8 - 0x28)
// Class ShooterGame.DeferredMovementContext
class UDeferredMovementContext : public UObject
{
public:
	uint8                                        Pad_2A2B[0x70];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDeferredMove>                 DeferredMoves;                                     // 0x98(0x10)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FDeferredMovementTick                 TickFunction;                                      // 0xA8(0x30)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, EditConst)

	static class UClass* StaticClass();
	static class UDeferredMovementContext* GetDefaultObj();

};

// 0x8 (0x4C8 - 0x4C0)
// Class ShooterGame.DestructibleActor
class ADestructibleActor : public ADestructibleBaseActor
{
public:
	class USceneComponent*                       ActorRootComponent;                                // 0x4C0(0x8)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ADestructibleActor* GetDefaultObj();

	class UStaticMesh* SetFadingStaticMesh();
	class USkeletalMesh* SetFadingSkeletalMesh();
	class UMeshComponent* GetFadingMeshComponent();
};

// 0x18 (0x4E0 - 0x4C8)
// Class ShooterGame.DestroyedMeshActor
class ADestroyedMeshActor : public ADestructibleActor
{
public:
	float                                        TimeToSetNoCollision;                              // 0x4C8(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  NoCollisionProfileName;                            // 0x4CC(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  DefaultCollisionProfileName;                       // 0x4D4(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A30[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ADestroyedMeshActor* GetDefaultObj();

	void SetNoCollisionProfile();
};

// 0x20 (0x778 - 0x758)
// Class ShooterGame.DinoAncestryEntryWidget
class UDinoAncestryEntryWidget : public UPrimalUI
{
public:
	uint8                                        Pad_2A31[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDinoAncestryEntryWidget* GetDefaultObj();

};

// 0x8 (0x4C8 - 0x4C0)
// Class ShooterGame.DinoFoliage_PresetGenerator
class ADinoFoliage_PresetGenerator : public AActor
{
public:
	uint8                                        bGeneratePresets : 1;                              // Mask: 0x1, PropSize: 0x10x4C0(0x1)(Edit, ConstParm, ExportObject, Net, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bGetAllMeshesFromDataTable : 1;                    // Mask: 0x2, PropSize: 0x10x4C0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bGetHarvestableMeshesFromDataTable : 1;            // Mask: 0x4, PropSize: 0x10x4C0(0x1)(Edit, ConstParm, ExportObject, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bGetNonHarvestableMeshesFromDataTable : 1;         // Mask: 0x8, PropSize: 0x10x4C0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bFindMeshesNotAssignedToAnyResources : 1;          // Mask: 0x10, PropSize: 0x10x4C0(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bClearDuplicateMeshesFromResourceData : 1;         // Mask: 0x20, PropSize: 0x10x4C0(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A32[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ADinoFoliage_PresetGenerator* GetDefaultObj();

	bool BPGetMeshesFromDataTable();
	void BPGeneratePresets();
	void BPFindMeshesNotAssignedToAnyResources();
	void BPClearDuplicateMeshesFromResourceData();
};

// 0x198 (0x8F0 - 0x758)
// Class ShooterGame.DinoListButtonWidget
class UDinoListButtonWidget : public UBaseSelectableButtonWidget
{
public:
	class FName                                  ContextMenuAnchorName;                             // 0x758(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  DinoStatusLabelName;                               // 0x760(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ExpirationLabelName;                               // 0x768(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ExpirationLabelParentName;                         // 0x770(0x8)(EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bSelectOnClicked : 1;                              // Mask: 0x1, PropSize: 0x10x778(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_18F : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2A35[0x167];                                   // Fixing Size After Last Property  > TateDumper <
	class UMenuAnchor*                           ContextMenuAnchor;                                 // 0x8E0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A36[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDinoListButtonWidget* GetDefaultObj();

	void SetDinoExpiration(const class FString& Expiration);
	void SetButtonString(class FString* Status);
	class UWidget* OnGetContextMenuContent();
	void InitializeWithClick(bool bCanExpire);
	bool ForceSetSelected();
};

// 0x88 (0x3B8 - 0x330)
// Class ShooterGame.ToolTipWidget
class UToolTipWidget : public UPrimalUserWidget
{
public:
	class FString                                ToolTipLabelName;                                  // 0x330(0x10)(BlueprintVisible, Net, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        WidgetWidth;                                       // 0x340(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        WidgetHeight;                                      // 0x344(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDoOverlayFade : 1;                                // Mask: 0x1, PropSize: 0x10x348(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_190 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2A37[0x17];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bUseBPInitToolTip;                                 // 0x360(0x1)(BlueprintVisible, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseBPUpdateToolTip;                               // 0x361(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A38[0x56];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UToolTipWidget* GetDefaultObj();

	void BPUpdateToolTip(float* DeltaSeconds);
	void BPInitToolTip(class AShooterPlayerController* HUDOwner, const class FString& ToolTipString, class UObject* DataListEntry);
};

// 0x0 (0x3B8 - 0x3B8)
// Class ShooterGame.TooltipSmartLayoutWidget
class UTooltipSmartLayoutWidget : public UToolTipWidget
{
public:

	static class UClass* StaticClass();
	static class UTooltipSmartLayoutWidget* GetDefaultObj();

};

// 0x1C8 (0x580 - 0x3B8)
// Class ShooterGame.DinoListItemTooltip
class UDinoListItemTooltip : public UTooltipSmartLayoutWidget
{
public:
	class FName                                  FnameTitleBar_NameLabel;                           // 0x3B8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  FnameTitleBar_LevelLabel;                          // 0x3C0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  FnameInfo_ImageName;                               // 0x3C8(0x8)(Net, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class FName>                          FnameInfo_LabelNames;                              // 0x3D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class FName>                          FnameInfo_GroupNames;                              // 0x3E0(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Info_GroupFreq;                                    // 0x3F0(0x4)(ConstParm, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A39[0x17C];                                   // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            EnabledDinoTexture;                                // 0x570(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    EnabledDinoMaterial;                               // 0x578(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UDinoListItemTooltip* GetDefaultObj();

};

// 0x120 (0x150 - 0x30)
// Class ShooterGame.DinoSetupDataAsset
class UDinoSetupDataAsset : public UDataAsset
{
public:
	struct FDinoSetup                            DinoSetup;                                         // 0x30(0x120)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Config)

	static class UClass* StaticClass();
	static class UDinoSetupDataAsset* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class ShooterGame.Object_WithWorldContext
class UObject_WithWorldContext : public UObject
{
public:
	uint8                                        Pad_2A3A[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UObject_WithWorldContext* GetDefaultObj();

	void SetWorldContext(class UObject** NewWorldContext);
	class UObject* GetWorldContextObject();
};

// 0x20 (0x50 - 0x30)
// Class ShooterGame.DinoTrackFilterOption
class UDinoTrackFilterOption : public UObject_WithWorldContext
{
public:
	class FString                                FilterDisplayName;                                 // 0x30(0x10)(Edit, BlueprintVisible, Net, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                OverwrittenAdditionalSearchInputDisplayName;       // 0x40(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UDinoTrackFilterOption* GetDefaultObj();

	int32 GetSearchActorListType();
	class FString GetOverwrittenAdditionalSearchInputDisplayName();
	class FString GetFilterDisplayName();
	TArray<class AActor*> GetActorsToSearchThrough();
};

// 0x0 (0x4D0 - 0x4D0)
// Class ShooterGame.DirectionalAmbientLight
class ADirectionalAmbientLight : public ALight
{
public:

	static class UClass* StaticClass();
	static class ADirectionalAmbientLight* GetDefaultObj();

};

// 0x0 (0x4D0 - 0x4D0)
// Class ShooterGame.DirectionalInjectedLight
class ADirectionalInjectedLight : public ALight
{
public:

	static class UClass* StaticClass();
	static class ADirectionalInjectedLight* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.DraggableObjectInterface
class IDraggableObjectInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IDraggableObjectInterface* GetDefaultObj();

};

// 0x20 (0x7B0 - 0x790)
// Class ShooterGame.DraggedDecoratorWidget
class UDraggedDecoratorWidget : public UCustomCanvasWidget
{
public:
	class UMaterialInterface*                    DraggedMaterial;                                   // 0x790(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            DraggedTexture;                                    // 0x798(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A3E[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDraggedDecoratorWidget* GetDefaultObj();

};

// 0x3F0 (0x8B0 - 0x4C0)
// Class ShooterGame.DroppedItem
class ADroppedItem : public AActor
{
public:
	uint8                                        Pad_2A40[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	struct FItemNetInfo                          MyItemInfo;                                        // 0x4D0(0x1E0)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UPrimalItem*                           MyItem;                                            // 0x6B0(0x8)(Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        bApplyImpulseOnSpawn : 1;                          // Mask: 0x1, PropSize: 0x10x6B8(0x1)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDestroyOnStasis : 1;                              // Mask: 0x2, PropSize: 0x10x6B8(0x1)(ExportObject, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseCollisionTrace : 1;                            // Mask: 0x4, PropSize: 0x10x6B8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPreventPickup : 1;                                // Mask: 0x8, PropSize: 0x10x6B8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDestroyOutOfWater : 1;                            // Mask: 0x10, PropSize: 0x10x6B8(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseClientDroppedItemPhysics : 1;                  // Mask: 0x20, PropSize: 0x10x6B8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsUnderwater : 1;                                 // Mask: 0x40, PropSize: 0x10x6B8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bNotifyPreviousOwnerOfPickup : 1;                  // Mask: 0x80, PropSize: 0x10x6B8(0x1)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAssignedToTribePickupOnly : 1;                    // Mask: 0x1, PropSize: 0x10x6B9(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_191 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2A42[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        AssignedToTribeID;                                 // 0x6BC(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bLowQuality : 1;                                   // Mask: 0x1, PropSize: 0x10x6C0(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_192 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2A44[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ImpulseMagnitude;                                  // 0x6C4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseImpulseOffsetRanges;                           // 0x6C8(0x1)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A45[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ImpulseOffsetRanges;                               // 0x6D0(0x18)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ForceSleepTimer;                                   // 0x6E8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A46[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               DroppedItemScale;                                  // 0x6F0(0x18)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             OverlayTooltipPadding;                             // 0x708(0x10)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             OverlayTooltipScale;                               // 0x718(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               CenterLocationOffset;                              // 0x728(0x18)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                HUDOverlayToolTipWidget;                           // 0x740(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                HUDOverlayToolTipWidgetOnlyAction;                 // 0x748(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                DroppedByName;                                     // 0x750(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint64                                       DroppedByPlayerID;                                 // 0x760(0x8)(Edit, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	double                                       DroppedItemDestructionTime;                        // 0x768(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               DroppedItemInterpTarget;                           // 0x770(0x18)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bClientDisablePhysics;                             // 0x788(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A48[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UStaticMesh*                           NetDroppedMeshOverride;                            // 0x790(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    NetDroppedMeshMaterialOverride;                    // 0x798(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               NetDroppedMeshOverrideScale3D;                     // 0x7A0(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               DroppedItemVelocity;                               // 0x7B8(0x18)(Edit, ConstParm, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DroppedItemAccelerationGravity;                    // 0x7D0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DroppedItemMaxFallSpeed;                           // 0x7D4(0x4)(ConstParm, BlueprintVisible, Net, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A4A[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       SpawnDropSoundTime;                                // 0x7F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A4B[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsPreventDroppedItemPhysics;                      // 0x810(0x1)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A4C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AActor>                 DroppedByActor;                                    // 0x814(0x8)(Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A4D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalCharacter*                      BasedTransformCharacter;                           // 0x820(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               BasedTransformLocation;                            // 0x828(0x18)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               BasedTransformVelocity;                            // 0x840(0x18)(Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UStaticMesh*                           UsedMeshAsset;                                     // 0x858(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseBPDroppedItemImpacted;                         // 0x860(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseBPSetupDroppedItemVisuals;                     // 0x861(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreventDropAttachment;                            // 0x862(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A4F[0x2D];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        FreezePhysicsAfterTime;                            // 0x890(0x4)(ConstParm, Net, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PickupAllRange;                                    // 0x894(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A50[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bBPOnItemPickedUp : 1;                             // Mask: 0x1, PropSize: 0x10x8A0(0x1)(BlueprintReadOnly, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_193 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2A51[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            PickupIcon;                                        // 0x8A8(0x8)(ConstParm, ExportObject, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ADroppedItem* GetDefaultObj();

	void ResetLifeSpan(float* NewLifeSpan);
	void ReplicateMovement();
	float KeepPhysicsActiveForDuration();
	bool IsAllowedToPickupItem();
	void FreezePhysics();
	void ForceSleep();
	void BPSetupDroppedItemVisuals();
	void BPOnItemPickedUp(class APlayerController** ByPC, class UPrimalItem** InventoryItem);
	void BPDroppedItemImpacted(struct FHitResult* ImpactHitInfo);
};

// 0x30 (0x8E0 - 0x8B0)
// Class ShooterGame.DroppedItemEgg
class ADroppedItemEgg : public ADroppedItem
{
public:
	class UClass*                                SpawnDinoEmitter;                                  // 0x8B0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        IndoorsHypoThermalInsulation;                      // 0x8B8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        IndoorsHyperThermalInsulation;                     // 0x8BC(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        EggThermalInsulationTemperatureMultiplier;         // 0x8C0(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsEggTooHot : 1;                                  // Mask: 0x1, PropSize: 0x10x8C4(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsEggTooCold : 1;                                 // Mask: 0x2, PropSize: 0x10x8C4(0x1)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_194 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2A53[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class ABiomeZoneVolume*                      MyBiomeZone;                                       // 0x8C8(0x8)(ConstParm, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A54[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ADroppedItemEgg* GetDefaultObj();

	void NetSpawnDinoEmitter();
};

// 0x0 (0x8B0 - 0x8B0)
// Class ShooterGame.DroppedItemLowQuality
class ADroppedItemLowQuality : public ADroppedItem
{
public:

	static class UClass* StaticClass();
	static class ADroppedItemLowQuality* GetDefaultObj();

};

// 0x10 (0x8C0 - 0x8B0)
// Class ShooterGame.DroppedItemMission
class ADroppedItemMission : public ADroppedItem
{
public:
	uint8                                        bPickupOnlyAllowMissionPlayers : 1;                // Mask: 0x1, PropSize: 0x10x8B0(0x1)(ExportObject, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bShowHUDMissionInfo : 1;                           // Mask: 0x2, PropSize: 0x10x8B0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_196 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2A57[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AMissionType*                          OwnerMission;                                      // 0x8B8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ADroppedItemMission* GetDefaultObj();

	class AMissionType* GetOwnerMission();
};

// 0x20 (0x8D0 - 0x8B0)
// Class ShooterGame.DroppedItemTorch
class ADroppedItemTorch : public ADroppedItemLowQuality
{
public:
	float                                        LifeTimeMeter;                                     // 0x8B0(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PassiveDurabilityCostPerInterval;                  // 0x8B4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PassiveDurabilityCostInterval;                     // 0x8B8(0x4)(Edit, BlueprintVisible, ExportObject, Net, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A5A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastDurabilityConsumptionTime;                     // 0x8C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         FireIsOn;                                          // 0x8C8(0x1)(ExportObject, BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A5B[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ADroppedItemTorch* GetDefaultObj();

	void OnRep_FireIsOn();
	int32 GetFlameColorIndex();
};

// 0x30 (0x360 - 0x330)
// Class ShooterGame.DyeItemSelector
class UDyeItemSelector : public UPrimalUserWidget
{
public:
	uint8                                        Pad_2A5F[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class FName                                  DyeDataListName;                                   // 0x340(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  DyeSearchBoxName;                                  // 0x348(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A60[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bAllowPaintingWithoutResources;                    // 0x358(0x1)(Edit, BlueprintVisible, ExportObject, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A61[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDyeItemSelector* GetDefaultObj();

	void UpdateDyeSelector();
	void InitDyeSelector(class UPrimalUI* PrimalUI);
	class FText HandleOnSearchTextChanged();
	class UDataListPanel* GetDataListPanel();
};

// 0x48 (0x7A0 - 0x758)
// Class ShooterGame.DyeRegionButtonWidget
class UDyeRegionButtonWidget : public UPrimalUI
{
public:
	uint8                                        bSelectOnClicked : 1;                              // Mask: 0x1, PropSize: 0x10x758(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_198 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2A63[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          DefaultBackgroundColor;                            // 0x75C(0x10)(Edit, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	struct FLinearColor                          DefaultPreviewColor;                               // 0x76C(0x10)(ExportObject, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A64[0x24];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDyeRegionButtonWidget* GetDefaultObj();

};

// 0x70 (0x550 - 0x4E0)
// Class ShooterGame.FadingDestructibleActor
class AFadingDestructibleActor : public ADestroyedMeshActor
{
public:
	uint8                                        bFadeOut : 1;                                      // Mask: 0x1, PropSize: 0x10x4E0(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        bRotationalFall : 1;                               // Mask: 0x2, PropSize: 0x10x4E0(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDontUseRotationalFall : 1;                        // Mask: 0x4, PropSize: 0x10x4E0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSetupForFalling : 1;                         // Mask: 0x8, PropSize: 0x10x4E0(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_199 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2A68[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Fall_RotAccel;                                     // 0x4E4(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Fall_RotAccelRate;                                 // 0x4E8(0x4)(EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A69[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Fall_Direction_Right;                              // 0x4F0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Fall_Spin_Rand;                                    // 0x508(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Fall_SpinVelocity;                                 // 0x50C(0x4)(Edit, ConstParm, Net, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Fall_SpinAccel;                                    // 0x510(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Fall_SpinAccelRate;                                // 0x514(0x4)(Edit, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Fall_RotVelocity;                                  // 0x518(0x4)(ExportObject, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FadeOutDelayTime;                                  // 0x51C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FadeOutTime;                                       // 0x520(0x4)(ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	bool                                         bIsDoingDrop;                                      // 0x524(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A6B[0x23];                                    // Fixing Size After Last Property  > TateDumper <
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x548(0x8)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)

	static class UClass* StaticClass();
	static class AFadingDestructibleActor* GetDefaultObj();

	void SetupFade();
	float BPSetupForFalling(class UStaticMesh* InMesh, bool Rotate);
};

// 0x0 (0x68 - 0x68)
// Class ShooterGame.FallDamageType
class UFallDamageType : public UPrimalDamageType
{
public:

	static class UClass* StaticClass();
	static class UFallDamageType* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class ShooterGame.FixSourceTreeCommandlet
class UFixSourceTreeCommandlet : public UCommandlet
{
public:

	static class UClass* StaticClass();
	static class UFixSourceTreeCommandlet* GetDefaultObj();

};

// 0x0 (0x4C0 - 0x4C0)
// Class ShooterGame.FixupSplineActor
class AFixupSplineActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class AFixupSplineActor* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.FlockingBehavior
class UFlockingBehavior : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFlockingBehavior* GetDefaultObj();

	TArray<class UParticleSystemComponent*> UpdateFlockComponentLocations_ParticleBoids();
	TArray<class UStaticMeshComponent*> UpdateFlockComponentLocations();
	class USceneComponent* UpdateBoidComponentLocation();
	bool TickPersistentFlockData(class UObject** WorldContextObject);
	struct FAvoidanceArea SetAvoidanceAreaTransform(struct FTransform* NewTransform);
	TArray<struct FAvoidanceArea> SetAvoidanceAreaArrayTransform(struct FTransform* NewTransform);
	TArray<int32> MakeIndexArray();
	bool IsPointInsideAvoidanceArea();
	bool IsPointInsideAnyAvoidanceArea();
	float InterpVectorArrayToSphere(struct FVector* Origin, float Radius);
	float InterpVectorArrayToRandom(struct FVector* Origin, float* MinRadius, int32 RandomSeed);
	float InterpVectorArrayToGrid(struct FVector* Origin, struct FRotator* Rotation);
	float InterpVectorArrayToCircle(struct FVector* Origin, struct FRotator* Rotation, float Radius);
	float InterpVectorArray(struct FVector* Origin, struct FRotator* Rotation);
	float InterpBoidArrayToSphere(float Radius);
	float InterpBoidArrayToRandom(float* MinRadius, int32 RandomSeed);
	float InterpBoidArrayToGrid(struct FRotator* Rotation);
	float InterpBoidArrayToCircle(float Radius);
	float InterpBoidArray(struct FRotator* Rotation);
	float GetFlockRadius();
	TArray<int32> GetFlockMembersOfType();
	struct FVector GetFlockCentroid();
	struct FVector GetClosestSurfacePointOnAvoidanceArea();
	struct FVector GetAvoidanceDirection();
	struct FVector GetAvoidanceAreaWorldLocation();
	float FlockTickSphereFormation(float Radius);
	float FlockTickLeaders();
	int32 FlockTickGridFormation();
	struct FBoidBehavior FlockTickFollowersAndFreeAgents();
	float FlockTickCircleFormation();
	struct FVector2D FlockSetMaxSpeedAndForce();
	struct FVector2D FlockCreate();
	float DrawDebugAvoidanceArea(class UObject** WorldContextObject);
	struct FBoidBehavior BoidTick();
	TArray<struct FBoid> BoidStopTargeting();
	struct FVector BoidSetTarget();
	TArray<struct FBoid> BoidSetAlive(bool bIsAlive);
	bool BoidMoveTo(float* InterpSpeed);
	struct FAvoidanceArea AddAvoidanceAreaToFlockData();
};

// 0xA8 (0xD0 - 0x28)
// Class ShooterGame.FogOfWar
class UFogOfWar : public UObject
{
public:
	class FString                                MapName;                                           // 0x28(0x10)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UTexture2D*                            Texture;                                           // 0x38(0x8)(ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst)
	uint8                                        bVisible : 1;                                      // Mask: 0x1, PropSize: 0x10x40(0x1)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_1BC : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2AFA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        InterpolationSpeed;                                // 0x44(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        SizeX;                                             // 0x48(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference)
	int32                                        SizeY;                                             // 0x4C(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        LatitudeOrigin;                                    // 0x50(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LatitudeScale;                                     // 0x54(0x4)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LongitudeOrigin;                                   // 0x58(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LongitudeScale;                                    // 0x5C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AFC[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            brushTexture;                                      // 0x68(0x8)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, InstancedReference)
	TArray<uint8>                                VisibilityBuffer;                                  // 0x70(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<uint8>                                BrushTextureData;                                  // 0x80(0x10)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AFD[0x40];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UFogOfWar* GetDefaultObj();

	void UpdateTexture();
	int32 Update();
};

// 0x38 (0x368 - 0x330)
// Class ShooterGame.GamepadButtonLegendWidget
class UGamepadButtonLegendWidget : public UPrimalUserWidget
{
public:
	class FText                                  ButtonDescription;                                 // 0x330(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            ButtonIcon;                                        // 0x348(0x8)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ButtonIconImageName;                               // 0x350(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AFE[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UGamepadButtonLegendWidget* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class ShooterGame.GenericDataListEntry
class UGenericDataListEntry : public UObject
{
public:
	uint8                                        Pad_2AFF[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	class FString                                Description;                                       // 0x50(0x10)(BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig)
	int32                                        CustomData;                                        // 0x60(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, EditConst, SubobjectReference)
	uint8                                        Pad_2B00[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                CustomString;                                      // 0x68(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            EntryIcon;                                         // 0x78(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    EntryMaterial;                                     // 0x80(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsEnabled;                                        // 0x88(0x1)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst)
	uint8                                        Pad_2B01[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ExplicitEntryIndexType;                            // 0x8C(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UGenericDataListEntry* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class ShooterGame.GlobalBoneModifiers
class UGlobalBoneModifiers : public UObject
{
public:
	class FString                                Description;                                       // 0x28(0x10)(BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig)
	TArray<struct FBoneModifierNamed>            BoneModifiers;                                     // 0x38(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UGlobalBoneModifiers* GetDefaultObj();

};

// 0x30 (0x508 - 0x4D8)
// Class ShooterGame.HazardTrigger
class AHazardTrigger : public ABaseBoxTrigger
{
public:
	struct FVector                               Bounds;                                            // 0x4D8(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsActive;                                         // 0x4F0(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, SubobjectReference)
	uint8                                        Pad_2B05[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastActivationTime;                                // 0x4F8(0x8)(ExportObject, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bConformToTerrain;                                 // 0x500(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B06[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AHazardTrigger* GetDefaultObj();

	void OnDeactivated();
	void OnCharacterExit(class APrimalCharacter* Character);
	void OnCharacterEnter(class APrimalCharacter* Character);
	void OnActivated();
	bool FindFloor();
	void Deactivate();
	bool ClientActivation();
	bool CanActivate();
	void Activate();
};

// 0xE8 (0x5F0 - 0x508)
// Class ShooterGame.HazardTrigger_Slide
class AHazardTrigger_Slide : public AHazardTrigger
{
public:
	class UAudioComponent*                       SoundToPlay;                                       // 0x508(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	TArray<class USplineComponent*>              Splines;                                           // 0x510(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UParticleSystem*>               SlideFX;                                           // 0x520(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        FinalEmitter;                                      // 0x530(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        WarningEmitter;                                    // 0x540(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ImpactEmitter;                                     // 0x550(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            SlideSound;                                        // 0x560(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        StructureDamage;                                   // 0x568(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B08[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                StructureDamageType;                               // 0x570(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SplineSeparation;                                  // 0x578(0x4)(ConstParm, ExportObject, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MinTimeBetweenActivations;                         // 0x57C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SlideSpeed;                                        // 0x580(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        WaveWidth;                                         // 0x584(0x4)(BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Impulse;                                           // 0x588(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        MinWarningInterval;                                // 0x58C(0x4)(ConstParm, BlueprintVisible, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxWarningInterval;                                // 0x590(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ActivationChance;                                  // 0x594(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ActivationIncrement;                               // 0x598(0x4)(ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MinProjectileInterval;                             // 0x59C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxProjectileInterval;                             // 0x5A0(0x4)(BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ImpulseVelocityLimit;                              // 0x5A4(0x4)(Edit, BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ProjectileClass;                                   // 0x5A8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        WarningTimer;                                      // 0x5B0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CurrentActivationChance;                           // 0x5B4(0x4)(Edit, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ProjectileTimer;                                   // 0x5B8(0x4)(ExportObject, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B0A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSlideData>                    SlideComponents;                                   // 0x5C0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       SlidePositions;                                    // 0x5D0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B0B[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AHazardTrigger_Slide* GetDefaultObj();

	void SpawnWarningFX();
	void SpawnProjectile(struct FVector* Location, const struct FVector& Heading);
	void RebuildSplines();
};

// 0x48 (0x70 - 0x28)
// Class ShooterGame.HexagonTradableOption
class UHexagonTradableOption : public UObject
{
public:
	class UClass*                                ItemClass;                                         // 0x28(0x8)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                OverrideName;                                      // 0x30(0x10)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        Quantity;                                          // 0x40(0x4)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ItemCost;                                          // 0x44(0x4)(Edit, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bOverrideTradeAction : 1;                          // Mask: 0x1, PropSize: 0x10x48(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAllowedToBePurchased : 1;                    // Mask: 0x2, PropSize: 0x10x48(0x1)(ExportObject, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetItemCost : 1;                             // Mask: 0x4, PropSize: 0x10x48(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsEngramTradeOption : 1;                          // Mask: 0x8, PropSize: 0x10x48(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1C4 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2B15[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                OverrideDescription;                               // 0x50(0x10)(ExportObject, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        OverwrittenRecievedItemCount;                      // 0x60(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxItemPurchaseTimes;                              // 0x64(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B16[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UHexagonTradableOption* GetDefaultObj();

	int32 GetItemCost();
	bool BPOverrideTradeAction();
	int32 BPGetItemCost();
	bool BPAllowedToBePurchased();
	bool AllowedToBePurchased();
};

// 0x0 (0x4C0 - 0x4C0)
// Class ShooterGame.HexagonVFXActor
class AHexagonVFXActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class AHexagonVFXActor* GetDefaultObj();

	float SetVolume();
	void HoverThenAttract();
	void BeginMovingDirectlyToActor();
};

// 0x258 (0x718 - 0x4C0)
// Class ShooterGame.HibernationManager
class AHibernationManager : public AActor
{
public:
	uint8                                        Pad_2B18[0x258];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AHibernationManager* GetDefaultObj();

};

// 0x58 (0x518 - 0x4C0)
// Class ShooterGame.HordeCrateManager
class AHordeCrateManager : public AActor
{
public:
	bool                                         bIsEnabled;                                        // 0x4C0(0x1)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst)
	bool                                         bUseBPForceStartHorde;                             // 0x4C1(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B1F[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinDelayBeforeInitialEvent;                        // 0x4C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxDelayBeforeInitialEvent;                        // 0x4C8(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MinEventCheckInterval;                             // 0x4CC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxEventCheckInterval;                             // 0x4D0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MinDistanceFromOtherEvent;                         // 0x4D4(0x4)(Edit, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FHordeCrateDifficultyLevel>    CrateDifficultyLevels;                             // 0x4D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FHordeCrateDifficultyLevel>    ElementNodeDifficultyLevels;                       // 0x4E8(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        ActiveSpawnZones;                                  // 0x4F8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FHordeCrateEvent>              ActiveEvents;                                      // 0x508(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AHordeCrateManager* GetDefaultObj();

	class UClass* ForceStartHorde(class AActor** SpawnNetwork, int32* DifficultyIndex);
	class UClass* BPForceStartHorde(class AActor** SpawnNetwork, int32* DifficultyIndex);
};

// 0x58 (0x930 - 0x8D8)
// Class ShooterGame.HostSessionEntryButton
class UHostSessionEntryButton : public UDataListEntryButton
{
public:
	uint8                                        bIsCustom : 1;                                     // Mask: 0x1, PropSize: 0x10x8D8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bIsProcedural : 1;                                 // Mask: 0x2, PropSize: 0x10x8D8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1C7 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2B24[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DisplayName;                                       // 0x8E0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient)
	bool                                         bCenterDisplayName;                                // 0x8F0(0x1)(BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B25[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                MapName;                                           // 0x8F8(0x10)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                ModName;                                           // 0x908(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                ModPath;                                           // 0x918(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint64                                       ModItemId;                                         // 0x928(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UHostSessionEntryButton* GetDefaultObj();

};

// 0x410 (0xB68 - 0x758)
// Class ShooterGame.HUDActiveMissionWidget
class UHUDActiveMissionWidget : public UPrimalUI
{
public:
	uint8                                        Pad_2B31[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          ActiveMissionVisibilityWidgetNames;                // 0x760(0x10)(ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  MissionNameTextBlockName;                          // 0x770(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  MissionDifficultyTextBlockName;                    // 0x778(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  MissionDescriptionTextBlockName;                   // 0x780(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ObjectiveTimeValueTextBlockName;                   // 0x788(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ObjectiveTimeLabelTextBlockName;                   // 0x790(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ObjectiveTimePanelName;                            // 0x798(0x8)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ObjectiveTimeProgressBarName;                      // 0x7A0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  MissionDifficultyPanelName;                        // 0x7A8(0x8)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PhaseRequirementContainerName;                     // 0x7B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          MissionTimeRemainingDefaultTextColor;              // 0x7B8(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class FName>                          MissionStatTrackerVisibilityWidgetNames;           // 0x7C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  MissionStatTrackerContainerName;                   // 0x7D8(0x8)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                PhaseRequirementWidgetClass;                       // 0x7E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PhaseBackgroundBorderWidgetName;                   // 0x7E8(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PhaseRichTextBlockName;                            // 0x7F0(0x8)(ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PhaseDescriptionBlockName;                         // 0x7F8(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PhaseDescriptionPrefixBlockName;                   // 0x800(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PhaseDescriptionSuffixBlockName;                   // 0x808(0x8)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PhaseValueContainerName;                           // 0x810(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PhaseValueTextBlockName;                           // 0x818(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PhaseValueSlashTextBlockName;                      // 0x820(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PhaseMaxValueTextBlockName;                        // 0x828(0x8)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PhaseProgressContainerName;                        // 0x830(0x8)(Edit, ConstParm, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PhaseProgressBarName;                              // 0x838(0x8)(ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          PhaseNormalBackgroundColor;                        // 0x840(0x10)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          PhaseCompleteBackgroundColor;                      // 0x850(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  MissionAlertFlyoutContainerName;                   // 0x860(0x8)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  MissionAlertEntryContainerName;                    // 0x868(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  MissionAlertTitleTextBlockName;                    // 0x870(0x8)(ConstParm, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  MissionAlertBorderName;                            // 0x878(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  TopMissionAlertFlyoutContainerName;                // 0x880(0x8)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  TopMissionAlertEntryContainerName;                 // 0x888(0x8)(ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  TopMissionAlertTitleTextBlockName;                 // 0x890(0x8)(ExportObject, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  TopMissionAlertBorderName;                         // 0x898(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          MissionAlertColor_Negative;                        // 0x8A0(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          MissionAlertColor_Neutral;                         // 0x8B0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          MissionAlertColor_Positive;                        // 0x8C0(0x10)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                AlertEntryWidgetClass;                             // 0x8D0(0x8)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AlertFlyoutAnimationDuration;                      // 0x8D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ESimpleCurve                      AlertFlyoutCurve;                                  // 0x8DC(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B34[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             AlertOffscreenTransform;                           // 0x8E0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             TopAlertOffscreenTransform;                        // 0x8F0(0x10)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            DefaultPositiveMissionAlertSound;                  // 0x900(0x8)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            DefaultNeutralMissionAlertSound;                   // 0x908(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            DefaultNegativeMissionAlertSound;                  // 0x910(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  AlertEntryIconContainerName;                       // 0x918(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  AlertEntryIconName;                                // 0x920(0x8)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  AlertCountTextBlockName;                           // 0x928(0x8)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  AlertContentTextBlockName;                         // 0x930(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  RacePanelName;                                     // 0x938(0x8)(ConstParm, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  RacePositionTextBlockName;                         // 0x940(0x8)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  RaceMaxPositionTextBlockName;                      // 0x948(0x8)(Edit, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  MissionTimeValueTextBlockName;                     // 0x950(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  BestRaceTimeName;                                  // 0x958(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          ObjectiveTimeRemainingProgressBarColor;            // 0x960(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          LowObjectiveTimeRemainingProgressBarColor;         // 0x970(0x10)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          PhaseReqTextColor_Negative;                        // 0x980(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          PhaseReqTextColor_Neutral;                         // 0x990(0x10)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          PhaseReqTextColor_Positive;                        // 0x9A0(0x10)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          PhaseReqProgressColor_Negative;                    // 0x9B0(0x10)(ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          PhaseReqProgressColor_Neutral;                     // 0x9C0(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          PhaseReqProgressColor_Positive;                    // 0x9D0(0x10)(ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OpacityForSlashAndMaxValueText;                    // 0x9E0(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B3B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                WorldBuffEffectListEntry_WidgetType;               // 0x9E8(0x8)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B3C[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UTextBlock*                            BestRaceTimeTextBlock;                             // 0x9F8(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B3D[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxWorldBuffsDisplayedAtOnce;                      // 0xA0C(0x4)(ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B3E[0x120];                                   // Fixing Size After Last Property  > TateDumper <
	class AMissionType*                          ActiveMission;                                     // 0xB30(0x8)(ConstParm, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalBuff_MissionData*               MissionData;                                       // 0xB38(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UUserWidget*                           ActiveMissionWidget;                               // 0xB40(0x8)(BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UCanvasPanel*                          CustomStatusCanvas;                                // 0xB48(0x8)(ConstParm, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B3F[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UHUDActiveMissionWidget* GetDefaultObj();

	void ShowMissionAlert(enum class EMissionAlertType AlertType, class FString* AlertTitle, TArray<struct FMissionAlertEntry>* NewEntries, bool* bInstant, bool* bFlyoutFromTop);
	void SetRacePositionText(class FText* PositionText);
	void SetRacePanelVisibility(enum class ESlateVisibility* NewVisibility);
	bool IsMissionAlertVisible(bool* bIsTop);
	void HideMissionAlert(bool* bInstant, bool* bHideTop);
	bool HaveActiveMission();
	class UHUDActiveMissionWidget* GetActiveMissionWidget();
};

// 0xC8 (0x820 - 0x758)
// Class ShooterGame.HUDCustomStatusWidget
class UHUDCustomStatusWidget : public UPrimalUI
{
public:
	uint8                                        Pad_2B5F[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  CanvasPanelName;                                   // 0x760(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                TextWidgetClass;                                   // 0x768(0x8)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  TitleWidgetTextBlockName;                          // 0x770(0x8)(OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  TextWidgetTextBlockName;                           // 0x778(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  CustomTextContainerName;                           // 0x780(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ProgressWidgetClass;                               // 0x788(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ProgressWidgetProgressName;                        // 0x790(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ImageWidgetClass;                                  // 0x798(0x8)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ImageBackgroundWidgetName;                         // 0x7A0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  IconWidgetName;                                    // 0x7A8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UCanvasPanel*                          CustomStatusCanvas;                                // 0x7B0(0x8)(ConstParm, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B60[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UUserWidget*>                   WidgetRefs;                                        // 0x808(0x10)(ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B61[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UHUDCustomStatusWidget* GetDefaultObj();

	bool SetUseGamepadIcon();
	struct FHUDElement SetHUDElementVisibility(bool* bIsVisible);
	class FString SetHUDElementTitle();
	struct FHUDElement SetHUDElementTextScale(float NewScale);
	struct FMargin SetHUDElementTextPadding();
	struct FLinearColor SetHUDElementTextColor();
	enum class ETextJustify SetHUDElementTextAlignment_Title();
	enum class ETextJustify SetHUDElementTextAlignment_Label();
	struct FVector2D SetHUDElementSize();
	struct FHUDElement SetHUDElementScale(const struct FVector2D& NewScale);
	struct FLinearColor SetHUDElementProgressColor();
	struct FHUDElement SetHUDElementProgressBarScale(const struct FVector2D& NewScale);
	struct FMargin SetHUDElementProgressBarPadding();
	float SetHUDElementProgress();
	struct FHUDElement SetHUDElementLocation(const struct FVector2D& NewLocation);
	bool SetHUDElementLabelNumeric(int32* MinFractionalDigits, int32* MaxFractionalDigits);
	class FString SetHUDElementLabel();
	bool SetHUDElementImage();
	struct FHUDElement SetHUDElementIconScale(const struct FVector2D& NewScale);
	float SetHUDElementIconRotation();
	struct FMargin SetHUDElementIconPadding();
	struct FLinearColor SetHUDElementIconColor();
	struct FLinearColor SetHUDElementBackgroundImageColor();
	struct FAnchors SetHUDElementAnchor();
	bool IsHUDElementVisible();
	class UHUDCustomStatusWidget* GetHUDElementRootWidget();
};

// 0xE0 (0x410 - 0x330)
// Class ShooterGame.HUDElementBarWidget
class UHUDElementBarWidget : public UPrimalUserWidget
{
public:
	uint8                                        Pad_2B65[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                HatClass;                                          // 0x338(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ShirtClass;                                        // 0x340(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                GlovesClass;                                       // 0x348(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                PantsClass;                                        // 0x350(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                bootsClass;                                        // 0x358(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ShoulderCannonClass;                               // 0x360(0x8)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  HelmetBarName;                                     // 0x368(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ShirtBarName;                                      // 0x370(0x8)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  GlovesBarName;                                     // 0x378(0x8)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PantsBarName;                                      // 0x380(0x8)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  BootsBarName;                                      // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  BoostIconName;                                     // 0x390(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ShoulderCannonBarName;                             // 0x398(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        IconsBottomOffset;                                 // 0x3A0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        IconSeparation;                                    // 0x3A4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bBoostIconHidden;                                  // 0x3A8(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B68[0x4F];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        HelmetMaxAmmo;                                     // 0x3F8(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ShirtMaxAmmo;                                      // 0x3FC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GlovesMaxAmmo;                                     // 0x400(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PantsMaxAmmo;                                      // 0x404(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        bootsMaxAmmo;                                      // 0x408(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ShoulderMaxAmmo;                                   // 0x40C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UHUDElementBarWidget* GetDefaultObj();

	void UpdateBoostIconVisibility();
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.HUDInterface
class IHUDInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IHUDInterface* GetDefaultObj();

};

// 0x90 (0x820 - 0x790)
// Class ShooterGame.HUDOVerlayWidget
class UHUDOVerlayWidget : public UCustomCanvasWidget
{
public:
	float                                        NotificationsYOffset;                              // 0x790(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        NotificationsXOffset;                              // 0x794(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsUnderlay;                                       // 0x798(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B6A[0x87];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UHUDOVerlayWidget* GetDefaultObj();

};

// 0x28 (0x780 - 0x758)
// Class ShooterGame.HUDPingsContainer
class UHUDPingsContainer : public UPrimalUI
{
public:
	class FName                                  PingContainerCanvasName;                           // 0x758(0x8)(Edit, BlueprintVisible, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                PingWidgetClass;                                   // 0x760(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UCanvasPanel*                          PingContainerCanvas;                               // 0x768(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UUserWidget*>                   SpawnedPingWidgets;                                // 0x770(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UHUDPingsContainer* GetDefaultObj();

};

// 0xE0 (0x838 - 0x758)
// Class ShooterGame.HUDPingWidget
class UHUDPingWidget : public UPrimalUI
{
public:
	class FName                                  PingPlayerNameTextBlockName;                       // 0x758(0x8)(Edit, Net, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PingRespondingPlayerNameTextBlockName;             // 0x760(0x8)(Edit, BlueprintVisible, ExportObject, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PingIconName;                                      // 0x768(0x8)(ConstParm, BlueprintVisible, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PingSwitcherName;                                  // 0x770(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PingOffScreenArrowName;                            // 0x778(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PingOffScreenIconName;                             // 0x780(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PingOffScreenArrowBackgroundName;                  // 0x788(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        WidgetRemoveDuration;                              // 0x790(0x4)(Edit, ExportObject, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B75[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPingData                             WidgetPingData;                                    // 0x798(0x60)(Edit, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B76[0x38];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bIsHovered : 1;                                    // Mask: 0x1, PropSize: 0x10x830(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2B77[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UHUDPingWidget* GetDefaultObj();

	bool UpdateWidgetPingData(const struct FPingData& WithPingData);
	void RemovePingWidget();
	void OnPingWidgetRemoved();
	void OnPingWidgetCreated();
	void OnPingUnhovered(class AShooterCharacter* UnhoveringPlayer);
	void OnPingResponseReceived(class AShooterCharacter* RespondingPlayer);
	void OnPingHovered(class AShooterCharacter* HoveringPlayer);
	bool IsPingValid(const struct FPingData& ForPingData);
	void InitializePingWidget(const struct FPingData& FromPingData);
	bool HasValidPingData();
	struct FVector GetPingWorldLocation(const struct FPingData& FromPingData);
	struct FPingData GetPingData();
};

// 0x328 (0xA80 - 0x758)
// Class ShooterGame.HUDPointOfInterestWidget
class UHUDPointOfInterestWidget : public UPrimalUI
{
public:
	class FName                                  OuterContainerName;                                // 0x758(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PointTitleTextBlockName;                           // 0x760(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PointDescTextBlockName;                            // 0x768(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PointIconPanelName;                                // 0x770(0x8)(Edit, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PointIconName;                                     // 0x778(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PointSwitcherName;                                 // 0x780(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PointOffScreenArrowName;                           // 0x788(0x8)(ConstParm, Net, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PointOffScreenIconName;                            // 0x790(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  OnScreenPrimaryPanelName;                          // 0x798(0x8)(Edit, ExportObject, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  OffScreenPrimaryPanelName;                         // 0x7A0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  OnScreenIndicatorImageName;                        // 0x7A8(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  OffScreenIndicatorImageName;                       // 0x7B0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  OnScreenProgressPanelName;                         // 0x7B8(0x8)(BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  OnScreenProgressLabelName;                         // 0x7C0(0x8)(ConstParm, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  OffScreenProgressPanelName;                        // 0x7C8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  OffScreenProgressLabelName;                        // 0x7D0(0x8)(ConstParm, BlueprintVisible, Net, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        WidgetTitleHiddenIconRenderOffset_Y;               // 0x7D8(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B9C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPointOfInterestData                  WidgetPointOfInterestData;                         // 0x7E0(0x1E0)(Edit, BlueprintVisible, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            FallbackIcon;                                      // 0x9C0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            DefaultLocationAddedSound;                         // 0x9C8(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            DefaultLocationReachedSound;                       // 0x9D0(0x8)(Edit, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsPulsing : 1;                                    // Mask: 0x1, PropSize: 0x10x9D8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1D3 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2B9D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OffScreenWidgetScale;                              // 0x9DC(0x4)(BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B9E[0xA0];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UHUDPointOfInterestWidget* GetDefaultObj();

	bool UpdateWidgetPointOfInterestData(const struct FPointOfInterestData& WithPointData);
	void SetDismissOverlay(bool Visible);
	bool IsPointOfInterestValid(const struct FPointOfInterestData& ForPointData);
	bool IsPointOfInterestInitialized(const struct FPointOfInterestData& ForPointData);
	void InitializePointOfInterestWidget(const struct FPointOfInterestData& FromPointData);
	bool HasValidPointOfInterestData();
	struct FRotator GetPointOfInterestWorldRotation(const struct FPointOfInterestData& FromPointData);
	struct FVector GetPointOfInterestWorldLocation(const struct FPointOfInterestData& FromPointData);
	struct FTransform GetPointOfInterestTransform(const struct FPointOfInterestData& FromPointData);
	class USoundBase* GetPointOfInterestReachedSound();
	struct FPointOfInterestData GetPointOfInterestData();
	struct FTransform GetPointOfInterestCosmeticActorTransform(const struct FPointOfInterestData& FromPointData);
	class USoundBase* GetPointOfInterestAddedSound();
	void DestroyPointOfInterestWidget();
	bool CanActorViewPointOfInterest(class AActor** ForActor, const struct FPointOfInterestData& CanViewPointData);
};

// 0x48 (0x7A0 - 0x758)
// Class ShooterGame.HUDPointsOfInterestContainer
class UHUDPointsOfInterestContainer : public UPrimalUI
{
public:
	class FName                                  PointContainerCanvasName;                          // 0x758(0x8)(Edit, ConstParm, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                PointOfInterestWidgetClass;                        // 0x760(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                TamingListEntryTemplate;                           // 0x768(0x8)(ExportObject, Net, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                TrackedDinoListEntryTemplate;                      // 0x770(0x8)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UCanvasPanel*                          PointContainerCanvas;                              // 0x778(0x8)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UUserWidget*>                   SpawnedPointWidgets;                               // 0x780(0x10)(Edit, ConstParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTrackedDinoListEntryWidget*           TamingPOITooltip;                                  // 0x790(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTrackedDinoListEntryWidget*           TrackedDinoPOITooltip;                             // 0x798(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UHUDPointsOfInterestContainer* GetDefaultObj();

};

// 0x160 (0x490 - 0x330)
// Class ShooterGame.HUDStatusBarsWidget
class UHUDStatusBarsWidget : public UPrimalUserWidget
{
public:
	uint8                                        Pad_2BA1[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                HealthBarName;                                     // 0x338(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                StaminaBarName;                                    // 0x348(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                OxygenBarName;                                     // 0x358(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                FoodBarName;                                       // 0x368(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                WaterBarName;                                      // 0x378(0x10)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                WeightBarName;                                     // 0x388(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                TorpidityBarName;                                  // 0x398(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  XPBarName;                                         // 0x3A8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  IndoorsImageName;                                  // 0x3B0(0x8)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  HarvestableImageName;                              // 0x3B8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  CharacterLabelName;                                // 0x3C0(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            UsableHarvestableAllowed;                          // 0x3C8(0x8)(BlueprintVisible, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            HarvestableAllowed;                                // 0x3D0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            HarvestablePrevented;                              // 0x3D8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            UsableHarvestablePrevented;                        // 0x3E0(0x8)(Edit, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          PoopFoodColor;                                     // 0x3E8(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          RegularFoodColor;                                  // 0x3F8(0x10)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BA2[0x88];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UHUDStatusBarsWidget* GetDefaultObj();

};

// 0x710 (0x900 - 0x1F0)
// Class ShooterGame.InputKeyDisplayWidget
class UInputKeyDisplayWidget : public UWidget
{
public:
	struct FTextBlockStyle                       KeyTextStyle;                                      // 0x1F0(0x340)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FTextBlockStyle                       SeparatorTextStyle;                                // 0x530(0x340)(Edit, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             ButtonImageSize;                                   // 0x870(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                TextPrefix;                                        // 0x880(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                TextSuffix;                                        // 0x890(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BA3[0x60];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInputKeyDisplayWidget* GetDefaultObj();

};

// 0x328 (0xA80 - 0x758)
// Class ShooterGame.InventoryArkCreaturesPanel
class UInventoryArkCreaturesPanel : public UPrimalUI
{
public:
	uint8                                        Pad_2BA9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  UploadedCreatureListName;                          // 0x75C(0x8)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  LocalCreatureListName;                             // 0x764(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  UploadCreatureButtonName;                          // 0x76C(0x8)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  DownloadCreatureButtonName;                        // 0x774(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BAE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DinoSlotButtonTemplate;                            // 0x780(0x8)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BAF[0x2F8];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInventoryArkCreaturesPanel* GetDefaultObj();

	void UploadedDinoSlotButtonSelected(class UWidget* TheWidget);
	void LocalDinoSlotButtonSelected(class UWidget* TheWidget);
};

// 0x80 (0x7D8 - 0x758)
// Class ShooterGame.InventoryDinoAncestryPanel
class UInventoryDinoAncestryPanel : public UPrimalUI
{
public:
	class UClass*                                AncestryEntryWidgetTemplate;                       // 0x758(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BB2[0x78];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInventoryDinoAncestryPanel* GetDefaultObj();

};

// 0x0 (0x3B0 - 0x3B0)
// Class ShooterGame.InventoryPanelContainerWidget
class UInventoryPanelContainerWidget : public UBorder
{
public:

	static class UClass* StaticClass();
	static class UInventoryPanelContainerWidget* GetDefaultObj();

};

// 0x2E8 (0xA40 - 0x758)
// Class ShooterGame.InventoryPanelWidget
class UInventoryPanelWidget : public UPrimalUI
{
public:
	class FName                                  TabBgSwitcherName;                                 // 0x758(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  InventoryButtonName;                               // 0x760(0x8)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  SkinsButtonName;                                   // 0x768(0x8)(Edit, ConstParm, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  CraftingButtonName;                                // 0x770(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  CreaturesButtonName;                               // 0x778(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  InventoryEnabledEffectName;                        // 0x780(0x8)(Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  SkinsEnabledEffectName;                            // 0x788(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  CraftingEnabledEffectName;                         // 0x790(0x8)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  SearchTextBoxName;                                 // 0x798(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  TooltipToggleButtonName;                           // 0x7A0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  SortMenuButtonName;                                // 0x7A8(0x8)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  SortMenuAnchorName;                                // 0x7B0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ShowAllButtonName;                                 // 0x7B8(0x8)(Edit, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ShowEngramsButtonName;                             // 0x7C0(0x8)(Edit, BlueprintVisible, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ShowEngramsBoxName;                                // 0x7C8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  TransferAllButtonName;                             // 0x7D0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  DropAllButtonName;                                 // 0x7D8(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  NewFolderButtonName;                               // 0x7E0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  DataListSwitcherName;                              // 0x7E8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  InventoryDataListName;                             // 0x7F0(0x8)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  SkinDataListName;                                  // 0x7F8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  CraftingDataListName;                              // 0x800(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  CraftingQueueHeaderBoxName;                        // 0x808(0x8)(Edit, Net, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  CraftingQueueItemsBoxName;                         // 0x810(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class FName>                          CraftQueueItemButtonNames;                         // 0x818(0x10)(Edit, BlueprintVisible, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  HeaderBoxName;                                     // 0x828(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  InventoryTabLabelName;                             // 0x830(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  CraftingTabLabelName;                              // 0x838(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ArkCreaturesPanelName;                             // 0x840(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ClearCraftingQueueButtonName;                      // 0x848(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  AutoStackButtonName;                               // 0x850(0x8)(EditFixedSize, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ReceivingItemsLabelName;                           // 0x858(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextActiveColor;                           // 0x860(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextInactiveColor;                         // 0x870(0x10)(OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             DefaultWidgetSize;                                 // 0x880(0x10)(Edit, ExportObject, Net, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        DefaultWidgetWrapNum;                              // 0x890(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BC7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             HandheldWidgetSize;                                // 0x898(0x10)(BlueprintVisible, BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        HandheldWidgetWrapNum;                             // 0x8A8(0x4)(ExportObject, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BCA[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsRemoteInventory;                                // 0x8C0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BCB[0x17F];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInventoryPanelWidget* GetDefaultObj();

	void UpdateOrderCombo();
	class FText SearchTextChanged();
	enum class ESelectInfo OnOrderTypeSelected(const class FString& SelectedItem);
	class UWidget* OnGetSortContextMenuContent();
	void OnGamepadPressSortIcon();
	enum class ESelectInfo OnFilterTypeSelected(const class FString& SelectedItem);
};

// 0x10 (0x768 - 0x758)
// Class ShooterGame.InventoryQuickSlotsPanel
class UInventoryQuickSlotsPanel : public UPrimalUI
{
public:
	uint8                                        Pad_2BD4[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInventoryQuickSlotsPanel* GetDefaultObj();

};

// 0xE8 (0x840 - 0x758)
// Class ShooterGame.InventoryStatsPanel
class UInventoryStatsPanel : public UPrimalUI
{
public:
	class FName                                  TabBgSwitcherName;                                 // 0x758(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PlayerStatsTabButtonName;                          // 0x760(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  RemoteStatsTabButtonName;                          // 0x768(0x8)(ConstParm, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  RemoteStatsTabTextBlockName;                       // 0x770(0x8)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PlayerEnabledEffectName;                           // 0x778(0x8)(ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  RemoteEnabledEffectName;                           // 0x780(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  StatsWidgetSwitcherName;                           // 0x788(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PlayerStatsPanelName;                              // 0x790(0x8)(Edit, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  HeaderPanelName;                                   // 0x798(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  RootSizeBoxName;                                   // 0x7A0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                CharacterStatsPanelUITemplate;                     // 0x7A8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                StructureStatsPanelUITemplate;                     // 0x7B0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ObeliskStatsPanelUITemplate;                       // 0x7B8(0x8)(Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextActiveColor;                           // 0x7C0(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextInactiveColor;                         // 0x7D0(0x10)(OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BD6[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	class UStatsPanelWidget*                     RemoteStatsPanel;                                  // 0x838(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInventoryStatsPanel* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class ShooterGame.JsonObject
class UJsonObject : public UObject
{
public:
	uint8                                        Pad_2C72[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UJsonObject* GetDefaultObj();

	class FString SetVectorField(const class FString& Key, struct FVector* Value);
	class FString SetVectorArrayField(const class FString& Key, TArray<struct FVector>* Value);
	class FString SetStructField(const class FString& Key, struct FPropertyThunkWrapper* Value);
	class FString SetStringField(const class FString& Key, class FString* Value);
	class FString SetStringArrayField(const class FString& Key, TArray<class FString>* Value);
	class FString SetRotatorField(const class FString& Key, struct FRotator* Value);
	class FString SetRotatorArrayField(const class FString& Key, TArray<struct FRotator>* Value);
	class FString SetNullField(const class FString& Key);
	class FString SetJsonObjectField(const class FString& Key, class UJsonObject** Object);
	class FString SetJsonObjectArrayField(const class FString& Key, TArray<class UJsonObject*>* Value);
	class FString SetIntField(const class FString& Key, int32* Value);
	class FString SetIntArrayField(const class FString& Key, TArray<int32>* Value);
	class FString SetFloatField(const class FString& Key, float* Value);
	class FString SetFloatArrayField(const class FString& Key, TArray<float>* Value);
	class FString SetDoubleField(const class FString& Key, double* Value);
	class FString SetDoubleArrayField(const class FString& Key, TArray<double>* Value);
	class FString SetByteField(const class FString& Key, uint8* Value);
	class FString SetByteArrayField(const class FString& Key, TArray<uint8>* Value);
	class FString SetBoolField(const class FString& Key, bool* Value);
	class FString SetBoolArrayField(const class FString& Key, TArray<bool>* Value);
	class FString JsonSerialize();
	class UJsonObject* JsonDeserialize(const class FString& JSONData, class UObject** WorldContextObject);
	bool IsNullField(const class FString& Key);
	bool GetVectorField(const class FString& Key, struct FVector* OutValue);
	bool GetVectorArrayField(const class FString& Key, TArray<struct FVector>* OutValue);
	bool GetStructField(const class FString& Key);
	bool GetStringField(const class FString& Key, class FString* OutValue);
	bool GetStringArrayField(const class FString& Key, TArray<class FString>* OutValue);
	bool GetRotatorField(const class FString& Key, struct FRotator* OutValue);
	bool GetRotatorArrayField(const class FString& Key, TArray<struct FRotator>* OutValue);
	bool GetKeys(const class FString& Key, TArray<class FString>* OutValue);
	bool GetJsonObjectField(const class FString& Key);
	bool GetJsonObjectArrayField(const class FString& Key, TArray<class UJsonObject*>* OutValue);
	bool GetIntField(const class FString& Key, int32* OutValue);
	bool GetIntArrayField(const class FString& Key, TArray<int32>* OutValue);
	bool GetFloatField(const class FString& Key, float* OutValue);
	bool GetFloatArrayField(const class FString& Key, TArray<float>* OutValue);
	bool GetDoubleField(const class FString& Key, double* OutValue);
	bool GetDoubleArrayField(const class FString& Key, TArray<double>* OutValue);
	bool GetByteField(const class FString& Key, uint8* OutValue);
	bool GetByteArrayField(const class FString& Key, TArray<uint8>* OutValue);
	bool GetBoolField(const class FString& Key, bool* OutValue);
	bool GetBoolArrayField(const class FString& Key, TArray<bool>* OutValue);
	class UJsonObject* CreateJsonObject(class UObject** WorldContextObject);
	bool CompareJsonValues();
};

// 0x40 (0x5E0 - 0x5A0)
// Class ShooterGame.KeyInputWidget
class UKeyInputWidget : public UEditableText
{
public:
	uint8                                        Pad_2C77[0x40];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UKeyInputWidget* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class ShooterGame.Leaderboard
class ULeaderboard : public UObject
{
public:
	class UClass*                                LeaderboardRowType;                                // 0x28(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLeaderboardDisplayRow                HeaderRow;                                         // 0x30(0x20)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ELeaderboardColumnName            DefaultOrderByColumn;                              // 0x50(0x1)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ELeaderboardOrdering              DefaultOrdering;                                   // 0x51(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ELeaderboardGroupByMode           DefaultGroupByMode;                                // 0x52(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ELeaderboardColumnName            DefaultGroupByColumn;                              // 0x53(0x1)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        DefaultNumRowsToDisplay;                           // 0x54(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ULeaderboard* GetDefaultObj();

	bool GetLeaderboardRows(class UObject** WorldContextObject, class FName* MissionTag);
	class FString FormatLeaderboardRows(class FName* MissionTag, TArray<struct FLeaderboardRow>* Rows);
	class FString FormatLeaderboardRow(class FName* MissionTag);
	int32 CountLeaderboardRows(class UObject** WorldContextObject, class FName* MissionTag);
	TArray<struct FLeaderboardRow> BPGetLeaderboardRows(class FName* MissionTag, class AShooterGameMode* GameMode);
	struct FLeaderboardDisplayRow BPFormatLeaderboardRow(class FName* MissionTag);
	int32 BPCountLeaderboardRows(class FName* MissionTag, class AShooterGameMode* GameMode);
	bool BPAddLeaderboardRow(class AShooterGameMode* GameMode);
	bool AddLeaderboardRow(class UWorld** WorldContextObject);
};

// 0xC8 (0x820 - 0x758)
// Class ShooterGame.LeaderboardRowWidget
class ULeaderboardRowWidget : public UPrimalUI
{
public:
	bool                                         bIsHeaderRow;                                      // 0x758(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CAE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  ColumnContainerWidgetName;                         // 0x75C(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CB1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FLeaderboardColumnDefinition>  Columns;                                           // 0x768(0x10)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FLinearColor                          DefaultLeaderboardRowTextColor;                    // 0x778(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          DefaultLeaderboardRowBackgroundColor;              // 0x788(0x10)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            DefaultLeaderboardRowBackgroundTexture;            // 0x798(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          PersonalLeaderboardRowTextColor;                   // 0x7A0(0x10)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          PersonalLeaderboardRowBackgroundColor;             // 0x7B0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            PersonalLeaderboardRowBackgroundTexture;           // 0x7C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          HeaderLeaderboardRowTextColor;                     // 0x7C8(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          HeaderLeaderboardRowBackgroundColor;               // 0x7D8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            HeaderLeaderboardRowBackgroundTexture;             // 0x7E8(0x8)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CB5[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class UHorizontalBox*                        ColumnContainer;                                   // 0x808(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UTextBlock*>                    ColumnWidgets;                                     // 0x810(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ULeaderboardRowWidget* GetDefaultObj();

	bool SetRowContents();
};

// 0x40 (0xF0 - 0xB0)
// Class ShooterGame.MaterialExpressionIsPixelUnderwater
class UMaterialExpressionIsPixelUnderwater : public UMaterialExpression
{
public:
	enum class EMaterialSceneAttributeInputMode  InputMode;                                         // 0xB0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2CB9[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FExpressionInput                      Input;                                             // 0xB8(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	struct FVector2D                             ConstInput;                                        // 0xE0(0x10)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionIsPixelUnderwater* GetDefaultObj();

};

// 0x488 (0x538 - 0xB0)
// Class ShooterGame.MaterialExpressionPlatformSwitch
class UMaterialExpressionPlatformSwitch : public UMaterialExpression
{
public:
	struct FExpressionInput                      Default;                                           // 0xB0(0x28)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor)
	struct FExpressionInput                      Inputs[0x1C];                                      // 0xD8(0x460)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionPlatformSwitch* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class ShooterGame.MaterialExpressionWaveWorks
class UMaterialExpressionWaveWorks : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionWaveWorks* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class ShooterGame.MaterialExpressionWaveWorksHeight
class UMaterialExpressionWaveWorksHeight : public UMaterialExpression
{
public:
	struct FExpressionInput                      Position;                                          // 0xB0(0x28)(Edit, ConstParm, ExportObject, ReturnParm, Transient, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionWaveWorksHeight* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class ShooterGame.MaterialExpressionWaveWorksDisplacement
class UMaterialExpressionWaveWorksDisplacement : public UMaterialExpression
{
public:
	struct FExpressionInput                      Position;                                          // 0xB0(0x28)(Edit, ConstParm, ExportObject, ReturnParm, Transient, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionWaveWorksDisplacement* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class ShooterGame.MaterialExpressionWaveWorksMaxDisplacement
class UMaterialExpressionWaveWorksMaxDisplacement : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionWaveWorksMaxDisplacement* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class ShooterGame.MaterialExpressionWaveWorksShorelineData
class UMaterialExpressionWaveWorksShorelineData : public UMaterialExpression
{
public:
	struct FExpressionInput                      Position;                                          // 0xB0(0x28)(Edit, ConstParm, ExportObject, ReturnParm, Transient, Config)
	bool                                         bEnableFiltering;                                  // 0xD8(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CCD[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionWaveWorksShorelineData* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class ShooterGame.MaterialExpressionWaveWorksWind
class UMaterialExpressionWaveWorksWind : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionWaveWorksWind* GetDefaultObj();

};

// 0x10 (0x580 - 0x570)
// Class ShooterGame.ShooterMatineeActor
class AShooterMatineeActor : public AMatineeActor
{
public:
	bool                                         bUseMatineeManager;                                // 0x570(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CD0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MatineeManagerPriority;                            // 0x574(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AMatineeActorManager*                  MyMatineeManager;                                  // 0x578(0x8)(ConstParm, ExportObject, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AShooterMatineeActor* GetDefaultObj();

};

// 0x18 (0x4D8 - 0x4C0)
// Class ShooterGame.MatineeActorManager
class AMatineeActorManager : public AInfo
{
public:
	bool                                         bPriorityToFloatSets;                              // 0x4C0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPriorityToVectorSets;                             // 0x4C1(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CD2[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AShooterMatineeActor*>          MatineeActorList;                                  // 0x4C8(0x10)(Edit, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AMatineeActorManager* GetDefaultObj();

};

// 0x30 (0x4F0 - 0x4C0)
// Class ShooterGame.MatineeCapture
class AMatineeCapture : public AActor
{
public:
	class AMatineeActor*                         MatineeActor;                                      // 0x4C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig)
	float                                        CaptureFPS;                                        // 0x4C8(0x4)(Edit, ConstParm, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ResX;                                              // 0x4CC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, SubobjectReference)
	int32                                        ResY;                                              // 0x4D0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, SubobjectReference)
	float                                        PreviewMatineeTime;                                // 0x4D4(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bBeginCapture;                                     // 0x4D8(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCancelCapture;                                    // 0x4D9(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CD3[0x16];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AMatineeCapture* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class ShooterGame.MinimapData
class UMinimapData : public UObject
{
public:
	TArray<struct FMapData>                      MinimapData;                                       // 0x28(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig)
	class FString                                GeneralMapName;                                    // 0x38(0x10)(Edit, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMinimapData* GetDefaultObj();

};

// 0x10 (0x768 - 0x758)
// Class ShooterGame.PrimalSubMenuUI
class UPrimalSubMenuUI : public UPrimalUI
{
public:
	uint8                                        Pad_2CD6[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalSubMenuUI* GetDefaultObj();

};

// 0x0 (0x768 - 0x768)
// Class ShooterGame.MinimapSubMenuUI
class UMinimapSubMenuUI : public UPrimalSubMenuUI
{
public:

	static class UClass* StaticClass();
	static class UMinimapSubMenuUI* GetDefaultObj();

};

// 0xC0 (0x818 - 0x758)
// Class ShooterGame.MissionBiomeCompletionWidget
class UMissionBiomeCompletionWidget : public UBaseSelectableButtonWidget
{
public:
	class UTexture2D*                            ButtonIcon;                                        // 0x758(0x8)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FText                                  SectionName;                                       // 0x760(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, Config, InstancedReference, SubobjectReference)
	struct FLinearColor                          AllMissionsCompletedColor;                         // 0x778(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          SectionNameTextColor;                              // 0x788(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          CompletionPercentLabelTextColor;                   // 0x798(0x10)(EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          NumCompletedValueTextColor;                        // 0x7A8(0x10)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          NumCompletedLabelTextColor;                        // 0x7B8(0x10)(BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          CompletionProgressBarForegroundColor;              // 0x7C8(0x10)(Edit, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CDF[0x40];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMissionBiomeCompletionWidget* GetDefaultObj();

};

// 0x1C8 (0x688 - 0x4C0)
// Class ShooterGame.PrimalTargetableActor
class APrimalTargetableActor : public AActor
{
public:
	uint8                                        Pad_2D0F[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UParticleSystem*                       HurtFX;                                            // 0x4D0(0x8)(Edit, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FDamageTypeAdjuster>           DamageTypeAdjusters;                               // 0x4D8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D10[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class AActor>                  DestructionActorTemplate;                          // 0x4F0(0x30)(Edit, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LifeSpanAfterDeath;                                // 0x520(0x4)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D11[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundCue*                             DeathSound;                                        // 0x528(0x8)(Edit, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PassiveDamageHealthReplicationPercentInterval;     // 0x530(0x4)(Edit, ExportObject, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DamageNotifyTeamAggroMultiplier;                   // 0x534(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DamageNotifyTeamAggroRange;                        // 0x538(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DamageNotifyTeamAggroRangeFalloff;                 // 0x53C(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               DestructibleMeshLocationOffset;                    // 0x540(0x18)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               DestructibleMeshScaleOverride;                     // 0x558(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator                              DestructibleMeshRotationOffset;                    // 0x570(0x18)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bDestructionActorTemplateServerOnly : 1;           // Mask: 0x1, PropSize: 0x10x588(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDestroyedMeshUseSkeletalMeshComponent : 1;        // Mask: 0x2, PropSize: 0x10x588(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPreventZeroDamageInstigatorSelfDamage : 1;        // Mask: 0x4, PropSize: 0x10x588(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsDead : 1;                                       // Mask: 0x8, PropSize: 0x10x588(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bDamageNotifyTeamAggroAI : 1;                      // Mask: 0x10, PropSize: 0x10x588(0x1)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1E3 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bWithinPreventionVolume : 1;                       // Mask: 0x40, PropSize: 0x10x588(0x1)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAllowDamageByFriendlyDinos : 1;                   // Mask: 0x80, PropSize: 0x10x588(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustDamage : 1;                            // Mask: 0x1, PropSize: 0x10x589(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForceZeroDamageProcessing : 1;                    // Mask: 0x2, PropSize: 0x10x589(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForceFloatingDamageNumbers : 1;                   // Mask: 0x4, PropSize: 0x10x589(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDoAllowRadialDamageWithoutVisiblityTrace : 1;     // Mask: 0x8, PropSize: 0x10x589(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreDestructionEffects : 1;                     // Mask: 0x10, PropSize: 0x10x589(0x1)(Edit, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreDamageRepairCooldown : 1;                   // Mask: 0x20, PropSize: 0x10x589(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseHarvestingComponent : 1;                       // Mask: 0x40, PropSize: 0x10x589(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDied : 1;                                    // Mask: 0x80, PropSize: 0x10x589(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D14[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DescriptiveName;                                   // 0x590(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                DestroyedMeshActorClass;                           // 0x5A0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TSoftObjectPtr<class UGeometryCollection>    SoftDestructionGeoCollectionAsset;                 // 0x5A8(0x30)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FDestructionGeoCollectionInfo> MultiSoftDestructionGeoCollectionAssets;           // 0x5D8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReplicatedHealth;                                  // 0x5E8(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Health;                                            // 0x5EC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxHealth;                                         // 0x5F0(0x4)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DestructibleMeshDeathImpulseScale;                 // 0x5F4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FBoneDamageAdjuster>           BoneDamageAdjusters;                               // 0x5F8(0x10)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D15[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                OverlayToolTipWidget;                              // 0x610(0x8)(Edit, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             OverlayMultiUseTooltipScale;                       // 0x618(0x10)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             OverlayMultiUseTooltipPadding;                     // 0x628(0x10)(ConstParm, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UPrimalHarvestingComponent*            MyHarvestingComponent;                             // 0x638(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D16[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	enum class EShooterPhysMaterialType          TargetableDamageFXDefaultPhysMaterial;             // 0x650(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D17[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        BPOverrideDestroyedMeshTextures : 1;               // Mask: 0x1, PropSize: 0x10x654(0x1)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1E4 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2D19[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                StructureSettingsClass;                            // 0x658(0x8)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D1A[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	class AActor*                                MyDestructionActor;                                // 0x680(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalTargetableActor* GetDefaultObj();

	void PlayHitEffectRadial(float DamageTaken, struct FRadialDamageEvent* DamageEvent, class APawn* PawnInstigator, class AActor* DamageCauser);
	void PlayHitEffectPoint(float DamageTaken, struct FPointDamageEvent* DamageEvent, class APawn* PawnInstigator, class AActor* DamageCauser);
	void PlayHitEffectGeneric(float DamageTaken, struct FDamageEvent* DamageEvent, class APawn* PawnInstigator, class AActor* DamageCauser);
	void PlayDyingRadial(float KillingDamage, struct FRadialDamageEvent* DamageEvent, class APawn* InstigatingPawn, class AActor* DamageCauser);
	void PlayDyingPoint(float KillingDamage, struct FPointDamageEvent* DamageEvent, class APawn* InstigatingPawn, class AActor* DamageCauser);
	void PlayDyingGeneric(float KillingDamage, struct FDamageEvent* DamageEvent, class APawn* InstigatingPawn, class AActor* DamageCauser);
	void OverrideDestroyedMeshTextures(class UMeshComponent** MeshComp);
	void OnRep_ReplicatedHealth();
	void NetUpdatedHealth(int32 NewHealth);
	bool IsInvincible();
	void HarvestingDepleted(class UPrimalHarvestingComponent* FromComponent);
	enum class EReplicationGraphBehavior GetRepGraphBehavior();
	float GetMaxHealth();
	class FString GetDescriptiveName();
	bool BPSupressImpactEffects(float DamageTaken, struct FDamageEvent* DamageEvent, class APawn* PawnInstigator, class AActor* DamageCauser, bool bIsLocalPath);
	void BPPlayDyingFXOnly(float KillingDamage, struct FDamageEvent* DamageEvent, class APawn* InstigatingPawn, class AActor* DamageCauser);
	struct FRotator BPHitEffect(float DamageTaken, struct FDamageEvent* DamageEvent, class APawn* PawnInstigator, class AActor* DamageCauser, bool bIsLocalPath, const struct FVector& DamageLoc);
	class AController* BPDied(float KillingDamage, struct FDamageEvent* DamageEvent, class AActor* DamageCauser);
	float BPAdjustDamage(float IncomingDamage, struct FDamageEvent* TheDamageEvent, class AController** EventInstigator, class AActor* DamageCauser, bool* bIsPointDamage, struct FHitResult* PointHitInfo);
};

// 0xB10 (0x1198 - 0x688)
// Class ShooterGame.PrimalStructure
class APrimalStructure : public APrimalTargetableActor
{
public:
	uint8                                        Pad_2DD3[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             OverlayTooltipPadding;                             // 0x6B8(0x10)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             OverlayTooltipScale;                               // 0x6C8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxTooltipPawnSpeed;                               // 0x6D8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DD4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            BuildingIcon;                                      // 0x6E0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  StructureTag;                                      // 0x6E8(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class FName>                          SecondaryStructureTags;                            // 0x6F0(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ConsumesPrimalItem;                                // 0x700(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ScaleFactor;                                       // 0x708(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        StructureSnapTypeFlags;                            // 0x70C(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FIntVector                            ExtraStructureSnapTypeFlags;                       // 0x710(0xC)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DD5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FStructureVariant>             Variants;                                          // 0x720(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  CurrentVariantTag;                                 // 0x730(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsFlippable : 1;                                  // Mask: 0x1, PropSize: 0x10x738(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bFlipByScale : 1;                                  // Mask: 0x2, PropSize: 0x10x738(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bFlipInvertLocOffset : 1;                          // Mask: 0x4, PropSize: 0x10x738(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsFlipped : 1;                                    // Mask: 0x8, PropSize: 0x10x738(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bShowInPlaceableList : 1;                          // Mask: 0x10, PropSize: 0x10x738(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsRepairing : 1;                                  // Mask: 0x20, PropSize: 0x10x738(0x1)(ConstParm, Parm, Config, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_1EE : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bForceAllowWallAttachments : 1;                    // Mask: 0x80, PropSize: 0x10x738(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPRefreshedStructureColors : 1;                // Mask: 0x1, PropSize: 0x10x739(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsBed : 1;                                        // Mask: 0x2, PropSize: 0x10x739(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsTeleporter : 1;                                 // Mask: 0x4, PropSize: 0x10x739(0x1)(Edit, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsDoorframe : 1;                                  // Mask: 0x8, PropSize: 0x10x739(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bClientAddPlacedOnFloorStructures : 1;             // Mask: 0x10, PropSize: 0x10x739(0x1)(ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventStasis : 1;                           // Mask: 0x20, PropSize: 0x10x739(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDestroyOnStasis : 1;                              // Mask: 0x40, PropSize: 0x10x739(0x1)(ExportObject, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bTriggerBPStasis : 1;                              // Mask: 0x80, PropSize: 0x10x739(0x1)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPostLoadedFromSaveGame : 1;                  // Mask: 0x1, PropSize: 0x10x73A(0x1)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPlacementUsesWeaponClipAmmo : 1;                  // Mask: 0x2, PropSize: 0x10x73A(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreDyingWhenDemolished : 1;                    // Mask: 0x4, PropSize: 0x10x73A(0x1)(ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAbsoluteTakeAnythingAsGround : 1;                 // Mask: 0x8, PropSize: 0x10x73A(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDisablePlacementOnDynamicsFoliageAndDoors : 1;    // Mask: 0x10, PropSize: 0x10x73A(0x1)(ConstParm, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bSeatedDisableCollisionCheck : 1;                  // Mask: 0x20, PropSize: 0x10x73A(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPIsAllowedToBuildEx : 1;                      // Mask: 0x40, PropSize: 0x10x73A(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPHandleStructureEnabled : 1;                  // Mask: 0x80, PropSize: 0x10x73A(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForcePlacingOnVerticalGround : 1;                 // Mask: 0x1, PropSize: 0x10x73B(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPlacementShouldNotBeHorizontal : 1;               // Mask: 0x2, PropSize: 0x10x73B(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bRequiresGroundedPlacement : 1;                    // Mask: 0x4, PropSize: 0x10x73B(0x1)(ExportObject, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAllowPlacingOnOtherTeamStructuresPvPOnly : 1;     // Mask: 0x8, PropSize: 0x10x73B(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForceUseSkeletalMeshComponent : 1;                // Mask: 0x10, PropSize: 0x10x73B(0x1)(ConstParm, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        UseBPOverrideTargetLocation : 1;                   // Mask: 0x20, PropSize: 0x10x73B(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bOverrideFoundationSupportDistance : 1;            // Mask: 0x40, PropSize: 0x10x73B(0x1)(Edit, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1EF : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        PlacementOffsetForVerticalGround;                  // 0x73C(0x4)(BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForceDisableFootSound : 1;                        // Mask: 0x1, PropSize: 0x10x740(0x1)(BlueprintVisible, Net, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bTraceThruEncroachmentPoints : 1;                  // Mask: 0x2, PropSize: 0x10x740(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseMeshOverlapInsteadOfEncroachmentPoints : 1;    // Mask: 0x4, PropSize: 0x10x740(0x1)(ConstParm, BlueprintVisible, ExportObject, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDidSpawnEffects : 1;                              // Mask: 0x8, PropSize: 0x10x740(0x1)(Edit, BlueprintVisible, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPreventDinoPlacementDistanceIncrease : 1;         // Mask: 0x10, PropSize: 0x10x740(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPendingRemoval : 1;                               // Mask: 0x20, PropSize: 0x10x740(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bWasAttachedToPawn : 1;                            // Mask: 0x40, PropSize: 0x10x740(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDontOverrideCollisionProfile : 1;                 // Mask: 0x80, PropSize: 0x10x740(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseAdvancedRotationPlacement : 1;                 // Mask: 0x1, PropSize: 0x10x741(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1F0 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bRootFoundationLimitBuildArea : 1;                 // Mask: 0x20, PropSize: 0x10x741(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bCenterOffscreenFloatingHUDWidgets : 1;            // Mask: 0x40, PropSize: 0x10x741(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1F1 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2DD6[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PlacementInitialTracePointOffsetForVerticalGround; // 0x744(0x4)(ConstParm, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        StructuresAllowedToBeVerticalGround;               // 0x748(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TraceDistanceFromActorToWallVerticalGround;        // 0x758(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DD7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          AllowSnapRotationForTags;                          // 0x760(0x10)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class FName>                          ForceAllowSnapRotationForTags;                     // 0x770(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               FlipByScaleDirection;                              // 0x780(0x18)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               PlacementCollisionAdjustmentBuffer;                // 0x798(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PlacementYawOffset;                                // 0x7B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PlacementYawOffsetIncrement;                       // 0x7B4(0x4)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               PlacementHitLocOffset;                             // 0x7B8(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               PlacementEncroachmentCheckOffset;                  // 0x7D0(0x18)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               PlacementEncroachmentBoxExtent;                    // 0x7E8(0x18)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               PlacementTraceScale;                               // 0x800(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               SnapAlternatePlacementTraceScale;                  // 0x818(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               WorldGeoCheckExtraBoxExtent;                       // 0x830(0x18)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              PlacementRotOffset;                                // 0x848(0x18)(BlueprintVisible, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              PlacementTraceRotOffset;                           // 0x860(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              SnappingRotationOffset;                            // 0x878(0x18)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAllowAttachToPawn : 1;                            // Mask: 0x1, PropSize: 0x10x890(0x1)(Edit, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAllowAttachToSaddle : 1;                          // Mask: 0x2, PropSize: 0x10x890(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPlacementTraceIgnorePawns : 1;                    // Mask: 0x4, PropSize: 0x10x890(0x1)(ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bRequireFreePrimarySnappedStructure : 1;           // Mask: 0x8, PropSize: 0x10x890(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAllowMultiplePrimarySnappedStructures : 1;        // Mask: 0x10, PropSize: 0x10x890(0x1)(Edit, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bOnlyAllowPlacementInWater : 1;                    // Mask: 0x20, PropSize: 0x10x890(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForcePlacingOnGround : 1;                         // Mask: 0x40, PropSize: 0x10x890(0x1)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bTakeAnythingAsGround : 1;                         // Mask: 0x80, PropSize: 0x10x890(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsFoundation : 1;                                 // Mask: 0x1, PropSize: 0x10x891(0x1)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForceCheckNearbyEnemyFoundation : 1;              // Mask: 0x2, PropSize: 0x10x891(0x1)(ConstParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsFloor : 1;                                      // Mask: 0x4, PropSize: 0x10x891(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForceFloorCollisionGroup : 1;                     // Mask: 0x8, PropSize: 0x10x891(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsWall : 1;                                       // Mask: 0x10, PropSize: 0x10x891(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDisallowPreventCropsBiomes : 1;                   // Mask: 0x20, PropSize: 0x10x891(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bCanBeRepaired : 1;                                // Mask: 0x40, PropSize: 0x10x891(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bReturnDamageOnHitFromPawn : 1;                    // Mask: 0x80, PropSize: 0x10x891(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPreventStasis : 1;                                // Mask: 0x1, PropSize: 0x10x892(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAllowUseFromRidingDino : 1;                       // Mask: 0x2, PropSize: 0x10x892(0x1)(BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsFenceFoundation : 1;                            // Mask: 0x4, PropSize: 0x10x892(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseFenceFoundation : 1;                           // Mask: 0x8, PropSize: 0x10x892(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseOnlyBlockSelfTraceChannel : 1;                 // Mask: 0x10, PropSize: 0x10x892(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bWasPlacementSnapped : 1;                          // Mask: 0x20, PropSize: 0x10x892(0x1)(Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsCoreStructure : 1;                              // Mask: 0x40, PropSize: 0x10x892(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDeprecateStructure : 1;                           // Mask: 0x80, PropSize: 0x10x892(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bRequiresToBeInsideZoneVolume : 1;                 // Mask: 0x1, PropSize: 0x10x893(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAllowLoadBearing : 1;                             // Mask: 0x2, PropSize: 0x10x893(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsEnvironmentStructure : 1;                       // Mask: 0x4, PropSize: 0x10x893(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1F2 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPOnVariantSwitch : 1;                         // Mask: 0x80, PropSize: 0x10x893(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DD9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RepairCheckInterval;                               // 0x898(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PlacementFloorCheckZExtentUp;                      // 0x89C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RepairPercentPerInterval;                          // 0x8A0(0x4)(ConstParm, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DecayDestructionPeriod;                            // 0x8A4(0x4)(ConstParm, BlueprintVisible, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        PreventPlacingOnFloorClasses;                      // 0x8A8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AllowPlacingOnFloorClasses;                        // 0x8B8(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  MyStaticMesh;                                      // 0x8C8(0x8)(ConstParm, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  CosmeticVariantStaticMesh;                         // 0x8D0(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USceneComponent*                       MyRootTransform;                                   // 0x8D8(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bGroundRequiresPlacementOnStructures : 1;          // Mask: 0x1, PropSize: 0x10x8E0(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bRequiresPlacementOnStructureFloors : 1;           // Mask: 0x2, PropSize: 0x10x8E0(0x1)(Edit, BlueprintVisible, Net, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDisablePlacementOnStructureFloors : 1;            // Mask: 0x4, PropSize: 0x10x8E0(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDestroyStructureIfFloorDestroyed : 1;             // Mask: 0x8, PropSize: 0x10x8E0(0x1)(Edit, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUsePlacementCollisionCheck : 1;                   // Mask: 0x10, PropSize: 0x10x8E0(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseLenientWorldGeoObstructionCheck : 1;           // Mask: 0x20, PropSize: 0x10x8E0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bRequiresSnapping : 1;                             // Mask: 0x40, PropSize: 0x10x8E0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bSnappingRequiresNearbyFoundation : 1;             // Mask: 0x80, PropSize: 0x10x8E0(0x1)(Edit, ConstParm, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAllowSnapRotation : 1;                            // Mask: 0x1, PropSize: 0x10x8E1(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAllowSnapRotationForStructure : 1;           // Mask: 0x2, PropSize: 0x10x8E1(0x1)(ConstParm, BlueprintVisible, Net, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForceHideObstructedSnaps : 1;                     // Mask: 0x4, PropSize: 0x10x8E1(0x1)(ExportObject, BlueprintReadOnly, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDontCheckSnapsForObstruction : 1;                 // Mask: 0x8, PropSize: 0x10x8E1(0x1)(ExportObject, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPlacementChooseRotation : 1;                      // Mask: 0x10, PropSize: 0x10x8E1(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPlacementIgnoreChooseRotation : 1;                // Mask: 0x20, PropSize: 0x10x8E1(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPlacementAdjustHeight : 1;                        // Mask: 0x40, PropSize: 0x10x8E1(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseSnapFromPlacementOverrideEvenWhenNotSnapped : 1; // Mask: 0x80, PropSize: 0x10x8E1(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideSnapTargetAllowSnapPoint : 1;        // Mask: 0x1, PropSize: 0x10x8E2(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bRequiresPlacingOnWall : 1;                        // Mask: 0x2, PropSize: 0x10x8E2(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bRequiresPlacingUnderStructures : 1;               // Mask: 0x4, PropSize: 0x10x8E2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bSnapRequiresPlacementOnGround : 1;                // Mask: 0x8, PropSize: 0x10x8E2(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAllowSnapOntoSameLocation : 1;                    // Mask: 0x10, PropSize: 0x10x8E2(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bOnlyFoundationIfSnappedToFoundation : 1;          // Mask: 0x20, PropSize: 0x10x8E2(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bFoundationRequiresGroundTrace : 1;                // Mask: 0x40, PropSize: 0x10x8E2(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPlacingOnGroundRequiresNoStructure : 1;           // Mask: 0x80, PropSize: 0x10x8E2(0x1)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bTakeGroundNormal : 1;                             // Mask: 0x1, PropSize: 0x10x8E3(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bTakeGroundNormalDirectly : 1;                     // Mask: 0x2, PropSize: 0x10x8E3(0x1)(Edit, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bFinalPlacementDontAdjustForMaxRange : 1;          // Mask: 0x4, PropSize: 0x10x8E3(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAllowStructureColors : 1;                         // Mask: 0x8, PropSize: 0x10x8E3(0x1)(ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDebug : 1;                                        // Mask: 0x10, PropSize: 0x10x8E3(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseFadeInEffect : 1;                              // Mask: 0x20, PropSize: 0x10x8E3(0x1)(Edit, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUsingStructureColors : 1;                         // Mask: 0x40, PropSize: 0x10x8E3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPreventDefaultVariant : 1;                        // Mask: 0x80, PropSize: 0x10x8E3(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bCarriedByDino : 1;                                // Mask: 0x1, PropSize: 0x10x8E4(0x1)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAllowPickingUpStructureAfterPlacement : 1;        // Mask: 0x2, PropSize: 0x10x8E4(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDisablePickingUpStructureAfterPlacementOnTryMultiUse : 1; // Mask: 0x4, PropSize: 0x10x8E4(0x1)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBlueprintAnimNotifyCustomEvent : 1;            // Mask: 0x8, PropSize: 0x10x8E4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1F3 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2DDD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        TraceIgnoreStructuresWithTypeFlags;                // 0x8E8(0x4)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DDE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          EncroachmentCheckIgnoreStructureTypeTags;          // 0x8F0(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUsesHealth : 1;                                   // Mask: 0x1, PropSize: 0x10x900(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreSnappedToOtherFloorStructures : 1;          // Mask: 0x2, PropSize: 0x10x900(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bEnforceStructureLinkExactRotation : 1;            // Mask: 0x4, PropSize: 0x10x900(0x1)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForceSnappedStructureToGround : 1;                // Mask: 0x8, PropSize: 0x10x900(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForceBlockIK : 1;                                 // Mask: 0x10, PropSize: 0x10x900(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bStationaryStructure : 1;                          // Mask: 0x20, PropSize: 0x10x900(0x1)(Edit, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIgnorePawns : 1;                                  // Mask: 0x40, PropSize: 0x10x900(0x1)(ConstParm, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForcePushTroughWallCheck : 1;                     // Mask: 0x80, PropSize: 0x10x900(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bCanDemolish : 1;                                  // Mask: 0x1, PropSize: 0x10x901(0x1)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAllowPlacingOnOtherTeamStructures : 1;            // Mask: 0x2, PropSize: 0x10x901(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPreventPlacementInWater : 1;                      // Mask: 0x4, PropSize: 0x10x901(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAllowInRegularStructurePreventionZones : 1;       // Mask: 0x8, PropSize: 0x10x901(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDontSetStructureCollisionChannels : 1;            // Mask: 0x10, PropSize: 0x10x901(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForcePreventEnemyStructuresNearby : 1;            // Mask: 0x20, PropSize: 0x10x901(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAllowEnemyDemolish : 1;                           // Mask: 0x40, PropSize: 0x10x901(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDontActuallySnapJustPlacement : 1;                // Mask: 0x80, PropSize: 0x10x901(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreMaxStructuresInRange : 1;                   // Mask: 0x1, PropSize: 0x10x902(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPaintingUseSkeletalMesh : 1;                      // Mask: 0x2, PropSize: 0x10x902(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUsesPaintingComponent : 1;                        // Mask: 0x4, PropSize: 0x10x902(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bCanBuildUpon : 1;                                 // Mask: 0x8, PropSize: 0x10x902(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bHasResetDecayTime : 1;                            // Mask: 0x10, PropSize: 0x10x902(0x1)(Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowInPreventionVolumes : 1;                // Mask: 0x20, PropSize: 0x10x902(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDoForceCreateDynamicMaterials : 1;                // Mask: 0x40, PropSize: 0x10x902(0x1)(EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetInfoFromConsumedItemForPlacedStructure : 1; // Mask: 0x80, PropSize: 0x10x902(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bImmuneToAutoDemolish : 1;                         // Mask: 0x1, PropSize: 0x10x903(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreMaxStructuresInSmallRadius : 1;             // Mask: 0x2, PropSize: 0x10x903(0x1)(Edit, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAdjustPlacementIfCollide : 1;                     // Mask: 0x4, PropSize: 0x10x903(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAlignToSaddleWhenPlacing : 1;                     // Mask: 0x8, PropSize: 0x10x903(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAllowTargetingByCorruptDinos : 1;                 // Mask: 0x10, PropSize: 0x10x903(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPTreatAsFoundationForSnappedStructure : 1;    // Mask: 0x20, PropSize: 0x10x903(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnStructurePickup : 1;                       // Mask: 0x40, PropSize: 0x10x903(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPerInstanceSnapPoints : 1;                        // Mask: 0x80, PropSize: 0x10x903(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bSnapToWaterSurface : 1;                           // Mask: 0x1, PropSize: 0x10x904(0x1)(Edit, ConstParm, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPUpdatedHealth : 1;                           // Mask: 0x2, PropSize: 0x10x904(0x1)(ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1F4 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2DE0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPOverrideDescriptiveName : 1;                 // Mask: 0x1, PropSize: 0x10x908(0x1)(ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideDescriptiveNameForPreview : 1;       // Mask: 0x2, PropSize: 0x10x908(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPreventCreationOfDynamicMaterials : 1;            // Mask: 0x4, PropSize: 0x10x908(0x1)(Edit, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1F5 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2DE1[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FPrimalStructureSnapPoint>     SnapPoints;                                        // 0x910(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        bTraceCheckOnlyUseStructuresWithTypeFlags;         // 0x920(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        AllowStructureColorSets[0x6];                      // 0x924(0x6)(ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DE2[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               WaterVolumeCheckPointOffset;                       // 0x930(0x18)(Edit, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        WaterPlacementMinimumWaterHeight;                  // 0x948(0x4)(ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PlacementMaxZDelta;                                // 0x94C(0x4)(ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PlacementChooseRotationMaxRangeOverride;           // 0x950(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PlacementAdjustHeightLimitUp;                      // 0x954(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PlacementAdjustHeightLimitDown;                    // 0x958(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PlacementMaxRange;                                 // 0x95C(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxSnapLocRange;                                   // 0x960(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SnapOverlapCheckRadius;                            // 0x964(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaximumFoundationSupport2DBuildDistance;           // 0x968(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AdditionalFoundationSupportDistanceForLinkedStructures; // 0x96C(0x4)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PlacementFloorCheckZExtent;                        // 0x970(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LastHealthPercentage;                              // 0x974(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              TakeGroundNormalRotationOffset;                    // 0x978(0x18)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DemolishGiveItemCraftingResourcePercentage;        // 0x990(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDestroyOnStasisUnlessPrevented : 1;               // Mask: 0x1, PropSize: 0x10x994(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1F6 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2DE4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class APrimalStructure>        AllowReplacementByStructureClassType;              // 0x998(0x30)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalStructure>        PreventReplacementOfStructureClassType;            // 0x9C8(0x30)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> PreventReplacementOfStructureClassTypes;           // 0x9F8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReplacementCheckOffset;                            // 0xA08(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaximumHeightAboveWorldGround;                     // 0xA20(0x4)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaximumHeightUnderWorldMaxKillZ;                   // 0xA24(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              PreviewCameraRotation;                             // 0xA28(0x18)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               PreviewCameraPivotOffset;                          // 0xA40(0x18)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreviewCameraDistanceScaleFactor;                  // 0xA58(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreviewCameraDefaultZoomMultiplier;                // 0xA5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreviewCameraMaxZoomMultiplier;                    // 0xA60(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPreviewApplyColorToChildComponents : 1;           // Mask: 0x1, PropSize: 0x10xA64(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1F7 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2DE6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnDamageAmount;                                // 0xA68(0x4)(ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        StructureRangeTypeFlag;                            // 0xA6C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class FName>                          StructureRangeTags;                                // 0xA70(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        LimitMaxStructuresInRangeTypeFlag;                 // 0xA80(0x4)(EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnDamageImpulse;                               // 0xA84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ReturnDamageType;                                  // 0xA88(0x8)(BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ReturnDamageExcludeIncomingTypes;                  // 0xA90(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ReturnDamageOnlyForIncomingTypes;                  // 0xAA0(0x10)(ConstParm, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        OwningPlayerID;                                    // 0xAB0(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	int32                                        OriginalPlacerPlayerID;                            // 0xAB4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                OwningPlayerName;                                  // 0xAB8(0x10)(Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	class FString                                OriginalPlacedTimeStamp;                           // 0xAC8(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	double                                       LastInAllyRangeTime;                               // 0xAD8(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	double                                       LastInAllyRangeTimeSerialized;                     // 0xAE0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	double                                       PickupAllowedBeforeNetworkTime;                    // 0xAE8(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DecayDestructionPeriodMultiplier;                  // 0xAF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DE9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPrimalStructureSnapPointOverride     PreviewSnapOverride;                               // 0xAF8(0x90)(ConstParm, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalDinoCharacter>   SaddleDino;                                        // 0xB88(0x8)(BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class APrimalDinoCharacter*>          LatchedDinos;                                      // 0xB90(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    PreviewMaterial;                                   // 0xBA0(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    PreviewMaterialMasked;                             // 0xBA8(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UMaterialInstanceDynamic*>      PreviewMaterialInstances;                          // 0xBB0(0x10)(BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PreviewMaterialColorParamName;                     // 0xBC0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class APrimalStructure*>              LinkedStructures;                                  // 0xBC8(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<uint32>                               LinkedStructuresID;                                // 0xBD8(0x10)(Edit, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class APrimalStructure*>              StructuresPlacedOnFloor;                           // 0xBE8(0x10)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> SnapToStructureTypesToExclude;                     // 0xBF8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> SnapFromStructureTypesToExclude;                   // 0xC08(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<class FName>                          SnapToStructureTagsToExclude;                      // 0xC18(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<class FName>                          SnapFromStructureTagsToExclude;                    // 0xC28(0x10)(ConstParm, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class APrimalStructure*                      PlacedOnFloorStructure;                            // 0xC38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalStructure*                      PrimarySnappedStructureChild;                      // 0xC40(0x8)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalStructure*                      PrimarySnappedStructureParent;                     // 0xC48(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                OwnerName;                                         // 0xC50(0x10)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int16                                        StructureColors[0x6];                              // 0xC60(0xC)(Edit, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DEB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APawn*                                 AttachedTo;                                        // 0xC70(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint32                                       StructureID;                                       // 0xC78(0x4)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint32                                       AttachedToDinoID1;                                 // 0xC7C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> OnlyAllowStructureClassesToAttach;                 // 0xC80(0x10)(ConstParm, ExportObject, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> OnlyAllowStructureClassesFromAttach;               // 0xC90(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DEC[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    StructureIconMaterial;                             // 0xCD0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               AdvancedRotationPlacementOffset;                   // 0xCD8(0x18)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                SpawnEmitter;                                      // 0xCF0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                DestructionEmitter;                                // 0xCF8(0x8)(Edit, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               SpawnEmitterLocationOffset;                        // 0xD00(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              SpawnEmitterRotationOffset;                        // 0xD18(0x18)(Edit, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                PickupGivesItem;                                   // 0xD30(0x8)(BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ExcludeInStructuresRadius;                         // 0xD38(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DEE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        ExcludeInStructuresRadiusClasses;                  // 0xD40(0x10)(Edit, BlueprintVisible, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class FName>                          ExcludeInStructuresRadiusTags;                     // 0xD50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DF0[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class UStructurePaintingComponent*           PaintingComponent;                                 // 0xD78(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<class FString>                        PreventBuildStructureReasonStringOverrides;        // 0xD80(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               FloatingHudLocTextOffset;                          // 0xD90(0x18)(ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        UsablePriority;                                    // 0xDA8(0x4)(ConstParm, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DF1[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ForceLimitStructuresInRange;                       // 0xDB8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPreventAttachToSaddle : 1;                        // Mask: 0x1, PropSize: 0x10xDBC(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForcePersonalStructureOwnership : 1;              // Mask: 0x2, PropSize: 0x10xDBC(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideAllowStructureAccess : 1;               // Mask: 0x4, PropSize: 0x10xDBC(0x1)(Edit, BlueprintVisible, ExportObject, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bBPOverideDemolish : 1;                            // Mask: 0x8, PropSize: 0x10xDBC(0x1)(Edit, ConstParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnDemolish : 1;                              // Mask: 0x10, PropSize: 0x10xDBC(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideAllowSnappingWith : 1;                  // Mask: 0x20, PropSize: 0x10xDBC(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideAllowSnappingWithButAlsoCallSuper : 1;  // Mask: 0x40, PropSize: 0x10xDBC(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnLinkedStructureDestroyed : 1;              // Mask: 0x80, PropSize: 0x10xDBC(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseTribeGroupStructureRank : 1;                   // Mask: 0x1, PropSize: 0x10xDBD(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForceBlockStationaryTraces : 1;                   // Mask: 0x2, PropSize: 0x10xDBD(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAttachToStaticMeshSocket : 1;                     // Mask: 0x4, PropSize: 0x10xDBD(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAttachToStaticMeshSocketRotation : 1;             // Mask: 0x8, PropSize: 0x10xDBD(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForceGroundForFoundation : 1;                     // Mask: 0x10, PropSize: 0x10xDBD(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideSnappedToTransform : 1;                 // Mask: 0x20, PropSize: 0x10xDBD(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideSnappedFromTransform : 1;               // Mask: 0x40, PropSize: 0x10xDBD(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bBPOverridePlacementRotation : 1;                  // Mask: 0x80, PropSize: 0x10xDBD(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDisableStructureOnElectricStorm : 1;              // Mask: 0x1, PropSize: 0x10xDBE(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bNoCollision : 1;                                  // Mask: 0x2, PropSize: 0x10xDBE(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1F8 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsPreviewStructure : 1;                           // Mask: 0x8, PropSize: 0x10xDBE(0x1)(BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bStructureUseAltCollisionChannel : 1;              // Mask: 0x10, PropSize: 0x10xDBE(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDemolishJustDestroy : 1;                          // Mask: 0x20, PropSize: 0x10xDBE(0x1)(ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bHighPriorityDemolish : 1;                         // Mask: 0x40, PropSize: 0x10xDBE(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDisableSnapStructure : 1;                         // Mask: 0x80, PropSize: 0x10xDBE(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bTriggerBPUnstasis : 1;                            // Mask: 0x1, PropSize: 0x10xDBF(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bBlueprintDrawHUD : 1;                             // Mask: 0x2, PropSize: 0x10xDBF(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bBlueprintDrawPreviewHUD : 1;                      // Mask: 0x4, PropSize: 0x10xDBF(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUsesWorldSpaceMaterial : 1;                       // Mask: 0x8, PropSize: 0x10xDBF(0x1)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForceIgnoreStationaryObjectTrace : 1;             // Mask: 0x10, PropSize: 0x10xDBF(0x1)(BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowNearSupplyCrateSpawns : 1;              // Mask: 0x20, PropSize: 0x10xDBF(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bBPPostSetStructureCollisionChannels : 1;          // Mask: 0x40, PropSize: 0x10xDBF(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPickupGiveItemRequiresAccess : 1;                 // Mask: 0x80, PropSize: 0x10xDBF(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAllowPickupGiveItem : 1;                     // Mask: 0x1, PropSize: 0x10xDC0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDontResetPickupTimer : 1;                         // Mask: 0x2, PropSize: 0x10xDC0(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPreventAttachedChildStructures : 1;               // Mask: 0x4, PropSize: 0x10xDC0(0x1)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1F9 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2DF5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        PlacementMaterialForwardDirIndex;                  // 0xDC4(0x4)(EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPreventPreviewIfWeaponPlaced : 1;                 // Mask: 0x1, PropSize: 0x10xDC8(0x1)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bStructuresInRangeTypeFlagUseAltCollisionChannel : 1; // Mask: 0x2, PropSize: 0x10xDC8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1FA : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIgnoredByTargeting : 1;                           // Mask: 0x8, PropSize: 0x10xDC8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPConsumeProjectileImpact : 1;                 // Mask: 0x10, PropSize: 0x10xDC8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1FB : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2DF7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ForcePreventPlacingInOfflineRaidStructuresRadius;  // 0xDCC(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  AttachToStaticMeshSocketNameBase;                  // 0xDD0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               AttachToStaticMeshSocketMinScaleDefault;           // 0xDD8(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TMap<class FName, struct FVector>            AttachToStaticMeshSocketMinScaleOverrides;         // 0xDF0(0x50)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                StructureHarvestingComponent;                      // 0xE40(0x8)(Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UPrimalHarvestingComponent*            MyStructureHarvestingComponent;                    // 0xE48(0x8)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DF9[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ItemsUseAlternateActorClassAttachment;             // 0xE60(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        UnstasisAutoDestroyAfterTime;                      // 0xE68(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        TribeGroupStructureRank;                           // 0xE6C(0x1)(EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DFA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        PreventSaddleDinoClasses;                          // 0xE70(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AllowSaddleDinoClasses;                            // 0xE80(0x10)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PlaceOnWallUseStaticMeshTag;                       // 0xE90(0x8)(ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalStructure>        SnapStructureClass;                                // 0xE98(0x30)(ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DemolishActivationTime;                            // 0xEC8(0x4)(ConstParm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DFB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               GroundEncroachmentCheckLocationOffset;             // 0xED0(0x18)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        StructureMinAllowedVersion;                        // 0xEE8(0x4)(Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        SavedStructureMinAllowedVersion;                   // 0xEEC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OverrideEnemyFoundationPreventionRadius;           // 0xEF0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OverridePVPEnemyFoundationPreventionRadius;        // 0xEF4(0x4)(BlueprintVisible, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ExpandEnemyFoundationPreventionRadius;             // 0xEF8(0x4)(BlueprintReadOnly, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        BedID;                                             // 0xEFC(0x4)(BlueprintVisible, ExportObject, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ForceAllowWallAttachmentClasses;                   // 0xF00(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LimitMaxStructuresInRangeRadius;                   // 0xF10(0x4)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DFD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        FastDecayLinkedStructureClasses;                   // 0xF18(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PlacementMaxZAbovePlayerHeight;                    // 0xF28(0x4)(Edit, ExportObject, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DFE[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class USceneComponent*>               OverrideTargetComponents;                          // 0xF38(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OverrideApproachRadius;                            // 0xF48(0x4)(BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DFF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AMissionType*                          OwnerMission;                                      // 0xF50(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bBPCheckItemRequiementsToBuild : 1;                // Mask: 0x1, PropSize: 0x10xF58(0x1)(Net, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1FC : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2E01[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FItemNetID                            PlaceUsingItemID;                                  // 0xF5C(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E02[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          CustomDataModifiedOnStructurePickup;               // 0xF68(0x10)(BlueprintVisible, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetAggroDinoOnDamageSettings : 1;            // Mask: 0x1, PropSize: 0x10xF78(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1FD : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bCanAttachToExosuit : 1;                           // Mask: 0x4, PropSize: 0x10xF78(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bCanBeStoredByExosuit : 1;                         // Mask: 0x8, PropSize: 0x10xF78(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bStructureIgnoreDying : 1;                         // Mask: 0x10, PropSize: 0x10xF78(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bClientReceivedStructuresPlacedOnFloor : 1;        // Mask: 0x20, PropSize: 0x10xF78(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bHasAnyStructuresPlacedOnFloor : 1;                // Mask: 0x40, PropSize: 0x10xF78(0x1)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventCharacterBasing : 1;                  // Mask: 0x80, PropSize: 0x10xF78(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDontSetDynamicObstacle : 1;                       // Mask: 0x1, PropSize: 0x10xF79(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDontSetDamageParameters : 1;                      // Mask: 0x2, PropSize: 0x10xF79(0x1)(ConstParm, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bBedUsesDefaultDestination : 1;                    // Mask: 0x4, PropSize: 0x10xF79(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAllowRegisterSkeletalMeshesOnDedicatedServer : 1; // Mask: 0x8, PropSize: 0x10xF79(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseInfiniteStaticMeshDrawDistance : 1;            // Mask: 0x10, PropSize: 0x10xF79(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1FE : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsStructureSkin : 1;                              // Mask: 0x40, PropSize: 0x10xF79(0x1)(Edit, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1FF : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2E05[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                StructureSkinClass;                                // 0xF80(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ReplicatedStructureMySkinClass;                    // 0xF88(0x8)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int64                                        MyCustomCosmeticStructureSkinID;                   // 0xF90(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MyCustomCosmeticStructureSkinVariantID;            // 0xF98(0x4)(ConstParm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E06[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class UObject>>         StructureSkinSupportedStructures;                  // 0xFA0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E07[0x12];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bFloorDontHideGrass : 1;                           // Mask: 0x1, PropSize: 0x10xFC2(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForceHideGrass : 1;                               // Mask: 0x2, PropSize: 0x10xFC2(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUsesServerSideSkinData : 1;                       // Mask: 0x4, PropSize: 0x10xFC2(0x1)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_200 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2E09[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FloorHideGrassTraceToGroundDistanceNonFoundation;  // 0xFC4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               HideGrassExtentsOverride;                          // 0xFC8(0x18)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               HideGrassExtentsOffset;                            // 0xFE0(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bNotifyOnBlockListUpdate;                          // 0xFF8(0x1)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E0A[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            RenameIcon;                                        // 0x1008(0x8)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            PickupIcon;                                        // 0x1010(0x8)(ConstParm, ExportObject, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            DemolishIcon;                                      // 0x1018(0x8)(BlueprintVisible, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            RepairIcon;                                        // 0x1020(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, Transient, GlobalConfig)
	class UTexture2D*                            CantRepairIcon;                                    // 0x1028(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            ColorizeIcon;                                      // 0x1030(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            OpenContainerIcon;                                 // 0x1038(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            ClaimIcon;                                         // 0x1040(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            UseSoapIcon;                                       // 0x1048(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            ShowRangeIcon;                                     // 0x1050(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            HideRangeIcon;                                     // 0x1058(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            LockIcon;                                          // 0x1060(0x8)(Edit, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            UnlockIcon;                                        // 0x1068(0x8)(Edit, ConstParm, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            SetPinCodeIcon;                                    // 0x1070(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            ClearPinCodeIcon;                                  // 0x1078(0x8)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnterPinCodeIcon;                                  // 0x1080(0x8)(Edit, ExportObject, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            SetPinCodeInRangeIcon;                             // 0x1088(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableAdminOnlyAccess;                             // 0x1090(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableAdminOnlyAccess;                            // 0x1098(0x8)(Edit, BlueprintVisible, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            TribeRankSettingsIcon;                             // 0x10A0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    TribeActivationRankSelectionIcons;                 // 0x10A8(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            VariantsFolderIcon;                                // 0x10B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            DefaultVariantIcon;                                // 0x10C0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            RemoveSkinIcon;                                    // 0x10C8(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bHasWindSourceComponentsToInteractWithVolumetricDispatcher : 1; // Mask: 0x1, PropSize: 0x10x10D0(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_203 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2E0E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSkinNetMessageParams                 SkinPersistentData;                                // 0x10D8(0x40)(Edit, ConstParm, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FBPNetExecParams                      LocalOnlySkinCustomPersistentData;                 // 0x1118(0x78)(Edit, BlueprintReadOnly, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnClientUpdatedLinkedStructures : 1;         // Mask: 0x1, PropSize: 0x10x1190(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnServerUpdatedLinkedStructures : 1;         // Mask: 0x2, PropSize: 0x10x1190(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPostPreviewStructureFlipped : 1;             // Mask: 0x4, PropSize: 0x10x1190(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bLinkedStructureRemovalForceClientUpdate : 1;      // Mask: 0x8, PropSize: 0x10x1190(0x1)(ConstParm, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E11[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructure* GetDefaultObj();

	void UpdateTribeGroupStructureRank(uint8* NewRank);
	void UpdateStructureMesh();
	void UpdateStencilValuesWithStenilDepth(enum class EStencilAlliance* InAlliance);
	void UpdateStencilValues();
	bool UpdatedHealth();
	bool TickPlacingStructure(class APrimalStructurePlacer** PlacerActor);
	class APrimalStructure* StructureSkinHandleCommand(class FName* CommandName, struct FBPNetExecParams* ExecParams);
	void StartRepair();
	void SpawnZiplineActors(class APrimalStructure** ZiplineAnchor0, class APrimalStructure** ZiplineAnchor1);
	bool SnapsAreOptional();
	void SetZiplineStructurePointers(class APrimalStructure** Structure0, class APrimalStructure** Structure1);
	bool SetVariant(class FName VariantTag, bool* bForceSet);
	void SetupDynamicMeshMaterials(class UMeshComponent** MeshComp);
	void SetStructureSkinTimer(float* TimerInterval, bool* bLooping);
	bool SetStructureSkin(class UClass* SkinClass, int64 CustomCosmeticStructureSkinID, int32 CustomCosmeticStructureSkinVariantID);
	int32 SetStructureColorValue(int32* SetVal);
	void SetStaticMobility();
	void SetPreventSaving(bool bPrevent);
	void SetNetworkParentDino(class APrimalDinoCharacter* Dino);
	void SetHarvestingActive(bool* bActive, bool bOverrideBaseHealth, float BaseHarvestHealthMult, bool bAssignToTribe, int32* AssignedToTribeID);
	void SetEnabledPrimarySnappedStructureParent(bool bEnabled);
	void SetEnabled(bool bEnabled);
	void SetDynamicMobility();
	void SetDefaultDestinationStructure(class APrimalStructure* DestinationStructure, class AShooterPlayerController** ForPC);
	bool SetContainerActive();
	void SetBoundsScale(float NewScale);
	void SetBedEnabled(bool bEnabled);
	void SetAllowedStructureColorRegions(const TArray<int32>& AllowedRegions);
	bool RefreshStructurePlacement(struct FRotator* AtRotation, class FName* BoneName);
	void RefreshStructureColors(class UMeshComponent* ForceRefreshComponent);
	TArray<class APrimalStructure*> PreviewCulledStructures(const TArray<class APrimalStructure*>& InOutStructuresOnFloor);
	void PrepareAsPlacementPreview();
	void PlacedOnDino(class APrimalDinoCharacter* OnChar);
	void PickupStructureAndDependingLinkedStructures(class APlayerController** ForPC, bool IsFirstPickup);
	class UPrimalItem* PickupStructure();
	void OverrideOwner(class AActor* NewOwner, bool ForceOnlyRelevantToOwner);
	void OnStructurePlacementRefreshed();
	void OnRep_StructureSkinClass(class UClass* PrevSkinClass);
	void OnRep_StructureColors();
	void OnRep_CurrentVariantTag();
	void NonPlayerFinalStructurePlacement(int32 PlacementTargetingTeam, int32 PlacementOwningPlayerID, const class FString& PlacementOwningPlayerName, class APrimalStructure* ForcePrimaryParent);
	void NonLoopingStructureSkinTimer();
	int32 NetUpdateTeamAndOwnerName(const class FString& NewOwnerName);
	void NetUpdateOriginalOwnerNameAndID(int32 NewOriginalOwnerID, const class FString& NewOriginalOwnerName);
	void NetSpawnCoreStructureDeathActor();
	void NetSetIgnoreDestructionEffects(bool bNewIgnoreDestructionEffects);
	void NetResetClientReceivedStructuersPlacedOnFloors();
	void NetDoSpawnEffects();
	void MultiSetPickupAllowedBeforeNetworkTime(double NewTime);
	class FName MultiRefreshVariantSettings();
	bool MultiRefreshStructureSkin(class UClass* SkinClass, int64 CustomCosmeticStructureSkinID, int32 CustomCosmeticStructureSkinVariantID, bool RemovePrevious);
	struct FSkinNetMessageParams MultiHandleSkinNetMessage(class FName* MessageName);
	void MultiAddStructuresPlacedOnFloor(class APrimalStructure** Structure);
	void LoopingStructureSkinTimer();
	class APrimalStructure* LinkStructure();
	bool IsValidStructureSkinTarget();
	bool IsValidStructureForCryopodDeployment(struct FVector* Location);
	bool IsValidSnapPointTo();
	bool IsValidSnapPointFrom();
	bool IsValidForSnappingFrom();
	bool IsRepairAllowed();
	bool IsPointObstructedByWorldGeometry(class UWorld** ForWorld);
	bool IsPointNearSupplyCrateSpawn(class UWorld** TheWorld);
	bool IsPinLocked();
	bool IsOnlyLinkedToFastDecayStructures();
	bool IsLinkedToWaterOrPowerSource();
	bool IsAllowedToDemolish(class AShooterPlayerController** ForPC);
	int32 IsAllowedToBuild(struct FRotator* AtRotation);
	TArray<struct FTooltipTextInfo> GetTooltipStructureInfoBP(class AShooterPlayerController** PlayerOwner);
	TArray<struct FTooltipTextInfo> GetTooltipStructureInfo(class AShooterPlayerController** PlayerOwner);
	float GetStructureSquaredRadius();
	TArray<struct FDestructionGeoCollectionInfo> GetStructureSkinDestroyedMeshes();
	class APrimalStructure* GetStructuresInRange(class UWorld** TheWorld, bool* bUseInternalOctree);
	class UStaticMesh* GetStructureMeshAndTransform(class FName VariantTag);
	int32 GetStructureColorValue();
	struct FLinearColor GetStructureColor();
	class FName GetSnapPointName();
	int32 GetPinCode();
	class UPhysicalMaterial* GetPhysMaterialOverride();
	class UPaintingTexture* GetPaintingTexture();
	class UStaticMeshComponent* GetPaintingStaticMesh();
	int32 GetNumStructuresInRangeStructureTypeFlag(class UWorld** TheWorld, bool* bUseInternalOctree, int32 ForTeam);
	TArray<class APrimalStructure*> GetNearbyStructuresOfClass(struct FVector* Location);
	struct FVector GetFoundationTop();
	struct FStructureVariant GetDefaultVariant();
	int32 GetDefaultDestinationID();
	class ADayCycleManager* GetDayCycleManager();
	class APrimalStructure* GetClosestStructureToPoint(class UWorld** ForWorld);
	int32 GetBedID();
	class UClass* GetBedFilterClass();
	class APrimalStructure* GetAttachedToShip();
	TArray<int32> GetAllowedStructureColorRegions();
	TArray<class UStaticMeshComponent*> GetAdditionalComponentsForDyePreview();
	void ForceReplicateLinkedStructures();
	bool FinalStructurePlacement(struct FRotator* AtRotation, class FName* BoneName);
	struct FSkinNetMessageParams ExecSkinNetMessage(class FName* MessageName);
	void DisableStructurePickup();
	void DestroyStructuresPlacedOnFloor();
	bool DemolishStructureAndDependingLinkedStructures(class APlayerController** ForPC);
	void Demolish(class APlayerController** ForPC, class AActor* DamageCauser);
	void DelayedDisableSnapParent();
	class UMeshComponent* CreateDynamicMaterials();
	TArray<uint32> ClientUpdateLinkedStructures();
	bool ClearStructureSkinTimer();
	void ClearStructureLinks(class APlayerController** ForPC);
	void ClearCustomColors();
	class UStaticMesh* ChangeStructureStaticMesh(class UStaticMeshComponent** MeshComp);
	bool CanPickupStructureFromRecentPlacement();
	bool CanBeStoredByExosuit(class AShooterPlayerController** ForPC);
	bool CanAttachToExosuit(class AShooterPlayerController** ForPC);
	class AShooterHUD* CallDrawHUD();
	class AShooterHUD* CallDrawFloatingHUD();
	bool BPUseCountStructureInRange();
	bool BPUpdatedHealth();
	void BPUnstasis();
	void BPTriggerStasisEvent();
	bool BPTreatAsFoundationForSnappedStructure();
	bool BPStructureSkinTryMultiUse(class APlayerController** ForPC);
	class APrimalStructure* BPStructureSkinTimerTriggered(bool* bLooping);
	TArray<struct FMultiUseEntry> BPStructureSkinGetMultiUseEntries(class APlayerController** ForPC);
	class APrimalStructure* BPStructureSkinClientDoMultiUse(class APlayerController** ForPC, int32* ClientUseIndex);
	float BPStructureSkinBlueprintDrawHUD();
	void BPStructurePreGetMultiUseEntries(class APlayerController** ForPC);
	void BPRefreshedStructureColors();
	bool BPPreventUsingAsFloorForStructure();
	bool BPPreventStasis();
	bool BPPreventSpawnForPlayer();
	bool BPPreventPlacingStructureOntoMe();
	bool BPPreventPlacingOnFloorStructure(class APrimalStructure** FloorStructure);
	bool BPPreventPlacementOnPawn(class APrimalCharacter** ForCharacter);
	bool BPPreventCharacterBasing(class UPrimitiveComponent** BasedOnComponent);
	void BPPostSetStructureCollisionChannels();
	void BPPostPreviewStructureFlipped();
	void BPPostLoadedFromSaveGame();
	void BPPlayDying(float KillingDamage, struct FDamageEvent* DamageEvent, class APawn* InstigatingPawn, class AActor* DamageCauser);
	void BPPlacedStructure(class APlayerController** ForPC);
	struct FVector BPOverrideTargetLocation();
	bool BPOverrideSnapTargetAllowSnapPoint();
	bool BPOverrideSnappedToTransform();
	bool BPOverrideSnappedFromTransform();
	struct FRotator BPOverridePlacementRotation();
	struct FPlacementData BPOverrideFinalPlacementData();
	class FString BPOverrideDescriptiveNameForPreview();
	class FString BPOverrideDescriptiveName();
	bool BPOverrideDemolish(class AShooterPlayerController** ForPC);
	bool BPOverrideConfirmPlacingStructure();
	class FString BPOverrideCantBuildReasonString();
	bool BPOverrideAllowStructureAccess(class AShooterPlayerController** ForPC);
	bool BPOverrideAllowSnapPoint();
	class FName BPOnVariantSwitch();
	bool BPOnStructurePickup(class UClass* ItemType);
	void BPOnServerUpdatedLinkedStructures();
	class APrimalStructure* BPOnLinkedStructureDestroyed();
	void BPOnDemolish(class APlayerController** ForPC, class AActor* DamageCauser);
	void BPOnClientUpdatedLinkedStructures();
	class APrimalStructure* BPNotifyAmmoBoxReloadedStructure();
	bool BPNetRefreshStructureColors();
	int32 BPIsAllowedToBuildEx();
	int32 BPIsAllowedToBuild();
	bool BPImpactEffect();
	void BPHandleStructureEnabled(bool bEnabled);
	bool BPHandleBedFastTravel(class AShooterPlayerController** ForPC);
	struct FStructureVariant BPGetVariantByTag(class FName VariantTag);
	int32 BPGetStructureID(class APrimalStructure* PrimalStructure);
	bool BPGetSnapToPlacementMeshOverride(const struct FVector& PreviewLocOffset, const struct FRotator& PreviewRotOffset, const struct FVector& PreviewScaleOffset);
	TArray<struct FPrimalStructureSnapPoint> BPGetSnapPoints();
	bool BPGetSnapFromPlacementMeshOverride(const struct FVector& PreviewLocOffset, const struct FRotator& PreviewRotOffset, const struct FVector& PreviewScaleOffset);
	class UPrimalItem* BPGetInfoFromConsumedItemForPlacedStructure();
	class APrimalStructure* BPGetFromID();
	float BPGetAmmoBoxReloadPercent();
	class UClass* BPGetAllLinkedStructures();
	float BPGetAggroDinoOnDamageSettings();
	bool BPForceConsideredEnemyFoundation();
	bool BPDefaultProcessEditText(class AShooterPlayerController** ForPC);
	bool BPConsumeProjectileImpact(struct FHitResult* HitResult, class AActor* DamageCauser);
	int32 BPCheckItemRequiementsToBuild();
	void BPBlockListUpdated();
	void BPBeginPreview();
	class UPrimalItem* BPApplyCustomDurabilityOnPickup();
	bool BPAllowSwitchToVariant(class FName VariantTag);
	bool BPAllowSnapRotationForStructure();
	bool BPAllowSnappingWith(class APlayerController** ForPC);
	bool BPAllowPickupGiveItem(class APlayerController** ForPC);
	class UStructurePaintingComponent* BP_OnPaintingComponentInitialized();
	float BlueprintDrawPreviewHUD();
	float BlueprintDrawHUD();
	void BlueprintAnimNotifyCustomEvent(class FName* CustomEventName, class USkeletalMeshComponent** MeshComp, class UAnimSequenceBase** Animation, class UAnimNotify** AnimNotifyObject);
	class UPrimalItem* ApplyPrimalItemSettingsToStructure();
	bool AllowStructureAccess(class APlayerController** ForPC);
	bool AllowSnappingWith(class APlayerController** ForPC);
	bool AllowShowUserGeneratedText();
};

// 0x460 (0x15F8 - 0x1198)
// Class ShooterGame.PrimalStructureItemContainer
class APrimalStructureItemContainer : public APrimalStructure
{
public:
	class UPrimalInventoryComponent*             MyInventoryComponent;                              // 0x1198(0x8)(ExportObject, ReturnParm, Transient, DisableEditOnInstance)
	uint8                                        bAdjustDamageAsPlayerWithEquipment : 1;            // Mask: 0x1, PropSize: 0x10x11A0(0x1)(ExportObject, Net, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCollisionCompsForFloatingDPS : 1;              // Mask: 0x2, PropSize: 0x10x11A0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyConsumeDurabilityOnEquipmentForEnemies : 1;   // Mask: 0x4, PropSize: 0x10x11A0(0x1)(EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoActivateContainer : 1;                        // Mask: 0x8, PropSize: 0x10x11A0(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bCanToggleActivation : 1;                          // Mask: 0x10, PropSize: 0x10x11A0(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAutoActivateWhenFueled : 1;                       // Mask: 0x20, PropSize: 0x10x11A0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAllowCustomName : 1;                              // Mask: 0x40, PropSize: 0x10x11A0(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bContainerActivated : 1;                           // Mask: 0x80, PropSize: 0x10x11A0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bOnlyUseSpoilingMultipliersIfActivated : 1;        // Mask: 0x1, PropSize: 0x10x11A1(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bCraftingSubstractConnectedWater : 1;              // Mask: 0x2, PropSize: 0x10x11A1(0x1)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForceNoPinLocking : 1;                            // Mask: 0x4, PropSize: 0x10x11A1(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bServerBPNotifyInventoryItemChanges : 1;           // Mask: 0x8, PropSize: 0x10x11A1(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bClientBPNotifyInventoryItemChanges : 1;           // Mask: 0x10, PropSize: 0x10x11A1(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDisplayActivationOnInventoryUI : 1;               // Mask: 0x20, PropSize: 0x10x11A1(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetFuelConsumptionMultiplier : 1;            // Mask: 0x40, PropSize: 0x10x11A1(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPreventToggleActivation : 1;                      // Mask: 0x80, PropSize: 0x10x11A1(0x1)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bServerBPNotifyInventoryItemChangesUseQuantity : 1; // Mask: 0x1, PropSize: 0x10x11A2(0x1)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bStartedUnderwater : 1;                            // Mask: 0x2, PropSize: 0x10x11A2(0x1)(Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bCheckStartedUnderwater : 1;                       // Mask: 0x4, PropSize: 0x10x11A2(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDisplayActivationOnInventoryUISecondary : 1;      // Mask: 0x8, PropSize: 0x10x11A2(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDisplayActivationOnInventoryUITertiary : 1;       // Mask: 0x10, PropSize: 0x10x11A2(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bFuelAllowActivationWhenNoPower : 1;               // Mask: 0x20, PropSize: 0x10x11A2(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPoweredAllowBattery : 1;                          // Mask: 0x40, PropSize: 0x10x11A2(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPoweredUsingBattery : 1;                          // Mask: 0x80, PropSize: 0x10x11A2(0x1)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPoweredHasBattery : 1;                            // Mask: 0x1, PropSize: 0x10x11A3(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPoweredAllowSolar : 1;                            // Mask: 0x2, PropSize: 0x10x11A3(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPoweredUsingSolar : 1;                            // Mask: 0x4, PropSize: 0x10x11A3(0x1)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseColorRegionForEmitterColor : 1;                // Mask: 0x8, PropSize: 0x10x11A3(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_207 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        SolarRefreshIntervalMin;                           // 0x11A4(0x4)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SolarRefreshIntervalMax;                           // 0x11A8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SolarRefreshInterval;                              // 0x11AC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	double                                       LastSolarRefreshTime;                              // 0x11B0(0x8)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                BatteryClassOverride;                              // 0x11B8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        PoweredOverrideCounter;                            // 0x11C0(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        UseBPApplyPinCode : 1;                             // Mask: 0x1, PropSize: 0x10x11C4(0x1)(Edit, ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_208 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2E44[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UMaterialInterface*>            ActivateMaterials;                                 // 0x11C8(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UMaterialInterface*>            InActivateMaterials;                               // 0x11D8(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FItemToDisplayInStructureTooltip> ItemsToDisplayInStructureTooltip;                  // 0x11E8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UChildActorComponent*                  MyChildEmitterSpawnable;                           // 0x11F8(0x8)(BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsLocked : 1;                                     // Mask: 0x1, PropSize: 0x10x1200(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, Config, InstancedReference, SubobjectReference)
	uint8                                        bIsPinLocked : 1;                                  // Mask: 0x2, PropSize: 0x10x1200(0x1)(Edit, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bHasFuel : 1;                                      // Mask: 0x4, PropSize: 0x10x1200(0x1)(BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsUnderwater : 1;                                 // Mask: 0x8, PropSize: 0x10x1200(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_209 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2E45[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                BoxName;                                           // 0x1208(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxBoxNameLength;                                  // 0x1218(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDisableActivationUnderwater : 1;                  // Mask: 0x1, PropSize: 0x10x121C(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForcePreventAutoActivateWhenConnectedToWater : 1; // Mask: 0x2, PropSize: 0x10x121C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bSupportsLocking : 1;                              // Mask: 0x4, PropSize: 0x10x121C(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bSupportsPinLocking : 1;                           // Mask: 0x8, PropSize: 0x10x121C(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDropInventoryOnDestruction : 1;                   // Mask: 0x10, PropSize: 0x10x121C(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDestroyWhenAllItemsRemoved : 1;                   // Mask: 0x20, PropSize: 0x10x121C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDrinkingWater : 1;                                // Mask: 0x40, PropSize: 0x10x121C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPoweredWaterSourceWhenActive : 1;                 // Mask: 0x80, PropSize: 0x10x121C(0x1)(Edit, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bActiveRequiresPower : 1;                          // Mask: 0x1, PropSize: 0x10x121D(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsPowerJunction : 1;                              // Mask: 0x2, PropSize: 0x10x121D(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bHidePowerJunctionConnection : 1;                  // Mask: 0x4, PropSize: 0x10x121D(0x1)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAutoActivateIfPowered : 1;                        // Mask: 0x8, PropSize: 0x10x121D(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bLastToggleActivated : 1;                          // Mask: 0x10, PropSize: 0x10x121D(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bSupportsPinActivation : 1;                        // Mask: 0x20, PropSize: 0x10x121D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsPowered : 1;                                    // Mask: 0x40, PropSize: 0x10x121D(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bOnlyAllowTeamActivation : 1;                      // Mask: 0x80, PropSize: 0x10x121D(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bReplicateItemFuelClass : 1;                       // Mask: 0x1, PropSize: 0x10x121E(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseOpenSceneAction : 1;                           // Mask: 0x2, PropSize: 0x10x121E(0x1)(BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_20A : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPActivated : 1;                               // Mask: 0x8, PropSize: 0x10x121E(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanBeActivated : 1;                          // Mask: 0x10, PropSize: 0x10x121E(0x1)(OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanBeActivatedByPlayer : 1;                  // Mask: 0x20, PropSize: 0x10x121E(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bBPOnContainerActiveHealthDecrease : 1;            // Mask: 0x40, PropSize: 0x10x121E(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bBPIsValidWaterSourceForPipe : 1;                  // Mask: 0x80, PropSize: 0x10x121E(0x1)(BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAllowAutoActivateWhenNoPower : 1;                 // Mask: 0x1, PropSize: 0x10x121F(0x1)(EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAutoActivateWhenNoPower : 1;                      // Mask: 0x2, PropSize: 0x10x121F(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPreventUsingAsWirelessCraftingSource : 1;         // Mask: 0x4, PropSize: 0x10x121F(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_20B : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        InsulationRange;                                   // 0x1220(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HyperThermiaInsulation;                            // 0x1224(0x4)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HypoThermiaInsulation;                             // 0x1228(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ContainerActiveDecreaseHealthSpeed;                // 0x122C(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FuelConsumptionIntervalsMultiplier;                // 0x1230(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DropInventoryOnDestructionLifespan;                // 0x1234(0x4)(ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                ActivateContainerString;                           // 0x1238(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            ActivateContainerIcon;                             // 0x1248(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                DeactivateContainerString;                         // 0x1250(0x10)(Edit, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            DeactivateContainerIcon;                           // 0x1260(0x8)(BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ContainerActiveHealthDecreaseDamageTypePassive;    // 0x1268(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ActiveRequiresFuelItems;                           // 0x1270(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<float>                                FuelItemsConsumeInterval;                          // 0x1280(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        FuelItemsConsumedGiveItems;                        // 0x1290(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	double                                       NetDestructionTime;                                // 0x12A0(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint32                                       CurrentPinCode;                                    // 0x12A8(0x4)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E48[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       CurrentFuelTimeCache;                              // 0x12B0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	double                                       LastCheckedFuelTime;                               // 0x12B8(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        LinkedPowerJunctionStructureID;                    // 0x12C0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        CurrentItemCount;                                  // 0x12C4(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        BlacklistedItemCount;                              // 0x12C8(0x4)(ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxItemCount;                                      // 0x12CC(0x4)(Edit, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        EmitterColorRegionIndex;                           // 0x12D0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalStructure>       LinkedPowerJunctionStructure;                      // 0x12D4(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E4A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                NextConsumeFuelGiveItemType;                       // 0x12E0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E4C[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastActiveStateChangeTime;                         // 0x12F0(0x8)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E4E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPrimalMapMarkerEntryData             MapMarkerLocationInfo;                             // 0x1300(0x28)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E4F[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BasedCharacterDamageInterval;                      // 0x1330(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BasedCharacterDamageAmount;                        // 0x1334(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                BasedCharacterDamageType;                          // 0x1338(0x8)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                EngramRequirementClassOverride;                    // 0x1340(0x8)(ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                LinkedBlueprintSpawnActorPoint;                    // 0x1348(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalStructureItemContainer> PoweredNearbyStructureTemplate;                    // 0x1350(0x30)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PoweredNearbyStructureRange;                       // 0x1380(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E54[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UParticleSystem*                       JunctionLinkParticleTemplate;                      // 0x1388(0x8)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                UISceneTemplate;                                   // 0x1390(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                OpenSceneActionName;                               // 0x1398(0x10)(BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            OpenSceneActionIcon;                               // 0x13A8(0x8)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                DisabledOpenSceneActionName;                       // 0x13B0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisabledOpenSceneActionIcon;                       // 0x13C0(0x8)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                RequiresItemForOpenSceneAction;                    // 0x13C8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bRequiresItemExactClass : 1;                       // Mask: 0x1, PropSize: 0x10x13D0(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDestroyWhenAllItemsRemovedExceptDefaults : 1;     // Mask: 0x2, PropSize: 0x10x13D0(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bInventoryForcePreventRemoteAddItems : 1;          // Mask: 0x4, PropSize: 0x10x13D0(0x1)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bInventoryForcePreventItemAppends : 1;             // Mask: 0x8, PropSize: 0x10x13D0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_211 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseDeathCacheCharacterID : 1;                     // Mask: 0x20, PropSize: 0x10x13D0(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bHideAutoActivateToggle : 1;                       // Mask: 0x40, PropSize: 0x10x13D0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseCooldownOnTransferAll : 1;                     // Mask: 0x80, PropSize: 0x10x13D0(0x1)(ConstParm, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseAmmoContainerBuff : 1;                         // Mask: 0x1, PropSize: 0x10x13D1(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_212 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2E55[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       DeathCacheCreationTime;                            // 0x13D8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E56[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class UParticleSystemComponent*              JunctionLinkCableParticle;                         // 0x13F8(0x8)(Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               JunctionCableBeamOffsetStart;                      // 0x1400(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               JunctionCableBeamOffsetEnd;                        // 0x1418(0x18)(Edit, ConstParm, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            ContainerActivatedSound;                           // 0x1430(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            ContainerDeactivatedSound;                         // 0x1438(0x8)(ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                DemolishInventoryDepositClass;                     // 0x1440(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                FuelItemTrueClass;                                 // 0x1448(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ReplicatedFuelItemClass;                           // 0x1450(0x8)(Edit, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CurrentFuelQuantity;                               // 0x1458(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDrawFuelRemaining : 1;                            // Mask: 0x1, PropSize: 0x10x145C(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_213 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2E57[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DrawFuelRemainingOffset;                           // 0x1460(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TimeCooldownRequestFuelRemaining;                  // 0x1464(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int16                                        ReplicatedFuelItemColorIndex;                      // 0x1468(0x2)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E58[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UFXSystemAsset*                        DefaultParticleTemplate;                           // 0x1470(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          DefaultParticleLightColor;                         // 0x1478(0x10)(BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            DefaultAudioTemplate;                              // 0x1488(0x8)(Edit, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        OverrideParticleTemplateItemClasses;               // 0x1490(0x10)(ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UFXSystemAsset*>                OverrideParticleTemplates;                         // 0x14A0(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         AllowOverrideParticleLightColor;                   // 0x14B0(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bHideUnusedParticleTypesOnRefreshActiveEffects;    // 0x14B1(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E59[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FLinearColor>                  OverrideParticleLightColor;                        // 0x14B8(0x10)(Edit, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class USoundBase*>                    OverrideAudioTemplates;                            // 0x14C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxActivationDistance;                             // 0x14D8(0x4)(Edit, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E5A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                BoxNamePrefaceString;                              // 0x14E0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        TribeGroupInventoryRank;                           // 0x14F0(0x1)(Edit, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetQuantityOfItemWithoutCheckingInventory : 1; // Mask: 0x1, PropSize: 0x10x14F1(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSetPlayerConstructor : 1;                    // Mask: 0x2, PropSize: 0x10x14F1(0x1)(ConstParm, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bReplicateLastActivatedTime : 1;                   // Mask: 0x4, PropSize: 0x10x14F1(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsAmmoContainer : 1;                              // Mask: 0x8, PropSize: 0x10x14F1(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bServerBPNotifyInventoryItemChangesUseSwapped : 1; // Mask: 0x10, PropSize: 0x10x14F1(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bBPNotifyRemoteViewerChange : 1;                   // Mask: 0x20, PropSize: 0x10x14F1(0x1)(Edit, ConstParm, ExportObject, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_214 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2E5B[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<float>                                FuelConsumeDecreaseDurabilityAmounts;              // 0x14F8(0x10)(ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RandomFuelUpdateTimeMin;                           // 0x1508(0x4)(Edit, ConstParm, ExportObject, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RandomFuelUpdateTimeMax;                           // 0x150C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	double                                       LastDeactivatedTime;                               // 0x1510(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	double                                       LastActivatedTime;                                 // 0x1518(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ValidCraftingResourceMaxDurability;                // 0x1520(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ActivationCooldownTime;                            // 0x1524(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint64                                       DeathCacheCharacterID;                             // 0x1528(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              LocalCorpseEmitter;                                // 0x1530(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SinglePlayerFuelConsumptionIntervalsMultiplier;    // 0x1538(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PoweredBatteryDurabilityToDecreasePerSecond;       // 0x153C(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DropInventoryDepositTraceDistance;                 // 0x1540(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E5C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TMap<class FName, struct FPrimalWirelessReferences> WirelessExchangeRefs;                              // 0x1548(0x50)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<TWeakObjectPtr<class AShooterPlayerController>> ValidatedByPinCodePlayerControllers;               // 0x1598(0x10)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E5D[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseMeshOriginForInventoryAccessTrace : 1;         // Mask: 0x1, PropSize: 0x10x15B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_215 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2E5E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                ActivatedIconColor;                                // 0x15B4(0x4)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                DeactivatedIconColor;                              // 0x15B8(0x4)(Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E5F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            EnableUnpoweredAutoActivationIcon;                 // 0x15C0(0x8)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableUnpoweredAutoActivationIcon;                // 0x15C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableAutoCraftIcon;                               // 0x15D0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableAutoCraftIcon;                              // 0x15D8(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            AllowWirelessCraftingIcon;                         // 0x15E0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            PreventWirelessCraftingIcon;                       // 0x15E8(0x8)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            DrinkWaterIcon;                                    // 0x15F0(0x8)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureItemContainer* GetDefaultObj();

	bool VerifyPinCode();
	void UpdateWirelessExchanges();
	void UpdateTribeGroupInventoryRank(uint8* NewRank);
	void UpdateSolarPower();
	void UpdateContainerActiveHealthDecrease();
	void TryActivation();
	int32 SetPoweredOverrideCounter();
	void RemoveWirelessConnections();
	void RemovePowerJunctionLinkParticle();
	void RefreshWatered();
	void RefreshPowerJunctionLink();
	class APrimalStructureItemContainer* RefreshPowered();
	void RefreshInventoryItemCounts();
	void OnContainerRenamed();
	void NetUpdateLocation(const struct FVector& NewLocation);
	void NetUpdateBoxName(class FString* NewName);
	int16 NetSetContainerActive();
	void NetRefreshActiveEffects();
	void MovePowerJunctionLink();
	bool IsValidForDinoFeedingContainer(class APrimalDinoCharacter** ForDino);
	bool IsValidatedPinCodePlayerController(class APlayerController** ForPC);
	bool IsPlayerControllerInPinCodeValidationList();
	bool HasSamePinCode();
	float GetTimeFuelRemaining();
	bool GetSkinMaterialsForActivation();
	struct FLinearColor GetOverrideParticleLightColor();
	TMap<class APrimalStructureItemContainer*, class UPrimalWirelessExchangeData*> GetNearbyWirelessStructures();
	int32 GetDeathCacheCharacterID();
	void EnableActive();
	bool CanBeActivated();
	class APlayerController* BPSetPlayerConstructor();
	void BPRename(class FString* NewName);
	void BPPreGetMultiUseEntries(class APlayerController** ForPC);
	void BPOnContainerActiveHealthDecrease();
	bool BPNotifyRemoteViewerChange();
	void BPNotifyPowerChanged();
	bool BPNotifyInventoryItemChange();
	bool BPIsValidWaterSourceForPipe();
	int32 BPIncrementItemCountQty(int32 Qty);
	int32 BPGetQuantityOfItemWithoutCheckingInventory();
	int32 BPGetItemCountQty();
	float BPGetFuelConsumptionMultiplier();
	enum class EPrimalEquipmentType BPGetCollisionCompInstanceInfo(const struct FHitResult& HitInfo, class FName* BoneName);
	TArray<class APrimalStructureItemContainer*> BPDisplayWirelessSupplyLinks();
	void BPContainerDeactivated();
	void BPContainerActivated();
	bool BPCanBeActivatedByPlayer();
	bool BPCanBeActivated();
	bool BPApplyPinCode(class AShooterPlayerController** ForPC, int32* AppledPinCode, bool* bIsSetting, int32* TheCustomIndex);
	bool ApplyActivationMaterialsToComponent(class UMeshComponent** MeshComp);
	bool AllowToggleActivation(class AShooterPlayerController** ForPC);
	bool AdjustNetDestructionTime();
	int32 AddToValidatedByPinCodePlayerControllers(class AShooterPlayerController** ForPC);
	class APrimalStructure* AddPowerJunctionLinkParticle();
};

// 0xC0 (0x16B8 - 0x15F8)
// Class ShooterGame.MissionDispatcher
class AMissionDispatcher : public APrimalStructureItemContainer
{
public:
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x15F8(0x8)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	class UParticleSystemComponent*              ParticleSystemComponent;                           // 0x1600(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig)
	class UPrimalInventoryComponent*             TheInventoryComponent;                             // 0x1608(0x8)(ConstParm, ExportObject, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        MissionActors;                                     // 0x1610(0x10)(ConstParm, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        MissionTypes;                                      // 0x1620(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        AutoStartMissionTypesIndex;                        // 0x1630(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	enum class EMissionDispatcherTriggerMode     MissionDispatcherTriggerMode;                      // 0x1634(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E70[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          AdditionalMissionTriggerKeys;                      // 0x1638(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowConcurrentMissions : 1;                      // Mask: 0x1, PropSize: 0x10x1648(0x1)(ConstParm, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowJoinMissionInProgress : 1;                   // Mask: 0x2, PropSize: 0x10x1648(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceStartMission : 1;                            // Mask: 0x4, PropSize: 0x10x1648(0x1)(Edit, ExportObject, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanSpawnMission : 1;                         // Mask: 0x8, PropSize: 0x10x1648(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetMissionStartLocation : 1;                 // Mask: 0x10, PropSize: 0x10x1648(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnMissionStarted : 1;                        // Mask: 0x20, PropSize: 0x10x1648(0x1)(Edit, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPActivateMissionActors : 1;                   // Mask: 0x40, PropSize: 0x10x1648(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDeactivateMissionActors : 1;                 // Mask: 0x80, PropSize: 0x10x1648(0x1)(ConstParm, Net, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnRunningMissionDeactivated : 1;             // Mask: 0x1, PropSize: 0x10x1649(0x1)(BlueprintReadOnly, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideMultiUseMissionList : 1;             // Mask: 0x2, PropSize: 0x10x1649(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bParticleSystemActiveOnlyWhenMissionNotRunning : 1; // Mask: 0x4, PropSize: 0x10x1649(0x1)(ConstParm, BlueprintVisible, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseMissionMetaTags : 1;                           // Mask: 0x8, PropSize: 0x10x1649(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_21C : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2E72[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class AMissionType*                          RunningMission;                                    // 0x1650(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDistanceAllowToStartMission;                    // 0x1658(0x4)(Edit, ConstParm, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E73[0x5C];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AMissionDispatcher* GetDefaultObj();

	class AMissionType* StartMission(class UClass* MissionTypeClass, class AShooterCharacter* StartingCharacter, const class FString& OutClientFailureReason);
	class AMissionType* OnRunningMissionDeactivated();
	void MultiSetParticleSystemActive(bool* bIsActive);
	void MultiDeactivateMissionActors();
	void MultiActivateMissionActors();
	bool IsValidDispatcherForMissionType(class UClass* MissionTypeClass, class AShooterCharacter* StartingCharacter);
	int32 GetFallbackSeed(class UClass* ForMission, bool bRemoveSeed);
	void GenerateFallbackSeeds();
	void ClearFallbackSeeds(class UClass* OptionalForMission);
	TArray<class UClass*> BPOverrideMultiUseMissionList(class APlayerController** ForPC, class AShooterCharacter* StartingCharacter);
	class AMissionType* BPOnRunningMissionDeactivated();
	void BPOnMissionStarted(class AMissionType* NewMission, class AShooterCharacter* StartingCharacter);
	void BPOnMissionFailToStart(class UClass* MissionTypeClass, class AShooterCharacter* StartingCharacter);
	struct FVector BPGetMissionStartLocation(class UClass* MissionTypeClass, class AShooterCharacter* StartingCharacter);
	void BPDeactivateMissionActors();
	bool BPCanSpawnMission(class UClass* MissionTypeClass, class AShooterCharacter* StartingCharacter);
	void BPActivateMissionActors();
	void AddFallbackSeed(class UClass* ForMission, int32* Seed, int32 MaxNumberOfFallbackSeeds);
};

// 0x10 (0x4D0 - 0x4C0)
// Class ShooterGame.MissionDispatcherPoint
class AMissionDispatcherPoint : public AActor
{
public:
	TArray<class FName>                          MissionTags;                                       // 0x4C0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AMissionDispatcherPoint* GetDefaultObj();

};

// 0x58 (0x410 - 0x3B8)
// Class ShooterGame.MissionDispatcherToolTipWidget
class UMissionDispatcherToolTipWidget : public UToolTipWidget
{
public:
	class FString                                MissionNameLabelName;                              // 0x3B8(0x10)(Edit, BlueprintReadOnly, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	class FString                                TitleLabelName;                                    // 0x3C8(0x10)(Edit, ExportObject, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	class FString                                MissionStatusLabelName;                            // 0x3D8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E77[0x28];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMissionDispatcherToolTipWidget* GetDefaultObj();

};

// 0x20 (0x778 - 0x758)
// Class ShooterGame.MissionListEntryWidget
class UMissionListEntryWidget : public UBaseSelectableButtonWidget
{
public:
	class FString                                ItemLabelName;                                     // 0x758(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E78[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMissionListEntryWidget* GetDefaultObj();

};

// 0x88 (0xB0 - 0x28)
// Class ShooterGame.MissionMetaTagInfo
class UMissionMetaTagInfo : public UObject
{
public:
	struct FMetaTagIDInfo                        MetaTagInfo[0xB];                                  // 0x28(0x84)(BlueprintVisible, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E7A[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMissionMetaTagInfo* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.MissionModuleBase
class UMissionModuleBase : public UObject
{
public:

	static class UClass* StaticClass();
	static class UMissionModuleBase* GetDefaultObj();

	float BPGetTargetingDesire(class APrimalDinoCharacter** MissionDino, class AActor** ForTarget, float* ForTargetingDesireValue);
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.MissionModuleInterface
class IMissionModuleInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IMissionModuleInterface* GetDefaultObj();

	class UNewMissionModuleBase* RunMissionModule(class UClass** ModuleClass);
};

// 0x28 (0x358 - 0x330)
// Class ShooterGame.MissionObjectiveEntryWidget
class UMissionObjectiveEntryWidget : public UPrimalUserWidget
{
public:
	class FString                                ItemLabelName;                                     // 0x330(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E7F[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMissionObjectiveEntryWidget* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.MissionPrerequisite
class UMissionPrerequisite : public UObject
{
public:

	static class UClass* StaticClass();
	static class UMissionPrerequisite* GetDefaultObj();

	bool IsSatisfied(class AShooterCharacter** PlayerPawn, class APrimalBuff_MissionData** PlayerMissionData);
};

// 0x20 (0x350 - 0x330)
// Class ShooterGame.MissionRequirementEntryWidget
class UMissionRequirementEntryWidget : public UPrimalUserWidget
{
public:
	class FString                                DisplayText;                                       // 0x330(0x10)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  CustomTag;                                         // 0x340(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, EditConst, SubobjectReference)
	uint8                                        Pad_2E85[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMissionRequirementEntryWidget* GetDefaultObj();

	class FString SetDisplayText();
	class FName SetCustomTag();
	bool Initialize();
};

// 0x0 (0x4C0 - 0x4C0)
// Class ShooterGame.PrimalPointNote
class APrimalPointNote : public ANote
{
public:

	static class UClass* StaticClass();
	static class APrimalPointNote* GetDefaultObj();

};

// 0x50 (0x510 - 0x4C0)
// Class ShooterGame.MissionServerSidePoint
class AMissionServerSidePoint : public APrimalPointNote
{
public:
	class FName                                  TriggerKey;                                        // 0x4C0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	int32                                        TriggerOrder;                                      // 0x4C8(0x4)(ConstParm, ExportObject, Net, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	int32                                        CustomDataInt;                                     // 0x4CC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        CustomDataFloat;                                   // 0x4D0(0x4)(Edit, Net, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E86[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<float>                                CustomDataFloatArray;                              // 0x4D8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CustomDataVector;                                  // 0x4E8(0x18)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	class FString                                CustomDataString;                                  // 0x500(0x10)(BlueprintVisible, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AMissionServerSidePoint* GetDefaultObj();

	void SetTriggerKey(class FName* NewTriggerKey);
};

// 0x8 (0x4C8 - 0x4C0)
// Class ShooterGame.SplineActor
class ASplineActor : public AActor
{
public:
	class USplineComponent*                      SplineComponent;                                   // 0x4C0(0x8)(ConstParm, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig)

	static class UClass* StaticClass();
	static class ASplineActor* GetDefaultObj();

};

// 0x60 (0x528 - 0x4C8)
// Class ShooterGame.MissionSpline
class AMissionSpline : public ASplineActor
{
public:
	bool                                         bValidateSpline;                                   // 0x4C8(0x1)(BlueprintVisible, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E8B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SplineValidationMinTotalLength;                    // 0x4CC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 SplineValidationChannel;                           // 0x4D0(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E8D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        SplineValidationNumTracesPerSplineSegment;         // 0x4D4(0x4)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	float                                        SplineValidationDebugDrawDuration;                 // 0x4D8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TriggerKey;                                        // 0x4DC(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	int32                                        TriggerOrder;                                      // 0x4E4(0x4)(ConstParm, ExportObject, Net, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	int32                                        CustomDataInt;                                     // 0x4E8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        CustomDataFloat;                                   // 0x4EC(0x4)(Edit, Net, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                CustomDataFloatArray;                              // 0x4F0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CustomDataVector;                                  // 0x500(0x18)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	class FString                                CustomDataString;                                  // 0x518(0x10)(BlueprintVisible, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AMissionSpline* GetDefaultObj();

	float SpawnerUpdate();
	bool FindLocationAndDirectionClosestToWorldLocation(const struct FVector& OutDirection, float OutSplineKey);
};

// 0x10 (0x340 - 0x330)
// Class ShooterGame.MissionTimerWidget
class UMissionTimerWidget : public UPrimalUserWidget
{
public:
	uint8                                        Pad_2E90[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMissionTimerWidget* GetDefaultObj();

};

// 0x548 (0xA20 - 0x4D8)
// Class ShooterGame.MissionTrigger
class AMissionTrigger : public ABaseBoxTrigger
{
public:
	uint8                                        Pad_2E94[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class FName                                  TriggerKey;                                        // 0x4E8(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	int32                                        TriggerOrder;                                      // 0x4F0(0x4)(ConstParm, ExportObject, Net, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	int32                                        CustomDataInt;                                     // 0x4F4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        CustomDataFloat;                                   // 0x4F8(0x4)(Edit, Net, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E95[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<float>                                CustomDataFloatArray;                              // 0x500(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CustomDataVector;                                  // 0x510(0x18)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	class FString                                CustomDataString;                                  // 0x528(0x10)(BlueprintVisible, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E96[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPointOfInterestData                  MyPointOfInterestData;                             // 0x540(0x1E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FPointOfInterestCompanionBehavior     MyPointOfInterestCompanionBehavior;                // 0x720(0x300)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AMissionTrigger* GetDefaultObj();

	bool IsPointOfInterestValid();
	struct FPointOfInterestData GetMyPointOfInterestData();
	struct FPointOfInterestCompanionBehavior GetMyPointOfInterestCompanionBehavior();
};

// 0x680 (0xB40 - 0x4C0)
// Class ShooterGame.MissionType
class AMissionType : public AActor
{
public:
	class USceneComponent*                       MissionRoot;                                       // 0x4C0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	class UPrimalInventoryComponent*             MissionInventory;                                  // 0x4C8(0x8)(BlueprintVisible, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        MissionVersion;                                    // 0x4D0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3022[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          PrereqMissionTags;                                 // 0x4D8(0x10)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          PreventsStargingMissionsOfTags;                    // 0x4E8(0x10)(ConstParm, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          BuffTagsThatPreventMission;                        // 0x4F8(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        UnlockPrequisites;                                 // 0x508(0x10)(ConstParm, ExportObject, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        PrereqMissionTypes;                                // 0x518(0x10)(Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        MissionTimeOfDayUnlockTime;                        // 0x528(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        MissionTimeOfDayLockTime;                          // 0x52C(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	enum class EMissionDispatchMode              DispatchMode;                                      // 0x530(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3023[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MissionDispatcherMaxDistance;                      // 0x534(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        MissionWildDinoOutgoingDamageScale;                // 0x538(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        MissionWildDinoIncomingDamageScale;                // 0x53C(0x4)(Edit, ConstParm, ExportObject, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxPlayerCount;                                    // 0x540(0x4)(Edit, ConstParm, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxDinosPerPlayerAllowedOnMission;                 // 0x544(0x4)(Edit, BlueprintReadOnly, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalMissionCooldown;                             // 0x548(0x4)(Edit, BlueprintVisible, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        PerPlayerMissionCooldown;                          // 0x54C(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	int32                                        TargetPlayerLevel;                                 // 0x550(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	int32                                        MinPlayerLevel;                                    // 0x554(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxPlayerLevel;                                    // 0x558(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupportsMissionTimeOfDayLocking : 1;              // Mask: 0x1, PropSize: 0x10x55C(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyAllowMountsOnMission : 1;                     // Mask: 0x2, PropSize: 0x10x55C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTreatPlayerLevelRangeAsHardCap : 1;               // Mask: 0x4, PropSize: 0x10x55C(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPStaticIsPlayerEligibleForMission : 1;        // Mask: 0x8, PropSize: 0x10x55C(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoSendMissionCompleteNotification : 1;          // Mask: 0x10, PropSize: 0x10x55C(0x1)(Edit, ConstParm, BlueprintVisible, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoSendMissionCompleteAlert : 1;                 // Mask: 0x20, PropSize: 0x10x55C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoRewardLootOnMissionComplete : 1;              // Mask: 0x40, PropSize: 0x10x55C(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoRewardXPOnMissionComplete : 1;                // Mask: 0x80, PropSize: 0x10x55C(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetExtraLocalMissionIndicators : 1;          // Mask: 0x1, PropSize: 0x10x55D(0x1)(Edit, ConstParm, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMissionPreventsCryoDeploy : 1;                    // Mask: 0x2, PropSize: 0x10x55D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMissionPreventsMekDeploy : 1;                     // Mask: 0x4, PropSize: 0x10x55D(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMissionPreventsDinoSpawner : 1;                   // Mask: 0x8, PropSize: 0x10x55D(0x1)(ExportObject, BlueprintReadOnly, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMissionPreventsFlyers : 1;                        // Mask: 0x10, PropSize: 0x10x55D(0x1)(BlueprintVisible, ExportObject, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMissionPreventsVehicle : 1;                       // Mask: 0x20, PropSize: 0x10x55D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanRideMissionDino : 1;                      // Mask: 0x40, PropSize: 0x10x55D(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisabledOnXboxSinglePlayer : 1;                   // Mask: 0x80, PropSize: 0x10x55D(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisabledOnPS4SinglePlayer : 1;                    // Mask: 0x1, PropSize: 0x10x55E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_229 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3024[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                MissionDisplayName;                                // 0x560(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FString                                MissionDescription;                                // 0x570(0x10)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FString                                MissionSuccessMessage;                             // 0x580(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance)
	struct FLinearColor                          MissionSuccessMessageColor;                        // 0x590(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FString                                MissionFailedMessage;                              // 0x5A0(0x10)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance)
	struct FLinearColor                          MissionFailedMessageColor;                         // 0x5B0(0x10)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FString                                MissionAlertTitle;                                 // 0x5C0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FString                                MissionInitiatedString;                            // 0x5D0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        MissionCompleteAlertDisplayTime;                   // 0x5E0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3025[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            MissionIcon;                                       // 0x5E8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            CombatMusicOverride;                               // 0x5F0(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FLootTableEntry>               RewardLootTable;                                   // 0x5F8(0x10)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        RewardItemCount;                                   // 0x608(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        RewardXPRatio;                                     // 0x60C(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        FirstTimeCompletionHexagonRewardBonus;             // 0x610(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        FirstTimeCompletionHexagonRewardOverride;          // 0x614(0x4)(Edit, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        HexagonsOnCompletion;                              // 0x618(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDivideHexogonsOnCompletion;                       // 0x61C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAutoRewardFromCustomItemSets;                     // 0x61D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRollExtraLootSetsPerPlayer;                       // 0x61E(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3026[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MinimumItemSetGenerationRolls;                     // 0x620(0x4)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEqualRewardsToAllParticipants;                    // 0x624(0x1)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3027[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        GenerateItemSetsQualityMultiplierMin;              // 0x628(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        GenerateItemSetsQualityMultiplierMax;              // 0x62C(0x4)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        MinItemSets;                                       // 0x630(0x4)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MaxItemSets;                                       // 0x634(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        NumItemSetsPower;                                  // 0x638(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bSetsRandomWithoutReplacement : 1;                 // Mask: 0x1, PropSize: 0x10x63C(0x1)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_22A : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3028[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSupplyCrateItemSet>           CustomItemSets;                                    // 0x640(0x10)(ConstParm, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCustomMissionsUIRewardsLabelText : 1;          // Mask: 0x1, PropSize: 0x10x650(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_22B : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3029[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                CustomMissionsUIRewardsLabelText;                  // 0x658(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FName                                  InitialMissionPhase;                               // 0x668(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMissionPhase>                 Phases;                                            // 0x670(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMissionPhaseData>             PhaseData;                                         // 0x680(0x10)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MissionInventoryTemplate;                          // 0x690(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                LeaderboardType;                                   // 0x698(0x8)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FLeaderboardRow>               DefaultLeaderboardRows;                            // 0x6A0(0x10)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMissionWorldBuffData>         SuccessWorldBuffs;                                 // 0x6B0(0x10)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMissionWorldBuffData>         FailureWorldBuffs;                                 // 0x6C0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          DisableTekArmorBuffs;                              // 0x6D0(0x10)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysCreateMissionInventory : 1;                 // Mask: 0x1, PropSize: 0x10x6E0(0x1)(Edit, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoUpdateRequirements : 1;                       // Mask: 0x2, PropSize: 0x10x6E0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoUpdateWorldIndicators : 1;                    // Mask: 0x4, PropSize: 0x10x6E0(0x1)(ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsePerPlayerWorldIndicators : 1;                  // Mask: 0x8, PropSize: 0x10x6E0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsePerPlayerPhaseRequirements : 1;                // Mask: 0x10, PropSize: 0x10x6E0(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoDeactivateMissionBuff : 1;                    // Mask: 0x20, PropSize: 0x10x6E0(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMissionWeaponsHaveInfiniteAmmo : 1;               // Mask: 0x40, PropSize: 0x10x6E0(0x1)(ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseDinoEvents : 1;                                // Mask: 0x80, PropSize: 0x10x6E0(0x1)(EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyMissionDinosOnDeactivate : 1;              // Mask: 0x1, PropSize: 0x10x6E1(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowHarvestingMissionDinos : 1;                  // Mask: 0x2, PropSize: 0x10x6E1(0x1)(Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsePlayerEvents : 1;                              // Mask: 0x4, PropSize: 0x10x6E1(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseInventoryEvents : 1;                           // Mask: 0x8, PropSize: 0x10x6E1(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseTriggerEvents : 1;                             // Mask: 0x10, PropSize: 0x10x6E1(0x1)(ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseStructureEvents : 1;                           // Mask: 0x20, PropSize: 0x10x6E1(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPTryCompletePhase : 1;                        // Mask: 0x40, PropSize: 0x10x6E1(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGenerateMissionRewards : 1;                  // Mask: 0x80, PropSize: 0x10x6E1(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDebugWorldIndicators : 1;                         // Mask: 0x1, PropSize: 0x10x6E2(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoDeactivateMissionWithNoPlayers : 1;           // Mask: 0x2, PropSize: 0x10x6E2(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoSaveMissionCompleteStatusPerPlayer : 1;       // Mask: 0x4, PropSize: 0x10x6E2(0x1)(ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRepeatableMission : 1;                            // Mask: 0x8, PropSize: 0x10x6E2(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableLevelUpSoundDuringMission : 1;             // Mask: 0x10, PropSize: 0x10x6E2(0x1)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideMissionTimerColor : 1;               // Mask: 0x20, PropSize: 0x10x6E2(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideMissionIndicatorString : 1;          // Mask: 0x40, PropSize: 0x10x6E2(0x1)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceCompleteOnDeactivate : 1;                    // Mask: 0x80, PropSize: 0x10x6E2(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemovePlayerFromMissionOnDeath : 1;               // Mask: 0x1, PropSize: 0x10x6E3(0x1)(Edit, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPersistentMission : 1;                            // Mask: 0x2, PropSize: 0x10x6E3(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseMissionTagAsStringIfLookupFails : 1;           // Mask: 0x4, PropSize: 0x10x6E3(0x1)(BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bScaleMinDistanceToWaypointByRotationRate : 1;     // Mask: 0x8, PropSize: 0x10x6E3(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_22C : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bPreventShowingMissionTime : 1;                    // Mask: 0x20, PropSize: 0x10x6E3(0x1)(ExportObject, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowNegativeMissionStartNetworkTime : 1;         // Mask: 0x40, PropSize: 0x10x6E3(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowInUI : 1;                                     // Mask: 0x80, PropSize: 0x10x6E3(0x1)(BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_302A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FTaggedString>                 CustomMissionRequirements;                         // 0x6E8(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSingletonMission : 1;                             // Mask: 0x1, PropSize: 0x10x6F8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_22D : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_302B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinDistanceToWaypointMultiplier;                   // 0x6FC(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        MissionDebugFlags;                                 // 0x700(0x4)(Edit, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_302C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          TriggerKeys;                                       // 0x708(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        MissionMaxDurationSeconds;                         // 0x718(0x4)(BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MissionDurationConsoleOffsetSeconds;               // 0x71C(0x4)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	enum class EMissionTimerMode                 MissionTimerUIMode;                                // 0x720(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	enum class EMissionTimerMode                 MissionDurationUIMode;                             // 0x721(0x1)(Edit, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_302D[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                MissionObjectiveTimeLabelString;                   // 0x728(0x10)(ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        LifetimeAfterDeactivated;                          // 0x738(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_302E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FTaggedString>                 MissionStrings;                                    // 0x740(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MissionBuffType;                                   // 0x750(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bListEntryOnly;                                    // 0x758(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseThrottledTick;                                 // 0x759(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_302F[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTimeRange                            ThrottledTickTimeRange;                            // 0x75C(0x8)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseThrottledServerTick;                           // 0x764(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3030[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTimeRange                            ThrottledServerTickTimeRange;                      // 0x768(0x8)(ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseThrottledClientTick;                           // 0x770(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3031[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTimeRange                            ThrottledClientTickTimeRange;                      // 0x774(0x8)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3032[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterCharacter*                     StartedByCharacter;                                // 0x780(0x8)(ConstParm, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCharacterAndControllerPair>   PlayersOnMission;                                  // 0x788(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	double                                       MissionStartNetworkTime;                           // 0x798(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	double                                       PostSetupMissionStartNetworkTime;                  // 0x7A0(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	enum class EMissionState                     MissionState;                                      // 0x7A8(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3033[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            CurrentMissionMusic;                               // 0x7B0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<class AMissionSpline*>                DinoPathingSplines;                                // 0x7B8(0x10)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         UseDynamicMissionStrings;                          // 0x7C8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3034[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PrepAreaRadius;                                    // 0x7CC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        PrepDuration;                                      // 0x7D0(0x4)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPrepUseTargetingTeamOfStartingPlayer;             // 0x7D4(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	enum class ETargetingTeamBehavior            PrepTargetingTeamBehavior;                         // 0x7D5(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3035[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                PrepAreaEmitter;                                   // 0x7D8(0x8)(Edit, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSetPrepAreaEmitterLifespanToPrepDuration;         // 0x7E0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3036[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UParticleSystem*                       PrepAreaPlayerInclusionParticles;                  // 0x7E8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPrepAreaAutoSendNotificationToIncludedPlayers;    // 0x7F0(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3038[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                PrepAreaNotificationPrefix;                        // 0x7F8(0x10)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            MissionSuccessSound;                               // 0x808(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            MissionFailedSound;                                // 0x810(0x8)(Edit, ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          LevelsToLoad;                                      // 0x818(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          LevelsToLoadSinglePlayerAndListenServer;           // 0x828(0x10)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            MissionPhaseStartedEvent;                          // 0x838(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            MissionPhaseEndedEvent;                            // 0x848(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            MissionDeactivatedEvent;                           // 0x858(0x10)(Edit, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            MissionResetTimerEvent;                            // 0x868(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MissionCustomData;                                 // 0x878(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<class APrimalDinoCharacter*>          MissionDinos;                                      // 0x880(0x10)(BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<class APrimalStructure*>              MissionStructures;                                 // 0x890(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3039[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class ADroppedItemMission*>           MissionDroppedItems;                               // 0x8F0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FTeleportedCharacter>          TeleportedCharacters;                              // 0x900(0x10)(BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPlayerItems>                  PlayerUsableItems;                                 // 0x910(0x10)(ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                MissionDispatcher;                                 // 0x920(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Config, GlobalConfig)
	TArray<class AShooterCharacter*>             PlayersPendingAddToMission;                        // 0x928(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_303A[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class APrimalBuff>             Gen2TeleportBuff;                                  // 0x940(0x30)(Edit, ConstParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_303B[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        MissionPhaseIndex;                                 // 0x990(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_303C[0xAC];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseGen2TeleportBuff : 1;                          // Mask: 0x1, PropSize: 0x10xA40(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_22E : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHasRunSetup : 1;                                  // Mask: 0x4, PropSize: 0x10xA40(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSuspendedDueToStasis : 1;                         // Mask: 0x8, PropSize: 0x10xA40(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSaveMissionItemData : 1;                          // Mask: 0x10, PropSize: 0x10xA40(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAbsoluteForcePreventLeavingMission : 1;           // Mask: 0x20, PropSize: 0x10xA40(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasActivatedSuccessFailureWorldBuffs : 1;         // Mask: 0x40, PropSize: 0x10xA40(0x1)(Edit, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetMissionTargetingDesire : 1;               // Mask: 0x80, PropSize: 0x10xA40(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideRandomWanderLocation : 1;            // Mask: 0x1, PropSize: 0x10xA41(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowTargetingOtherMissionDinos : 1;              // Mask: 0x2, PropSize: 0x10xA41(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyReverseTeleportOnMissionDeactivation : 1;     // Mask: 0x4, PropSize: 0x10xA41(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesFallbackSeeds : 1;                            // Mask: 0x8, PropSize: 0x10xA41(0x1)(Edit, BlueprintVisible, ExportObject, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_22F : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_303E[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                MissionDepositInventoryClass;                      // 0xA48(0x8)(BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	double                                       LastThrottledTickEventTime;                        // 0xA50(0x8)(ConstParm, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentThrottledTickEventInterval;                 // 0xA58(0x4)(BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_303F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastThrottledServerTickEventTime;                  // 0xA60(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentThrottledServerTickEventInterval;           // 0xA68(0x4)(ConstParm, ExportObject, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3040[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastThrottledClientTickEventTime;                  // 0xA70(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentThrottledClientTickEventInterval;           // 0xA78(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3041[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastAutoSwitchPhaseTime;                           // 0xA80(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentAutoSwitchPhaseInterval;                    // 0xA88(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3042[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          SplineSpanwerTriggerKeys;                          // 0xA98(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FName                                  OnFailureKillAllTamesInTileStreamingVolumeCustomTag; // 0xAA8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<class AMissionSpline*>                SplineSpawners;                                    // 0xAB0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3043[0x60];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        ActivePreventsMissions;                            // 0xB20(0x10)(Edit, ConstParm, ExportObject, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<class UObject*>                       ExtraReferences;                                   // 0xB30(0x10)(ConstParm, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AMissionType* GetDefaultObj();

	bool UpdateWorldIndicators();
	bool UpdateRequirements();
	struct FVector UpdateMissionPrepArea(float MinUpdateFrequencyInSeconds);
	bool TryCompletePhase(bool bForceChange);
	bool TryChangeMissionPhase(bool bForceChange);
	float TotalMaxHealth_Players();
	float TotalMaxHealth_Dinos();
	float TotalMaxHealth_Characters();
	float TotalCurrentHealth_Players();
	float TotalCurrentHealth_Dinos();
	float TotalCurrentHealth_Characters();
	bool TeleportCharacterForMission(class APrimalCharacter* Character, const struct FVector& NewLocation, bool bOverrideRotation, const struct FRotator& RotationOverride, bool bForceSetReturnLocation, bool bWasMountedDino, bool bSkipDinoFailChecks);
	void SuspendMission();
	void StopMissionMusic();
	void StaticOnReplicatedMissionDataUpdated(class APrimalBuff_MissionData* MissionData);
	void StaticOnMissionDataInitialized(class APrimalBuff_MissionData* MissionData);
	bool StaticGetTaggedString();
	class AShooterWeapon* SpawnMissionWeapon(class AShooterCharacter** ForPlayer, class UClass* WeaponItem, float ItemQuality, bool AutoEquip);
	class APrimalStructure* SpawnMissionStructure(int32 TargetingTeamOverride);
	class ADroppedItemMission* SpawnMissionItem(class UClass* AnItemClass, float ItemQuality, bool bForceNoBlueprint, const struct FRotator& WorldRotation);
	TArray<class APrimalDinoCharacter*> SpawnMissionDinoGroupExtended(enum class ESpawnPattern Pattern, float* AIRangeMultiplier);
	TArray<class APrimalDinoCharacter*> SpawnMissionDinoGroup(enum class ESpawnPattern Pattern, float* AIRangeMultiplier);
	class APrimalDinoCharacter* SpawnMissionDino(float* AIRangeMultiplier);
	class AMissionType* SpawnMission(class UObject** WorldContextObject, class AShooterCharacter** ForCharacter, struct FVector* Location, const class FString& FailureReason, class AActor* MissionDispatcherActor);
	float SpawnEmitterForPlayers();
	TArray<struct FMissionWorldIndicator> SortMissionWorldIndicatorArrayByDistance(class APrimalCharacter** ForCharacter, bool* bReverseSort);
	struct FVector SetupMissionPrepArea();
	int32 SetSpecificSplineKeyTarget(class APrimalDinoCharacter** ForDino);
	struct FRotator SetReverseTeleportReturnLocation(class APrimalCharacter* Character, const struct FVector& NewLocation);
	bool SetPlayerPrepAreaState(class AShooterCharacter** PlayerPawn);
	bool SetPlayerParticleSystemIndicator(class AShooterCharacter** PlayerPawn);
	void SetPhaseStartedDelegate(class FName* PhaseName, FDelegateProperty_ Delegate);
	void SetPhaseEndedDelegate(class FName* PhaseName, FDelegateProperty_ Delegate);
	int32 SetPhaseCompleted(bool* bCompleted);
	float SetMissionTimeRemaining();
	class USoundBase* SetMissionMusic();
	float SetMissionDeactivationTimer();
	bool SetMissionCompletedStatus(class AShooterCharacter** PlayerCharacter, bool* bCompleted);
	bool SetDinoAITargetActor(class APrimalDinoCharacter* Dino);
	bool SetDinoAINavigationTargetActor(class APrimalDinoCharacter* Dino);
	bool SetDinoAIForcedTargetActor(class APrimalDinoCharacter* Dino);
	void ServerRequestToggleWeapon(class AShooterCharacter* Character);
	class USoundBase* SendNotificationToPlayer(class AShooterCharacter** Player);
	class USoundBase* SendNotificationToAllPlayers();
	bool SendMissionAlertToPlayer(class AShooterCharacter** Player, enum class EMissionAlertType AlertType, class FString* AlertTitle);
	bool SendMissionAlertToAllPlayers(enum class EMissionAlertType AlertType, class FString* AlertTitle);
	bool ReverseTeleportCharacter(class APrimalCharacter* Character);
	void ResetSplinePoints(class APrimalDinoCharacter** ForDino);
	void ResetMissionTimer();
	struct FItemNetID RemovePlayerUsableItem(class AShooterCharacter* Character);
	bool RemovePlayerFromMission(class AShooterCharacter** PlayerCharacter, bool bCompletedSuccessfully);
	int32 RemoveItemsFromInventory_Balanced(bool bExactClassMatch);
	int32 RemoveItemsFromInventory(class UPrimalInventoryComponent** Inventory, bool bExactClassMatch);
	void ReAddPlayerFromReconnect(class AShooterCharacter** Player);
	void ReactivateSuspendedMission();
	int32 RacePlayerData_SetTargetCheckpoint(int32 PlayerIndex);
	float RacePlayerData_SetCheckpointData(int32 PlayerIndex);
	int32 RacePlayerData_NumCheckpoints(const TArray<struct FRacePlayerData>& PlayerData);
	int32 RacePlayerData_Initialize();
	int32 RacePlayerData_IndexOfController(const TArray<struct FRacePlayerData>& PlayerData);
	int32 RacePlayerData_GetTargetCheckpoint(const TArray<struct FRacePlayerData>& PlayerData, int32 PlayerIndex);
	int32 RacePlayerData_GetPlayerRanking(const TArray<struct FRacePlayerData>& PlayerData, int32 PlayerIndex);
	float RacePlayerData_GetCheckpointData(const TArray<struct FRacePlayerData>& PlayerData, int32 PlayerIndex);
	TArray<class AMissionTrigger*> RacePlayerData_GetAllPlayerRankings(const TArray<struct FRacePlayerData>& PlayerData);
	bool RacePlayerData_FixupControllers();
	bool RaceClosestPlayerToCheckpoint(const TArray<struct FRacePlayerData>& PlayerData);
	void PostLoadWorldFixup();
	class USoundBase* PlayMissionMusic();
	void OpenLeaderboardsForPlayer(class AShooterCharacter** Player, TArray<struct FLeaderboardRow>* Rows);
	void OpenLeaderboardsForAllPlayers(TArray<struct FLeaderboardRow>* Rows);
	TArray<struct FMissionPhaseRequirement> OnUpdateRequirements(class FName* PhaseName);
	float OnThrottledTick();
	float OnThrottledServerTick();
	float OnThrottledClientTick();
	void OnRep_MissionState();
	void OnRep_MissionPhaseIndex();
	void OnPlayerSpawned(class AShooterCharacter** PlayerPawn);
	int32 OnMissionTriggerEndOverlap(class AMissionTrigger* Trigger, class FName* TriggerKey);
	int32 OnMissionTriggerBeginOverlap(class AMissionTrigger* Trigger, class FName* TriggerKey);
	class FName OnMissionPhaseStarted();
	class FName OnMissionPhaseEnded();
	class UPrimalItem* OnInventoryItemRemoved(class UPrimalInventoryComponent** Inventory, int32* AmountRemoved);
	bool OnInventoryItemAdded(class UPrimalInventoryComponent** Inventory, int32* AmountAdded);
	int32 NumLivingPlayers();
	int32 NumLivingDinos();
	int32 NumLivingCharacters();
	class FString NonStaticGetPhaseRequirementDescription();
	double MultiResetMissionTimer();
	enum class EMissionState MultiMissionStateChange();
	void MultiMissionPhaseStarted(class FName* OldPhaseName, class FName* NewPhaseName);
	void MultiMissionPhaseEnded(class FName* OldPhaseName, class FName* NewPhaseName);
	int32 MissionFindPathAsync(class UObject** WorldContext);
	bool MissionAI_SetReversPathForDino(class APrimalDinoCharacter** ForDino);
	class USplineComponent* MissionAI_SetForcePathSplineForDino(class APrimalDinoCharacter** ForDino);
	bool MissionAI_IsAtPathDestination(class APrimalDinoCharacter** ForDino);
	class AActor* MissionAI_GetTarget(class APrimalDinoCharacter** ForDino);
	class APrimalDinoAIController* MissionAI_GetMissionFromController();
	bool MissionAI_FindPathToTarget(class APrimalDinoCharacter** ForDino);
	struct FMissionAlertEntry ItemToAlertEntry();
	bool IsPlayerOnMission(class AShooterCharacter** PlayerCharacter);
	bool IsPlayerEligibleForMission(class FString* Reason);
	bool IsPhaseNameValid(class FName* Name);
	bool IsPhaseComplete(class FName* PhaseName);
	bool IsMissionComplete(class AShooterCharacter** ForCharacter, class AShooterPlayerController** ForController);
	bool IsMetaDataMissionType(class UObject** WorldContextObject);
	bool IsFriendlyWithAnyTargetingTeam(class APrimalCharacter* Character, TArray<int32>* TargetingTeams);
	bool IsFriendlyWithAllTargetingTeams(class APrimalCharacter* Character, TArray<int32>* TargetingTeams);
	bool IsActive();
	bool HasPlayerCompletedMissionByTag(class AShooterCharacter* Character);
	bool HasPlayerCompletedMission(class AShooterCharacter* Character);
	float GivePlayerXP(class AShooterCharacter** Player);
	TArray<class UPrimalItem*> GivePlayerLoot(class AShooterCharacter** Player);
	TArray<int32> GetTargetingTeamsOfAllPlayersOnMission();
	bool GetTaggedString();
	bool GetReverseTeleportReturnLocation(class APrimalCharacter* Character);
	float GetRemainingTime();
	class FName GetRealMissionTagFromMetaData(class UObject** WorldContextObject);
	TArray<struct FItemNetID> GetPlayerUsableItems(class AShooterCharacter* Character);
	TArray<struct FMissionPhaseRequirement> GetPhaseRequirements(class FName* PhaseName, class AShooterCharacter** ForPlayer);
	float GetPhaseRequirementProgress();
	class FString GetPhaseRequirementDescription(class UClass* ForMission);
	class FString GetPhaseDisplayText();
	TArray<struct FMissionWorldIndicator> GetPerPlayerWorldIndicators(class AShooterCharacter* Character);
	bool GetNearbyStructures(class UObject** WorldContextObject, struct FVector* Location, float Radius);
	bool GetNearbyPlayersEligibleForMission(class UObject** WorldContextObject, struct FVector* Location, float Radius, int32 InTargetingTeam, enum class ETargetingTeamBehavior TargetingTeamBehavior);
	int32 GetNearbyPlayersAndTamedDinos(class UObject** WorldContextObject, struct FVector* Location, float Radius);
	int32 GetNearbyPlayers(class UObject** WorldContextObject, struct FVector* Location, float Radius);
	bool GetNearbyMissionDispatchers(class UObject** WorldContextObject, class AShooterCharacter** ForPlayer, float Radius);
	int32 GetNearbyDinos(class UObject** WorldContextObject, struct FVector* Location, float Radius);
	TArray<class APrimalCharacter*> GetNearbyCharacters(class UObject** WorldContextObject, struct FVector* Location, float Radius);
	struct FVector GetMissionWorldIndicatorWorldLocation(class APrimalCharacter** ForCharacter);
	class UTexture2D* GetMissionWorldIndicatorIcon();
	class FString GetMissionWorldIndicatorDescription();
	class FName GetMissionTagForMission();
	class FName GetMissionTag();
	bool GetMissionLeaderboardRows();
	float GetMissionDurationInSeconds();
	class FString GetMissionDurationFromTag(class FName* MissionTag, class AShooterCharacter* Character);
	class FString GetMissionDisplayName(class APlayerController** ShootCont);
	class APrimalBuff_MissionData* GetMissionDataForCharacter(class AShooterCharacter* Character);
	class FName GetMissionClassName();
	class APrimalBuff* GetMissionBuff(class AShooterCharacter* Character);
	int32 GetIntFromMissionType(class AShooterCharacter** PlayerPawn);
	struct FVector GetDispatcherPointLocation(class UObject** WorldContextObject);
	bool GetDifficultyString();
	TArray<struct FMissionWorldIndicator> GetCurrentWorldIndicators();
	int32 GetCurrentSplineKeyTarget(class APrimalDinoCharacter** ForDino);
	class FName GetCurrentMissionPhaseName();
	int32 GetCurrentMissionPhaseIndex();
	TArray<class AShooterCharacter*> GetAllPlayersOnMission();
	void GetAllPlayerControllersOnMission(TArray<class AShooterPlayerController*>* OutControllers);
	void GetAllPlayerControllersInvolvedInMission(TArray<class AShooterPlayerController*>* OutPlayerControllers);
	void GetAllPlayerCharactersInvolvedInMission(TArray<class AShooterCharacter*>* OutPlayerCharacters);
	void GetAllMissionTriggersWithKey(class UObject** WorldContextObject, class FName* TriggerKey, TArray<class AMissionTrigger*>* OutTriggerActors, bool* bSortByTriggerOrder, bool* bReverseSort);
	TArray<class FName> GetAllMissionTriggerKeys();
	void GetAllMissionSplinesWithKey(class UObject** WorldContextObject, class FName* TriggerKey, TArray<class AMissionSpline*>* OutSplineActors, bool* bSortByTriggerOrder, bool* bReverseSort);
	void GetAllMissionServerSidePointsWithKey(class UObject** WorldContextObject, class FName* TriggerKey, TArray<class AMissionServerSidePoint*>* OutServerSidePointActors, bool* bSortByTriggerOrder, bool* bReverseSort, bool* bExcludeMissionBounds);
	TArray<struct FMissionPhaseRequirement> GeneratePhaseRequirements(class FName* PhaseName);
	TArray<struct FMissionPhaseRequirement> GeneratePerPlayerPhaseRequirements(class AShooterCharacter* Character, class FName* PhaseName);
	void FindMissionsMatchingTag(class UObject** WorldContextObject, class FName* MissionTag, TArray<class UClass*>* Missions);
	class AMissionSpline* FindClosestSplineActorWithTriggerKey(class UObject** WorldContextObject, class FName* TriggerKey);
	class AMissionSpline* FindClosestSplineActor(const TArray<class AMissionSpline*>& Splines);
	class USplineComponent* FindClosestPathingSpline();
	int32 FinalizeMissionPrep(bool bForceAdd);
	void DeactivateMission();
	int32 CountMissionLeaderboardRows();
	int32 CountInventoryItemsFromAllPlayersInMission(class UClass* ItemType);
	int32 CountInventoryItems(class APrimalCharacter* Character, class UClass* ItemType);
	bool ClearReverseTeleportReturnLocation(class APrimalCharacter* Character);
	bool ClearDinoAINavigationTargetActor(class APrimalDinoCharacter* Dino);
	bool ClearDinoAIForcedTargetActor(class APrimalDinoCharacter* Dino);
	void CleanupInvalidPlayers(bool* RemoveIfInvalid);
	bool CanStartPhase(class FName* PhaseName);
	bool CanStartMission(class FString* ClientFailureReason, class AActor** OutMissionDispatcher);
	float CalcXPRatio(enum class ELevelExperienceRampType* RampType);
	float CalculateMissionExperienceForPlayer(class AShooterCharacter** Player);
	bool BPTryCompletePhase(class FName* PhaseName);
	bool BPStaticIsPlayerEligibleForMission(class AShooterCharacter** PlayerPawn, class APrimalBuff_MissionData** PlayerMissionData);
	bool BPStaticCanStartMission(class AShooterCharacter** PlayerPawn, class APrimalBuff_MissionData** PlayerMissionData, class FString* ClientFailureReason, class AActor** OutSelectedMissionDispatcher);
	int32 BPPhaseNameToIndex(class FName* Name, bool* bIndexIsValid);
	bool BPOverrideRandomWanderLocation(class APrimalDinoCharacter* Dino, struct FVector* InVec, struct FVector* OutVec);
	bool BPOverrideMissionTimerColor(class AShooterPlayerController** ShooterContr, struct FLinearColor* DefaultColor, struct FLinearColor* CurrentColor, struct FLinearColor* TimerOverrideColor);
	class FString BPOverrideMissionIndicatorString(class AShooterCharacter** ForCharacter, struct FMissionWorldIndicator* Indicator, const class FString& String);
	class UNavigationPath* BPOnReceivedMissionPathFindingResult(int32* ID, uint8 Result);
	class AShooterPlayerController* BPOnPlayerRemovedFromMission(class AShooterCharacter** Player, bool* bFromMissionCompleteEvent, bool* bLastPhaseSuccess);
	class AShooterPlayerController* BPOnPlayerAddedToMission(class AShooterCharacter** Player);
	int32 BPOnMissionTriggerEndOverlap(class AMissionTrigger* Trigger);
	int32 BPOnMissionTriggerBeginOverlap(class AMissionTrigger* Trigger);
	void BPOnMissionTimedOut();
	void BPOnMissionSuspended();
	class AController* BPOnMissionStructureDestroyed(class APrimalStructure** Structure, float KillingDamage, struct FDamageEvent* DamageEvent, class AActor* DamageCauser);
	float BPOnMissionStructureDamage(class APrimalStructure** Structure, struct FDamageEvent* DamageEvent, class AController** EventInstigator, class AActor* DamageCauser);
	void BPOnMissionServerSetup();
	class AShooterPlayerController* BPOnMissionPlayerRespawned(class AShooterCharacter** Player);
	class UPrimalItem* BPOnMissionPlayerRemovedInventoryItem(class AShooterCharacter** Player, class UPrimalInventoryComponent** Inventory, int32* AmountRemoved);
	class AController* BPOnMissionPlayerDied(class AShooterCharacter** Player, float KillingDamage, struct FDamageEvent* DamageEvent, class AActor* DamageCauser);
	bool BPOnMissionPlayerAddedInventoryItem(class AShooterCharacter** Player, class UPrimalInventoryComponent** Inventory, int32* AmountAdded);
	class ADroppedItemMission* BPOnMissionDroppedItemPickedUp(class APlayerController** ByPC, class UPrimalItem** InventoryItem);
	class AController* BPOnMissionDinoDied(class APrimalDinoCharacter* Dino, float KillingDamage, struct FDamageEvent* DamageEvent, class AActor* DamageCauser);
	float BPOnMissionDinoDamage(class APrimalDinoCharacter* Dino, struct FDamageEvent* DamageEvent, class AController** EventInstigator, class AActor* DamageCauser);
	void BPOnMissionDeactivated();
	void BPOnMissionComplete(class AShooterCharacter** ForPlayer, class AShooterPlayerController** ForController, bool* bLastPhaseSuccess, float* XPRewarded, TArray<class UPrimalItem*>* ItemsRewarded);
	bool BPOnMissionCheat(float* Value);
	void BPOnMissionActivated();
	bool BPIsPhaseComplete(class FName* PhaseName);
	class FString BPGetPhaseDisplayText(class FName* PhaseName);
	class FString BPGetMissionTimerText(class AShooterPlayerController** ShootCont);
	float BPGetMissionTargetingDesire(class APrimalDinoCharacter** MissionDino, class AActor** ForTarget, float* ForTargetingDesireValue);
	class FString BPGetMissionDurationText(class AShooterPlayerController** ShootCont);
	void BPGetMetaTagsAsInts(TArray<int32>* OutTagIds);
	class APlayerController* BPGetExtraLocalMissionIndicators(class AShooterCharacter** PlayerPawn, const TArray<struct FMissionWorldIndicator>& IndicatorsIn, const TArray<struct FMissionWorldIndicator>& IndicatorsOut);
	void BPGenerateMissionRewards(struct FCharacterAndControllerPair* Player, bool bCompletedSuccessfully, float XPReward, const TArray<class UPrimalItem*>& GeneratedItems);
	bool BPCanRideMissionDino(class AShooterCharacter* Character, class APrimalDinoCharacter* Dino);
	bool BPAllowTimeout();
	bool BPAllowPlayerToLeaveMission(class AShooterCharacter** PlayerPawn);
	bool AllowMissionCreation(class AShooterCharacter** ForCharacter, struct FVector* Location, class AActor* MissionDispatcherActor, const class FString& FailureReason);
	class UPrimalItem* AddPlayerUsableItem(class AShooterCharacter* Character);
	bool AddPlayerToMission(class AShooterCharacter** PlayerCharacter, bool bForceAdd);
	int32 AddPlayersInRadiusToMission(float Radius, int32 MaxPlayersToAdd, bool bPrioritizeByDistanceToWorldLocation, int32 InTargetingTeam, enum class ETargetingTeamBehavior TargetingTeamBehavior, bool bForceAdd);
	bool AddMissionLeaderboardRow(double NetworkTime, float FloatValue, int32 IntValue, class FName NameValue);
};

// 0x90 (0xBD0 - 0xB40)
// Class ShooterGame.MissionType_ModularMissionBase
class AMissionType_ModularMissionBase : public AMissionType
{
public:
	uint8                                        Pad_305F[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        Modules;                                           // 0xB48(0x10)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DelayBeforeInitalModule;                           // 0xB58(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	float                                        MissionTimeRemainingAfterEscapePhase;              // 0xB5C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<class AShooterProjectile*>            MissionProjectiles;                                // 0xB60(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        MissionCompleted : 1;                              // Mask: 0x1, PropSize: 0x10xB70(0x1)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        CurrentModuleCompleted : 1;                        // Mask: 0x2, PropSize: 0x10xB70(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_230 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3061[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CurrModule;                                        // 0xB74(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CurrRequirementsTitle;                             // 0xB78(0x8)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	class UNewMissionModuleBase*                 CurrentModule;                                     // 0xB80(0x8)(Edit, ConstParm, Net, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	double                                       CurrentModuleStartTime;                            // 0xB88(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentModuleTimeLimit;                            // 0xB90(0x4)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumDeadMissionDinos;                               // 0xB94(0x4)(Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumDestroyedMissionStructures;                     // 0xB98(0x4)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3062[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        SpawnedForModuleActors;                            // 0xBA0(0x10)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMissionWorldIndicator>        SpecialWorldIndicators;                            // 0xBB0(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<class UNewMissionModuleBase*>         AdditionalModules;                                 // 0xBC0(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AMissionType_ModularMissionBase* GetDefaultObj();

	class AActor* SpawnActorForMissionModule(const struct FTransform& ActorTransform, bool bSpawnEvenIfColliding);
	void SetupMissionModules();
	void RemoveSpecialWorldIndicator(const struct FMissionWorldIndicator& IndicatorToRemove);
	void RemoveAllSpecialWorldIndicators();
	class AShooterProjectile* RegisterProjectile();
	void MultiMissionSpawnCosmetic(class USoundBase* SoundTemplate, class UParticleSystem* ParticleTemplate, const struct FTransform& TheTransform, float OverrideTimeDilation);
	class UClass* MultiFireProjectiles(struct FVector* Location, const struct FVector& Velocity, const TArray<class AActor*>& SubprojectileTargets, class AActor* FiringActor);
	void MultiDeactivateWarmerColderHUD();
	TArray<struct FVector> MultiActivateWarmerColderHUD(struct FHUDElement* Background, const struct FHUDElement& Icon, float* MinAlpha, float* MaxAlpha, float* AlphaPower, struct FLinearColor* RightColor, struct FLinearColor* WrongColor, bool* bClearLocationsFirst);
	void MissionSpawnCosmetic(class USoundBase* SoundTemplate, class UParticleSystem* ParticleTemplate, const struct FTransform& TheTransform, float OverrideTimeDilation);
	class AShooterProjectile* FireProjectiles(struct FVector* Location, const struct FVector& Velocity, const TArray<class AActor*>& SubprojectileTargets, class AActor* FiringActor);
	void ExecuteNextMissionModule();
	void DeactivateWarmerColderHUD();
	void CreateLeaderboardEntry(class AShooterPlayerController** ForPC);
	class AShooterProjectile* BPOnMissionProjectileExpoloded();
	void AddSpecialWorldIndicator(struct FMissionWorldIndicator* IndicatorToAdd);
	TArray<struct FVector> ActivateWarmerColderHUD(struct FHUDElement* Background, const struct FHUDElement& Icon, float* MinAlpha, float* MaxAlpha, float* AlphaPower, struct FLinearColor* RightColor, struct FLinearColor* WrongColor, bool* bClearLocationsFirst);
};

// 0x3B0 (0x3E0 - 0x30)
// Class ShooterGame.ModDataAsset
class UModDataAsset : public UDataAsset
{
public:
	class FString                                ModName;                                           // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                ModDescription;                                    // 0x40(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ModIcon;                                           // 0x50(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultGameMode;                                   // 0x58(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	TArray<class UClass*>                        AdditionalEngramBlueprintClasses;                  // 0x60(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        RemoveEngramBlueprintClasses;                      // 0x70(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> AdditionalStructuresToPlace;                       // 0x80(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassAddition>                AdditionalStructureEngrams;                        // 0x90(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                AdditionalEggWeightsToSpawn;                       // 0xA0(0x10)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AdditionalEggItemsToSpawn;                         // 0xB0(0x10)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                FertilizedAdditionalEggWeightsToSpawn;             // 0xC0(0x10)(Edit, BlueprintVisible, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        FertilizedAdditionalEggItemsToSpawn;               // 0xD0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FExtraEggItem>                 AdditionalExtraEggItems;                           // 0xE0(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AdditionalDinoEntries;                             // 0xF0(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class AActor>                  OverridePhotoModeClass;                            // 0x100(0x30)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventPhotoMode;                                 // 0x130(0x1)(Edit, ConstParm, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3064[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftObjectPtr<class UMaterialInterface>> AdditionalBuffPostProcessEffects;                  // 0x138(0x10)(ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AdditionalTradableOptions;                         // 0x148(0x10)(BlueprintVisible, Net, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FInvalidReferenceRedirector>   AdditionalInvalidReferenceRedirects;               // 0x158(0x10)(Edit, BlueprintReadOnly, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FWorldDefaultItemSet>          AdditionalDefaultMapItemSets;                      // 0x168(0x10)(ConstParm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TMap<class FName, struct FExplorerNoteEntry> AdditionalNamedExplorerNoteEntries;                // 0x178(0x50)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FExplorerNoteSpawn>            AdditionalExplorerNoteSpawns;                      // 0x1C8(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FAppIDItem>                    AdditionalAppIDItems;                              // 0x1D8(0x10)(ConstParm, EditFixedSize, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_NPC;                                         // 0x1E8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_SupplyCrates;                                // 0x1F8(0x10)(ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FActiveEventSupplyCrateWeight> Remap_ActiveEventSupplyCrates;                     // 0x208(0x10)(ConstParm, Net, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_ResourceComponents;                          // 0x218(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_NPCSpawnEntries;                             // 0x228(0x10)(Edit, ExportObject, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_Engrams;                                     // 0x238(0x10)(Edit, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_Items;                                       // 0x248(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FNPCSpawnEntriesContainerAdditions> TheNPCSpawnEntriesContainerAdditions;              // 0x258(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FAvailableMission>             AvailableMissions;                                 // 0x268(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWantsToRunMissions;                               // 0x278(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3067[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDinoBabySetup>                DinoBabySetups;                                    // 0x280(0x10)(ConstParm, ExportObject, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDinoBabySetup>                DinoGestationSetups;                               // 0x290(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FUnlockableEmoteEntry>         UnlockableEmotes;                                  // 0x2A0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FEmoteGroup>                   EmoteGroups;                                       // 0x2B0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UAnimMontage>>   AdditionalAnimationsPreventInput;                  // 0x2C0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FColorDefinition>              ColorDefinitions;                                  // 0x2D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemappingWeight>         GlobalNPCRandomSpawnClassWeights;                  // 0x2E0(0x10)(BlueprintVisible, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHairStyleDefinition>          AdditionalHeadHairStyleDefinitions;                // 0x2F0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHairStyleDefinition>          AdditionalFacialHairStyleDefinitions;              // 0x300(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ServerExtraWorldSingletonActorClasses;             // 0x310(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FBuffAddition>                 AdditionalDefaultBuffs;                            // 0x320(0x10)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FObjectCorrelation>            AdditionalHumanMaleAnimSequenceOverrides;          // 0x330(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FObjectCorrelation>            AdditionalHumanFemaleAnimSequenceOverrides;        // 0x340(0x10)(Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FObjectCorrelation>            AdditionalHumanMaleAnimMontagesOverrides;          // 0x350(0x10)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FObjectCorrelation>            AdditionalHumanFemaleAnimMontagesOverrides;        // 0x360(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FStructureToBuildAddition>     AdditionalStructuresToBuild;                       // 0x370(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FStructureVariantAddition>     AdditionalStructureVariants;                       // 0x380(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<class UObject*>                       ExtraResources;                                    // 0x390(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UObject>>         ExtraResourcesSoft;                                // 0x3A0(0x10)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceServerUseDinoList;                           // 0x3B0(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceEnablePhysicsSimulation;                     // 0x3B1(0x1)(ExportObject, Net, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_306B[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        AdditionalWorldBuffDefinitions;                    // 0x3B8(0x10)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	int32                                        OverrideServerPhysXSubsteps;                       // 0x3C8(0x4)(Edit, ExportObject, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_306C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FCustomCosmeticModObjectSkinEntry> ModCustomCosmeticEntries;                          // 0x3D0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UModDataAsset* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class ShooterGame.MountedDLCManager
class UMountedDLCManager : public UObject
{
public:
	TArray<struct FMountedDLCInfo>               MountedDLCs;                                       // 0x28(0x10)(ExportObject, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMountedDLCMapInfo>            MountedDLCMaps;                                    // 0x38(0x10)(ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_306E[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMountedDLCManager* GetDefaultObj();

};

// 0x40 (0x370 - 0x330)
// Class ShooterGame.MultiUseActionWidget
class UMultiUseActionWidget : public UPrimalUserWidget
{
public:
	uint8                                        Pad_3071[0x40];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMultiUseActionWidget* GetDefaultObj();

	void Update();
	class UObject* Init();
};

// 0x38 (0x3F0 - 0x3B8)
// Class ShooterGame.MultiUseTooltip
class UMultiUseTooltip : public UToolTipWidget
{
public:
	uint8                                        Pad_3072[0x38];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMultiUseTooltip* GetDefaultObj();

};

// 0x80 (0xA8 - 0x28)
// Class ShooterGame.NewMissionModuleBase
class UNewMissionModuleBase : public UObject
{
public:
	uint8                                        DebugLifetime : 1;                                 // Mask: 0x1, PropSize: 0x10x28(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        IsSubModule : 1;                                   // Mask: 0x2, PropSize: 0x10x28(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        RequiresUpateMissionPrepAreaByMission : 1;         // Mask: 0x4, PropSize: 0x10x28(0x1)(ConstParm, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        DeactivateMissionOnModuleLimitPassed : 1;          // Mask: 0x8, PropSize: 0x10x28(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_231 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_308E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ModuleTimeLimit;                                   // 0x2C(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	struct FStruct_MissionModule_Travel          TravelStruct;                                      // 0x30(0x38)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        SubmodulesToRunAtStart;                            // 0x68(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        SubmodulesToRunOnComplete;                         // 0x78(0x10)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class AMissionType_ModularMissionBase*       MyOuter;                                           // 0x88(0x8)(EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class AMissionServerSidePoint*>       ModuleNavPoints;                                   // 0x90(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ModuleEndedBefore : 1;                             // Mask: 0x1, PropSize: 0x10xA0(0x1)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        CurrentlyDelayed : 1;                              // Mask: 0x2, PropSize: 0x10xA0(0x1)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3090[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UNewMissionModuleBase* GetDefaultObj();

	void TriggerHandleMissionModuleBegin();
	int32 SetOuter();
	void RunSubModulesOnComplete();
	void RunSubModulesAtStart();
	void OnOuterDestroyed(class AActor** DestroyedActor);
	int32 HandleMissionTriggerOverlapEnd(class AMissionTrigger* Trigger);
	int32 HandleMissionTriggerOverlapBegin(class AMissionTrigger* Trigger);
	int32 HandleMissionStructureDestroyed(class APrimalStructure** Structure, float KillingDamage, struct FDamageEvent* DamageEvent, class AActor* DamageCauser);
	int32 HandleMissionStructureDamaged(class APrimalStructure** Structure, float KillingDamage, struct FDamageEvent* DamageEvent, class AActor* DamageCauser);
	int32 HandleMissionProjectileExploded();
	int32 HandleMissionPlayerRemovedInventoryItem(class AShooterCharacter** Player, class UPrimalInventoryComponent** Inventory, int32* AmountRemoved);
	int32 HandleMissionPlayerAddedInventoryItem(class AShooterCharacter** Player, class UPrimalInventoryComponent** Inventory, int32* AmountAdded);
	int32 HandleMissionModuleEnd();
	int32 HandleMissionModuleBegin();
	TArray<struct FMissionWorldIndicator> HandleMissionGetPerPlayerIndicators(class AShooterCharacter* Character);
	int32 HandleMissionDroppedItemPickedUp();
	int32 HandleMissionDinoDied(class APrimalDinoCharacter* Dino, float KillingDamage, struct FDamageEvent* DamageEvent, class AActor* DamageCauser);
	int32 HandleMissionDinoDamaged(class APrimalDinoCharacter* Dino, struct FDamageEvent* DamageEvent, class AController** EventInstigator, class AActor* DamageCauser);
	int32 HandleLastMissionStructureDestroyed(class APrimalStructure** Structure, float KillingDamage, struct FDamageEvent* DamageEvent, class AActor* DamageCauser);
	int32 HandleLastMissionProjectileExploded();
	int32 HandleLastMissionDinoDied(class APrimalDinoCharacter* Dino, float KillingDamage, struct FDamageEvent* DamageEvent, class AActor* DamageCauser);
	class UWorld* GetWorld();
	class FString GetModuleRequirementsTitle();
	TArray<struct FMissionPhaseRequirement> GetModuleRequirementsMessage();
	float BPGetTargetingDesire(class APrimalDinoCharacter** MissionDino, class AActor** ForTarget, float* ForTargetingDesireValue);
};

// 0x0 (0x758 - 0x758)
// Class ShooterGame.NewOptionsButtonWidget
class UNewOptionsButtonWidget : public UBaseSelectableButtonWidget
{
public:

	static class UClass* StaticClass();
	static class UNewOptionsButtonWidget* GetDefaultObj();

};

// 0x0 (0xB8 - 0xB8)
// Class ShooterGame.NinjaLiveBaseComponent
class UNinjaLiveBaseComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UNinjaLiveBaseComponent* GetDefaultObj();

	int32 ScaleResolutionForSettings();
	bool IsFluidSimEnabled();
};

// 0x28 (0x50 - 0x28)
// Class ShooterGame.NPCSpawnEntriesContainer
class UNPCSpawnEntriesContainer : public UObject
{
public:
	TArray<struct FNPCSpawnEntry>                NPCSpawnEntries;                                   // 0x28(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FNPCSpawnLimit>                NPCSpawnLimits;                                    // 0x38(0x10)(BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MaxDesiredNumEnemiesMultiplier;                    // 0x48(0x4)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3094[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UNPCSpawnEntriesContainer* GetDefaultObj();

};

// 0x218 (0x6D8 - 0x4C0)
// Class ShooterGame.NPCZoneManager
class ANPCZoneManager : public AInfo
{
public:
	TArray<class ANPCZoneVolume*>                LinkedZoneVolumes;                                 // 0x4C0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FLinkedZoneSpawnVolumeEntry>   LinkedZoneSpawnVolumeEntries;                      // 0x4D0(0x10)(EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        DefaultZoneSpawnVolumeFloors;                      // 0x4E0(0x10)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        DefaultZoneSpawnVolumeIgnoreCeilings;              // 0x4F0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          DefaultZoneSpawnVolumeFloorTags;                   // 0x500(0x10)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          DefaultZoneSpawnVolumeIgnoreCeilingTags;           // 0x510(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class UNPCSpawnEntriesContainer> NPCSpawnEntriesContainerObject;                    // 0x520(0x30)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnabled;                                          // 0x550(0x1)(Edit, ConstParm, Parm, ZeroConstructor, Transient, EditConst, GlobalConfig)
	bool                                         bHasCompletedSetup;                                // 0x551(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceInEditor;                                    // 0x552(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNeverSpawnInWater;                                // 0x553(0x1)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlySpawnInWater;                                 // 0x554(0x1)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3098[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          OnlyAllowSpawningOnActorTags;                      // 0x558(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowExtentTest;                                  // 0x568(0x1)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_309A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MinDesiredNumberOfNPC;                             // 0x56C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        SP_MinDesiredNumberOfNPC;                          // 0x570(0x4)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_309B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DesiredNumberOfNPCMultiplier;                      // 0x578(0x4)(ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TheSpawnPointMinimumFloorNormal;                   // 0x57C(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TheNewNewEditorNumberOfNPCMultiplier;              // 0x580(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        KillOffOverweightNPCStasisTime;                    // 0x584(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TheMaximumWorldTimeForFullIncrease;                // 0x588(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TheMinimumPlayerDistanceFromSpawnPoint;            // 0x58C(0x4)(ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TheIncreaseNPCInterval;                            // 0x590(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        SP_TheIncreaseNPCInterval;                         // 0x594(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TheIncreaseNPCIntervalMax;                         // 0x598(0x4)(Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TheDecreaseNPCInterval;                            // 0x59C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        NPCAIRangeMultiplier;                              // 0x5A0(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        NPCAIAggroNotifyNeighborsRangeMultiplier;          // 0x5A4(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNPCDontWander;                                    // 0x5A8(0x1)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNPCWildIgnoreWild;                                // 0x5A9(0x1)(ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNPCNoKillXP;                                      // 0x5AA(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNPCPreventSaving;                                 // 0x5AB(0x1)(Edit, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceUntameable;                                  // 0x5AC(0x1)(ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForcePreventHibernation;                          // 0x5AD(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUsesManualSpawning;                               // 0x5AE(0x1)(BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDedicatedServerForceManualSpawningOnLayerLoadedDinos; // 0x5AF(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreVolumeEcompassingCheck;                     // 0x5B0(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSpawnAllNPCEntries;                               // 0x5B1(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyUseInSingleplayer;                            // 0x5B2(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyUseInDedicatedServer;                         // 0x5B3(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        NPCWanderRadiusMultiplier;                         // 0x5B4(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxNumberSpawnZoneRandomPointChecks;               // 0x5B8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        TheNPCFullIncreaseMaximumIterations;               // 0x5BC(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TheMinimumTamedDinoDistanceFromSpawnPoint;         // 0x5C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TheMinimumStructureDistanceFromSpawnPoint;         // 0x5C4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        NPCLerpToMaxRandomBaseLevel;                       // 0x5C8(0x4)(BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ManualSpawningNPCLerpToMaxRandomBaseLevel;         // 0x5CC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaximumNumberNearbyCoreStructures;                 // 0x5D0(0x4)(ExportObject, Net, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        AbsoluteMaximumNumberNearbyCoreStructures;         // 0x5D4(0x4)(ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAutoKillUseGlobalStasisArray;                     // 0x5D8(0x1)(ConstParm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseSpawnBlockingCheck;                            // 0x5D9(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTraceForSpawnPoints;                              // 0x5DA(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseSpawnOverlapCheck;                             // 0x5DB(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSpawnRequiresTraceDownThroughCeiling;             // 0x5DC(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_309D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SpawnPointRequiresTraceUpToCeilingDistance;        // 0x5E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_309E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class ANPCZoneVolume*                        HardLimitWildDinosToVolume;                        // 0x5E8(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTraceForSpawnAgainstWater;                        // 0x5F0(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNPCForcePreventExitingWater;                      // 0x5F1(0x1)(ConstParm, ExportObject, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_309F[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bUseSpawnPointOverrideRotation;                    // 0x5F3(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_30A0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AVolume*                               NPCLimitTargetsToVolume;                           // 0x5F8(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        NPCLevelMultiplier;                                // 0x600(0x4)(Edit, ConstParm, Net, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        ForceOverrideNPCBaseLevel;                         // 0x604(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        IncreaseNPCIntervalMultiplier;                     // 0x608(0x4)(Edit, BlueprintVisible, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDirectlyLinkDinoCount;                            // 0x60C(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_30A1[0x13];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FNPCSpawnLimit>                NPCSpawnLimits;                                    // 0x620(0x10)(BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        UseDesiredNumberOfNPC;                             // 0x630(0x4)(Edit, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_30A2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       FirstUpdateTime;                                   // 0x638(0x8)(BlueprintVisible, Net, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumNPCSpawned;                                     // 0x640(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumSpawnFailures;                                  // 0x644(0x4)(Edit, ConstParm, BlueprintReadOnly, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	double                                       LastIncreaseNPCTime;                               // 0x648(0x8)(ExportObject, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	double                                       LastDecreaseNPCTime;                               // 0x650(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        DirectLinkDinoCount;                               // 0x658(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsCaveManager;                                    // 0x65C(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_30A3[0x17];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        CloseStructureDistanceFromSpawnPoint;              // 0x674(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        SpawnPointOverrides;                               // 0x678(0x10)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class APrimalDinoCharacter*>          DirectLinkedDinos;                                 // 0x688(0x10)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NonDedicatedFreezeWildDinoPhysicsIfLayerUnloaded;  // 0x698(0x8)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SubLevelWaterCheckUseTagOverride;                  // 0x6A0(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseHighestPriorityPhysicsWaterVolume;             // 0x6A8(0x1)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForcedInNoDinos;                                  // 0x6A9(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreSingleplayerSpawnRangeCheck;                // 0x6AA(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_30A4[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinimumManualSpawnInterval;                        // 0x6AC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	double                                       LastManuallySpawnedTime;                           // 0x6B0(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreNPCRandomClassReplacements;                 // 0x6B8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowSpawnPointOverridesNonDedicatedLevelUnloadedFreezing; // 0x6B9(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_30A5[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        TheNPCDynamicIncreaseMaximumIterations;            // 0x6BC(0x4)(ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                WeightedChancesToSpawnWildChildrenOnCreatureSpawnMultipliers; // 0x6C0(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_30A6[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ANPCZoneManager* GetDefaultObj();

	TArray<class APrimalDinoCharacter*> StaticSpawnNPCs(class UObject** WorldContext, struct FRotator* AtRotation);
	void DestroyAllLinkedDinos();
	bool CheckIncreaseNPC();
};

// 0x0 (0x510 - 0x510)
// Class ShooterGame.NPCZoneSpawnVolume
class ANPCZoneSpawnVolume : public AVolume
{
public:

	static class UClass* StaticClass();
	static class ANPCZoneSpawnVolume* GetDefaultObj();

};

// 0x60 (0x570 - 0x510)
// Class ShooterGame.NPCZoneVolume
class ANPCZoneVolume : public AVolume
{
public:
	uint8                                        Pad_30A9[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bOnlyCountWaterDinos : 1;                          // Mask: 0x1, PropSize: 0x10x518(0x1)(ExportObject, Net, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyCountLandDinos : 1;                           // Mask: 0x2, PropSize: 0x10x518(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoHigherQualityLedgeDetection : 1;                // Mask: 0x4, PropSize: 0x10x518(0x1)(Edit, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCountTamedDinos : 1;                              // Mask: 0x8, PropSize: 0x10x518(0x1)(BlueprintVisible, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_232 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_30AA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> OnlyCountDinoClasses;                              // 0x520(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> IgnoreDinoClasses;                                 // 0x530(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHibernationCountInfo>         HibernatedEntities;                                // 0x540(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        HibernatedCountWeights;                            // 0x550(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_30AB[0x1C];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ANPCZoneVolume* GetDefaultObj();

	void OnEndOverlap(class AActor* OverlappedActor, class AActor** Actor);
	void OnBeginOverlap(class AActor* OverlappedActor, class AActor** Actor);
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.ObjectSerializer
class UObjectSerializer : public UObject
{
public:

	static class UClass* StaticClass();
	static class UObjectSerializer* GetDefaultObj();

};

// 0x1F8 (0x6B8 - 0x4C0)
// Class ShooterGame.OceanDinoManager
class AOceanDinoManager : public AActor
{
public:
	float                                        ViewerNumDinosGatherRadius;                        // 0x4C0(0x4)(Edit, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ViewerDinoSpawnRadiusMin;                          // 0x4C4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ViewerDinoSpawnRadiusMax;                          // 0x4C8(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ViewerDinoSpawnViewOffsetMin;                      // 0x4CC(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ViewerDinoSpawnViewOffsetMax;                      // 0x4D0(0x4)(Edit, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_30AE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FOceanDinoDepthEntry>          OceanDinoDepthEntries;                             // 0x4D8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxValidSpawnPointAttempts;                        // 0x4E8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxNumViewersToUpdatePerFrame;                     // 0x4EC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ViewerNumDinosTargetMinPlayers;                    // 0x4F0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ViewerNumDinosTargetMaxPlayers;                    // 0x4F4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        RaftMinViewerSpeed;                                // 0x4F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_30AF[0x54];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        NumDinosMinPlayers;                                // 0x550(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        NumDinosMaxPlayers;                                // 0x554(0x4)(Edit, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                KilledOceanDinoAreaDeathBuff;                      // 0x558(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          OceanVolumeTags;                                   // 0x560(0x10)(Edit, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_30B1[0x140];                                   // Fixing Size After Last Property  > TateDumper <
	float                                        MinViewerDeltaDistanceToRefreshOceanSpawns;        // 0x6B0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_30B2[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AOceanDinoManager* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class ShooterGame.ParticleModuleWaveWorksBase
class UParticleModuleWaveWorksBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleWaveWorksBase* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class ShooterGame.ParticleModuleWindForce
class UParticleModuleWindForce : public UParticleModuleWaveWorksBase
{
public:
	float                                        MaxWindSpeedScale;                                 // 0x30(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        WindForceScale;                                    // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleWindForce* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class ShooterGame.ParticleModuleWaveHatDetector
class UParticleModuleWaveHatDetector : public UParticleModuleWaveWorksBase
{
public:
	float                                        MaxDetectorWaitTime;                               // 0x30(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        FoamWaveHatsThreshold;                             // 0x34(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        WaveVelocityScale;                                 // 0x38(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_30B4[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleWaveHatDetector* GetDefaultObj();

};

// 0x1C8 (0xAA0 - 0x8D8)
// Class ShooterGame.OnlineSessionEntryButton
class UOnlineSessionEntryButton : public UDataListEntryButton
{
public:
	class FString                                GameName;                                          // 0x8D8(0x10)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig)
	class FString                                BuildId;                                           // 0x8E8(0x10)(BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                OwnerName;                                         // 0x8F8(0x10)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FString                                MapName;                                           // 0x908(0x10)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                DayTimeStr;                                        // 0x918(0x10)(ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint32                                       NumPlayers;                                        // 0x928(0x4)(BlueprintVisible, Net, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint32                                       MaxNumPlayers;                                     // 0x92C(0x4)(ConstParm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint64                                       ModId;                                             // 0x930(0x8)(ConstParm, Net, Parm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint64                                       TotalConversionId;                                 // 0x938(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint64                                       Ping;                                              // 0x940(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, EditConst, SubobjectReference)
	bool                                         bHasPassword;                                      // 0x948(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsFavourite;                                      // 0x949(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsPVEServer;                                      // 0x94A(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_30B6[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            PasswordTexture;                                   // 0x950(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsOfficialServer;                                 // 0x958(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUsingBattleEye;                                   // 0x959(0x1)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowDownloadCharacters;                          // 0x95A(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowDownloadItems;                               // 0x95B(0x1)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_30B7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            BattleEyeTexture;                                  // 0x960(0x8)(Edit, ConstParm, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            OfficialServerTexture;                             // 0x968(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            PVPServerTexture;                                  // 0x970(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            PVEServerTexture;                                  // 0x978(0x8)(Edit, BlueprintVisible, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          DisplayStringSelectedColor;                        // 0x980(0x10)(ConstParm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_30B8[0x110];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UOnlineSessionEntryButton* GetDefaultObj();

};

// 0xB8 (0xE0 - 0x28)
// Class ShooterGame.PaintingCache
class UPaintingCache : public UObject
{
public:
	uint8                                        Pad_30BA[0x88];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UPaintingTexture*>              PaintingTextures;                                  // 0xB0(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_30BB[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPaintingCache* GetDefaultObj();

	bool ForceCacheLocalPaintingTemplatesToDisk(class UPaintingTexture* PaintingTexture);
};

// 0x70 (0x128 - 0xB8)
// Class ShooterGame.PaintingStreamingComponent
class UPaintingStreamingComponent : public UActorComponent
{
public:
	uint8                                        Pad_30BF[0x70];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPaintingStreamingComponent* GetDefaultObj();

	class UStructurePaintingComponent* ServerSendNextChunk();
	class UStructurePaintingComponent* ServerRequestPaintingStream();
	class UStructurePaintingComponent* ServerCancelPaintingStream();
	void ForceRefreshStructurePainting(class UStructurePaintingComponent** Structure);
	TArray<uint8> ClientRecieveChunk();
	class UStructurePaintingComponent* ClientEndStreamingJob();
	class UStructurePaintingComponent* ClientCancelSteamingJob();
	int32 ClientBeginStreamingJob();
};

// 0x40 (0x68 - 0x28)
// Class ShooterGame.PaintingTexture
class UPaintingTexture : public UObject
{
public:
	uint32                                       Revision;                                          // 0x28(0x4)(ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_30C0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            Texture;                                           // 0x30(0x8)(ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst)
	uint8                                        Pad_30C1[0x30];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPaintingTexture* GetDefaultObj();

};

// 0x80 (0x3B0 - 0x330)
// Class ShooterGame.PanelBuffTypeUI
class UPanelBuffTypeUI : public UPrimalUserWidget
{
public:
	uint8                                        Pad_30C2[0x80];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPanelBuffTypeUI* GetDefaultObj();

};

// 0x1260 (0x1B20 - 0x8C0)
// Class ShooterGame.PrimalCharacter
class APrimalCharacter : public ACharacter
{
public:
	uint8                                        Pad_32DC[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        ProneEyeHeight;                                    // 0x8D8(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraMaxAccelerationModifier;                      // 0x8DC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraFrictionModifier;                             // 0x8E0(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_32DE[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector                               OldLocation;                                       // 0x8F8(0x18)(BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	struct FRotator                              OldRotation;                                       // 0x910(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        EffectorInterpSpeed;                               // 0x928(0x4)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        HalfLegLength;                                     // 0x92C(0x4)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TwoLeggedVirtualPointDistFactor;                   // 0x930(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        FullIKDistance;                                    // 0x934(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        IKAfterFallingTime;                                // 0x938(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SimpleIkRate;                                      // 0x93C(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               GroundCheckExtent;                                 // 0x940(0x18)(BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	double                                       LastForceAimedCharactersTime;                      // 0x958(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        FluidInteractionScalar;                            // 0x960(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_32DF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          JumpAnim;                                          // 0x968(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          LandedAnim;                                        // 0x970(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          HurtAnim;                                          // 0x978(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          HurtAnim_Flying;                                   // 0x980(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          HurtAnim_Sleeping;                                 // 0x988(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          PinnedAnim;                                        // 0x990(0x8)(EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       HurtFX;                                            // 0x998(0x8)(Edit, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            HurtSound;                                         // 0x9A0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RootBodyBoneName;                                  // 0x9A8(0x8)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FDecalData                            HurtDecalData;                                     // 0x9B0(0x20)(Edit, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               SavedBaseWorldLocation;                            // 0x9D0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_32E0[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsVoiceTalking;                                   // 0xA00(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_32E1[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                TribeName;                                         // 0xA08(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        WaterSubmergedDepthThreshold;                      // 0xA18(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ProneWaterSubmergedDepthThreshold;                 // 0xA1C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class EMovementMode                     SubmergedWaterMovementMode;                        // 0xA20(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class EMovementMode                     UnSubmergedWaterMovementMode;                      // 0xA21(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_32E2[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UToolTipWidget*                        CustomTooltipWidget;                               // 0xA28(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDamageTypeAdjuster>           DamageTypeAdjusters;                               // 0xA30(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SnapshotScale;                                     // 0xA40(0x4)(Edit, ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_32E3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FPrimalSnapshotPose>           SnapshotPoses;                                     // 0xA48(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PoopItemClass;                                     // 0xA58(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TaxidermySkinClass;                                // 0xA60(0x8)(Edit, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DragBoneName;                                      // 0xA68(0x8)(ConstParm, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DragSocketName;                                    // 0xA70(0x8)(ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDragDistance;                                   // 0xA78(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDragDistanceTimeout;                            // 0xA7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          BonesToIngoreWhileDragged;                         // 0xA80(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DefaultTPVZoom;                                    // 0xA90(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxTPVZoom;                                        // 0xA94(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        MinTPVZoom;                                        // 0xA98(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        PreviewCameraMaxZoomMultiplier;                    // 0xA9C(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreviewCameraDefaultZoomMultiplier;                // 0xAA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreviewCameraDistanceScaleFactor;                  // 0xAA4(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            StartDraggedSound;                                 // 0xAA8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            EndDraggedSound;                                   // 0xAB0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_32E6[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        JumpBaseLockingThreshold;                          // 0xAC4(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      DraggedCharacter;                                  // 0xAC8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      DraggingCharacter;                                 // 0xAD0(0x8)(BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_32E8[0x78];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       ForceUnfreezeSkeletalDynamicsUntilTime;            // 0xB50(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        StasisConsumerRangeMultiplier;                     // 0xB58(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsProne : 1;                                      // Mask: 0x1, PropSize: 0x10xB5C(0x1)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bCanEverProne : 1;                                 // Mask: 0x2, PropSize: 0x10xB5C(0x1)(BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBlueprintJumpInputEvents : 1;                  // Mask: 0x4, PropSize: 0x10xB5C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseDeferredMovement : 1;                          // Mask: 0x8, PropSize: 0x10xB5C(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideAccessInventoryInput : 1;            // Mask: 0x10, PropSize: 0x10xB5C(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableCameraShakeOnNotifyHit : 1;                // Mask: 0x20, PropSize: 0x10xB5C(0x1)(ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasBuffPreSerializeForInstigator : 1;             // Mask: 0x40, PropSize: 0x10xB5C(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsSleeping : 1;                                   // Mask: 0x80, PropSize: 0x10xB5C(0x1)(BlueprintVisible, Parm, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        bWantsToRun : 1;                                   // Mask: 0x1, PropSize: 0x10xB5D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bActiveRunToggle : 1;                              // Mask: 0x2, PropSize: 0x10xB5D(0x1)(ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLocalIsDragging : 1;                              // Mask: 0x4, PropSize: 0x10xB5D(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsBeingDragged : 1;                               // Mask: 0x8, PropSize: 0x10xB5D(0x1)(BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableSpawnDefaultController : 1;                // Mask: 0x10, PropSize: 0x10xB5D(0x1)(BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDragging : 1;                                   // Mask: 0x20, PropSize: 0x10xB5D(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDraggingWithGrapHook : 1;                       // Mask: 0x40, PropSize: 0x10xB5D(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowCapsuleDamageAfterDeath : 1;                 // Mask: 0x80, PropSize: 0x10xB5D(0x1)(Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemoteRunning : 1;                                // Mask: 0x1, PropSize: 0x10xB5E(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanRun : 1;                                       // Mask: 0x2, PropSize: 0x10xB5E(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseHealthDamageMaterialOverlay : 1;               // Mask: 0x4, PropSize: 0x10xB5E(0x1)(ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsBlinking : 1;                                   // Mask: 0x8, PropSize: 0x10xB5E(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSleepedWaterRagdoll : 1;                          // Mask: 0x10, PropSize: 0x10xB5E(0x1)(BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanBeTorpid : 1;                                  // Mask: 0x20, PropSize: 0x10xB5E(0x1)(ConstParm, BlueprintReadOnly, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bDebugIK : 1;                                      // Mask: 0x40, PropSize: 0x10xB5E(0x1)(Edit, ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDebugIK_ShowTraceNames : 1;                       // Mask: 0x80, PropSize: 0x10xB5E(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAlwaysUpdateMesh : 1;                        // Mask: 0x1, PropSize: 0x10xB5F(0x1)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRagdollIgnoresPawnCapsules : 1;                   // Mask: 0x2, PropSize: 0x10xB5F(0x1)(Edit, ConstParm, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsePoopAnimationNotify : 1;                       // Mask: 0x4, PropSize: 0x10xB5F(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsBigDino : 1;                                    // Mask: 0x8, PropSize: 0x10xB5F(0x1)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeathUseRagdoll : 1;                              // Mask: 0x10, PropSize: 0x10xB5F(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanBeCarried : 1;                                 // Mask: 0x20, PropSize: 0x10xB5F(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanNotifyTeamAggroAI : 1;                    // Mask: 0x40, PropSize: 0x10xB5F(0x1)(Edit, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDamageNotifyTeamAggroAI : 1;                      // Mask: 0x80, PropSize: 0x10xB5F(0x1)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OverrideCameraTargetOriginLocation : 1;     // Mask: 0x1, PropSize: 0x10xB60(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetOverrideCameraInterpSpeed : 1;            // Mask: 0x2, PropSize: 0x10xB60(0x1)(Edit, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRecentlyUpdateIk : 1;                             // Mask: 0x4, PropSize: 0x10xB60(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIKEnabled : 1;                                    // Mask: 0x8, PropSize: 0x10xB60(0x1)(Edit, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsCarried : 1;                                    // Mask: 0x10, PropSize: 0x10xB60(0x1)(Edit, ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsCarriedAsPassenger : 1;                         // Mask: 0x20, PropSize: 0x10xB60(0x1)(Edit, ConstParm, BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventFallDamage : 1;                       // Mask: 0x40, PropSize: 0x10xB60(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyIsDamageCauserOfAddedBuff : 1;         // Mask: 0x80, PropSize: 0x10xB60(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventProjectileAttachment : 1;                  // Mask: 0x1, PropSize: 0x10xB61(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_234 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_32F2[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ImmobilizationActor;                               // 0xB68(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceIKOnDedicatedServer : 1;                     // Mask: 0x1, PropSize: 0x10xB70(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreAllImmobilizationTraps : 1;                 // Mask: 0x2, PropSize: 0x10xB70(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceTriggerIgnoredTraps : 1;                     // Mask: 0x4, PropSize: 0x10xB70(0x1)(Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsImmobilized : 1;                                // Mask: 0x8, PropSize: 0x10xB70(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanIgnoreWater : 1;                               // Mask: 0x10, PropSize: 0x10xB70(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDead : 1;                                       // Mask: 0x20, PropSize: 0x10xB70(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        ReplicateAllBones : 1;                             // Mask: 0x40, PropSize: 0x10xB70(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        AutoStopReplicationWhenSleeping : 1;               // Mask: 0x80, PropSize: 0x10xB70(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanDrag : 1;                                      // Mask: 0x1, PropSize: 0x10xB71(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanBeDragged : 1;                                 // Mask: 0x2, PropSize: 0x10xB71(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesRunningAnimation : 1;                         // Mask: 0x4, PropSize: 0x10xB71(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceNetDidLand : 1;                              // Mask: 0x8, PropSize: 0x10xB71(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventSimpleIK : 1;                              // Mask: 0x10, PropSize: 0x10xB71(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyAllowRunningWhileFlying : 1;                  // Mask: 0x20, PropSize: 0x10xB71(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOrbitCamera : 1;                                  // Mask: 0x40, PropSize: 0x10xB71(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_235 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        BitPad_236 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bDraggedFromExtremitiesOnly : 1;                   // Mask: 0x80, PropSize: 0x10xB72(0x1)(BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableIK : 1;                                     // Mask: 0x1, PropSize: 0x10xB73(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bOnlyPlayPoopAnimWhileWalking : 1;                 // Mask: 0x2, PropSize: 0x10xB73(0x1)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBlueprintAnimNotifyCustomEvent : 1;            // Mask: 0x4, PropSize: 0x10xB73(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bNoDamageImpulse : 1;                              // Mask: 0x8, PropSize: 0x10xB73(0x1)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventImmobilization : 1;                        // Mask: 0x10, PropSize: 0x10xB73(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_237 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_32F6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_238 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bSleepingUseRagdoll : 1;                           // Mask: 0x2, PropSize: 0x10xB78(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDediForceUnregisterSKMesh : 1;                    // Mask: 0x4, PropSize: 0x10xB78(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReadyToPoop : 1;                                  // Mask: 0x8, PropSize: 0x10xB78(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasDynamicBase : 1;                               // Mask: 0x10, PropSize: 0x10xB78(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_239 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        BitPad_23A : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bDieIfLeftWater : 1;                               // Mask: 0x2, PropSize: 0x10xB79(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsAmphibious : 1;                                 // Mask: 0x4, PropSize: 0x10xB79(0x1)(Edit, ConstParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseAmphibiousTargeting : 1;                       // Mask: 0x8, PropSize: 0x10xB79(0x1)(EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsWaterDino : 1;                                  // Mask: 0x10, PropSize: 0x10xB79(0x1)(Edit, ConstParm, ExportObject, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bIsFlyerDino : 1;                                  // Mask: 0x20, PropSize: 0x10xB79(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreTargetingCarnivores : 1;                    // Mask: 0x40, PropSize: 0x10xB79(0x1)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_23B : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        BitPad_23C : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsPlayingLowHealthAnim : 1;                       // Mask: 0x2, PropSize: 0x10xB7A(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowCharacterPainting : 1;                       // Mask: 0x4, PropSize: 0x10xB7A(0x1)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTickStatusComponent : 1;                          // Mask: 0x8, PropSize: 0x10xB7A(0x1)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_23D : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bDontActuallyEmitPoop : 1;                         // Mask: 0x20, PropSize: 0x10xB7A(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPHUDOverideBuffProgressBar : 1;                  // Mask: 0x40, PropSize: 0x10xB7A(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRunningWhileSwimming : 1;                    // Mask: 0x80, PropSize: 0x10xB7A(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyBumpedByPawn : 1;                      // Mask: 0x1, PropSize: 0x10xB7B(0x1)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyBumpedPawn : 1;                        // Mask: 0x2, PropSize: 0x10xB7B(0x1)(BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustDamage : 1;                            // Mask: 0x4, PropSize: 0x10xB7B(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_23E : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPTimerServer : 1;                             // Mask: 0x1, PropSize: 0x10xB7C(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPTimerNonDedicated : 1;                       // Mask: 0x2, PropSize: 0x10xB7C(0x1)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTriggerBPStasis : 1;                              // Mask: 0x4, PropSize: 0x10xB7C(0x1)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSetCharacterMeshseMaterialScalarParamValue : 1; // Mask: 0x8, PropSize: 0x10xB7C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_23F : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_32FC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BPTimerServerMin;                                  // 0xB80(0x4)(Edit, ConstParm, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        BPTimerServerMax;                                  // 0xB84(0x4)(ConstParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        BPTimerNonDedicatedMin;                            // 0xB88(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        BPTimerNonDedicatedMax;                            // 0xB8C(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	double                                       NextBPTimerServer;                                 // 0xB90(0x8)(Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	double                                       NextBPTimerNonDedicated;                           // 0xB98(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsMounted : 1;                                    // Mask: 0x1, PropSize: 0x10xBA0(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPreventTargetingByTurrets : 1;                    // Mask: 0x2, PropSize: 0x10xBA0(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDelayFootstepsUnderMinInterval : 1;               // Mask: 0x4, PropSize: 0x10xBA0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSleepingDisableIK : 1;                            // Mask: 0x8, PropSize: 0x10xBA0(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRagdollRetainAnimations : 1;                      // Mask: 0x10, PropSize: 0x10xBA0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAddedAttachments : 1;                        // Mask: 0x20, PropSize: 0x10xBA0(0x1)(Edit, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanPlayLandingAnim : 1;                           // Mask: 0x40, PropSize: 0x10xBA0(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyHasRunningAnimationWhenWalking : 1;           // Mask: 0x80, PropSize: 0x10xBA0(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_240 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bPreventTargetingAndMovement : 1;                  // Mask: 0x2, PropSize: 0x10xBA1(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventMovement : 1;                              // Mask: 0x4, PropSize: 0x10xBA1(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventWaterHopCorrectionVelChange : 1;           // Mask: 0x8, PropSize: 0x10xBA1(0x1)(ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_241 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bBPPreventInputType : 1;                           // Mask: 0x20, PropSize: 0x10xBA1(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePreventAllInput : 1;                         // Mask: 0x40, PropSize: 0x10xBA1(0x1)(Edit, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventAllBuffs : 1;                              // Mask: 0x80, PropSize: 0x10xBA1(0x1)(ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        LastIsInsideVaccumSealedCube : 1;                  // Mask: 0x1, PropSize: 0x10xBA2(0x1)(Edit, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventJump : 1;                                  // Mask: 0x2, PropSize: 0x10xBA2(0x1)(ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventStasis : 1;                           // Mask: 0x4, PropSize: 0x10xBA2(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDestroyOnStasis : 1;                              // Mask: 0x8, PropSize: 0x10xBA2(0x1)(ExportObject, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreSerializeSaveGame : 1;                    // Mask: 0x10, PropSize: 0x10xBA2(0x1)(BlueprintVisible, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPostLoadedFromSaveGame : 1;                  // Mask: 0x20, PropSize: 0x10xBA2(0x1)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseHeavyCombatMusic : 1;                          // Mask: 0x40, PropSize: 0x10xBA2(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_242 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bBPModifyAllowedViewHitDir : 1;                    // Mask: 0x1, PropSize: 0x10xBA3(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPLimitPlayerRotation : 1;                        // Mask: 0x2, PropSize: 0x10xBA3(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPManagedFPVViewLocation : 1;                     // Mask: 0x4, PropSize: 0x10xBA3(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPCameraRotationFinal : 1;                        // Mask: 0x8, PropSize: 0x10xBA3(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bServerBPNotifyInventoryItemChangesUseQuantity : 1; // Mask: 0x10, PropSize: 0x10xBA3(0x1)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bServerBPNotifyInventoryItemChanges : 1;           // Mask: 0x20, PropSize: 0x10xBA3(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_243 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3304[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastCausedDamageTime;                              // 0xBA8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                LastDamageCauser;                                  // 0xBB0(0x8)(Edit, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsAtMaxInventoryItems : 1;                        // Mask: 0x1, PropSize: 0x10xBB8(0x1)(Edit, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnStaminaDrained : 1;                        // Mask: 0x2, PropSize: 0x10xBB8(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_244 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPGrabDebugSnapshot : 1;                       // Mask: 0x8, PropSize: 0x10xBB8(0x1)(BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsAttachedOtherCharacter : 1;                     // Mask: 0x10, PropSize: 0x10xBB8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnLethalDamage : 1;                          // Mask: 0x20, PropSize: 0x10xBB8(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustTorpidityDamage : 1;                   // Mask: 0x40, PropSize: 0x10xBB8(0x1)(BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPForceCameraStyle : 1;                        // Mask: 0x80, PropSize: 0x10xBB8(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPRemovedAsPassenger : 1;                      // Mask: 0x1, PropSize: 0x10xBB9(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableFPV : 1;                                   // Mask: 0x2, PropSize: 0x10xBB9(0x1)(BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bConsumeZoomInput : 1;                             // Mask: 0x4, PropSize: 0x10xBB9(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableIkOnDeath : 1;                             // Mask: 0x8, PropSize: 0x10xBB9(0x1)(BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_245 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3306[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        ImmobilizationTrapsToIgnore;                       // 0xBC0(0x10)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3308[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class APrimalDinoCharacter>   CarryingDino;                                      // 0xBD8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DediOverrideCapsuleCollisionProfileName;           // 0xBE0(0x8)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DediOverrideMeshCollisionProfileName;              // 0xBE8(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SnaredFromSocket;                                  // 0xBF0(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DeathDestructionDepositInventoryClass;             // 0xBF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DamageNotifyTeamAggroMultiplier;                   // 0xC00(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DamageNotifyTeamAggroRange;                        // 0xC04(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DamageNotifyTeamAggroRangeFalloff;                 // 0xC08(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReplicatedCurrentHealth;                           // 0xC0C(0x4)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ReplicatedMaxHealth;                               // 0xC10(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ReplicatedCurrentTorpor;                           // 0xC14(0x4)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ReplicatedMaxTorpor;                               // 0xC18(0x4)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_330A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalProjectileGrapplingHook*        LastGrapHookPullingMe;                             // 0xC20(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_246 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bInRagdoll : 1;                                    // Mask: 0x4, PropSize: 0x10xC28(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsNPC : 1;                                        // Mask: 0x8, PropSize: 0x10xC28(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_247 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsBuffed : 1;                                     // Mask: 0x80, PropSize: 0x10xC28(0x1)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDraggingWithOffset : 1;                         // Mask: 0x1, PropSize: 0x10xC29(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDraggedWithOffset : 1;                          // Mask: 0x2, PropSize: 0x10xC29(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventRunningWhileWalking : 1;                   // Mask: 0x4, PropSize: 0x10xC29(0x1)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanLandOnWater : 1;                               // Mask: 0x8, PropSize: 0x10xC29(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustMoveForward : 1;                       // Mask: 0x10, PropSize: 0x10xC29(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustMoveRight : 1;                         // Mask: 0x20, PropSize: 0x10xC29(0x1)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetGravity : 1;                              // Mask: 0x40, PropSize: 0x10xC29(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowDamageWhenMounted : 1;                       // Mask: 0x80, PropSize: 0x10xC29(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnAttachmentReplication : 1;                 // Mask: 0x1, PropSize: 0x10xC2A(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnMovementModeChangedNotify : 1;             // Mask: 0x2, PropSize: 0x10xC2A(0x1)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnAnimPlayedNotify : 1;                      // Mask: 0x4, PropSize: 0x10xC2A(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideCharacterNewFallVelocity : 1;        // Mask: 0x8, PropSize: 0x10xC2A(0x1)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_248 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3310[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPOverrideCharacterSound : 1;                  // Mask: 0x1, PropSize: 0x10xC2C(0x1)(Edit, ConstParm, BlueprintReadOnly, DisableEditOnTemplate, EditConst, SubobjectReference)
	uint8                                        bUseBPOverrideCharacterParticle : 1;               // Mask: 0x2, PropSize: 0x10xC2C(0x1)(ConstParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	uint8                                        BitPad_249 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3311[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBP_OnSetRunningEvent : 1;                      // Mask: 0x1, PropSize: 0x10xC30(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceTurretFastTargeting : 1;                     // Mask: 0x2, PropSize: 0x10xC30(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlyingOrWaterDinoPreventBackwardsRun : 1;         // Mask: 0x4, PropSize: 0x10xC30(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideFlyingVelocity : 1;                  // Mask: 0x8, PropSize: 0x10xC30(0x1)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSleepingDisableRagdoll : 1;                       // Mask: 0x10, PropSize: 0x10xC30(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyOnStasisWhenDead : 1;                      // Mask: 0x20, PropSize: 0x10xC30(0x1)(BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventLiveBlinking : 1;                          // Mask: 0x40, PropSize: 0x10xC30(0x1)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_24A : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bForceAlwaysUpdateMeshAndCollision : 1;            // Mask: 0x1, PropSize: 0x10xC31(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_24B : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3312[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPGetHUDElements : 1;                          // Mask: 0x1, PropSize: 0x10xC34(0x1)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventHurtAnim : 1;                              // Mask: 0x2, PropSize: 0x10xC34(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_24C : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3313[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterCharacter*                     LastGrapHookPullingOwner;                          // 0xC38(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanBeBaseForCharacter : 1;                   // Mask: 0x1, PropSize: 0x10xC40(0x1)(Edit, ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanBaseOnCharacter : 1;                      // Mask: 0x2, PropSize: 0x10xC40(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnLanded : 1;                                // Mask: 0x4, PropSize: 0x10xC40(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableMoveCollapsing : 1;                         // Mask: 0x8, PropSize: 0x10xC40(0x1)(ConstParm, Net, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_ForceAllowBuffClasses : 1;                  // Mask: 0x10, PropSize: 0x10xC40(0x1)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_24D : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3314[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               DragOffset;                                        // 0xC48(0x18)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCheckJumpInput : 1;                          // Mask: 0x1, PropSize: 0x10xC60(0x1)(ConstParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideHurtAnim : 1;                        // Mask: 0x2, PropSize: 0x10xC60(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideDamageCauserHitMarker : 1;           // Mask: 0x4, PropSize: 0x10xC60(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsSkinned : 1;                                    // Mask: 0x8, PropSize: 0x10xC60(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustImpulseFromDamage : 1;                 // Mask: 0x10, PropSize: 0x10xC60(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustCharacterMovementImpulse : 1;          // Mask: 0x20, PropSize: 0x10xC60(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPModifyFOVInterpSpeed : 1;                    // Mask: 0x40, PropSize: 0x10xC60(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bVerifyBasingForSaddleStructures : 1;              // Mask: 0x80, PropSize: 0x10xC60(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OverrideTerminalVelocity : 1;               // Mask: 0x1, PropSize: 0x10xC61(0x1)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_ShouldForceDisableTPVCameraInterpolation : 1; // Mask: 0x2, PropSize: 0x10xC61(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAllowPlayMontage : 1;                        // Mask: 0x4, PropSize: 0x10xC61(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventPerPixelPainting : 1;                      // Mask: 0x8, PropSize: 0x10xC61(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPItemSlotOverrides : 1;                       // Mask: 0x10, PropSize: 0x10xC61(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventMoveUp : 1;                                // Mask: 0x20, PropSize: 0x10xC61(0x1)(Edit, ConstParm, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowDediServerGroundConformInterpolate : 1; // Mask: 0x40, PropSize: 0x10xC61(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_24E : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3315[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class USoundBase*>                    CharacterOverrideSoundFrom;                        // 0xC68(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class USoundBase*>                    CharacterOverrideSoundTo;                          // 0xC78(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class UParticleSystem*>               CharacterOverrideParticleFrom;                     // 0xC88(0x10)(OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class UParticleSystem*>               CharacterOverrideParticleTo;                       // 0xC98(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3316[0x44];                                    // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class APhysicsPrimalRaft>     BoardedRaft;                                       // 0xCEC(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        DraggedBoneIndex;                                  // 0xCF4(0x4)(Edit, Net, EditFixedSize, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        CustomBitFlags;                                    // 0xCF8(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        RunningSpeedModifier;                              // 0xCFC(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3317[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          DeathAnim;                                         // 0xD10(0x8)(ExportObject, EditFixedSize, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UAnimationAsset*                       ReplicatedDeathAnim;                               // 0xD18(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TSoftObjectPtr<class UAnimationAsset>        SavedDeathAnim;                                    // 0xD20(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            DeathSound;                                        // 0xD50(0x8)(Edit, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            RunLoopSound;                                      // 0xD58(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            RunStopSound;                                      // 0xD60(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class USoundBase*>                    FootStepSoundsPhysMat;                             // 0xD68(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class USoundBase*>                    LandedSoundsPhysMat;                               // 0xD78(0x10)(BlueprintReadOnly, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVelocityBasedCharacterSoundInfo      VelocityBasedLandedSounds;                         // 0xD88(0x38)(ConstParm, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3318[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  MeshRootSocketName;                                // 0xDC4(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3319[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxFallSpeed;                                      // 0xDD4(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        FallDamageMultiplier;                              // 0xDD8(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_331A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAudioComponent*                       RunLoopAC;                                         // 0xDE0(0x8)(Net, EditFixedSize, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FConstraintInstance                   DraggingConstraint;                                // 0xDE8(0x278)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_331B[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ServerTargetCarriedYaw;                            // 0x1068(0x4)(ConstParm, ExportObject, EditFixedSize, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_331C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            NetDynamicMusicSound;                              // 0x1070(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalDinoCharacter>   MountedDino;                                       // 0x1078(0x8)(ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	double                                       MountedDinoTime;                                   // 0x1080(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_331D[0x40];                                    // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AActor>                 LastBasedMovementActorRef;                         // 0x10C8(0x8)(Edit, Net, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        GrabWeightThreshold;                               // 0x10D0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DragWeight;                                        // 0x10D4(0x4)(BlueprintReadOnly, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_331E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DescriptiveName;                                   // 0x10E0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FVector_NetQuantize>           ReplicatedRagdollPositions;                        // 0x10F0(0x10)(ConstParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FRotator_NetQuantize>          ReplicatedRagdollRotations;                        // 0x1100(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_331F[0x88];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        KillXPBase;                                        // 0x1198(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3320[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        RagdollReplicationInterval;                        // 0x11B0(0x4)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3322[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FBoneDamageAdjuster>           BoneDamageAdjusters;                               // 0x11C0(0x10)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ClientRotationInterpSpeed;                         // 0x11D0(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ClientLocationInterpSpeed;                         // 0x11D4(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDragMovementSpeed;                              // 0x11D8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3323[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              CurrentAimRot;                                     // 0x11E0(0x18)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CurrentRootLoc;                                    // 0x11F8(0x18)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3324[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class UPrimalCharacterStatusComponent*       MyCharacterStatusComponent;                        // 0x1228(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	uint8                                        Pad_3325[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalInventoryComponent*             MyInventoryComponent;                              // 0x1238(0x8)(ExportObject, ReturnParm, Transient, DisableEditOnInstance)
	class UAnimMontage*                          SyncedMontage;                                     // 0x1240(0x8)(Edit, Net, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3326[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MontageSyncInterval;                               // 0x1254(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	double                                       LastRunningTime;                                   // 0x1258(0x8)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               TPVCameraOffset;                                   // 0x1260(0x18)(BlueprintVisible, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               TPVCameraOffsetMultiplier;                         // 0x1278(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TPVCameraHorizontalOffsetFactorMax;                // 0x1290(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TPVCameraHorizontalOffsetFactorMaxClamp;           // 0x1294(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               TPVCameraOrgOffset;                                // 0x1298(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LandedSoundMaxRange;                               // 0x12B0(0x4)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        FallingDamageHealthScaleBase;                      // 0x12B4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        FootstepsMaxRange;                                 // 0x12B8(0x4)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        MinTimeBetweenFootsteps;                           // 0x12BC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3328[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinTimeBetweenFootstepsRunning;                    // 0x12C8(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3329[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftObjectPtr<class UAnimMontage>>   AnimationsPreventInput;                            // 0x12D0(0x10)(Edit, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DeathHarvestingComponent;                          // 0x12E0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class UPrimalHarvestingComponent*            MyDeathHarvestingComponent;                        // 0x12E8(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_332A[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AController>            LastDamageEventInstigator;                         // 0x1320(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_332B[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	enum class EVisibilityBasedAnimTickOption    PreDragComponentUpdateFlag;                        // 0x1348(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class EShooterPhysMaterialType          TargetableDamageFXDefaultPhysMaterial;             // 0x1349(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_332C[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          PoopAnimation;                                     // 0x1350(0x8)(ConstParm, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_332E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       CorpseDestructionTime;                             // 0x1360(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsHost;                                           // 0x1368(0x1)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_332F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CorpseLifespan;                                    // 0x136C(0x4)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TPVStructurePlacingHeightMultiplier;               // 0x1370(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        CorpseFadeAwayTime;                                // 0x1374(0x4)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        RagdollDeathImpulseScaler;                         // 0x1378(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3330[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            PoopSound;                                         // 0x1380(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseTargetingDesirability;                         // 0x1388(0x4)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DeadBaseTargetingDesirability;                     // 0x138C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              OrbitCamRot;                                       // 0x1390(0x18)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        OrbitCamZoom;                                      // 0x13A8(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        OrbitCamZoomStepSize;                              // 0x13AC(0x4)(Edit, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        OrbitCamMinZoomLevel;                              // 0x13B0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        OrbitCamMaxZoomLevel;                              // 0x13B4(0x4)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3333[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       LastTimeNotInFalling;                              // 0x13E0(0x8)(Net, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxCursorHUDDistance;                              // 0x13E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        AddForwardVelocityOnJump;                          // 0x13EC(0x4)(ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               DeathActorTargetingOffset;                         // 0x13F0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SocketOverrideTargetingLocation;                   // 0x1408(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3334[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       LastTimeSubmerged;                                 // 0x1440(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3335[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        FootPhysicalSurfaceCheckInterval;                  // 0x1458(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3336[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class APrimalCharacter>       LastAttackedNearbyPlayer;                          // 0x1470(0x8)(Edit, EditFixedSize, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	double                                       LastAttackedNearbyPlayerTime;                      // 0x1478(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3337[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        RagdollImpactDamageVelocityScale;                  // 0x14A0(0x4)(Edit, Net, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        RagdollImpactDamageMinDecelerationSpeed;           // 0x14A4(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        StartFallingImpactRagdollTimeInterval;             // 0x14A8(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3338[0x2C];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       LastTimeUpdatedCharacterStatusComponent;           // 0x14D8(0x8)(Edit, ConstParm, Net, EditFixedSize, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	double                                       LastTimeUpdatedCorpseDestructionTime;              // 0x14E0(0x8)(BlueprintReadOnly, EditFixedSize, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_333A[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            EnteredSwimmingSound;                              // 0x1500(0x8)(Edit, BlueprintVisible, EditFixedSize, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVelocityBasedCharacterSoundInfo      VelocityBasedEnteredSwimmingSounds;                // 0x1508(0x38)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            EnteredSleepingSound;                              // 0x1540(0x8)(ExportObject, Net, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            LeftSleepingSound;                                 // 0x1548(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_333B[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       LastWalkingTime;                                   // 0x1560(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_333C[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        CorpseDraggedDecayRate;                            // 0x1588(0x4)(Edit, ExportObject, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        PoopAltItemChance;                                 // 0x158C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PoopAltItemClass;                                  // 0x1590(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalBuff>>     DefaultBuffs;                                      // 0x1598(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PoopIcon;                                          // 0x15A8(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        RunningMaxDesiredRotDelta;                         // 0x15B0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        CorpseDestructionTimer;                            // 0x15B4(0x4)(BlueprintReadOnly, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	double                                       LastSkinnedTime;                                   // 0x15B8(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_333D[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnDied;                                            // 0x15C8(0x10)(Edit, ConstParm, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnNotifyDamage;                                    // 0x15D8(0x10)(BlueprintVisible, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnSleepStateChanged;                               // 0x15E8(0x10)(ExportObject, BlueprintReadOnly, Net, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            NotifyLevelUp;                                     // 0x15F8(0x10)(BlueprintReadOnly, Net, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            NotifyUnstasis;                                    // 0x1608(0x10)(ExportObject, Net, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            NotifyStasis;                                      // 0x1618(0x10)(Edit, Net, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_333E[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       LastTimeInSwimming;                                // 0x1648(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_333F[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDefaultTextureParamOverride>  DefaultNoItemTextureParamOverrides;                // 0x1658(0x10)(Edit, BlueprintVisible, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3340[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        BuffedDamageMult;                                  // 0x1678(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        BuffedResistanceMult;                              // 0x167C(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Transient, EditConst, InstancedReference, SubobjectReference)
	class UStructurePaintingComponent*           PaintingComponent;                                 // 0x1680(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance)
	float                                        ExtraMaxSpeedModifier;                             // 0x1688(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraRotationRateModifier;                         // 0x168C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedDinoCallOutRange;                             // 0x1690(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3341[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               TargetPathfindingLocationOffset;                   // 0x16A0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Transient, EditConst, InstancedReference, SubobjectReference)
	double                                       LastTookDamageTime;                                // 0x16B8(0x8)(BlueprintReadOnly, Net, Transient, EditConst, InstancedReference, SubobjectReference)
	double                                       LastTookDamageTimeDifferentTeam;                   // 0x16C0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraReceiveDamageMultiplier;                      // 0x16C8(0x4)(BlueprintReadOnly, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraMeleeDamageMultiplier;                        // 0x16CC(0x4)(ConstParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3342[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        DamageTheMeleeDamageCauserPercent;                 // 0x16E8(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DurabilityDegrateTheMeleeDamageCauserPercent;      // 0x16EC(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DamageTheMeleeDamageCauserDamageType;              // 0x16F0(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        TribeGroupInventoryRank;                           // 0x16F8(0x1)(Edit, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3344[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CharacterDamageImpulseMultiplier;                  // 0x16FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3345[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bCanBePushed : 1;                                  // Mask: 0x1, PropSize: 0x10x1708(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanPushOthers : 1;                                // Mask: 0x2, PropSize: 0x10x1708(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsBigPusher : 1;                                  // Mask: 0x4, PropSize: 0x10x1708(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanEverCrouch : 1;                                // Mask: 0x8, PropSize: 0x10x1708(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        BitPad_24F : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3346[0x1F];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        MaxRagdollDeathVelocityImpulse;                    // 0x1728(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ClientRotationInterpSpeedMultiplierGround;         // 0x172C(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	double                                       LastIkUpdateTime;                                  // 0x1730(0x8)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        GlideGravityScaleMultiplier;                       // 0x1738(0x4)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        GlideMaxCarriedWeight;                             // 0x173C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3347[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  DefaultCameraStyle;                                // 0x1748(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ScaleDeathHarvestHealthyByMaxHealthBase;           // 0x1750(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3348[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            NotifyInputEvent;                                  // 0x1758(0x10)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3349[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        RunMinVelocityRotDot;                              // 0x1778(0x4)(ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_334A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastHitDamageTime;                                 // 0x1780(0x8)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShouldBeInGodMode;                                // 0x1788(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_334B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TWeakObjectPtr<class APrimalCharacter>> SavedBasedCharacters;                              // 0x1790(0x10)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_334C[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        MeshingTickCounterMultiplier;                      // 0x17F0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_334D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class APrimalBuff>>     PreventBuffClasses;                                // 0x17F8(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          PreventBuffClassesWithTag;                         // 0x1808(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreLowGravityDisorientation : 1;               // Mask: 0x1, PropSize: 0x10x1818(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnMassTeleportEvent : 1;                     // Mask: 0x2, PropSize: 0x10x1818(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBlueprintAnimNotifyCustomState : 1;            // Mask: 0x4, PropSize: 0x10x1818(0x1)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventIKWhenNotWalking : 1;                      // Mask: 0x8, PropSize: 0x10x1818(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreCorpseDecompositionMultipliers : 1;         // Mask: 0x10, PropSize: 0x10x1818(0x1)(ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInterpHealthDamageMaterialOverlayAlpha : 1;       // Mask: 0x20, PropSize: 0x10x1818(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSuppressPlayerKillNotification : 1;               // Mask: 0x40, PropSize: 0x10x1818(0x1)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowCorpseDestructionWithPreventSaving : 1;      // Mask: 0x80, PropSize: 0x10x1818(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventInventoryAccess : 1;                       // Mask: 0x1, PropSize: 0x10x1819(0x1)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseGetOverrideSocket : 1;                         // Mask: 0x2, PropSize: 0x10x1819(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowBPNewDoorInteractionDrawHUD : 1;             // Mask: 0x4, PropSize: 0x10x1819(0x1)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bJumpOnRelease : 1;                                // Mask: 0x8, PropSize: 0x10x1819(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowMultiUseByRemoteDino : 1;                    // Mask: 0x10, PropSize: 0x10x1819(0x1)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideJumpZModifier : 1;                   // Mask: 0x20, PropSize: 0x10x1819(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseZeroGravityWander : 1;                         // Mask: 0x40, PropSize: 0x10x1819(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventNotifySound : 1;                      // Mask: 0x80, PropSize: 0x10x1819(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_ModifyInputAcceleration : 1;                // Mask: 0x1, PropSize: 0x10x181A(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_ModifySavedMoveAcceleration_PreRep : 1;     // Mask: 0x2, PropSize: 0x10x181A(0x1)(EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_ModifySavedMoveAcceleration_PostRep : 1;    // Mask: 0x4, PropSize: 0x10x181A(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceSimpleTeleportFade : 1;                      // Mask: 0x8, PropSize: 0x10x181A(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetArmorDurabilityDecreaseMultiplier : 1;    // Mask: 0x10, PropSize: 0x10x181A(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPShieldBlock : 1;                             // Mask: 0x20, PropSize: 0x10x181A(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideFromScans : 1;                                // Mask: 0x40, PropSize: 0x10x181A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideWalkingVelocity : 1;                      // Mask: 0x80, PropSize: 0x10x181A(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bOverrideSwimmingVelocity : 1;                     // Mask: 0x1, PropSize: 0x10x181B(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bOverrideSwimmingAcceleration : 1;                 // Mask: 0x2, PropSize: 0x10x181B(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bOverrideNewFallVelocity : 1;                      // Mask: 0x4, PropSize: 0x10x181B(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bOverrideFlyingVelocity : 1;                       // Mask: 0x8, PropSize: 0x10x181B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bUsesRootMotion : 1;                               // Mask: 0x10, PropSize: 0x10x181B(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableAnimationGroundConforming : 1;              // Mask: 0x20, PropSize: 0x10x181B(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWasBeingDragged : 1;                              // Mask: 0x40, PropSize: 0x10x181B(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_250 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_334F[0x1C];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        ControlledInventoryAccessDistanceOffset;           // 0x1838(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3350[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnOrbitCameraViewChange;                           // 0x1840(0x10)(BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        AdditionalMaxUseDistance;                          // 0x1850(0x4)(Edit, ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AActor>                 TetherActor;                                       // 0x1854(0x8)(Edit, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        TetherRadius;                                      // 0x185C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherHeight;                                      // 0x1860(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3351[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPOverridePhysicsImpulses : 1;                 // Mask: 0x1, PropSize: 0x10x1865(0x1)(Edit, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_251 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3352[0x4A];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bAllowASACamera : 1;                               // Mask: 0x1, PropSize: 0x10x18B0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_252 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3353[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ASACameraConfigClass;                              // 0x18B8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UPrimalCameraConfig*                   CurrentPrimalCameraConfig;                         // 0x18C0(0x8)(Edit, ConstParm, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CameraProfileIdOverride;                           // 0x18C8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	double                                       LastStartedSleepingTime;                           // 0x18D0(0x8)(Edit, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	double                                       ForcePreventCharZInterpUntilTime;                  // 0x18D8(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TMap<class FName, class UAnimationAsset*>    DeathAnimations;                                   // 0x18E0(0x50)(BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDediServerAutoUnregisterSkeletalMeshWhenNotRelevant : 1; // Mask: 0x1, PropSize: 0x10x1930(0x1)(Edit, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventUnconsciousMeshBasing : 1;                 // Mask: 0x2, PropSize: 0x10x1930(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseOnCharacterSteppedNotify : 1;                  // Mask: 0x4, PropSize: 0x10x1930(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_253 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsDoingDraggedInterp : 1;                         // Mask: 0x1, PropSize: 0x10x1931(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCorrectMeshRelativeZOffsetWhileDragged : 1;       // Mask: 0x2, PropSize: 0x10x1931(0x1)(Edit, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReturnToCapsuleCenterWhenDroppedInWater : 1;      // Mask: 0x4, PropSize: 0x10x1931(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_254 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3356[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TSet<class UParticleSystemComponent*>        ParticleSystemsToActivateAfterDragged;             // 0x1938(0x50)(Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TSet<class UNiagaraComponent*>               NiagaraSystemsToActivateAfterDragged;              // 0x1988(0x50)(Edit, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DraggingInterpSpeed;                               // 0x19D8(0x4)(ConstParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DraggingInterpDuration;                            // 0x19DC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class EMovementMode                     DraggedMovementMode;                               // 0x19E0(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3357[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                CharacterSavedDynamicBase;                         // 0x19E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CharacterSavedDynamicBaseBoneName;                 // 0x19F0(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CharacterSavedDynamicBaseRelativeLocation;         // 0x19F8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FQuat                                 CharacterSavedDynamicBaseRelativeRotation;         // 0x1A10(0x20)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3358[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        DragSocketVerticalOffsetAsCapsulePercent;          // 0x1A48(0x4)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class ETickingGroup                     BeingDraggedMovementComponentTickGroup;            // 0x1A4C(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class ETickingGroup                     DraggingMovementComponentTickGroup;                // 0x1A4D(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3359[0x26];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        CharacterLocalControlZInterpSpeed;                 // 0x1A74(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DeathCapsuleRadiusMultiplier;                      // 0x1A78(0x4)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DeathCapsuleHalfHeightMultiplier;                  // 0x1A7C(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DeathMeshRelativeZOffsetAsCapsulePercent;          // 0x1A80(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        EnvironmentInteractionPlasticityMult;              // 0x1A84(0x4)(ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        EnvironmentInteractionPlasticityExponent;          // 0x1A88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideBlendSpaceSmoothType : 1;                 // Mask: 0x1, PropSize: 0x10x1A8C(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_255 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bNetworkClientsUpdateBasedMovementOnTick : 1;      // Mask: 0x4, PropSize: 0x10x1A8C(0x1)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseArmorDurabilityVFX : 1;                        // Mask: 0x8, PropSize: 0x10x1A8C(0x1)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventStaggeredMovement : 1;                     // Mask: 0x10, PropSize: 0x10x1A8C(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPForceUseOldASECamera : 1;                       // Mask: 0x20, PropSize: 0x10x1A8C(0x1)(Edit, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesWaterFinLocking : 1;                          // Mask: 0x40, PropSize: 0x10x1A8C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreWeightWhenUsingExtraMaxSpeedModifier : 1;   // Mask: 0x80, PropSize: 0x10x1A8C(0x1)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_335A[0xB];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraSystem*                        DamageImpactFXForAttacker;                         // 0x1A98(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DamageImpactFXSizeOverride;                        // 0x1AA0(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NonLocationalDamageHurtFXSocket;                   // 0x1AA4(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_335B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               NonLocationalDamageHurtFXScaleOverride;            // 0x1AB0(0x18)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	double                                       PossessedAtTime;                                   // 0x1AC8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DragBodyIcon;                                      // 0x1AD0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ReleaseBodyIcon;                                   // 0x1AD8(0x8)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            MoveCloserIcon;                                    // 0x1AE0(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ColorizeIcon;                                      // 0x1AE8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            TrackingInfoIcon;                                  // 0x1AF0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ToggleTrackingIcon;                                // 0x1AF8(0x8)(ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TogglePOIIcon;                                     // 0x1B00(0x8)(ConstParm, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        EquippedArmorDurabilityPercent1;                   // 0x1B08(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        EquippedArmorDurabilityPercent2;                   // 0x1B0C(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ArmorDurabilityPercentUpdateInterval;              // 0x1B10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_335C[0xC];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalCharacter* GetDefaultObj();

	void ZoomOut();
	void ZoomIn();
	bool UseCenteredTPVCamera();
	void UpdateTickSetting();
	void UpdateSwimmingState();
	bool UpdateHasBuffPreSerialize();
	struct FItemNetID UpdateEquippedItemDurabilityVariable(float* ItemDurabilityPercentage);
	struct FItemNetID UpdateEquippedItemDurabilityMaterials(float* ItemDurabilityPercentage);
	void UpdateAllEquippedItemsDurabilityVariables();
	void UpdateAllEquippedItemsDurabilityMaterials();
	bool UnProne();
	float TurnInput();
	float TurnAtRate();
	void TryPoop();
	void TryGiveDefaultWeaponReleased();
	void TryGiveDefaultWeapon();
	float TickMovementComponent();
	void TempDampenInputAcceleration();
	float TakeDamage(struct FDamageEvent* DamageEvent, class AController** EventInstigator, class AActor* DamageCauser);
	void StopJumpAnim();
	float StopAnimEx(bool bReplicate, bool bReplicateToOwner);
	class UPrimalItem* StaticRemoveCharacterSnapshot(class AActor* From);
	int32 StaticGetSnapshotPoseCount();
	struct FPrimalSnapshotPose StaticGetSnapshotPose(int32 PoseIndex);
	class AActor* StaticApplyCharacterSnapshotEquipment(class UPrimalInventoryComponent** Inventory);
	int32 StaticApplyCharacterSnapshot(float* MaxExtent, bool* bCollisionOn);
	void StartForceSkelUpdate(float* ForTime, bool* bForceUpdateMesh, bool* bServerOnly);
	void SleepBodies();
	bool ShouldUseSlowInterpToOldCamera();
	bool ShouldUseLongFallCameraPivotZValues();
	bool ShouldUseDurabilityVarForItemType(enum class EPrimalEquipmentType* TheItemType);
	bool ShouldUseDurabilityVar(int32* VarIndex);
	bool ShouldUseAutonomousCorrectionOffset();
	bool ShouldUseASACamera(bool* bCheckShouldSwitchToOld);
	bool ShouldUseArmorDurabilityVFX();
	bool ShouldDisableCameraInterpolation();
	bool ShouldDealDamageTo(bool* bAllowDamageToSelf, bool* bAllowDamageToTribe, bool* bAllowDamageToAlliedTribes);
	bool ShouldASACameraSwitchToOld(bool* bDontCheckForTargeting);
	void SetSleeping(bool* bSleeping, bool* bUseRagdollLocationOffset, bool* bPreserveSavedAnim);
	void SetMyInventoryComponent(class UPrimalInventoryComponent** TheInventoryComponent);
	void SetMovementTether(class AActor** InTetherActor, float Radius, float* Height);
	void SetLastCausedDamageTime(double* LastCausedDamageTimeValue);
	struct FItemNetID SetEquippedItemDurabilityPercent(float* ItemDurabilityPercentage);
	void SetEnableIK(bool* bEnable);
	void SetDefaultCameraStyleForController(class APlayerController** APC);
	void SetCharacterMeshesMaterialScalarParamValue(class FName ParamName, float* Value);
	void SetCameraProfile(class FName* NewProfileId);
	void SetBoundsScale(float NewScale);
	void SetBoardedRaft(class APhysicsPrimalRaft** InBoardedRaft);
	void ServerTryPoop();
	void ServerSetRunning(bool* bNewRunning);
	class APrimalCharacter* ServerRequestDragTarget();
	void ServerRequestDrag();
	void ServerGiveDefaultWeapon();
	class AActor* ServerDinoOrder(class APrimalDinoCharacter** ADino, enum class EDinoTamedOrder* OrderType);
	class APrimalCharacter* ServerCaptureDermis();
	void ServerCallStayOne(class APrimalDinoCharacter** ForDinoChar);
	void ServerCallStay();
	void ServerCallSetAggressive();
	void ServerCallPassiveFlee();
	void ServerCallPassive();
	void ServerCallNeutral();
	struct FVector ServerCallMoveTo();
	void ServerCallLandFlyerOne(class APrimalDinoCharacter** ForDinoChar);
	void ServerCallFollowOne(class APrimalDinoCharacter** ForDinoChar);
	void ServerCallFollowDistanceCycleOne(class APrimalDinoCharacter** ForDinoChar);
	void ServerCallFollow();
	void ServerCallAttackTargetNew();
	void ServerCallAttackTarget(class AActor** TheTarget);
	void ServerCallAggressive();
	void RequestPoop();
	void RemoveAllJumpDeactivatedBuffs(class APrimalBuff** IgnoredBuff);
	bool Prone();
	bool PreventsTargeting(class AActor* ByActor);
	bool PreventInputType(enum class EPrimalCharacterInputType* InputType);
	bool PreventInputDoesOffset();
	bool Poop(bool bForcePoop);
	void PlayHurtAnim(float DamageTaken, struct FDamageEvent* DamageEvent, class APawn* PawnInstigator, class AActor* DamageCauser, bool bIsLocalPath);
	void PlayHitEffectRadial(float DamageTaken, struct FRadialDamageEvent* DamageEvent, class APawn* PawnInstigator, class AActor* DamageCauser);
	void PlayHitEffectPoint(float DamageTaken, struct FPointDamageEvent* DamageEvent, class APawn* PawnInstigator, class AActor* DamageCauser);
	void PlayHitEffectGeneric(float DamageTaken, struct FDamageEvent* DamageEvent, class APawn* PawnInstigator, class AActor* DamageCauser);
	class FString PlayerCommand(const class FString& TheCommand);
	void PlayDyingRadial(float KillingDamage, struct FRadialDamageEvent* DamageEvent, class APawn* InstigatingPawn, class AActor* DamageCauser);
	void PlayDyingPoint(float KillingDamage, struct FPointDamageEvent* DamageEvent, class APawn* InstigatingPawn, class AActor* DamageCauser);
	void PlayDyingGeneric(float KillingDamage, struct FDamageEvent* DamageEvent, class APawn* InstigatingPawn, class AActor* DamageCauser);
	float PlayAnimEx(float* InPlayRate, bool bReplicate, bool bReplicateToOwner, bool bForceKeepSynced);
	void OverrideCameraTargetOriginLocation(struct FVector* OutOverrideOrigin, class FName* WithCameraStyle);
	void OverrideCameraInterpSpeed(float DefaultTPVCameraSpeedInterpMultiplier, float DefaultTPVOffsetInterpSpeed, float TPVCameraSpeedInterpMultiplier, float* TPVOffsetInterpSpeed);
	void OrbitCamToggle();
	void OrbitCamOn();
	void OrbitCamOff();
	void OnStopRunning();
	void OnStopJump();
	void OnStopFire();
	void OnStopAltFire();
	void OnStartRunning();
	void OnStartJump();
	void OnStartFire();
	void OnStartAltFire();
	void OnRunToggleReleased();
	void OnRunTogglePressed();
	void OnRunToggle();
	void OnRep_RagdollPositions();
	void OnRep_PaintingComponent();
	void OnRep_MountedDino();
	void OnRep_IsSleeping();
	void OnRep_IsProne();
	void OnRep_IsDead();
	void OnRep_EquippedItemDurability();
	void OnRep_DraggedCharacter();
	void OnMassTeleportEvent(enum class EMassTeleportState EventState, class APrimalCharacter* TeleportInitiatedByChar);
	void OnEndDrag();
	void OnDetachedFromCharacter(class APrimalCharacter* ACharacter, int32 OverrideDirection);
	struct FVector OnCharacterStepped(const struct FVector& NewLocation);
	int32 OnBeginDrag(bool bWithGrapHook);
	void OnAttachedToCharacter();
	void OnAltFireReleased();
	void OnAltFirePressed();
	void NetUpdateTribeName(const class FString& NewTribeName);
	void NetStopAllAnimMontage();
	class UAnimationAsset* NetSetReplicatedDeathAnim();
	enum class EMovementMode NetSetMovementModeSimulatedInternal();
	enum class EMovementMode NetSetCharacterMovementVelocity(bool bSetNewVelocity, const struct FVector& NewVelocity, bool bSetNewMovementMode);
	bool NetPlaySoundOnCharacter();
	void NetPlayDeathAnimIfNeeded(bool bOnlyPlayOnClient);
	void NetOnJumped();
	float NetForceUpdateAimedCharacters();
	void NetForceSleepRagdoll();
	void NetDidLand();
	enum class EMovementMode NetAddCharacterMovementImpulse(struct FVector* Impulse, float ImpulseExponent, bool bSetNewMovementMode, bool* bOverrideMaxImpulseZ);
	bool NativeSimulateHair(const TArray<struct FVector>& CurrentPos, const TArray<struct FVector>& LastPos, const TArray<struct FVector>& RestPos, const TArray<struct FVector>& PivotPos, const TArray<float>& RestDistance, const struct FVector& HairSocketLoc, const struct FRotator& HairSocketRot, const struct FVector& ChestSocketLoc, const struct FRotator& ChestSocketRot, float DampingFrontModifier, float DampingBack, float InWater, float HairWetness, float DragForce, float HairScale, float SpringForce, float SpringForceFrontModifier, float SpringForceBack, float GravityForce, const struct FVector& ShoulderLCollisionOffset);
	struct FHitResult NativeOnLanded();
	float MoveUp();
	float MoveRight();
	float MoveForward();
	float ModifyStasisComponentRadius();
	float LookUpAtRate();
	void LocalUnpossessed();
	class UClass* LoadPrimalCameraConfig();
	bool LivesInWater();
	int32 LevelUpPlayerAddedStat(class AShooterPlayerController** ForPlayer);
	bool IsWithinTether();
	bool IsWildSlow();
	bool IsWatered();
	bool IsValidForCombatMusic();
	bool IsTargetWithinTether();
	bool IsSwimmingOnWaterSurface();
	bool IsSubmerged();
	bool IsSitting();
	bool IsRunning();
	bool IsRider();
	bool IsRagdolled();
	bool IsProneOrSitting();
	bool IsPrimalCharWalking();
	bool IsPrimalCharSwimming();
	bool IsPrimalCharFriendly();
	bool IsPrimalCharFlying();
	bool IsPrimalCharFalling();
	bool IsOwningClient();
	bool IsOnSeatingStructure();
	bool IsMoving();
	bool IsMovementTethered();
	bool IsMontagePlaying(float* TimeFromEndToConsiderFinished);
	bool IsMeshGameplayRelevant();
	bool IsInvincible();
	bool IsInVacuumSealedSpace();
	bool IsInStatusState();
	bool IsHostileTo();
	bool IsHostileOrAggressiveTo();
	bool IsGameInputAllowed();
	bool IsFirstPerson();
	bool IsDeadOrDying();
	bool IsDamageOccludedByStructures(class AActor* DamageCauser);
	bool IsCharacterHardAttached(bool* bIgnoreRiding, bool bIgnoreCarried);
	bool IsBossDino();
	bool IsBlockedByShield(const struct FHitResult& HitInfo, const struct FVector& ShotDirection, bool bBlockAllPointDamage);
	bool IsBeingDestroyed();
	bool IsBaseUnresolved();
	bool IsBaby();
	bool IsAttachedToSomething();
	bool IsASACameraEnabled();
	bool IsAlliedWithOtherTeam();
	bool IsAlive();
	bool Immobilize();
	int32 HurtMe();
	bool HasValidASACameraConfig();
	bool HasDynamicBase();
	bool HasCryoSickness();
	bool HasBuffWithCustomTags();
	bool HasBuffWithCustomTagConst();
	bool HasBuffWithCustomTag();
	bool HasBuff(class UClass* BuffClass);
	bool HasAnyBuffWithDisabledWeaponTag();
	bool GiveKillExperience();
	struct FVector GetVisualVelocity();
	int32 GetVelocityBasedSoundIndex();
	TArray<class APrimalCharacter*> GetTrueBasedPrimalCharacters();
	float GetTransitionToTargetingCameraInterpSpeed();
	float GetTransitionToCameraStateInterpTime();
	struct FVector GetTPVWeaponCameraOffset();
	float GetTPVHorizontalCameraOffsetFromSlider();
	float GetTPVHorizontalCameraOffset();
	struct FVector GetTPVCameraOffsetMultiplier();
	struct FVector GetTPVCameraOffset();
	TArray<struct FTooltipTextInfo> GetTooltipCharacterInfoBP(class AShooterPlayerController** PlayerOwner);
	TArray<struct FTooltipTextInfo> GetTooltipCharacterInfo(class AShooterPlayerController** PlayerOwner);
	class AActor* GetTetherObject();
	struct FVector GetTetheredVelocity(float* DeltaSeconds);
	struct FVector GetTetheredDestination();
	struct FVector GetSocketLocation(class FName* SocketName);
	class UActorComponent* GetSnapshotComponent(class AActor* From);
	class FString GetShortName();
	float GetRunningSpeedModifier();
	enum class ENetRole GetRole();
	class UPrimalCharacterMovement* GetPrimalMovement();
	enum class EMovementMode GetPrimalCharMovementMode();
	bool GetPrimalCameraSettings();
	bool GetPrimalCameraParamsFromSettings();
	class FName GetPrimalCameraParams();
	struct FRotator GetPrimalCameraDesiredPivotRotation();
	struct FVector GetPrimalCameraDesiredPivotOffset();
	struct FVector GetPrimalCameraDesiredPivotLocation();
	float GetPrimalCameraDesiredArmLength(float CurrentCameraArmLength);
	enum class EPhysicalSurface GetPhysMatTypeFromHits();
	enum class EPhysicalSurface GetPhysMatTypeFromHit();
	class UPaintingTexture* GetPaintingTexture();
	class UMeshComponent* GetPaintingMesh();
	class FName GetOverrideSocket(class FName From);
	class UAnimMontage* GetOverridenMontage();
	class UAnimSequence* GetOverridenAnimSequence(class UAnimSequence* AnimSeq);
	class ABiomeZoneVolume* GetMyBiomeZoneVolume();
	float GetMoveAnimRate();
	float GetMaxHealth();
	int32 GetLocalPlayerIndex();
	double GetLastRenderTimeWithShadow();
	double GetLastRenderTimeNoShadow();
	double GetLastCausedDamageTime();
	float GetKillXP();
	struct FRotator GetInterpolatedRotation_NonFlattened();
	struct FVector GetInputDirectionVector();
	float GetImmersionDepth();
	class UParticleSystem* GetHurtFX();
	float GetHealthPercentage();
	float GetHealth();
	class UClass* GetGrappledBuffClassOverride();
	struct FLinearColor GetFXBloodColor();
	struct FVector GetFPVShadowMeshOffset();
	enum class EPhysicalSurface GetFootPhysicalSurfaceType();
	struct FVector GetFloatingHUDLocation();
	float GetFallAcceleration();
	float GetEquippedItemDurabilityPercent();
	float GetDragWeight();
	struct FRotator GetDraggedRotation();
	struct FRotator GetDraggedRelativeRotation();
	struct FVector GetDraggedRelativeLocation();
	struct FVector GetDraggedLocation();
	TArray<class FString> GetDetailedDescription();
	class FString GetDescriptiveName();
	float GetDefaultMovementSpeed();
	class FString GetDebugInfoString();
	class UAnimationAsset* GetDeathAnim(float KillingDamage, struct FVector* ImpactVelocity, class APawn* InstigatingPawn, class AActor* DamageCauser);
	class UClass* GetCustomTooltip();
	bool GetCurrentPrimalCameraSettings();
	class FName GetCurrentCameraProfileId();
	bool GetCurrentCameraProfile(struct FPrimalCameraProfile* OutCameraProfile);
	int32 GetCurrentCameraModeIndex();
	float GetCharacterViewLocationAndDirection();
	class UPrimalCharacterStatusComponent* GetCharacterStatusComponent();
	TArray<class APrimalCharacter*> GetCharactersGrappledToMe();
	struct FVector GetCapsuleTopLocation();
	struct FVector GetCapsuleBottomLocation();
	bool GetCameraProfileForId(struct FPrimalCameraProfile* OutCameraProfile);
	class APrimalBuff* GetBuffWithCustomTag();
	int32 GetBuffStackCount(class UClass* BuffClass);
	TArray<class APrimalBuff*> GetBuffs();
	class APrimalBuff* GetBuff(class UClass* BuffClass);
	float GetBaseStatusValue(enum class EPrimalCharacterStatusValue* StatusValueType);
	float GetBaseDragWeight();
	class APrimalDinoCharacter* GetBasedOrSeatingOnDino();
	class AActor* GetBasedOnDinoAsActor();
	class APrimalDinoCharacter* GetBasedOnDino();
	class UPrimitiveComponent* GetBasedMovementComponent();
	class APrimalStructureExplosive* GetAttachedExplosive();
	TArray<class APrimalBuff*> GetAllBuffs();
	bool GetAllAttachedChars();
	struct FRotator GetAimOffsets();
	bool GetAimedActor(enum class ECollisionChannel* CollisionChannel);
	void GenerateDeathAnim(float KillingDamage, struct FVector* ImpactVelocity, class APawn* InstigatingPawn, class AActor* DamageCauser);
	class APrimalCharacter* ForceUpdateCharacter();
	bool ForceUpdateAimedCharacters();
	void ForceTickPoseDelta();
	void ForceRefreshBones();
	float ForceMeshRelevant();
	bool ForceAddUnderwaterCharacterStatusValues();
	void FadeOutLoadingMusic();
	void ExecSetSleeping(bool* bEnable);
	void ExecSetPawnSleeping(bool* bEnable);
	void EndForceSkelUpdate();
	void EndDragCharacter();
	bool EnableTurnToFaceRotation();
	bool EnableIK(bool* bEnable);
	void EnableBPTimerServer(bool* bEnable);
	void EnableBPTimerNonDedicated(bool* bEnable);
	void EnableBodiesGravity();
	void EmitPoop();
	void EditorBeginPlay();
	void DoSetRagdollPhysics();
	bool DoFindGoodSpot();
	class APrimalBuff* DoCharacterDetachment();
	bool DinoMountOnMe();
	struct FLinearColor DidTeleport();
	void DetachFromOtherCharacter(bool EnableMovementAndCollision);
	void DeathHarvestingFadeOut();
	bool DeactivateBuffs();
	class UActorComponent* CreateSnapshotComponent(class UObject** Template, class FName* Name);
	bool ConsumeProjectileImpact(struct FHitResult* HitResult);
	float ClientSyncAnimation(float PlayRate);
	float ClientStopAnimation();
	struct FRotator_NetQuantize ClientRagdollUpdate();
	bool ClientPlayAnimation(float PlayRate);
	struct FVector ClientOrderedMoveTo();
	class AActor* ClientOrderedAttackTarget();
	void ClientNotifyLevelUp();
	void ClientFailedPoop();
	void ClientEndRagdollUpdate();
	void ClientDidPoop();
	void ClearRidingDinoAsPassenger(bool* bFromDino);
	void ClearMovementTether();
	bool ClearMountedDino();
	void ClearControlInputVector();
	void ClearCarryingDino(bool* bFromDino, bool* bCancelAnyCarryBuffs);
	void ClearBasedCharacters();
	bool CharacterIsCarriedAsPassenger();
	bool CharacterBuffsPreventFirstPerson();
	class UPrimalItem* CaptureCharacterSnapshot();
	bool CanUseCameraSettings();
	bool CanMountOnMe();
	bool CanDragCharacter(class APrimalCharacter* Character);
	bool CameraCheckIsRunning();
	bool CameraCheckIsMoving();
	class AShooterHUD* CallDrawHUD();
	class AShooterHUD* CallDrawFloatingHUD();
	bool BuffsPreventInventoryAccess();
	void BPTriggerStasisEvent();
	void BPTimerServer();
	void BPTimerNonDedicated();
	void BPSuicide();
	class APrimalCharacter* BPSpawnAttackerDamageImpactFX(class FName* SocketName);
	bool BPSkipMovementOptimization();
	bool BPShouldLimitRightDirection();
	bool BPShouldLimitForwardDirection();
	void BPSetCharacterMeshesMaterialScalarParamValue(class FName ParamName, float* Value);
	class UPrimalItem* BPRemovedAttachmentsForItem();
	void BPRemovedAsPassenger(class APrimalCharacter* Character);
	class UPrimalItem* BPRemoveCharacterSnapshot(class AActor* From);
	bool BPPreventStasis();
	bool BPPreventNotifySound();
	bool BPPreventInputType(enum class EPrimalCharacterInputType* InputType);
	bool BPPreventFirstPerson();
	bool BPPreventFallDamage(struct FHitResult* HitResult);
	void BPPreSerializeSaveGame();
	void BPPostLoadedFromSaveGame();
	void BPPlayDying(float KillingDamage, struct FDamageEvent* DamageEvent, class APawn* InstigatingPawn, class AActor* DamageCauser);
	void BPOverrideUseItemSlot(int32* ItemSlot);
	void BPOverrideReleaseItemSlot(int32* ItemSlot);
	bool BPOverridePrimalCameraParams(struct FPrimalCameraParams* OutParams);
	void BPOverridePhysicsImpulses(float* DeltaSeconds, class UPrimalCharacterMovement* PrimalCharacterMovement);
	float BPOverrideJumpZModifier(float* InJumpZModifier);
	bool BPOverrideInventoryAccessInput();
	class UAnimMontage* BPOverrideHurtAnim(float DamageTaken, struct FDamageEvent* DamageEvent, class APawn* PawnInstigator, class AActor* DamageCauser, bool bIsLocalPath, bool* bIsPointDamage, struct FVector* PointDamageLocation, struct FVector* PointDamageHitNormal);
	void BPOverrideHeldItemSlot(int32* ItemSlot);
	bool BPOverrideFPVViewLocation(class APrimalCharacter** ViewingCharacter);
	struct FVector BPOverrideFlyingVelocity(struct FVector* InitialVelocity);
	struct FHitMarkerSettings BPOverrideDamageCauserHitMarker(class AShooterPlayerController** DamageCauserController, bool* bHitFriendlyTarget, float* PreDamageHealth, float* DamageAmount, struct FDamageEvent* DamageEvent, bool* bIsPointDamage, struct FHitResult* PointDamageHitResult);
	bool BPOverrideCurrentCameraProfileId(class FName* OutProfileId);
	bool BPOverrideCurrentCameraProfile(struct FPrimalCameraProfile* OutCameraProfile);
	class USoundBase* BPOverrideCharacterSound();
	class UParticleSystem* BPOverrideCharacterParticle(class UParticleSystem** ParticleIn);
	struct FVector BPOverrideCharacterNewFallVelocity(struct FVector* InitialVelocity);
	bool BPOverrideCameraPivotLocationInterpParams(struct FPrimalCameraPivotZInterpOverrides* PivotZInterpOverrides, struct FPrimalCameraInterpParams* LastInterpParamsX, struct FPrimalCameraInterpParams* LastInterpParamsY, struct FPrimalCameraInterpParams* LastInterpParamsZ, struct FPrimalCameraInterpParams* OutInterpParamsX, struct FPrimalCameraInterpParams* OutInterpParamsY, struct FPrimalCameraInterpParams* OutInterpParamsZ);
	bool BPOverrideCameraDesiredPivotRotation(struct FRotator* CurrentCameraPivotRotation, struct FRotator* DesiredCameraPivotRotation);
	bool BPOverrideCameraDesiredPivotOffset(struct FVector* DesiredCameraOffset);
	bool BPOverrideCameraDesiredPivotLocation(struct FVector* CurrentCameraPivotLocation, struct FVector* DesiredCameraPivotLocation);
	bool BPOverrideCameraArmLengthInterpParams(struct FPrimalCameraInterpParams* OutInterpParams);
	bool BPOverrideCameraArmLength(float CurrentCameraArmLength, float DesiredCameraArmLength);
	void BPOnStaminaDrained();
	uint8 BPOnMovementModeChangedNotify();
	void BPOnMassTeleportEvent(enum class EMassTeleportState EventState, class APrimalCharacter* TeleportInitiatedByChar);
	class AController* BPOnLethalDamage(float KillingDamage, struct FDamageEvent* DamageEvent, class AActor* DamageCauser, bool bPreventDeath);
	bool BPOnAttachmentReplication();
	bool BPOnAnimPlayedNotify(float* InPlayRate, bool bReplicate, bool bReplicateToOwner);
	void BPNotifyToggleHUD(bool bHUDHidden);
	int32 BPNotifyLevelUp();
	bool BPNotifyInventoryItemChange();
	void BPNotifyDroppedItemPickedUp(class ADroppedItem* ItemPickedUp, class APrimalCharacter* PickedUpBy);
	void BPNotifyBumpedPawn(class APrimalCharacter* BumpedPawn);
	void BPNotifyBumpedByPawn(class APrimalCharacter* ByPawn);
	class APrimalBuff* BPNotifyBPNotifyIsDamageCauserOfAddedBuff();
	class AShooterHUD* BPNewDoorInteractionDrawHUD(const struct FVector2D& DoorDescriptionLoc);
	enum class EMovementMode BPNetSetMovementMode();
	enum class EMovementMode BPNetSetCharacterMovementVelocity(bool bSetNewVelocity, const struct FVector& NewVelocity, bool bSetNewMovementMode);
	enum class EMovementMode BPNetAddCharacterMovementImpulse(struct FVector* Impulse, float ImpulseExponent, bool bSetNewMovementMode, bool* bOverrideMaxImpulseZ, bool bApplyToBigPawns);
	float BPModifyViewHitDir(class APrimalCharacter** ViewingCharacter, float InViewHitDir);
	struct FVector BPModifyRightDirectionInput(const struct FVector& DirectionInput);
	float BPModifyFOVInterpSpeed(float FOVInterpSpeedIn);
	float BPModifyFOV(float FOVIn);
	struct FVector BPModifyForwardDirectionInput(const struct FVector& DirectionInput);
	void BPLocalUnpossessed();
	void BPLocalPossessedBy(class APlayerController* ByController);
	struct FRotator BPLimitPlayerRotation(class APrimalCharacter** ViewingCharacter, const struct FRotator& InViewRotation);
	bool BPIsConscious();
	bool BPIsBlockedByShield(const struct FHitResult& HitInfo, const struct FVector& ShotDirection, bool bBlockAllPointDamage);
	bool BPIsBasedOnDynamicActor();
	bool BPHasPlayerController();
	bool BPHandleRightShoulderButton();
	bool BPHandlePoop();
	bool BPHandleLeftShoulderButton();
	TArray<struct FBlueprintVisualLogEntry> BPGrabDebugSnapshot();
	class FString BPGetStatusNameString(enum class EPrimalCharacterStatusValue* ValueType);
	void BPGetOverrideCameraInterpSpeed(float DefaultTPVCameraSpeedInterpolationMultiplier, float DefaultTPVOffsetInterpSpeed, float TPVCameraSpeedInterpolationMultiplier, float* TPVOffsetInterpSpeed);
	bool BPGetIsBuried();
	float BPGetHUDOverrideBuffProgressBarPercent();
	void BPGetHUDElements(class APlayerController** ForPC, TArray<struct FHUDElement>* OutElements);
	float BPGetGravityZScale();
	struct FVector BPGetFPVViewLocation(class APrimalCharacter** ViewingCharacter);
	float BPGetExtraMeleeDamageModifier();
	class FString BPGetDebugInfoString();
	float BPGetArmorDurabilityDecreaseMultiplier();
	float BPGetApproachRadius();
	float BPGetAddForwardVelocityOnJump();
	bool BPForceUseOldASECamera();
	enum class ECameraStyle BPForceCameraStyle(class APrimalCharacter** ForViewTarget);
	void BPCheckJumpInput(bool* bUseCustomErrorMessage, class FString* ErrorMessageToDisplay);
	void BPCharacterUnsleeped();
	void BPCharacterSleeped();
	void BPCharacterDetach();
	bool BPCanNotifyTeamAggroAI(class APrimalDinoCharacter* Dino);
	bool BPCanBeBaseForCharacter(class APawn* Pawn);
	bool BPCanBaseOnCharacter(class APrimalCharacter** BaseCharacter);
	struct FRotator BPCameraRotationFinal(class APrimalCharacter** ViewingCharacter, struct FRotator* InCurrentFinalRot, class FName* CameraStyle);
	struct FRotator BPCameraBaseOrientation(class APrimalCharacter** ViewingCharacter);
	class AActor* BPApplyCharacterSnapshotEquipment(class UPrimalInventoryComponent** Inventory);
	int32 BPApplyCharacterSnapshot(float* MaxExtent, bool* bCollisionOn);
	void BPAnimNotifyCustomState_End(class FName* CustomEventName, class USkeletalMeshComponent** MeshComp, class UAnimSequenceBase** Animation, class UAnimNotifyState** AnimNotifyObject);
	void BPAnimNotifyCustomState_Begin(class FName* CustomEventName, class USkeletalMeshComponent** MeshComp, class UAnimSequenceBase** Animation, float* TotalDuration, class UAnimNotifyState** AnimNotifyObject);
	bool BPAllowEncroachment(class AShooterCharacter** MyChar);
	float BPAdjustTorpidityDamage(float* DesiredTorpidityDamage, float* HealthDamageAmount);
	struct FVector BPAdjustImpulseFromDamage(struct FVector* DesiredImpulse, float DamageTaken, struct FDamageEvent* TheDamageEvent, class APawn* PawnInstigator, class AActor* DamageCauser, bool* bIsPointDamage, struct FHitResult* PointHitInfo);
	float BPAdjustDamage(float IncomingDamage, struct FDamageEvent* TheDamageEvent, class AController** EventInstigator, class AActor* DamageCauser, bool* bIsPointDamage, struct FHitResult* PointHitInfo);
	struct FVector BPAdjustCharacterMovementImpulse(struct FVector* Impulse, bool* bVelocityChange, float* MassScaleImpulseExponent, bool* bOverrideMaxImpulseZ);
	class UPrimalItem* BPAddedAttachmentsForItem();
	bool BP_ShouldDisableCameraInterpolation();
	float BP_OverrideTerminalVelocity();
	void BP_OverrideCameraTargetOriginLocation(struct FVector* OutOverrideOrigin, class FName* WithCameraStyle);
	void BP_OnZoomOut();
	void BP_OnZoomInOrbitCam();
	void BP_OnZoomIn();
	void BP_OnStartCarried(class APrimalDinoCharacter** ADino);
	void BP_OnSetRunning(bool* bNewIsRunning);
	void BP_OnSetDeath();
	class UStructurePaintingComponent* BP_OnPaintingComponentInitialized();
	void BP_OnJumpReleased();
	void BP_OnJumpPressed();
	void BP_OnEndCarried(bool* bFromDino, bool* bCancelAnyCarryBuffs);
	void BP_OnCameraStyleChangedNotify(class FName* NewCameraStyle, class FName* OldCameraStyle);
	bool BP_ModifySavedMoveAcceleration_PreRep(struct FVector* ModifyClientAccel);
	bool BP_ModifySavedMoveAcceleration_PostRep(struct FVector* ModifyServerAccel);
	void BP_ModifyInputAcceleration(struct FVector* ModifyInputAccel);
	bool BP_IsCharacterHardAttached(bool* bIgnoreRiding, bool bIgnoreCarried);
	float BP_GetMaxSpeedModifier();
	bool BP_ForceAllowAddBuff(class UClass* BuffClass);
	bool BP_AnimationPreventsInput();
	void BlueprintAnimNotifyCustomEvent(class FName* CustomEventName, class USkeletalMeshComponent** MeshComp, class UAnimSequenceBase** Animation, class UAnimNotify** AnimNotifyObject);
	void AttachToOtherCharacter(class APrimalCharacter* CharacterToAttachTo, class FName InSocketName, bool EnableMovementAndCollision, enum class EAttachLocation AttachLocation);
	struct FVector AttachedToOtherCharacterUpdateWorldLocation();
	void ApplyCustomFallDamage(struct FVector* Location, const struct FVector& Velocity, float FallDamageThreshold);
	bool AllowPlayMontage();
};

// 0x1908 (0x3428 - 0x1B20)
// Class ShooterGame.PrimalDinoCharacter
class APrimalDinoCharacter : public APrimalCharacter
{
public:
	uint8                                        Pad_34EA[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector                               BaseDinoScale;                                     // 0x1B40(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AActor>                 ForcedMasterTarget;                                // 0x1B58(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MountCharacterSocketName;                          // 0x1B60(0x8)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalCharacter>       MountCharacter;                                    // 0x1B68(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_34EB[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               RidingAttackExtraVelocity;                         // 0x1B78(0x18)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          StartChargeAnimation;                              // 0x1B90(0x8)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UAnimMontage*>                  AttackAnimations;                                  // 0x1B98(0x10)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<float>                                AttackAnimationWeights;                            // 0x1BA8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<float>                                AttackAnimationsTimeFromEndToConsiderFinished;     // 0x1BB8(0x10)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bAttackStopsMovement : 1;                          // Mask: 0x1, PropSize: 0x10x1BC8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bLocationBasedAttack : 1;                          // Mask: 0x2, PropSize: 0x10x1BC8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bKeepBasedOnJumping : 1;                           // Mask: 0x4, PropSize: 0x10x1BC8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTamedWanderHarvestAllowUsableHarvestingAsWell : 1; // Mask: 0x8, PropSize: 0x10x1BC8(0x1)(ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPKilledSomethingEvent : 1;                    // Mask: 0x10, PropSize: 0x10x1BC8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDinoResetAffinityOnUnsleep : 1;            // Mask: 0x20, PropSize: 0x10x1BC8(0x1)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bKeepInventoryForWakingTame : 1;                   // Mask: 0x40, PropSize: 0x10x1BC8(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_256 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHadLinkedSupplyCrate : 1;                         // Mask: 0x1, PropSize: 0x10x1BC9(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_257 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHiddenForLocalPassenger : 1;                      // Mask: 0x8, PropSize: 0x10x1BC9(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRunCheckCarriedTrace : 1;                         // Mask: 0x10, PropSize: 0x10x1BC9(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        CanElevate : 1;                                    // Mask: 0x20, PropSize: 0x10x1BC9(0x1)(ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_258 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        BitPad_259 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bTamedWanderCorpseHarvesting : 1;                  // Mask: 0x2, PropSize: 0x10x1BCA(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyStructurePlacedNearby : 1;             // Mask: 0x4, PropSize: 0x10x1BCA(0x1)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanTargetCorpse : 1;                         // Mask: 0x8, PropSize: 0x10x1BCA(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPShouldForceFlee : 1;                         // Mask: 0x10, PropSize: 0x10x1BCA(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_25A : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bForceWanderOverrideNPCZoneManager : 1;            // Mask: 0x40, PropSize: 0x10x1BCA(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeprecateDino : 1;                                // Mask: 0x80, PropSize: 0x10x1BCA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceFoodItemAutoConsume : 1;                     // Mask: 0x1, PropSize: 0x10x1BCB(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlyerAllowFlyingWithExplosive : 1;                // Mask: 0x2, PropSize: 0x10x1BCB(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceUseDediAttackTiming : 1;                     // Mask: 0x4, PropSize: 0x10x1BCB(0x1)(Edit, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePreventExitingWater : 1;                     // Mask: 0x8, PropSize: 0x10x1BCB(0x1)(Net, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bWakingTameConsumeEntireStack : 1;                 // Mask: 0x10, PropSize: 0x10x1BCB(0x1)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_25B : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        ColorizationIntensity;                             // 0x1BCC(0x4)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowCarryCharacterWithoutRider : 1;              // Mask: 0x1, PropSize: 0x10x1BD0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWildDinoPreventWeight : 1;                        // Mask: 0x2, PropSize: 0x10x1BD0(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDebugMeleeAttacks : 1;                            // Mask: 0x4, PropSize: 0x10x1BD0(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRetainCarriedCharacterOnDismount : 1;             // Mask: 0x8, PropSize: 0x10x1BD0(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnTamedProcessOrder : 1;                     // Mask: 0x10, PropSize: 0x10x1BD0(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OnTamedOrderReceived : 1;                   // Mask: 0x20, PropSize: 0x10x1BD0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowAttackWithCryoSickness : 1;                  // Mask: 0x40, PropSize: 0x10x1BD0(0x1)(ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanCryo : 1;                                 // Mask: 0x80, PropSize: 0x10x1BD0(0x1)(Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWildPreventTeleporting : 1;                       // Mask: 0x1, PropSize: 0x10x1BD1(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPClampMaxHarvestHealth : 1;                   // Mask: 0x2, PropSize: 0x10x1BD1(0x1)(BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceUseAltAimSocketsForTurrets : 1;              // Mask: 0x4, PropSize: 0x10x1BD1(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPBecameNewBaby : 1;                           // Mask: 0x8, PropSize: 0x10x1BD1(0x1)(ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTryAlwaysApplyCryoSickness : 1;                   // Mask: 0x10, PropSize: 0x10x1BD1(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSetSimulatedInterpRollOverride : 1;          // Mask: 0x20, PropSize: 0x10x1BD1(0x1)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSetInitialAimOffsetTargets : 1;              // Mask: 0x40, PropSize: 0x10x1BD1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bConsoleIgnoreSafeZonesForCrosshair : 1;           // Mask: 0x80, PropSize: 0x10x1BD1(0x1)(ConstParm, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDrawCrosshairWhenHUDIsHidden : 1;            // Mask: 0x1, PropSize: 0x10x1BD2(0x1)(BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanLand : 1;                                 // Mask: 0x2, PropSize: 0x10x1BD2(0x1)(ExportObject, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowCheckRefreshDefaultInventoryItems : 1;       // Mask: 0x4, PropSize: 0x10x1BD2(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsBigBossDinoWithHighPrioritySounds : 1;          // Mask: 0x8, PropSize: 0x10x1BD2(0x1)(Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_25C : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_34EE[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UMaterialInterface*>            FemaleMaterialOverrides;                           // 0x1BD8(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCheckCanSpawnFromLocation : 1;               // Mask: 0x1, PropSize: 0x10x1BE8(0x1)(ConstParm, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_25D : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_34F0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PaintConsumptionMultiplier;                        // 0x1BEC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ChargingBlockedStopTimeThreshold;                  // 0x1BF0(0x4)(Edit, ConstParm, Net, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_34F1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          MeleeSwingSockets;                                 // 0x1BF8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        MeleeDamageAmount;                                 // 0x1C08(0x4)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MeleeDamageImpulse;                                // 0x1C0C(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MeleeSwingRadius;                                  // 0x1C10(0x4)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_34F3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDinoAttackInfo>               AttackInfos;                                       // 0x1C18(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        CurrentAttackIndex;                                // 0x1C28(0x1)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        LastAttackIndex;                                   // 0x1C29(0x1)(Edit, ExportObject, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_34F5[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                MeleeDamageType;                                   // 0x1C30(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UClass*                                StepActorDamageTypeOverride;                       // 0x1C38(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AttackOffset;                                      // 0x1C40(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        FleeHealthPercentage;                              // 0x1C44(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BreakFleeHealthPercentage;                         // 0x1C48(0x4)(Edit, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_34F8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                TamerString;                                       // 0x1C50(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	class FString                                TamedName;                                         // 0x1C60(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHibernationZoneInfo>          HibernatedZoneVolumes;                             // 0x1C70(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             OverlayTooltipPadding;                             // 0x1C80(0x10)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             OverlayTooltipScale;                               // 0x1C90(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                HUDOverlayToolTipWidget;                           // 0x1CA0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                MyDinoEntry;                                       // 0x1CA8(0x8)(ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               RiderFPVCameraOffset;                              // 0x1CB0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_34FB[0x38];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        FinalNPCLevelMultiplier;                           // 0x1D00(0x4)(BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LandingTraceMaxDistance;                           // 0x1D04(0x4)(Edit, ConstParm, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FlyingWanderFixedDistanceAmount;                   // 0x1D08(0x4)(ConstParm, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FlyingWanderRandomDistanceAmount;                  // 0x1D0C(0x4)(Edit, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AcceptableLandingRadius;                           // 0x1D10(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxLandingTime;                                    // 0x1D14(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GenderSpeedMultipliers[0x2];                       // 0x1D18(0x8)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ChargeSpeedMultiplier;                             // 0x1D20(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_34FD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          ChargingAnim;                                      // 0x1D28(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ChargingStaminaPerSecondDrain;                     // 0x1D30(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ChargingStopDotTreshold;                           // 0x1D34(0x4)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_34FF[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AShooterCharacter>      Rider;                                             // 0x1D58(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AShooterCharacter>      PreviousRider;                                     // 0x1D60(0x8)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SaddleItemClass;                                   // 0x1D68(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                SaddleSlotNameOverride;                            // 0x1D70(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSaddlePassengerSeatDefinition> NoSaddlePassengerSeats;                            // 0x1D80(0x10)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalCharacter>       CarriedCharacter;                                  // 0x1D90(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3504[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          DinoWithPassengerAnim;                             // 0x1DA0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          DinoWithDinoPassengerAnim;                         // 0x1DA8(0x8)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TWeakObjectPtr<class APrimalCharacter>> PassengerPerSeat;                                  // 0x1DB0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class APrimalCharacter*>              SavedPassengerPerSeat;                             // 0x1DC0(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3506[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       LastClientCameraRotationServerUpdate;              // 0x1DE0(0x8)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class USceneComponent*>               OverrideTargetComponents;                          // 0x1DE8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        WhistleTraceOffset;                                // 0x1DF8(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3508[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        LastPlayedAttackAnimation;                         // 0x1E0C(0x4)(Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        AttackIndexOfPlayedAnimation;                      // 0x1E10(0x1)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_350A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDinoBaseLevelWeightEntry>     DinoBaseLevelWeightEntries;                        // 0x1E18(0x10)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_350B[0x78];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector                               RidingFirstPersonViewLocationOffset;               // 0x1EA0(0x18)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsLanding : 1;                                    // Mask: 0x1, PropSize: 0x10x1EB8(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanCharge : 1;                                    // Mask: 0x2, PropSize: 0x10x1EB8(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCancelInterpolation : 1;                          // Mask: 0x4, PropSize: 0x10x1EB8(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsCharging : 1;                                   // Mask: 0x8, PropSize: 0x10x1EB8(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bChargeDamageStructures : 1;                       // Mask: 0x10, PropSize: 0x10x1EB8(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReplicatePitchWhileSwimming : 1;                  // Mask: 0x20, PropSize: 0x10x1EB8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsFlying : 1;                                     // Mask: 0x40, PropSize: 0x10x1EB8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsWakingTame : 1;                                 // Mask: 0x80, PropSize: 0x10x1EB8(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRiding : 1;                                  // Mask: 0x1, PropSize: 0x10x1EB9(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAutoTame : 1;                                // Mask: 0x2, PropSize: 0x10x1EB9(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRiderJumpTogglesFlight : 1;                       // Mask: 0x4, PropSize: 0x10x1EB9(0x1)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasRider : 1;                                     // Mask: 0x8, PropSize: 0x10x1EB9(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowCarryFlyerDinos : 1;                         // Mask: 0x10, PropSize: 0x10x1EB9(0x1)(Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_25E : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bFlyerForceNoPitch : 1;                            // Mask: 0x40, PropSize: 0x10x1EB9(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlyerForceLimitPitch : 1;                         // Mask: 0x80, PropSize: 0x10x1EB9(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventStasis : 1;                                // Mask: 0x1, PropSize: 0x10x1EBA(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAutoTameable : 1;                                 // Mask: 0x2, PropSize: 0x10x1EBA(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysSetTamingTeamOnItemAdd : 1;                 // Mask: 0x4, PropSize: 0x10x1EBA(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_25F : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bCheatForceTameRide : 1;                           // Mask: 0x10, PropSize: 0x10x1EBA(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsFemale : 1;                                     // Mask: 0x20, PropSize: 0x10x1EBA(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, DisableEditOnInstance)
	uint8                                        bRiderUseDirectionalAttackIndex : 1;               // Mask: 0x40, PropSize: 0x10x1EBA(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanBeTamed : 1;                                   // Mask: 0x80, PropSize: 0x10x1EBA(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTargetingIgnoredByWildDinos : 1;                  // Mask: 0x1, PropSize: 0x10x1EBB(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTargetingIgnoreWildDinos : 1;                     // Mask: 0x2, PropSize: 0x10x1EBB(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanMountOnHumans : 1;                             // Mask: 0x4, PropSize: 0x10x1EBB(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIKIgnoreSaddleStructures : 1;                     // Mask: 0x8, PropSize: 0x10x1EBB(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAttackTargetWhenLaunched : 1;                     // Mask: 0x10, PropSize: 0x10x1EBB(0x1)(Edit, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanOpenLockedDoors : 1;                           // Mask: 0x20, PropSize: 0x10x1EBB(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseColorization : 1;                              // Mask: 0x40, PropSize: 0x10x1EBB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMeleeSwingDamageBlockedByStrutures : 1;           // Mask: 0x80, PropSize: 0x10x1EBB(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyChanceOfTwins;                                 // 0x1EBC(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowTargetingCorpses : 1;                        // Mask: 0x1, PropSize: 0x10x1EC0(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRiderDontRequireSaddle : 1;                       // Mask: 0x2, PropSize: 0x10x1EC0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowsFishingOnSaddle : 1;                        // Mask: 0x4, PropSize: 0x10x1EC0(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanBeOrdered : 1;                                 // Mask: 0x8, PropSize: 0x10x1EC0(0x1)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverridePlatformStructureLimit : 1;               // Mask: 0x10, PropSize: 0x10x1EC0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMeleeAttackHarvetUsableComponents : 1;            // Mask: 0x20, PropSize: 0x10x1EC0(0x1)(ExportObject, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUpdateCharsOnMeleeAttackHarvestUsable : 1;        // Mask: 0x40, PropSize: 0x10x1EC0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPlatformSaddleIgnoreRotDotCheck : 1;              // Mask: 0x80, PropSize: 0x10x1EC0(0x1)(Edit, ConstParm, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseInteprolatedVelocity : 1;                      // Mask: 0x1, PropSize: 0x10x1EC1(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsCarnivore : 1;                                  // Mask: 0x2, PropSize: 0x10x1EC1(0x1)(ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bAllowRidingInWater : 1;                           // Mask: 0x4, PropSize: 0x10x1EC1(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesGender : 1;                                   // Mask: 0x8, PropSize: 0x10x1EC1(0x1)(Edit, ExportObject, BlueprintReadOnly, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bTargetEverything : 1;                             // Mask: 0x10, PropSize: 0x10x1EC1(0x1)(Edit, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTamedWanderHarvestNonUsableHarvesting : 1;        // Mask: 0x20, PropSize: 0x10x1EC1(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableTamedWandering : 1;                         // Mask: 0x40, PropSize: 0x10x1EC1(0x1)(Edit, Net, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableTamedMating : 1;                            // Mask: 0x80, PropSize: 0x10x1EC1(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCollectVictimItems : 1;                           // Mask: 0x1, PropSize: 0x10x1EC2(0x1)(BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bServerInitializedDino : 1;                        // Mask: 0x2, PropSize: 0x10x1EC2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	uint8                                        BitPad_260 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHasMateBoost : 1;                                 // Mask: 0x8, PropSize: 0x10x1EC2(0x1)(BlueprintVisible, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_261 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bTamingHasFood : 1;                                // Mask: 0x20, PropSize: 0x10x1EC2(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontWander : 1;                                   // Mask: 0x40, PropSize: 0x10x1EC2(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAnimIsMoving : 1;                                 // Mask: 0x80, PropSize: 0x10x1EC2(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoStepDamage : 1;                                 // Mask: 0x1, PropSize: 0x10x1EC3(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventBasingWhenUntamed : 1;                     // Mask: 0x2, PropSize: 0x10x1EC3(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAlwaysAllowBasing : 1;                       // Mask: 0x4, PropSize: 0x10x1EC3(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bChargingRequiresWalking : 1;                      // Mask: 0x8, PropSize: 0x10x1EC3(0x1)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseRootLocSwimOffset : 1;                         // Mask: 0x10, PropSize: 0x10x1EC3(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_262 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bDisplaySummonedNotification : 1;                  // Mask: 0x40, PropSize: 0x10x1EC3(0x1)(Edit, ExportObject, Net, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisplayKilledNotification : 1;                    // Mask: 0x80, PropSize: 0x10x1EC3(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetAttackWeight : 1;                         // Mask: 0x1, PropSize: 0x10x1EC4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_263 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3517[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BabyGestationSpeed;                                // 0x1EC8(0x4)(Edit, BlueprintVisible, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bServerForceUpdateDinoGameplayMeshNearPlayer : 1;  // Mask: 0x1, PropSize: 0x10x1ECC(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventAllRiderWeapons : 1;                       // Mask: 0x2, PropSize: 0x10x1ECC(0x1)(Edit, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventAllRiderWeaponsOnReequip : 1;              // Mask: 0x4, PropSize: 0x10x1ECC(0x1)(BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowDeathAutoGrab : 1;                           // Mask: 0x8, PropSize: 0x10x1ECC(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupportWakingTame : 1;                            // Mask: 0x10, PropSize: 0x10x1ECC(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowAutoUnstasisDestroy : 1;                     // Mask: 0x20, PropSize: 0x10x1ECC(0x1)(Edit, BlueprintVisible, ExportObject, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDebugBaby : 1;                                    // Mask: 0x40, PropSize: 0x10x1ECC(0x1)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysUpdateAimOffsetInterpolation : 1;           // Mask: 0x80, PropSize: 0x10x1ECC(0x1)(BlueprintVisible, BlueprintReadOnly, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        WildAmbientHarvestingAnimationServerTickPose : 1;  // Mask: 0x1, PropSize: 0x10x1ECD(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventSleepingTame : 1;                          // Mask: 0x2, PropSize: 0x10x1ECD(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTamedWanderHarvest : 1;                           // Mask: 0x4, PropSize: 0x10x1ECD(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSimulatedNetLandCheckFloor : 1;                   // Mask: 0x8, PropSize: 0x10x1ECD(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRefreshedColorization : 1;                        // Mask: 0x10, PropSize: 0x10x1ECD(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_264 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        BitPad_265 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bFlyerPreventRiderAutoFly : 1;                     // Mask: 0x8, PropSize: 0x10x1ECE(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowFlyerLandedRider : 1;                        // Mask: 0x10, PropSize: 0x10x1ECE(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventFlyerFlyingRider : 1;                      // Mask: 0x20, PropSize: 0x10x1ECE(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventFlyerCapsuleExpansion : 1;                 // Mask: 0x40, PropSize: 0x10x1ECE(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIncludeCarryWeightOfBasedPawns : 1;               // Mask: 0x80, PropSize: 0x10x1ECE(0x1)(BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceRiderNetworkParent : 1;                      // Mask: 0x1, PropSize: 0x10x1ECF(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePerfectTame : 1;                             // Mask: 0x2, PropSize: 0x10x1ECF(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanHaveBaby : 1;                                  // Mask: 0x4, PropSize: 0x10x1ECF(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBabyGestation : 1;                             // Mask: 0x8, PropSize: 0x10x1ECF(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventUnalignedDinoBasing : 1;                   // Mask: 0x10, PropSize: 0x10x1ECF(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideLevelMusicIfTamed : 1;                    // Mask: 0x20, PropSize: 0x10x1ECF(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReachedMaxStructures : 1;                         // Mask: 0x40, PropSize: 0x10x1ECF(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_266 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        ExtraBabyGestationSpeedMultiplier;                 // 0x1ED0(0x4)(Edit, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupportsSaddleStructures : 1;                     // Mask: 0x1, PropSize: 0x10x1ED4(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBonesHidden : 1;                                  // Mask: 0x2, PropSize: 0x10x1ED4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_267 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bCanBeRepaired : 1;                                // Mask: 0x8, PropSize: 0x10x1ED4(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bFlyerDontAutoLandOnDismount : 1;                  // Mask: 0x10, PropSize: 0x10x1ED4(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsRepairing : 1;                                  // Mask: 0x20, PropSize: 0x10x1ED4(0x1)(ConstParm, Parm, Config, GlobalConfig, SubobjectReference)
	uint8                                        bIsBaby : 1;                                       // Mask: 0x40, PropSize: 0x10x1ED4(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_268 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bCanUnclaimTame : 1;                               // Mask: 0x1, PropSize: 0x10x1ED5(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowWildDinoEquipment : 1;                       // Mask: 0x2, PropSize: 0x10x1ED5(0x1)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseTamedVisibleComponents : 1;                    // Mask: 0x4, PropSize: 0x10x1ED5(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowDemolish : 1;                                // Mask: 0x8, PropSize: 0x10x1ED5(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseGang : 1;                                      // Mask: 0x10, PropSize: 0x10x1ED5(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBlueprintDrawFloatingHUD : 1;                     // Mask: 0x20, PropSize: 0x10x1ED5(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEggBoosted : 1;                                   // Mask: 0x40, PropSize: 0x10x1ED5(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPTamedTick : 1;                               // Mask: 0x80, PropSize: 0x10x1ED5(0x1)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideWantsToRun : 1;                      // Mask: 0x1, PropSize: 0x10x1ED6(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPlayDying : 1;                               // Mask: 0x2, PropSize: 0x10x1ED6(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupportsPassengerSeats : 1;                       // Mask: 0x4, PropSize: 0x10x1ED6(0x1)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAddPassengerSeatMultiUseEntries : 1;              // Mask: 0x8, PropSize: 0x10x1ED6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSaddlePassengerSeatsWhenAvailable : 1;         // Mask: 0x10, PropSize: 0x10x1ED6(0x1)(Edit, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bScaleInsulationByMeleeDamage : 1;                 // Mask: 0x20, PropSize: 0x10x1ED6(0x1)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInventoryOnlyAllowCraftingWhenWandering : 1;      // Mask: 0x40, PropSize: 0x10x1ED6(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseWildRandomScale : 1;                           // Mask: 0x80, PropSize: 0x10x1ED6(0x1)(Edit, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHeldJumpSlowFalling : 1;                          // Mask: 0x1, PropSize: 0x10x1ED7(0x1)(ConstParm, BlueprintVisible, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsHeldJumpSlowFalling : 1;                        // Mask: 0x2, PropSize: 0x10x1ED7(0x1)(ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_269 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bTriggerBPUnstasis : 1;                            // Mask: 0x8, PropSize: 0x10x1ED7(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bWildProduceEggDynamically : 1;                    // Mask: 0x10, PropSize: 0x10x1ED7(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventWakingTameFeeding : 1;                     // Mask: 0x20, PropSize: 0x10x1ED7(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDisablingTaming : 1;                         // Mask: 0x40, PropSize: 0x10x1ED7(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_26A : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        AutoFadeOutAfterTameTime;                          // 0x1ED8(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlyerAllowRidingInCaves : 1;                      // Mask: 0x1, PropSize: 0x10x1EDC(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bScaleExtraRunningSpeedModifier : 1;               // Mask: 0x2, PropSize: 0x10x1EDC(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideCrosshairAlpha : 1;                       // Mask: 0x4, PropSize: 0x10x1EDC(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideCrosshairColor : 1;                       // Mask: 0x8, PropSize: 0x10x1EDC(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetCrosshairLocation : 1;                    // Mask: 0x10, PropSize: 0x10x1EDC(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideCrosshairSpread : 1;                      // Mask: 0x20, PropSize: 0x10x1EDC(0x1)(ConstParm, BlueprintReadOnly, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCenterOffscreenFloatingHUDWidgets : 1;            // Mask: 0x40, PropSize: 0x10x1EDC(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bClampOffscreenFloatingHUDWidgets : 1;             // Mask: 0x80, PropSize: 0x10x1EDC(0x1)(Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseFixedSpawnLevel : 1;                           // Mask: 0x1, PropSize: 0x10x1EDD(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bTreatCrouchInputAsAttack : 1;                     // Mask: 0x2, PropSize: 0x10x1EDD(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetRiderUnboardLocation : 1;                 // Mask: 0x4, PropSize: 0x10x1EDD(0x1)(ConstParm, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetRiderUnboardDirection : 1;                // Mask: 0x8, PropSize: 0x10x1EDD(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUniqueDino : 1;                                   // Mask: 0x10, PropSize: 0x10x1EDD(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bModifyBasedCamera : 1;                            // Mask: 0x20, PropSize: 0x10x1EDD(0x1)(Edit, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnRefreshColorization : 1;                   // Mask: 0x40, PropSize: 0x10x1EDD(0x1)(ConstParm, BlueprintReadOnly, Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideAncestorsButton : 1;                          // Mask: 0x80, PropSize: 0x10x1EDD(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OverrideDinoName : 1;                       // Mask: 0x1, PropSize: 0x10x1EDE(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDinoTooltipCustomProgressBar : 1;            // Mask: 0x2, PropSize: 0x10x1EDE(0x1)(ExportObject, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDisplayTamedMessage : 1;                     // Mask: 0x4, PropSize: 0x10x1EDE(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideTamingDescriptionLabel : 1;          // Mask: 0x8, PropSize: 0x10x1EDE(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanMountOnCharacter : 1;                     // Mask: 0x10, PropSize: 0x10x1EDE(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsNursingDino : 1;                                // Mask: 0x20, PropSize: 0x10x1EDE(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsNursing : 1;                                    // Mask: 0x40, PropSize: 0x10x1EDE(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowMaleNursing : 1;                             // Mask: 0x80, PropSize: 0x10x1EDE(0x1)(Edit, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetRiderSocket : 1;                          // Mask: 0x1, PropSize: 0x10x1EDF(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPShowTamingPanel : 1;                         // Mask: 0x2, PropSize: 0x10x1EDF(0x1)(ConstParm, ExportObject, Net, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlyerPrioritizeAllyMountToCarry : 1;              // Mask: 0x4, PropSize: 0x10x1EDF(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideMutationLabels : 1;                  // Mask: 0x8, PropSize: 0x10x1EDF(0x1)(ConstParm, ExportObject, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventMovementModeChangeForDinoPassengers : 1;   // Mask: 0x10, PropSize: 0x10x1EDF(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventRiderImmobilization : 1;                   // Mask: 0x20, PropSize: 0x10x1EDF(0x1)(BlueprintVisible, Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_26B : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	bool                                         HasAlreadySetGender;                               // 0x1EE0(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_352C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BasedCameraSpeedMultiplier;                        // 0x1EE4(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       LastEggBoostedTime;                                // 0x1EE8(0x8)(Edit, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WildPercentageChanceOfBaby;                        // 0x1EF0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WildBabyAgeWeight;                                 // 0x1EF4(0x4)(Edit, ExportObject, Net, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyGestationProgress;                             // 0x1EF8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FlyerForceLimitPitchMin;                           // 0x1EFC(0x4)(BlueprintReadOnly, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUntamedUseOverlapEvents;                          // 0x1F00(0x1)(Edit, ConstParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_352D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FlyerForceLimitPitchMax;                           // 0x1F04(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_352E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BabyChanceOfTriplets;                              // 0x1F10(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyAge;                                           // 0x1F14(0x4)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MaxPercentOfCapsulHeightAllowedForIK;              // 0x1F18(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SlopeBiasForMaxCapsulePercent;                     // 0x1F1C(0x4)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FlyingForceRotationRateModifier;                   // 0x1F20(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_352F[0x4];                                     // Fixing Size After Last Property  > TateDumper <https://discord.com/channels/@me/1216968927142215731
	TArray<class FName>                          HideBoneNames;                                     // 0x1F28(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                HideBonesString;                                   // 0x1F38(0x10)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               WaterSurfaceExtraJumpVector;                       // 0x1F48(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               FlyerTakeOffAdditionalVelocity;                    // 0x1F60(0x18)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        OpenDoorDelay;                                     // 0x1F78(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedWanderHarvestInterval;                        // 0x1F7C(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedWanderHarvestSearchRange;                     // 0x1F80(0x4)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedWanderHarvestCollectRadius;                   // 0x1F84(0x4)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               TamedWanderHarvestCollectOffset;                   // 0x1F88(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RootLocSwimOffset;                                 // 0x1FA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayAnimBelowHealthPercent;                        // 0x1FA4(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LeavePlayAnimBelowHealthPercent;                   // 0x1FA8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PlatformSaddleMaxStructureBuildDistance2D;         // 0x1FAC(0x4)(OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          PlayAnimBelowHealth;                               // 0x1FB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            LowHealthExitSound;                                // 0x1FB8(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            LowHealthEnterSound;                               // 0x1FC0(0x8)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                LowHealthDinoSettings;                             // 0x1FC8(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SwimOffsetInterpSpeed;                             // 0x1FD0(0x4)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3533[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AIRangeMultiplier;                                 // 0x1FD8(0x4)(Edit, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	uint8                                        PreventColorizationRegions[0x6];                   // 0x1FDC(0x6)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        AllowPaintingColorRegions[0x6];                    // 0x1FE2(0x6)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ColorSetIndices[0x6];                              // 0x1FE8(0x6)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	uint8                                        Pad_3534[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  ColorSetNames[0x6];                                // 0x1FF0(0x30)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        ColorSetIntensityMultipliers[0x6];                 // 0x2020(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalBuff>            ColorOverrideBuff;                                 // 0x2038(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3535[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MeleeAttackStaminaCost;                            // 0x204C(0x4)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          WakingTameAnimation;                               // 0x2050(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AActor>                 Target;                                            // 0x2058(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config)
	TWeakObjectPtr<class AActor>                 TamedFollowTarget;                                 // 0x2060(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	TWeakObjectPtr<class AActor>                 TamedLandTarget;                                   // 0x2068(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PercentChanceFemale;                               // 0x2070(0x4)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3537[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        DeathGiveItemClasses;                              // 0x2078(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                DeathGiveItemChanceToBeBlueprint;                  // 0x2088(0x10)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DeathGiveItemQualityMin;                           // 0x2098(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DeathGiveItemQualityMax;                           // 0x209C(0x4)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DeathGiveItemRange;                                // 0x20A0(0x4)(ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3538[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DeathGiveAchievement;                              // 0x20A8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideAreaMusic;                                 // 0x20B8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               UnboardLocationOffset;                             // 0x20C0(0x18)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3539[0x88];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        RidingNetUpdateFequency;                           // 0x2160(0x4)(BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RiderMaxSpeedModifier;                             // 0x2164(0x4)(BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RiderExtraMaxSpeedModifier;                        // 0x2168(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RiderMaxRunSpeedModifier;                          // 0x216C(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RiderRotationRateModifier;                         // 0x2170(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SwimmingRotationRateModifier;                      // 0x2174(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ChargingRotationRateModifier;                      // 0x2178(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_353C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          EnterFlightAnim;                                   // 0x2180(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ExitFlightAnim;                                    // 0x2188(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          SleepConsumeFoodAnim;                              // 0x2190(0x8)(Edit, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          WakingConsumeFoodAnim;                             // 0x2198(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          FallAsleepAnim;                                    // 0x21A0(0x8)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          TamedUnsleepAnim;                                  // 0x21A8(0x8)(BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          WildUnsleepAnim;                                   // 0x21B0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          OpenDoorAnim;                                      // 0x21B8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ControlFacePitchInterpSpeed;                       // 0x21C0(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedWalkableFloorZ;                               // 0x21C4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentMovementAnimRate;                           // 0x21C8(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MinPlayerLevelForWakingTame;                       // 0x21CC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_353E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                TamedInventoryComponentTemplate;                   // 0x21D8(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FWeightedObjectList                   DeathInventoryTemplates;                           // 0x21E0(0x20)(Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DeathInventoryChanceToUse;                         // 0x2200(0x4)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WakingTameFeedInterval;                            // 0x2204(0x4)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_353F[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DeathInventoryQualityPerLevelMultiplier;           // 0x2210(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RequiredTameAffinity;                              // 0x2214(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        RequiredTameAffinityPerBaseLevel;                  // 0x2218(0x4)(Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        TamedAITargetingRange;                             // 0x221C(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMeleeSwingDamageBlockedByAllStationaryObjects : 1; // Mask: 0x1, PropSize: 0x10x221D(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPChargingModifyInputAcceleration : 1;         // Mask: 0x2, PropSize: 0x10x221D(0x1)(ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnRepIsCharging : 1;                         // Mask: 0x4, PropSize: 0x10x221D(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventOrderAllowed : 1;                     // Mask: 0x8, PropSize: 0x10x221D(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPassengerDinosUsePassengerAnim : 1;               // Mask: 0x10, PropSize: 0x10x221D(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesPassengerAnimOnDinos : 1;                     // Mask: 0x20, PropSize: 0x10x221D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideRotationOnCarriedCharacter : 1;           // Mask: 0x40, PropSize: 0x10x221D(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAdvancedCarryRelease : 1;                         // Mask: 0x80, PropSize: 0x10x221D(0x1)(BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceCarriedPlayerToCheckForWalls : 1;            // Mask: 0x1, PropSize: 0x10x221E(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClearRiderOnDinoImmobilized : 1;                  // Mask: 0x2, PropSize: 0x10x221E(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPIsBasedOnActor : 1;                          // Mask: 0x4, PropSize: 0x10x221E(0x1)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPModifyControlRotation : 1;                   // Mask: 0x8, PropSize: 0x10x221E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnDinoFiredProjectile : 1;                   // Mask: 0x10, PropSize: 0x10x221E(0x1)(ConstParm, BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetRidingMultiUseEntries : 1;                // Mask: 0x20, PropSize: 0x10x221E(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_26C : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3540[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  PassengerBoneNameOverride;                         // 0x2220(0x8)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentTameAffinity;                               // 0x2228(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TameIneffectivenessModifier;                       // 0x222C(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TameIneffectivenessByAffinity;                     // 0x2230(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3542[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bUseBPIsValidUnStasisCaster;                       // 0x2240(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3543[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FPrimalSaddleStructure>        SaddleStructures;                                  // 0x2250(0x10)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxSaddleStructuresHeight;                         // 0x2260(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         CalculateStructureHeightFromSaddle;                // 0x2264(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         CalculateStructureDistanceFromSaddle;              // 0x2265(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3545[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        SaddlePivotOffset;                                 // 0x2268(0x4)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxSaddleStructuresNum;                            // 0x226C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DinoSettingsClass;                                 // 0x2270(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamingFoodConsumeInterval;                         // 0x2278(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamingFoodConsumeIntervalMax;                      // 0x227C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DediForceAttackAnimTime;                           // 0x2280(0x4)(Edit, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DediForceStartAttackAfterAnimTime;                 // 0x2284(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WakingTameFoodIncreaseMultiplier;                  // 0x2288(0x4)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        TamingTeamID;                                      // 0x228C(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	int32                                        OwningPlayerID;                                    // 0x2290(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	uint8                                        Pad_3548[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                OwningPlayerName;                                  // 0x2298(0x10)(Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	class FString                                TamedTimeStamp;                                    // 0x22A8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3549[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       TamingLastFoodConsumptionTime;                     // 0x22C0(0x8)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	double                                       LastTameConsumedFoodTime;                          // 0x22C8(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint32                                       DinoID1;                                           // 0x22D0(0x4)(Edit, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	uint32                                       DinoID2;                                           // 0x22D4(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	uint8                                        Pad_354B[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        TamedAggressionLevel;                              // 0x22F0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamingIneffectivenessModifierIncreaseByDamagePercent; // 0x22F4(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_354C[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class APrimalStructureItemContainer_SupplyCrate> LinkedSupplyCrate;                                 // 0x2300(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        UntamedPoopTimeMinInterval;                        // 0x2308(0x4)(EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        UntamedPoopTimeMaxInterval;                        // 0x230C(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MeleeHarvestDamageMultiplier;                      // 0x2310(0x4)(Edit, ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AllowRidingMaxDistance;                            // 0x2314(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        UntamedPoopTimeCache;                              // 0x2318(0x4)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	uint8                                        Pad_354E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                BaseEggClass;                                      // 0x2320(0x8)(BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        EggItemsToSpawn;                                   // 0x2328(0x10)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                EggWeightsToSpawn;                                 // 0x2338(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        FertilizedEggItemsToSpawn;                         // 0x2348(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                FertilizedEggWeightsToSpawn;                       // 0x2358(0x10)(Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        EggChanceToSpawnUnstasis;                          // 0x2368(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        EggIntervalBetweenUnstasisChances;                 // 0x236C(0x4)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        EggRangeMaximumNumberFromSameDinoType;             // 0x2370(0x4)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        EggMaximumNumberFromSameDinoType;                  // 0x2374(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        EggRangeMaximumNumber;                             // 0x2378(0x4)(BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        EggMaximumNumber;                                  // 0x237C(0x4)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EggSpawnSocketName;                                // 0x2380(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          EggLayingAnimation;                                // 0x2388(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        UntamedWalkingSpeedModifier;                       // 0x2390(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedWalkingSpeedModifier;                         // 0x2394(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        UntamedRunningSpeedModifier;                       // 0x2398(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedRunningSpeedModifier;                         // 0x239C(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                RandomColorSetsMale;                               // 0x23A0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                RandomColorSetsFemale;                             // 0x23A8(0x8)(ConstParm, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SpawnerColorSets;                                  // 0x23B0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         RiderAnimOverride;                                 // 0x23B8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         TurningRightRiderAnimOverride;                     // 0x23C0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         TurningLeftRiderAnimOverride;                      // 0x23C8(0x8)(BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         LatchedRiderAnimOverride;                          // 0x23D0(0x8)(Edit, ConstParm, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         RiderMoveAnimOverride;                             // 0x23D8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RidingAnimSpeedFactor;                             // 0x23E0(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3553[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          StartRidingAnimOverride;                           // 0x23E8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          StopRidingAnimOverride;                            // 0x23F0(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TargetingTeamNameOverride;                         // 0x23F8(0x8)(BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraTamedSpeedMultiplier;                         // 0x2400(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraUnTamedSpeedMultiplier;                       // 0x2404(0x4)(Edit, ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       LastEggSpawnChanceTime;                            // 0x2408(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	class FName                                  OriginalNPCVolumeName;                             // 0x2410(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        OutsideOriginalNPCVolumeStasisDestroyInterval;     // 0x2418(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        StasisedDestroyInterval;                           // 0x241C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedAllowNamingTime;                              // 0x2420(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MovementSpeedScalingRotationRatePower;             // 0x2424(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AttackNoStaminaTorpidityMultiplier;                // 0x2428(0x4)(Edit, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DecayDestructionPeriod;                            // 0x242C(0x4)(ConstParm, BlueprintVisible, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	double                                       TamedAtTime;                                       // 0x2430(0x8)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	double                                       LastInAllyRangeTime;                               // 0x2438(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	double                                       LastInAllyRangeSerialized;                         // 0x2440(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3555[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class APrimalStructure*>              LatchedOnStructures;                               // 0x2458(0x10)(BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UPrimalDinoSettings*                   MyDinoSettingsCDO;                                 // 0x2468(0x8)(ConstParm, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3557[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LocInterpolationSnapDistance;                      // 0x2474(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3558[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        HUDScaleMultiplier;                                // 0x2488(0x4)(Edit, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HUDTextScaleMultiplier;                            // 0x248C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedCorpseLifespan;                               // 0x2490(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MateBoostDamageReceiveMultiplier;                  // 0x2494(0x4)(Edit, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MateBoostDamageGiveMultiplier;                     // 0x2498(0x4)(Edit, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MateBoostRange;                                    // 0x249C(0x4)(Edit, ExportObject, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DinoNameTag;                                       // 0x24A0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AShooterPlayerController*              AttackMyTargetForPlayerController;                 // 0x24A8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RidingAttackExtraVelocityDelay;                    // 0x24B0(0x4)(Edit, ConstParm, BlueprintVisible, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        StepDamageRadialDamageInterval;                    // 0x24B4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        StepDamageRadialDamageExtraRadius;                 // 0x24B8(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        StepDamageRadialDamageAmountGeneral;               // 0x24BC(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        StepDamageRadialDamageAmountHarvestable;           // 0x24C0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_355C[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                StepHarvestableDamageType;                         // 0x24D0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        StepDamageFootDamageInterval;                      // 0x24D8(0x4)(Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        StepDamageFootDamageRadius;                        // 0x24DC(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        StepDamageFootDamageAmount;                        // 0x24E0(0x4)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_355E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          StepDamageFootDamageSockets;                       // 0x24E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DurationBeforeMovingStuckPawn;                     // 0x24F8(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3560[0x24];                                    // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          StartledAnimationRightDefault;                     // 0x2520(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          StartledAnimationLeft;                             // 0x2528(0x8)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UAnimMontage*>                  StartledAnimations;                                // 0x2530(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          FlyingStartledAnimation;                           // 0x2540(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RandomPlayStartledAnimIntervalMin;                 // 0x2548(0x4)(Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RandomPlayStartledAnimIntervalMax;                 // 0x254C(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        StartledAnimationCooldown;                         // 0x2550(0x4)(OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DefaultActivateAttackRangeOffset;                  // 0x2554(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CorpseTargetingMultiplier;                         // 0x2558(0x4)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3562[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        CorpseLifespanNonRelevant;                         // 0x2574(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPUnstasisConsumeFood : 1;                     // Mask: 0x1, PropSize: 0x10x2578(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnDinoStartled : 1;                          // Mask: 0x2, PropSize: 0x10x2578(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemoteDinoConsumesStaminaWhileRunning : 1;        // Mask: 0x4, PropSize: 0x10x2578(0x1)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIncrementedZoneManagerDirectLink : 1;             // Mask: 0x8, PropSize: 0x10x2578(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_26D : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3565[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class ANPCZoneManager*                       DirectLinkNPCZoneManager;                          // 0x2580(0x8)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3566[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinStaminaForRider;                                // 0x2590(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LoseStaminaWithRiderRate;                          // 0x2594(0x4)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FollowingRunDistance;                              // 0x2598(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDinoKillerTransferWeightPercent;                // 0x259C(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        NPCZoneVolumeCountWeight;                          // 0x25A0(0x4)(ConstParm, BlueprintVisible, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3568[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               FloatingHUDTextWorldOffset;                        // 0x25A8(0x18)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3569[0x78];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                RepairRequirementsItem;                            // 0x2638(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_356B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RepairCheckInterval;                               // 0x2644(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RepairPercentPerInterval;                          // 0x2648(0x4)(ConstParm, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_356C[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               RiderCheckTraceOffset;                             // 0x2658(0x18)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               RiderEjectionImpulse;                              // 0x2670(0x18)(ConstParm, Net, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WakingTameAffinityDecreaseFoodPercentage;          // 0x2688(0x4)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WakingTameAllowFeedingFoodPercentage;              // 0x268C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WakingTameFoodAffinityMultiplier;                  // 0x2690(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CheckForWildAmbientHarvestingIntervalMin;          // 0x2694(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CheckForWildAmbientHarvestingIntervalMax;          // 0x2698(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_356E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          WildAmbientHarvestingAnimation;                    // 0x26A0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UAnimMontage*>                  WildAmbientHarvestingAnimations;                   // 0x26A8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        WildAmbientHarvestingComponentClasses;             // 0x26B8(0x10)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WildAmbientHarvestingRadius;                       // 0x26C8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_356F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        AbsoluteBaseLevel;                                 // 0x26D0(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3570[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FStatValuePair>                OverrideBaseStatLevelsOnSpawn;                     // 0x26D8(0x10)(Edit, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<enum class EPrimalCharacterStatusValue> OverrideStatPriorityOnSpawn;                       // 0x26E8(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TamedHarvestDamageType;                            // 0x26F8(0x8)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FDinoSaddleStruct                     SaddleStruct;                                      // 0x2700(0x20)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3571[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                StartChargingShake;                                // 0x2748(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                LightEndChargingShake;                             // 0x2750(0x8)(Edit, ExportObject, Net, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                HardEndChargingShake;                              // 0x2758(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ChargeBumpDamage;                                  // 0x2760(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3572[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ChargeBumpDamageType;                              // 0x2768(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ChargeBumpImpulse;                                 // 0x2770(0x4)(OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinChargeInterval;                                 // 0x2774(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerMountedLaunchFowardSpeed;                    // 0x2778(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerMountedLaunchUpSpeed;                        // 0x277C(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AttackOnLaunchMaximumTargetDistance;               // 0x2780(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        KeepFlightRemainingTime;                           // 0x2784(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          MountCharacterAnimation;                           // 0x2788(0x8)(Edit, ConstParm, ExportObject, Net, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          UnmountCharacterAnimation;                         // 0x2790(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          EndChargingAnimation;                              // 0x2798(0x8)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FlyingRunSpeedModifier;                            // 0x27A0(0x4)(ConstParm, BlueprintVisible, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ChargingAnimDelay;                                 // 0x27A4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RiderSocketName;                                   // 0x27A8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ChargingActivationRequiresStamina;                 // 0x27B0(0x4)(Edit, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ChargingActivationConsumesStamina;                 // 0x27B4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FlyerHardBreakingOverride;                         // 0x27B8(0x4)(Edit, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyScale;                                         // 0x27BC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BabySpeedMultiplier;                               // 0x27C0(0x4)(BlueprintReadOnly, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyPitchMultiplier;                               // 0x27C4(0x4)(Edit, BlueprintVisible, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyVolumeMultiplier;                              // 0x27C8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AActor>                 WanderAroundActor;                                 // 0x27CC(0x8)(BlueprintReadOnly, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WanderAroundActorMaxDistance;                      // 0x27D4(0x4)(Edit, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3573[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class APrimalStructure*>              SaddledStructures;                                 // 0x27E8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             BuffGivenToBasedCharacters;                        // 0x27F8(0x30)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class UPrimalItem>             DeathEssenceClass;                                 // 0x2828(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3574[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastUpdatedBabyAgeAtTime;                          // 0x2860(0x8)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	double                                       LastUpdatedGestationAtTime;                        // 0x2868(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       LastUpdatedMatingAtTime;                           // 0x2870(0x8)(ConstParm, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance)
	float                                        BabyAgeSpeed;                                      // 0x2878(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraBabyAgeSpeedMultiplier;                       // 0x287C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FemaleMatingRangeAddition;                         // 0x2880(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FemaleMatingTime;                                  // 0x2884(0x4)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       NextAllowedMatingTime;                             // 0x2888(0x8)(Edit, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MatingProgress;                                    // 0x2890(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3576[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastMatingNotificationTime;                        // 0x2898(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class APrimalDinoCharacter*                  MatingWithDino;                                    // 0x28A0(0x8)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          MatingAnimationMale;                               // 0x28A8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3577[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class USkeletalMesh*                         DefaultHarnessSaddleMesh;                          // 0x28C0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USkeletalMesh*                         DefaultCarriageSaddleMesh;                         // 0x28C8(0x8)(Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        GestationEggNumberOfLevelUpPointsApplied[0xC];     // 0x28D0(0xC)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        GestationEggNumberOfMutationsApplied[0xC];         // 0x28DC(0xC)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GestationEggTamedIneffectivenessModifier;          // 0x28E8(0x4)(Edit, ConstParm, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        GestationEggColorSetIndices[0x6];                  // 0x28EC(0x6)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3579[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        NewFemaleMinTimeBetweenMating;                     // 0x28F4(0x4)(BlueprintVisible, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        NewFemaleMaxTimeBetweenMating;                     // 0x28F8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_357B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class APrimalBuff>>     DefaultTamedBuffs;                                 // 0x2900(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_357D[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        HyperThermiaInsulation;                            // 0x2940(0x4)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HypoThermiaInsulation;                             // 0x2944(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InsulationRange;                                   // 0x2948(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GangOverlapRange;                                  // 0x294C(0x4)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GangDamageResistance;                              // 0x2950(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GangDamage;                                        // 0x2954(0x4)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxGangCount;                                      // 0x2958(0x4)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        GangCount;                                         // 0x295C(0x4)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_357E[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        WildRandomScale;                                   // 0x2988(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HeldJumpSlowFallingGravityZScale;                  // 0x298C(0x4)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          SlowFallingAnim;                                   // 0x2990(0x8)(Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SlowFallingStaminaCostPerSecond;                   // 0x2998(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        NoRiderRotationModifier;                           // 0x299C(0x4)(ConstParm, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RiderFPVCameraUseSocketName;                       // 0x29A0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RiderLatchedFPVCameraUseSocketName;                // 0x29A8(0x8)(Edit, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PassengerFPVCameraRootSocket;                      // 0x29B0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          FPVRiderBoneNamesToHide;                           // 0x29B8(0x10)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraRunningSpeedModifier;                         // 0x29C8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ScaleExtraRunningSpeedModifierMin;                 // 0x29CC(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ScaleExtraRunningSpeedModifierMax;                 // 0x29D0(0x4)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ScaleExtraRunningSpeedModifierSpeed;               // 0x29D4(0x4)(ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LastHigherScaleExtraRunningSpeedValue;             // 0x29D8(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3581[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastHigherScaleExtraRunningSpeedTime;              // 0x29E0(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSimulateRootMotion : 1;                           // Mask: 0x1, PropSize: 0x10x29E8(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideStencilAllianceForTarget : 1;        // Mask: 0x2, PropSize: 0x10x29E8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsScout : 1;                                      // Mask: 0x4, PropSize: 0x10x29E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableHighQualityAIVolumeLedgeChecking : 1;      // Mask: 0x8, PropSize: 0x10x29E8(0x1)(Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoHighQualityLedgeChecking : 1;                   // Mask: 0x10, PropSize: 0x10x29E8(0x1)(Edit, BlueprintReadOnly, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_26E : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3582[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RiderMovementSpeedScalingRotationRatePowerMultiplier; // 0x29EC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HighQualityLedgeDetectionExtraTraceDistance;       // 0x29F0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyDoStepDamageWhenRunning : 1;                  // Mask: 0x1, PropSize: 0x10x29F4(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_26F : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bPreventPlatformSaddleMultiFloors : 1;             // Mask: 0x4, PropSize: 0x10x29F4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventMountedDinoMeshHiding : 1;                 // Mask: 0x8, PropSize: 0x10x29F4(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsePlayerMountedCarryingDinoAnimation : 1;        // Mask: 0x10, PropSize: 0x10x29F4(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventRotationRateModifier : 1;                  // Mask: 0x20, PropSize: 0x10x29F4(0x1)(Edit, ConstParm, ExportObject, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bStepDamageFoliageOnly : 1;                        // Mask: 0x40, PropSize: 0x10x29F4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventUntamedRun : 1;                            // Mask: 0x80, PropSize: 0x10x29F4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowTogglingPublicSeating : 1;                   // Mask: 0x1, PropSize: 0x10x29F5(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowPublicSeating : 1;                           // Mask: 0x2, PropSize: 0x10x29F5(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowWaterSurfaceExtraJump : 1;                   // Mask: 0x4, PropSize: 0x10x29F5(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseVelocityForRequestedMoveIfStuck : 1;           // Mask: 0x8, PropSize: 0x10x29F5(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDoAttack : 1;                                // Mask: 0x10, PropSize: 0x10x29F5(0x1)(Edit, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bStepDamageNonFoliageWithoutRunning : 1;           // Mask: 0x20, PropSize: 0x10x29F5(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bStepDamageAllTargetables : 1;                     // Mask: 0x40, PropSize: 0x10x29F5(0x1)(BlueprintReadOnly, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDamageNonFoliageFeetSocketsOnly : 1;              // Mask: 0x80, PropSize: 0x10x29F5(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRiderDontBeBlockedByPawnMesh : 1;                 // Mask: 0x1, PropSize: 0x10x29F6(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseExtendedUnstasisCheck : 1;                     // Mask: 0x2, PropSize: 0x10x29F6(0x1)(Edit, Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_270 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAllowDinoAutoConsumeInventoryFood : 1;            // Mask: 0x8, PropSize: 0x10x29F6(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceNoCharacterStatusComponentTick : 1;          // Mask: 0x10, PropSize: 0x10x29F6(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsRaidDino : 1;                                   // Mask: 0x20, PropSize: 0x10x29F6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWildIgnoredByAutoTurrets : 1;                     // Mask: 0x40, PropSize: 0x10x29F6(0x1)(Edit, ConstParm, BlueprintVisible, Net, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWildAllowTargetingNeutralStructures : 1;          // Mask: 0x80, PropSize: 0x10x29F6(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoStepDamageTamedOnly : 1;                        // Mask: 0x1, PropSize: 0x10x29F7(0x1)(ExportObject, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bStepDamageNonFoliageTamedOnly : 1;                // Mask: 0x2, PropSize: 0x10x29F7(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_271 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bForceWildDeathInventoryDeposit : 1;               // Mask: 0x8, PropSize: 0x10x29F7(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsCarryingCharacter : 1;                          // Mask: 0x10, PropSize: 0x10x29F7(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsCarryingPassenger : 1;                          // Mask: 0x20, PropSize: 0x10x29F7(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanTakePassenger : 1;                        // Mask: 0x40, PropSize: 0x10x29F7(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForwardPlatformSaddleStructureDamageToDino : 1;   // Mask: 0x80, PropSize: 0x10x29F7(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ForwardPlatformSaddleStructureDamageToDinoMultiplier; // 0x29F8(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ForwardPlatformSaddleStructurePointDamageToBone;   // 0x29FC(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3586[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        LoadDestroyWildDinosUnderVersion;                  // 0x2A08(0x4)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        SaveDestroyWildDinosUnderVersion;                  // 0x2A0C(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AllowWaterSurfaceExtraJumpStaminaCost;             // 0x2A10(0x4)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3587[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            PlayKillLocalSound;                                // 0x2A18(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3589[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        TribeGroupPetOrderingRank;                         // 0x2A40(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        TribeGroupPetRidingRank;                           // 0x2A41(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        FollowStoppingDistance;                            // 0x2A42(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_358A[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ImprinterName;                                     // 0x2A48(0x10)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                ImprinterPlayerUniqueNetId;                        // 0x2A58(0x10)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyMinCuddleInterval;                             // 0x2A68(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyMaxCuddleInterval;                             // 0x2A6C(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyCuddleGracePeriod;                             // 0x2A70(0x4)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyCuddleLoseImpringQualityPerSecond;             // 0x2A74(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyCuddleWalkDistance;                            // 0x2A78(0x4)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_358C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               BabyCuddleWalkStartingLocation;                    // 0x2A80(0x18)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       BabyNextCuddleTime;                                // 0x2A98(0x8)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class EBabyCuddleType                   BabyCuddleType;                                    // 0x2AA0(0x1)(Edit, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_358D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                BabyCuddleFood;                                    // 0x2AA8(0x8)(Edit, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          BabyCuddledAnimation;                              // 0x2AB0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        MyBabyCuddleFoodTypes;                             // 0x2AB8(0x10)(ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RiderMaxImprintingQualityDamageReduction;          // 0x2AC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RiderMaxImprintingQualityDamageMultiplier;         // 0x2ACC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyImprintingQualityTotalMaturationTime;          // 0x2AD0(0x4)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WakingTameMaxDistance;                             // 0x2AD4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeBetweenTamedWakingEatAnimations;               // 0x2AD8(0x4)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3590[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_272 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bDontPlayAttackingMusic : 1;                       // Mask: 0x2, PropSize: 0x10x2AE8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceIgnoreRagdollHarvesting : 1;                 // Mask: 0x4, PropSize: 0x10x2AE8(0x1)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPModifyAimOffsetTargetLocation : 1;              // Mask: 0x8, PropSize: 0x10x2AE8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPModifyAimOffsetNoTarget : 1;                    // Mask: 0x10, PropSize: 0x10x2AE8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsVehicle : 1;                                    // Mask: 0x20, PropSize: 0x10x2AE8(0x1)(BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bDisallowPostNetReplication : 1;                   // Mask: 0x40, PropSize: 0x10x2AE8(0x1)(Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTakingOff : 1;                                    // Mask: 0x80, PropSize: 0x10x2AE8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventMating : 1;                                // Mask: 0x1, PropSize: 0x10x2AE9(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAttackStopsRotation : 1;                          // Mask: 0x2, PropSize: 0x10x2AE9(0x1)(Edit, ExportObject, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bFlyerDinoAllowBackwardsFlight : 1;                // Mask: 0x4, PropSize: 0x10x2AE9(0x1)(ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlyerDinoAllowStrafing : 1;                       // Mask: 0x8, PropSize: 0x10x2AE9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreTargetingLiveUnriddenDinos : 1;             // Mask: 0x10, PropSize: 0x10x2AE9(0x1)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSleepedForceCreateInventory : 1;                  // Mask: 0x20, PropSize: 0x10x2AE9(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLocalForceNearbySkelMeshUpdate : 1;               // Mask: 0x40, PropSize: 0x10x2AE9(0x1)(Edit, ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlyerDisableEnemyTargetingMaxDeltaZ : 1;          // Mask: 0x80, PropSize: 0x10x2AE9(0x1)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsBossDino : 1;                                   // Mask: 0x1, PropSize: 0x10x2AEA(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTamedAIAllowSpecialAttacks : 1;                   // Mask: 0x2, PropSize: 0x10x2AEA(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTamedAIToggleSpecialAttacks : 1;                  // Mask: 0x4, PropSize: 0x10x2AEA(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_273 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bRepeatPrimaryAttack : 1;                          // Mask: 0x10, PropSize: 0x10x2AEA(0x1)(EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventUploading : 1;                             // Mask: 0x20, PropSize: 0x10x2AEA(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventHibernation : 1;                           // Mask: 0x40, PropSize: 0x10x2AEA(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRiderMovementLocked : 1;                          // Mask: 0x80, PropSize: 0x10x2AEA(0x1)(Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_274 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bNeutered : 1;                                     // Mask: 0x2, PropSize: 0x10x2AEB(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreAllWhistles : 1;                            // Mask: 0x4, PropSize: 0x10x2AEB(0x1)(BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDoHarvestAttack : 1;                         // Mask: 0x8, PropSize: 0x10x2AEB(0x1)(BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPModifyHarvestingQuantity : 1;                // Mask: 0x10, PropSize: 0x10x2AEB(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPModifyHarvestingWeightsArray : 1;            // Mask: 0x20, PropSize: 0x10x2AEB(0x1)(ConstParm, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_275 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        StepDamageFootDamageRunningMultiplier;             // 0x2AEC(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPModifyHarvestDamage : 1;                     // Mask: 0x1, PropSize: 0x10x2AF0(0x1)(EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideFloatingHUD : 1;                              // Mask: 0x2, PropSize: 0x10x2AF0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_276 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3595[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxRangeForWeaponTriggeredTooltip;                 // 0x2AF4(0x4)(Edit, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableHarvesting : 1;                            // Mask: 0x1, PropSize: 0x10x2AF8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDinoPostBeginPlay : 1;                       // Mask: 0x2, PropSize: 0x10x2AF8(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_277 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bFlyerDontGainImpulseOnSubmerged : 1;              // Mask: 0x8, PropSize: 0x10x2AF8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanAutodrag : 1;                             // Mask: 0x10, PropSize: 0x10x2AF8(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanDragCharacter : 1;                        // Mask: 0x20, PropSize: 0x10x2AF8(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowDraggingWhileFalling : 1;                    // Mask: 0x40, PropSize: 0x10x2AF8(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSingleplayerFreezePhysicsWhenNoTarget : 1;        // Mask: 0x80, PropSize: 0x10x2AF8(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDinoLevelOnDecriptiveName : 1;             // Mask: 0x1, PropSize: 0x10x2AF9(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_278 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsCloneDino : 1;                                  // Mask: 0x4, PropSize: 0x10x2AF9(0x1)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAdvancedAnimLerp : 1;                          // Mask: 0x8, PropSize: 0x10x2AF9(0x1)(Edit, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventWanderingUnderWater : 1;                   // Mask: 0x10, PropSize: 0x10x2AF9(0x1)(ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWildAllowFollowTamedTarget : 1;                   // Mask: 0x20, PropSize: 0x10x2AF9(0x1)(Edit, ConstParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowDamageSameTeamAndClass : 1;                  // Mask: 0x40, PropSize: 0x10x2AF9(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowsTurretMode : 1;                             // Mask: 0x80, PropSize: 0x10x2AF9(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRidingInTurretMode : 1;                      // Mask: 0x1, PropSize: 0x10x2AFA(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsInTurretMode : 1;                               // Mask: 0x2, PropSize: 0x10x2AFA(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPShouldCancelDoAttack : 1;                    // Mask: 0x4, PropSize: 0x10x2AFA(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPModifyDesiredRotation : 1;                   // Mask: 0x8, PropSize: 0x10x2AFA(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseLocalSpaceDesiredRotationWithRider : 1;        // Mask: 0x10, PropSize: 0x10x2AFA(0x1)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDesiredRotationIsLocalSpace : 1;             // Mask: 0x20, PropSize: 0x10x2AFA(0x1)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_279 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPOverrideCameraViewTarget : 1;                // Mask: 0x80, PropSize: 0x10x2AFA(0x1)(Edit, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsRobot : 1;                                      // Mask: 0x1, PropSize: 0x10x2AFB(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_27A : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        StepRadialDamageOffset;                            // 0x2AFC(0x4)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_CustomModifier_RotationRate : 1;            // Mask: 0x1, PropSize: 0x10x2B00(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_CustomModifier_MaxSpeed : 1;                // Mask: 0x2, PropSize: 0x10x2B00(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OnStartLandingNotify : 1;                   // Mask: 0x4, PropSize: 0x10x2B00(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_27B : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseAttackForceWalkDistanceMultiplier : 1;         // Mask: 0x10, PropSize: 0x10x2B00(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePerFrameTicking : 1;                         // Mask: 0x20, PropSize: 0x10x2B00(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHadStaticBase : 1;                                // Mask: 0x40, PropSize: 0x10x2B00(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	uint8                                        bNoKillXP : 1;                                     // Mask: 0x80, PropSize: 0x10x2B00(0x1)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreAllyLook : 1;                               // Mask: 0x1, PropSize: 0x10x2B01(0x1)(BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBabyInitiallyUnclaimed : 1;                       // Mask: 0x2, PropSize: 0x10x2B01(0x1)(Edit, ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPForceTurretFastTargeting : 1;                // Mask: 0x4, PropSize: 0x10x2B01(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_27C : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bSuppressWakingTameMessage : 1;                    // Mask: 0x10, PropSize: 0x10x2B01(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventFlyerLanding : 1;                          // Mask: 0x20, PropSize: 0x10x2B01(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_27D : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bDisableCollisionWithDinosWhenFlying : 1;          // Mask: 0x1, PropSize: 0x10x2B02(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowTrapping : 1;                                // Mask: 0x2, PropSize: 0x10x2B02(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventWildTrapping : 1;                          // Mask: 0x4, PropSize: 0x10x2B02(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsTrapTamed : 1;                                  // Mask: 0x8, PropSize: 0x10x2B02(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreDestroyOnRapidDeath : 1;                    // Mask: 0x10, PropSize: 0x10x2B02(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventFallingBumpCheck : 1;                      // Mask: 0x20, PropSize: 0x10x2B02(0x1)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDestroyingDino : 1;                             // Mask: 0x40, PropSize: 0x10x2B02(0x1)(ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheckBPAllowClaiming : 1;                         // Mask: 0x80, PropSize: 0x10x2B02(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBlueprintExtraBabyScale : 1;                   // Mask: 0x1, PropSize: 0x10x2B03(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventNeuter : 1;                                // Mask: 0x2, PropSize: 0x10x2B03(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetDragSocketName : 1;                       // Mask: 0x4, PropSize: 0x10x2B03(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetDragSocketDinoName : 1;                   // Mask: 0x8, PropSize: 0x10x2B03(0x1)(Edit, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetLookOffsetSocketName : 1;                 // Mask: 0x10, PropSize: 0x10x2B03(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTargetEverythingIncludingSameTeamInPVE : 1;       // Mask: 0x20, PropSize: 0x10x2B03(0x1)(BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_27E : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        ForcePawnBigPushingForTime;                        // 0x2B04(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceUsePhysicalFootSurfaceTrace : 1;             // Mask: 0x1, PropSize: 0x10x2B08(0x1)(BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OnPostNetReplication : 1;                   // Mask: 0x2, PropSize: 0x10x2B08(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPassiveFlee : 1;                                  // Mask: 0x4, PropSize: 0x10x2B08(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_27F : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bOnlyTargetConscious : 1;                          // Mask: 0x10, PropSize: 0x10x2B08(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPManagedFPVViewLocationNoRider : 1;              // Mask: 0x20, PropSize: 0x10x2B08(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideSaddleInFPV : 1;                              // Mask: 0x40, PropSize: 0x10x2B08(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventCloning : 1;                               // Mask: 0x80, PropSize: 0x10x2B08(0x1)(EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventStasisOnDedi : 1;                          // Mask: 0x1, PropSize: 0x10x2B09(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysCheckForFloor : 1;                          // Mask: 0x2, PropSize: 0x10x2B09(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysCheckForFalling : 1;                        // Mask: 0x4, PropSize: 0x10x2B09(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowCarryWaterDinos : 1;                    // Mask: 0x8, PropSize: 0x10x2B09(0x1)(BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_AllowWalkableSlopeOverride : 1;             // Mask: 0x10, PropSize: 0x10x2B09(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_CanFly : 1;                                 // Mask: 0x20, PropSize: 0x10x2B09(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OverrideBasedCharactersCameraInterpSpeed : 1; // Mask: 0x40, PropSize: 0x10x2B09(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideFloatingHUDLocation : 1;             // Mask: 0x80, PropSize: 0x10x2B09(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInterceptPlayerEmotes : 1;                        // Mask: 0x1, PropSize: 0x10x2B0A(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_ShouldPreventBasedCharactersCameraInterpolation : 1; // Mask: 0x2, PropSize: 0x10x2B0A(0x1)(Edit, ConstParm, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRidingIsSeperateUnstasisCaster : 1;               // Mask: 0x4, PropSize: 0x10x2B0A(0x1)(ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsOceanManagerDino : 1;                           // Mask: 0x8, PropSize: 0x10x2B0A(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsSaveProfilingDino : 1;                          // Mask: 0x10, PropSize: 0x10x2B0A(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_280 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_359B[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        WanderRadiusMultiplier;                            // 0x2B0C(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        DisableCameraShakes : 1;                           // Mask: 0x1, PropSize: 0x10x2B10(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OverrideCarriedCharacterTransform : 1;      // Mask: 0x2, PropSize: 0x10x2B10(0x1)(BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OnBasedPawnNotifies : 1;                    // Mask: 0x4, PropSize: 0x10x2B10(0x1)(ConstParm, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesWaterWalking : 1;                             // Mask: 0x8, PropSize: 0x10x2B10(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsMek : 1;                                        // Mask: 0x10, PropSize: 0x10x2B10(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsEnforcer : 1;                                   // Mask: 0x20, PropSize: 0x10x2B10(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsExtinctionTitan : 1;                            // Mask: 0x40, PropSize: 0x10x2B10(0x1)(Edit, ConstParm, Net, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasInvisiableSaddle : 1;                          // Mask: 0x80, PropSize: 0x10x2B10(0x1)(ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseWildDinoMapMultipliers : 1;                    // Mask: 0x1, PropSize: 0x10x2B11(0x1)(ConstParm, ExportObject, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreFlierRidingRestrictions : 1;                // Mask: 0x2, PropSize: 0x10x2B11(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRotatingUpdatesDinoIK : 1;                        // Mask: 0x4, PropSize: 0x10x2B11(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OverrideRiderCameraCollisionSweep : 1;      // Mask: 0x8, PropSize: 0x10x2B11(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDrawHealthBar : 1;                                // Mask: 0x10, PropSize: 0x10x2B11(0x1)(Edit, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_281 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_359F[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        HealthBarMaxDrawDistance;                          // 0x2B14(0x4)(BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseShoulderMountedLaunch : 1;                     // Mask: 0x1, PropSize: 0x10x2B18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsePreciseLaunching : 1;                          // Mask: 0x2, PropSize: 0x10x2B18(0x1)(Edit, ConstParm, ExportObject, Net, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_282 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAllowInvalidTameVersion : 1;                      // Mask: 0x10, PropSize: 0x10x2B18(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowPvECarry : 1;                           // Mask: 0x20, PropSize: 0x10x2B18(0x1)(Edit, ConstParm, BlueprintReadOnly, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUnderwaterMating : 1;                             // Mask: 0x40, PropSize: 0x10x2B18(0x1)(Edit, ExportObject, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBabyPreventExitingWater : 1;                      // Mask: 0x80, PropSize: 0x10x2B18(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCheckSeven : 1;                              // Mask: 0x1, PropSize: 0x10x2B19(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventExportDino : 1;                            // Mask: 0x2, PropSize: 0x10x2B19(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventPassengerFPV : 1;                          // Mask: 0x4, PropSize: 0x10x2B19(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_283 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_35A0[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AIDinoForceActiveUntasisingRange;                  // 0x2B1C(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WildRunningRotationRateModifier;                   // 0x2B20(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedRunningRotationRateModifier;                  // 0x2B24(0x4)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedSwimmingRotationRateModifier;                 // 0x2B28(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WildSwimmingRotationRateModifier;                  // 0x2B2C(0x4)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class ANPCZoneVolume>         HardLimitWildDinoToVolume;                         // 0x2B30(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AVolume>                WildLimitTargetVolume;                             // 0x2B38(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RiderFlyingRotationRateModifier;                   // 0x2B40(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        NoRiderFlyingRotationRateModifier;                 // 0x2B44(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AICombatRotationRateModifier;                      // 0x2B48(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WalkingRotationRateModifier;                       // 0x2B4C(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EFilterInterpolationType          MountedBlendFilterSmoothType;                      // 0x2B50(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EFilterInterpolationType          UnMountedBlendFilterSmoothType;                    // 0x2B51(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_35A1[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SetAttackTargetTraceWidth;                         // 0x2B58(0x4)(OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_35A2[0x1C];                                    // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          PlayerMountedCarryAnimation;                       // 0x2B78(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnMountStateChanged : 1;                     // Mask: 0x1, PropSize: 0x10x2B80(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHandleUseButtonPressBP : 1;                       // Mask: 0x2, PropSize: 0x10x2B80(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGlideWhenFalling : 1;                             // Mask: 0x4, PropSize: 0x10x2B80(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGlideWhenMounted : 1;                             // Mask: 0x8, PropSize: 0x10x2B80(0x1)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowBackwardsMovement : 1;                  // Mask: 0x10, PropSize: 0x10x2B80(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventBackwardsWalking : 1;                      // Mask: 0x20, PropSize: 0x10x2B80(0x1)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupplyPlayerMountedCarryAnimation : 1;            // Mask: 0x40, PropSize: 0x10x2B80(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowMountedCarryRunning : 1;                // Mask: 0x80, PropSize: 0x10x2B80(0x1)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanLatch : 1;                                     // Mask: 0x1, PropSize: 0x10x2B81(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsLatched : 1;                                    // Mask: 0x2, PropSize: 0x10x2B81(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsLatchedDownward : 1;                            // Mask: 0x4, PropSize: 0x10x2B81(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsLatching : 1;                                   // Mask: 0x8, PropSize: 0x10x2B81(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRotateToFaceLatchingObject : 1;                   // Mask: 0x10, PropSize: 0x10x2B81(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLimitRiderYawOnLatched : 1;                       // Mask: 0x20, PropSize: 0x10x2B81(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanRideLatched : 1;                               // Mask: 0x40, PropSize: 0x10x2B81(0x1)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowMountedWeaponry : 1;                         // Mask: 0x80, PropSize: 0x10x2B81(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bKeepAffinityOnDamageRecievedWakingTame : 1;       // Mask: 0x1, PropSize: 0x10x2B82(0x1)(Edit, Net, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPFedWakingTameEvent : 1;                      // Mask: 0x2, PropSize: 0x10x2B82(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceRiderDrawCrosshair : 1;                      // Mask: 0x4, PropSize: 0x10x2B82(0x1)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDrawHUD : 1;                                 // Mask: 0x8, PropSize: 0x10x2B82(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDrawHUDWithoutRecentlyRendered : 1;          // Mask: 0x10, PropSize: 0x10x2B82(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideFloatingName : 1;                             // Mask: 0x20, PropSize: 0x10x2B82(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanTargetVehicles : 1;                            // Mask: 0x40, PropSize: 0x10x2B82(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRidingRequiresTamed : 1;                          // Mask: 0x80, PropSize: 0x10x2B82(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSuppressDeathNotification : 1;                    // Mask: 0x1, PropSize: 0x10x2B83(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCustomHealthBarColor : 1;                      // Mask: 0x2, PropSize: 0x10x2B83(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseOnUpdateMountedDinoMeshHiding : 1;             // Mask: 0x4, PropSize: 0x10x2B83(0x1)(Net, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPInterceptTurnInputEvents : 1;                // Mask: 0x8, PropSize: 0x10x2B83(0x1)(BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPInterceptMoveInputEvents : 1;                // Mask: 0x10, PropSize: 0x10x2B83(0x1)(Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPInterceptMoveInputEventsEvenIfZero : 1;      // Mask: 0x20, PropSize: 0x10x2B83(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustAttackIndex : 1;                       // Mask: 0x40, PropSize: 0x10x2B83(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheckBPAllowCarryCharacter : 1;                   // Mask: 0x80, PropSize: 0x10x2B83(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnEndCharging : 1;                           // Mask: 0x1, PropSize: 0x10x2B84(0x1)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyMateBoostChanged : 1;                  // Mask: 0x2, PropSize: 0x10x2B84(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCarriedDinoBabyRescaled : 1;                 // Mask: 0x4, PropSize: 0x10x2B84(0x1)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_284 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_35B7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        HealthBarOffsetY;                                  // 0x2B88(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_35B9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AMissionType*                          OwnerMission;                                      // 0x2B90(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowBackwardsMovementWithNoRider : 1;       // Mask: 0x1, PropSize: 0x10x2B98(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsCorrupted : 1;                                  // Mask: 0x2, PropSize: 0x10x2B98(0x1)(OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsHordeDino : 1;                                  // Mask: 0x4, PropSize: 0x10x2B98(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideHealthBarOffset : 1;                    // Mask: 0x8, PropSize: 0x10x2B98(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDropWildEggsWithoutMateBoost : 1;                 // Mask: 0x10, PropSize: 0x10x2B98(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsTemporaryMissionDino : 1;                       // Mask: 0x20, PropSize: 0x10x2B98(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePreventInventoryAccess : 1;                  // Mask: 0x40, PropSize: 0x10x2B98(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowWildRunningWithoutTarget : 1;                // Mask: 0x80, PropSize: 0x10x2B98(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsBed : 1;                                        // Mask: 0x1, PropSize: 0x10x2B99(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetTargetingDesirability : 1;                // Mask: 0x2, PropSize: 0x10x2B99(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysAllowStrafing : 1;                          // Mask: 0x4, PropSize: 0x10x2B99(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowTamedTickEggLay : 1;                    // Mask: 0x8, PropSize: 0x10x2B99(0x1)(ConstParm, BlueprintVisible, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasBuffPreventingUploading : 1;                   // Mask: 0x10, PropSize: 0x10x2B99(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableHarvestHealthGain : 1;                     // Mask: 0x20, PropSize: 0x10x2B99(0x1)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemainLatchedOnClearRider : 1;                    // Mask: 0x40, PropSize: 0x10x2B99(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_285 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_35C4[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LimitRiderYawOnLatchedRange;                       // 0x2B9C(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LatchingDistanceLimit;                             // 0x2BA0(0x4)(EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LatchingInitialYaw;                                // 0x2BA4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LatchingInitialPitch;                              // 0x2BA8(0x4)(Edit, ConstParm, ExportObject, Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LatchingInterpolatedPitch;                         // 0x2BAC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LatchedFirstPersonViewAngle;                       // 0x2BB0(0x4)(ConstParm, BlueprintVisible, ExportObject, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LatchingCameraInterpolationSpeed;                  // 0x2BB4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TargetLatchingInitialYaw;                          // 0x2BB8(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentStrafeMagnitude;                            // 0x2BBC(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GainStaminaWhenLatchedRate;                        // 0x2BC0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AIAggroNotifyNeighborsClassesRangeScale;           // 0x2BC4(0x4)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        LastFrameMoveRight;                                // 0x2BC8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        LastFrameMoveLeft;                                 // 0x2BCC(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              LastRiderMountedWeaponRotation;                    // 0x2BD0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_35CD[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        DeathGivesDossierIndex;                            // 0x2BF0(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DeathGivesDossierDelay;                            // 0x2BF4(0x4)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         TameGivesDossier;                                  // 0x2BF8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_35CF[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator_NetQuantizeSmartPitch        LastMovementDesiredRotation_MountedWeaponry;       // 0x2C00(0x18)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SaddleRiderMovementTraceThruSocketName;            // 0x2C18(0x8)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SwimmingRunSpeedModifier;                          // 0x2C20(0x4)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RidingSwimmingRunSpeedModifier;                    // 0x2C24(0x4)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       DinoDownloadedAtTime;                              // 0x2C28(0x8)(Edit, ExportObject, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                UploadedFromServerName;                            // 0x2C30(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	class FString                                LatestUploadedFromServerName;                      // 0x2C40(0x10)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                PreviousUploadedFromServerName;                    // 0x2C50(0x10)(ConstParm, ExportObject, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                TamedOnServerName;                                 // 0x2C60(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	TArray<struct FDinoAncestorsEntry>           DinoAncestors;                                     // 0x2C70(0x10)(ConstParm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDinoAncestorsEntry>           DinoAncestorsMale;                                 // 0x2C80(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDinoAncestorsEntry>           NextBabyDinoAncestors;                             // 0x2C90(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDinoAncestorsEntry>           NextBabyDinoAncestorsMale;                         // 0x2CA0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxAllowedRandomMutations;                         // 0x2CB0(0x4)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        RandomMutationRolls;                               // 0x2CB4(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RandomMutationChance;                              // 0x2CB8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RandomMutationGivePoints;                          // 0x2CBC(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        RandomMutationsMale;                               // 0x2CC0(0x4)(ConstParm, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        RandomMutationsFemale;                             // 0x2CC4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        GestationEggRandomMutationsFemale;                 // 0x2CC8(0x4)(BlueprintVisible, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        GestationEggRandomMutationsMale;                   // 0x2CCC(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  WakingTameDistanceSocketName;                      // 0x2CD0(0x8)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        WakingTameConsumeEntireStackMaxQuantity;           // 0x2CD8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AttackPlayerDesirabilityMultiplier;                // 0x2CDC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_35E3[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        FlyerAttachedExplosiveSpeedMultiplier;             // 0x2CF0(0x4)(Edit, ExportObject, Net, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_35E4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDinoExtraDefaultItemList>     DinoExtraDefaultInventoryItems;                    // 0x2CF8(0x10)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DeathGiveEngramClasses;                            // 0x2D08(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SinglePlayerOutgoingDamageModifier;                // 0x2D18(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SinglePlayerIncomingDamageModifier;                // 0x2D1C(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_35E7[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          DinoLevelUpAnimationOverride;                      // 0x2D48(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DamageVictimClassesIgnoreBlockingGeomtryTrace;     // 0x2D50(0x10)(ConstParm, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_35E9[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        CloneBaseElementCost;                              // 0x2D70(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CloneElementCostPerLevel;                          // 0x2D74(0x4)(ConstParm, ExportObject, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        LastValidTameVersion;                              // 0x2D78(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        SavedLastValidTameVersion;                         // 0x2D7C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance)
	class FName                                  NonDedicatedFreezeDinoPhysicsIfLayerUnloaded;      // 0x2D80(0x8)(ExportObject, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               UnboardLocationTraceOffset;                        // 0x2D88(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AttackLineOfSightMeshSocketName;                   // 0x2DA0(0x8)(Edit, ExportObject, Net, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AttackForceWalkDistanceMultiplier;                 // 0x2DA8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AttackForceWalkRotationRateMultiplier;             // 0x2DAC(0x4)(Edit, ConstParm, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        OverrideDinoTameSoundIndex;                        // 0x2DB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_35F2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            SwimSound;                                         // 0x2DB8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SwimSoundIntervalPerHundredSpeed;                  // 0x2DC0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_35F3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                TamedAIControllerOverride;                         // 0x2DC8(0x8)(BlueprintReadOnly, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        PersonalTamedDinoCost;                             // 0x2DD0(0x4)(BlueprintVisible, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_35F5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       UploadEarliestValidTime;                           // 0x2DD8(0x8)(BlueprintReadOnly, Net, Parm, Config, GlobalConfig, SubobjectReference)
	float                                        StasisAutoDestroyInterval;                         // 0x2DE0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CarryCameraYawOffset;                              // 0x2DE4(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraDamageMultiplier;                             // 0x2DE8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraTamedBaseHealthMultiplier;                    // 0x2DEC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AttackRangeOffset;                                 // 0x2DF0(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoExtraIncreasePlayerCollisionActivationDistanceSquared; // 0x2DF4(0x4)(Edit, BlueprintReadOnly, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_35FC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBP_OnBasedPawnSetNotifies : 1;                 // Mask: 0x1, PropSize: 0x10x2DFC(0x1)(Edit, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_286 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_35FD[0xB];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OverrideApproachRadius;                            // 0x2E08(0x4)(BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TamedOverrideStasisComponentRadius;                // 0x2E0C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	class UStaticMesh*                           UniqueDino_MapMarkerMesh;                          // 0x2E10(0x8)(ConstParm, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                UniqueDino_MapMarkerColor;                         // 0x2E18(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideDinoMaxExperiencePoints;                   // 0x2E1C(0x4)(Edit, ConstParm, Net, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxDinoTameLevels;                                 // 0x2E20(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        DestroyTamesOverLevelClampOffset;                  // 0x2E24(0x4)(ExportObject, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        NursingTroughFoodEffectivenessMultiplier;          // 0x2E28(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_35FF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        ForceAllowFoodAsConsumableList;                    // 0x2E30(0x10)(Edit, ConstParm, Net, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        CustomReplicatedData;                              // 0x2E40(0x4)(ExportObject, BlueprintReadOnly, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3600[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnNotifySetRider;                                  // 0x2E48(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Config, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnNotifyClearRider;                                // 0x2E58(0x10)(Edit, BlueprintVisible, Config, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnSetMountedDino;                                  // 0x2E68(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnClearMountedDino;                                // 0x2E78(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnNotifyAddPassenger;                              // 0x2E88(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnNotifyClearPassenger;                            // 0x2E98(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       NextAllowedBedUseTime;                             // 0x2EA8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        UseBedCooldownTime;                                // 0x2EB0(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetOtherActorToIgnore : 1;                   // Mask: 0x1, PropSize: 0x10x2EB4(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_287 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        MutagenApplied : 1;                                // Mask: 0x4, PropSize: 0x10x2EB4(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowWhistleThroughRemoteDino : 1;                // Mask: 0x8, PropSize: 0x10x2EB4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceValidUnstasisCaster : 1;                     // Mask: 0x10, PropSize: 0x10x2EB4(0x1)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bControlledDinoPreventsPlayerInventory : 1;        // Mask: 0x20, PropSize: 0x10x2EB4(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDinoFPVDisableMotionBlur : 1;                     // Mask: 0x40, PropSize: 0x10x2EB4(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPaintingUseSaddle : 1;                            // Mask: 0x80, PropSize: 0x10x2EB4(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPaintingSupportSkins : 1;                         // Mask: 0x1, PropSize: 0x10x2EB5(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDinoDontOverrideControllerPitch : 1;              // Mask: 0x2, PropSize: 0x10x2EB5(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverridePassengerAdditiveAnim : 1;           // Mask: 0x4, PropSize: 0x10x2EB5(0x1)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReplicatePassengerTPVAim : 1;                     // Mask: 0x8, PropSize: 0x10x2EB5(0x1)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDisableClientGravitySim : 1;                 // Mask: 0x10, PropSize: 0x10x2EB5(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetTargetingDesirabilityForTurrets : 1;      // Mask: 0x20, PropSize: 0x10x2EB5(0x1)(Edit, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_288 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3603[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CarriedAsBabyPassengerSizeLimitOverride;           // 0x2EB8(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MutagenBaseCost;                                   // 0x2EBC(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        PaintTextureResolution;                            // 0x2EC0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          PaintingAllowedUVRanges;                           // 0x2EC4(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3604[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnFlyerStartLanding;                               // 0x2EE0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnFlyerLanded;                                     // 0x2EF0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnFlyerLandingInterrupted;                         // 0x2F00(0x10)(Edit, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyDrawFloatingHUDAsLocalPlayerController;       // 0x2F10(0x1)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHasPlayerController;                              // 0x2F11(0x1)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3605[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UStaticMeshComponent*                  CopyDinoSettingsRangeMesh;                         // 0x2F18(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        GestationGenderOverride;                           // 0x2F20(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3606[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPOverrideIsSubmergedForWaterTargeting : 1;    // Mask: 0x1, PropSize: 0x10x2F39(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_289 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3607[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalInventoryComponent*             SecondaryInventoryComponent;                       // 0x2F40(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowFlyerDinoSubmerging : 1;                     // Mask: 0x1, PropSize: 0x10x2F48(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventZeroingFlyerPitchWhenSwimming : 1;         // Mask: 0x2, PropSize: 0x10x2F48(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRiderDisableAimOffset : 1;                        // Mask: 0x4, PropSize: 0x10x2F48(0x1)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontForceUpdateRateOptimizations : 1;             // Mask: 0x8, PropSize: 0x10x2F48(0x1)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_28A : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	bool                                         bDisabledFromAscension;                            // 0x2F49(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3609[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RiddenStasisRangeMultiplier;                       // 0x2F4C(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                WildFollowingParentRef;                            // 0x2F50(0x8)(Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        WildFollowerRefs;                                  // 0x2F58(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FWildFollowerSpawnEntry>       OverwrittenWildFollowingDinoInfos;                 // 0x2F68(0x10)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ForcedWildBabyAge;                                 // 0x2F78(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsAWildFollowerKnownServerside : 1;               // Mask: 0x1, PropSize: 0x10x2F7C(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        AllowWildBabyTaming : 1;                           // Mask: 0x2, PropSize: 0x10x2F7C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsParentWildDino : 1;                             // Mask: 0x4, PropSize: 0x10x2F7C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_28B : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_360C[0xB];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       MaxTamedDinos_SoftTameLimit_MarkedForDeletionTime; // 0x2F88(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxTamedDinos_SoftTameLimit_CountdownForDeletionTimeCache; // 0x2F90(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCreatureIsImmuneToServerSoftTameLimitDestruction : 1; // Mask: 0x1, PropSize: 0x10x2F94(0x1)(Edit, ConstParm, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_28C : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIgnoreNPCCountVolumes : 1;                        // Mask: 0x8, PropSize: 0x10x2F94(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisablePathfinding : 1;                           // Mask: 0x10, PropSize: 0x10x2F94(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontOverrideToNavMeshStepHeight : 1;              // Mask: 0x20, PropSize: 0x10x2F94(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseDinoLimbWallAvoidance : 1;                     // Mask: 0x40, PropSize: 0x10x2F94(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysUpdateDinoLimbWallAvoidance : 1;            // Mask: 0x80, PropSize: 0x10x2F94(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUpdateDinoLimbWallAvoidance : 1;                  // Mask: 0x1, PropSize: 0x10x2F95(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheatPossessed : 1;                               // Mask: 0x2, PropSize: 0x10x2F95(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceTickingBehaviorTreeEveryFrame : 1;           // Mask: 0x4, PropSize: 0x10x2F95(0x1)(BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_28D : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3610[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               DinoLimbWallAvoidanceLastLocation;                 // 0x2F98(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              DinoLimbWallAvoidanceLastRotation;                 // 0x2FB0(0x18)(BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              DinoLimbWallAvoidanceLastAimRotation;              // 0x2FC8(0x18)(Edit, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UPrimalNavigationInvokerComponent*     NavigationInvokerComponent;                        // 0x2FE0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, GlobalConfig)
	float                                        DieIfLeftWaterSpawnCapsuleDepthMulti;              // 0x2FE8(0x4)(ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRestrictNonAlliedCarriedPlayerYaw : 1;            // Mask: 0x1, PropSize: 0x10x2FEC(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWildDinoAlsoUseInvisibleSaddle : 1;               // Mask: 0x2, PropSize: 0x10x2FEC(0x1)(Edit, ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_28E : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3612[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  RestrictNonAlliedCarriedPlayerYawSocket;           // 0x2FF0(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RideIcon;                                          // 0x2FF8(0x8)(Edit, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DriveIcon;                                         // 0x3000(0x8)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EquipSaddleToRideIcon;                             // 0x3008(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PassangerSeatsGenericIcon;                         // 0x3010(0x8)(Edit, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnablePublicSeatingIcon;                           // 0x3018(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisablePublicSeatingIcon;                          // 0x3020(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FlyingMountsDisabledIcon;                          // 0x3028(0x8)(ConstParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RequiresEngramToMountIcon;                         // 0x3030(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            OptionsIcon;                                       // 0x3038(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            BehaviourIcon;                                     // 0x3040(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PickupIcon;                                        // 0x3048(0x8)(ConstParm, ExportObject, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            NeuterIcon;                                        // 0x3050(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ExportIcon;                                        // 0x3058(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            AllowSpecialAttacksIcon;                           // 0x3060(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableSpecialAttacksIcon;                         // 0x3068(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableTurretModeIcon;                              // 0x3070(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableTurretModeIcon;                             // 0x3078(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            HideBoneIcon;                                      // 0x3080(0x8)(Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            UnhideBoneIcon;                                    // 0x3088(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RepairIcon;                                        // 0x3090(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, Transient, GlobalConfig)
	class UTexture2D*                            CantRepairIcon;                                    // 0x3098(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            RenameIcon;                                        // 0x30A0(0x8)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            DemolishIcon;                                      // 0x30A8(0x8)(BlueprintVisible, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            ImprintOnIcon;                                     // 0x30B0(0x8)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            WantsToCuddleIcon;                                 // 0x30B8(0x8)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            WantsToGoOnAWalkIcon;                              // 0x30C0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            WantsCareIcon;                                     // 0x30C8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FeedToComfortIcon;                                 // 0x30D0(0x8)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FeedToTameIcon;                                    // 0x30D8(0x8)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PutItemInLastSlotToTameIcon;                       // 0x30E0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PutTamingFoodInLastSlotToTameIcon;                 // 0x30E8(0x8)(EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DoesNotWantToBeTamedIcon;                          // 0x30F0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            NeedLevelToFeedIcon;                               // 0x30F8(0x8)(ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            WaitUntilHungryIcon;                               // 0x3100(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ClaimIcon;                                         // 0x3108(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            UnclaimIcon;                                       // 0x3110(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            HarvestSettingIcon;                                // 0x3118(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableResourceHarvestingIcon;                     // 0x3120(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableResourceHarvestingIcon;                      // 0x3128(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableVictimItemCollectionIcon;                   // 0x3130(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableVictimItemCollectionIcon;                    // 0x3138(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            OrderGroupSettingsIcon;                            // 0x3140(0x8)(EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            AddTameToGroupIcon;                                // 0x3148(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    AddTameToGroupSelectionIcons;                      // 0x3150(0x10)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RemoveTameFromGroupsIcon;                          // 0x3160(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    RemoveTameFromGroupSelectionIcons;                 // 0x3168(0x10)(ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            AddClassToGroupIcon;                               // 0x3178(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    AddClassToGroupSelectionIcons;                     // 0x3180(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    RemoveClassFromGroupSelectionIcons;                // 0x3190(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            StanceIcon;                                        // 0x31A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            StancePassiveFleeIcon;                             // 0x31A8(0x8)(Edit, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            StancePassiveIcon;                                 // 0x31B0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            StanceNeutralIcon;                                 // 0x31B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            StanceAggressiveIcon;                              // 0x31C0(0x8)(ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            StanceAttackTargetIcon;                            // 0x31C8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableAllyLookingIcon;                            // 0x31D0(0x8)(ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableAllyLookingIcon;                             // 0x31D8(0x8)(ConstParm, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableIgnoreGroupWhistlesIcon;                     // 0x31E0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableIgnoreGroupWhistlesIcon;                    // 0x31E8(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableMatingIcon;                                  // 0x31F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableMatingIcon;                                 // 0x31F8(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableWanderingIcon;                               // 0x3200(0x8)(ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableWanderingIcon;                              // 0x3208(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableFollowingIcon;                               // 0x3210(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableFollowingIcon;                              // 0x3218(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ChangeFollowDistanceIcon;                          // 0x3220(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FollowDistanceLowestIcon;                          // 0x3228(0x8)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FollowDistanceLowIcon;                             // 0x3230(0x8)(Edit, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FollowDistanceMediumIcon;                          // 0x3238(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FollowDistanceHighIcon;                            // 0x3240(0x8)(ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FollowDistanceHighestIcon;                         // 0x3248(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ShowCopySettingsVisualIcon;                        // 0x3250(0x8)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            HideCopySettingsVisualIcon;                        // 0x3258(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CopySettingsIcon;                                  // 0x3260(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CopySettingsInRangeIcon;                           // 0x3268(0x8)(ExportObject, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CopySettingsInRangeWithPinCodeIcon;                // 0x3270(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TargetingOptionsIcon;                              // 0x3278(0x8)(Edit, ConstParm, ExportObject, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TargetingRangeLowestIcon;                          // 0x3280(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TargetingRangeLowIcon;                             // 0x3288(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TargetingRangeMediumIcon;                          // 0x3290(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TargetingRangeHighIcon;                            // 0x3298(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TargetingRangeHighestIcon;                         // 0x32A0(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableOnlyTargetConsciousIcon;                     // 0x32A8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableOnlyTargetConsciousIcon;                    // 0x32B0(0x8)(Edit, ConstParm, ExportObject, Net, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TribeRankSettingsIcon;                             // 0x32B8(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    TribeOrderRankSelectionIcons;                      // 0x32C0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    TribeRidingRankSelectionIcons;                     // 0x32D0(0x10)(BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PathfollowingMaxSpeedModifer;                      // 0x32E0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3618[0x24];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        DinoArmorDurabilityScalingMultiplier;              // 0x3308(0x4)(ConstParm, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3619[0x114];                                   // Fixing Size After Last Property  > TateDumper <
	uint8                                        bDinoHasBonded : 1;                                // Mask: 0x1, PropSize: 0x10x3420(0x1)(ConstParm, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCuddleRequestRefreshed : 1;                       // Mask: 0x2, PropSize: 0x10x3420(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_28F : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_361A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bCheckBuffModifyAimOffsetNoTarget : 1;             // Mask: 0x1, PropSize: 0x10x3424(0x1)(Edit, ConstParm, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnSaddledStructLoaded : 1;                   // Mask: 0x2, PropSize: 0x10x3424(0x1)(BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnSaddledStructRemoved : 1;                  // Mask: 0x4, PropSize: 0x10x3424(0x1)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_361B[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalDinoCharacter* GetDefaultObj();

	void UpdateTribeGroupRanks(uint8 NewTribeGroupPetOrderingRank, uint8 NewTribeGroupPetRidingRank);
	void UpdateNextAllowedMatingTime(double FromTime);
	bool UpdateMateBoost();
	float UpdateImprintingQuality();
	void UpdateImprintingDetailsForController(class AShooterPlayerController** ForPC);
	class FString UpdateImprintingDetails();
	bool UpdateHasBuffPreventingUploading();
	class UClass* UpdateBabyCuddling();
	void UpdateAttackTargets();
	float UntameDino();
	bool UnclaimDino();
	bool TamedProcessOrder(class APrimalCharacter* FromCharacter, enum class EDinoTamedOrder* OrderType, class AActor* EnemyTarget);
	bool TameDino(class AShooterPlayerController** ForPC);
	bool StopActiveState();
	float StartSurfaceCameraForPassengers();
	bool StartSurfaceCameraForPassenger(class AShooterCharacter** Passenger);
	struct FVector StartLanding();
	class UBehaviorTree* SpawnNewAIController();
	class APrimalDinoCharacter* SpawnFromDinoDataEx(class UWorld** InWorld, struct FRotator* AtRotation, int32 ForTeam, class AShooterPlayerController** TamerController);
	class APrimalDinoCharacter* SpawnFromDinoData(class UWorld** InWorld, struct FRotator* AtRotation, int32 ForTeam, class AShooterPlayerController** TamerController);
	class AShooterPlayerController* SpawnedPlayerFor(class APawn** ForPawn);
	class APrimalDinoCharacter* SpawnDino(bool bNPCDontWander, float NPCAIRangeMultiplier);
	bool ShouldForceFlee();
	bool ShouldEnableIKBasedOn();
	bool ShouldDisableBasedCharactersCameraInterpolation(class APrimalCharacter* ForBasedChar);
	bool ShouldDealDamage();
	bool ShouldAttackOfPlayedAnimationStopMovement();
	bool SetupAsWildFollowerOfOtherDino();
	bool SetupAsWildBabyOfSingleParent();
	bool SetTurretModeMovementRestrictions(bool* Enabled);
	bool SetTurretMode(bool* Enabled);
	void SetState(class UPrimalAIState* State);
	float SetStasisComponentRadius();
	void SetRider(class AShooterCharacter** ARider);
	bool SetPreventSaving();
	double SetNextAllowedMatingTime();
	struct FVector SetMovementAccelerationVector();
	double SetLeftDynamicActorBaseTime();
	void SetLastMovementDesiredRotation(struct FRotator* InRotation);
	int32 SetLastAttackTimeForAttack(double NewTime);
	void SetImprintPlayer(class AShooterCharacter* ForChar);
	struct FUnreplicatedEggData SetGestationData();
	bool SetForceDisableClientGravitySim();
	bool SetFlight(bool bFly, bool* bCancelForceLand);
	struct FCustomTrackedActorInfo SetFCustomTrackedDinoInfoMembersByDinoRef(bool* bIsTrackedWaypoint, bool bIsValidForCurrentFilter);
	uint8 SetCurrentAttackIndex();
	TArray<uint8> SetColorizationData();
	bool SetCharacterStatusTameable();
	float SetBabyAge();
	TArray<float> SetAnimWeightsForAttackAtIndex();
	bool SetAllowedPaintingColorRegion();
	struct FVector ServerUpdateAttackTargets();
	void ServerToggleCharging();
	class AActor* ServerToClientsPlayAttackAnimation(float* InPlayRate);
	void ServerTamedTick();
	void ServerSleepingTick();
	float ServerSetRiderMountedWeaponRotationYawPitch();
	void ServerRequestWaterSurfaceJump();
	void ServerRequestToggleFlight();
	bool ServerRequestBraking();
	int32 ServerRequestAttack();
	void ServerInterruptLanding();
	void ServerFinishedLanding();
	void ServerClearRider(int32* OverrideUnboardDirection);
	void RidingTick(float* DeltaSeconds);
	void ResetBrainComponent();
	void RequestTerminateEmbryo(class APlayerController** ForPC);
	void RequestDisplayEmbryoData(class APlayerController** ForPC, bool* bEnable);
	bool RemovePassenger(class APrimalCharacter* ACharacter);
	void RemoveFromMeleeSwingHurtList(class AActor** AnActor);
	void RemoveDinoReferenceFromLatchingStructure();
	bool RefreshColorization();
	void RefreshBabyScaling();
	void ReassertColorization();
	bool ProcessOrderMoveTo();
	bool ProcessOrderFollowTarget(class AActor** TheTarget);
	bool ProcessOrderAttackTarget(class AActor** TheTarget);
	bool PreventSpawnDeathEssence();
	bool PreventShowingDinoTooltip();
	void PlayWeightedAttackAnimation();
	void PlayHardEndChargingShake();
	bool PlayedAnimationHasAttack();
	struct FVector OverrideRandomWanderLocation(struct FVector* InVec);
	bool OverrideFinalWanderLocation(struct FVector* OutVec);
	void OverrideBasedCharactersCameraInterpSpeed(class APrimalCharacter* ForBasedChar, float DefaultTPVCameraSpeedInterpMultiplier, float DefaultTPVOffsetInterpSpeed, float TPVCameraSpeedInterpMultiplier, float* TPVOffsetInterpSpeed);
	bool OnVoiceTalkingStateChanged();
	bool OnUpdateMountedDinoMeshHiding();
	void OnUncryo(class AShooterPlayerController** ForPC);
	class UPrimalItem* OnSpawnedForItem();
	void OnRep_Saddle();
	void OnRep_Rider();
	void OnRep_PassengerPerSeat();
	void OnRep_CarriedCharacter();
	void OnRep_bIsFlying();
	void OnRep_bIsCharging();
	void OnRep_bBonesHidden();
	void OnCryo(class AShooterPlayerController** ForPC);
	void NotifyClientsEmbryoTerminated();
	int32 NetUpdateDinoOwnerData();
	class FString NetUpdateDinoNameStrings();
	void MultiSetAttachedStructurePickupAllowedBeforeNetworkTime(double NewTime, class APrimalStructure** Structure);
	int32 MulticastUpdateAllColorSets();
	void Multi_OnCryo(class AShooterPlayerController** ForPC);
	bool MaxTamedDinos_SoftTameLimit_UpdateCreatureStatusRegardingSoftTameLimitDestruction(float* DeltaSeconds);
	bool MaxTamedDinos_SoftTameLimit_ShouldCreatureBeNewlyUnMarkedFromDestruction();
	bool MaxTamedDinos_SoftTameLimit_ShouldCreatureBeNewlyMarkedForDestruction();
	bool MaxTamedDinos_SoftTameLimit_ShouldCreatureBeCountedTowardsSoftTameLimit();
	bool MaxTamedDinos_SoftTameLimit_SetMaxTamedDinos_SoftTameLimit_MarkedForDeletionTime_To_CachedValue();
	bool MaxTamedDinos_SoftTameLimit_IsCreatureMarkedForDestruction();
	bool MaxTamedDinos_SoftTameLimit_IsCreatureDestructionCountdownActive();
	bool MaxTamedDinos_SoftTameLimit_IsCreatureAbleToBeMarkedForDestruction();
	bool MaxTamedDinos_SoftTameLimit_FreshlyUnsetCreatureMarkedForSoftTameLimitDestruction_IfApplicable();
	bool MaxTamedDinos_SoftTameLimit_FreshlySetCreatureMarkedForSoftTameLimitDestruction();
	void MaxTamedDinos_SoftTameLimit_DestroyAfterCountdown();
	void MaxTamedDinos_SoftTameLimit_DecrementTimeSinceStasis();
	float LowerDinoBP();
	void KeepFlightTimer();
	bool IsWildFollowingParentValid();
	bool IsWildFollowerOtherwiseValidAndLiving();
	bool IsWakingTame();
	bool IsVoiceTalking();
	bool IsPassengerSeatAvailable();
	bool IsMissionDino();
	bool IsInTekShield();
	bool IsInFlyerPreventionVolume();
	bool IsImprintPlayer(class AShooterCharacter* ForChar);
	bool IsFleeing();
	bool IsCurrentlyPlayingAttackAnimation();
	bool IsCurrentAttackStopsMovement();
	bool IsAWildFollowerKnownServerside();
	bool IsAttacking();
	bool IsAllowedToTransfer(class UObject** WorldContextObject);
	bool IsAllowedToMate();
	void InterruptLatching();
	void InterruptLanding();
	bool InterceptRiderEmoteAnim();
	bool InterceptMountedOnPlayerEmoteAnim();
	bool ImprintOnPlayerTarget(class AShooterPlayerController** ForPC);
	bool HasTarget();
	bool HasSelfBuried();
	bool HasOfflineRider();
	bool HasBuffPreventingFlight();
	bool HasBuffPreventingClearRiderOnDinoImmobilized();
	class AShooterPlayerController* HandleMountedDinoAction();
	class UPrimalItem* GiveSaddleFromString(float MinRandomQuality);
	class UPrimalItem* GiveSaddle(float MinRandomQuality);
	void GiveDeathDossier();
	float GetZoomMinValue();
	float GetZoomMaxValue();
	uint8 GetWiegthedAttack();
	bool GetUsesColorizationRegion();
	int32 GetUntamedTargetingTeam();
	class AActor* GetTamedLandTarget();
	class AActor* GetTamedFollowTarget();
	class UPrimalAIState* GetStateOfPlayedAnimationAttack();
	struct FVector GetSocketLocationTemp(class FName* SocketName);
	class FName GetSocketForMeleeTraceForHitBlockers();
	int32 GetSeatIndexForPassenger(class APrimalCharacter** PassengerChar);
	TArray<class UMeshComponent*> GetSaddleMeshComponents();
	class USkeletalMeshComponent* GetSaddleMeshComponent();
	TArray<class UActorComponent*> GetSaddleActorComponents();
	float GetRootYawSpeed();
	struct FRotator GetPlayerSpawnRotation();
	struct FVector GetPlayerSpawnLocation();
	int32 GetPassengersSeatIndex(class APrimalCharacter** Passenger);
	TArray<int32> GetPassengersAndSeatIndexes();
	TArray<class APrimalCharacter*> GetPassengers();
	class APrimalCharacter* GetPassengerPerSeat(int32* SeatIndex);
	int32 GetNumPassengerSeats();
	int32 GetNumAvailablePassengerSeats();
	double GetLastStartedTalkingTime();
	struct FVector GetLandingLocation();
	float GetGestationTimeRemaining();
	struct FUnreplicatedEggData GetGestationData();
	bool GetForceTickPose();
	int32 GetFoodItemEffectivenessMultipliersIndex(class UPrimalItem** FoodItem);
	class APrimalDinoCharacter* GetFirstValidWildFollowingParentRef();
	class UClass* GetFirstAffinityFoodItemClass();
	struct FVector GetDinoVelocity();
	class USoundBase* GetDinoTameSound();
	TArray<class AActor*> GetDinoPlatformCollisionIgnoreActors();
	class UAnimMontage* GetDinoLevelUpAnimation();
	class FString GetDinoIDsAsStrings();
	int32 GetDinoIDs();
	class UTexture* GetDinoEntryIcon();
	class FString GetDinoDescriptiveName();
	float GetDinoDeathTime();
	struct FARKDinoData GetDinoData();
	struct FLinearColor GetDinoColor();
	class FName GetDesiredNavmeshGenerationRadiusName();
	class FString GetCurrentDinoName(class APlayerController** ForPC);
	bool GetCurrentAttackInfo(struct FDinoAttackInfo* AttackInfo);
	int32 GetCurrentAttackIndexForInput(enum class EDinoInputAction Input);
	struct FRotator GetCurrentAimOffsetsRotation();
	TArray<class FName> GetColorSetNamesAsArray();
	class FString GetColorSetInidcesAsString();
	TArray<uint8> GetColorizationData();
	struct FLinearColor GetColorForColorizationRegion();
	bool GetCanMutateStat();
	class UClass* GetBedFilterClass();
	float GetBabyScale();
	float GetBabyCuddleInterval();
	class UClass* GetBabyCuddleFood();
	bool GetAllowedPaintingColorRegion();
	TArray<class APrimalStructureExplosive*> GetAllAttachedExplosives();
	struct FRotator GetAimOffsetsTransform();
	float GetAIFollowStoppingDistanceOffset();
	float GetAIFollowStoppingDistanceMultiplier();
	float GetAffinityIncreaseForFoodItem(class UPrimalItem** FoodItem);
	struct FVector GetActorCenterTraceLocation();
	class UPrimalAIState* GetActiveState();
	int32 ForceUpdateColorSets();
	int32 ForceSetTamedAggressionLevel();
	void ForceClearRider();
	bool FireProjectile(struct FVector* Origin);
	float FireMultipleProjectilesEx(bool* bAddPawnVelocityToProjectile);
	bool FireMultipleProjectiles();
	void FedWakingTameDino();
	bool EndCharging();
	float ElevateDinoBP();
	float DoOverrideMountedAirControl();
	void DoNeuter();
	class APrimalDinoCharacter* DoMate();
	bool DoesUseHibernation();
	void DoDeathHarvestingFadeOut();
	bool DoAttack();
	class AShooterCharacter* DinoShoulderMountedLaunch(struct FVector* LaunchDir);
	bool DinoFireProjectileEx(struct FVector* Origin);
	bool Die(float KillingDamage, struct FDamageEvent* DamageEvent, class AActor* DamageCauser);
	void DestroyController();
	int32 CycleAttackWeightsForAttackAtIndex();
	class ADroppedItem* CreateCloneFertilizedEgg(int32* NumMutationsToAdd);
	class APrimalDinoCharacter* CreateBabyDino(class APrimalDinoCharacter** ExtraBaby1, class APrimalDinoCharacter** ExtraBaby2);
	void CopySettingsToOtherDino(class APlayerController** ForPC, class APrimalDinoCharacter** FromDino, class APrimalDinoCharacter** OtherDino, int32* SettingTypeUseIndex);
	void CopyPaintingComponentFrom(class APrimalDinoCharacter* Other);
	void ClientStartLanding(struct FVector* LandingLoc);
	void ClientShouldNotifyLanded();
	void ClientInterruptLanding();
	void ClearTamedLandTarget();
	void ClearRider(bool* bFromRider, bool* bCancelForceLand, bool* SpawnDinoDefaultController, int32* OverrideUnboardDirection, bool* bForceEvenIfBuffPreventsClear, bool* bFromUse);
	void ClearPassengers();
	void ClearMountCharacter(bool* bFromMountCharacter);
	void ClearCharacterAIMovement();
	void ClearCarriedCharacter(bool* FromCarriedCharacter, bool* bCancelAnyCarryBuffs);
	bool CheckForTamedFoodConsumption(int32* Chomps);
	void CheckDinoDuped(bool* UpedDino);
	void CheatAction(class FString* Action);
	bool CarryCharacter(class APrimalCharacter** ARider, bool* byPassCanCarryCheck);
	bool CanTakePassenger(class APrimalCharacter* ACharacter);
	bool CanSkipAnimGraph();
	bool CanOrder(class APrimalCharacter* FromCharacter, bool* bBuildingStructures);
	bool CanNurseDino(class APrimalDinoCharacter** OtherDino);
	bool CanMount(class APrimalCharacter* ACharacter);
	bool CanFly();
	bool CanDinoAttackTargetsWithoutRider();
	bool CanCryo(class AShooterPlayerController** ForPC);
	bool CanClearRider();
	bool CancelCurrentAttack(bool* bStopCurrentAttackAnim, float* AttackAnimBlendOutTime);
	bool CanCarryCharacter();
	bool CanAttack();
	void BSetupDinoTameable();
	float BrakeDinoBP();
	void BPUntamedConsumeFoodItem(class UPrimalItem** FoodItem);
	float BPUnstasisConsumeFood(float* FoodNeeded);
	void BPUnstasis();
	void BPUnsetupDinoTameable();
	void BPTamedConsumeFoodItem(class UPrimalItem** FoodItem);
	class APrimalDinoCharacter* BPStaticCreateBabyDinoNoAncestors(class UWorld** TheWorld, class UClass** EggDinoClassToSpawn, struct FVector* TheGroundLoc, float* ActorRotationYaw, TArray<uint8>* EggMutationsApplied, class APrimalDinoCharacter** ExtraBaby1, class APrimalDinoCharacter** ExtraBaby2, int32* NotifyTeamOverride);
	class APrimalDinoCharacter* BPStaticCreateBabyDino(class UWorld** TheWorld, class UClass** EggDinoClassToSpawn, struct FVector* TheGroundLoc, float* ActorRotationYaw, TArray<uint8>* EggMutationsApplied, class APrimalDinoCharacter** ExtraBaby1, class APrimalDinoCharacter** ExtraBaby2, int32* NotifyTeamOverride);
	bool BPShowTamingPanel(bool* CurrentVisibility);
	bool BPShouldForceFlee();
	bool BPShouldDinoBeTracked(int32 CustomTameSelectionType, int32 DinoGroup, const class FString& CustomTameSearchText, bool Handled);
	bool BPShouldCancelDoAttack();
	void BPSetupTamed(bool bWasJustTamed);
	float BPSetSimulatedInterpRollOverride();
	void BPSetInitialAimOffsetTargets(const struct FVector& TargetRootLoc, const struct FRotator& TargetAimRot, const struct FVector& OutTargetRootLoc, const struct FRotator& OutTargetAimRot);
	void BPSetForcedAggro(class AActor* TargetableActor, float AggroAmount, float ForcedAggroTime);
	class AShooterPlayerController* BPSentKilledNotification();
	void BPResetClone();
	bool BPPreventSpawnForPlayer();
	bool BPPreventRiding(class AShooterCharacter* ByPawn, bool bDontCheckDistance);
	bool BPPreventOrderAllowed(class APrimalCharacter* FromCharacter, enum class EDinoTamedOrder* OrderType, class AActor* EnemyTarget, bool OrderNotExecuted);
	struct FVector BPPrepareForLaunchFromShoulder(const struct FVector& ViewLoc);
	class FString BPOverrideTamingDescriptionLabel();
	enum class EStencilAlliance BPOverrideStencilAllianceForTarget(class APrimalCharacter* TargetDino);
	class UAnimSequence* BPOverridePassengerAdditiveAnim(class APrimalCharacter* ForPassenger);
	class FString BPOverrideMutationLabels(bool Male);
	bool BPOverrideMoveToOrder(class AShooterCharacter* OrderingPlayer);
	bool BPOverrideIsSubmergedForWaterTargeting();
	float BPOverrideHealthBarOffset(class APlayerController** ForPC);
	int32 BPOverrideGetAttackAnimationIndex(const TArray<class UAnimMontage*>& AnimationArray);
	struct FVector BPOverrideFloatingHUDLocation();
	void BPOverrideCameraViewTarget(class FName CurrentCameraMode, const struct FVector& DesiredCameraLocation, const struct FRotator& DesiredCameraRotation, float DesiredFOV, bool bOverrideCameraLocation, const struct FVector& CameraLocation, bool bOverrideCameraRotation, const struct FRotator& CameraRotation, bool bOverrideCameraFOV, float CameraFOV);
	void BPOrderedMoveToLoc(const struct FVector& DestLoc);
	bool BPOnTamedProcessOrder(class APrimalCharacter* FromCharacter, enum class EDinoTamedOrder* OrderType, class AActor* EnemyTarget, bool OrderNotExecuted);
	bool BPOnStopJump();
	bool BPOnStartJump();
	void BPOnSetMountedDino();
	void BPOnSetFlight(bool bFly);
	void BPOnSaddleStructRemoved(class APrimalStructure* TheStruct);
	void BPOnSaddleStructLoaded(class APrimalStructure* TheStruct);
	void BPOnSaddleStructAdded(class APrimalStructure* TheStruct);
	void BPOnRepIsCharging();
	void BPOnRefreshColorization(const TArray<struct FLinearColor>& Colors);
	void BPOnEndCharging();
	void BPOnDinoStartled(class UAnimMontage* StartledAnimPlayed, bool bFromAIController);
	class AShooterProjectile* BPOnDinoFiredProjectile();
	bool BPOnDinoCheat(float* Value);
	void BPOnClearMountedDino();
	void BPNotifyWildHarvestAttack(int32* HarvestIndex);
	void BPNotifyStructurePlacedNearby(class APrimalStructure* NewStructure);
	void BPNotifySetRider(class AShooterCharacter* RiderSetting);
	void BPNotifyNameEditText(class AShooterPlayerController** ForPC);
	void BPNotifyMateBoostChanged();
	void BPNotifyIfPassengerLaunchShoulderMount(class APrimalCharacter** LaunchedCharacter);
	void BPNotifyClearRider(class AShooterCharacter* RiderClearing);
	void BPNotifyClearPassenger(class APrimalCharacter** PassengerChar, int32* SeatIndex);
	void BPNotifyClaimed();
	void BPNotifyCarriedDinoBabyAgeIncrement(class APrimalDinoCharacter* AgingCarriedDino, float* PreviousAge, float NewAge);
	void BPNotifyBabyAgeIncrement(float* PreviousAge, float NewAge);
	void BPNotifyAddPassenger(class APrimalCharacter** PassengerChar, int32* SeatIndex);
	void BPModifyHarvestingWeightsArray(TArray<float>* ResourceWeightsIn, TArray<class UPrimalItem*>* ResourceItems, TArray<float>* ResourceWeightsOut);
	float BPModifyHarvestingQuantity(float* OriginalQuantity, class UClass** ResourceSelected);
	float BPModifyHarvestDamage(class UPrimalHarvestingComponent** HarvestComponent, float* InDamage);
	bool BPModifyDesiredRotation(struct FRotator* InDesiredRotation, struct FRotator* OutDesiredRotation);
	bool BPModifyControlRotation(struct FRotator* OutControlRotation);
	struct FVector BPModifyAimOffsetTargetLocation(struct FVector* AimTargetLocation);
	struct FRotator BPModifyAimOffsetNoTarget(struct FRotator* Aim);
	void BPKilledSomethingEvent(class APrimalCharacter** KilledTarget);
	bool BPIsValidUnStasisCaster();
	bool BPIsTamed();
	bool BPIsHidden();
	bool BPIsBasedOnActor(class AActor* Other);
	bool BPHasCurrentAttack();
	bool BPHandleUseButtonPress(class AShooterPlayerController** RiderController);
	bool BPHandleOnStopTargeting();
	bool BPHandleOnStopFire();
	bool BPHandleControllerInitiatedAttack();
	float BPGetTargetingDesirability(class AActor** Attacker);
	TArray<struct FMultiUseEntry> BPGetRidingMultiUseEntries(class APlayerController** ForPC);
	struct FVector BPGetRiderUnboardLocation(class APrimalCharacter** RidingCharacter);
	struct FVector BPGetRiderUnboardDirection(class APrimalCharacter** RidingCharacter);
	class FName BPGetRiderSocket();
	struct FVector BPGetPassengerDinoAdditionalOffset(class APrimalDinoCharacter** Passenger);
	class AActor* BPGetOtherActorToIgnore();
	class FName BPGetLookOffsetSocketName(class APrimalCharacter** ForPrimalChar);
	struct FVector BPGetHealthBarColor();
	class FName BPGetDragSocketName(class APrimalCharacter** DraggingChar);
	class FName BPGetDragSocketDinoName(class APrimalDinoCharacter** AGrabbedDino);
	struct FDinoSetup BPGetCustomDinoSetup();
	int32 BPGetCurrentAttackIndex();
	float BPGetCrosshairSpread();
	void BPGetCrosshairLocation(float* CanvasClipX, float* CanvasClipY, float* OutX, float* OutY);
	struct FLinearColor BPGetCrosshairColor();
	float BPGetCrosshairAlpha();
	bool BPGetAttackOfPlayedAnimation(struct FDinoAttackInfo* AttackInfo);
	bool BPForceTurretFastTargeting();
	void BPForceReachedDestination();
	void BPFedWakingTameEvent(class APlayerController** ForPC);
	bool BPExShouldRestrictNonAlliedCarriedPlayerYaw();
	class AShooterHUD* BPDrawToRiderHUD();
	void BPDoHarvestAttack(int32* HarvestIndex);
	int32 BPDoAttack();
	bool BPDisplayTamedMessage();
	bool BPDinoTooltipCustomTorpidityProgressBar(bool* OverrideTorpidityProgressBarIfActive);
	bool BPDinoTooltipCustomTamingProgressBar(bool* OverrideTamingProgressBarIfActive);
	void BPDinoPrepareForARKUploading();
	void BPDinoPostBeginPlay();
	void BPDinoARKDownloadedEnd();
	void BPDinoARKDownloadedBegin();
	void BPDidSetCarriedCharacter(class APrimalCharacter* WithPreviousCarriedCharacter);
	void BPDidClearCarriedCharacter(class APrimalCharacter* WithPreviousCarriedCharacter);
	bool BPDesiredRotationIsLocalSpace();
	class AShooterCharacter* BPConsumeInventoryFoodItem(class UPrimalItem** FoodItem, bool bConsumeEntireStack);
	float BPClampMaxHarvestHealth();
	bool BPCheckSeven();
	struct FVector BPCheckCanSpawnFromLocation(const struct FVector& CheckLocation);
	struct FVector BPChargingModifyInputAcceleration(const struct FVector& InputAcceleration);
	void BPCarriedDinoBabyRescaled(class APrimalDinoCharacter* AgingCarriedDino, float NewAge);
	bool BPCanTargetCorpse();
	bool BPCanTame(class AShooterPlayerController** ForPC, bool bIgnoreMaxTamedDinos, bool bIgnoreTeamCheck);
	bool BPCanTakePassenger(class APrimalCharacter* Character);
	bool BPCanMountOnCharacter(class APrimalCharacter* Character);
	bool BPCanLand();
	bool BPCanIgnoreImmobilizationTrap(class UClass* TrapClass, bool bForceTrigger);
	bool BPCanDragCharacter(class APrimalCharacter* Character);
	bool BPCanCryo(class AShooterPlayerController** ForPC);
	bool BPCanAutodrag(class APrimalCharacter* CharacterToDrag);
	void BPBecomeBaby();
	void BPBecomeAdult();
	void BPBecameNewBaby(class APrimalDinoCharacter** Parent);
	bool BPAllowEquippingItemType(enum class EPrimalEquipmentType EquipmentType);
	bool BPAllowClaiming(class AShooterPlayerController** ForPlayer);
	bool BPAllowCarryCharacter(class APrimalCharacter* CheckCharacter);
	int32 BPAdjustAttackIndex();
	bool BP_ShouldDisableBasedCharactersCameraInterpolation(class APrimalCharacter* ForBasedChar);
	bool BP_PreventUnmounting();
	bool BP_PreventCarryingByCharacter(class APrimalCharacter* ByCarrier);
	bool BP_PreventCarrying();
	struct FHitResult BP_OverrideRiderCameraCollisionSweep(const struct FVector& SweepStart, const struct FVector& SweepEnd);
	class FString BP_OverrideDinoName(const class FString& CurrentDinoName, class APlayerController** ForPC);
	bool BP_OverrideCarriedCharacterTransform(class APrimalCharacter* ForCarriedChar);
	void BP_OverrideBasedCharactersCameraInterpSpeed(class APrimalCharacter* ForBasedChar, float DefaultTPVCameraSpeedInterpMultiplier, float DefaultTPVOffsetInterpSpeed, float TPVCameraSpeedInterpMultiplier, float* TPVOffsetInterpSpeed);
	void BP_OnUncryo(class AShooterPlayerController** ForPC);
	void BP_OnTargetedByTamedOrder(class APrimalCharacter* OrderingCharacter, class APrimalDinoCharacter* AttackingDino, bool bForced);
	bool BP_OnTamedOrderReceived(class APrimalCharacter* FromCharacter, enum class EDinoTamedOrder* OrderType, class AActor* EnemyTarget, bool OrderNotExecuted);
	void BP_OnStartLandingNotify();
	void BP_OnStartLandFailed(int32 ReasonIndex);
	void BP_OnRiderChangeWeapons(class AShooterCharacter* TheRider, class UPrimalItem* NewWeapon);
	void BP_OnPostNetReplication(const struct FVector& ReplicatedLoc, const struct FRotator& ReplicatedRot);
	void BP_OnLandingInterruptedNotify();
	void BP_OnCryo(class AShooterPlayerController** ForPC);
	void BP_OnBasedPawnRemovedNotify(class AActor* RemovedActor);
	void BP_OnBasedPawnRemovedFromSet();
	void BP_OnBasedPawnAddedToSet();
	void BP_OnBasedPawnAddedNotify(class AActor* AddedActor);
	bool BP_InterceptTurnInput(float AxisValue);
	bool BP_InterceptMoveRight(float AxisValue);
	bool BP_InterceptMoveForward(float AxisValue);
	float BP_GetCustomModifier_RotationRate();
	float BP_GetCustomModifier_MaxSpeed();
	bool BP_ForceAllowMountedWeapon(class UClass* WeaponTemplate);
	bool BP_CanFly();
	bool BP_AllowWalkableSlopeOverride();
	void BlueprintTamedTick();
	void BlueprintPlayDying(float KillingDamage, struct FDamageEvent* DamageEvent, class APawn* InstigatingPawn, class AActor* DamageCauser);
	bool BlueprintOverrideWantsToRun(bool bInputWantsToRun);
	class UClass* BlueprintOverrideHarvestDamageType();
	float BlueprintGetAttackWeight();
	float BlueprintExtraBabyScaling();
	float BlueprintDrawFloatingHUD(float* DrawScale);
	void BlueprintDestroyActor();
	bool BlueprintCanRiderAttack();
	bool BlueprintCanAttack();
	float BlueprintAdjustOutputDamage();
	void BlendSpaceGenerated(class UBlendSpace* BlendSpace);
	void AssertColorNames();
	bool AreSpawnerSublevelsLoaded();
	void ApplyRidingAttackExtraVelocity();
	void ApplyMutagen();
	void AnimNotifyMountedDino();
	bool AllowWakingTame(class APlayerController** ForPC);
	bool AllowMountedWeaponry();
	bool AllowCarryCharacter();
	bool AddToMeleeSwingHurtList(class AActor** AnActor);
	class UClass* AddSaddleCheat();
	bool AddPassenger(class APrimalCharacter* ACharacter);
	void AddedImprintingQuality(float* Amount);
	void AddDinoReferenceInLatchingStructure(class APrimalStructure** Structure);
};

// 0x48 (0x3470 - 0x3428)
// Class ShooterGame.PrimalRaft
class APrimalRaft : public APrimalDinoCharacter
{
public:
	class UTexture2D*                            Icon;                                              // 0x3428(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst)
	class UAudioComponent*                       MovingSoundComponent;                              // 0x3430(0x8)(Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            MovingSoundCue;                                    // 0x3438(0x8)(ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                RaftSpawnEffect;                                   // 0x3440(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       NetworkCreationTime;                               // 0x3448(0x8)(BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRaftAllowCrafting : 1;                            // Mask: 0x1, PropSize: 0x10x3450(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideSwimmingVelocity : 1;                   // Mask: 0x2, PropSize: 0x10x3450(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideSwimmingAcceleration : 1;               // Mask: 0x4, PropSize: 0x10x3450(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowOverrideUpdatesWhenNoRaftRider : 1;          // Mask: 0x8, PropSize: 0x10x3450(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableGravityAdjustement : 1;                    // Mask: 0x10, PropSize: 0x10x3450(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseTracedSurfaceAdjustment : 1;                   // Mask: 0x20, PropSize: 0x10x3450(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRaftAllowWalkingState : 1;                        // Mask: 0x40, PropSize: 0x10x3450(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowTargetingBasedCharacters : 1;                // Mask: 0x80, PropSize: 0x10x3450(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3641[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SurfaceAdjustmentZInterpSpeed;                     // 0x3454(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3642[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalRaft* GetDefaultObj();

	void TempDisableForcedVelcoityDirection();
	bool ShouldTreadWater();
	struct FVector BPOverrideSwimmingVelocity(struct FVector* InitialVelocity, float* FluidFriction, float* NetBuoyancy);
	bool BPAllowMovementSound();
	float BP_OverrideSwimmingAcceleration(struct FVector* ModifyAcceleration);
};

// 0x70 (0x34E0 - 0x3470)
// Class ShooterGame.PhysicsPrimalRaft
class APhysicsPrimalRaft : public APrimalRaft
{
public:
	bool                                         bUseForcestoApply;                                 // 0x3470(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShouldLimitLinearVelocity;                        // 0x3471(0x1)(Edit, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_364A[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ForcesToApplyScale;                                // 0x3474(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TorquesToApplyScale;                               // 0x3478(0x4)(BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPIsInWater;                                   // 0x347C(0x1)(Edit, ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_364B[0x23];                                    // Fixing Size After Last Property  > TateDumper <
	class UStaticMeshComponent*                  CollisionMesh;                                     // 0x34A0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_364C[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsInWater;                                        // 0x34B8(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCanHarvestCollectables;                           // 0x34B9(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_364D[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ImpulseMagnitudeMultiplier;                        // 0x34BC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CollisionImpactMinInterval;                        // 0x34C0(0x4)(BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CollisionImpactAbsoluteMinImpulse;                 // 0x34C4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ImpulseDamageMultiplier;                           // 0x34C8(0x4)(Edit, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_364E[0x14];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APhysicsPrimalRaft* GetDefaultObj();

	struct FHitResult OnPhysicsHit(const struct FVector& NormalImpulse);
	bool IsinWater();
	void BPSetMaxLinearVelocity();
	float BPMoveUp();
	float BPMoveRight();
	float BPMoveForward();
	float BPFindDeltaAngle();
	bool BP_IsinWater();
	struct FVector AddTorqueToBeApplied(class FName ForceName);
	struct FVector AddForceToBeAppliedAtCustomSocket(class FName ForceName, class FName* SocketName);
	struct FVector AddForceToBeAppliedAtCenterOfGravity(class FName ForceName);
};

// 0x188 (0x8E0 - 0x758)
// Class ShooterGame.PlayerHUDUI
class UPlayerHUDUI : public UPrimalUI
{
public:
	class FString                                SlotItemsDataListName;                             // 0x758(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PrimaryStatusBarsWidgetName;                       // 0x768(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SecondaryStatusBarsWidgetName;                     // 0x770(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CraftQueueItemButtonName;                          // 0x778(0x8)(ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExtraProgressBarName;                              // 0x780(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                SlotItemsDataListParentPanelName;                  // 0x788(0x10)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CompassBarWidgetName;                              // 0x798(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ElementBarWidgetName;                              // 0x7A0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHUDRichTextOverlayData>       RichTextOverlayData;                               // 0x7A8(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalRichTextBlock*>          RichTextBlocks;                                    // 0x7B8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         UsingFastInventory;                                // 0x7C8(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3653[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        UseItemKeybindingsArray;                           // 0x7D0(0x10)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3654[0xB8];                                    // Fixing Size After Last Property  > TateDumper <
	class UProgressBarWidget*                    ExtraProgressBar;                                  // 0x898(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3655[0x40];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPlayerHUDUI* GetDefaultObj();

	void UpdatedKeybindingBP();
	bool OnFastInventoryChangedBP();
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.PointOfInterestCompanionInterface
class IPointOfInterestCompanionInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPointOfInterestCompanionInterface* GetDefaultObj();

	struct FPointOfInterestCompanionBehavior GetPointCompanionBehaviorData();
};

// 0x0 (0x4C0 - 0x4C0)
// Class ShooterGame.PointOfInterestCosmeticActor_Base
class APointOfInterestCosmeticActor_Base : public AActor
{
public:

	static class UClass* StaticClass();
	static class APointOfInterestCosmeticActor_Base* GetDefaultObj();

};

// 0x1F0 (0x6B0 - 0x4C0)
// Class ShooterGame.PointOfInterestCosmeticActor
class APointOfInterestCosmeticActor : public APointOfInterestCosmeticActor_Base
{
public:
	class USceneComponent*                       CosmeticRootComp;                                  // 0x4C0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              CosmeticParticlesComp;                             // 0x4C8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FPointOfInterestData                  MyPointOfInterestData;                             // 0x4D0(0x1E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APointOfInterestCosmeticActor* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.PointOfInterestInterface
class IPointOfInterestInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPointOfInterestInterface* GetDefaultObj();

	class AActor* ViewPoint();
	class AActor* UnviewPoint();
	bool SetPointTagUniqueState();
	struct FPointOfInterestData GetPointOfInterestData();
	class UClass* GetPointCustomData();
	bool CanBeViewed(class AActor* ByActor);
};

// 0x8 (0x4E0 - 0x4D8)
// Class ShooterGame.PointOfInterestManagerList
class APointOfInterestManagerList : public ACustomActorList
{
public:
	uint8                                        bRefreshPointsArray : 1;                           // Mask: 0x1, PropSize: 0x10x4D8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3665[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APointOfInterestManagerList* GetDefaultObj();

	void ScanForAllValidPointsOfInterest();
	void ReConstructPointsInList();
	void PopulatePointsActorList();
	bool ManualAddPointOfInterestActor();
	bool CheckListForTagCollisions();
};

// 0xF8 (0x120 - 0x28)
// Class ShooterGame.PreviewImage
class UPreviewImage : public UObject
{
public:
	uint8                                        Pad_3666[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FOV;                                               // 0x30(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig)
	uint8                                        Pad_3667[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTextureRenderTarget2D*                RenderTarget;                                      // 0x38(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               MeshScale;                                         // 0x40(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        LightBrightness;                                   // 0x58(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3669[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              LightRotation;                                     // 0x60(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              MeshRotation;                                      // 0x78(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CameraLocation;                                    // 0x90(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              CameraRotation;                                    // 0xA8(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ESkyLightSourceType               AmbientSourceType;                                 // 0xC0(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_366A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UTextureCube*                          AmbientCubemap;                                    // 0xC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	struct FColor                                AmbientLightColor;                                 // 0xD0(0x4)(ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AmbientBrightness;                                 // 0xD4(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UWorld*                                GameWorld;                                         // 0xD8(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class USceneComponent*>               PreviewComponents;                                 // 0xE0(0x10)(Edit, ConstParm, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	class UMeshComponent*                        PreviewMesh;                                       // 0xF0(0x8)(Edit, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
	class UWorld*                                PreviewWorld;                                      // 0xF8(0x8)(ConstParm, EditFixedSize, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	class USceneCaptureComponent2D*              CaptureComponent;                                  // 0x100(0x8)(Parm, OutParm, Transient, Config, EditConst, SubobjectReference)
	class UDirectionalLightComponent*            DirctionalLight;                                   // 0x108(0x8)(Edit, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USkyLightComponent*                    SkyLight;                                          // 0x110(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst)
	class ULineBatchComponent*                   LineBatcher;                                       // 0x118(0x8)(ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPreviewImage* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class ShooterGame.PrimalAIState
class UPrimalAIState : public UObject
{
public:
	class APrimalDinoCharacter*                  Pawn;                                              // 0x28(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	class FName                                  AnimationCustomName;                               // 0x30(0x8)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalAIState*>                ChildStates;                                       // 0x38(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UPrimalAIState*                        ParentState;                                       // 0x48(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        IsInAnimationState : 1;                            // Mask: 0x1, PropSize: 0x10x50(0x1)(Edit, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        IsInAttackState : 1;                               // Mask: 0x2, PropSize: 0x10x50(0x1)(EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShouldResetInLosingTarget : 1;                    // Mask: 0x4, PropSize: 0x10x50(0x1)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPCanUseState : 1;                                // Mask: 0x8, PropSize: 0x10x50(0x1)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSkipIntervalCheck : 1;                       // Mask: 0x10, PropSize: 0x10x50(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSkipRangeCheck : 1;                          // Mask: 0x20, PropSize: 0x10x50(0x1)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_290 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	bool                                         bUseBPCanAttack;                                   // 0x51(0x1)(Edit, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPOverrideAttackWeight;                        // 0x52(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_367B[0x5];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalAIState* GetDefaultObj();

	enum class ENetRole TickAnimationStateEvent(class FName* CustomEventName);
	enum class ENetRole TickAnimationState(class FName* CustomEventName);
	enum class ENetRole StartAnimationStateEvent(class FName* CustomEventName);
	enum class ENetRole StartAnimationState(class FName* CustomEventName);
	bool ShouldSkipRangeCheckEvent();
	bool ShouldSkipIntervalCheckEvent();
	void SetLastAttackTime();
	void SetInAnimationStateActive(bool* Value);
	void OnTickEvent(float* DeltaSeconds);
	void OnTick(float* DeltaSeconds);
	void OnEndEvent();
	void OnEnd();
	void OnChildStateEndedEvent(class UPrimalAIState** PrimalAIState);
	bool OnCanUseStateEvent();
	class UPrimalAIState* OnBeginEvent();
	class UPrimalAIState* OnBegin();
	class FString GetDebugInfoString();
	enum class ENetRole EndAnimationStateEvent(class FName* CustomEventName);
	enum class ENetRole EndAnimationState(class FName* CustomEventName);
	bool CanUseState();
	float BPOverrideAttackWeight();
	bool BPIsChildState();
	class FString BPGetDebugInfoString();
	bool BPCanAttack();
};

// 0x60 (0xB8 - 0x58)
// Class ShooterGame.PrimalAIStateDinoRangedState
class UPrimalAIStateDinoRangedState : public UPrimalAIState
{
public:
	float                                        AccuracyWeight;                                    // 0x58(0x4)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ClampAngle;                                        // 0x5C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig)
	struct FVector                               WorldGeometryTargetLocOffset;                      // 0x60(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CharacterTargetLocOffset;                          // 0x78(0x18)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bScaleProjDamageByDinoDamage : 1;                  // Mask: 0x1, PropSize: 0x10x90(0x1)(Net, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGetTargetDirection : 1;                           // Mask: 0x2, PropSize: 0x10x90(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAimSocket : 1;                                 // Mask: 0x4, PropSize: 0x10x90(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_291 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseRangedSockets : 1;                             // Mask: 0x10, PropSize: 0x10x90(0x1)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPRangedAttack : 1;                            // Mask: 0x20, PropSize: 0x10x90(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPRangedAttackOnBegin : 1;                     // Mask: 0x40, PropSize: 0x10x90(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLeadTarget : 1;                                   // Mask: 0x80, PropSize: 0x10x90(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3682[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  AimSocket;                                         // 0x94(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3683[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          RangedSockets;                                     // 0xA0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SpreadOffset;                                      // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3684[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalAIStateDinoRangedState* GetDefaultObj();

	float PreventAttackForTime();
	struct FVector OffsetVectorRandomlyReturnsAltered();
	float GetZGravityOffset();
	struct FVector FindDirectionToLeadTarget();
	struct FVector ClampProjectileVectorInForwardDirection();
	void BPRangedAttackOnBegin(const struct FVector& TargetLocation, struct FVector* TargetVelocity);
	void BPRangedAttack(const struct FVector& TargetLocation, struct FVector* TargetVelocity);
};

// 0x20 (0xD8 - 0xB8)
// Class ShooterGame.PrimalAIStateBotRangedState
class UPrimalAIStateBotRangedState : public UPrimalAIStateDinoRangedState
{
public:
	bool                                         bDrawDebug;                                        // 0xB8(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        Pad_3685[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ChanceBotWillAimDirectlyAtPlayer;                  // 0xBC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ChanceBotWillAimDirectlyAtDino;                    // 0xC0(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ChanceBotWillCompletelyMissPlayer;                 // 0xC4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ChanceBotWillCompletelyMissDino;                   // 0xC8(0x4)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ConeHalfAngle;                                     // 0xCC(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        ConeHalfAngleRandRange;                            // 0xD0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPGetSocketLocation;                           // 0xD4(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3686[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalAIStateBotRangedState* GetDefaultObj();

	struct FVector BPGetSocketLocation();
};

// 0x48 (0xA0 - 0x58)
// Class ShooterGame.PrimalAIStateBPBase
class UPrimalAIStateBPBase : public UPrimalAIState
{
public:
	uint8                                        bCanAttackWhileFlying : 1;                         // Mask: 0x1, PropSize: 0x10x58(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClearAttackStateOnEnd : 1;                        // Mask: 0x2, PropSize: 0x10x58(0x1)(Edit, BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnClearAttackState : 1;                      // Mask: 0x4, PropSize: 0x10x58(0x1)(Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_292 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsMeleeAttack : 1;                                // Mask: 0x10, PropSize: 0x10x58(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseTickEvent : 1;                                 // Mask: 0x20, PropSize: 0x10x58(0x1)(BlueprintReadOnly, Net, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_293 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3690[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinTickEventTime;                                  // 0x5C(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxTickEventTime;                                  // 0x60(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseTickAnimationStateEvent : 1;                   // Mask: 0x1, PropSize: 0x10x64(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPShouldEndAttack : 1;                         // Mask: 0x2, PropSize: 0x10x64(0x1)(Edit, ConstParm, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnAnimNotifyCustomEvent : 1;                 // Mask: 0x4, PropSize: 0x10x64(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEndStateWhenAttackAnimCompletes : 1;              // Mask: 0x8, PropSize: 0x10x64(0x1)(ConstParm, Net, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnAttackStart : 1;                           // Mask: 0x10, PropSize: 0x10x64(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnAttackEnd : 1;                             // Mask: 0x20, PropSize: 0x10x64(0x1)(Edit, BlueprintVisible, ExportObject, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnAttackTick : 1;                            // Mask: 0x40, PropSize: 0x10x64(0x1)(Edit, ConstParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_294 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3691[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinAttackTickTime;                                 // 0x68(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxAttackTickTime;                                 // 0x6C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3692[0x30];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalAIStateBPBase* GetDefaultObj();

	bool SpawnAndFireProjectile();
	float SetLastAttackTimeToNow();
	bool IsTimeSinceStateBegin(bool* bForceTrueAtZeroTime);
	float GetTimeSinceStateBegin();
	double GetStateBeginTime();
	void GetLastAttackTimeAndInterval(double LastAttackTime, float* AttackInterval);
	void FinishState();
	struct FVector DealMeleeDamageDirect(float* DamageAmount, float* DamageImpulse, class UClass** DamageTypeClass, bool* bUseBlueprintAdjustOutputDamage, bool* bInstantlyHarvestCorpse);
	struct FHitResult DealMeleeDamage(class AActor** Actor);
	bool BPShouldEndAttack();
	void BPOnClearAttackState();
	float BPOnAttackTick();
	int32 BPOnAttackStart();
	int32 BPOnAttackEnd();
	void BPOnAnimNotifyCustomEvent(class FName* CustomEventName, class UAnimSequenceBase** Animation, enum class ENetRole Role);
};

// 0x80 (0xD8 - 0x58)
// Class ShooterGame.PrimalAIStateDinoMeleeState
class UPrimalAIStateDinoMeleeState : public UPrimalAIState
{
public:
	class UClass*                                SpawnProjectileClass;                              // 0x58(0x8)(ConstParm, BlueprintReadOnly, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        SpawnProjectileInterval;                           // 0x60(0x4)(Edit, BlueprintVisible, OutParm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SpawnProjectileSocket;                             // 0x64(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanAttackWhileFlying : 1;                         // Mask: 0x1, PropSize: 0x10x6C(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClearAttackStateOnEnd : 1;                        // Mask: 0x2, PropSize: 0x10x6C(0x1)(Edit, BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoSecondarySwingTrace : 1;                        // Mask: 0x4, PropSize: 0x10x6C(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_295 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bDontActuallyDealDamage : 1;                       // Mask: 0x20, PropSize: 0x10x6C(0x1)(Net, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnHitActor : 1;                              // Mask: 0x40, PropSize: 0x10x6C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetSocketLocation : 1;                       // Mask: 0x80, PropSize: 0x10x6C(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3694[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class UObject>>         SecondarySwingRadiusTargetClasses;                 // 0x70(0x10)(Edit, BlueprintVisible, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        SecondarySwingRadius;                              // 0x80(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3695[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SecondarySwingLocOffset;                           // 0x88(0x18)(Edit, BlueprintVisible, ExportObject, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3696[0x38];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalAIStateDinoMeleeState* GetDefaultObj();

	void BPOnHitActor(struct FHitResult* HitResult);
	void BPGetSocketLocation(class FName* SocketName, const struct FVector& SocketLocation);
};

// 0x8 (0xE0 - 0xD8)
// Class ShooterGame.PrimalAIStateDinoFlyerGrab
class UPrimalAIStateDinoFlyerGrab : public UPrimalAIStateDinoMeleeState
{
public:
	class APrimalCharacter*                      FirstHit;                                          // 0xD8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalAIStateDinoFlyerGrab* GetDefaultObj();

};

// 0x8 (0xE0 - 0xD8)
// Class ShooterGame.PrimalAIStateDinoGrabAndReleaseState
class UPrimalAIStateDinoGrabAndReleaseState : public UPrimalAIStateDinoMeleeState
{
public:
	class APrimalCharacter*                      FirstHit;                                          // 0xD8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalAIStateDinoGrabAndReleaseState* GetDefaultObj();

};

// 0x98 (0xF0 - 0x58)
// Class ShooterGame.PrimalAIStateDinoSpiderMinions
class UPrimalAIStateDinoSpiderMinions : public UPrimalAIState
{
public:
	class UClass*                                MinionCharacterTypeClass;                          // 0x58(0x8)(ExportObject, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        MinionCharacterTypeClasses;                        // 0x60(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                MinionCharacterTypeClassesWeights;                 // 0x70(0x10)(ExportObject, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        MinionMaxCount;                                    // 0x80(0x1)(Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3697[0x17];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SpawnRandomOffset;                                 // 0x98(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               SpawnFixedOffset;                                  // 0xB0(0x18)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EggSocket;                                         // 0xC8(0x8)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFirstBatch;                                       // 0xD0(0x1)(Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventMinionTaming;                              // 0xD1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventMinionSaving;                              // 0xD2(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3698[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BatchMinionCoolDown;                               // 0xD4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	double                                       LastBatchTime;                                     // 0xD8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BatchCount;                                        // 0xE0(0x1)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        AbsoluteMaxMinions;                                // 0xE1(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        RemainingMinionBatchCount;                         // 0xE2(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3699[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        OverrideMinionBaseLevel;                           // 0xE4(0x4)(BlueprintVisible, ExportObject, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumMinionsToSpawn;                                 // 0xE8(0x4)(ConstParm, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_369A[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalAIStateDinoSpiderMinions* GetDefaultObj();

};

// 0x18 (0x70 - 0x58)
// Class ShooterGame.PrimalAIStateDinoSpiderRangedAcidState
class UPrimalAIStateDinoSpiderRangedAcidState : public UPrimalAIState
{
public:
	class FName                                  SprayStartSocket;                                  // 0x58(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeBetweenProjectile;                             // 0x60(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bScaleProjDamageByDinoDamage;                      // 0x64(0x1)(Net, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAimAtTarget;                                      // 0x65(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_369B[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       NextSprayTime;                                     // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalAIStateDinoSpiderRangedAcidState* GetDefaultObj();

};

// 0x30 (0xE8 - 0xB8)
// Class ShooterGame.PrimalAIStateDinoSpiderRangedWebState
class UPrimalAIStateDinoSpiderRangedWebState : public UPrimalAIStateDinoRangedState
{
public:
	class FName                                  SprayStartSocket;                                  // 0xB8(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SprayEndSocket;                                    // 0xC0(0x8)(Edit, Net, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClampDirection : 1;                               // Mask: 0x1, PropSize: 0x10xC8(0x1)(ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_296 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_369C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TimeBetweenProjectile;                             // 0xCC(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        LeadTime;                                          // 0xD0(0x4)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_369D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       NextSprayTime;                                     // 0xD8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        SpreadOffsetPitch;                                 // 0xE0(0x4)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumberOfProjectilesMultiplier;                     // 0xE4(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalAIStateDinoSpiderRangedWebState* GetDefaultObj();

};

// 0x8 (0xC0 - 0xB8)
// Class ShooterGame.PrimalAIStateDinoSpineyLizardTailRangeState
class UPrimalAIStateDinoSpineyLizardTailRangeState : public UPrimalAIStateDinoRangedState
{
public:
	uint8                                        Pad_369E[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalAIStateDinoSpineyLizardTailRangeState* GetDefaultObj();

};

// 0xB8 (0x400 - 0x348)
// Class ShooterGame.PrimalAnimInstance
class UPrimalAnimInstance : public UAnimInstance
{
public:
	class APrimalCharacter*                      MyPrimalCharOwner;                                 // 0x348(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	class UPrimalCharacterMovement*              MyPrimalMovementComp;                              // 0x350(0x8)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentDeltaTime;                                  // 0x358(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_36A2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               CurrentOwnerVelocity;                              // 0x360(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CurrentOwnerAcceleration;                          // 0x378(0x18)(ConstParm, Net, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CurrentMeshVelocity;                               // 0x390(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentMeshSpeed;                                  // 0x3A8(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_36A3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               CurrentMeshAcceleration;                           // 0x3B0(0x18)(Edit, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PreviousMeshLocation;                              // 0x3C8(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PreviousMeshVelocity;                              // 0x3E0(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCheatDisableIK;                                   // 0x3F8(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableAnimationGroundConforming : 1;              // Mask: 0x1, PropSize: 0x10x3F9(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_36A4[0x6];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalAnimInstance* GetDefaultObj();

	void RefreshCachedTraversalVars();
	struct FRotator PlayHitEffect(float DamageTaken, const struct FVector& HitVelocity, class FName ImpactedBoneName, struct FDamageEvent* DamageEvent, class APawn* PawnInstigator, class AActor* DamageCauser, bool bHitKilledDino, bool UsesImpulse, const struct FVector& CalculatedHitImpulse, TSoftObjectPtr<class AShooterProjectile> ProjectileRef);
	void OnSuddenStop(const struct FVector& PrevVelocity, class APawn* PawnInstigator);
	void GenerateDebugText(const class FString& Result);
};

// 0x188 (0x1C0 - 0x38)
// Class ShooterGame.PrimalAssets
class UPrimalAssets : public UPrimalAssetsBase
{
public:
	uint8                                        Pad_36A5[0x138];                                   // Fixing Size After Last Property  > TateDumper <
	TMap<class UObject*, struct FAssetRetainer>  RetainedObjects;                                   // 0x170(0x50)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalAssets* GetDefaultObj();

	class UClass* ClassAssetResolve(TSoftClassPtr<class UObject> Ptr);
	class UClass* ClassAssetRequest(TSoftClassPtr<class UObject> Ptr);
	class UObject* AssetResolve(TSoftObjectPtr<class UObject> Ptr);
	class UObject* AssetRequest(TSoftObjectPtr<class UObject> Ptr);
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.PrimalAutocastFunctions
class UPrimalAutocastFunctions : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPrimalAutocastFunctions* GetDefaultObj();

	class AActor* ToCompOwner(class UActorComponent** InComponent);
	class APrimalCharacter* PrimalPawnToPrimalCharacter();
	class AShooterGameMode* PrimalGameModeToShooterGameMode(class APrimalGameMode** InGameMode);
	class UShooterGameInstance* PrimalGameInstanceToShooterGameInstance(class UPrimalGameInstance* InInstance);
	class UShooterDamageType* PrimalDamageToShooterDamage(class UPrimalDamageType** InDamage);
	class AShooterPlayerController* PPCToSPC();
	class UPrimalPathFollowingComponent* PFCFromDinoAIController();
	class UPrimalPathFollowingComponent* PFCFromAIController();
	class AShooterPlayerController* PCToSPC();
	class APrimalPlayerController* PCToPPC();
	class APrimalPawn* PawnToPrimalPawn();
	class APrimalCharacter* PawnToPrimalCharacter();
	class UShooterLocalPlayer* LocalPlayerToShooterLocalPlayer(class ULocalPlayer** InPlayer);
	class AShooterHUD* HUDToShooterHUD(class AHUD** InHUD);
	class AShooterGameState* GameStateToShooterGameState(class AGameState** InGameState);
	class AShooterGameState* GameStateBaseToShooterGameState(class AGameStateBase** InGameState);
	class AGameState* GameStateBaseToGameState(class AGameStateBase** InGameState);
	class AShooterGameMode* GameModeToShooterGameMode(class AGameMode** InGameMode);
	class APrimalGameMode* GameModeToPrimalGameMode(class AGameMode** InGameMode);
	class AShooterGameMode* GameModeBaseToShooterGameMode(class AGameModeBase** InGameMode);
	class APrimalGameMode* GameModeBaseToPrimalGameMode(class AGameModeBase** InGameMode);
	class UShooterGameInstance* GameInstanceToShooterGameInstance(class UGameInstance* InInstance);
	class UPrimalGameInstance* GameInstanceToPrimalGameInstance(class UGameInstance* InInstance);
	double FloatToDouble(double* Value);
	double DoubleToFloat(double* Value);
	class UShooterDamageType* DamageToShooterDamage(class UDamageType** InDamage);
	class UPrimalDamageType* DamageToPrimalDamage(class UDamageType** InDamage);
	class APrimalController* ControllertoPrimalController();
	class APrimalCharacter* CharacterToPrimalCharacter(class ACharacter* InCharacter);
	class UPrimalCharacterMovement* CharacterMovementToPCM(class UCharacterMovementComponent* InMovement);
	class APrimalDinoAIController* AIControllerToDinoAIController();
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.PrimalBlueprintFunctions
class UPrimalBlueprintFunctions : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPrimalBlueprintFunctions* GetDefaultObj();

	class UPrimitiveComponent* SetCastFarShadow(bool bCastFarShadow);
	struct FTimerHandle K2_SetTimerForNextTickDelegate(FDelegateProperty_ Delegate, bool* bLooping);
	struct FTimerHandle K2_SetTimerForNextTick(class UObject** Object, const class FString& FunctionName, bool* bLooping);
	struct FRotator GetInjectedLightDirection(class UObject** WorldContextObject, class ADirectionalLight** ForLight);
	class UBehaviorTreeComponent* GetBehaviorTree(class UBTNode** NodeOwner);
	void ForceNotifyBlackboardValue(class UBTNode** NodeOwner, const struct FBlackboardKeySelector& Key);
	struct FTransform ConvertTransformToRelative();
	int32 ControllerEvent_GetUserIndex(const struct FControllerEvent& Input);
	struct FKey ControllerEvent_GetEffectingButton(const struct FControllerEvent& Input);
	float ControllerEvent_GetAnalogValue(const struct FControllerEvent& Input);
};

// 0x440 (0xA38 - 0x5F8)
// Class ShooterGame.PrimalDinoAIController
class APrimalDinoAIController : public AAIController
{
public:
	uint8                                        Pad_3727[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DieIfLeftWaterWanderMinimumWaterHeightMultiplier;  // 0x600(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        DieIfLeftWaterReachedRadiusDistanceCheckMultiplier; // 0x604(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        DieIfLeftWaterTargetUnsubmergedTimeout;            // 0x608(0x4)(BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        LandDinoMaxWaterTargetDepthCapsuleMultiplier;      // 0x60C(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraCorpseTargetingRange;                         // 0x610(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        FleeFromAttackCoolDownTime;                        // 0x614(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        FleeFromAttackTimeLimit;                           // 0x618(0x4)(BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ForceFleeUnderHealthPercentage;                    // 0x61C(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFleeOnCriticalHealth;                             // 0x620(0x1)(ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_372A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DieIfLeftWaterTargetingRequiresFreeDepth;          // 0x624(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        DieIfLeftWaterWanderRequiresCapsuleMultiFreeDepth; // 0x628(0x4)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_372B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastBlockadeCheckTime;                             // 0x630(0x8)(Edit, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	double                                       LastMovingAroundBlockadeTime;                      // 0x638(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        MovingAroundBlockadeDirection;                     // 0x640(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_372C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               MovingAroundBlockadePoint;                         // 0x648(0x18)(Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        LastBlockadeWidth;                                 // 0x660(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_372D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LastBlockadeHitNormal;                             // 0x668(0x18)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LastBlockadeHitLocation;                           // 0x680(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               StartMovingAroundBlockadeLocation;                 // 0x698(0x18)(Edit, ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                LastMovingAroundBlockadeActor;                     // 0x6B0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcedAggro : 1;                                  // Mask: 0x1, PropSize: 0x10x6B8(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_297 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_372E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ForceTargetActor;                                  // 0x6C0(0x8)(Edit, ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeferredTickMode : 1;                             // Mask: 0x1, PropSize: 0x10x6C8(0x1)(Edit, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_298 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_372F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                Target;                                            // 0x6D0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config)
	float                                        AttackDestinationOffset;                           // 0x6D8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseOverlapTargetCheck;                            // 0x6DC(0x1)(ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNotifyNeighborsWithoutDamage;                     // 0x6DD(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPShouldNotifyNeighbor;                        // 0x6DE(0x1)(ConstParm, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPShouldNotifyAnyNeighbor;                     // 0x6DF(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRequireAbsoluteDamageForNeighborNotification;     // 0x6E0(0x1)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3730[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AboveDeltaZAttackRange;                            // 0x6E4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        BelowDeltaZAttackRange;                            // 0x6E8(0x4)(ConstParm, ExportObject, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        WildAboveDeltaZTargetingRange;                     // 0x6EC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        WildBelowDeltaZTargetingRange;                     // 0x6F0(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWildUseDeltaZTargetingForFlyerPawnOrBigDino;      // 0x6F4(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3732[0x13];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bDontWander;                                       // 0x708(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyOverlapTargetCorpsesUnlessHasTarget;          // 0x709(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3733[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        NaturalTargetingRange;                             // 0x70C(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedTargetingRange;                               // 0x710(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedCorpseFoodTargetingRange;                     // 0x714(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        WanderRandomDistanceAmount;                        // 0x718(0x4)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        FlyingWanderFixedDistanceAmount;                   // 0x71C(0x4)(ConstParm, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FlyingWanderRandomDistanceAmount;                  // 0x720(0x4)(Edit, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxFlyingTargetDeltaZ;                             // 0x724(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        WanderFlyingZScaler;                               // 0x728(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        WanderFlyingClampZHeightAboveGround;               // 0x72C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        WanderFlyingMinZHeightAboveGround;                 // 0x730(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        WanderFixedDistanceAmount;                         // 0x734(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseAggro;                                         // 0x738(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3734[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinAggroValue;                                     // 0x73C(0x4)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        AggroToAddUponRemovingTarget;                      // 0x740(0x4)(ConstParm, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        AggroToAddUponAcquiringTarget;                     // 0x744(0x4)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        AggroFactorDecreaseSpeed;                          // 0x748(0x4)(Edit, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        AggroFactorDecreaseGracePeriod;                    // 0x74C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        AggroFactorDamagePercentageMultiplier;             // 0x750(0x4)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        AggroNotifyNeighborsMultiplier;                    // 0x754(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        AggroNotifyNeighborsRange;                         // 0x758(0x4)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        AggroNotifyNeighborsRangeFalloff;                  // 0x75C(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TargetingDistanceReductionFactorLinear;            // 0x760(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TargetingDistanceReductionFactorExponent;          // 0x764(0x4)(Edit, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        BeyondTargetingRangeAggroAddition;                 // 0x768(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        AggroFactorDesirabilityMultiplier;                 // 0x76C(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        AttackRange;                                       // 0x770(0x4)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        AttackInterval;                                    // 0x774(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        AttackRotationRangeDegrees;                        // 0x778(0x4)(ConstParm, Net, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        AttackRotationGroundSpeedMultiplier;               // 0x77C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        RangeTargetWildDinosMultiplier;                    // 0x780(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3736[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              AttackRotationRate;                                // 0x788(0x18)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bFocusOnTargetDuringAttack;                        // 0x7A0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3737[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               FlyingMoveTowardsTargetOffset;                     // 0x7A8(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CombatFlyingMoveTowardsTargetOffset;               // 0x7C0(0x18)(BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               FlyingTargetFocalPositionOffset;                   // 0x7D8(0x18)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        FlyingReachedDestinationThresholdOffset;           // 0x7F0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        SeekingIntervalCheckToFly;                         // 0x7F4(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        SeekingPercentChanceToFly;                         // 0x7F8(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        SeekingIntervalCheckToLand;                        // 0x7FC(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        SeekingPercentChanceToLand;                        // 0x800(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        MinimumWanderGroundNormalZ;                        // 0x804(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        FollowStoppingDistance;                            // 0x808(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CorpseAttackDestinationMultiplier;                 // 0x80C(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseOverlapTargetCheckTraces;                      // 0x810(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseAlternateMovePoint;                            // 0x811(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTotallyIgnoreWaterTargets;                        // 0x812(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWaterDinoAllowUnsubmergedTargets;                 // 0x813(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3739[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LastCheckAttackRangePawnLocation;                  // 0x818(0x18)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LastCheckAttackRangeClosestPoint;                  // 0x830(0x18)(Edit, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LastCheckAttackRangeTargetLocation;                // 0x848(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                LastCheckAttackRangeTarget;                        // 0x860(0x8)(Edit, ExportObject, Net, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         HasAttackPriority;                                 // 0x868(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance)
	uint8                                        Pad_373A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<float>                                TamedAITargetingRangeMultipliers;                  // 0x870(0x10)(ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        MateBoostAggroNotifyNeighborsMultiplier;           // 0x880(0x4)(Edit, ConstParm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_373B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UBehaviorTree*                         BehaviourTree;                                     // 0x888(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UBehaviorTree*                         HasEnemyTree;                                      // 0x890(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UBehaviorTree*                         BabyHasEnemyTree;                                  // 0x898(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UBehaviorTree*                         ForcedAggroHasEnemyTree;                           // 0x8A0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UBehaviorTree*                         NoEnemyTree;                                       // 0x8A8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UBehaviorTree*                         FleeFromAttackTree;                                // 0x8B0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UBehaviorTree*                         TamedNoEnemyTree;                                  // 0x8B8(0x8)(BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UBehaviorTree*                         MissionTree;                                       // 0x8C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> AggroNotifyNeighborsClasses;                       // 0x8C8(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreMoveAroundBlockade : 1;                     // Mask: 0x1, PropSize: 0x10x8D8(0x1)(Net, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlyingUseMoveAroundBlockade : 1;                  // Mask: 0x2, PropSize: 0x10x8D8(0x1)(Edit, BlueprintReadOnly, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseGeometryInsteadOfStationObjForFreeDepthTest : 1; // Mask: 0x4, PropSize: 0x10x8D8(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNotifyBPTargetSet : 1;                            // Mask: 0x8, PropSize: 0x10x8D8(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSetupFindTarget : 1;                         // Mask: 0x10, PropSize: 0x10x8D8(0x1)(ConstParm, Net, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNotAllowedToFindTargets : 1;                      // Mask: 0x20, PropSize: 0x10x8D8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowForceFleeToSameTargetingTeam : 1;            // Mask: 0x40, PropSize: 0x10x8D8(0x1)(Edit, ConstParm, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPUpdateBestTarget : 1;                        // Mask: 0x80, PropSize: 0x10x8D8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3740[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MoveAroundBlockadeAdditionalWidth;                 // 0x8DC(0x4)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        MoveAroundObjectMaxVelocity;                       // 0x8E0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ForcedAggroTimeCounter;                            // 0x8E4(0x4)(ConstParm, ExportObject, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedMaxFollowDistance;                            // 0x8E8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTargetChanged : 1;                                // Mask: 0x1, PropSize: 0x10x8EC(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAttackForcesRunning : 1;                          // Mask: 0x2, PropSize: 0x10x8EC(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseFlyingTargetOffsets : 1;                       // Mask: 0x4, PropSize: 0x10x8EC(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRidingDinoTargetPlayer : 1;                       // Mask: 0x8, PropSize: 0x10x8EC(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRidingPlayerTargetDino : 1;                       // Mask: 0x10, PropSize: 0x10x8EC(0x1)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreWaterOrAmphibiousTargets : 1;               // Mask: 0x20, PropSize: 0x10x8EC(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPTargetingDesire : 1;                         // Mask: 0x40, PropSize: 0x10x8EC(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableForceFlee : 1;                             // Mask: 0x80, PropSize: 0x10x8EC(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCombatMoveTowardsTargetOffset : 1;             // Mask: 0x1, PropSize: 0x10x8ED(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideIgnoredByWildDino : 1;               // Mask: 0x2, PropSize: 0x10x8ED(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanUseAttackStateOnTargetChange : 1;              // Mask: 0x4, PropSize: 0x10x8ED(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_299 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bForceOnlyTargetingPlayerOrTamed : 1;              // Mask: 0x10, PropSize: 0x10x8ED(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceTargetingAllStructures : 1;                  // Mask: 0x20, PropSize: 0x10x8ED(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceTargetDinoRider : 1;                         // Mask: 0x40, PropSize: 0x10x8ED(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlyerAllowWaterTargeting : 1;                     // Mask: 0x80, PropSize: 0x10x8ED(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPForceTargetDinoRider : 1;                    // Mask: 0x1, PropSize: 0x10x8EE(0x1)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysStartledWhenAggroedByNeighbor : 1;          // Mask: 0x2, PropSize: 0x10x8EE(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceOnlyTargetingPlayers : 1;                    // Mask: 0x4, PropSize: 0x10x8EE(0x1)(OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsMissionDino : 1;                                // Mask: 0x8, PropSize: 0x10x8EE(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseImprovedAggroFalloffBehavior : 1;              // Mask: 0x10, PropSize: 0x10x8EE(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_29A : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3741[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BaseStructureTargetingDesire;                      // 0x8F0(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        LandDinoMaxFlyerTargetDeltaZ;                      // 0x8F4(0x4)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        NaturalMaxDepthZ;                                  // 0x8F8(0x4)(EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AActor>                 ForcedAttackTarget;                                // 0x8FC(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        ForcedAttackEnemyTeam;                             // 0x904(0x4)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	double                                       LastForcedAttackEnemyTeamTime;                     // 0x908(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3742[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        ForcedFleeDuration;                                // 0x924(0x4)(BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        MinAttackIntervalForFleeing;                       // 0x928(0x4)(Edit, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        MinAttackIntervalForFleeing_Water;                 // 0x92C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        MinLocChangeIntervalForFleeing;                    // 0x930(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        PercentageTorporForFleeing;                        // 0x934(0x4)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        DamagedForceAggroInterval;                         // 0x938(0x4)(Edit, ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3743[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ForceAggroUntilTime;                               // 0x940(0x8)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	double                                       LastExecutedAttackTime;                            // 0x948(0x8)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	double                                       LastForcedFleeTime;                                // 0x950(0x8)(ConstParm, Net, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	double                                       LastFleeLocCheckTime;                              // 0x958(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3744[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        NumAlliesToAttack;                                 // 0x978(0x4)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        FindLandingPositionZOffset;                        // 0x97C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedFollowAcceptanceRadiusOffset;                 // 0x980(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedFollowAcceptanceHeightOffset;                 // 0x984(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        AIFlightMaxLandingZDistance;                       // 0x988(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3745[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ForcedMoveToUntilTime;                             // 0x990(0x8)(EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3746[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBP_TamedOverrideHorizontalLandingRange : 1;    // Mask: 0x1, PropSize: 0x10x9A0(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlyerWanderDefaultToOrigin : 1;                   // Mask: 0x2, PropSize: 0x10x9A0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheckBuffTargetingDesireOverride : 1;             // Mask: 0x4, PropSize: 0x10x9A0(0x1)(Edit, ExportObject, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowSwimWanderingForLandDinos : 1;               // Mask: 0x8, PropSize: 0x10x9A0(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUse_BPOverrideLandingLocation : 1;                // Mask: 0x10, PropSize: 0x10x9A0(0x1)(ExportObject, Net, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_29B : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3747[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class AActor>>          WildTargetingDesireMultiplierClasses;              // 0x9A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                WildTargetingDesireMultiplierValues;               // 0x9B8(0x10)(ConstParm, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AActor>>          TamedTargetingDesireMultiplierClasses;             // 0x9C8(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                TamedTargetingDesireMultiplierValues;              // 0x9D8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TSet<TWeakObjectPtr<class AActor>>           IgnoredTargets;                                    // 0x9E8(0x50)(Edit, ConstParm, BlueprintReadOnly, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalDinoAIController* GetDefaultObj();

	bool WantsAttackPriority();
	void UpdateMoveFocus();
	void UpdateAggro();
	void StopBrainComponent(class FString* Reason);
	struct FVector StaticGetRandomWanderDestination();
	bool ShouldForceRunWhenAttacking();
	bool SetTarget();
	void SetHasAttackPriority(bool* Value);
	void SetAttackRotationRate();
	void SetAttackGroundSpeed();
	void ResumeBrainComponent(class FString* Reason);
	void RestartBrainComponent();
	void ResetRotationUseAcceleration();
	void ResetRotationRate();
	void ResetGroundSpeed();
	void ResetAccelerationFollowsRotation();
	void RecoverMovement();
	void RebootBrainComponent();
	void PlayStartledAnim();
	void PauseBrainComponent(class FString* Reason);
	bool OrderedToLand();
	void OnLosingTargetEvent();
	bool IsWithinAttackRangeAndCalculateBestAttack(class AActor* Other);
	bool IsWithinAttackRange(class AActor* Other);
	bool IsLogicPaused();
	bool IsForceTargetDinoRider();
	struct FVector GetWanderAroundActorDestination();
	class AActor* GetTarget();
	struct FVector GetRandomWanderDestination();
	float GetMinAttackRange();
	struct FVector GetLandingLocation();
	bool GetHasAttackPriority();
	uint8 GetCurrentAttackIndex();
	class APawn* GetControllerPawn();
	class APrimalDinoCharacter* GetControlledDino();
	class UStaticMeshComponent* GetClosestTree();
	struct FRotator GetAttackRotationRate();
	float GetAttackRotationRangeDegrees();
	float GetAttackRotationGroundSpeedMultiplier();
	float GetAttackRange();
	float GetAttackInterval();
	float GetAggroNotifyNeighborsRange();
	bool GetAggroEntry();
	int32 GetAggroEntriesCount();
	class AActor* GetAggroEntriesAttackerAtIndex();
	float GetAggroDesirability();
	class AActor* FindTarget();
	class AActor* FindNewTarget();
	void ClearAggroEntries();
	void ChangedAITarget();
	bool CanLand();
	bool CalculateAndSetWonderingAIStateEvent();
	bool CalculateAndSetWonderingAIState();
	class AActor* BPUpdateBestTarget();
	bool BPShouldNotifyNeighbor();
	bool BPShouldNotifyAnyNeighbor();
	void BPSetupFindTarget();
	struct FVector BPOverrideLandingLocation();
	bool BPOverrideIgnoredByWildDino();
	void BPOnFleeEvent();
	void BPNotifyTargetSet();
	float BPGetTargetingDesire(class AActor** ForTarget, float* ForTargetingDesireValue);
	bool BPForceTargetDinoRider();
	struct FVector2D BP_TamedOverrideHorizontalLandingRange();
	void AvoidOutOfWater();
	struct FVector AvoidGenericToPoint();
	bool AddToAggro(class AActor** Attacker, bool* SetValue);
};

// 0x28 (0xA60 - 0xA38)
// Class ShooterGame.PrimalBotAIController
class APrimalBotAIController : public APrimalDinoAIController
{
public:
	float                                        DinoSearchRadius;                                  // 0xA38(0x4)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_374D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AAIAttackCoordinator*                  AttackCoordinator;                                 // 0xA40(0x8)(Edit, ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                RiddenDinoControllerClass;                         // 0xA48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalDinoCharacter>   ClaimedDino;                                       // 0xA50(0x8)(Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance)
	uint8                                        Pad_374E[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalBotAIController* GetDefaultObj();

	void UpdateDinoClaim();
	float TimeSinceGivenAttackPriority();
	class AAIAttackCoordinator* SetAttackCoordinator();
	void ReleaseClaimOnDino();
	bool IsTooFarToAttack();
	bool IsTooCloseToAttack();
	class APrimalBotCharacter* InitializeBlackboardValues();
	bool ClaimDino(class APrimalDinoCharacter* Dino);
};

// 0xB8 (0x34E0 - 0x3428)
// Class ShooterGame.PrimalBotCharacter
class APrimalBotCharacter : public APrimalDinoCharacter
{
public:
	class USkeletalMesh*                         AlternateSkeletalMesh;                             // 0x3428(0x8)(Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                AlternateAnimBP;                                   // 0x3430(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         AlternateDinoRidingAnimation;                      // 0x3438(0x8)(ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         AlternateDinoRidingMoveAnimation;                  // 0x3440(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         HasMeleeWeapon;                                    // 0x3448(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3756[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> RideableDinoClasses;                               // 0x3450(0x10)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsRiding;                                         // 0x3460(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3759[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimSequence*                         DefaultDinoRidingAnimation;                        // 0x3468(0x8)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         DefaultDinoRidingMoveAnimation;                    // 0x3470(0x8)(EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         UseAltAimOffsetAnimation;                          // 0x3478(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsStationary;                                     // 0x3479(0x1)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_375B[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class APrimalDinoCharacter>   DinoBeingRidden;                                   // 0x347C(0x8)(ConstParm, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsUsingAlternateMesh;                             // 0x3484(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_375C[0x5B];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalBotCharacter* GetDefaultObj();

	void OnRep_RidingDino();
	bool IsUsingAlternateSkelMesh();
	float GetMinAttackRange();
	float GetMaxAttackRange();
	class UAnimSequence* GetDinoRidingMoveAnimation();
	class UAnimSequence* GetDinoRidingAnimation();
	class UAnimSequence* GetBotAnimSequenceOverride(class UAnimSequence* AnimSeq);
	class APrimalDinoCharacter* CurrentlyRiddenDino();
	void ClearRidingDino();
	bool CanRideDino(class APrimalDinoCharacter* Dino);
	void AttachToDino(class APrimalDinoCharacter* Dino);
};

// 0x10 (0xC8 - 0xB8)
// Class ShooterGame.PrimalBotRidingComponent
class UPrimalBotRidingComponent : public UActorComponent
{
public:
	TWeakObjectPtr<class APrimalBotCharacter>    Rider;                                             // 0xB8(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalBotCharacter>    Claimer;                                           // 0xC0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalBotRidingComponent* GetDefaultObj();

};

// 0xC8 (0x5E0 - 0x518)
// Class ShooterGame.PrimalEmitterSpawnable
class APrimalEmitterSpawnable : public AEmitter
{
public:
	class USceneComponent*                       RootTransformComp;                                 // 0x518(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       SoundToPlay;                                       // 0x520(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class UClass*                                CameraShake;                                       // 0x528(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, SubobjectReference)
	float                                        CameraShakeInnerRadius;                            // 0x530(0x4)(Edit, ConstParm, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	float                                        CameraShakeOuterRadius;                            // 0x534(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditConst, InstancedReference, SubobjectReference)
	float                                        CameraShakeFalloff;                                // 0x538(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditConst, InstancedReference, SubobjectReference)
	float                                        CameraShakeScaleMultiplier;                        // 0x53C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditConst, InstancedReference, SubobjectReference)
	struct FDecalData                            DecalToSpawn;                                      // 0x540(0x20)(ExportObject, BlueprintReadOnly, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCameraShakeOrientTowardsEpicenter : 1;            // Mask: 0x1, PropSize: 0x10x560(0x1)(ConstParm, BlueprintVisible, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHighPrioritySound : 1;                            // Mask: 0x2, PropSize: 0x10x560(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShallowEmitterSpawnable : 1;                      // Mask: 0x4, PropSize: 0x10x560(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShallowEmitterDontSpawnOutOfView : 1;             // Mask: 0x8, PropSize: 0x10x560(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowLoopingEmitter : 1;                          // Mask: 0x10, PropSize: 0x10x560(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceNoRotation : 1;                              // Mask: 0x20, PropSize: 0x10x560(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTickSoundInRangePlayback : 1;                     // Mask: 0x40, PropSize: 0x10x560(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWasActivated : 1;                                 // Mask: 0x80, PropSize: 0x10x560(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_29C : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHasImpulseDataAvailable : 1;                      // Mask: 0x2, PropSize: 0x10x561(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_29D : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_376A[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ShallowEmitterDontSpawnOutOfViewCheckRadius;       // 0x564(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ShallowEmitterOverrideSecondsBeforeInactive;       // 0x568(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ActivateSoundFadeInDuration;                       // 0x56C(0x4)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        DeactivateSoundFadeOutDuration;                    // 0x570(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ShallowEmitterSpawnableMaxDistance;                // 0x574(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDelayedDeactivation;                              // 0x578(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_376B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          ColorParameter;                                    // 0x57C(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_376C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraComponent*                     NiagaraComponent;                                  // 0x590(0x8)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst)
	class AActor*                                SpawnedForActor;                                   // 0x598(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ImpulseData;                                       // 0x5A0(0x18)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               HitLocation;                                       // 0x5B8(0x18)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        bUseNiagaraDestroyOnSystemFinish : 1;              // Mask: 0x1, PropSize: 0x10x5D0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_29E : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_376D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraComponent*                     EmitterNiagaraComponent;                           // 0x5D8(0x8)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalEmitterSpawnable* GetDefaultObj();

	class AActor* UpdateEmitter(float Alpha);
	bool ToggleActivation();
	void StartDeactivation();
	void StartActivation();
	class AActor* SetupEmitter();
	void SetImpulseData(struct FDamageEvent* DamageEvent, class APawn* InstigatingPawn);
	void PreActivation();
	void OnNiagaraSystemFinished(class UNiagaraComponent* FinishedComponent);
	void BPCustomApplyColor(struct FLinearColor* Color);
};

// 0x588 (0xB68 - 0x5E0)
// Class ShooterGame.PrimalBuff
class APrimalBuff : public APrimalEmitterSpawnable
{
public:
	float                                        DeactivationLifespan;                              // 0x5E0(0x4)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  InstigatorAttachmentSocket;                        // 0x5E4(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  InstigatorAttachmentSocket_PlayerOverride;         // 0x5EC(0x8)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSlowInstigatorFalling : 1;                        // Mask: 0x1, PropSize: 0x10x5F4(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeactivateOnJump : 1;                             // Mask: 0x2, PropSize: 0x10x5F4(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventJump : 1;                                  // Mask: 0x4, PropSize: 0x10x5F4(0x1)(ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDinoRiding : 1;                            // Mask: 0x8, PropSize: 0x10x5F4(0x1)(BlueprintVisible, Net, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDinoDismount : 1;                          // Mask: 0x10, PropSize: 0x10x5F4(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_29F : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_383A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPNotifyPreventDismounting : 1;                // Mask: 0x1, PropSize: 0x10x5F8(0x1)(Edit, ExportObject, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceShowFloatingName : 1;                        // Mask: 0x2, PropSize: 0x10x5F8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceHideFloatingName : 1;                        // Mask: 0x4, PropSize: 0x10x5F8(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2A0 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_383B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bPreventCarryOrPassenger : 1;                      // Mask: 0x1, PropSize: 0x10x5FC(0x1)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeactivated : 1;                                  // Mask: 0x2, PropSize: 0x10x5FC(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesInstigator : 1;                               // Mask: 0x4, PropSize: 0x10x5FC(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFollowTarget : 1;                                 // Mask: 0x8, PropSize: 0x10x5FC(0x1)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideRightShoulderOnPlayer : 1;                // Mask: 0x10, PropSize: 0x10x5FC(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAddCharacterValues : 1;                           // Mask: 0x20, PropSize: 0x10x5FC(0x1)(Edit, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyAddCharacterValuesUnderwater : 1;             // Mask: 0x40, PropSize: 0x10x5FC(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableIfCharacterUnderwater : 1;                 // Mask: 0x80, PropSize: 0x10x5FC(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseInstigatorItem : 1;                            // Mask: 0x1, PropSize: 0x10x5FD(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyOnTargetStasis : 1;                        // Mask: 0x2, PropSize: 0x10x5FD(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAoETraceToTargets : 1;                            // Mask: 0x4, PropSize: 0x10x5FD(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAOEOnlyApplyOtherBuffToWildDinos : 1;             // Mask: 0x8, PropSize: 0x10x5FD(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAoEIgnoreDinosTargetingInstigator : 1;            // Mask: 0x10, PropSize: 0x10x5FD(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAoEOnlyOnDinosTargetingInstigator : 1;            // Mask: 0x20, PropSize: 0x10x5FD(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBuffForceNoTick : 1;                              // Mask: 0x40, PropSize: 0x10x5FD(0x1)(BlueprintReadOnly, Net, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBuffForceNoTickDedicated : 1;                     // Mask: 0x80, PropSize: 0x10x5FD(0x1)(ConstParm, Net, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCustomDepthStencilIgnoreHealth : 1;               // Mask: 0x1, PropSize: 0x10x5FE(0x1)(Edit, BlueprintReadOnly, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCompleteCustomDepthStencilOverride : 1;           // Mask: 0x2, PropSize: 0x10x5FE(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseActivateSoundFadeInDuration : 1;               // Mask: 0x4, PropSize: 0x10x5FE(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDinoIgnoreBuffPostprocessEffectWhenRidden : 1;    // Mask: 0x8, PropSize: 0x10x5FE(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPlayerIgnoreBuffPostprocessEffectWhenRidingDino : 1; // Mask: 0x10, PropSize: 0x10x5FE(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemoteForcedFlee : 1;                             // Mask: 0x20, PropSize: 0x10x5FE(0x1)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2A1 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_383C[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RemoteForcedFleeDuration;                          // 0x600(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_383D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               AoETraceToTargetsStartOffset;                      // 0x608(0x18)(ExportObject, BlueprintReadOnly, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AActor>                 Target;                                            // 0x620(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config)
	TWeakObjectPtr<class UPrimalItem>            InstigatorItem;                                    // 0x628(0x8)(BlueprintReadOnly, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SlowInstigatorFallingAddZVelocity;                 // 0x630(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SlowInstigatorFallingDampenZVelocity;              // 0x634(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DeactivateAfterTime;                               // 0x638(0x4)(Net, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        WeaponRecoilMultiplier;                            // 0x63C(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ReceiveDamageMultiplier;                           // 0x640(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        MeleeDamageMultiplier;                             // 0x644(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DepleteInstigatorItemDurabilityPerSecond;          // 0x648(0x4)(ConstParm, BlueprintVisible, Net, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ValuesToAddPerSecond[0xC];                         // 0x64C(0x30)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_383F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FStatusValueModifierDescription       BuffDescription;                                   // 0x680(0x50)(ConstParm, BlueprintReadOnly, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        CharacterAdd_DefaultHyperthermicInsulation;        // 0x6D0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        CharacterAdd_DefaultHypothermicInsulation;         // 0x6D4(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        CharacterMultiplier_ExtraWaterConsumptionMultiplier; // 0x6D8(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        CharacterMultiplier_ExtraFoodConsumptionMultiplier; // 0x6DC(0x4)(Edit, BlueprintReadOnly, Net, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        CharacterMultiplier_SubmergedOxygenDecreaseSpeed;  // 0x6E0(0x4)(ExportObject, BlueprintReadOnly, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ViewMinExposureMultiplier;                         // 0x6E4(0x4)(ConstParm, ExportObject, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ViewMaxExposureMultiplier;                         // 0x6E8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        XPtoAdd;                                           // 0x6EC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        XPtoAddRate;                                       // 0x6F0(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        DinoColorizationPriority;                          // 0x6F4(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoColorizationInterpSpeed;                       // 0x6F8(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDinoRefreshColorization : 1;                 // Mask: 0x1, PropSize: 0x10x6FC(0x1)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideInventoryWeightMultipliers : 1;           // Mask: 0x2, PropSize: 0x10x6FC(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeactivateAfterAddingXP : 1;                      // Mask: 0x4, PropSize: 0x10x6FC(0x1)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2A2 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3844[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FItemMultiplier>               OverrideInventoryItemClassWeightMultipliers;       // 0x700(0x10)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3845[0x60];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bOnlyActivateSoundForInstigator : 1;               // Mask: 0x1, PropSize: 0x10x770(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAOEBuffCarnosOnly : 1;                            // Mask: 0x2, PropSize: 0x10x770(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCausesCryoSickness : 1;                           // Mask: 0x4, PropSize: 0x10x770(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bModifyMaxSpeed : 1;                               // Mask: 0x8, PropSize: 0x10x770(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisplayHUDProgressBar : 1;                        // Mask: 0x10, PropSize: 0x10x770(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceUsePreventTargeting : 1;                     // Mask: 0x20, PropSize: 0x10x770(0x1)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceUsePreventTargetingTurret : 1;               // Mask: 0x40, PropSize: 0x10x770(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideWeaponBob : 1;                          // Mask: 0x80, PropSize: 0x10x770(0x1)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPModifyPlayerBoneModifiers : 1;               // Mask: 0x1, PropSize: 0x10x771(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDediServerUseBPModifyPlayerBoneModifiers : 1;     // Mask: 0x2, PropSize: 0x10x771(0x1)(Edit, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNonDedicatedPlayerPostAnimUpdate : 1;        // Mask: 0x4, PropSize: 0x10x771(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPIsCharacterHardAttached : 1;                 // Mask: 0x8, PropSize: 0x10x771(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoCharacterDetachment : 1;                        // Mask: 0x10, PropSize: 0x10x771(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoCharacterDetachmentIncludeRiding : 1;           // Mask: 0x20, PropSize: 0x10x771(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoCharacterDetachmentIncludeCarrying : 1;         // Mask: 0x40, PropSize: 0x10x771(0x1)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPInitializedCharacterAnimScriptInstance : 1;  // Mask: 0x80, PropSize: 0x10x771(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanBeCarried : 1;                            // Mask: 0x1, PropSize: 0x10x772(0x1)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsePostAdjustDamage : 1;                          // Mask: 0x2, PropSize: 0x10x772(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventFallDamage : 1;                            // Mask: 0x4, PropSize: 0x10x772(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnInstigatorCapsuleComponentHit : 1;         // Mask: 0x8, PropSize: 0x10x772(0x1)(Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2A3 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPOverrideCameraViewTarget : 1;                // Mask: 0x20, PropSize: 0x10x772(0x1)(Edit, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPForceCameraStyle : 1;                        // Mask: 0x40, PropSize: 0x10x772(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPIsValidUnstasisActor : 1;                    // Mask: 0x80, PropSize: 0x10x772(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideIsNetRelevantFor : 1;                // Mask: 0x1, PropSize: 0x10x773(0x1)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventClearRiderOnDinoImmobilize : 1;            // Mask: 0x2, PropSize: 0x10x773(0x1)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysShowBuffDescription : 1;                    // Mask: 0x4, PropSize: 0x10x773(0x1)(ConstParm, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2A4 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        SubmergedMaxSpeedModifier;                         // 0x774(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        UnsubmergedMaxSpeedModifier;                       // 0x778(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        SubmergedMaxAccelerationModifier;                  // 0x77C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        UnsubmergedMaxAccelerationModifier;                // 0x780(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        SubmergedRotationRateModifier;                     // 0x784(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        UnsubmergedRotationRateModifier;                   // 0x788(0x4)(Edit, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        FrictionModifier;                                  // 0x78C(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDamagePrimalCharacterStatusValueModifier> CharacterStatusValueModifiers;                     // 0x790(0x10)(ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3849[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       BuffStartTime;                                     // 0x7A8(0x8)(Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_384A[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bForcedOnSpectatorPlayerController;                // 0x7B8(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_384B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftObjectPtr<class UMaterialInterface>     BuffPostProcessEffect;                             // 0x7C0(0x30)(ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AActor>>          PreventActorClassesTargeting;                      // 0x7F0(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                PreventActorClassesTargetingRanges;                // 0x800(0x10)(Edit, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class AMissionType*                          RelatedMission;                                    // 0x810(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHasRelatedMission;                                // 0x818(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_384C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bAOEApplyOtherBuffOnPlayers : 1;                   // Mask: 0x1, PropSize: 0x10x81C(0x1)(EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAOEApplyOtherBuffOnDinos : 1;                     // Mask: 0x2, PropSize: 0x10x81C(0x1)(ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAOEApplyOtherBuffIgnoreSameTeam : 1;              // Mask: 0x4, PropSize: 0x10x81C(0x1)(Edit, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAOEApplyOtherBuffRequireSameTeam : 1;             // Mask: 0x8, PropSize: 0x10x81C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBuffDrawFloatingHUD : 1;                          // Mask: 0x10, PropSize: 0x10x81C(0x1)(BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAddResetsBuffTime : 1;                            // Mask: 0x20, PropSize: 0x10x81C(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAoEBuffAllowIfAlreadyBuffed : 1;                  // Mask: 0x40, PropSize: 0x10x81C(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNetResetBuffStart : 1;                            // Mask: 0x80, PropSize: 0x10x81C(0x1)(Edit, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bImmobilizeTarget : 1;                             // Mask: 0x1, PropSize: 0x10x81D(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePlayerProne : 1;                             // Mask: 0x2, PropSize: 0x10x81D(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideBuffFromHUD : 1;                              // Mask: 0x4, PropSize: 0x10x81D(0x1)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideTimerFromHUD : 1;                             // Mask: 0x8, PropSize: 0x10x81D(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPAddMultiUseEntries : 1;                         // Mask: 0x10, PropSize: 0x10x81D(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsBuffPersistent : 1;                             // Mask: 0x20, PropSize: 0x10x81D(0x1)(BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPUseBumpedByPawn : 1;                            // Mask: 0x40, PropSize: 0x10x81D(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPUseBumpedPawn : 1;                              // Mask: 0x80, PropSize: 0x10x81D(0x1)(Edit, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowBuffWhenInstigatorDead : 1;                  // Mask: 0x1, PropSize: 0x10x81E(0x1)(ConstParm, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNotifyDamage : 1;                                 // Mask: 0x2, PropSize: 0x10x81E(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowBuffStasis : 1;                              // Mask: 0x4, PropSize: 0x10x81E(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bApplyStatModifierToPlayers : 1;                   // Mask: 0x8, PropSize: 0x10x81E(0x1)(ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bApplyStatModifierToDinos : 1;                     // Mask: 0x10, PropSize: 0x10x81E(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventOnWildDino : 1;                            // Mask: 0x20, PropSize: 0x10x81E(0x1)(ConstParm, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventOnDino : 1;                                // Mask: 0x40, PropSize: 0x10x81E(0x1)(ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventOnPlayer : 1;                              // Mask: 0x80, PropSize: 0x10x81E(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventOnBigDino : 1;                             // Mask: 0x1, PropSize: 0x10x81F(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventOnBossDino : 1;                            // Mask: 0x2, PropSize: 0x10x81F(0x1)(Edit, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventOnRobotDino : 1;                           // Mask: 0x4, PropSize: 0x10x81F(0x1)(ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDisease : 1;                                    // Mask: 0x8, PropSize: 0x10x81F(0x1)(BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventAddingOtherBuff : 1;                  // Mask: 0x10, PropSize: 0x10x81F(0x1)(Edit, BlueprintVisible, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventRunning : 1;                          // Mask: 0x20, PropSize: 0x10x81F(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2A5 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        PreventIfMovementMassGreaterThan;                  // 0x820(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3852[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class APrimalBuff>             AOEOtherBuffToApply;                               // 0x828(0x30)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        AOEBuffRange;                                      // 0x858(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        CharacterAOEBuffDamage;                            // 0x85C(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        CharacterAOEBuffResistance;                        // 0x860(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        Maximum2DVelocityForStaminaRecovery;               // 0x864(0x4)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyItemAdded : 1;                         // Mask: 0x1, PropSize: 0x10x868(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyItemQuantityUpdated : 1;               // Mask: 0x2, PropSize: 0x10x868(0x1)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyItemRemoved : 1;                       // Mask: 0x4, PropSize: 0x10x868(0x1)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAddReactivates : 1;                               // Mask: 0x8, PropSize: 0x10x868(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAoEApplyDamageAllTargetables : 1;                 // Mask: 0x10, PropSize: 0x10x868(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustCharacterMovementImpulse : 1;          // Mask: 0x20, PropSize: 0x10x868(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustImpulseFromDamage : 1;                 // Mask: 0x40, PropSize: 0x10x868(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetHUDElements : 1;                          // Mask: 0x80, PropSize: 0x10x868(0x1)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetCameraShakeScalar : 1;                    // Mask: 0x1, PropSize: 0x10x869(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDrawMissionDinoTargetHealthbars : 1;         // Mask: 0x2, PropSize: 0x10x869(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetWaypointsBuff : 1;                        // Mask: 0x4, PropSize: 0x10x869(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2A6 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3855[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UMaterialInterface*>            PostprocessBlendablesToExclude;                    // 0x870(0x10)(Edit, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3856[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class APrimalBuff>             BuffToGiveOnDeactivation;                          // 0x898(0x30)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalBuff>>     BuffClassesToCancelOnActivation;                   // 0x8C8(0x10)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalBuff>>     ActivePreventsBuffClasses;                         // 0x8D8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalCharacter>> BuffRequiresOwnerClass;                            // 0x8E8(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalCharacter>> BuffPreventsOwnerClass;                            // 0x8F8(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        XPEarningMultiplier;                               // 0x908(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPSetupForInstigator;                          // 0x90C(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPDeactivated;                                 // 0x90D(0x1)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPOverrideBuffToGiveOnDeactivation;            // 0x90E(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPCustomAllowAddBuff;                          // 0x90F(0x1)(ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPInformDamageCauserOfBuffAdded;               // 0x910(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPActivated : 1;                               // Mask: 0x1, PropSize: 0x10x911(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPHandleOnStartFire : 1;                       // Mask: 0x2, PropSize: 0x10x911(0x1)(ConstParm, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPHandleOnStartAltFire : 1;                    // Mask: 0x4, PropSize: 0x10x911(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPHandleOnStopAltFire : 1;                     // Mask: 0x8, PropSize: 0x10x911(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventFlight : 1;                           // Mask: 0x10, PropSize: 0x10x911(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRequireController : 1;                            // Mask: 0x20, PropSize: 0x10x911(0x1)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontPlayInstigatorActiveSoundOnDino : 1;          // Mask: 0x40, PropSize: 0x10x911(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAddExtendBuffTime : 1;                            // Mask: 0x80, PropSize: 0x10x911(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseTickingDeactivation : 1;                       // Mask: 0x1, PropSize: 0x10x912(0x1)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheckPreventInput : 1;                            // Mask: 0x2, PropSize: 0x10x912(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPDrawBuffStatusHUD : 1;                          // Mask: 0x4, PropSize: 0x10x912(0x1)(ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bStatusComponentUsingExtendedHUDText : 1;          // Mask: 0x8, PropSize: 0x10x912(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableStaticPathing : 1;                          // Mask: 0x10, PropSize: 0x10x912(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHUDFormatTimerAsTimecode : 1;                     // Mask: 0x20, PropSize: 0x10x912(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2A7 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_385B[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               StaticPathingDestination;                          // 0x918(0x18)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_385C[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPPreventThrowingItem : 1;                     // Mask: 0x1, PropSize: 0x10x938(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventInputDoesOffset : 1;                       // Mask: 0x2, PropSize: 0x10x938(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNotifyExperienceGained : 1;                       // Mask: 0x4, PropSize: 0x10x938(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyTickWhenVisible : 1;                          // Mask: 0x8, PropSize: 0x10x938(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPAdjustStatusValueModification : 1;              // Mask: 0x10, PropSize: 0x10x938(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2A8 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPNotifyOtherBuffActivated : 1;                // Mask: 0x40, PropSize: 0x10x938(0x1)(Edit, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyOtherBuffDeactivated : 1;              // Mask: 0x80, PropSize: 0x10x938(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventFirstPerson : 1;                      // Mask: 0x1, PropSize: 0x10x939(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAddUnderwaterCharacterStatusValues : 1;      // Mask: 0x2, PropSize: 0x10x939(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventInstigatorAttack : 1;                      // Mask: 0x4, PropSize: 0x10x939(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnInstigatorMovementModeChangedNotify : 1;   // Mask: 0x8, PropSize: 0x10x939(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventInstigatorMovementMode : 1;           // Mask: 0x10, PropSize: 0x10x939(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideTalkerCharacter : 1;                 // Mask: 0x20, PropSize: 0x10x939(0x1)(Edit, ConstParm, ExportObject, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBuffHandleInstigatorMultiUseEntries : 1;          // Mask: 0x40, PropSize: 0x10x939(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventInstigatorAttack : 1;                 // Mask: 0x80, PropSize: 0x10x939(0x1)(ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventOnStartJump : 1;                      // Mask: 0x1, PropSize: 0x10x93A(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2A9 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_385D[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        BPNotifyActivationToOtherBuffClasses;              // 0x940(0x10)(ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UPrimalBuffPersistentData*             MyBuffPersistentData;                              // 0x950(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                BuffPersistentDataClass;                           // 0x958(0x8)(BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMaxStatScaler>                MaxStatScalers;                                    // 0x960(0x10)(ExportObject, Net, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AActor>                 BuffDamageCauser;                                  // 0x970(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, EditConst, SubobjectReference)
	class USoundBase*                            ExtraActivationSoundToPlay;                        // 0x978(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPersistentBuffSurvivesLevelUp;                    // 0x980(0x1)(ConstParm, ExportObject, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_385F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AoEApplyDamage;                                    // 0x984(0x4)(ConstParm, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        AoEApplyDamageInterval;                            // 0x988(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3861[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                AoEApplyDamageType;                                // 0x990(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             ForceNetworkSpatializationMaxLimitBuffType;        // 0x998(0x30)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        ForceNetworkSpatializationMaxLimitBuffTypeFlag;    // 0x9C8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        ForceNetworkSpatializationBuffMaxLimitNum;         // 0x9CC(0x4)(ExportObject, Net, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ForceNetworkSpatializationBuffMaxLimitRange;       // 0x9D0(0x4)(Edit, BlueprintReadOnly, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        InsulationRange;                                   // 0x9D4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HyperThermiaInsulation;                            // 0x9D8(0x4)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HypoThermiaInsulation;                             // 0x9DC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               AoEBuffLocOffset;                                  // 0x9E0(0x18)(ExportObject, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AActor>>          AoEClassesToInclude;                               // 0x9F8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AActor>>          AoEClassesToExclude;                               // 0xA08(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPExcludeAoEActor;                             // 0xA18(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOverrideBuffDescription;                          // 0xA19(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOverrideBuffType;                                 // 0xA1A(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyTickIfPlayerCharacter;                        // 0xA1B(0x1)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyTickWhenPossessed;                            // 0xA1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDestroyWhenUnpossessed;                           // 0xA1D(0x1)(ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3864[0xA];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OnlyForInstigatorSoundFadeInTime;                  // 0xA28(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBuffTickServer;                                // 0xA2C(0x1)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBuffTickClient;                                // 0xA2D(0x1)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3865[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BuffTickServerMaxTime;                             // 0xA30(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        BuffTickServerMinTime;                             // 0xA34(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        BuffTickClientMaxTime;                             // 0xA38(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        BuffTickClientMinTime;                             // 0xA3C(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseRemoteClientTick;                              // 0xA40(0x1)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3866[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BuffTickRemoteClientMaxTime;                       // 0xA44(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        BuffTickRemoteClientMinTime;                       // 0xA48(0x4)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bContinueTickingServerAfterDeactivate;             // 0xA4C(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bContinueTickingClientAfterDeactivate;             // 0xA4D(0x1)(ConstParm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3868[0x26];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        AddBuffMaxNumStacks;                               // 0xA74(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            DeactivatedSound;                                  // 0xA78(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDeactivatedSoundOnlyLocal;                        // 0xA80(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableBloom;                                     // 0xA81(0x1)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bBPModifyCharacterFOV;                             // 0xA82(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_386A[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PostProcessInterpSpeedDown;                        // 0xA84(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        PostProcessInterpSpeedUp;                          // 0xA88(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        TPVCameraSpeedInterpolationMultiplier;             // 0xA8C(0x4)(ConstParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsCarryBuff;                                      // 0xA90(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_386B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FPostProcessMaterialAdjuster>  PostprocessMaterialAdjusters;                      // 0xA98(0x10)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideCharacterWalkVelocity : 1;              // Mask: 0x1, PropSize: 0x10xAA8(0x1)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideCharacterSwimmingVelocity : 1;          // Mask: 0x2, PropSize: 0x10xAA8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideCharacterNewFallVelocity : 1;           // Mask: 0x4, PropSize: 0x10xAA8(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideCharacterFlyingVelocity : 1;            // Mask: 0x8, PropSize: 0x10xAA8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceOverrideCharacterWalkingVelocity : 1;        // Mask: 0x10, PropSize: 0x10xAA8(0x1)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceOverrideCharacterSwimmingVelocity : 1;       // Mask: 0x20, PropSize: 0x10xAA8(0x1)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceOverrideCharacterFlyingVelocity : 1;         // Mask: 0x40, PropSize: 0x10xAA8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceOverrideCharacterNewFallVelocity : 1;        // Mask: 0x80, PropSize: 0x10xAA8(0x1)(Edit, ExportObject, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideCharacterLanding : 1;                     // Mask: 0x1, PropSize: 0x10xAA9(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideCharacterMovementInput : 1;               // Mask: 0x2, PropSize: 0x10xAA9(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2AA : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_386C[0xE];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AOEBuffIntervalMin;                                // 0xAB8(0x4)(Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        AOEBuffIntervalMax;                                // 0xABC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        MaximumVelocityZForSlowingFall;                    // 0xAC0(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_386D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bAllowMultiUseEntriesFromSelf : 1;                 // Mask: 0x1, PropSize: 0x10xAC8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2AB : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_386E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPHandleOnStopFire : 1;                        // Mask: 0x1, PropSize: 0x10xACC(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceCrosshair : 1;                               // Mask: 0x2, PropSize: 0x10xACC(0x1)(Edit, Net, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventLogoutSleeping : 1;                        // Mask: 0x4, PropSize: 0x10xACC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseInterceptInstigatorPlayerEmote : 1;            // Mask: 0x8, PropSize: 0x10xACC(0x1)(Edit, ConstParm, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTriggerBPStasis : 1;                              // Mask: 0x10, PropSize: 0x10xACC(0x1)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bTriggerBPUnstasis : 1;                            // Mask: 0x20, PropSize: 0x10xACC(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2AC : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	bool                                         bAddTPVCameraOffset;                               // 0xACD(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOverrideTPVCameraOffset;                          // 0xACE(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3871[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               TPVCameraOffset;                                   // 0xAD0(0x18)(BlueprintVisible, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOverrideTPVCameraOffsetMultiplier;                // 0xAE8(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3872[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               TPVCameraOffsetMultiplier;                         // 0xAF0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseCenteredTPVCamera;                             // 0xB08(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBlueprintAnimNotifications;                    // 0xB09(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetGravity : 1;                              // Mask: 0x1, PropSize: 0x10xB0A(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnOwnerMassTeleportEvent : 1;                // Mask: 0x2, PropSize: 0x10xB0A(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPShouldForceOwnerDedicatedMovementTickPerFrame : 1; // Mask: 0x4, PropSize: 0x10xB0A(0x1)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2AD : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3873[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bAllowOnlyCustomFallDamage : 1;                    // Mask: 0x1, PropSize: 0x10xB0C(0x1)(BlueprintVisible, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2AE : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3874[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPGetMoveAnimRate : 1;                         // Mask: 0x1, PropSize: 0x10xB10(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideTargetingDesire : 1;                 // Mask: 0x2, PropSize: 0x10xB10(0x1)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBuffPreventsApplyingLevelUps : 1;                 // Mask: 0x4, PropSize: 0x10xB10(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBuffPreSerializeForInstigator : 1;                // Mask: 0x8, PropSize: 0x10xB10(0x1)(ExportObject, EditFixedSize, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseFinalAdjustDamage : 1;                         // Mask: 0x10, PropSize: 0x10xB10(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideWaterJumpVelocity : 1;               // Mask: 0x20, PropSize: 0x10xB10(0x1)(Edit, ConstParm, ExportObject, Net, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2AF : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3875[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBP_OnOwnerDealtDamage : 1;                     // Mask: 0x1, PropSize: 0x10xB14(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseGetGravityZScale : 1;                          // Mask: 0x2, PropSize: 0x10xB14(0x1)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_AdjustDamageEx : 1;                         // Mask: 0x4, PropSize: 0x10xB14(0x1)(ConstParm, BlueprintVisible, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OverrideTerminalVelocity : 1;               // Mask: 0x8, PropSize: 0x10xB14(0x1)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBuffOverrideFinalWanderLocation : 1;           // Mask: 0x10, PropSize: 0x10xB14(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bModifyMaxAcceleration : 1;                        // Mask: 0x20, PropSize: 0x10xB14(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bModifyRotationRate : 1;                           // Mask: 0x40, PropSize: 0x10xB14(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bModifyFriction : 1;                               // Mask: 0x80, PropSize: 0x10xB14(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableFootstepsParticles : 1;                    // Mask: 0x1, PropSize: 0x10xB15(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowAddingWithoutController : 1;            // Mask: 0x2, PropSize: 0x10xB15(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowWhileBuried : 1;                        // Mask: 0x4, PropSize: 0x10xB15(0x1)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OnOwnerTeleported : 1;                      // Mask: 0x8, PropSize: 0x10xB15(0x1)(ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustRadialDamage : 1;                      // Mask: 0x10, PropSize: 0x10xB15(0x1)(Edit, BlueprintVisible, ExportObject, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseForcedBuffAimOverride : 1;                     // Mask: 0x20, PropSize: 0x10xB15(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventTekArmorBuffs : 1;                    // Mask: 0x40, PropSize: 0x10xB15(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBuffPreventsInventoryAccess : 1;                  // Mask: 0x80, PropSize: 0x10xB15(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReactivateWithNewDamageCauser : 1;                // Mask: 0x1, PropSize: 0x10xB16(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDinoNameColorOverride : 1;                   // Mask: 0x2, PropSize: 0x10xB16(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBuffPreventsCryo : 1;                             // Mask: 0x4, PropSize: 0x10xB16(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBuffOverrideInventoryAccessInput : 1;          // Mask: 0x8, PropSize: 0x10xB16(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bListenForInput : 1;                               // Mask: 0x10, PropSize: 0x10xB16(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInterceptUseAction : 1;                           // Mask: 0x20, PropSize: 0x10xB16(0x1)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInterceptWeaponToggle : 1;                        // Mask: 0x40, PropSize: 0x10xB16(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventNotifySound : 1;                      // Mask: 0x80, PropSize: 0x10xB16(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBuffDrawFloatingHUDRemotePlayers : 1;             // Mask: 0x1, PropSize: 0x10xB17(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseConsolidatedMultiUseWheel : 1;                 // Mask: 0x2, PropSize: 0x10xB17(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2B0 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        CharacterMultiplier_DefaultExtraDamageMultiplier;  // 0xB18(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAlwaysAllowBuff : 1;                         // Mask: 0x1, PropSize: 0x10xB1C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceSelfTick : 1;                                // Mask: 0x2, PropSize: 0x10xB1C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceInstigatorTick : 1;                          // Mask: 0x4, PropSize: 0x10xB1C(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSkipInstigatorTick : 1;                           // Mask: 0x8, PropSize: 0x10xB1C(0x1)(Edit, Net, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2B1 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAllowTurretsToTargetInstigatorIfTraceHitsBuff : 1; // Mask: 0x40, PropSize: 0x10xB1C(0x1)(Edit, ExportObject, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsHighRiskMissionBuff : 1;                        // Mask: 0x80, PropSize: 0x10xB1C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_387A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        StaminaDrainMultiplier;                            // 0xB20(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_387B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          DisabledWeaponTags;                                // 0xB28(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPGetCrosshairColor;                           // 0xB38(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPGetPlayerFootStepSound;                      // 0xB39(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPModifyArmorValue;                            // 0xB3A(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowMammalIncubationOptions;                      // 0xB3B(0x1)(BlueprintReadOnly, Net, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtendBuffTimeOverride;                            // 0xB3C(0x4)(BlueprintVisible, Net, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	float                                        AdditionalRidingDistance;                          // 0xB40(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_387C[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPPreClaimWildFollower : 1;                    // Mask: 0x1, PropSize: 0x10xB4C(0x1)(Edit, ExportObject, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetBuffLevelUpStatOverride : 1;              // Mask: 0x2, PropSize: 0x10xB4C(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPBuffKilledSomethingEvent : 1;                // Mask: 0x4, PropSize: 0x10xB4C(0x1)(ExportObject, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2B2 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_387D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FBuffMPCAdjuster>              MPCAdjusters;                                      // 0xB50(0x10)(Edit, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bBuffHidesNonWeaponHUD;                            // 0xB60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNofityMontagePlay : 1;                       // Mask: 0x1, PropSize: 0x10xB61(0x1)(ExportObject, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnTamedWildDino : 1;                         // Mask: 0x2, PropSize: 0x10xB61(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreWeightWhenUsingExtraMaxSpeedModifier : 1;   // Mask: 0x4, PropSize: 0x10xB61(0x1)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPModifyAimOffsetNoTarget : 1;                    // Mask: 0x8, PropSize: 0x10xB61(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_387E[0x6];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalBuff* GetDefaultObj();

	struct FVector UpdateStaticPathingDestination(bool UseRandomNegativeXDir, const struct FRotator& RandOffsetByRotation);
	void UpdateBuffPersistentData();
	void UpdateBuffLifetime(float NewLifetime, bool bRestartBuffLifetime);
	class APrimalBuff* StaticAddBuff(class UClass* BuffClass, class APrimalCharacter** ForCharacter, class UPrimalItem* AssociatedItem, class AActor* DamageCauser, bool bForceOnClient);
	bool ShouldUseAutonomousCorrectionOffset();
	bool ShouldForceOwnerDedicatedMovementTickPerFrame();
	void SetValueToAddPerSecond(enum class EPrimalCharacterStatusValue* StatusValueType, float* Value);
	void SetupForInstigator();
	void SetGestationMonitoringTarget(class APrimalDinoCharacter** ForTarget, bool* bEnable);
	void SetBuffCauser(class AActor** CausedBy);
	void ServerRequestRelatedMissionData();
	void ResetServerBuffTick(float* MinTime, float MaxTime);
	void ResetClientBuffTick(float* MinTime, float MaxTime);
	bool ResetBuffStart();
	bool ReduceBuffTime(float* AmountOfTimeToReduce);
	bool PreventJump();
	bool PreventInstigatorMovementMode();
	bool PreventInstigatorAttack();
	bool PreventBlockingWithShield();
	bool PreventActorTargeting(class AActor* ByActor);
	bool OverrideHurtFX(class UParticleSystem** OutHurtFX);
	bool OverrideAttackerDamageImpactFX(class FName* SocketName, class APrimalCharacter** AttackingChar);
	void OnOwnerTeleported();
	class APrimalCharacter* OnInputEvent(enum class EPrimalCharacterInputType* InputType);
	struct FHitResult OnCapsuleHitCallback(const struct FVector& NormalImpulse);
	void OnBuffLifetimeUpdated();
	void NotifyDamage(float* DamageAmount, class UClass** DamageClass, class AController** EventInstigator, class AActor* DamageCauser);
	void NotifyBumpedPawn(class APrimalCharacter* BumpedPawn);
	void NotifyBumpedByPawn(class APrimalCharacter** BumpedBy);
	void NetSyncBuffLifetime();
	void NetResetBuffStart();
	void NetDeactivate();
	void Multi_SyncBuffLifetime(float* NewDeactivateAfterTime);
	bool IsOwningClient();
	bool InterceptInstigatorPlayerEmoteAnim();
	void InstigatorDie();
	bool HideBuffFromHUD();
	void HandleBuffAnimNotify(class FName* AnimNotifyName, class FString* AnimNotifyStringData);
	float GetValueToAddPerSecond(enum class EPrimalCharacterStatusValue* StatusValueType);
	class FString GetUniqueName();
	float GetTimeLeft();
	float GetRemainingTime(float* DeactivateAfterTimeOverride);
	float GetOverrideWaterJumpVelocity(float* OutOfWaterZ);
	class APlayerController* GetInstigatorPlayerController();
	float GetHUDProgressBarPercent();
	struct FRotator GetForcedBuffAimOverride(bool* bIsWeaponAim);
	TArray<class APrimalDinoCharacter*> GetEnabledGestationMonitoringTargets();
	class FString GetDebugInfoString();
	double GetDeactivationTime();
	class UClass* GetCustomTooltip();
	int32 GetBuffType();
	float GetBuffTickServerDeltaTime();
	float GetBuffTickClientDeltaTime();
	class UMaterialInstanceDynamic* GetBuffPostprocessMaterial();
	float GetBuffPostprocessIntensity();
	struct FStatusValueModifierDescription GetBuffDescription();
	bool ExtendBuffTime(float* AmountOfAdditionalTime);
	float DrawBuffFloatingHUD(int32* BuffIndex, float* DrawScale);
	class APlayerController* DoTeleporterHaptics(struct FVector* Location, float ElapsedTime);
	class AShooterCharacter* DinoInstigatorReceivedRider();
	void DinoInstigatorClearedRider();
	void ClientReceiveRelatedMissionData(class AMissionType** InMission, bool* InHasRelatedMission);
	float BuffTickServer();
	float BuffTickClient();
	float BuffPostAdjustDamage(const struct FHitResult& HitInfo, class AController** EventInstigator, class AActor* DamageCauser, class UClass* TheDamgeType);
	bool BuffOverrideInventoryAccessInput(bool* bInputPressed);
	bool BuffOverrideFinalWanderLocation(struct FVector* OutVec);
	float BuffAdjustDamage(const struct FHitResult& HitInfo, class AController** EventInstigator, class AActor* TheDamageCauser, class UClass* TheDamgeType);
	void BPUnstasis();
	void BPStasis();
	bool BPShouldForceOwnerDedicatedMovementTickPerFrame();
	void BPSetupForInstigator(class AActor** ForInstigator);
	void BPResetBuffStart();
	void BPReactivateWithDamageCauser(class AActor** ForInstigator, class AActor** ForDamageCauser);
	bool BPPreventThrowingItem();
	TArray<class FName> BPPreventTekArmorBuffs();
	bool BPPreventRunning();
	bool BPPreventRidingInstigator(class APrimalCharacter** ForPawn);
	bool BPPreventOnStartJump();
	bool BPPreventNotifySound();
	bool BPPreventInstigatorMovementMode();
	bool BPPreventInstigatorAttack();
	bool BPPreventflight();
	bool BPPreventFirstPerson();
	bool BPPreventCharacterStatusValueModifiers(class APrimalCharacter** ForInstigator);
	bool BPPreventCharacterLanding(struct FVector* ImpactAccel, struct FVector* ImpactVelocity, const struct FVector& NewVelocity);
	bool BPPreventAddingOtherBuff(class UClass** AnotherBuffClass);
	void BPPreSetupForInstigator(class AActor** ForInstigator);
	void BPPreSerializeForInstigator(bool* bBeginningSerialize);
	void BPPreClaimWildFollower(class AShooterPlayerController** ByPC);
	struct FVector BPOverrideWeaponBob(struct FVector* InWeaponBob);
	float BPOverrideTargetingDesire(class AActor** ForTarget, float* ForTargetingDesireValue);
	class APrimalCharacter* BPOverrideTalkerCharacter();
	bool BPOverrideRightShoulderOnPlayer();
	bool BPOverrideIsNetRelevantFor(class APlayerController** RealViewer, struct FVector* SrcLocation);
	struct FVector BPOverrideCharacterNewFallVelocity(struct FVector* InitialVelocity);
	void BPOverrideCameraViewTarget(class FName CurrentCameraMode, const struct FVector& DesiredCameraLocation, const struct FRotator& DesiredCameraRotation, float DesiredFOV, bool bOverrideCameraLocation, const struct FVector& CameraLocation, bool bOverrideCameraRotation, const struct FRotator& CameraRotation, bool bOverrideCameraFOV, float CameraFOV);
	class UClass* BPOverrideBuffToGiveOnDeactivation();
	void BPOnTamedWildDino(class APrimalDinoCharacter* Dino);
	class AShooterWeapon* BPOnPreventedFiringDisabledWeapon(class FName* PreventingTag);
	void BPOnOwnerMassTeleportEvent(enum class EMassTeleportState EventState, class APrimalCharacter* TeleportInitiatedByChar);
	uint8 BPOnInstigatorMovementModeChangedNotify();
	struct FHitResult BPOnInstigatorCapsuleComponentHit(const struct FVector& NormalImpulse);
	void BPOnInputEvent(enum class EPrimalCharacterInputType* InputType);
	void BPNotifyPreventDismounting(class APrimalDinoCharacter** FromDino);
	void BPNotifyOtherBuffDeactivated(class APrimalBuff** OtherBuff);
	void BPNotifyOtherBuffActivatedToThisBuffClass(class APrimalBuff** ActivatedBuff);
	void BPNotifyOtherBuffActivated(class APrimalBuff** OtherBuff);
	class UPrimalItem* BPNotifyItemRemoved();
	class UPrimalItem* BPNotifyItemQuantityUpdated(int32* Amount);
	bool BPNotifyItemAdded();
	void BPNotifyExperienceGained(float* ActualExpGained, float* ExpectedExpGain, enum class EXPType* ExpTypeGained);
	void BPNonDedicatedPlayerPostAnimUpdate();
	void BPNofityMontagePlay(class UAnimMontage** Montage);
	TArray<struct FBoneModifier> BPModifyPlayerBoneModifiers(const TArray<struct FBoneModifier>& InBoneModifiers);
	float BPModifyArmorValue(float BaseArmorValue);
	struct FRotator BPModifyAimOffsetNoTarget(struct FRotator* Aim);
	bool BPIsValidUnStasisCaster();
	bool BPIsCharacterHardAttached();
	bool BPInterceptWeaponToggle();
	bool BPInterceptUseAction();
	void BPInstigatorUnpossessed();
	void BPInstigatorSleeped(bool bIsSleeped);
	void BPInstigatorReceivedKillingDamage();
	void BPInstigatorPossessed(class AController* ByController);
	void BPInstigatorLocalPossessed(class AShooterPlayerController* ByController);
	void BPInstigatorDied();
	void BPInitializedCharacterAnimScriptInstance();
	bool BPInformDamageCauserOfBuffAdded(class APrimalCharacter** ForCharacter, class AActor* DamageCauser);
	bool BPHandleOnStopFire();
	bool BPHandleOnStopAltFire();
	bool BPHandleOnStartFire();
	bool BPHandleOnStartAltFire();
	void BPGetWaypointsBuff(const TArray<struct FPointOfInterestData_ForCompanion>& IndicatorsOut);
	class USoundCue* BPGetPlayerFootStepSound();
	float BPGetMoveAnimRate();
	void BPGetHUDElements(class APlayerController** ForPC, TArray<struct FHUDElement>* OutElements);
	float BPGetGravityZScale(float CurrentScale);
	struct FColor BPGetDinoNameColorOverride(const struct FColor& ColorToOverride);
	class FString BPGetDebugInfoString();
	struct FColor BPGetCrosshairColor();
	float BPGetBabyImprintingSpeedMultiplier();
	int32 BPForceDinoNameTargetingTeamOverride(int32 TargetingTeamToCheck);
	enum class ECameraStyle BPForceCameraStyle(class APrimalCharacter** ForViewTarget);
	float BPFinalAdjustDamage(const struct FHitResult& HitInfo, class AController** EventInstigator, class AActor* InDamageCauser, class UClass* TheDamgeType);
	bool BPExcludeAoEActor(class AActor* ActorToConsider);
	class AShooterHUD* BPDrawBuffStatusHUD(float XPos, float YPos, float ScaleMult);
	void BPDinoRefreshColorization(const TArray<struct FLinearColor>& DinoColors, const TArray<struct FLinearColor>& OverrideColors);
	void BPDeactivated(class AActor** ForInstigator);
	void BPDeactivate();
	bool BPCustomAllowAddBuff(class APrimalCharacter** ForCharacter, class AActor* DamageCauser);
	bool BPCheckPreventInput(enum class EPrimalCharacterInputType* InputType);
	void BPCharacterDetach();
	bool BPCanBeCarried(class APrimalCharacter* ByCarrier);
	bool BPBypassPreventDinoDismount(bool FromRider, bool* bCancelForceLand, bool* SpawnDinoDefaultController, int32* OverrideUnboardDirection, bool* bForceEvenIfBuffPreventsClear, bool* bFromUse);
	bool BPBuffPreventUploading();
	void BPBuffKilledSomethingEvent(class APrimalCharacter** KilledTarget);
	float BPBPGetCameraShakeScalar(class UClass* CurrentShake, float CurrentScale);
	void BPAnimNotifyCustomState_End(class FName* CustomEventName, class USkeletalMeshComponent** MeshComp, class UAnimSequenceBase** Animation, class UAnimNotifyState** AnimNotifyObject);
	void BPAnimNotifyCustomState_Begin(class FName* CustomEventName, class USkeletalMeshComponent** MeshComp, class UAnimSequenceBase** Animation, float* TotalDuration, class UAnimNotifyState** AnimNotifyObject);
	void BPAnimNotifyCustomEvent(class FName* CustomEventName, class USkeletalMeshComponent** MeshComp, class UAnimSequenceBase** Animation, class UAnimNotify** AnimNotifyObject);
	float BPAdjustStatusValueModification(enum class EPrimalCharacterStatusValue* ValueType, float InAmount, class UClass** DamageTypeClass, bool bManualModification);
	float BPAdjustRadialDamage(float CurrentDamage, struct FVector* Origin, struct FRadialDamageEvent* DamageEvent);
	struct FVector BPAdjustImpulseFromDamage(struct FVector* DesiredImpulse, float DamageTaken, struct FDamageEvent* TheDamageEvent, class APawn* PawnInstigator, class AActor* DamageCauser, bool* bIsPointDamage, struct FHitResult* PointHitInfo);
	float BPAdjustDamage_Ex(const struct FHitResult& HitInfo, const struct FVector& ImpulseDir, class AController** EventInstigator, class AActor* InDamageCauser, class UClass* TheDamgeType);
	struct FVector BPAdjustCharacterMovementImpulse(struct FVector* Impulse, bool* bVelocityChange, float* MassScaleImpulseExponent, bool* bOverrideMaxImpulseZ);
	void BPActivated(class AActor** ForInstigator);
	float BP_OverrideTerminalVelocity();
	float BP_OverrideMoveRightInput(float CurrentInput);
	float BP_OverrideMoveForwardInput(float CurrentInput);
	struct FVector BP_OverrideCharacterWalkingVelocity(struct FVector* InitialVelocity, float* Friction);
	struct FVector BP_OverrideCharacterSwimmingVelocity(struct FVector* InitialVelocity, float* FluidFriction, float* NetBuoyancy);
	struct FVector BP_OverrideCharacterFlyingVelocity(struct FVector* InitialVelocity);
	void BP_OnOwnerTeleported();
	class AActor* BP_OnOwnerDealtDamage(float* DamageAmount, struct FDamageEvent* DamageEvent);
	void BP_OnBuffLifetimeUpdated();
	float BP_ModifyCharacterFOV(float InFOV);
	void ApplyPhysicsImpulses(float* DeltaSeconds);
	bool AllowPostProcessEffect();
	bool AddDamageStatusValueModifier(class APrimalCharacter* AddToCharacter, enum class EPrimalCharacterStatusValue* ValueType);
	void AddBuffLifetime(float AdditionalLifetime);
};

// 0x20 (0x48 - 0x28)
// Class ShooterGame.PrimalBuffPersistentData
class UPrimalBuffPersistentData : public UObject
{
public:
	bool                                         bPermanentlyPersist;                               // 0x28(0x1)(ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3883[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ForPrimalBuffClass;                                // 0x30(0x8)(OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class FString                                ForPrimalBuffClassString;                          // 0x38(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalBuffPersistentData* GetDefaultObj();

};

// 0x20 (0x68 - 0x48)
// Class ShooterGame.PrimalBuffPersistentData_MissionData
class UPrimalBuffPersistentData_MissionData : public UPrimalBuffPersistentData
{
public:
	class AMissionType*                          ActiveMission;                                     // 0x48(0x8)(ConstParm, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ActiveMissionIndex;                                // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3884[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSerializedMissionData>        MissionData;                                       // 0x58(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalBuffPersistentData_MissionData* GetDefaultObj();

};

// 0x958 (0x14C0 - 0xB68)
// Class ShooterGame.PrimalBuff_Companion
class APrimalBuff_Companion : public APrimalBuff
{
public:
	class USceneComponent*                       CompanionRoot;                                     // 0xB68(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class USkeletalMeshComponentWithSoftRef*     CompanionMeshComp;                                 // 0xB70(0x8)(BlueprintVisible, Net, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class USphereComponent*                      CompanionUseSphereComp;                            // 0xB78(0x8)(ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AShooterCharacter>      MyPlayer;                                          // 0xB80(0x8)(Edit, ConstParm, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AShooterPlayerController> MyPC;                                              // 0xB88(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDebugCompanion : 1;                               // Mask: 0x1, PropSize: 0x10xB90(0x1)(ConstParm, ExportObject, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsOrbitingPointOfInterest : 1;                    // Mask: 0x2, PropSize: 0x10xB90(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasReachedPointOrbit : 1;                         // Mask: 0x4, PropSize: 0x10xB90(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2B3 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_38BE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReachPointOrbitWithinDist;                         // 0xB94(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ReactionDialogVolumeMultiplier;                    // 0xB98(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        CompanionViewDot;                                  // 0xB9C(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class USoundAttenuation*                     CompanionSoundAttenuation;                         // 0xBA0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultMissionCompanionReactionData;               // 0xBA8(0x8)(ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              CurrentCompanionReactionVFX;                       // 0xBB0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       CurrentCompanionReactionSFX;                       // 0xBB8(0x8)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPointOfInterestData_ForCompanion> CurrentPointsOfInterest;                           // 0xBC0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class ECompanionState                   CompanionState_Current;                            // 0xBD0(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class ECompanionState                   CompanionState_Previous;                           // 0xBD1(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38BF[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FCompanionReactionData>        ReactionStack;                                     // 0xBD8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class UMaterialInterface*>            DialogueIconOverrideStack;                         // 0xBE8(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                CurrentIDStack;                                    // 0xBF8(0x10)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CurrentFocusedLocation;                            // 0xC08(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FPointOfInterestData_ForCompanion     CurrentFocusedPointData;                           // 0xC20(0x4E0)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FCompanionEventData                   CurrentEventData;                                  // 0x1100(0x50)(BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                CurrentEventActor;                                 // 0x1150(0x8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LastPointTag_StartOrbit;                           // 0x1158(0x8)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LastPointTag_ReachedOrbit;                         // 0x1160(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	double                                       LastPlayedReactionNetworkTime;                     // 0x1168(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowsHexagonsInInventory : 1;                     // Mask: 0x1, PropSize: 0x10x1170(0x1)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableDebugReactions : 1;                         // Mask: 0x2, PropSize: 0x10x1170(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2B4 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_38C0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FCompanionReactionData                PreviouslyPlayedReaction;                          // 0x1178(0xB0)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontPlayEnglishLinesAsLocalizationFallback : 1;   // Mask: 0x1, PropSize: 0x10x1228(0x1)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2B5 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_38C1[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        FullyTranslatedLanguages;                          // 0x1230(0x10)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                HUDOverlayToolTipWidgetExtended;                   // 0x1240(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                ReactionExplorerNotesToUnlock;                     // 0x1248(0x10)(Edit, ConstParm, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38C2[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            AsyncLoadedDialogueAnimTexture;                    // 0x1270(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             AsyncLoadedSoundCue;                               // 0x1278(0x8)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class USoundWave*                            AsyncLoadedSoundWave;                              // 0x1280(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AnimTextureParamName;                              // 0x1288(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AnimTextureStartTimeParamName;                     // 0x1290(0x8)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AnimTextureDurationParamName;                      // 0x1298(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        AnimTextureDurationOffset;                         // 0x12A0(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsAwaitingLoadedTexture : 1;                      // Mask: 0x1, PropSize: 0x10x12A4(0x1)(ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasFinishedLoadingTexture : 1;                    // Mask: 0x2, PropSize: 0x10x12A4(0x1)(ConstParm, ExportObject, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsAwaitingLoadedSoundCue : 1;                     // Mask: 0x4, PropSize: 0x10x12A4(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasFinishedLoadingSoundWave : 1;                  // Mask: 0x8, PropSize: 0x10x12A4(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsAwaitingLoadedSoundWave : 1;                    // Mask: 0x10, PropSize: 0x10x12A4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsAwaitingFallbackSubtitleAudio : 1;              // Mask: 0x20, PropSize: 0x10x12A4(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasFinishedLoadingSoundCue : 1;                   // Mask: 0x40, PropSize: 0x10x12A4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bProbablyPlayingReaction : 1;                      // Mask: 0x80, PropSize: 0x10x12A4(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasSomePaddingBeforePlayingReaction : 1;          // Mask: 0x1, PropSize: 0x10x12A5(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGoingToTryToSplitSoundCueForLocalization : 1;     // Mask: 0x2, PropSize: 0x10x12A5(0x1)(Edit, ExportObject, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasPlayedDefaultReactionAnimTexture : 1;          // Mask: 0x4, PropSize: 0x10x12A5(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsPlayingFallbackReactionAnimTexture : 1;         // Mask: 0x8, PropSize: 0x10x12A5(0x1)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceCompanionHidden : 1;                         // Mask: 0x10, PropSize: 0x10x12A5(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2B6 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_38C3[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CurrentReactionSFXIndex;                           // 0x12A8(0x4)(Edit, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        PreviousReactionSFXIndex;                          // 0x12AC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       CurrentSoundWaveStringAssetReference;              // 0x12B0(0x20)(Edit, ExportObject, Net, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       CurrentSoundCueStringAssetReference;               // 0x12D0(0x20)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       CurrentAnimTextureStringAssetReference;            // 0x12F0(0x20)(ConstParm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       FallbackSubtitleAudioString;                       // 0x1310(0x20)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class UMaterialInstanceDynamic*>      MeshDynamicMaterials;                              // 0x1330(0x10)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    CompanionReactionSubtitleIcon;                     // 0x1340(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       DefaultReactionAnimtexture;                        // 0x1348(0x20)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLocalizedSoundWaveAnimTexturePairArrays LocalizedAudioTracks;                              // 0x1368(0x20)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsUsingLocalizedAudioTrack;                        // 0x1388(0x1)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         DebugBypassVRTeleportRestrictions;                 // 0x1389(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         ForcedMonologueCheat;                              // 0x138A(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38C5[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class AMissionType>            FinalBossFightEasy;                                // 0x1390(0x30)(ConstParm, ExportObject, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class AMissionType>            FinalBossFightMed;                                 // 0x13C0(0x30)(Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class AMissionType>            FinalBossFightHard;                                // 0x13F0(0x30)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class AMissionType>            FinalBossFightFlowTest;                            // 0x1420(0x30)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        AllowedHLNAFocusedSelectedRemoteTargetDistance;    // 0x1450(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38C6[0x1C];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnReactionPlayed_Delegate;                         // 0x1470(0x10)(BlueprintVisible, EditFixedSize, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnReactionStopped_Delegate;                        // 0x1480(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnReactionAnimPlayed_Delegate;                     // 0x1490(0x10)(ConstParm, BlueprintVisible, Net, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnReactionComponentSpawned_VFX_Delegate;           // 0x14A0(0x10)(Edit, BlueprintReadOnly, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnReactionComponentSpawned_SFX_Delegate;           // 0x14B0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalBuff_Companion* GetDefaultObj();

	bool TraceForCompanionBlockersFromPlayer();
	float Tick_UpdateCompanionTransform();
	float Tick_UpdateCompanionState();
	float Tick_CompanionSearchForPOIs();
	float Tick_CompanionReactions();
	float Tick_CompanionEvents();
	void StopCompanionReaction();
	float StopCompanionMontage();
	void StopCompanionEventExternal();
	void StopCompanionEvent();
	void StartCompanionEventExternal(class AActor** EventActor, struct FCompanionEventData* WithEventData);
	void StartCompanionEvent(class AActor** EventActor, struct FCompanionEventData* WithEventData);
	bool ShouldOrbitPointOfInterest(const struct FPointOfInterestData_ForCompanion& WithPointData);
	void SetUpAnimTexture();
	void SetCompaionHiddenSetting(bool* IsHidden);
	enum class ECompanionState Server_SetCompanionState();
	void RefreshCompanionColorization();
	int32 PlayLinkedCompanionReactionsByExplorerNoteIndex();
	float PlayCompanionMontage(float PlayRate);
	void OutputAsyncLoadedFiles();
	void OnSpawnHexagons(float* OverrideCollectSFXVolume, bool* VFXImmediatelyAttracts);
	void OnSpawnedForPlayer();
	void OnRep_CompanionState();
	class FName OnPlayerPlayAnimation(float* AnimDuration);
	void OnPlayerDeath(class APrimalCharacter** DiedCharacter);
	class AMissionType* OnMyPlayerMissionStarted(class APrimalBuff_MissionData** MissionDataBuff);
	bool OnMyPlayerMissionComplete(class APrimalBuff_MissionData** MissionDataBuff);
	void OnMadeHexagonPurchase();
	void OnFoundPoI(struct FPointOfInterestData_ForCompanion* FoundPointData, class AActor** FoundPointActor);
	void OnEndOverlapCompanionEventTrigger(class AActor** ForTrigger);
	void OnCompanionStateChanged();
	int32 OnCompanionReactionStopped(struct FCompanionReactionData* StoppedReactionData);
	int32 OnCompanionReactionPlayed(struct FCompanionReactionData* PlayedReactionData);
	void OnCompanionEventStarted(struct FCompanionEventData* StartingEventData);
	void OnCompanionEventEnded(struct FCompanionEventData* StoppingEventData);
	void OnBeginOverlapCompanionEventTrigger(class AActor** ForTrigger);
	class UPrimalItem* NotifyItemCrafted();
	class UPrimalItem* NotifyItemAddedToCropPlot();
	class UClass* NotifyHasTamedDino();
	enum class ECompanionState Net_SetCompanionState();
	bool IsPlayingCompanionReaction();
	bool IsPlayerLookingAtCompanion();
	bool IsPlayerADS();
	bool IsCompanionReadyToMonologue();
	bool IsCompanionAbleToMonologue();
	bool HasCompanionReachedPointOrbit(struct FPointOfInterestData_ForCompanion* OfPointData);
	struct FVector GetPointCompanionWorldOrbitOrigin(const struct FPointOfInterestData_ForCompanion& ForPointData);
	class AShooterHUD* GetMyPlayerHUD();
	struct FCompanionReactionData GetCurrentCompanionReactionData();
	struct FCompanionEventData GetCurrentCompanionEventData();
	struct FVector GetCompanionWorldLocation();
	bool GetClosestNearbyPointOfInterest(struct FPointOfInterestData_ForCompanion* ClosestPointData, struct FVector* ClosestPointLoc);
	TArray<class AActor*> GetAllExplorerNotesInWorld();
	bool ForceUnhibernateAtLocation();
	bool ForceHibernateAtLocation(TArray<class AActor*>* ActorsToHibernate);
	void FocusOnRemoteTarget();
	void DrawFocusedActorToolTip(class AActor** TargetedActor);
	void ClientToggleForceMonologue(bool* Newval);
	void ClientOutputAsyncLoadedFiles();
	void ClientAllowVRTeleport();
	int32 Client_AddCompanionReaction(struct FCompanionReactionData* WithReactionData, bool* bForcePlayNow, class UMaterialInterface** DialogueIconOverride);
	bool CanStartCompanionEvent(class AActor** EventActor, struct FCompanionEventData* WithEventData);
	bool CanRemotelyFocusOnRemoteActorForTooltip(class AActor** TargetedActor);
	bool CanPlayEnvironmentalCompanionReaction(struct FCompanionReactionData* CanPlayReactionData);
	bool CanPlayCompanionReaction(struct FCompanionReactionData* CanPlayReactionData);
	int32 BPServerside_IsPerMapExplorerNoteUnlocked(bool* CouldDetermine, bool* HasPlayerUnlockedNote);
	void AnimateOutHLNASubtitleIcon();
	void AnimateInHLNASubtitleIcon();
	int32 AddCompanionReaction(struct FCompanionReactionData* WithReactionData, bool* bForcePlayNow, class UMaterialInterface** DialogueIconOverride);
};

// 0x298 (0xE00 - 0xB68)
// Class ShooterGame.PrimalBuff_Grappled
class APrimalBuff_Grappled : public APrimalBuff
{
public:
	TArray<struct FGrappleTether>                CurrentGrappleTethers;                             // 0xB68(0x10)(Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FGrappleTether>                LastSyncedGrappleTethers;                          // 0xB78(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FReplicatedGrappleTetherData>  ReplicatedGrappleTethers;                          // 0xB88(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      MyOwner;                                           // 0xB98(0x8)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      MyOwnerCDO;                                        // 0xBA0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class EGrappleState                     GrappleState_Current;                              // 0xBA8(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class EGrappleState                     GrappleState_Previous;                             // 0xBA9(0x1)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class EGrappleState                     WantsGrappleState;                                 // 0xBAA(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3981[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DefaultGrappledBuffClass;                          // 0xBB0(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             PullingSoundCue;                                   // 0xBB8(0x8)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             ReleasingSoundCue;                                 // 0xBC0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UStaticMesh*                           GrappleTetherMesh;                                 // 0xBC8(0x8)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDetachGrappledChars : 1;                          // Mask: 0x1, PropSize: 0x10xBD0(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDebugGrappling : 1;                               // Mask: 0x2, PropSize: 0x10xBD0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDebugGrappling_AgainstSurface : 1;                // Mask: 0x4, PropSize: 0x10xBD0(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowGrappleLogicOnRemoteClients : 1;             // Mask: 0x8, PropSize: 0x10xBD0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceIdleGrappleState : 1;                        // Mask: 0x10, PropSize: 0x10xBD0(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasGrappleBuffInitialized : 1;                    // Mask: 0x20, PropSize: 0x10xBD0(0x1)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsOwnerAgainstSurface : 1;                        // Mask: 0x40, PropSize: 0x10xBD0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOwnerMovementAffectedByGrappleTethers : 1;        // Mask: 0x80, PropSize: 0x10xBD0(0x1)(Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLastIsOwnerSubmerged : 1;                         // Mask: 0x1, PropSize: 0x10xBD1(0x1)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLastIsOwnerSwinging : 1;                          // Mask: 0x2, PropSize: 0x10xBD1(0x1)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasAnyValidTethers : 1;                           // Mask: 0x4, PropSize: 0x10xBD1(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasValidReservedTethers : 1;                      // Mask: 0x8, PropSize: 0x10xBD1(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBrokeAnyTethersThisFrame : 1;                     // Mask: 0x10, PropSize: 0x10xBD1(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasAnyGrappledChars : 1;                          // Mask: 0x20, PropSize: 0x10xBD1(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasAnyTethersAttachedToDynamicActors : 1;         // Mask: 0x40, PropSize: 0x10xBD1(0x1)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDidOverrideVelocityThisFrame : 1;                 // Mask: 0x80, PropSize: 0x10xBD1(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShouldResetOwnerVars : 1;                         // Mask: 0x1, PropSize: 0x10xBD2(0x1)(ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2B7 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3984[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxAllowedGrappleTethers;                          // 0xBD4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ForceFallingWhenDirToTetherAboveUpDot;             // 0xBD8(0x4)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ForceFallingWhenAboveVelocityAwayFromAnchor;       // 0xBDC(0x4)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ForceFallingBelowTetherToOwnerDeltaZ;              // 0xBE0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ReduceFallDamageUnderAngleToAnchor;                // 0xBE4(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        GrappledFallDamageMult_MIN;                        // 0xBE8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        OwnerInput_SwingSpeed;                             // 0xBEC(0x4)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SwingingVelocityDampingRate_Idle;                  // 0xBF0(0x4)(Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SwingingVelocityDampingRate_Pulling;               // 0xBF4(0x4)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             SwingingVelocityDampingRateAxisMults_Pulling;      // 0xBF8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SwingingVelocityDampingRate_Releasing;             // 0xC08(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SwingingVelocityDampingRate_OwnerInput;            // 0xC0C(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherTensionVelocityDampingRate;                  // 0xC10(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        GrappleVelocityMAX;                                // 0xC14(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SwingingClientPositionErrorOverride_Player;        // 0xC18(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SwingingClientPositionErrorOverride_Dino_MovingFlying; // 0xC1C(0x4)(Edit, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SwingingClientPositionErrorOverride_Dino_Stopped;  // 0xC20(0x4)(ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SwingingClientLocationInterpSpeed;                 // 0xC24(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SwingingClientRotationInterpSpeed;                 // 0xC28(0x4)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SyncGrappleTetherLengthInterval;                   // 0xC2C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        PullableWeightLimit;                               // 0xC30(0x4)(ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherMaxLength;                                   // 0xC34(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherMinLength;                                   // 0xC38(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherAutoDetachUnderLength;                       // 0xC3C(0x4)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherBreakLimit_OwnerPastCurrentLengthDelta;      // 0xC40(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherBreakLimit_OwnerPastCurrentLengthForTime;    // 0xC44(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherBreakLimit_GrappledActorAboveVelocity;       // 0xC48(0x4)(Edit, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherWidth;                                       // 0xC4C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	double                                       LastGrappleTetherLengthSyncTime;                   // 0xC50(0x8)(Edit, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               OwnerInput_CurrentSwingingVelocity;                // 0xC58(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             OwnerInput_CurrentSynced;                          // 0xC70(0x10)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             OwnerInput_LastSynced;                             // 0xC80(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	double                                       OwnerInput_LastSyncTime;                           // 0xC90(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        OwnerInput_SyncInverval;                           // 0xC98(0x4)(BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3985[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               DirToAgainstSurface;                               // 0xCA0(0x18)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LastDirToAgainstSurface;                           // 0xCB8(0x18)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        RequiredDirToSurfaceDotDeltaToUpdate;              // 0xCD0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3986[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               AgainstSurfaceNormal;                              // 0xCD8(0x18)(ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherPullMaxVelocity;                             // 0xCF0(0x4)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherPullAcceleration;                            // 0xCF4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherPullMaxVelocity_GrappledChar;                // 0xCF8(0x4)(BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherPullAcceleration_GrappledChar;               // 0xCFC(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherReleaseMaxVelocity;                          // 0xD00(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherReleaseMaxVelocity_GrappledChar;             // 0xD04(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CurrentTetherMoveVelocity;                         // 0xD08(0x18)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               AvgParentCharVelocity;                             // 0xD20(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ClientSuggestTetherLength_AllowedDelta;            // 0xD38(0x4)(ConstParm, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ClientSuggestTetherLength_AllowedInterval;         // 0xD3C(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	double                                       ClientSuggestTetherLength_LastReceivedTime;        // 0xD40(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ValidHitSurface_DistanceFromCapsuleEdge;           // 0xD48(0x4)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3987[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             ValidHitSurface_UpVectorAngleRange;                // 0xD50(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             LastProjectedOwnerInputs;                          // 0xD60(0x10)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        OwnerCapsuleRadius;                                // 0xD70(0x4)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        OwnerCapsuleHalfHeight;                            // 0xD74(0x4)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PreviousOwnerVelocity;                             // 0xD78(0x18)(Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherTensionStrength;                             // 0xD90(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherTensionExponent;                             // 0xD94(0x4)(ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ForceFallingStateImpulse;                          // 0xD98(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3988[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        ReservedTetherTags;                                // 0xDA0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FString                                TetherTagOwnerConnectorString;                     // 0xDB0(0x10)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             GrappledGravityScaleRange;                         // 0xDC0(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        GrappledGravityScaleMult_Idle;                     // 0xDD0(0x4)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        GrappledGravityScaleMult_Pulling;                  // 0xDD4(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        GrappledGravityScaleMult_Releasing;                // 0xDD8(0x4)(Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        AtTetherLimitBelowDistFromEnd;                     // 0xDDC(0x4)(BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LastGravity;                                       // 0xDE0(0x18)(Edit, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LookingAtAgainstSurfaceAngle;                      // 0xDF8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        VelocityOverrideMaxDeltaTime;                      // 0xDFC(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalBuff_Grappled* GetDefaultObj();

	float UpdateTethersByState();
	bool UpdateTetherMasterRef(const struct FGrappleTether& ForTether);
	void UpdateOwnerSwingingVelocity();
	void UpdateOwnerMovementSpeed(const struct FVector& WithCharVelocity);
	void UpdateGrappleTetherVars(const struct FGrappleTether& ForTether);
	void UpdateBrokenTethers();
	void UpdateAgainstSurfaceFromHits(const TArray<struct FHitResult>& Hits);
	float Tick_UpdateGrappleTethers();
	float Tick_UpdateAgainstSurface();
	bool TetherHasValidMasterRef(const struct FGrappleTether& ForTether);
	void SyncOwnerInputs(const struct FVector2D& NewInputs);
	void SyncGrappleTetherLengths();
	float SimulateTetherFriction(const struct FVector& WithCharVelocity);
	float SimulateTautTetherForces(const struct FVector& WithCharVelocity, float LastGravityZ);
	bool ShouldUseDynamicTetherTension(const struct FGrappleTether& ForTether);
	bool ShouldTetherBreak(const struct FGrappleTether& ForTether, class APrimalCharacter* ForChar, float OverrideBreakPastDist);
	bool ShouldReturnToIdleGrappleState();
	bool ShouldReplicateOwnerInputs();
	bool ShouldOwnerBeAffectedByTether(const struct FGrappleTether& ForTether, enum class EGrappleState ForGrappeState);
	bool ShouldForceOwnerIntoFallingState(const struct FGrappleTether& ForTether, const struct FVector& WithOwnerVelocity, enum class EMovementMode CheckMovementModeOverride);
	void SetupDelegateBindingsForChar(class APrimalCharacter* ForChar, bool bDoBind);
	bool SetGrappleTetherLength(const struct FGrappleTether& ForTether, float SetNewLength, int32 ForTetherIndex);
	bool SetGrappleTetherAtIndexLength(int32 AtIndex, float SetNewLength);
	bool SetGrappleState(enum class EGrappleState* NewGrappleState);
	void Server_SyncOwnerInputs(const struct FVector2D& NewInputs);
	void Server_SuggestTetherLengths(TArray<float>* NewTetherLengths);
	void Server_SuggestTetherLength(float NewTetherLength);
	bool Server_SetGrappleState(uint8* NewGrappleState);
	void ResetOwnerVars();
	void ResetOwnerClientPositionErrorTolerance();
	bool RemoveGrappleTether(int32 AtIndex, class FString* WithTag, class APrimalBuff_Grappled* WithMasterBuff, bool bForceNetSync, bool bRemoveAllTethersWithTag);
	void RefreshAllTetherMasterRefs();
	void ReceiveTetherLengthSuggestion(int32 ForTetherIndex, float NewTetherLength);
	void ReceiveTetherLengthsSuggestion(TArray<float>* NewTetherLengths);
	void OnRep_ReplicatedGrappleTethers();
	void OnRep_GrappleState();
	void OnReleasedPrimalChar(class APrimalCharacter** ReleasedChar);
	bool OnOwnerSleepStateChanged(class APrimalCharacter* ForChar);
	void OnOwnerDeath(class APrimalCharacter** DyingChar);
	struct FHitResult OnOwnerCapsuleHit(const struct FVector& NormalImpulse);
	void OnGrappleTethersChanged();
	void OnGrappleTetherRemoved(struct FGrappleTether* RemovedTether);
	void OnGrappleTetherBroken(int32* BrokenIndex);
	void OnGrappleTetherAdded(struct FGrappleTether* AddedTether);
	void OnGrappleStateChangedNotify(uint8* NewGrappleState, bool* bIsEarlyNotify);
	void OnGrappleStateChanged();
	void OnGrappledPrimalChar(class APrimalCharacter** GrappledChar, struct FGrappleTether* WithMasterTether);
	bool OnGrappledCharSleepStateChange(class APrimalCharacter* ForChar);
	void OnGrappledCharDeath(class APrimalCharacter** DyingChar);
	void OnAgainstValidSurfaceUpdated();
	void OnAgainstValidSurfaceStateChanged();
	void NetSyncGrappleTethers();
	void Multi_SyncGrappleTetherLengths(TArray<float>* SyncedTetherLengths);
	void Multi_SyncGrappleTetherLength(float* SyncedTetherLength);
	float ModifyTetherTensionLerpValue(float* CurrentLerpValue);
	void ModifyTetherMoveVelocity(struct FVector* CurrentMoveVelocity, const struct FGrappleTether& ForTether);
	float ModifyOverriddenCharVelocity(struct FVector* CurrentCharVelocity);
	float ModifyGrappledCharVelocity(struct FVector* CurrentCharVelocity, const struct FGrappleTether& ForTether);
	struct FGrappleTether MakeGrappleTether(const struct FCreateGrappleTetherData& FromData, class APrimalBuff_Grappled** ForMasterBuff);
	bool IsValidSurfaceHit(struct FHitResult* ForHit);
	bool IsValidGrappleHit(struct FHitResult* ForHit);
	bool IsTethersMasterGrappleBuff(const struct FGrappleTether& CheckTether);
	bool IsTetherAtMaxLength(const struct FGrappleTether& ForTether);
	bool IsSwingingTowardsAxisCenter(const struct FGrappleTether& ForTether);
	bool IsOwnerLookingAtAgainstSurface();
	bool IsOwnerAgainstValidSurface();
	bool IsOwnerAboveGround(struct FVector* FoundGroundLocation, float* CheckDistance);
	bool IsHitWithinGrappleRange(struct FHitResult* ForHit);
	bool IsGrappleTetherValid(const struct FGrappleTether& CheckTether);
	bool IsGrappledCharHardAttached(class APrimalCharacter* ForChar);
	bool IsCharPastMaxTetherLength(const struct FGrappleTether& ForTether, class APrimalCharacter* ForChar);
	bool InitializeGrappleTether(struct FGrappleTether* InitTether, class APrimalBuff_Grappled** ByGrappleBuff);
	void InitGrappleBuff();
	float GrappleTick();
	bool GetTetherMasterRef(const struct FGrappleTether& ForTether, struct FGrappleTether* MasterRef);
	float GetTetherBreakLimit_OwnerPastCurrentLengthForTime(const struct FGrappleTether& ForTether);
	float GetTetherBreakLimit_OwnerPastCurrentLengthDelta(const struct FGrappleTether& ForTether);
	float GetTetherBreakLimit_GrappledActorAboveVelocity(const struct FGrappleTether& ForTether);
	float GetRequiredTetherLengthForChar(const struct FGrappleTether& ForTether, class APrimalCharacter* ForChar);
	struct FVector2D GetReplicatedOwnerInputs();
	class FString GetOwnerAppendedTetherTag(class FString* WithRootTag, class APrimalBuff_Grappled** OwnerGrappleBuff);
	int32 GetNumValidTethers(bool* bOnlyReservedTethers);
	int32 GetNumReservedTethers();
	float GetMinTetherLength(const struct FGrappleTether& ForTether);
	float GetMaxTetherLength(const struct FGrappleTether& ForTether);
	struct FVector GetInitGrappleAnchorRelativeOffset(struct FGrappleAnchor* ForAnchorData, class AActor** WithAnchorOwner);
	float GetGrappleVelocityDampingRate(class APrimalCharacter* ForChar, const struct FGrappleTether& ForTether);
	class FString GetGrappleTetherRootTag(class FString* ForTag);
	float GetGrappleTetherReleaseMaxVelocity(class APrimalCharacter** ForReleasingChar, const struct FGrappleTether& ForTether);
	float GetGrappleTetherPullMaxVelocity(class APrimalCharacter** ForPullingChar, const struct FGrappleTether& ForTether);
	float GetGrappleTetherPullAcceleration(class APrimalCharacter** ForPullingChar, const struct FGrappleTether& ForTether);
	struct FVector GetGrappleAnchorWorldLocation(struct FGrappleAnchor* ForAnchorData, class AActor** WithAnchorOwner);
	struct FVector GetCurrentTetherMoveDir(const struct FGrappleTether& ForTether);
	struct FVector2D GetCurrentSwingingAxisValues();
	enum class EGrappleState GetCurrentGrappleState(const struct FGrappleTether& ForTether);
	float GetCharDistanceFromTetherEndRatio(const struct FGrappleTether& ForTether, class APrimalCharacter* ForChar);
	float GetCharAngleToGrappleTetherEnd(const struct FGrappleTether& ForTether, class APrimalCharacter* ForChar);
	struct FVector GetAverageTetherEndLocation(bool* bReservedTethersOnly);
	TArray<class APrimalCharacter*> GetAllCurrentGrapplers();
	class APrimalCharacter* GetActorAttachParentChar(class AActor** ForActor);
	void EndGrapple();
	bool DisplayGrappleSystemHudNotification(class AShooterPlayerController** ForPC, uint8 NotificationType, int32 NotificationID, const class FString& ReasonString);
	float CustomGrappleTick();
	void ClampOwnerReleasingVelocity(const struct FVector& WithReleasingVelocity);
	void ClampGrappleVelocity(struct FVector* ClampVelocity);
	void CheckForTetherBreak(const struct FGrappleTether& CheckTether, int32 WithIndex, float OverrideBreakPastDist);
	bool CheckForAutoBreakTether(const struct FGrappleTether& CheckTether);
	bool CanUpdateTetherLength(const struct FGrappleTether& ForTether, float WithLength);
	bool CanTetherOwnerPullGrappledChar(const struct FGrappleTether& ForTether);
	bool CanSyncGrappleTetherLengths();
	bool CanReceiveNewGrappleTether(class FString* WithTag);
	bool CanPullChar(class APrimalCharacter* PullChar, bool bForStart);
	bool CanOwnerGrappleSwing();
	bool CanManipulateOwnerVelocity();
	bool CanGrappleTetherAffectOwnerMovement(const struct FGrappleTether& ForTether);
	bool CanCharControlGrappleTether(class APrimalCharacter* ForChar, const struct FGrappleTether& ForTether, bool bAllowSlaveGrappleToControl);
	bool CanChangeGrappleState(uint8 DesiredGrappleState);
	bool CanBeGrappledAgainstSurface();
	bool BreakGrappleTether(int32 AtIndex, class FString* WithTag, class APrimalBuff_Grappled* WithMasterBuff, bool bBreakAllTethersWithTag);
	bool BreakChildTetherOnGrappledChar(const struct FGrappleTether& WithTether);
	void BreakAllTethers();
	bool BP_InterceptGrappleLogic(const struct FVector& CharVelocity);
	bool AreGrappleTetherTagsEqual(const class FString& TagA, const class FString& TagB, bool bOnlyCompareRootTag);
	float ApplyTetherMoveVelocity(const struct FVector& CurrentVelocity);
	float ApplyOwnerSwingingVelocity(const struct FVector& CurrentVelocity);
	bool AllowGrappleLogic();
	void AdjustMovementVectorIfAgainstSurface(const struct FVector& AdjustVector);
	int32 AddGrappleTether(const struct FCreateGrappleTetherData& FromData, bool bPreventNetSync, int32 AddAtIndex);
};

// 0x138 (0xCA0 - 0xB68)
// Class ShooterGame.PrimalBuff_MissionData
class APrimalBuff_MissionData : public APrimalBuff
{
public:
	class AMissionType*                          ActiveMission;                                     // 0xB68(0x8)(ConstParm, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ActiveMissionIndex;                                // 0xB70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_39C6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FClientMissionData>            CurrentMissions;                                   // 0xB78(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       MissionIndicatorParticles;                         // 0xB88(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FString                                NonHostPrepAreaNotification;                       // 0xB90(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PendingMission;                                    // 0xBA0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnPlayerAddedToMission;                            // 0xBA8(0x10)(Edit, ConstParm, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnPlayerRemovedFromMission;                        // 0xBB8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            MissionClientDataUpdated;                          // 0xBC8(0x10)(ExportObject, Net, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_39C7[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FClientMissionSubscriptionData> ReplicatedMissionDataSubscriptions;                // 0xC28(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_39C8[0x68];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalBuff_MissionData* GetDefaultObj();

	void UnloadLevelsForMissionTag(class FName* MissionTag);
	void SetMissionData_Vector(class FName* MissionTag, class FName Key, struct FVector* Value);
	void SetMissionData_Struct(class FName* MissionTag, class FName Key, struct FPropertyThunkWrapper* Value);
	void SetMissionData_String(class FName* MissionTag, class FName Key, class FString* Value);
	void SetMissionData_Rotator(class FName* MissionTag, class FName Key, struct FRotator* Value);
	void SetMissionData_Int(class FName* MissionTag, class FName Key, int32* Value);
	void SetMissionData_Float(class FName* MissionTag, class FName Key, float* Value);
	void SetMissionData_Double(class FName* MissionTag, class FName Key, double* Value);
	void SetMissionData_Bool(class FName* MissionTag, class FName Key, bool* Value);
	class AMissionType* ServerRequestToggleWeapon();
	void ServerRequestStartMissionWithMissionTag(class FName* MissionTag, class AMissionDispatcher* FromDispatcher);
	class UClass* ServerRequestStartMission(class AMissionDispatcher* FromDispatcher);
	void ServerRequestMissionEligibilityCheck(class AMissionDispatcher* DispatcherFilter);
	struct FItemNetID ServerRequestEquipMissionItem();
	void ServerRequestCancelMission();
	void ServerMulticastRequiredProps();
	void ReplicatedMissionDataUpdated();
	void OnRep_MissionIndicatorParticles();
	void OnRep_CurrentMissions();
	void OnRep_ActiveMissionIndex();
	class FName OnActiveMissionPhaseStarted();
	class FName OnActiveMissionPhaseEnded();
	void MultiUpdateMissionData_Int(class FName* MissionTag, class FName Key, int32* Value);
	void MultiUpdateMissionData_Bool(class FName* MissionTag, class FName Key, bool* Value);
	float MultiClearParticleIndicator();
	void LoadLevelsForMissionTag(class FName* MissionTag);
	bool IsPlayerEligibleForMission_CheckFromClient(bool bOutIsRecentData, const struct FClientMissionEligibility& OutEligibilityData, float MaxTimeConsideredRecent, class AMissionDispatcher* DispatcherFilter);
	bool IsMissionTypeActiveWithMissionTag(class FName* MissionTag);
	bool IsMissionTypeActive(bool bExactClassMatch);
	TArray<struct FMissionWorldIndicator> GetWorldIndicatorsForMission(bool bCompanionOnly, bool bSortByPriority);
	void GetMissionDebugData(const TArray<struct FSerializedMissionData>& OutMissionData);
	bool GetMissionData_Vector(class FName* MissionTag, class FName Key, struct FVector* OutValue);
	bool GetMissionData_Struct(class FName* MissionTag, class FName Key);
	bool GetMissionData_String(class FName* MissionTag, class FName Key, class FString* OutValue);
	bool GetMissionData_Rotator(class FName* MissionTag, class FName Key, struct FRotator* OutValue);
	bool GetMissionData_Int(class FName* MissionTag, class FName Key, int32* OutValue);
	bool GetMissionData_Float(class FName* MissionTag, class FName Key, float* OutValue);
	bool GetMissionData_Double(class FName* MissionTag, class FName Key, double* OutValue);
	bool GetMissionData_Bool(class FName* MissionTag, class FName Key, bool* OutValue);
	class FName GetBiomeMissionTag(struct FVector* Location);
	void GetAllCurrentMissions(const TArray<class AMissionType*>& OutMissions);
	class AMissionType* GetActiveMission();
	void ClientUnloadMissionLevels(class FName* MissionTag);
	float ClientSpawnEmitter();
	bool ClientSendMissionNotification(class AMissionType* FromMission, class FName NotificationTag, class USoundBase* MessageSound);
	bool ClientSendMissionAlert(enum class EMissionAlertType AlertType, class FString* AlertTitle, class USoundBase** Sound);
	class AMissionType* ClientMissionEvent(bool bMissionStarted, bool bMissionCompletedSuccessfully);
	void ClientMissionEligibilityResponse(const TArray<struct FMissionEligibilityData>& EligibilityData);
	void ClientLoadMissionLevels(class FName* MissionTag);
	void AutoHideIndicatorParticles();
};

// 0x8 (0x4C8 - 0x4C0)
// Class ShooterGame.PrimalCableActor
class APrimalCableActor : public AActor
{
public:
	class UPrimalCableComponent*                 CableComponent;                                    // 0x4C0(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst)

	static class UClass* StaticClass();
	static class APrimalCableActor* GetDefaultObj();

};

// 0x88 (0x7E0 - 0x758)
// Class ShooterGame.PrimalCableComponent
class UPrimalCableComponent : public UArkProceduralMeshComponent
{
public:
	uint8                                        bEndPointIsInWorldSpace : 1;                       // Mask: 0x1, PropSize: 0x10x758(0x1)(Edit, BlueprintVisible, Net, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2B8 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_39CB[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FComponentReference                   AttachEndTo;                                       // 0x760(0x28)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               EndLocation;                                       // 0x788(0x18)(Edit, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CableLength;                                       // 0x7A0(0x4)(ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NumSegments;                                       // 0x7A4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        SubstepTime;                                       // 0x7A8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        SolverIterations;                                  // 0x7AC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst)
	float                                        MaxParticleSpeed;                                  // 0x7B0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        CableWidth;                                        // 0x7B4(0x4)(ConstParm, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NumSides;                                          // 0x7B8(0x4)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        TileMaterial;                                      // 0x7BC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bRenderFirstHalfOnly;                              // 0x7C0(0x1)(Edit, BlueprintReadOnly, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_39CC[0x1F];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalCableComponent* GetDefaultObj();

	struct FVector SpreadOutParticles(const struct FVector& EndPosition);
	class USceneComponent* SetAttachEndOverrideComponent();
	void MarkRenderDynamicDataDirtyBP();
	void GetEndPositions(struct FVector* OutStartPosition, struct FVector* OutEndPosition);
	struct FCableParticle GetCableParticle(int32 Idx);
	struct FVector GetCableMidPoint();
	class USceneComponent* GetAttachEndOverrideComponent();
};

// 0xE8 (0x110 - 0x28)
// Class ShooterGame.PrimalCameraConfig
class UPrimalCameraConfig : public UObject
{
public:
	class FName                                  DefaultCameraProfileName;                          // 0x28(0x8)(Edit, EditFixedSize, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TightCameraProfileName;                            // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MidCameraProfileName;                              // 0x38(0x8)(ConstParm, ExportObject, Net, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LooseCameraProfileName;                            // 0x40(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TMap<class FName, struct FPrimalCameraProfile> CameraProfiles;                                    // 0x48(0x50)(BlueprintVisible, ExportObject, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TMap<class FName, struct FPrimalCameraProfile> ExtraCameraProfiles;                               // 0x98(0x50)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               TPVWeaponCameraOffset;                             // 0xE8(0x18)(ExportObject, Net, EditFixedSize, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TransitionToTargetingCameraInterpSpeed;            // 0x100(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TransitionToASACameraInterpTime;                   // 0x104(0x4)(Edit, ConstParm, EditFixedSize, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TransitionToOldCameraInterpTime;                   // 0x108(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_39CD[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalCameraConfig* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class ShooterGame.PrimalCameraConfig_WeaponOverride
class UPrimalCameraConfig_WeaponOverride : public UObject
{
public:
	TMap<class FName, struct FPrimalCameraSettingsOverrideGroup> WeaponCameraSettingsOverrides;                     // 0x28(0x50)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalCameraConfig_WeaponOverride* GetDefaultObj();

};

// 0x10 (0xC80 - 0xC70)
// Class ShooterGame.PrimalCameraProbeActor
class APrimalCameraProbeActor : public ACameraActor
{
public:
	bool                                         bActive;                                           // 0xC70(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, SubobjectReference)
	uint8                                        Pad_39CE[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalCameraProbeActor* GetDefaultObj();

};

// 0x5C8 (0x1540 - 0xF78)
// Class ShooterGame.PrimalCharacterMovement
class UPrimalCharacterMovement : public UCharacterMovementComponent
{
public:
	uint8                                        bAccelerationFollowsRotation : 1;                  // Mask: 0x1, PropSize: 0x10xF78(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bPreventWaterSurfaceHopping : 1;                   // Mask: 0x2, PropSize: 0x10xF78(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheckFallingAITempIgnoreDinoRiderMesh : 1;        // Mask: 0x4, PropSize: 0x10xF78(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2B9 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bForceAccelerationFollowsRotationInSwimming : 1;   // Mask: 0x10, PropSize: 0x10xF78(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseRotationAcceleration : 1;                      // Mask: 0x20, PropSize: 0x10xF78(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bIgnoreRotationAccelerationWhenSwimming : 1;       // Mask: 0x40, PropSize: 0x10xF78(0x1)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2BA : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseAsyncWalking : 1;                              // Mask: 0x1, PropSize: 0x10xF79(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowSimulatedTickDistanceSkip : 1;               // Mask: 0x2, PropSize: 0x10xF79(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowImpactDeflection : 1;                        // Mask: 0x4, PropSize: 0x10xF79(0x1)(Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableSimulatedMovement : 1;                     // Mask: 0x8, PropSize: 0x10xF79(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        BitPad_2BB : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bCanSlide : 1;                                     // Mask: 0x20, PropSize: 0x10xF79(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bAssumeSymmetricalRotation : 1;                    // Mask: 0x40, PropSize: 0x10xF79(0x1)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWantsToDodge : 1;                                 // Mask: 0x80, PropSize: 0x10xF79(0x1)(BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bUseWeaponSpeedMultiplierByDirection : 1;          // Mask: 0x1, PropSize: 0x10xF7A(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWantsToProne : 1;                                 // Mask: 0x2, PropSize: 0x10xF7A(0x1)(ExportObject, Net, Parm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bUseCharacterInterpolationAndStops : 1;            // Mask: 0x4, PropSize: 0x10xF7A(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyForwardsInputAcceleration : 1;                // Mask: 0x8, PropSize: 0x10xF7A(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bOnlyForwardsInputAccelerationWalking : 1;         // Mask: 0x10, PropSize: 0x10xF7A(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2BC : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bPreventExitingWater : 1;                          // Mask: 0x40, PropSize: 0x10xF7A(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        BitPad_2BD : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseWaveLocking : 1;                               // Mask: 0x1, PropSize: 0x10xF7B(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bForcePreventExitingWater : 1;                     // Mask: 0x2, PropSize: 0x10xF7B(0x1)(Net, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bClippedToWaterSurface : 1;                        // Mask: 0x4, PropSize: 0x10xF7B(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bZeroPitchWhenNoAcceleration : 1;                  // Mask: 0x8, PropSize: 0x10xF7B(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bRequireAccelerationForUseControllerDesiredRotation : 1; // Mask: 0x10, PropSize: 0x10xF7B(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bForceDontAllowDesiredRotationWhenFalling : 1;     // Mask: 0x20, PropSize: 0x10xF7B(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bReduceBackwardsMovement : 1;                      // Mask: 0x40, PropSize: 0x10xF7B(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bPreventAddingImpulse : 1;                         // Mask: 0x80, PropSize: 0x10xF7B(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bPreventSlidingWhileFalling : 1;                   // Mask: 0x1, PropSize: 0x10xF7C(0x1)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bPreventZeroPitchAndRollWhileFalling : 1;          // Mask: 0x2, PropSize: 0x10xF7C(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bPreventEnteringWater : 1;                         // Mask: 0x4, PropSize: 0x10xF7C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bServerCorrectForMovementModeChanges : 1;          // Mask: 0x8, PropSize: 0x10xF7C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        bFallVelocityRecursionGuard : 1;                   // Mask: 0x10, PropSize: 0x10xF7C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLastHasRequestedVelocity : 1;                     // Mask: 0x20, PropSize: 0x10xF7C(0x1)(BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2BE : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_39D5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LastForcedNetVelocity;                             // 0xF80(0x18)(BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_39D6[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ProneHalfHeight;                                   // 0xFA0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxWalkSpeedProne;                                 // 0xFA4(0x4)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoClientPositionErrorToleranceStopped;           // 0xFA8(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	float                                        DinoClientPositionErrorToleranceMovingFlying;      // 0xFAC(0x4)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	float                                        ClientRunningPositionErrorTolerance;               // 0xFB0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerClientPositionErrorToleranceOverride;        // 0xFB4(0x4)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	float                                        SimulatedTickSkipDistanceSQ;                       // 0xFB8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_39D7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               WantsToDodgeVelocity;                              // 0xFC0(0x18)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        PreventWaterHoppingPlaneOffset;                    // 0xFD8(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_39DA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       PreventWaterHopping_LastTimeAtSurface;             // 0xFE0(0x8)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	float                                        AccelerationFollowsRotationMinDot;                 // 0xFE8(0x4)(ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        AccelerationFollowsRotationStopDistance;           // 0xFEC(0x4)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        RotationAcceleration;                              // 0xFF0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, SubobjectReference)
	float                                        RotationBraking;                                   // 0xFF4(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	float                                        AngleToStartRotationBraking;                       // 0xFF8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	float                                        SwimmingAccelZMultiplier;                          // 0xFFC(0x4)(Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedSwimmingAccelZMultiplier;                     // 0x1000(0x4)(BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSlipOffLedges;                                    // 0x1004(0x1)(ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_39DD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LedgeSlipCapsuleRadiusMultiplier;                  // 0x1008(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LedgeSlipPushVelocity;                             // 0x100C(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LedgeSlipVelocityBuildUpMultiplier;                // 0x1010(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        BackwardsMaxSpeedMultiplier;                       // 0x1014(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        BackwardsMovementDotThreshold;                     // 0x1018(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        WaterDinoSurfacePitchClampCapsuleDistanceMultiplier; // 0x101C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        WaterDinoSurfacePitchClampMaxPitch;                // 0x1020(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LostDeltaTime;                                     // 0x1024(0x4)(Edit, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LastLostDeltaTime;                                 // 0x1028(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        WaveLockingMaxZOffset;                             // 0x102C(0x4)(Edit, ConstParm, ExportObject, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        Pad_39DE[0x38];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       LastSwimTime;                                      // 0x1068(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeLeftToForceTickEveryFrame;                     // 0x1070(0x4)(BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LandedPreventRequestedMoveInterval;                // 0x1074(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	float                                        LandedPreventRequestedMoveMinVelocityMagnitude;    // 0x1078(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        Pad_39DF[0x3C];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       DisableMovementPhysicsUntilTime;                   // 0x10B8(0x8)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        Pad_39E0[0x140];                                   // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              CurrentRotationSpeed;                              // 0x1200(0x18)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_39E1[0x328];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalCharacterMovement* GetDefaultObj();

	bool UnProne();
	bool UnCrouch();
	void StopLoggingSavedMoves();
	void StartLoggingSavedMoves();
	class UPrimitiveComponent* SetBase(class FName* BoneName, bool* bNotifyActor);
	void ServerJumpOutOfWater(struct FVector_NetQuantize100* WallNormal, uint8* JumpFlag);
	bool Prone();
	bool IsOnWalkableFloor();
	bool IsMovingBackwards();
	class APrimalCharacter* GetPrimalCharacter();
	void ClearBase(bool* bNotifyActor);
};

// 0xD8 (0x100 - 0x28)
// Class ShooterGame.PrimalCharacterSetting
class UPrimalCharacterSetting : public UObject
{
public:
	struct FCharacterPreset                      CharacterSetting;                                  // 0x28(0xD8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalCharacterSetting* GetDefaultObj();

};

// 0x1030 (0x10E8 - 0xB8)
// Class ShooterGame.PrimalCharacterStatusComponent
class UPrimalCharacterStatusComponent : public UActorComponent
{
public:
	uint8                                        Pad_3A3D[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxStatusValues[0xC];                              // 0xC0(0x30)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseLevelMaxStatusValues[0xC];                     // 0xF0(0x30)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        NumberOfLevelUpPointsApplied[0xC];                 // 0x120(0xC)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        NumberOfLevelUpPointsAppliedTamed[0xC];            // 0x12C(0xC)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        NumberOfMutationsAppliedTamed[0xC];                // 0x138(0xC)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedIneffectivenessModifier;                      // 0x144(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MovingStaminaRecoveryRateMultiplier;               // 0x148(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RecoveryRateStatusValue[0xC];                      // 0x14C(0x30)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeToRecoverAfterDepletionStatusValue[0xC];       // 0x17C(0x30)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeToRecoverAfterDecreaseStatusValue[0xC];        // 0x1AC(0x30)(ConstParm, Net, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AmountMaxGainedPerLevelUpValue[0xC];               // 0x1DC(0x30)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AmountMaxGainedPerLevelUpValueTamed[0xC];          // 0x20C(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        MaxGainedPerLevelUpValueIsPercent[0xC];            // 0x23C(0xC)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        RecoveryRateIsPercent[0xC];                        // 0x248(0xC)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamingMaxStatMultipliers[0xC];                     // 0x254(0x30)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamingMaxStatAdditions[0xC];                       // 0x284(0x30)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxLevelUpMultiplier[0xC];                         // 0x2B4(0x30)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MutationMultiplier[0xC];                           // 0x2E4(0x30)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedLandDinoSwimSpeedLevelUpEffectiveness;        // 0x314(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamingIneffectivenessMultiplier;                   // 0x318(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoRiderWeightMultiplier;                         // 0x31C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        CanLevelUpValue[0xC];                              // 0x320(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        DontUseValue[0xC];                                 // 0x32C(0xC)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        SkipWildLevelUpValue[0xC];                         // 0x338(0xC)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A3E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPrimalCharacterStatusStateThresholds StatusStateThresholds[0xC];                        // 0x348(0x360)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ExperienceAutomaticConsciousIncreaseSpeed;         // 0x6A8(0x4)(Edit, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CheatMaxWeight;                                    // 0x6AC(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        CharacterStatusComponentPriority;                  // 0x6B0(0x4)(ExportObject, Net, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SuffocationHealthPercentDecreaseSpeed;             // 0x6B4(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        UnsubmergedOxygenIncreaseSpeed;                    // 0x6B8(0x4)(BlueprintVisible, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SubmergedOxygenDecreaseSpeed;                      // 0x6BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RunningStaminaConsumptionRate;                     // 0x6C0(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WalkingStaminaConsumptionRate;                     // 0x6C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SwimmingOrFlyingStaminaConsumptionRate;            // 0x6C8(0x4)(Edit, EditFixedSize, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        JumpStaminaConsumption;                            // 0x6CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WindedSpeedModifier;                               // 0x6D0(0x4)(ConstParm, ExportObject, Net, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WindedSpeedModifierSwimmingOrFlying;               // 0x6D4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        InjuredSpeedModifier;                              // 0x6D8(0x4)(BlueprintVisible, ExportObject, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HypothermicHealthDecreaseRateBase;                 // 0x6DC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HypothermicHealthDecreaseRatePerDegree;            // 0x6E0(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HyperthermicHealthDecreaseRateBase;                // 0x6E4(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HyperthermicHealthDecreaseRatePerDegree;           // 0x6E8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        XPEarnedPerStaminaConsumed;                        // 0x6EC(0x4)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        KillXPMultiplierPerCharacterLevel;                 // 0x6F0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanSuffocate : 1;                                 // Mask: 0x1, PropSize: 0x10x6F4(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanSuffocateIfTamed : 1;                          // Mask: 0x2, PropSize: 0x10x6F4(0x1)(BlueprintVisible, ExportObject, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanGetHungry : 1;                                 // Mask: 0x4, PropSize: 0x10x6F4(0x1)(BlueprintVisible, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseStamina : 1;                                   // Mask: 0x8, PropSize: 0x10x6F4(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWalkingConsumesStamina : 1;                       // Mask: 0x10, PropSize: 0x10x6F4(0x1)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRunningConsumesStamina : 1;                       // Mask: 0x20, PropSize: 0x10x6F4(0x1)(Edit, ConstParm, Net, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bConsumeFoodAutomatically : 1;                     // Mask: 0x40, PropSize: 0x10x6F4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInfiniteFood : 1;                                 // Mask: 0x80, PropSize: 0x10x6F4(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAddExperienceAutomatically : 1;                   // Mask: 0x1, PropSize: 0x10x6F5(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bConsumeWaterAutomatically : 1;                    // Mask: 0x2, PropSize: 0x10x6F5(0x1)(BlueprintReadOnly, Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutomaticallyUpdateTemperature : 1;               // Mask: 0x4, PropSize: 0x10x6F5(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReplicateGlobalStatusValues : 1;                  // Mask: 0x8, PropSize: 0x10x6F5(0x1)(ConstParm, BlueprintVisible, Net, ReturnParm, Transient, DisableEditOnInstance)
	uint8                                        bAllowLevelUps : 1;                                // Mask: 0x10, PropSize: 0x10x6F5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance)
	uint8                                        bInfiniteStats : 1;                                // Mask: 0x20, PropSize: 0x10x6F5(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowSharingXPWithTribe : 1;                      // Mask: 0x40, PropSize: 0x10x6F5(0x1)(ConstParm, ExportObject, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseStatusSpeedModifiers : 1;                      // Mask: 0x80, PropSize: 0x10x6F5(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bStatusSpeedModifierOnlyFullOrNone : 1;            // Mask: 0x1, PropSize: 0x10x6F6(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreStatusSpeedModifierIfSwimming : 1;          // Mask: 0x2, PropSize: 0x10x6F6(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventJump : 1;                                  // Mask: 0x4, PropSize: 0x10x6F6(0x1)(ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInitializedBaseLevelMaxStatusValues : 1;          // Mask: 0x8, PropSize: 0x10x6F6(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2BF : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bServerFirstInitialized : 1;                       // Mask: 0x20, PropSize: 0x10x6F6(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance)
	uint8                                        bRunningUseDefaultSpeed : 1;                       // Mask: 0x40, PropSize: 0x10x6F6(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNeverAllowXP : 1;                                 // Mask: 0x80, PropSize: 0x10x6F6(0x1)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventTamedStatReplication : 1;                  // Mask: 0x1, PropSize: 0x10x6F7(0x1)(Edit, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustStatusValueModification : 1;           // Mask: 0x2, PropSize: 0x10x6F7(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDefaultSpeed : 1;                            // Mask: 0x4, PropSize: 0x10x6F7(0x1)(BlueprintVisible, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheatStatus : 1;                                  // Mask: 0x8, PropSize: 0x10x6F7(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2C0 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHideFoodStatusFromHUD : 1;                        // Mask: 0x20, PropSize: 0x10x6F7(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetStatusNameString : 1;                     // Mask: 0x40, PropSize: 0x10x6F7(0x1)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideStaminaStatusFromHUD : 1;                     // Mask: 0x80, PropSize: 0x10x6F7(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontUseSpeedMultipleAsSpeed : 1;                  // Mask: 0x1, PropSize: 0x10x6F8(0x1)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2C1 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3A3F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ShareXPWithTribeRange;                             // 0x6FC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        BaseCharacterLevel;                                // 0x700(0x4)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint16                                       ExtraCharacterLevel;                               // 0x704(0x2)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3A41[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ExperiencePoints;                                  // 0x708(0x4)(ConstParm, ExportObject, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance)
	float                                        ReplicatedExperiencePoints;                        // 0x70C(0x4)(ConstParm, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	enum class ELevelExperienceRampType          LevelExperienceRampType;                           // 0x710(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A42[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxExperiencePoints;                               // 0x714(0x4)(ConstParm, ExportObject, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseFoodConsumptionRate;                           // 0x718(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseWaterConsumptionRate;                          // 0x71C(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FortitudeTorpidityDecreaseMultiplier;              // 0x720(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FortitudeTorpidityIncreaseResistance;              // 0x724(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SubmergedWaterIncreaseRate;                        // 0x728(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CrouchedWaterFoodConsumptionMultiplier;            // 0x72C(0x4)(ExportObject, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ProneWaterFoodConsumptionMultiplier;               // 0x730(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        StaminaRecoveryDecreaseFoodMultiplier;             // 0x734(0x4)(Edit, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        StaminaRecoveryDecreaseWaterMultiplier;            // 0x738(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HealthRecoveryDecreaseFoodMultiplier;              // 0x73C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyDinoConsumingFoodRateMultiplier;               // 0x740(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoTamedAdultConsumingFoodRateMultiplier;         // 0x744(0x4)(Edit, BlueprintReadOnly, Net, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyGestationConsumingFoodRateMultiplier;          // 0x748(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyDinoStarvationHealthDecreaseRateMultiplier;    // 0x74C(0x4)(BlueprintVisible, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyMaxHealthPercent;                              // 0x750(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CrouchedStaminaConsumptionMultiplier;              // 0x754(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ProneStaminaConsumptionMultiplier;                 // 0x758(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        StarvationHealthConsumptionRate;                   // 0x75C(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DehyrdationHealthConsumptionRate;                  // 0x760(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        StaminaConsumptionDecreaseWaterMultiplier;         // 0x764(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        StaminaConsumptionDecreaseFoodMultiplier;          // 0x768(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HypothermiaDecreaseFoodMultiplierBase;             // 0x76C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HypothermiaDecreaseFoodMultiplierPerDegree;        // 0x770(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HyperthermiaDecreaseWaterMultiplierBase;           // 0x774(0x4)(ExportObject, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HyperthermiaDecreaseWaterMultiplierPerDegree;      // 0x778(0x4)(Edit, BlueprintReadOnly, Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HyperthermiaTemperatureThreshold;                  // 0x77C(0x4)(Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HypothermiaTemperatureThreshold;                   // 0x780(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TorporExitPercentThreshold;                        // 0x784(0x4)(Edit, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        KnockedOutTorpidityRecoveryRateMultiplier;         // 0x788(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DehydrationTorpidityMultiplier;                    // 0x78C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        StarvationTorpidityMultuplier;                     // 0x790(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        StarvationTorpidityIncreaseRate;                   // 0x794(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DehyrdationTorpidityIncreaseRate;                  // 0x798(0x4)(Edit, ExportObject, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        InjuredTorpidityIncreaseMultiplier;                // 0x79C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WeightSpeedDecreasePower;                          // 0x7A0(0x4)(ConstParm, ExportObject, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WeightJumpDecreasePower;                           // 0x7A4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PoopItemMinFoodConsumptionInterval;                // 0x7A8(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PoopItemMaxFoodConsumptionInterval;                // 0x7AC(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TheMaxTorporIncreasePerBaseLevel;                  // 0x7B0(0x4)(ExportObject, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentStatusValuesReplicationInterval;            // 0x7B4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        InsulationHyperthermiaOffsetExponent;              // 0x7B8(0x4)(Edit, Net, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        InsulationHyperthermiaOffsetScaler;                // 0x7BC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        InsulationHypothermiaOffsetExponent;               // 0x7C0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        InsulationHypothermiaOffsetScaler;                 // 0x7C4(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        HypoCharacterInsulationValue;                      // 0x7C8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        HyperCharacterInsulationValue;                     // 0x7CC(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        PoopItemFoodConsumptionCache;                      // 0x7D0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LastHypothermalCharacterInsulationValue;           // 0x7D4(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LastHyperthermalCharacterInsulationValue;          // 0x7D8(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class EPrimalCharacterStatusValue       MaxStatusValueToAutoUpdate;                        // 0x7DC(0x1)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A43[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        GenericXPMultiplier;                               // 0x7E0(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CraftEarnXPMultiplier;                             // 0x7E4(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        MinInventoryWeight;                                // 0x7E8(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        KillEarnXPMultiplier;                              // 0x7EC(0x4)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        GenericEarnXPMultiplier;                           // 0x7F0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SpecialEarnXPMultiplier;                           // 0x7F4(0x4)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ExplorerNoteEarnXPMultiplier;                      // 0x7F8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        HarvestEarnXPMultiplier;                           // 0x7FC(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DefaultHyperthermicInsulation;                     // 0x800(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DefaultHypothermicInsulation;                      // 0x804(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxTamingEffectivenessBaseLevelMultiplier;         // 0x808(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A44[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                FoodStatusNameOverride;                            // 0x810(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FoodStatusIconBackgroundOverride;                  // 0x820(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FoodStatusIconForegroundOverride;                  // 0x828(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPrimalCharacterStatusValueModifier> StatusValueModifiers;                              // 0x830(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<uint8>                                StatusValueModifierDescriptionIndices;             // 0x840(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentStatusValues[0xC];                          // 0x850(0x30)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance)
	float                                        AdditionalStatusValues[0xC];                       // 0x880(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ReplicatedCurrentStatusValues[0xC];                // 0x8B0(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ReplicatedGlobalMaxStatusValues[0xC];              // 0x8E0(0x30)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ReplicatedBaseLevelMaxStatusValues[0xC];           // 0x910(0x30)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ReplicatedGlobalCurrentStatusValues[0xC];          // 0x940(0x30)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	int8                                         CurrentStatusStates[0xC];                          // 0x970(0xC)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A45[0x184];                                   // Fixing Size After Last Property  > TateDumper <
	float                                        StaminaRecoveryExtraResourceDecreaseMultiplier;    // 0xB00(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DehydrationStaminaRecoveryRate;                    // 0xB04(0x4)(ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        WaterConsumptionMultiplier;                        // 0xB08(0x4)(ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        FoodConsumptionMultiplier;                         // 0xB0C(0x4)(ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class USoundBase*>                    EnteredStatusStateSounds;                          // 0xB10(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class USoundBase*>                    ExitStatusStateSounds;                             // 0xB20(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraOxygenSpeedStatMultiplier;                    // 0xB30(0x4)(Edit, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraTamedHealthMultiplier;                        // 0xB34(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        WakingTameFoodConsumptionRateMultiplier;           // 0xB38(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SwimmingStaminaRecoveryRateMultiplier;             // 0xB3C(0x4)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A46[0x1C];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        MountedDinoDinoWeightMultiplier;                   // 0xB5C(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraWildDinoDamageMultiplier;                     // 0xB60(0x4)(Edit, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraTamedDinoDamageMultiplier;                    // 0xB64(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        WeightMultiplierWhenCarriedOrBased;                // 0xB68(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        WeightMultiplierForCarriedPassengers;              // 0xB6C(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        WeightMultiplierForPlatformPassengersInventory;    // 0xB70(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoMaxStatAddMultiplierImprinting[0xC];           // 0xB74(0x30)(ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoImprintingQuality;                             // 0xBA4(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bForceGainOxygen : 1;                              // Mask: 0x1, PropSize: 0x10xBA8(0x1)(Edit, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFreezeStatusValues : 1;                           // Mask: 0x2, PropSize: 0x10xBA8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2C2 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPModifyMaxLevel : 1;                          // Mask: 0x8, PropSize: 0x10xBA8(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNoStaminaRecoveryWhenStarving : 1;                // Mask: 0x10, PropSize: 0x10xBA8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bApplyingStatusValueModifiers : 1;                 // Mask: 0x20, PropSize: 0x10xBA8(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontScaleMeleeDamage : 1;                         // Mask: 0x40, PropSize: 0x10xBA8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2C3 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3A47[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TamedBaseHealthMultiplier;                         // 0xBAC(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraBabyDinoConsumingFoodRateMultiplier;          // 0xBB0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A48[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        StatusValueNameOverrides;                          // 0xBB8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                RegainOxygenDamageType;                            // 0xBC8(0x8)(Edit, ConstParm, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceAllowStatusModifierSortingWhenTamed;         // 0xBD0(0x1)(Edit, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A49[0x517];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalCharacterStatusComponent* GetDefaultObj();

	bool UpdateWeightStat();
	bool UpdatedCurrentStatusValue(enum class EPrimalCharacterStatusValue* ValueType, float* Amount, bool bManualModification, class UClass** DamageTypeClass);
	bool TickStatus();
	bool SetTamed(float* TameIneffectivenessModifier);
	int32 SetMutationPoints(enum class EPrimalCharacterStatusValue* ValueType);
	enum class EPrimalCharacterStatusValue SetMaxStatusValue(float NewValue);
	TArray<float> SetLevelUpStatWeightOverrides();
	int32 SetLevelUpPoints(enum class EPrimalCharacterStatusValue* ValueType, bool* bTamedPoints);
	int32 SetExtraCharacterLevel();
	TArray<int32> SetCheatLevels();
	int32 SetBaseLevelNoStatChange();
	bool SetBaseLevelCustomized();
	bool SetBaseLevel();
	void SetAllStatsToMaximumExcluding(enum class EPrimalCharacterStatusValue* Exclude);
	void SetAllStatsToMaximum();
	void ServerSyncReplicatedValues();
	void ServerForceUpdateMaxStatValues();
	bool RescaleMaxStat(enum class EPrimalCharacterStatusValue LevelUpValueType, float TargetValue);
	void RescaleAllStats();
	void RemoveStatusValueModifierByInstigator(class AActor* Instigator);
	int32 RemoveStatusValueModifierByIndex();
	void OnRep_ReplicatedExperiencePoints();
	void OnRep_GlobalMaxStatusValues();
	void OnRep_GlobalCurrentStatusValues();
	void OnRep_GlobalBaseLevelMaxStatusValues();
	void OnRep_CurrentStatusValues();
	void NetSyncMaxStatusValues(TArray<float>* NetMaxStatusValues, TArray<float>* NetBaseMaxStatusValues);
	void NetSetMaxTamingEffectivenessBaseLevelMultiplier(float NewValue);
	float ModifyCurrentStatusValue(enum class EPrimalCharacterStatusValue* ValueType, float* Amount, bool bManualModification, class UClass** DamageTypeClass);
	bool IsInStatusState();
	bool IsAtMaxLevel();
	bool IsAtMaxExperience();
	bool HasExperienceForLevelUp();
	class FString GetStatusValueString(enum class EPrimalCharacterStatusValue* ValueType);
	float GetStatusValueRecoveryRate(enum class EPrimalCharacterStatusValue* ValueType);
	class FString GetStatusNameString(enum class EPrimalCharacterStatusValue* ValueType);
	class FString GetStatusMaxValueString(enum class EPrimalCharacterStatusValue* ValueType);
	float GetRawStatusValueRecoveryRate(enum class EPrimalCharacterStatusValue* ValueType);
	int32 GetMutationPoints(enum class EPrimalCharacterStatusValue* ValueType);
	float GetMovementSpeedModifier();
	float GetMeleeDamageModifier();
	int32 GetMaxLevel();
	int32 GetLevelUpPoints(enum class EPrimalCharacterStatusValue* ValueType, bool* bTamedPoints);
	int32 GetExtraCharacterLevel();
	float GetExperienceRequiredForPreviousLevelUp();
	float GetExperienceRequiredForNextLevelUp();
	float GetDinoStatDistributionAgainstMax(enum class EPrimalCharacterStatusValue* ValueType, bool* bTamedPoints, bool* bIncludeMaxTamingEffLevels);
	void GetDinoFoodConsumptionRateMultiplier(float* Amount);
	class FString GetDebugString();
	float GetCraftingSpeedModifier();
	int32 GetCharacterLevel();
	int32 GetBaseLevelFromLevelUpPoints(bool* bIncludePlayerAddedLevels);
	void CopyPrimalStatusComponentValues(class UPrimalCharacterStatusComponent** Src);
	enum class EPrimalCharacterStatusValue ConvertIntToCharacterStatusEnum(int32* InInteger);
	void ClientSyncMaxStatusValues(TArray<float>* NetMaxStatusValues, TArray<float>* NetBaseMaxStatusValues);
	void ClearAllMutationPoints();
	void ClearAllLevelUpPoints(bool* bTamedPoints);
	bool CanLevelUp(enum class EPrimalCharacterStatusValue LevelUpValueType, bool* bCheckExperience);
	bool CanGainLevel();
	void BPSetRecoveryRateStatusValue(enum class EPrimalCharacterStatusValue* ValueType, float NewValue);
	int32 BPModifyMaxLevel(int32* InMaxLevel);
	float BPModifyMaxExperiencePoints(float* InMaxExperiencePoints);
	float BPGetPercentStatusValue(enum class EPrimalCharacterStatusValue* ValueType);
	float BPGetMaxStatusValue(enum class EPrimalCharacterStatusValue* ValueType);
	float BPGetCurrentStatusValue(enum class EPrimalCharacterStatusValue* ValueType);
	void BPDirectSetMaxStatusValue(enum class EPrimalCharacterStatusValue* ValueType, float NewValue);
	void BPDirectSetCurrentStatusValue(enum class EPrimalCharacterStatusValue* ValueType, float NewValue);
	float BPAdjustStatusValueModification(enum class EPrimalCharacterStatusValue* ValueType, float* Amount, class UClass** DamageTypeClass, bool bManualModification);
	bool AddStatusValueModifier(enum class EPrimalCharacterStatusValue* ValueType, float* Amount, float Speed, class AActor* Instigator);
	float AddExperience(bool* bShareWithTribe, enum class EXPType* XPType);
};

// 0x80 (0x1CE0 - 0x1C60)
// Class ShooterGame.PrimalCinematicActor
class APrimalCinematicActor : public APostProcessVolume
{
public:
	class UTextureRenderTarget2D*                RenderTarget;                                      // 0x1C60(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance)
	TArray<struct FCinematicMaterial>            CinematicMaterials;                                // 0x1C68(0x10)(BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TSoftObjectPtr<class UBinkMediaPlayer>       Movie;                                             // 0x1C78(0x30)(ExportObject, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeOffsetSeconds;                                 // 0x1CA8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A4B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UBinkMediaPlayer*                      MovieRef;                                          // 0x1CB0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class ALevelSequenceActor>    FetchedLevelSequence;                              // 0x1CB8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A4C[0x11];                                    // Fixing Size After Last Property  > TateDumper <
	enum class ETextureRenderTargetFormat        RenderTargetFormat;                                // 0x1CD1(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance)
	uint8                                        Pad_3A4D[0xE];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalCinematicActor* GetDefaultObj();

	void TickInternal();
	void Stop();
	void Play();
};

// 0xFA0 (0xFC8 - 0x28)
// Class ShooterGame.PrimalClimbingSettings
class UPrimalClimbingSettings : public UObject
{
public:
	bool                                         bDebug;                                            // 0x28(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAllowInputClimbing;                               // 0x29(0x1)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowSliding;                                     // 0x2A(0x1)(EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A4E[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ArmSwitchAngle;                                    // 0x2C(0x4)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PreFlinchUnclimbableInterval;                      // 0x30(0x4)(Edit, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PostFlinchUnclimbableInterval;                     // 0x34(0x4)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ClimbingWaitAfterQuakeFall;                        // 0x38(0x4)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseExtendedLandTrace;                             // 0x3C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A4F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RootLocationInterpSpeed;                           // 0x40(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        JumpUpVelocity;                                    // 0x44(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        JumpForwardVelocity;                               // 0x48(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        JumpDirectionVelocity;                             // 0x4C(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        JumpCameraTransitionDuration;                      // 0x50(0x4)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ClimbingWaitForJump;                               // 0x54(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ForceReleaseOnImpulseForce;                        // 0x58(0x4)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FClimbingTypeSettings                 TypeSettings[0x4];                                 // 0x5C(0x70)(BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AttachAnchoredTraceRadius;                         // 0xCC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AttachEffectTraceDistanceForward;                  // 0xD0(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AttachEffectTraceDistanceBackward;                 // 0xD4(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinAimDirectionDot;                                // 0xD8(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AimDirectionBias;                                  // 0xDC(0x4)(Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TracePlaneInterpolation;                           // 0xE0(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HangingTracePlaneInterpolation;                    // 0xE4(0x4)(Edit, ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinFloorDirectionDot;                              // 0xE8(0x4)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FallingConsumeDurabilityMultiplier;                // 0xEC(0x4)(ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ImpactNormalOffsetAllowanceDot;                    // 0xF0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MoveTraceDistance;                                 // 0xF4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MoveTraceRadius;                                   // 0xF8(0x4)(Edit, ConstParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HangingMinDotUp;                                   // 0xFC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CeilingDistance;                                   // 0x100(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CeilingTraceRadius;                                // 0x104(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CeilingTraceDistance;                              // 0x108(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinCeilingTraceTime;                               // 0x10C(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WallDistance;                                      // 0x110(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WallTraceRadius;                                   // 0x114(0x4)(Edit, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WallTraceDistance;                                 // 0x118(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinWallTraceTime;                                  // 0x11C(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GroundMaxDotUp;                                    // 0x120(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinFloorDistance;                                  // 0x124(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FloorTraceRadius;                                  // 0x128(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LandMinFloorSpaceDistance;                         // 0x12C(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LandFloorSpaceTraceRadius;                         // 0x130(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FlipMaxNormalDot;                                  // 0x134(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TurnMaxNormalDot;                                  // 0x138(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A51[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FClimbingTransitionParams             Transitions[0x20];                                 // 0x140(0xE00)(ExportObject, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        ClimbAnimPlayRateDistanceScale;                    // 0xF40(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinClimbAnimPlayRate;                              // 0xF44(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxClimbAnimPlayRate;                              // 0xF48(0x4)(EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CameraYawMin;                                      // 0xF4C(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CameraYawMax;                                      // 0xF50(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CameraPitchUp;                                     // 0xF54(0x4)(ConstParm, ExportObject, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CameraPitchDown;                                   // 0xF58(0x4)(Edit, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A52[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               CameraOffsetScale;                                 // 0xF60(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HangingCameraPitchUp;                              // 0xF78(0x4)(BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HangingCameraPitchDown;                            // 0xF7C(0x4)(OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               HangingCameraOffsetScale;                          // 0xF80(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SwitchToFPVDistance;                               // 0xF98(0x4)(ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SwitchToFPVDownDot;                                // 0xF9C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SwitchToFPVTransitionDuration;                     // 0xFA0(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SwitchFromFPVTransitionDuration;                   // 0xFA4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        UpAndOverExtendedUp;                               // 0xFA8(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        UpAndOverExtendedForward;                          // 0xFAC(0x4)(Edit, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HangingFailTraceExtraLength;                       // 0xFB0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HangingFailMinDotUp;                               // 0xFB4(0x4)(Edit, ConstParm, ExportObject, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HangingFailOppositeDirectTraceLength;              // 0xFB8(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HangingFailOppositeDirectTraceRadius;              // 0xFBC(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        InvisibleWallTooCloseRadius;                       // 0xFC0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A53[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalClimbingSettings* GetDefaultObj();

};

// 0x240 (0x268 - 0x28)
// Class ShooterGame.PrimalColorSet
class UPrimalColorSet : public UObject
{
public:
	struct FColorSetDefinition                   ColorSetDefinitions[0x6];                          // 0x28(0x240)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalColorSet* GetDefaultObj();

};

// 0x1B0 (0x568 - 0x3B8)
// Class ShooterGame.PrimalCryopodTooltipWidget
class UPrimalCryopodTooltipWidget : public UTooltipSmartLayoutWidget
{
public:
	class UTexture2D*                            FemaleIcon;                                        // 0x3B8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            MaleIcon;                                          // 0x3C0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          FemaleColor;                                       // 0x3C8(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          MaleColor;                                         // 0x3D8(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                MatingCDString;                                    // 0x3E8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A58[0x170];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalCryopodTooltipWidget* GetDefaultObj();

};

// 0x0 (0x550 - 0x550)
// Class ShooterGame.PrimalDestroyedMeshActor
class APrimalDestroyedMeshActor : public AFadingDestructibleActor
{
public:

	static class UClass* StaticClass();
	static class APrimalDestroyedMeshActor* GetDefaultObj();

};

// 0x58 (0x80 - 0x28)
// Class ShooterGame.PrimalDinoEntry
class UPrimalDinoEntry : public UObject
{
public:
	uint8                                        Pad_3A59[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	class FName                                  DinoNameTag;                                       // 0x50(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                DinoDescriptiveName;                               // 0x58(0x10)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DinoIcon;                                          // 0x68(0x8)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    DinoMaterial;                                      // 0x70(0x8)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRequiresKill;                                     // 0x78(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A5A[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalDinoEntry* GetDefaultObj();

};

// 0x28 (0x1420 - 0x13F8)
// Class ShooterGame.PrimalDinoMeshComponent
class UPrimalDinoMeshComponent : public USkeletalMeshComponent
{
public:
	uint8                                        bUpdateBoundsWhenStationary;                       // 0x13F8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A5B[0x27];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalDinoMeshComponent* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class ShooterGame.PrimalDinoSettings
class UPrimalDinoSettings : public UObject
{
public:
	TArray<struct FDinoFoodEffectivenessMultipliers> FoodEffectivenessMultipliers;                      // 0x28(0x10)(BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDinoFoodEffectivenessMultipliers> ExtraFoodEffectivenessMultipliers;                 // 0x38(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamingAffinityNoFoodDecreasePercentageSpeed;       // 0x48(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A5C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDamageTypeAdjuster>           BaseDamageTypeAdjusters;                           // 0x50(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDamageTypeAdjuster>           ExtraDamageTypeAdjusters;                          // 0x60(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DinoFoodTypeImage;                                 // 0x70(0x8)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                DinoFoodTypeName;                                  // 0x78(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWakingTameDisplayItemName;                        // 0x88(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A5D[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalDinoSettings* GetDefaultObj();

};

// 0x0 (0x10E8 - 0x10E8)
// Class ShooterGame.PrimalDinoStatusComponent
class UPrimalDinoStatusComponent : public UPrimalCharacterStatusComponent
{
public:

	static class UClass* StaticClass();
	static class UPrimalDinoStatusComponent* GetDefaultObj();

};

// 0x230 (0x5E8 - 0x3B8)
// Class ShooterGame.PrimalDinoToolTipWidget
class UPrimalDinoToolTipWidget : public UToolTipWidget
{
public:
	class FString                                DinoNameLabelName;                                 // 0x3B8(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                TamedLabelName;                                    // 0x3C8(0x10)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                GenderLabelName;                                   // 0x3D8(0x10)(BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                InfoLabelName;                                     // 0x3E8(0x10)(Edit, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                InfoLabel2Name;                                    // 0x3F8(0x10)(Edit, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                DinoIconImageName;                                 // 0x408(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DinoUnconsciousPanelName;                          // 0x418(0x8)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DinoTamingPanelName;                               // 0x420(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TorpidityProgressBarName;                          // 0x428(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CustomProgressBarName;                             // 0x430(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TamingProgressBarName;                             // 0x438(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HealthBarName;                                     // 0x440(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  StaminaBarName;                                    // 0x448(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  FoodBarName;                                       // 0x450(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  WeightBarName;                                     // 0x458(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  XPBarName;                                         // 0x460(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  TorpidityBarName;                                  // 0x468(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  OxygenBarName;                                     // 0x470(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  DamageBarName;                                     // 0x478(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SpeedBarName;                                      // 0x480(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowExtendedInfo;                                 // 0x488(0x1)(Edit, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A60[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          FemaleColor;                                       // 0x48C(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          MaleColor;                                         // 0x49C(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          NoGenderColor;                                     // 0x4AC(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A61[0x11C];                                   // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            FoodBarDefaultBackground;                          // 0x5D8(0x8)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FoodBarDefaultForeground;                          // 0x5E0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalDinoToolTipWidget* GetDefaultObj();

};

// 0x268 (0x620 - 0x3B8)
// Class ShooterGame.PrimalEggToolTipWidget
class UPrimalEggToolTipWidget : public UToolTipWidget
{
public:
	struct FLinearColor                          TemperatureColor_Perfect;                          // 0x3B8(0x10)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          TemperatureColor_Boosted;                          // 0x3C8(0x10)(Edit, ConstParm, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          TemperatureColor_Cool;                             // 0x3D8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          TemperatureColor_TooCold;                          // 0x3E8(0x10)(ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          TemperatureColor_Warm;                             // 0x3F8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          TemperatureColor_TooHot;                           // 0x408(0x10)(Edit, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          GenderColor_Female;                                // 0x418(0x10)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          GenderColor_Male;                                  // 0x428(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          GenderColor_Unknown;                               // 0x438(0x10)(Edit, ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GenderIcon_Female;                                 // 0x448(0x8)(Edit, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GenderIcon_Male;                                   // 0x450(0x8)(OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GenderIcon_Unknown;                                // 0x458(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RightColumnWidth;                                  // 0x460(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TemperatureGaugeTotalDegreesToDisplay;             // 0x464(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TemperatureGaugeIndicatorHorizontalOffset;         // 0x468(0x4)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A64[0x1B4];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalEggToolTipWidget* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class ShooterGame.PrimalEngramEntry
class UPrimalEngramEntry : public UObject
{
public:
	uint8                                        Pad_3A66[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        RequiredCharacterLevel;                            // 0x50(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        RequiredEngramPoints;                              // 0x54(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGiveBlueprintToPlayerInventory : 1;               // Mask: 0x1, PropSize: 0x10x58(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanBeManuallyUnlocked : 1;                        // Mask: 0x2, PropSize: 0x10x58(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceIsTekEngram : 1;                             // Mask: 0x4, PropSize: 0x10x58(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2C4 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3A67[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                BluePrintEntry;                                    // 0x60(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                ExtraEngramDescription;                            // 0x68(0x10)(Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FEngramEntries>                EngramRequirementSets;                             // 0x78(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MyEngramIndex;                                     // 0x88(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EEngramGroup                      EngramGroup;                                       // 0x8C(0x1)(Edit, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EEngramCategory                   EngramCategory;                                    // 0x8D(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A68[0x2];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalEngramEntry* GetDefaultObj();

};

// 0x130 (0x5F0 - 0x4C0)
// Class ShooterGame.PrimalFallingTreeActor
class APrimalFallingTreeActor : public ADestructibleBaseActor
{
public:
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x4C0(0x8)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	class UAudioComponent*                       AudioComponent;                                    // 0x4C8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
	struct FTransform                            InitialTransform;                                  // 0x4D0(0x60)(Edit, ExportObject, Net, Parm, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bIsFalling : 1;                                    // Mask: 0x1, PropSize: 0x10x530(0x1)(Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseAudioComponentForImpactSound : 1;              // Mask: 0x2, PropSize: 0x10x530(0x1)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasPlayedImpactSound : 1;                         // Mask: 0x4, PropSize: 0x10x530(0x1)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2C5 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3A6A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FallingProgress;                                   // 0x534(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HarvestSpeed;                                      // 0x538(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A6B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               HarvestDirection;                                  // 0x540(0x18)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentHarvestAngle;                               // 0x558(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HarvestAngleTarget;                                // 0x55C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFadeOutLocation : 1;                              // Mask: 0x1, PropSize: 0x10x560(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFadeOutMaterial : 1;                              // Mask: 0x2, PropSize: 0x10x560(0x1)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2C6 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3A6C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FadeOutDuration;                                   // 0x564(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	struct FVector                               FadeOutLocationOffset;                             // 0x568(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UCurveLinearColor*                     HarvestSwayCurve;                                  // 0x580(0x8)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            HarvestSound;                                      // 0x588(0x8)(Edit, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            GroundImpactSound;                                 // 0x590(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DistanceAlongTreeToSpawnImpactSound;               // 0x598(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A6D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UMaterialInstanceDynamic*>      HarvestMIDs;                                       // 0x5A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UPrimalWindSourceComponent*            WindSourceComponent;                               // 0x5B0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WindSourceSize;                                    // 0x5B8(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A6E[0x34];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalFallingTreeActor* GetDefaultObj();

	float UpdateWindSource();
};

// 0x0 (0x4C8 - 0x4C8)
// Class ShooterGame.PrimalFieldSystemActor
class APrimalFieldSystemActor : public AFieldSystemActor
{
public:

	static class UClass* StaticClass();
	static class APrimalFieldSystemActor* GetDefaultObj();

	enum class EFieldActivationType_New SetActivationType();
	float CE_Trigger();
};

// 0x80 (0x540 - 0x4C0)
// Class ShooterGame.PrimalFoliageSolver
class APrimalFoliageSolver : public AActor
{
public:
	TArray<class UPrimalWindSourceComponent*>    WindSourceComponents;                              // 0x4C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FluidRadiusScale;                                  // 0x4D0(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FluidRadiusBias;                                   // 0x4D4(0x4)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseVolumetricDispatcher;                          // 0x4D8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A8B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MinEvaluationsForOneTimeFoliageInteraction;        // 0x4DC(0x4)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnabled;                                          // 0x4E0(0x1)(Edit, ConstParm, Parm, ZeroConstructor, Transient, EditConst, GlobalConfig)
	uint8                                        Pad_3A8C[0x5F];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalFoliageSolver* GetDefaultObj();

	class UPrimalWindSourceComponent* UnRegisterWindSource();
	class UPrimalWindSourceComponent* RegisterWindSource();
	int32 GetValidSourceCount(enum class EInteractionType Type);
	class FString GetSourceDataId(enum class EInteractionType Type);
	struct FVector4f ApplySimParametersWithValues(struct FVector* Location, struct FVector* ExtraCapsuleLocation, float* InteractionStrength, struct FVector3f* DirectionalRadial, const struct FVector4f& Dir);
	struct FVolumetricDispatch ApplyParametersFromVolumetricDispatch(enum class EInteractionType Type);
	class UPrimalWindSourceComponent* ApplyParametersFromSource();
	float ApplyParameters();
};

// 0x3198 (0x31C0 - 0x28)
// Class ShooterGame.PrimalGameData
class UPrimalGameData : public UObject
{
public:
	uint8                                        Pad_3ABE[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	class FString                                ModName;                                           // 0x58(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                ModDescription;                                    // 0x68(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	struct FPrimalCharacterStatusValueDefinition StatusValueDefinitions[0xC];                       // 0x78(0x180)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FPrimalCharacterStatusStateDefinition StatusStateDefinitions[0xE];                       // 0x1F8(0x4D0)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FPrimalItemStatDefinition             ItemStatDefinitions[0x8];                          // 0x6C8(0xC0)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FPrimalItemDefinition                 ItemTypeDefinitions[0x9];                          // 0x788(0x120)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FPrimalEquipmentDefinition            EquipmentTypeDefinitions[0xC];                     // 0x8A8(0x120)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        MasterItemList;                                    // 0x9C8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPrimalItemQuality>            ItemQualityDefinitions;                            // 0x9D8(0x10)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        EngramBlueprintClasses;                            // 0x9E8(0x10)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AdditionalEngramBlueprintClasses;                  // 0x9F8(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        RemoveEngramBlueprintClasses;                      // 0xA08(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FStatusValueModifierDescription> StatusValueModifierDescriptions;                   // 0xA18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        PlayerSpawnRegions;                                // 0xA28(0x10)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            TutorialDisplaySound;                              // 0xA38(0x8)(OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_StartItemDrag;                               // 0xA40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_StopItemDrag;                                // 0xA48(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PreventGrindingIcon;                               // 0xA50(0x8)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundClass*                           ExplorerNoteAudioSoundClass;                       // 0xA58(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_CancelPlacingStructure;                      // 0xA60(0x8)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ChooseStructureRotation;                     // 0xA68(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_FailPlacingStructure;                        // 0xA70(0x8)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ConfirmPlacingStructure;                     // 0xA78(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_StartPlacingStructure;                       // 0xA80(0x8)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_CorpseDecompose;                             // 0xA88(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ApplyLevelUp;                                // 0xA90(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ApplyLevelPoint;                             // 0xA98(0x8)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_LearnedEngram;                               // 0xAA0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ReconnectToCharacter;                        // 0xAA8(0x8)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_DropAllItems;                                // 0xAB0(0x8)(EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_TransferAllItemsToRemote;                    // 0xAB8(0x8)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_TransferAllItemsFromRemote;                  // 0xAC0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_TransferItemToRemote;                        // 0xAC8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_TransferItemFromRemote;                      // 0xAD0(0x8)(ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_AddItemToSlot;                               // 0xAD8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_RemoveItemFromSlot;                          // 0xAE0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ClearCraftQueue;                             // 0xAE8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_AddToCraftQueue;                             // 0xAF0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_AddToCraftQueueAlt;                          // 0xAF8(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_SetRadioFrequency;                           // 0xB00(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_AddPinToMap;                                 // 0xB08(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_RemovePinFromMap;                            // 0xB10(0x8)(ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ApplyDye;                                    // 0xB18(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ApplyPaint;                                  // 0xB20(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_SetTextGeneric;                              // 0xB28(0x8)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_SplitItemStack;                              // 0xB30(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_MergeItemStack;                              // 0xB38(0x8)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_InputPinDigit;                               // 0xB40(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_PinValidated;                                // 0xB48(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_PinRejected;                                 // 0xB50(0x8)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_TribeWarBegin;                               // 0xB58(0x8)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_TribeWarEnd;                                 // 0xB60(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_DropInventoryItem;                           // 0xB68(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_RefillWaterContainer;                        // 0xB70(0x8)(Edit, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FAppIDItem>                    CoreAppIDItems;                                    // 0xB78(0x10)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FAppIDItem>                    AppIDItems;                                        // 0xB88(0x10)(Edit, ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalEngramEntry*>            EngramBlueprintEntries;                            // 0xB98(0x10)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalDinoEntry*>              DinoEntriesObjects;                                // 0xBA8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UGenericDataListEntry*>         ExplorerNoteEntriesObjects;                        // 0xBB8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UGenericDataListEntry*>         HeadHairStylesEntriesObjects;                      // 0xBC8(0x10)(Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UGenericDataListEntry*>         FacialHairStylesEntriesObjects;                    // 0xBD8(0x10)(BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultMultiUseToolTipWidget;                      // 0xBE8(0x8)(Edit, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultToolTipWidget;                              // 0xBF0(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                DefaultDinoMinimalTooltipWidget;                   // 0xBF8(0x8)(BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultItemToolTipWidget;                          // 0xC00(0x8)(Edit, ConstParm, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                StarterNoteItem;                                   // 0xC08(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        PrimaryResources;                                  // 0xC10(0x10)(Edit, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                GenericDroppedItemTemplate;                        // 0xC20(0x8)(Edit, ConstParm, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    PostProcess_KnockoutBlur;                          // 0xC28(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    AdditionalDeathPostProcessEffect;                  // 0xC30(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UMaterialInterface>> BuffPostProcessEffects;                            // 0xC38(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UMaterialInterface>> AdditionalBuffPostProcessEffects;                  // 0xC48(0x10)(ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FRangedValues>                 EngramPointPurchaseRanges;                         // 0xC58(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                GenericDroppedItemTemplateLowQuality;              // 0xC68(0x8)(ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AC0[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            UnknownIcon;                                       // 0xC80(0x8)(Edit, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    UnknownMaterial;                                   // 0xC88(0x8)(ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            MasterDyeListLUT;                                  // 0xC90(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            WhiteTexture;                                      // 0xC98(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, DuplicateTransient)
	class UTexture2D*                            BlueprintBackground;                               // 0xCA0(0x8)(BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            BabyCuddleIcon;                                    // 0xCA8(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient)
	class UTexture2D*                            ParentDinoIcon;                                    // 0xCB0(0x8)(BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ImprintedRiderIcon;                                // 0xCB8(0x8)(ConstParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            WeaponAccessoryActivatedIcon;                      // 0xCC0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EngramBackground;                                  // 0xCC8(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            VoiceChatIcon;                                     // 0xCD0(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            VoiceChatMutedIcon;                                // 0xCD8(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ItemButtonRecentlySelectedBackground;              // 0xCE0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DinoEntries;                                       // 0xCE8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AdditionalDinoEntries;                             // 0xCF8(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalGeneralArmorDegradationMultiplier;           // 0xD08(0x4)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalSpecificArmorDegradationMultiplier;          // 0xD0C(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalSpecificArmorRatingMultiplier;               // 0xD10(0x4)(Edit, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalGeneralArmorRatingMultiplier;                // 0xD14(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        EnemyFoundationPreventionRadius;                   // 0xD18(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceEnablePhysicsSimulation;                     // 0xD1C(0x1)(ExportObject, Net, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AC6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FColorDefinition>              ColorDefinitions;                                  // 0xD20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class UObject*>                       ExtraResources;                                    // 0xD30(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<class UObject*>                       BaseExtraResources;                                // 0xD40(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UObject>>         BaseExtraResourcesSoft;                            // 0xD50(0x10)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UObject>>         BaseExtraResourcesContainersSoft;                  // 0xD60(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            CombatMusicDay;                                    // 0xD70(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            CombatMusicNight;                                  // 0xD78(0x8)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            CombatMusicDay_Heavy;                              // 0xD80(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            CombatMusicNight_Heavy;                            // 0xD88(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            LevelUpStingerSound;                               // 0xD90(0x8)(BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            TrackMissionSound;                                 // 0xD98(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            UntrackMissionSound;                               // 0xDA0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FPlayerCharacterGenderDefinition      PlayerCharacterGenderDefinitions[0x2];             // 0xDA8(0x1470)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultGameMode;                                   // 0x2218(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	struct FLevelExperienceRamp                  LevelExperienceRamps[0x4];                         // 0x2220(0x40)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLevelExperienceRamp                  SinglePlayerLevelExperienceRamps[0x4];             // 0x2260(0x40)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FNamedTeamDefinition>          NamedTeamDefinitions;                              // 0x22A0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                PlayerLevelEngramPoints;                           // 0x22B0(0x10)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                PlayerLevelEngramPointsSP;                         // 0x22C0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        PreventBuildStructureReasonStrings;                // 0x22D0(0x10)(ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FExplorerNoteAchievement>      ExplorerNoteAchievements;                          // 0x22E0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_NPC;                                         // 0x22F0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_SupplyCrates;                                // 0x2300(0x10)(ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FActiveEventSupplyCrateWeight> Remap_ActiveEventSupplyCrates;                     // 0x2310(0x10)(ConstParm, Net, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_ResourceComponents;                          // 0x2320(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_NPCSpawnEntries;                             // 0x2330(0x10)(Edit, ExportObject, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_Engrams;                                     // 0x2340(0x10)(Edit, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_Items;                                       // 0x2350(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassAddition>                AdditionalStructureEngrams;                        // 0x2360(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FBuffAddition>                 AdditionalDefaultBuffs;                            // 0x2370(0x10)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FAvailableMission>             AvailableMissions;                                 // 0x2380(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ActorToSpawnUponEnemyCoreStructureDeath;           // 0x2390(0x8)(ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> AdditionalStructuresToPlace;                       // 0x2398(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FStructureToBuildAddition>     AdditionalStructuresToBuild;                       // 0x23A8(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FStructureVariantAddition>     AdditionalStructureVariants;                       // 0x23B8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        MasterDyeList;                                     // 0x23C8(0x10)(Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3ACF[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        EnemyCoreStructureDeathActorRadiusBuildCheck;      // 0x23E8(0x4)(Edit, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AD1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DeathDestructionDepositInventoryClass;             // 0x23F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FString                                MainMenuMapOverride;                               // 0x23F8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            MateBoostIcon;                                     // 0x2408(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            SoftTameLimitCryoIcon;                             // 0x2410(0x8)(ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EggBoostIcon;                                      // 0x2418(0x8)(Edit, ConstParm, Net, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            MatingIcon;                                        // 0x2420(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            NearFeedIcon;                                      // 0x2428(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            BuffedIcon;                                        // 0x2430(0x8)(BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TethererdIcon;                                     // 0x2438(0x8)(ExportObject, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                FooterTemplate;                                    // 0x2440(0x8)(ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TribeXPSharePercent;                               // 0x2448(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        OverrideServerPhysXSubsteps;                       // 0x244C(0x4)(Edit, ExportObject, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideServerPhysXSubstepsDeltaTime;              // 0x2450(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bInitialized;                                      // 0x2454(0x1)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3AD5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FPlayerDynamicMaterialFloat>   DefaultDynamicMaterialByteFloats;                  // 0x2458(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPlayerDynamicMaterialVector>  DefaultDynamicMaterialByteVectors;                 // 0x2468(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPlayerDynamicMaterialColors>  DefaultDynamicMaterialByteColors;                  // 0x2478(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AD7[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            Sound_TamedDinos[0x3];                             // 0x24D8(0x18)(Edit, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ItemStartCrafting;                           // 0x24F0(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ItemFinishCrafting;                          // 0x24F8(0x8)(Edit, ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ItemStartRepairing;                          // 0x2500(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ItemFinishRepairing;                         // 0x2508(0x8)(BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                NotifClass;                                        // 0x2510(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                StructureDefaultOverlayToolTipWidget;              // 0x2518(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MeleeHitColorizeStructuresUI;                      // 0x2520(0x8)(ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinPaintDurationConsumption;                       // 0x2528(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxPaintDurationConsumption;                       // 0x252C(0x4)(ConstParm, ExportObject, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinDinoRadiusForPaintConsumption;                  // 0x2530(0x4)(Edit, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDinoRadiusForPaintConsumption;                  // 0x2534(0x4)(ExportObject, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDinoBabySetup>                DinoBabySetups;                                    // 0x2538(0x10)(ConstParm, ExportObject, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDinoBabySetup>                DinoGestationSetups;                               // 0x2548(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SoapItemTemplate;                                  // 0x2558(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            NameTagWildcardAdmin;                              // 0x2560(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            NameTagServerAdmin;                                // 0x2568(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            NameTagTribeAdmin;                                 // 0x2570(0x8)(Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    BadgeGroupsNameTag;                                // 0x2578(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CrossPlayGeneric;                                  // 0x2588(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CrossPlaySteam;                                    // 0x2590(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CrossPlayPS5;                                      // 0x2598(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CrossPlayXSX;                                      // 0x25A0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        AchievementIDs;                                    // 0x25A8(0x10)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3ADA[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<float>                                AdditionalEggWeightsToSpawn;                       // 0x2608(0x10)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AdditionalEggItemsToSpawn;                         // 0x2618(0x10)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                FertilizedAdditionalEggWeightsToSpawn;             // 0x2628(0x10)(Edit, BlueprintVisible, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        FertilizedAdditionalEggItemsToSpawn;               // 0x2638(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemAchievementsName;                              // 0x2648(0x10)(BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ItemAchievementsList;                              // 0x2658(0x10)(Edit, Net, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        GlobalCuddleFoodList;                              // 0x2668(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMultiAchievement>             MultiAchievements;                                 // 0x2678(0x10)(BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            DinoIncrementedImprintingSound;                    // 0x2688(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            HitMarkerCharacterSound;                           // 0x2690(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            HitMarkerStructureSound;                           // 0x2698(0x8)(ConstParm, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UMaterialParameterCollection*          FOVScaleMaterialParamCollection;                   // 0x26A0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FNPCSpawnEntriesContainerAdditions> CoreNPCSpawnEntriesContainerAdditions;             // 0x26A8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FNPCSpawnEntriesContainerAdditions> TheNPCSpawnEntriesContainerAdditions;              // 0x26B8(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    PostProcess_ColorLUT;                              // 0x26C8(0x8)(ConstParm, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultStructureSettings;                          // 0x26D0(0x8)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_DossierUnlocked;                             // 0x26D8(0x8)(Edit, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ItemUseOnItem;                               // 0x26E0(0x8)(ConstParm, BlueprintVisible, ExportObject, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_RemoveItemSkin;                              // 0x26E8(0x8)(Edit, ConstParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_RemoveClipAmmo;                              // 0x26F0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FExplorerNoteEntry>            ExplorerNoteEntries;                               // 0x26F8(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TMap<class FName, struct FExplorerNoteEntry> NamedExplorerNoteEntries;                          // 0x2708(0x50)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TMap<class FName, struct FExplorerNoteEntry> AdditionalNamedExplorerNoteEntries;                // 0x2758(0x50)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FExplorerNoteSpawn>            AdditionalExplorerNoteSpawns;                      // 0x27A8(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AE0[0xA0];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        ExplorerNoteXPGain;                                // 0x2858(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AE1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                ExplorerNoteIntroIDs;                              // 0x2860(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            BuffTypeBackgrounds[0x3];                          // 0x2870(0x18)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            BuffTypeForegrounds[0x3];                          // 0x2888(0x18)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             ExplorerNoteXPBuff;                                // 0x28A0(0x30)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             SpecialExplorerNoteXPBuff;                         // 0x28D0(0x30)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PerMapExplorerNoteLockedIcon;                      // 0x2900(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TamedDinoUnlockedIcon;                             // 0x2908(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TamedDinoLockedIcon;                               // 0x2910(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FUnlockableEmoteEntry>         UnlockableEmotes;                                  // 0x2918(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FEmoteGroup>                   EmoteGroups;                                       // 0x2928(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UAnimMontage>>   AdditionalAnimationsPreventInput;                  // 0x2938(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemappingWeight>         GlobalNPCRandomSpawnClassWeights;                  // 0x2948(0x10)(BlueprintVisible, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DinoOrderIcon;                                     // 0x2958(0x8)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DinoMinimalIcon;                                   // 0x2960(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PlayerMinimalIcon;                                 // 0x2968(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalEmitterSpawnable> DinoOrderEffect_MoveTo;                            // 0x2970(0x30)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalEmitterSpawnable> DinoOrderEffect_AttackTarget;                      // 0x29A0(0x30)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FObjectCorrelation>            AdditionalHumanMaleAnimSequenceOverrides;          // 0x29D0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FObjectCorrelation>            AdditionalHumanFemaleAnimSequenceOverrides;        // 0x29E0(0x10)(Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FObjectCorrelation>            AdditionalHumanMaleAnimMontagesOverrides;          // 0x29F0(0x10)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FObjectCorrelation>            AdditionalHumanFemaleAnimMontagesOverrides;        // 0x2A00(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FOverrideAnimBlueprintEntry>   AdditionalHumanMaleOverrideAnimBlueprints;         // 0x2A10(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FOverrideAnimBlueprintEntry>   AdditionalHumanFemaleOverrideAnimBlueprints;       // 0x2A20(0x10)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ServerExtraWorldSingletonActorClasses;             // 0x2A30(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceServerUseDinoList;                           // 0x2A40(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AE7[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        ExtraStackedGameDataClasses;                       // 0x2A48(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHairStyleDefinition>          HeadHairStyleDefinitions;                          // 0x2A58(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHairStyleDefinition>          FacialHairStyleDefinitions;                        // 0x2A68(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHairStyleDefinition>          EyebrowsDefinitions;                               // 0x2A78(0x10)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint32                                       PlayerMeshMaterialIndex;                           // 0x2A88(0x4)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EyebrowMaskParamName;                              // 0x2A8C(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HairMaskParamName;                                 // 0x2A94(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FacialHairMaskParamName;                           // 0x2A9C(0x8)(Edit, Net, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AEA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHairStyleDefinition                  EyelashesDefinitions;                              // 0x2AA8(0xB8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHairStyleDefinition>          AdditionalHeadHairStyleDefinitions;                // 0x2B60(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHairStyleDefinition>          AdditionalFacialHairStyleDefinitions;              // 0x2B70(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            GenericWaterPostprocessAmbientSound;               // 0x2B80(0x8)(Edit, ConstParm, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                OverridePlayerDataClass;                           // 0x2B88(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          AllDinosAchievementNameTags;                       // 0x2B90(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            GenericArrowPickedUpSound;                         // 0x2BA0(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            AimMagnetismIcon;                                  // 0x2BA8(0x8)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            UnlockIcon;                                        // 0x2BB0(0x8)(Edit, ConstParm, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                WheelFolderColor;                                  // 0x2BB8(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                WheelBackColor;                                    // 0x2BBC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       CorpseLocatorEffect;                               // 0x2BC0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            MaxInventoryIcon;                                  // 0x2BC8(0x8)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ItemSkinIcon;                                      // 0x2BD0(0x8)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<enum class ECollisionChannel>         SkeletalPhysCustomBodyAdditionalIgnores;           // 0x2BD8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ActionWheelClickSound;                             // 0x2BE8(0x8)(Edit, ConstParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ActionWheelSelectSound;                            // 0x2BF0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ActionWheelProgressSound;                          // 0x2BF8(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ActionWheelProgressCompleteSound;                  // 0x2C00(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_GenericBoardPassenger;                       // 0x2C08(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_GenericUnboardPassenger;                     // 0x2C10(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_CraftingTabToggle;                           // 0x2C18(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       LockedToSeatingStructureParticle;                  // 0x2C20(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                GenericBatteryItemClass;                           // 0x2C28(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AEE[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class UPrimalItem>>     GenesisSeasonPassItems;                            // 0x2C80(0x10)(Edit, ConstParm, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultStructureDestroyedMeshActorClass;           // 0x2C90(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DefaultTradableOptions;                            // 0x2C98(0x10)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        CoreTradableOptions;                               // 0x2CA8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AdditionalTradableOptions;                         // 0x2CB8(0x10)(BlueprintVisible, Net, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalBuff>>     AlwaysAllowBuffClasses;                            // 0x2CC8(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FGrinderItemReplacer>          GrinderReplacements;                               // 0x2CD8(0x10)(EditFixedSize, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FInvalidReferenceRedirector>   InvalidReferenceRedirects;                         // 0x2CE8(0x10)(ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FInvalidReferenceRedirector>   AdditionalInvalidReferenceRedirects;               // 0x2CF8(0x10)(Edit, BlueprintReadOnly, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWantsToRunMissions;                               // 0x2D08(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AF1[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                CoreWorldBuffDefinitions;                          // 0x2D10(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, EditConst, InstancedReference, DuplicateTransient)
	TArray<class UClass*>                        AdditionalWorldBuffDefinitions;                    // 0x2D18(0x10)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	class UPrimalWorldBuffData*                  WorldBuffData;                                     // 0x2D28(0x8)(ConstParm, ExportObject, Net, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          PointOfInterest_IndicatorColor_Default;            // 0x2D30(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          PointOfInterest_IndicatorColor_ObjectiveComplete;  // 0x2D40(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          PointOfInterest_ProgressBarColor_TamingAffinity;   // 0x2D50(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PointOfInterest_Icon_TamingInProgress;             // 0x2D60(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PointOfInterest_Icon_TamingComplete;               // 0x2D68(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PointOfInterest_Icon_Player;                       // 0x2D70(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                GlobalUIDataClass_PS5;                             // 0x2D78(0x8)(ConstParm, Net, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                GlobalUIDataClass_XSX;                             // 0x2D80(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                GlobalUIDataClass;                                 // 0x2D88(0x8)(BlueprintVisible, ExportObject, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FWorldDefaultItemSet>          DefaultMapItemSets;                                // 0x2D90(0x10)(ConstParm, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FWorldDefaultItemSet>          AdditionalDefaultMapItemSets;                      // 0x2DA0(0x10)(ConstParm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class AActor>                  PhotoModeClass;                                    // 0x2DB0(0x30)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class AActor>                  OverridePhotoModeClass;                            // 0x2DE0(0x30)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FExtraEggItem>                 ExtraEggItems;                                     // 0x2E10(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FExtraEggItem>                 AdditionalExtraEggItems;                           // 0x2E20(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class UStaticMesh*                           CopySettingsVisualIndicatorMesh;                   // 0x2E30(0x8)(Edit, Net, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    CopySettingsVisualIndicatorMaterial;               // 0x2E38(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSlateColor>                   SubtitleColors;                                    // 0x2E40(0x10)(ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                HUDOverlayGestationTooltip;                        // 0x2E50(0x8)(ExportObject, BlueprintReadOnly, Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> ProfilingDinos;                                    // 0x2E58(0x10)(BlueprintReadOnly, Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ProfilingStructures;                               // 0x2E68(0x10)(Edit, BlueprintVisible, Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UShooterHaptics*                       Haptics;                                           // 0x2E78(0x8)(Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCryopodPersistantBuffs>       CryopodPersistantBuffsMap;                         // 0x2E80(0x10)(ConstParm, BlueprintReadOnly, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FConfigSupplyCrateItemsOverride> CoreOverrideSupplyCrateItems;                      // 0x2E90(0x10)(Edit, ConstParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            PreRespawnUISound;                                 // 0x2EA0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            PostRespawnUISound;                                // 0x2EA8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AF9[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSubtitleStringMap>            BookendSubtitles;                                  // 0x2EC0(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UObject>>        DLCStructsAndEnums;                                // 0x2ED0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDinoAbilities>                AbilityDescriptions;                               // 0x2EE0(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AFA[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        DinoTrackFilterOptions;                            // 0x2F40(0x10)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        CustomDinoTrackFilterOptions;                      // 0x2F50(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class UModDataAsset*                         AdditionalModDataAsset;                            // 0x2F60(0x8)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPlayerConfigVoiceCollectionInfo> PlayerConfigVoiceCollectionOptions;                // 0x2F68(0x10)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPlayerConfigVoiceCollectionInfo> CustomPlayerConfigVoiceCollectionOptions;          // 0x2F78(0x10)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPlayerBoneBodyPreset>         BodyBonePresetOptions;                             // 0x2F88(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPlayerBoneBodyPreset>         CustomBodyBonePresetOptions;                       // 0x2F98(0x10)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ExperienceIcon;                                    // 0x2FA8(0x8)(Net, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUsesCustomPlayerData;                             // 0x2FB0(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDoNotConsumeDefaultARKInputs;                     // 0x2FB1(0x1)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AFD[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class UObject>                 CDOLiveUpdatesDataClass;                           // 0x2FB8(0x30)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                VolumetricDispatcherClass;                         // 0x2FE8(0x8)(Edit, ExportObject, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultDestructionInstanceActorWithGeoCollection;  // 0x2FF0(0x8)(BlueprintReadOnly, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class UDamageType>             CheatDestroyFoliageDamageType;                     // 0x2FF8(0x30)(OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultFieldSystemActorClass;                      // 0x3028(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultWaterNavArea;                               // 0x3030(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultStructureNavArea;                           // 0x3038(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class UDataTable*                            ItemSpawnBlacklistDataTable;                       // 0x3040(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       SeamlessTransitionMapOverride;                     // 0x3048(0x20)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventPhotoMode;                                 // 0x3068(0x1)(Edit, ConstParm, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowAdditionalLocalPlayersWithoutFirstPlayerPawn; // 0x3069(0x1)(Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B01[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxLocalPlayers;                                   // 0x306C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableSplitscreen;                               // 0x3070(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B04[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class APrimalBuff>             CarriedNotifyBuff;                                 // 0x3078(0x30)(ConstParm, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	TSoftObjectPtr<class UPrimalWordFilter>      MainNameWordList;                                  // 0x30A8(0x30)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ModIcon;                                           // 0x30D8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        RadialSelecterNumDivisionsOverride;                // 0x30E0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideCorpseLifespanFixed;                       // 0x30E4(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventCharacterCreationSpawnMap : 1;             // Mask: 0x1, PropSize: 0x10x30E8(0x1)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventCharacterCreationHeightSlider : 1;         // Mask: 0x2, PropSize: 0x10x30E8(0x1)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2C8 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3B05[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DinoCountGameModeMultiply;                         // 0x30EC(0x4)(BlueprintVisible, Net, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsSOTFGameMode : 1;                               // Mask: 0x1, PropSize: 0x10x30F0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseDisablePaintingsUserSetting : 1;               // Mask: 0x2, PropSize: 0x10x30F0(0x1)(ConstParm, ExportObject, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceInfiniteWeight : 1;                          // Mask: 0x4, PropSize: 0x10x30F0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAbilityDescriptions : 1;                       // Mask: 0x8, PropSize: 0x10x30F0(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDinoConsumeRunningStaminaWithPC : 1;              // Mask: 0x10, PropSize: 0x10x30F0(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableFoodConsumption : 1;                       // Mask: 0x20, PropSize: 0x10x30F0(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreSwimmingStaminaRecoveryRate : 1;            // Mask: 0x40, PropSize: 0x10x30F0(0x1)(ConstParm, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCameraPPAllowNonShooterChar : 1;                  // Mask: 0x80, PropSize: 0x10x30F0(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableHarvesting : 1;                            // Mask: 0x1, PropSize: 0x10x30F1(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRunningWhileCrafting : 1;                    // Mask: 0x2, PropSize: 0x10x30F1(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDinoCheckControlledByPlayerBuff : 1;              // Mask: 0x4, PropSize: 0x10x30F1(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRidingEquipsDefaultWeapon : 1;                    // Mask: 0x8, PropSize: 0x10x30F1(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableFogOfWar : 1;                              // Mask: 0x10, PropSize: 0x10x30F1(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowForceAttackUnconsciousTarget : 1;            // Mask: 0x20, PropSize: 0x10x30F1(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bStopAttackingUnconsciousTarget : 1;               // Mask: 0x40, PropSize: 0x10x30F1(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableTamedDinoStasis : 1;                       // Mask: 0x80, PropSize: 0x10x30F1(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOfficialServerAllowDinoPossesion : 1;             // Mask: 0x1, PropSize: 0x10x30F2(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceStepDamageOnlyFoliage : 1;                   // Mask: 0x2, PropSize: 0x10x30F2(0x1)(BlueprintVisible, ExportObject, Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableWakingTame : 1;                            // Mask: 0x4, PropSize: 0x10x30F2(0x1)(ConstParm, Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontForceFPVForPCViewTarget : 1;                  // Mask: 0x8, PropSize: 0x10x30F2(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideRepairOnDinoToolTip : 1;                      // Mask: 0x10, PropSize: 0x10x30F2(0x1)(ConstParm, BlueprintVisible, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableMUEntriesForSOTF : 1;                      // Mask: 0x20, PropSize: 0x10x30F2(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableTribeManager : 1;                          // Mask: 0x40, PropSize: 0x10x30F2(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowJumpingWhileCrafting : 1;                    // Mask: 0x80, PropSize: 0x10x30F2(0x1)(Net, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDinoKillVictimItemCollection : 1;          // Mask: 0x1, PropSize: 0x10x30F3(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSOTFInputHandling : 1;                         // Mask: 0x2, PropSize: 0x10x30F3(0x1)(Edit, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSOTFHUDHandling : 1;                           // Mask: 0x4, PropSize: 0x10x30F3(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableItemAddedRemovedNotifications : 1;         // Mask: 0x8, PropSize: 0x10x30F3(0x1)(ConstParm, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableCharacterGetCustomTooltip : 1;              // Mask: 0x10, PropSize: 0x10x30F3(0x1)(Edit, BlueprintReadOnly, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyAllowGlobalChatInLobby : 1;                   // Mask: 0x20, PropSize: 0x10x30F3(0x1)(ConstParm, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableUnderMeshChecks : 1;                       // Mask: 0x40, PropSize: 0x10x30F3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSameTeamAlwaysRelevant : 1;                       // Mask: 0x80, PropSize: 0x10x30F3(0x1)(ExportObject, Net, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSOTFFloatingDamage : 1;                        // Mask: 0x1, PropSize: 0x10x30F4(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableCanMoveThroughActor : 1;                    // Mask: 0x2, PropSize: 0x10x30F4(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableDefaultWeaponEquipOnEmptySlot : 1;         // Mask: 0x4, PropSize: 0x10x30F4(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableWildDinoInventoryDrop : 1;                 // Mask: 0x8, PropSize: 0x10x30F4(0x1)(ConstParm, ExportObject, Net, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableWildBabySpawns : 1;                        // Mask: 0x10, PropSize: 0x10x30F4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2C9 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3B0D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        GlobalHarvestHealthMultiplierOverride;             // 0x30F8(0x4)(ConstParm, ExportObject, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B0F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FCustomCosmeticModObjectSkinEntry> ModCustomCosmeticEntries;                          // 0x3100(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TMap<int64, struct FCustomCosmeticModSkin>   LoadedCustomCosmeticSkins;                         // 0x3110(0x50)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B10[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                OverrideUICustomOverlayClass;                      // 0x31B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalGameData* GetDefaultObj();

	float TickedWorld(class UWorld** TheWorld);
	void SaveGameData();
	bool LocalIsPerMapExplorerNoteUnlocked();
	bool LocalIsGlobalExplorerNoteUnlocked();
	void LoadedWorld(class UWorld** TheWorld);
	float GetXPMax();
	struct FPrimalCharacterStatusStateDefinition GetStatusStateDefinitions();
	class UClass* GetRedirectedClassFromRedirector();
	class UClass* GetRedirectedClass(const class FString& Key, class UObject** WorldContextObject);
	TArray<struct FDinoAncestorsEntry> GetNonBPDinoAncestorsFromBP();
	int32 GetNamedExplorerNoteIndex();
	float GetLevelXP();
	int32 GetLevelMax();
	struct FLevelExperienceRamp GetLevelExperienceRamp();
	int32 GetIndexDynamicMatBytesByName(class FName* Name);
	class USoundBase* GetGenericCombatMusic(class APrimalCharacter** ForCharacter);
	class FName GetExplorerNoteName();
	class FString GetExplorerNoteDescription();
	class UClass* GetDinoEntry();
	struct FLinearColor GetColorForDefinition();
	TArray<class UClass*> GetBuffsForBitmask();
	TArray<struct FDinoAncestorsEntryBlueprint> GetBPDinoAncestorsFromNonBP();
	int32 GetBitmaskForBuffs();
	bool GetAllAbilitiesForDino(class FName* DinoTag, TArray<struct FDinoAbilityInfo>* AbilityInfos);
	bool GetAbilityForInputAction(class FName* DinoTag);
	bool BPPreventAddingLocalPlayer(class UWorld** ForWorld);
	class UPrimalGameData* BPMergeModGameData();
	void BPInitializeGameData();
	int32 BPGetItemQualityIndex();
	class UPrimalGlobalUIData* BPGetGlobalUIData();
	class UPrimalGameData* BPGetGameData();
	class FString ArkChangeUIPlatform();
};

// 0x360 (0x390 - 0x30)
// Class ShooterGame.PrimalGameSettingsData
class UPrimalGameSettingsData : public UPrimaryDataAsset
{
public:
	bool                                         IsBaseBP;                                          // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B1D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DifficultyOffset;                                  // 0x34(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        NewMaxStructuresInRange;                           // 0x38(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        DayCycleSpeedScale;                                // 0x3C(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        DayTimeSpeedScale;                                 // 0x40(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        NightTimeSpeedScale;                               // 0x44(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, SubobjectReference)
	bool                                         OverrideStartTime;                                 // 0x48(0x1)(Edit, ConstParm, ExportObject, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B1F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        StartTimeHour;                                     // 0x4C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DinoDamageMultiplier;                              // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        PlayerDamageMultiplier;                            // 0x54(0x4)(BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        StructureDamageMultiplier;                         // 0x58(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        PlayerResistanceMultiplier;                        // 0x5C(0x4)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        DinoResistanceMultiplier;                          // 0x60(0x4)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        StructureResistanceMultiplier;                     // 0x64(0x4)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        XPMultiplier;                                      // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        ListenServerTetherDistanceMultiplier;              // 0x6C(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HarvestAmountMultiplier;                           // 0x70(0x4)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        TamingSpeedMultiplier;                             // 0x74(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        PlayerCharacterWaterDrainMultiplier;               // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        PlayerCharacterFoodDrainMultiplier;                // 0x7C(0x4)(ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        DinoCharacterFoodDrainMultiplier;                  // 0x80(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        PlayerCharacterStaminaDrainMultiplier;             // 0x84(0x4)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        DinoCharacterStaminaDrainMultiplier;               // 0x88(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        PlayerCharacterHealthRecoveryMultiplier;           // 0x8C(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        DinoCharacterHealthRecoveryMultiplier;             // 0x90(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        DinoCountMultiplier;                               // 0x94(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        HarvestHealthMultiplier;                           // 0x98(0x4)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        PvEStructureDecayPeriodMultiplier;                 // 0x9C(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        ResourcesRespawnPeriodMultiplier;                  // 0xA0(0x4)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_Health;                     // 0xA4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_Stamina;                    // 0xA8(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_Torpidity;                  // 0xAC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_Oxygen;                     // 0xB0(0x4)(ConstParm, ExportObject, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_Food;                       // 0xB4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_Water;                      // 0xB8(0x4)(BlueprintVisible, ExportObject, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_Temperature;                // 0xBC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_Weight;                     // 0xC0(0x4)(ConstParm, ExportObject, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_Damage;                     // 0xC4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_Speed;                      // 0xC8(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_TemperatureFortitude;       // 0xCC(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_Health;                  // 0xD0(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_Stamina;                 // 0xD4(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_Torpidity;               // 0xD8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_Oxygen;                  // 0xDC(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_Food;                    // 0xE0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_Water;                   // 0xE4(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_Temperature;             // 0xE8(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_Weight;                  // 0xEC(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_Damage;                  // 0xF0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_Speed;                   // 0xF4(0x4)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_TemperatureFortitude;    // 0xF8(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_Health;                  // 0xFC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_Stamina;                 // 0x100(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_Torpidity;               // 0x104(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_Oxygen;                  // 0x108(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_Food;                    // 0x10C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_Water;                   // 0x110(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_Temperature;             // 0x114(0x4)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_Weight;                  // 0x118(0x4)(Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_Damage;                  // 0x11C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_Speed;                   // 0x120(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_TemperatureFortitude;    // 0x124(0x4)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_Health;                      // 0x128(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_Stamina;                     // 0x12C(0x4)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_Torpidity;                   // 0x130(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_Oxygen;                      // 0x134(0x4)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_Food;                        // 0x138(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_Water;                       // 0x13C(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_Temperature;                 // 0x140(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_Weight;                      // 0x144(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_Damage;                      // 0x148(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_Speed;                       // 0x14C(0x4)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_TemperatureFortitude;        // 0x150(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_Health;                        // 0x154(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_Stamina;                       // 0x158(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_Torpidity;                     // 0x15C(0x4)(ExportObject, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_Oxygen;                        // 0x160(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_Food;                          // 0x164(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_Water;                         // 0x168(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_Temperature;                   // 0x16C(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_Weight;                        // 0x170(0x4)(Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_Damage;                        // 0x174(0x4)(ConstParm, BlueprintReadOnly, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_Speed;                         // 0x178(0x4)(BlueprintVisible, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_TemperatureFortitude;          // 0x17C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalSpoilingTimeMultiplier;                      // 0x180(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GlobalItemDecompositionTimeMultiplier;             // 0x184(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GlobalCorpseDecompositionTimeMultiplier;           // 0x188(0x4)(ConstParm, ExportObject, Net, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PvPZoneStructureDamageMultiplier;                  // 0x18C(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        StructureDamageRepairCooldown;                     // 0x190(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalCheckPeriod;             // 0x194(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalMultiplier;              // 0x198(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalBaseAmount;              // 0x19C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ResourceNoReplenishRadiusPlayers;                  // 0x1A0(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ResourceNoReplenishRadiusStructures;               // 0x1A4(0x4)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CropGrowthSpeedMultiplier;                         // 0x1A8(0x4)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LayEggIntervalMultiplier;                          // 0x1AC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PoopIntervalMultiplier;                            // 0x1B0(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CropDecaySpeedMultiplier;                          // 0x1B4(0x4)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MatingIntervalMultiplier;                          // 0x1B8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        EggHatchSpeedMultiplier;                           // 0x1BC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BabyMatureSpeedMultiplier;                         // 0x1C0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BabyFoodConsumptionSpeedMultiplier;                // 0x1C4(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DinoTurretDamageMultiplier;                        // 0x1C8(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DinoHarvestingDamageMultiplier;                    // 0x1CC(0x4)(ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PlayerHarvestingDamageMultiplier;                  // 0x1D0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CustomRecipeEffectivenessMultiplier;               // 0x1D4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CustomRecipeSkillMultiplier;                       // 0x1D8(0x4)(ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AutoPvEStartTimeSeconds;                           // 0x1DC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AutoPvEStopTimeSeconds;                            // 0x1E0(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PvEDinoDecayPeriodMultiplier;                      // 0x1E4(0x4)(BlueprintReadOnly, Parm, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        StructurePreventResourceRadiusMultiplier;          // 0x1E8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyImprintingStatScaleMultiplier;                 // 0x1EC(0x4)(ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BabyCuddleIntervalMultiplier;                      // 0x1F0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BabyCuddleGracePeriodMultiplier;                   // 0x1F4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BabyCuddleLoseImprintQualitySpeedMultiplier;       // 0x1F8(0x4)(Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        KillXPMultiplier;                                  // 0x1FC(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HarvestXPMultiplier;                               // 0x200(0x4)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CraftXPMultiplier;                                 // 0x204(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GenericXPMultiplier;                               // 0x208(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SpecialXPMultiplier;                               // 0x20C(0x4)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ExplorerNoteXPMultiplier;                          // 0x210(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BossKillXPMultiplier;                              // 0x214(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AlphaKillXPMultiplier;                             // 0x218(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        WildKillXPMultiplier;                              // 0x21C(0x4)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CaveKillXPMultiplier;                              // 0x220(0x4)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TamedKillXPMultiplier;                             // 0x224(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        UnclaimedKillXPMultiplier;                         // 0x228(0x4)(Edit, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RaidDinoCharacterFoodDrainMultiplier;              // 0x22C(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PhotoModeRangeLimit;                               // 0x230(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SupplyCrateLootQualityMultiplier;                  // 0x234(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CraftingSkillBonusMultiplier;                      // 0x238(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FishingLootQualityMultiplier;                      // 0x23C(0x4)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FuelConsumptionIntervalMultiplier;                 // 0x240(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreventOfflinePvPInterval;                         // 0x244(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerPlatformMaxStructuresMultiplier;                // 0x248(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        WirelessCraftingRangeOverride;                     // 0x24C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         GlobalVoiceChat;                                   // 0x250(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ProximityChat;                                     // 0x251(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         NoTributeDownloads;                                // 0x252(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         AllowThirdPersonPlayer;                            // 0x253(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         AlwaysNotifyPlayerLeft;                            // 0x254(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         DontAlwaysNotifyPlayerJoined;                      // 0x255(0x1)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ServerHardcore;                                    // 0x256(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ServerPVE;                                         // 0x257(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ServerCrosshair;                                   // 0x258(0x1)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ServerForceNoHUD;                                  // 0x259(0x1)(ConstParm, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ShowMapPlayerLocation;                             // 0x25A(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         EnablePvPGamma;                                    // 0x25B(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         DisableStructureDecayPvE;                          // 0x25C(0x1)(Edit, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         AllowFlyerCarryPvE;                                // 0x25D(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIncreasePvPRespawnInterval;                       // 0x25E(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAutoPvETimer;                                     // 0x25F(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAutoPvEUseSystemTime;                             // 0x260(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableFriendlyFire;                              // 0x261(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bFlyerPlatformAllowUnalignedDinoBasing;            // 0x262(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableLootCrates;                                // 0x263(0x1)(Edit, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowCustomRecipes;                               // 0x264(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPassiveDefensesDamageRiderlessDinos;              // 0x265(0x1)(Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPvEAllowTribeWar;                                 // 0x266(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPvEAllowTribeWarCancel;                           // 0x267(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         MaxDifficulty;                                     // 0x268(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseSingleplayerSettings;                          // 0x269(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseCorpseLocator;                                 // 0x26A(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableStructurePlacementCollision;               // 0x26B(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowPlatformSaddleMultiFloors;                   // 0x26C(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowUnlimitedRespecs;                            // 0x26D(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableDinoTaming;                                // 0x26E(0x1)(Edit, BlueprintReadOnly, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableDinoRiding;                                // 0x26F(0x1)(Edit, ConstParm, BlueprintVisible, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShowCreativeMode;                                 // 0x270(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowSpeedLeveling;                               // 0x271(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowFlyerSpeedLeveling;                          // 0x272(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         AllowHideDamageSourceFromLogs;                     // 0x273(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         RandomSupplyCratePoints;                           // 0x274(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         DisableWeatherFog;                                 // 0x275(0x1)(Edit, BlueprintVisible, Net, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHardLimitTurretsInRange;                          // 0x276(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         OnlyAllowSpecifiedEngrams;                         // 0x277(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         PreventDownloadSurvivors;                          // 0x278(0x1)(ConstParm, ExportObject, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         PreventDownloadItems;                              // 0x279(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         PreventDownloadDinos;                              // 0x27A(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         DisablePvEGamma;                                   // 0x27B(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         DisableDinoDecayPvE;                               // 0x27C(0x1)(Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         AdminLogging;                                      // 0x27D(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         AllowCaveBuildingPvE;                              // 0x27E(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ForceAllowCaveFlyers;                              // 0x27F(0x1)(Edit, ConstParm, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         PreventOfflinePvP;                                 // 0x280(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         PvPDinoDecay;                                      // 0x281(0x1)(ConstParm, BlueprintReadOnly, Net, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         OverrideStructurePlatformPrevention;               // 0x282(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         AllowAnyoneBabyImprintCuddle;                      // 0x283(0x1)(BlueprintReadOnly, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         DisableImprintDinoBuff;                            // 0x284(0x1)(BlueprintVisible, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShowFloatingDamageText;                            // 0x285(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         PreventDiseases;                                   // 0x286(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         NonPermanentDiseases;                              // 0x287(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         EnableExtraStructurePreventionVolumes;             // 0x288(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         PreventTribeAlliances;                             // 0x289(0x1)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         AllowRaidDinoFeeding;                              // 0x28A(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCrafting;                          // 0x28B(0x1)(Edit, ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCraftingForDinos;                  // 0x28C(0x1)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCraftingForPlayers;                // 0x28D(0x1)(Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCraftingForStructures;             // 0x28E(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B3F[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        OverrideMaxExperiencePointsPlayer;                 // 0x290(0x4)(ConstParm, Net, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        OverrideMaxExperiencePointsDino;                   // 0x294(0x4)(Edit, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxNumberOfPlayersInTribe;                         // 0x298(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisablePhotoMode;                                 // 0x29C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B41[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TMap<class FString, float>                   DefaultFloatMap;                                   // 0x2A0(0x50)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TMap<class FString, int32>                   DefaultIntMap;                                     // 0x2F0(0x50)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TMap<class FString, bool>                    DefaultBoolMap;                                    // 0x340(0x50)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalGameSettingsData* GetDefaultObj();

};

// 0x388 (0x3B0 - 0x28)
// Class ShooterGame.PrimalGlobals
class UPrimalGlobals : public UObject
{
public:
	class UPrimalGameData*                       PrimalGameData;                                    // 0x28(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, GlobalConfig)
	class UPrimalGameData*                       PrimalGameDataOverride;                            // 0x30(0x8)(Edit, ConstParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UPrimalGameData*                       PassivePrimalGameData;                             // 0x38(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultReplicationGraph;                           // 0x40(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class UPrimalGameData>         PrimalGameDataAsset;                               // 0x48(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UObject>>         PrimalGameDataAssetExtended;                       // 0x78(0x10)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UPrimalAssets*                         Assets;                                            // 0x88(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class UClass*                                RagdollKinematicActorClass;                        // 0x90(0x8)(ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultHarvestTreeClass;                           // 0x98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultHarvestBushClass;                           // 0xA0(0x8)(ExportObject, Net, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                GlobalGenericConfirmationDialog;                   // 0xA8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UObject*>                       ExtraResources;                                    // 0xB0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowSingleplayer;                                // 0xC0(0x1)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowNonDedicatedHost;                            // 0xC1(0x1)(Edit, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B4D[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        UIOnlyShowMapFileNames;                            // 0xC8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        UIOnlyShowModIDs;                                  // 0xD8(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTotalConversionShowUnofficialServers;             // 0xE8(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B4F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                CreditString;                                      // 0xF0(0x10)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          AlphaMissionColor;                                 // 0x100(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          BetaMissionColor;                                  // 0x110(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          GammaMissionColor;                                 // 0x120(0x10)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          MissionCompleteMultiUseWheelTextColor;             // 0x130(0x10)(Net, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UFont*                                 BigFont_Offline;                                   // 0x140(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UFont*                                 NormalFont_Offline;                                // 0x148(0x8)(Edit, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UFont*                                 SmallFont_Offline;                                 // 0x150(0x8)(Edit, ConstParm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UFont>>          OfflineFontArray;                                  // 0x158(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SpawnMenuUITemplate;                               // 0x168(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                CustomOverlayClass;                                // 0x170(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class USoundClass*>                   CoreSoundClasses;                                  // 0x178(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundClass*                           PS5GamepadSoundClass;                              // 0x188(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundClass*                           PS5GamepadHandsSoundClass;                         // 0x190(0x8)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundSubmix*                          PS5GamepadSubmix;                                  // 0x198(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, DuplicateTransient)
	class UMaterialInterface*                    DefaultRenderTargetMaterial;                       // 0x1A0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTriggerEffectLibrary*                 TriggerEffectLibrary;                              // 0x1A8(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig)
	uint8                                        Pad_3B51[0x110];                                   // Fixing Size After Last Property  > TateDumper <
	class UMaterialInstanceConstant*             VertexViz;                                         // 0x2C0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FOpenColorIODisplayConfiguration      DefaultOpenColorIODisplayConfiguration;            // 0x2C8(0xA0)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FCachedDBAccessor                     CachedDBs;                                         // 0x368(0x40)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3B53[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalGlobals* GetDefaultObj();

	double Subtract_DoubleDouble();
	void OnConfirmationDialogClosed(bool* bAccept);
	bool IsAudibleSimple(struct FVector* Location);
	class AShooterPlayerCameraManager* GetShooterPlayerCameraManager();
	class ADayCycleManager* GetDayCycleManager();
	class UWorld* FlushLevelStreamingOnNextCameraUpdate();
	void FinishedLoadingGameMedia();
	bool EqualEqual_DoubleDouble();
	double Conv_FloatToDouble(float InFloat);
	float Conv_DoubleToFloat(double* InDouble);
};

// 0x0 (0x80 - 0x80)
// Class ShooterGame.PrimalExportAssetRegistryCommandlet
class UPrimalExportAssetRegistryCommandlet : public UCommandlet
{
public:

	static class UClass* StaticClass();
	static class UPrimalExportAssetRegistryCommandlet* GetDefaultObj();

};

// 0x100 (0x128 - 0x28)
// Class ShooterGame.PrimalGlobalUIData
class UPrimalGlobalUIData : public UObject
{
public:
	struct FLinearColor                          StatusColorGood;                                   // 0x28(0x10)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          StatusColorWarning;                                // 0x38(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          StatusColorBad;                                    // 0x48(0x10)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RightMouseButtonIcon;                              // 0x58(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            LeftMouseButtonIcon;                               // 0x60(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GamepadLeftBumper;                                 // 0x68(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GamepadRightBumper;                                // 0x70(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            LeftTriggerIcon;                                   // 0x78(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RightTriggerIcon;                                  // 0x80(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GamepadFaceButtonBottom;                           // 0x88(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GamepadFaceButtonTop;                              // 0x90(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GamepadFaceButtonLeft;                             // 0x98(0x8)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GamepadFaceButtonRight;                            // 0xA0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DPadUpIcon;                                        // 0xA8(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DPadGenericIcon;                                   // 0xB0(0x8)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DPadDownIcon;                                      // 0xB8(0x8)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DPadLeftIcon;                                      // 0xC0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DPadRightIcon;                                     // 0xC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RightThumbstickIcon;                               // 0xD0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            LeftThumbstickIcon;                                // 0xD8(0x8)(Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            SpecialLeftIcon;                                   // 0xE0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            SpecialRightIcon;                                  // 0xE8(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            MutagenIcon;                                       // 0xF0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DinoDot;                                           // 0xF8(0x8)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MutagenGoodToGreatThreshold;                       // 0x100(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          MutagenGoodColor;                                  // 0x104(0x10)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          MutagenGreatColor;                                 // 0x114(0x10)(Net, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B58[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalGlobalUIData* GetDefaultObj();

	class UTexture2D* GetIconForKeyName();
};

// 0x158 (0x210 - 0xB8)
// Class ShooterGame.PrimalHarvestingComponent
class UPrimalHarvestingComponent : public UActorComponent
{
public:
	uint8                                        Pad_3B62[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FHarvestResourceEntry>         HarvestResourceEntries;                            // 0xD0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHarvestResourceEntry>         BaseHarvestResourceEntries;                        // 0xE0(0x10)(BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDamageHarvestingEntry>        HarvestDamageTypeEntries;                          // 0xF0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxHarvestHealth;                                  // 0x100(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3B63[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        HarvestHealthGiveResourceInterval;                 // 0x108(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentHarvestHealth;                              // 0x10C(0x4)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsUnharvestable;                                  // 0x110(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3B65[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bSetOwnerHealthToHarvestHealth : 1;                // Mask: 0x1, PropSize: 0x10x114(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsableHarvesting : 1;                             // Mask: 0x2, PropSize: 0x10x114(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowForcedRepopulation : 1;                      // Mask: 0x4, PropSize: 0x10x114(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowHarvestHealthScaling : 1;                    // Mask: 0x8, PropSize: 0x10x114(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsableAllowHarvestHealthScaling : 1;              // Mask: 0x10, PropSize: 0x10x114(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNonBlockingUsableHarvesting : 1;                  // Mask: 0x20, PropSize: 0x10x114(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClampResourceHarvestDamage : 1;                   // Mask: 0x40, PropSize: 0x10x114(0x1)(Edit, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDefaultHarvestingComponent : 1;                 // Mask: 0x80, PropSize: 0x10x114(0x1)(Edit, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsSingleUnitHarvest : 1;                          // Mask: 0x1, PropSize: 0x10x115(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAssignedToTribeHarvestOnly : 1;                   // Mask: 0x2, PropSize: 0x10x115(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPRecieveComponentDamage : 1;                  // Mask: 0x4, PropSize: 0x10x115(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnforceSingleInstantHarvest : 1;                  // Mask: 0x8, PropSize: 0x10x115(0x1)(Edit, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2D8 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3B6B[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        AssignedToTribeID;                                 // 0x118(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B6D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            HarvestDestructionSound;                           // 0x120(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        UseHarvestDamageAmount;                            // 0x128(0x4)(ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B6F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                UseHarvestDamageType;                              // 0x130(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                DescriptiveName;                                   // 0x138(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                UseHarvestString;                                  // 0x148(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        UsableHarvestSphereRadius;                         // 0x158(0x4)(ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldReplenish;                                   // 0x15C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B70[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinPlayerDistanceReplenishing;                     // 0x160(0x4)(Edit, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinStructureDistanceReplenishing;                  // 0x164(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinNonCoreStructureDistanceReplenishing;           // 0x168(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseMinTimeAfterDepletionReplenishing;             // 0x16C(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseMaxTimeAfterDepletionReplenishing;             // 0x170(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ExhaustedDepletionTimeInterval;                    // 0x174(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ExhaustedDepletionPower;                           // 0x178(0x4)(ConstParm, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ExhaustedDepletionEffectScale;                     // 0x17C(0x4)(ConstParm, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ReduceExhaustedDepletionSpeed;                     // 0x180(0x4)(ConstParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AutoReplenishInterval;                             // 0x184(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AutoReplenishPercent;                              // 0x188(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DamageInstigatorAmount;                            // 0x18C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        GiveItemEntriesMin;                                // 0x190(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        GiveItemEntriesMax;                                // 0x194(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedDinoHarvestGiveHealthMultiplier;              // 0x198(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B75[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnItemHarvested;                                   // 0x1B0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoHarvestGiveHealthAmount;                       // 0x1C0(0x4)(Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoHarvestGiveHealthSpeed;                        // 0x1C4(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        DinoHarvestGiveHealthDescriptionIndex;             // 0x1C8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumOfPerInstanceCustomDataValues;                  // 0x1CC(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B77[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        ForceAllowMeleeHarvestingOverrides;                // 0x1D8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HarvestingPriority;                                // 0x1E8(0x4)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B78[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FComponentAttachmentEntry>     AdditionalComponentAttachments;                    // 0x1F0(0x10)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FComponentAttachmentEntry>     AdditionalComponentAttachmentsDedicated;           // 0x200(0x10)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalHarvestingComponent* GetDefaultObj();

	struct FVector DealDirectHarvestPointDamage(class APlayerController** ForPC, float* DamageAmount, class UClass** DamageTypeClass, struct FHitResult* HitResult);
	float BPRecieveComponentDamage(struct FDamageEvent* DamageEvent, class AController** EventInstigator, class AActor* DamageCauser);
	int32 BPCustomHarvestResource(class UClass** DamageTypeClass, class AActor* ToActor);
};

// 0x5D0 (0x688 - 0xB8)
// Class ShooterGame.PrimalInventoryComponent
class UPrimalInventoryComponent : public UActorComponent
{
public:
	uint8                                        Pad_3D02[0x40];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class AShooterPlayerController*>      RemoteViewingInventoryPlayerControllers;           // 0xF8(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalItem*>                   InventoryItems;                                    // 0x108(0x10)(Edit, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalItem*>                   EquippedItems;                                     // 0x118(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance)
	TArray<class UPrimalItem*>                   ItemSlots;                                         // 0x128(0x10)(Edit, ConstParm, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalItem*>                   ArkTributeItems;                                   // 0x138(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalItem*>                   AllDyeColorItems;                                  // 0x148(0x10)(Edit, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalItem*>                   AllCustomCosmeticItems;                            // 0x158(0x10)(Edit, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FItemCraftQueueEntry>          ItemCraftQueueEntries;                             // 0x168(0x10)(Edit, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        OverrideInventoryDefaultTab;                       // 0x178(0x4)(ConstParm, ExportObject, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInitializedMe : 1;                                // Mask: 0x1, PropSize: 0x10x17C(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance)
	uint8                                        bReceivingEquippedItems : 1;                       // Mask: 0x2, PropSize: 0x10x17C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReceivingInventoryItems : 1;                      // Mask: 0x4, PropSize: 0x10x17C(0x1)(BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReceivingArkInventoryItems : 1;                   // Mask: 0x8, PropSize: 0x10x17C(0x1)(Edit, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFreeCraftingMode : 1;                             // Mask: 0x10, PropSize: 0x10x17C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanEquipItems : 1;                                // Mask: 0x20, PropSize: 0x10x17C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanUseWeaponAsEquipment : 1;                      // Mask: 0x40, PropSize: 0x10x17C(0x1)(ConstParm, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanInventoryItems : 1;                            // Mask: 0x80, PropSize: 0x10x17C(0x1)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bConsumeCraftingRepairingRequirementsOnStart : 1;  // Mask: 0x1, PropSize: 0x10x17D(0x1)(Edit, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRemoteCrafting : 1;                          // Mask: 0x2, PropSize: 0x10x17D(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowDeactivatedCrafting : 1;                     // Mask: 0x4, PropSize: 0x10x17D(0x1)(ExportObject, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventAutoDecreaseDurability : 1;                // Mask: 0x8, PropSize: 0x10x17D(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRemoteRepairing : 1;                         // Mask: 0x10, PropSize: 0x10x17D(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowItemStacking : 1;                            // Mask: 0x20, PropSize: 0x10x17D(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCraftQueue : 1;                                // Mask: 0x40, PropSize: 0x10x17D(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowHiddenRemoteInventoryItems : 1;               // Mask: 0x80, PropSize: 0x10x17D(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceInventoryBlueprints : 1;                     // Mask: 0x1, PropSize: 0x10x17E(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceInventoryNonRemovable : 1;                   // Mask: 0x2, PropSize: 0x10x17E(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideDefaultInventoryItemsFromDisplay : 1;         // Mask: 0x4, PropSize: 0x10x17E(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDataListPadMaxInventoryItems : 1;                 // Mask: 0x8, PropSize: 0x10x17E(0x1)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAddMaxInventoryItemsToDefaultItems : 1;           // Mask: 0x10, PropSize: 0x10x17E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheckForAutoCraftBlueprints : 1;                  // Mask: 0x20, PropSize: 0x10x17E(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsTributeInventory : 1;                           // Mask: 0x40, PropSize: 0x10x17E(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipmentMustRequireExplicitOwnerClass : 1;       // Mask: 0x80, PropSize: 0x10x17E(0x1)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipmentPlayerForceRequireExplicitOwnerClass : 1; // Mask: 0x1, PropSize: 0x10x17F(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipmentForceIgnoreExplicitOwnerClass : 1;       // Mask: 0x2, PropSize: 0x10x17F(0x1)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPInventoryRefresh : 1;                        // Mask: 0x4, PropSize: 0x10x17F(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPInitializeInventory : 1;                     // Mask: 0x8, PropSize: 0x10x17F(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAllowAddInventoryItem : 1;                   // Mask: 0x10, PropSize: 0x10x17F(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2DE : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	TArray<enum class EPrimalEquipmentType>      EquippableItemTypes;                               // 0x180(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideSaddleFromInventoryDisplay : 1;               // Mask: 0x1, PropSize: 0x10x190(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCraftingEnabled : 1;                              // Mask: 0x2, PropSize: 0x10x190(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRepairingEnabled : 1;                             // Mask: 0x4, PropSize: 0x10x190(0x1)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReplicateComponent : 1;                           // Mask: 0x8, PropSize: 0x10x190(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyOneCraftQueueItem : 1;                        // Mask: 0x10, PropSize: 0x10x190(0x1)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemoteInventoryOnlyAllowTribe : 1;                // Mask: 0x20, PropSize: 0x10x190(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideCraftingMinDurabilityRequirement : 1;     // Mask: 0x40, PropSize: 0x10x190(0x1)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemoteInventoryAllowRemoveItems : 1;              // Mask: 0x80, PropSize: 0x10x190(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemoteInventoryAllowAddItems : 1;                 // Mask: 0x1, PropSize: 0x10x191(0x1)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRemoteInventory : 1;                         // Mask: 0x2, PropSize: 0x10x191(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCheatInventory : 1;                            // Mask: 0x4, PropSize: 0x10x191(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowAddingToArkTribute : 1;                      // Mask: 0x8, PropSize: 0x10x191(0x1)(EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemoteInventoryOnlyAllowSelf : 1;                 // Mask: 0x10, PropSize: 0x10x191(0x1)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMaxInventoryWeightUseCharacterStatus : 1;         // Mask: 0x20, PropSize: 0x10x191(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDropInventoryDeposit : 1;                  // Mask: 0x40, PropSize: 0x10x191(0x1)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePreventDropInventory : 1;                    // Mask: 0x80, PropSize: 0x10x191(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowItemDefaultFolders : 1;                       // Mask: 0x1, PropSize: 0x10x192(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableDropAllItems : 1;                          // Mask: 0x2, PropSize: 0x10x192(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreMaxInventoryItems : 1;                      // Mask: 0x4, PropSize: 0x10x192(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2DF : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3D07[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CraftingItemSpeed;                                 // 0x194(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FItemMultiplier>               ItemSpoilingTimeMultipliers;                       // 0x198(0x10)(Edit, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsSecondaryInventory : 1;                         // Mask: 0x1, PropSize: 0x10x1A8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemoteOnlyAllowBlueprintsOrItemClasses : 1;       // Mask: 0x2, PropSize: 0x10x1A8(0x1)(Net, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2E0 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bPreventInventoryViewTrace : 1;                    // Mask: 0x10, PropSize: 0x10x1A8(0x1)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSpawnActorOnTopOfStructure : 1;                   // Mask: 0x20, PropSize: 0x10x1A8(0x1)(Edit, ConstParm, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDropPhysicalInventoryDeposit : 1;                 // Mask: 0x40, PropSize: 0x10x1A8(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseExtendedCharacterCraftingFunctionality : 1;    // Mask: 0x80, PropSize: 0x10x1A8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceGenerateItemSets : 1;                        // Mask: 0x1, PropSize: 0x10x1A9(0x1)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPHandleAccessInventory : 1;                      // Mask: 0x2, PropSize: 0x10x1A9(0x1)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGivesAchievementItems : 1;                        // Mask: 0x4, PropSize: 0x10x1A9(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPAllowUseInInventory : 1;                        // Mask: 0x8, PropSize: 0x10x1A9(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPRemoteInventoryAllowRemoveItems : 1;            // Mask: 0x10, PropSize: 0x10x1A9(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPRemoteInventoryGetMaxVisibleSlots : 1;       // Mask: 0x20, PropSize: 0x10x1A9(0x1)(Edit, BlueprintVisible, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetExtraItemDisplay : 1;                     // Mask: 0x40, PropSize: 0x10x1A9(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPNotifyItemAdded : 1;                            // Mask: 0x80, PropSize: 0x10x1A9(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPNotifyItemRemoved : 1;                          // Mask: 0x1, PropSize: 0x10x1AA(0x1)(ConstParm, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPNotifyItemQuantityUpdated : 1;                  // Mask: 0x2, PropSize: 0x10x1AA(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideItemMinimumUseInterval : 1;             // Mask: 0x4, PropSize: 0x10x1AA(0x1)(Edit, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPForceCustomRemoteInventoryAllowAddItems : 1;    // Mask: 0x8, PropSize: 0x10x1AA(0x1)(Edit, ConstParm, ExportObject, Net, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPForceCustomRemoteInventoryAllowRemoveItems : 1; // Mask: 0x10, PropSize: 0x10x1AA(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceInventoryNotifyCraftingFinished : 1;         // Mask: 0x20, PropSize: 0x10x1AA(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowWorldSettingsInventoryComponentAppends : 1;  // Mask: 0x40, PropSize: 0x10x1AA(0x1)(ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventCraftingResourceConsumption : 1;           // Mask: 0x80, PropSize: 0x10x1AA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideInventoryDepositClassDontForceDrop : 1;   // Mask: 0x1, PropSize: 0x10x1AB(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPIsCraftingAllowed : 1;                       // Mask: 0x2, PropSize: 0x10x1AB(0x1)(Edit, BlueprintReadOnly, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPRemoteInventoryAllowCrafting : 1;            // Mask: 0x4, PropSize: 0x10x1AB(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNotifyAddedOnClientReceive : 1;                   // Mask: 0x8, PropSize: 0x10x1AB(0x1)(BlueprintReadOnly, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsTaxidermyBase : 1;                              // Mask: 0x10, PropSize: 0x10x1AB(0x1)(Edit, ConstParm, BlueprintVisible, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeferCheckForAutoCraftBlueprintsOnInventoryChange : 1; // Mask: 0x20, PropSize: 0x10x1AB(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowQuickSlotPanel : 1;                           // Mask: 0x40, PropSize: 0x10x1AB(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2E1 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3D0A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UGenericDataListEntry*                 ExtraItemDisplay;                                  // 0x1B0(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxInventoryItems;                                 // 0x1B8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxInventoryWeight;                                // 0x1BC(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        AbsoluteMaxVanityItems;                            // 0x1C0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumVanityItems;                                    // 0x1C4(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        TribeGroupInventoryRank;                           // 0x1C8(0x1)(Edit, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D0B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NumSlots;                                          // 0x1CC(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxItemCraftQueueEntries;                          // 0x1D0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D0C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                RemoteInventoryDescriptionString;                  // 0x1D8(0x10)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                EngramRequirementClassOverride;                    // 0x1E8(0x8)(ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        RemoteAddItemOnlyAllowItemClasses;                 // 0x1F0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        RemoteAddItemPreventItemClasses;                   // 0x200(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FEventItem>                    EventItems;                                        // 0x210(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DefaultInventoryItems;                             // 0x220(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DefaultInventoryItems2;                            // 0x230(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DefaultInventoryItems3;                            // 0x240(0x10)(Edit, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DefaultInventoryItems4;                            // 0x250(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UObject>>        DefaultInventoryItemsClasses;                      // 0x260(0x10)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UObject>>         DefaultInventoryItemsClassesNew;                   // 0x270(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        DefaultInventoryItemsRandomCustomStrings;          // 0x280(0x10)(OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                DefaultInventoryItemsRandomCustomStringsWeights;   // 0x290(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        CheatInventoryItems;                               // 0x2A0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DefaultEquippedItems;                              // 0x2B0(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DefaultEquippedItemSkins;                          // 0x2C0(0x10)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DefaultSlotItems;                                  // 0x2D0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FItemSpawnActorClassOverride>  ItemSpawnActorClassOverrides;                      // 0x2E0(0x10)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        OnlyAllowCraftingItemClasses;                      // 0x2F0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<uint8>                                DefaultEngrams;                                    // 0x300(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<uint8>                                DefaultEngrams2;                                   // 0x310(0x10)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<uint8>                                DefaultEngrams3;                                   // 0x320(0x10)(Edit, ConstParm, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<uint8>                                DefaultEngrams4;                                   // 0x330(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                DefaultInventoryQualities;                         // 0x340(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                DefaultInventoryQuantities;                        // 0x350(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                InventoryNameOverride;                             // 0x360(0x10)(Edit, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MaxRemoteInventoryViewingDistance;                 // 0x370(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ActiveInventoryRefreshInterval;                    // 0x374(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        StartingAbsoluteMaxInventoryItems;                 // 0x378(0x4)(ConstParm, ExportObject, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        AbsoluteMaxInventoryItems;                         // 0x37C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        SlotMaxMagicNumber;                                // 0x380(0x4)(ConstParm, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        CurrentSlotMaxMagicNumber;                         // 0x384(0x4)(BlueprintVisible, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       LastInventoryRefreshTime;                          // 0x388(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance)
	class UClass*                                DroppedItemTemplateOverride;                       // 0x390(0x8)(BlueprintVisible, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ForceAllowItemStackings;                           // 0x398(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              DropItemRotationOffset;                            // 0x3A8(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FItemCraftingConsumptionReplenishment> ItemCraftingConsumptionReplenishments;             // 0x3C0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxItemCooldownTimeClear;                          // 0x3D0(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D12[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FItemMultiplier>               MaxItemTemplateQuantities;                         // 0x3D8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ItemCraftingSoundOverride;                         // 0x3E8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FActorClassAttachmentInfo>     WeaponAsEquipmentAttachmentInfos;                  // 0x3F0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalItem*>                   CraftingItems;                                     // 0x400(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        DisplayDefaultItemInventoryCount;                  // 0x410(0x4)(BlueprintVisible, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D14[0x2C];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       LastRefreshCheckItemTime;                          // 0x440(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D15[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        MinItemSets;                                       // 0x45C(0x4)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MaxItemSets;                                       // 0x460(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        NumItemSetsPower;                                  // 0x464(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bSetsRandomWithoutReplacement : 1;                 // Mask: 0x1, PropSize: 0x10x468(0x1)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bForceAllowAllUseInInventory : 1;                  // Mask: 0x2, PropSize: 0x10x468(0x1)(ExportObject, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPIsValidCraftingResource : 1;                 // Mask: 0x4, PropSize: 0x10x468(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseParentStructureIsValidCraftingResource : 1;    // Mask: 0x8, PropSize: 0x10x468(0x1)(ConstParm, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSetCraftingEnabledCheckForAutoCraftBlueprints : 1; // Mask: 0x10, PropSize: 0x10x468(0x1)(ConstParm, ExportObject, Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPRemoteInventoryAllowViewing : 1;             // Mask: 0x20, PropSize: 0x10x468(0x1)(ExportObject, BlueprintReadOnly, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllDefaultInventoryIsEngrams : 1;                 // Mask: 0x40, PropSize: 0x10x468(0x1)(ExportObject, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanGrindItems : 1;                           // Mask: 0x80, PropSize: 0x10x468(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGrinderCanGrindAll : 1;                           // Mask: 0x1, PropSize: 0x10x469(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2E3 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3D17[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSupplyCrateItemSet>           ItemSets;                                          // 0x470(0x10)(BlueprintVisible, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FSupplyCrateItemSet>           AdditionalItemSets;                                // 0x480(0x10)(ExportObject, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ItemSetsOverride;                                  // 0x490(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                SetQuantityWeights;                                // 0x498(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                SetQuantityValues;                                 // 0x4A8(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ItemRemovedBySound;                                // 0x4B8(0x8)(Edit, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            OpenInventorySound;                                // 0x4C0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            CloseInventorySound;                               // 0x4C8(0x8)(BlueprintVisible, ExportObject, Net, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxInventoryAccessDistance;                        // 0x4D0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D19[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FServerCustomFolder>           CustomFolderItems;                                 // 0x4D8(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D1A[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class UPrimalInventoryComponent>> ForceAllowCraftingForInventoryComponents;          // 0x4F8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FItemMultiplier>               ItemClassWeightMultipliers;                        // 0x508(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GenerateItemSetsQualityMultiplierMin;              // 0x518(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        GenerateItemSetsQualityMultiplierMax;              // 0x51C(0x4)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        DefaultCraftingRequirementsMultiplier;             // 0x520(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        DefaultCraftingQuantityMultiplier;                 // 0x524(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        ActionWheelAccessInventoryPriority;                // 0x528(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        SavedForceDefaultInventoryRefreshVersion;          // 0x52C(0x4)(BlueprintVisible, Net, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        ForceDefaultInventoryRefreshVersion;               // 0x530(0x4)(Edit, BlueprintReadOnly, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D1C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        TamedDinoForceConsiderFoodTypes;                   // 0x538(0x10)(Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D1D[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            OverrideCraftingFinishedSound;                     // 0x558(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D1E[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector                               GroundDropTraceLocationOffset;                     // 0x578(0x18)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnInventoryItemAdded;                              // 0x590(0x10)(BlueprintVisible, Parm, OutParm, ZeroConstructor, Config, GlobalConfig)
	FMulticastInlineDelegateProperty_            OnInventoryItemRemoved;                            // 0x5A0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Config, GlobalConfig)
	uint8                                        bHideTributeUploadDinosPanel : 1;                  // Mask: 0x1, PropSize: 0x10x5B0(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreDLCEquipRestrictions : 1;                   // Mask: 0x2, PropSize: 0x10x5B0(0x1)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreEngramEquipRestrictions : 1;                // Mask: 0x4, PropSize: 0x10x5B0(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnTransferAll : 1;                           // Mask: 0x8, PropSize: 0x10x5B0(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableTransferEquipmentOnTransferAll : 1;        // Mask: 0x10, PropSize: 0x10x5B0(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseItemQuantityUpdateEvents : 1;                  // Mask: 0x20, PropSize: 0x10x5B0(0x1)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2E4 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3D1F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FOverrideMultiuseButtonStyle>  MultiUseButtonStyleOverrides;                      // 0x5B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseCustomSorting;                                 // 0x5C8(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceAllowCustomFolders;                          // 0x5C9(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D20[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastCraftRequestTime;                              // 0x5D0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        FreeCraftingModeQuantityValue;                     // 0x5D8(0x4)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowHiddenDefaultInventoryItemsDuringCrafting : 1; // Mask: 0x1, PropSize: 0x10x5DC(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseItemCountInsteadOfInventory : 1;               // Mask: 0x2, PropSize: 0x10x5DC(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideSlotCountFromHud : 1;                         // Mask: 0x4, PropSize: 0x10x5DC(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNotNearWirelessCrafting : 1;                      // Mask: 0x8, PropSize: 0x10x5DC(0x1)(Edit, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2E5 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3D21[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LastWirelessCraftingCheckLoc;                      // 0x5E0(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalWirelessExchangeData*>   WirelessExchanges;                                 // 0x5F8(0x10)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D23[0x60];                                    // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            AccessInventoryIcon;                               // 0x668(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    TribeInventoryAccessRankSelectionIcons;            // 0x670(0x10)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseInventoryBPDrawItemIcon : 1;                   // Mask: 0x1, PropSize: 0x10x680(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D24[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalInventoryComponent* GetDefaultObj();

	void UpdateTribeGroupInventoryRank(uint8* NewRank);
	void UpdateSlotMagicNumber();
	int32 UpdateNetWeaponClipAmmo();
	void TransferItemToInventory(class UPrimalInventoryComponent** ToInventory, int32 ItemIndex);
	bool TransferAllItemsToInventoryWithFilter(class UPrimalInventoryComponent** ToInventory);
	void TransferAllItemsToInventory(class UPrimalInventoryComponent** ToInventory);
	bool TransferAllItemsOfClassToInventory(class UPrimalInventoryComponent** ToInventory);
	bool TransferAllItemsOfClassesToInventory(class UPrimalInventoryComponent** ToInventory);
	void StopAllCraftingRepairing();
	class ADroppedItem* StaticDropNewItemWithInfo(class AActor** ForActor, const struct FRotator& RotationOverride);
	class ADroppedItem* StaticDropNewItem(class AActor** ForActor, class UClass* AnItemClass, float ItemQuality, bool bForceNoBlueprint, const struct FRotator& RotationOverride);
	struct FItemNetID SetNextItemSpoilingID();
	struct FItemNetID SetNextItemConsumptionID();
	bool SetFreeCraftingMode();
	void SetCraftingEnabled(bool* bEnable);
	int32 ServerSplitItemStack();
	class FName ServerSelectedCustomItemAction(class AShooterPlayerController** ForPC);
	bool ServerRequestItems(class AShooterPlayerController** ForPC);
	float ServerRepairItem(class AShooterPlayerController** ByPC);
	struct FItemNetID ServerRemoveItemFromSlot();
	struct FItemNetID ServerMergeItemStack();
	TArray<struct FCraftingResourceRequirement> ServerMakeRecipeItem(class FString* CustomName);
	struct FItemNetID ServerForceMergeItemStack();
	struct FItemNetID ServerCraftItem(class AShooterPlayerController** ByPC);
	bool ServerAddItemToSlot(int32* SlotIndex);
	bool RemoveItem();
	bool RemoteInventoryAllowViewing();
	bool RemoteInventoryAllowRepairingItems();
	bool RemoteInventoryAllowCraftingItems();
	bool OverrideUseItem();
	class UPrimalItem* NotifyClientsDurabilityChange();
	void MulticastUpdateNearbyWirelessCrafting();
	void MulticastForceUpdateWirelessResources();
	bool IsRepairingAllowed();
	bool IsOnCraftRequestCooldown();
	bool IsLocalToPlayer(class AShooterPlayerController** ForPC);
	bool IsLocal();
	bool IsCraftingAllowed();
	bool IsAtMaxInventoryItems();
	bool IsAllowedInventoryAccess(class APlayerController** ForPC);
	class USoundBase* InventoryViewersStopLocalSound();
	class USoundBase* InventoryViewersPlayLocalSound(bool* bAttach);
	void InventoryRefresh();
	bool InventoryCustomSortPredicate();
	TArray<class UPrimalItem*> InventoryCustomFilter();
	void InitializeInventory();
	class UClass* ImpersonateOwnerClass();
	bool HasResources();
	bool HasItemsEquipped(bool bRequiresExactClassMatch, bool bOnlyArkItems);
	float GetTotalEquippedItemStat();
	int32 GetNumVanityItems();
	int32 GetNumNonVanityItems();
	int32 GetNumItems();
	int32 GetMaxInventoryItems();
	int32 GetLastItemSlotIndex();
	int32 GetItemTemplateQuantity();
	int32 GetInventoryUpdatedFrame();
	int32 GetGrinderSettings();
	bool GetForceShowCraftablesInventoryTab();
	class UPrimalItem* GetEquippedItemOfType();
	class UPrimalItem* GetEquippedItemOfClass();
	float GetEquippedArmorRating(enum class EPrimalEquipmentType EquipmentType);
	int32 GetEmptySlotCount();
	int32 GetCapacityForItem();
	int32 GetAbsoluteMaxInventoryItems();
	bool GenerateCustomCrateItems(const TArray<class UPrimalItem*>& GeneratedItems, float* MinQualityMultiplier, float* MaxQualityMultiplier);
	bool GenerateCrateItems(float* MinQualityMultiplier, float* MaxQualityMultiplier);
	TArray<class UPrimalItem*> FindAllItemsOfType(bool bRequiresExactClassMatch);
	class ADroppedItem* EjectItem();
	bool ConsumeResources(const TArray<struct FCraftingResourceRequirement>& Resources);
	void ConsumeArmorDurability(float* ConsumptionAmount, bool* bAllArmorTypes, enum class EPrimalEquipmentType* SpecificArmorType, float* FromDamageBlocked);
	void ClientUpdateFreeCraftingMode(bool* bNewFreeCraftingModeValue);
	void ClientOnArkTributeItemsAdded();
	struct FItemNetID ClientItemMessageNotification(enum class EPrimalItemMessage* ItemMessageType);
	void ClearCraftQueue(bool* bForceClearActiveCraftRepair);
	bool CheckFullInventoryConditionForItem();
	void CheckForAutoCraftBlueprints();
	bool CanGrindItems();
	bool CanGrindItem();
	bool CanEquipItem();
	void BPRequestedInventoryItems(class AShooterPlayerController** ForPC);
	int32 BPRemoteInventoryGetMaxVisibleSlots(bool* bIsLocal);
	bool BPRemoteInventoryAllowViewing();
	bool BPRemoteInventoryAllowRemoveItems(class UPrimalItem** AnItemToTransfer);
	bool BPRemoteInventoryAllowCrafting();
	bool BPRemoteInventoryAllowAddItems();
	bool BPRemoteInventoryAllowAddItem_SpecificQuantity(int32* SpecificQuantityIn, int32* SpecificQuantityOut);
	bool BPRemoteInventoryAllowAddItem();
	bool BPPreventEquipItemType(enum class EPrimalEquipmentType EquipmentType);
	bool BPPreventEquipItem();
	void BPPreInitDefaultInventory();
	void BPPostInitDefaultInventory();
	float BPOverrideItemMinimumUseInterval();
	void BPOnTransferAll(class UPrimalInventoryComponent** ToInventory);
	class UPrimalItem* BPNotifyItemRemoved();
	class UPrimalItem* BPNotifyItemQuantityUpdated(int32* Amount);
	bool BPNotifyItemAdded();
	bool BPIsValidCraftingResource();
	bool BPIsCraftingAllowed();
	void BPInventoryRefresh();
	struct FVector2D BPInventoryDrawItemIcon(struct FVector2D* ItemCanvasScale, bool* bItemEnabled, struct FLinearColor* TheTintColor);
	void BPInitializeInventory();
	int32 BPIncrementItemTemplateQuantity(int32* Amount, bool* bReplicateToClient, bool bIsBlueprint, bool* bIsCraftingResourceConsumption, bool* bIsFromUseConsumption, bool* bIsArkTributeItem, class UPrimalItem** UseSpecificItem, bool* bDontExceedMaxItems);
	class UPrimalItem* BPGetItemOfTemplate(bool* bOnlyInventoryItems, bool* bOnlyEquippedItems, bool* IgnoreItemsWithFullQuantity, bool* bFavorSlotItems, bool bIsBlueprint, bool bRequiresExactClassMatch, bool bIgnoreSlotItems, bool bOnlyArkItems, bool bPreferEngram, bool bIsForCraftingConsumption);
	class UMaterialInterface* BPGetExtraItemDisplay(bool bShowExtraItem, class FString* Description);
	class UPrimalItem* BPFindItemWithID();
	void BPDropInventoryDeposit(double DestroyAtTime, int32 OverrideMaxItemsDropped, bool bOverrideDepositLocation, const struct FVector& DepositLocationOverride);
	class APrimalStructureItemContainer* BPDropForceLocationInventoryDeposit(double DestroyAtTime, int32 OverrideMaxItemsDropped, const struct FVector& DepositLocationOverride, int32 DeadPlayerID);
	bool BPCustomRemoteInventoryAllowRemoveItems(class UPrimalItem** AnItemToTransfer, int32 RequestedQuantity, bool bRequestedByPlayer, bool bRequestDropping);
	bool BPCustomRemoteInventoryAllowAddItems(int32 AnItemQuantityOverride, bool bRequestedByPlayer);
	class APrimalStructureItemContainer* BPCreateDropItemInventoryEmpty(double DestroyAtTime, class UClass* OverrideInventoryDepositClass, class APrimalStructureItemContainer* CopyStructureValues, class AActor* GroundIgnoreActor, int32 DeadPlayerID, float DropInventoryOnGroundTraceDistance, bool bOverrideDepositLocation, const struct FVector& DepositLocationOverride);
	void BPCraftingFinishedNotification(class UPrimalItem* ItemToBeCrafted);
	bool BPAllowUseInInventory(bool* bIsRemoteInventory, class AShooterPlayerController** ByPC);
	bool BPAllowAddInventoryItem(int32 RequestedQuantity, bool bOnlyAddAll);
	void BPAccessedInventory(class AShooterPlayerController** ForPC);
	bool AllowAddInventoryItem_OnlyAddAll();
	bool AllowAddInventoryItem_MaxQuantity(int32 RequestedQuantityIn, int32 RequestedQuantityOut);
	bool AllowAddInventoryItem_AnyQuantity();
	class UPrimalItem* AddItemObjectEx(bool bAddToSlot, bool bShowHUDNotification, bool* bDontRecalcSpoilingTime, bool* bForceIncompleteStacking, class AShooterCharacter** OwnerPlayer, bool* bClampStats, class UPrimalItem** InsertAfterItem, bool* bInsertAtItemInstead);
	class UPrimalItem* AddItemObject();
};

// 0x0 (0x688 - 0x688)
// Class ShooterGame.PrimalInventoryComponent_Static
class UPrimalInventoryComponent_Static : public UPrimalInventoryComponent
{
public:

	static class UClass* StaticClass();
	static class UPrimalInventoryComponent_Static* GetDefaultObj();

};

// 0x68 (0x1460 - 0x13F8)
// Class ShooterGame.SkeletalMeshComponentWithSoftRef
class USkeletalMeshComponentWithSoftRef : public USkeletalMeshComponent
{
public:
	TSoftObjectPtr<class USkeletalMesh>          MeshRef;                                           // 0x13F8(0x30)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class UAnimInstance>           AnimClassRef;                                      // 0x1428(0x30)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D29[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USkeletalMeshComponentWithSoftRef* GetDefaultObj();

};

// 0x30 (0x790 - 0x760)
// Class ShooterGame.StaticMeshComponentWithSoftRef
class UStaticMeshComponentWithSoftRef : public UStaticMeshComponent
{
public:
	TSoftObjectPtr<class UStaticMesh>            MeshRef;                                           // 0x760(0x30)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UStaticMeshComponentWithSoftRef* GetDefaultObj();

};

// 0x38 (0xA10 - 0x9D8)
// Class ShooterGame.ParticleSystemComponentWithSoftRef
class UParticleSystemComponentWithSoftRef : public UParticleSystemComponent
{
public:
	TSoftObjectPtr<class UParticleSystem>        TemplateRef;                                       // 0x9D8(0x30)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D2B[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleSystemComponentWithSoftRef* GetDefaultObj();

};

// 0xEB8 (0xEE0 - 0x28)
// Class ShooterGame.PrimalItem
class UPrimalItem : public UObject
{
public:
	uint8                                        Pad_3E1E[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bCanBuildStructures : 1;                           // Mask: 0x1, PropSize: 0x10x58(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowEquppingItem : 1;                            // Mask: 0x2, PropSize: 0x10x58(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventEquipOnTaxidermyBase : 1;                  // Mask: 0x4, PropSize: 0x10x58(0x1)(Net, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowInventoryItem : 1;                           // Mask: 0x8, PropSize: 0x10x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsRepairing : 1;                                  // Mask: 0x10, PropSize: 0x10x58(0x1)(ConstParm, Parm, Config, GlobalConfig, SubobjectReference)
	uint8                                        bEquippedItem : 1;                                 // Mask: 0x20, PropSize: 0x10x58(0x1)(ConstParm, ExportObject, Parm, ReturnParm, Transient, DisableEditOnInstance)
	uint8                                        bCanSlot : 1;                                      // Mask: 0x40, PropSize: 0x10x58(0x1)(BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseItemColors : 1;                                // Mask: 0x80, PropSize: 0x10x58(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bShowTooltipColors : 1;                            // Mask: 0x1, PropSize: 0x10x59(0x1)(ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPInitItemColors : 1;                          // Mask: 0x2, PropSize: 0x10x59(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRefreshOnDyeUsed : 1;                             // Mask: 0x4, PropSize: 0x10x59(0x1)(Edit, BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPostAddBuffToGiveOwnerCharacter : 1;         // Mask: 0x8, PropSize: 0x10x59(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDediAttachments : 1;                         // Mask: 0x10, PropSize: 0x10x59(0x1)(Edit, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowCustomColors : 1;                            // Mask: 0x20, PropSize: 0x10x59(0x1)(Edit, ConstParm, BlueprintVisible, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowRemovalWhenDead : 1;                    // Mask: 0x40, PropSize: 0x10x59(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoCraftBlueprint : 1;                           // Mask: 0x80, PropSize: 0x10x59(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideFromInventoryDisplay : 1;                     // Mask: 0x1, PropSize: 0x10x5A(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Config, GlobalConfig, SubobjectReference)
	uint8                                        bUseItemStats : 1;                                 // Mask: 0x2, PropSize: 0x10x5A(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSpawnActorWhenRiding : 1;                      // Mask: 0x4, PropSize: 0x10x5A(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSpawnActor : 1;                                // Mask: 0x8, PropSize: 0x10x5A(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowDefaultCharacterAttachment : 1;              // Mask: 0x10, PropSize: 0x10x5A(0x1)(EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseItemDurability : 1;                            // Mask: 0x20, PropSize: 0x10x5A(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNewWeaponAutoFillClipAmmo : 1;                    // Mask: 0x40, PropSize: 0x10x5A(0x1)(ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyBrokenItem : 1;                            // Mask: 0x80, PropSize: 0x10x5A(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsMisssionItem : 1;                               // Mask: 0x1, PropSize: 0x10x5B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bThrowOnHotKeyUse : 1;                             // Mask: 0x2, PropSize: 0x10x5B(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsBlueprint : 1;                                  // Mask: 0x4, PropSize: 0x10x5B(0x1)(Net, Parm, Config, GlobalConfig, SubobjectReference)
	uint8                                        bCanBeBlueprint : 1;                               // Mask: 0x8, PropSize: 0x10x5B(0x1)(ConstParm, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventUpload : 1;                                // Mask: 0x10, PropSize: 0x10x5B(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsEngram : 1;                                     // Mask: 0x20, PropSize: 0x10x5B(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, Config, GlobalConfig, SubobjectReference)
	uint8                                        bIsCustomRecipe : 1;                               // Mask: 0x40, PropSize: 0x10x5B(0x1)(Edit, BlueprintReadOnly, Parm, Config, GlobalConfig, SubobjectReference)
	uint8                                        bIsFoodRecipe : 1;                                 // Mask: 0x80, PropSize: 0x10x5B(0x1)(Edit, ExportObject, Parm, Config, GlobalConfig, SubobjectReference)
	uint8                                        bTekItem : 1;                                      // Mask: 0x1, PropSize: 0x10x5C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowUseInInventory : 1;                          // Mask: 0x2, PropSize: 0x10x5C(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRemoteUseInInventory : 1;                    // Mask: 0x4, PropSize: 0x10x5C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBlueprintEquippedNotifications : 1;            // Mask: 0x8, PropSize: 0x10x5C(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseInWaterRestoreDurability : 1;                  // Mask: 0x10, PropSize: 0x10x5C(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bValidCraftingResource : 1;                        // Mask: 0x20, PropSize: 0x10x5C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSetupHUDIconMaterial : 1;                    // Mask: 0x40, PropSize: 0x10x5C(0x1)(Edit, Net, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipRequiresDLC_ScorchedEarth : 1;               // Mask: 0x80, PropSize: 0x10x5C(0x1)(BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipRequiresDLC_Aberration : 1;                  // Mask: 0x1, PropSize: 0x10x5D(0x1)(Edit, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipRequiresDLC_Extinction : 1;                  // Mask: 0x2, PropSize: 0x10x5D(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipRequiresDLC_Genesis : 1;                     // Mask: 0x4, PropSize: 0x10x5D(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDurabilityRequirementIgnoredInWater : 1;          // Mask: 0x8, PropSize: 0x10x5D(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRepair : 1;                                  // Mask: 0x10, PropSize: 0x10x5D(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCustomBrokenIcon : 1;                             // Mask: 0x20, PropSize: 0x10x5D(0x1)(EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRemovalFromInventory : 1;                    // Mask: 0x40, PropSize: 0x10x5D(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Config, GlobalConfig, SubobjectReference)
	uint8                                        bFromSteamInventory : 1;                           // Mask: 0x80, PropSize: 0x10x5D(0x1)(ConstParm, ExportObject, EditFixedSize, Config, GlobalConfig, SubobjectReference)
	uint8                                        bIsFromAllClustersInventory : 1;                   // Mask: 0x1, PropSize: 0x10x5E(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Config, GlobalConfig, SubobjectReference)
	uint8                                        bConsumeItemOnUse : 1;                             // Mask: 0x2, PropSize: 0x10x5E(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnItemConsumed : 1;                          // Mask: 0x4, PropSize: 0x10x5E(0x1)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bConfirmBeforeUsing : 1;                           // Mask: 0x8, PropSize: 0x10x5E(0x1)(Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyCanUseInWater : 1;                            // Mask: 0x10, PropSize: 0x10x5E(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanUseSwimming : 1;                               // Mask: 0x20, PropSize: 0x10x5E(0x1)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDescriptionOnlyItem : 1;                        // Mask: 0x40, PropSize: 0x10x5E(0x1)(Edit, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRestoreDurabilityWhenColorized : 1;               // Mask: 0x80, PropSize: 0x10x5E(0x1)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAppendPrimaryColorToName : 1;                     // Mask: 0x1, PropSize: 0x10x5F(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseScaleStatEffectivenessByDurability : 1;        // Mask: 0x2, PropSize: 0x10x5F(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesCreationTime : 1;                             // Mask: 0x4, PropSize: 0x10x5F(0x1)(BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowUseWhileRiding : 1;                          // Mask: 0x8, PropSize: 0x10x5F(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventCraftingResourceAtFullDurability : 1;      // Mask: 0x10, PropSize: 0x10x5F(0x1)(BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGiveItemWhenUsedCopyItemStats : 1;                // Mask: 0x20, PropSize: 0x10x5F(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideFromRemoteInventoryDisplay : 1;               // Mask: 0x40, PropSize: 0x10x5F(0x1)(Edit, ConstParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoDecreaseDurabilityOverTime : 1;               // Mask: 0x80, PropSize: 0x10x5F(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDragOntoOtherItemIfSameCustomData : 1;     // Mask: 0x1, PropSize: 0x10x60(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseOnItemWeaponRemoveClipAmmo : 1;                // Mask: 0x2, PropSize: 0x10x60(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseOnItemSetIndexAsDestinationItemCustomData : 1; // Mask: 0x4, PropSize: 0x10x60(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupportDragOntoOtherItem : 1;                     // Mask: 0x8, PropSize: 0x10x60(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsItemSkin : 1;                                   // Mask: 0x10, PropSize: 0x10x60(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventOnSkinTab : 1;                             // Mask: 0x20, PropSize: 0x10x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontResetAttachmentIfNotUpdatingItem : 1;         // Mask: 0x40, PropSize: 0x10x60(0x1)(Edit, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bItemSkinIgnoreSkinIcon : 1;                       // Mask: 0x80, PropSize: 0x10x60(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPickupEggAlertsDinos : 1;                         // Mask: 0x1, PropSize: 0x10x61(0x1)(ExportObject, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEggSpoilsWhenFertilized : 1;                      // Mask: 0x2, PropSize: 0x10x61(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideCustomDescription : 1;                        // Mask: 0x4, PropSize: 0x10x61(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCopyCustomDescriptionIntoSpoiledItem : 1;         // Mask: 0x8, PropSize: 0x10x61(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCopyDurabilityIntoSpoiledItem : 1;                // Mask: 0x10, PropSize: 0x10x61(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCraftedRequestCustomItemDescription : 1;          // Mask: 0x20, PropSize: 0x10x61(0x1)(ExportObject, BlueprintReadOnly, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowCustomItemDescription : 1;              // Mask: 0x40, PropSize: 0x10x61(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_309 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        BitPad_30A : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPPreventUseOntoItem : 1;                      // Mask: 0x8, PropSize: 0x10x62(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSkinDisableWhenSubmerged : 1;                     // Mask: 0x10, PropSize: 0x10x62(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsAbstractItem : 1;                               // Mask: 0x20, PropSize: 0x10x62(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventItemSkins : 1;                             // Mask: 0x40, PropSize: 0x10x62(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyCanUseInFalling : 1;                          // Mask: 0x80, PropSize: 0x10x62(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDropDestruction : 1;                         // Mask: 0x1, PropSize: 0x10x63(0x1)(ConstParm, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanBeArkTributeItem : 1;                          // Mask: 0x2, PropSize: 0x10x63(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowInvalidItemVersion : 1;                      // Mask: 0x4, PropSize: 0x10x63(0x1)(ConstParm, ExportObject, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSpawnActorRelativeLoc : 1;                     // Mask: 0x8, PropSize: 0x10x63(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSpawnActorTakeOwnerRotation : 1;               // Mask: 0x10, PropSize: 0x10x63(0x1)(Edit, ConstParm, ExportObject, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseEquippedItemBlueprintTick : 1;                 // Mask: 0x20, PropSize: 0x10x63(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseEquippedItemNativeTick : 1;                    // Mask: 0x40, PropSize: 0x10x63(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSpawnActorOnWaterOnly : 1;                        // Mask: 0x80, PropSize: 0x10x63(0x1)(Edit, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoTameSpawnedActor : 1;                         // Mask: 0x1, PropSize: 0x10x64(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowItemRatingAsPercent : 1;                      // Mask: 0x2, PropSize: 0x10x64(0x1)(ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventArmorDurabiltyConsumption : 1;             // Mask: 0x4, PropSize: 0x10x64(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsEgg : 1;                                        // Mask: 0x8, PropSize: 0x10x64(0x1)(ConstParm, BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsCookingIngredient : 1;                          // Mask: 0x10, PropSize: 0x10x64(0x1)(Edit, ConstParm, BlueprintVisible, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDragClearDyedItem : 1;                            // Mask: 0x20, PropSize: 0x10x64(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeprecateItem : 1;                                // Mask: 0x40, PropSize: 0x10x64(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_30B : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bItemSkinKeepOriginalWeaponTemplate : 1;           // Mask: 0x1, PropSize: 0x10x65(0x1)(ConstParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bItemSkinKeepOriginalIcon : 1;                     // Mask: 0x2, PropSize: 0x10x65(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bItemSkinReceiveOwnerEquippedBlueprintEvents : 1;  // Mask: 0x4, PropSize: 0x10x65(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bItemSkinReceiveOwnerEquippedBlueprintTick : 1;    // Mask: 0x8, PropSize: 0x10x65(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bItemSkinAllowEquipping : 1;                       // Mask: 0x10, PropSize: 0x10x65(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDisplayInInventory : 1;                      // Mask: 0x20, PropSize: 0x10x65(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDroppedItemAllowDinoPickup : 1;                   // Mask: 0x40, PropSize: 0x10x65(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCraftDontActuallyGiveItem : 1;                    // Mask: 0x80, PropSize: 0x10x65(0x1)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventUseWhenSleeping : 1;                       // Mask: 0x1, PropSize: 0x10x66(0x1)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideRepairingRequirements : 1;                // Mask: 0x2, PropSize: 0x10x66(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bScaleOverridenRepairingRequirements : 1;          // Mask: 0x4, PropSize: 0x10x66(0x1)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceUseItemAddCharacterStatsOnDinos : 1;         // Mask: 0x8, PropSize: 0x10x66(0x1)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyEquipWhenUnconscious : 1;                     // Mask: 0x10, PropSize: 0x10x66(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePreventConsumableWhileHandcuffed : 1;        // Mask: 0x20, PropSize: 0x10x66(0x1)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideExactClassCraftingRequirement : 1;        // Mask: 0x40, PropSize: 0x10x66(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventConsumeItemOnDrag : 1;                     // Mask: 0x80, PropSize: 0x10x66(0x1)(ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowGrinding : 1;                           // Mask: 0x1, PropSize: 0x10x67(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePreventGrinding : 1;                         // Mask: 0x2, PropSize: 0x10x67(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Config, GlobalConfig, SubobjectReference)
	uint8                                        bDeprecateBlueprint : 1;                           // Mask: 0x4, PropSize: 0x10x67(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDinoAutoConsume : 1;                       // Mask: 0x8, PropSize: 0x10x67(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDinoAutoHealingItem : 1;                        // Mask: 0x10, PropSize: 0x10x67(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPAllowRemoteAddToInventory : 1;                  // Mask: 0x20, PropSize: 0x10x67(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPAllowRemoteRemoveFromInventory : 1;             // Mask: 0x40, PropSize: 0x10x67(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipmentHatHideItemHeadHair : 1;                 // Mask: 0x80, PropSize: 0x10x67(0x1)(ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipmentHatHideItemFacialHair : 1;               // Mask: 0x1, PropSize: 0x10x68(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipmentForceHairHiding : 1;                     // Mask: 0x2, PropSize: 0x10x68(0x1)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRemoveFromSteamInventory : 1;                // Mask: 0x4, PropSize: 0x10x68(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPInventoryNotifyCraftingFinished : 1;            // Mask: 0x8, PropSize: 0x10x68(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheckBPAllowCrafting : 1;                         // Mask: 0x10, PropSize: 0x10x68(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAllowAddToInventory : 1;                     // Mask: 0x20, PropSize: 0x10x68(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventItemBlueprint : 1;                         // Mask: 0x40, PropSize: 0x10x68(0x1)(Edit, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventUseByDinos : 1;                            // Mask: 0x80, PropSize: 0x10x68(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventUseByHumans : 1;                           // Mask: 0x1, PropSize: 0x10x69(0x1)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPCanUse : 1;                                     // Mask: 0x2, PropSize: 0x10x69(0x1)(ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowOverrideItemAutoDecreaseDurability : 1;      // Mask: 0x4, PropSize: 0x10x69(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCopyItemDurabilityFromCraftingResource : 1;       // Mask: 0x8, PropSize: 0x10x69(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsInitialItem : 1;                                // Mask: 0x10, PropSize: 0x10x69(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Config, GlobalConfig, SubobjectReference)
	uint8                                        bPickupEggForceAggro : 1;                          // Mask: 0x20, PropSize: 0x10x69(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClearSkinOnInventoryRemoval : 1;                  // Mask: 0x40, PropSize: 0x10x69(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCustomAutoDecreaseDurabilityPerInterval : 1; // Mask: 0x80, PropSize: 0x10x69(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCustomInventoryWidgetText : 1;               // Mask: 0x1, PropSize: 0x10x6A(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCustomInventoryWidgetTextColor : 1;          // Mask: 0x2, PropSize: 0x10x6A(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCustomInventoryWidgetTextForBlueprint : 1;   // Mask: 0x4, PropSize: 0x10x6A(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSkinnedBPCustomInventoryWidgetText : 1;        // Mask: 0x8, PropSize: 0x10x6A(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCustomDurabilityText : 1;                    // Mask: 0x10, PropSize: 0x10x6A(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCustomDurabilityTextColor : 1;               // Mask: 0x20, PropSize: 0x10x6A(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPInitFromItemNetInfo : 1;                     // Mask: 0x40, PropSize: 0x10x6A(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPInitializeItem : 1;                          // Mask: 0x80, PropSize: 0x10x6A(0x1)(Edit, ConstParm, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetItemNetInfo : 1;                          // Mask: 0x1, PropSize: 0x10x6B(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bItemSkinKeepOriginalItemName : 1;                 // Mask: 0x2, PropSize: 0x10x6B(0x1)(ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventUploadingWeaponClipAmmo : 1;               // Mask: 0x4, PropSize: 0x10x6B(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventNativeItemBroken : 1;                      // Mask: 0x8, PropSize: 0x10x6B(0x1)(ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bResourcePreventGivingFromDemolition : 1;          // Mask: 0x10, PropSize: 0x10x6B(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNameForceNoStatQualityRank : 1;                   // Mask: 0x20, PropSize: 0x10x6B(0x1)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysLearnedEngram : 1;                          // Mask: 0x40, PropSize: 0x10x6B(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreMinimumUseIntervalForDinoAutoEatingFood : 1; // Mask: 0x80, PropSize: 0x10x6B(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUnappliedItemSkinIgnoreItemAttachments : 1;       // Mask: 0x1, PropSize: 0x10x6C(0x1)(BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideMoreOptionsIfNonRemovable : 1;                // Mask: 0x2, PropSize: 0x10x6C(0x1)(Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetItemDescription : 1;                      // Mask: 0x4, PropSize: 0x10x6C(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCrafted : 1;                                 // Mask: 0x8, PropSize: 0x10x6C(0x1)(Edit, ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetItemName : 1;                             // Mask: 0x10, PropSize: 0x10x6C(0x1)(Edit, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventUseAtTameLimit : 1;                        // Mask: 0x20, PropSize: 0x10x6C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDivideTimeToCraftByGlobalCropGrowthSpeed : 1;     // Mask: 0x40, PropSize: 0x10x6C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventCheatGive : 1;                             // Mask: 0x80, PropSize: 0x10x6C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsingRequiresStandingOnSolidGround : 1;           // Mask: 0x1, PropSize: 0x10x6D(0x1)(ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAddedAttachments : 1;                        // Mask: 0x2, PropSize: 0x10x6D(0x1)(Edit, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPConsumeProjectileImpact : 1;                 // Mask: 0x4, PropSize: 0x10x6D(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideProjectileType : 1;                  // Mask: 0x8, PropSize: 0x10x6D(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnUpdatedItemContextMenu : 1;                // Mask: 0x10, PropSize: 0x10x6D(0x1)(Edit, ConstParm, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsableWithTekGrenadeLauncher : 1;                 // Mask: 0x20, PropSize: 0x10x6D(0x1)(Edit, ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyDropped : 1;                           // Mask: 0x40, PropSize: 0x10x6D(0x1)(ExportObject, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bThrowUsesSecondaryActionDrop : 1;                 // Mask: 0x80, PropSize: 0x10x6D(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetItemIcon : 1;                             // Mask: 0x1, PropSize: 0x10x6E(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSlottedTick : 1;                               // Mask: 0x2, PropSize: 0x10x6E(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDrawItemIcon : 1;                            // Mask: 0x4, PropSize: 0x10x6E(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPForceAllowRemoteAddToInventory : 1;          // Mask: 0x8, PropSize: 0x10x6E(0x1)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSkinAddWeightToSkinnedItem : 1;                   // Mask: 0x10, PropSize: 0x10x6E(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPIsValidForCrafting : 1;                      // Mask: 0x20, PropSize: 0x10x6E(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideCraftingConsumption : 1;             // Mask: 0x40, PropSize: 0x10x6E(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMergeCustomDataFromCraftingResources : 1;         // Mask: 0x80, PropSize: 0x10x6E(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreDrawingItemButtonIcon : 1;                  // Mask: 0x1, PropSize: 0x10x6F(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCensoredItemSkin : 1;                             // Mask: 0x2, PropSize: 0x10x6F(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetItemDurabilityPercentage : 1;             // Mask: 0x4, PropSize: 0x10x6F(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPEquippedItemOnXPEarning : 1;                 // Mask: 0x8, PropSize: 0x10x6F(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysTriggerTributeDownloaded : 1;               // Mask: 0x10, PropSize: 0x10x6F(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeferWeaponBeginPlayToAssociatedItemSetTime : 1;  // Mask: 0x20, PropSize: 0x10x6F(0x1)(Edit, ConstParm, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventRemovingClipAmmo : 1;                      // Mask: 0x40, PropSize: 0x10x6F(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCustomBrokenOverlayIcon : 1;                      // Mask: 0x80, PropSize: 0x10x6F(0x1)(Edit, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetMaxAmmo : 1;                              // Mask: 0x1, PropSize: 0x10x70(0x1)(OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyItemRefreshed : 1;                     // Mask: 0x2, PropSize: 0x10x70(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceNoLearnedEngramRequirement : 1;              // Mask: 0x4, PropSize: 0x10x70(0x1)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowUseIgnoreMovementMode : 1;                   // Mask: 0x8, PropSize: 0x10x70(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_30F : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3E28[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftObjectPtr<class USkeletalMesh>          CostumeDinoSaddleOverrideMesh;                     // 0x78(0x30)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftObjectPtr<class USkeletalMesh>          CostumeDinoSaddleOverrideTorchMesh;                // 0xA8(0x30)(BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoAutoHealingThresholdPercent;                   // 0xD8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoAutoHealingUseTimeInterval;                    // 0xDC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ArkTributeVersion;                                 // 0xE0(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E29[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class AActor>>          EquipRequiresExplicitOwnerClasses;                 // 0xE8(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          EquipRequiresExplicitOwnerTags;                    // 0xF8(0x10)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             BuffToGiveOwnerWhenEquipped;                       // 0x108(0x30)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                BuffToGiveOwnerWhenEquipped_BlueprintPath;         // 0x138(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E2A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       ExpirationTimeUTC;                                 // 0x14C(0x4)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	int32                                        BlueprintAllowMaxCraftings;                        // 0x150(0x4)(BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E2B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                AbstractItemCraftingDescription;                   // 0x158(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ItemSkinUseOnItemClasses;                          // 0x168(0x10)(ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AllowClassesToBeUsedAsParentSkin;                  // 0x178(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ItemSkinPreventOnItemClasses;                      // 0x188(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ItemBrokenSound;                                   // 0x198(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             UseItemSound;                                      // 0x1A0(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            EquipSound;                                        // 0x1A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            UnEquipSound;                                      // 0x1B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            UsedOnOtherItemSound;                              // 0x1B8(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            RemovedFromOtherItemSound;                         // 0x1C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RandomChanceToBeBlueprint;                         // 0x1C8(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E2C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FActorClassAttachmentInfo>     ActorClassAttachmentInfos;                         // 0x1D0(0x10)(Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E2D[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FItemAttachmentInfo>           ItemSkinAddItemAttachments;                        // 0x1F8(0x10)(ConstParm, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EPrimalItemType                   MyItemType;                                        // 0x208(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EPrimalConsumableType             MyConsumableType;                                  // 0x209(0x1)(Edit, ConstParm, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EPrimalEquipmentType              MyEquipmentType;                                   // 0x20A(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E2E[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ExtraItemCategoryFlags;                            // 0x20C(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ItemIconScale;                                     // 0x210(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E2F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               BlockingShieldFPVTranslation;                      // 0x218(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              BlockingShieldFPVRotation;                         // 0x230(0x18)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShieldBlockDamagePercentage;                       // 0x248(0x4)(ConstParm, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShieldDamageToDurabilityRatio;                     // 0x24C(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          PlayAnimationOnUse;                                // 0x250(0x8)(ExportObject, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHideDuringEquipAnimation;                         // 0x258(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E30[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          ShowAnimationMale;                                 // 0x260(0x8)(BlueprintReadOnly, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ShowAnimationFemale;                               // 0x268(0x8)(Edit, BlueprintVisible, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          HideAnimationMale;                                 // 0x270(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          HideAnimationFemale;                               // 0x278(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CraftingMinLevelRequirement;                       // 0x280(0x4)(Edit, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CraftingCooldownInterval;                          // 0x284(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class AActor>                  CraftingActorToSpawn;                              // 0x288(0x30)(Edit, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            BlueprintBackgroundOverrideTexture;                // 0x2B8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                CraftItemButtonStringOverride;                     // 0x2C0(0x10)(Edit, ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class AActor>                  UseSpawnActorClass;                                // 0x2D0(0x30)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               UseSpawnActorLocOffset;                            // 0x300(0x18)(Edit, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SlotIndex;                                         // 0x318(0x4)(ConstParm, BlueprintReadOnly, OutParm, Config, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x31C(0x8)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, Transient, DisableEditOnInstance)
	int32                                        ItemCustomData;                                    // 0x324(0x4)(Edit, ExportObject, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ItemCustomClass;                                   // 0x328(0x8)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	int32                                        ItemSkinTemplateIndex;                             // 0x330(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E32[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ItemSkinTemplate;                                  // 0x338(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	float                                        ItemRating;                                        // 0x340(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint16                                       CraftQueue;                                        // 0x344(0x2)(Edit, BlueprintVisible, BlueprintReadOnly, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3E33[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CraftingSkill;                                     // 0x348(0x4)(Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3E34[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                CustomItemName;                                    // 0x350(0x10)(Edit, ExportObject, EditFixedSize, Parm, Config, GlobalConfig, SubobjectReference)
	class FString                                CustomItemDescription;                             // 0x360(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Config, GlobalConfig, SubobjectReference)
	TArray<struct FColor>                        CustomColors;                                      // 0x370(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCraftingResourceRequirement>  CustomResourceRequirements;                        // 0x380(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	double                                       NextCraftCompletionTime;                           // 0x390(0x8)(ExportObject, Config, GlobalConfig, SubobjectReference)
	TWeakObjectPtr<class UPrimalInventoryComponent> OwnerInventory;                                    // 0x398(0x8)(Net, Parm, ReturnParm, Transient, DisableEditOnInstance)
	uint8                                        ItemQualityIndex;                                  // 0x3A0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3E36[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                SupportDragOntoItemClass;                          // 0x3A8(0x8)(BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        SupportDragOntoItemClasses;                        // 0x3B0(0x10)(ConstParm, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AShooterWeapon>>  SkinWeaponTemplates;                               // 0x3C0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        SupportAmmoItemForWeaponSkin;                      // 0x3D0(0x10)(ExportObject, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AShooterWeapon>>  SkinWeaponTemplatesForAmmo;                        // 0x3E0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class AShooterWeapon>          AmmoSupportDragOntoWeaponItemWeaponTemplate;       // 0x3F0(0x30)(Edit, ConstParm, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AShooterWeapon>>  AmmoSupportDragOntoWeaponItemWeaponTemplates;      // 0x420(0x10)(BlueprintVisible, ExportObject, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FUseItemAddCharacterStatusValue> UseItemAddCharacterStatusValues;                   // 0x430(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Ingredient_WeightIncreasePerQuantity;              // 0x440(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Ingredient_FoodIncreasePerQuantity;                // 0x444(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Ingredient_HealthIncreasePerQuantity;              // 0x448(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Ingredient_WaterIncreasePerQuantity;               // 0x44C(0x4)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Ingredient_StaminaIncreasePerQuantity;             // 0x450(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventOnFullEquippedSuitHUD : 1;                 // Mask: 0x1, PropSize: 0x10x454(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_310 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3E38[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DescriptiveNameBase;                               // 0x458(0x10)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemDescription;                                   // 0x468(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                DurabilityStringShort;                             // 0x478(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                DurabilityString;                                  // 0x488(0x10)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                CustomRepairText;                                  // 0x498(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DroppedItemLifeSpanOverride;                       // 0x4A8(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E39[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               DroppedItemCenterLocationOffsetOverride;           // 0x4B0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftObjectPtr<class UStaticMesh>            DroppedMeshOverride;                               // 0x4C8(0x30)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    DroppedMeshMaterialOverride;                       // 0x4F8(0x8)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               DroppedMeshOverrideScale3D;                        // 0x500(0x18)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SpoilingItem;                                      // 0x518(0x8)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AActor>>          UseRequiresOwnerActorClasses;                      // 0x520(0x10)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PreservingItemClass;                               // 0x530(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PreservingItemSpoilingTimeMultiplier;              // 0x538(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SpoilingTime;                                      // 0x53C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CraftingConsumesDurability;                        // 0x540(0x4)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RepairResourceRequirementMultiplier;               // 0x544(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseItemWeight;                                    // 0x548(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DurabilityIncreaseMultiplier;                      // 0x54C(0x4)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NewItemDurabilityOverride;                         // 0x550(0x4)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DurabilityDecreaseMultiplier;                      // 0x554(0x4)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UseDecreaseDurability;                             // 0x558(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AutoDurabilityDecreaseInterval;                    // 0x55C(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AutoDecreaseMinDurability;                         // 0x560(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AutoDecreaseDurabilityAmountPerInterval;           // 0x564(0x4)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UseDecreaseDurabilityMin;                          // 0x568(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UseMinDurabilityRequirement;                       // 0x56C(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ResourceRarity;                                    // 0x570(0x4)(ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BlueprintTimeToCraft;                              // 0x574(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinBlueprintTimeToCraft;                           // 0x578(0x4)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BlueprintWeight;                                   // 0x57C(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinimumUseInterval;                                // 0x580(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeForFullRepair;                                 // 0x584(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseCraftingXP;                                    // 0x588(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseRepairingXP;                                   // 0x58C(0x4)(Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCraftingResourceRequirement>  BaseCraftingResourceRequirements;                  // 0x590(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FCraftingResourceRequirement>  OverrideRepairingRequirements;                     // 0x5A0(0x10)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemStatInfo                         ItemStatInfos[0x8];                                // 0x5B0(0x120)(ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint16                                       ItemStatValues[0x8];                               // 0x6D0(0x10)(ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	int32                                        WeaponClipAmmo;                                    // 0x6E0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	float                                        WeaponFrequency;                                   // 0x6E4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastTimeToShowInfo;                                // 0x6E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ItemVersion;                                       // 0x6F0(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3E3A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ItemDurability;                                    // 0x6F4(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	float                                        MinItemDurability;                                 // 0x6F8(0x4)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SavedDurability;                                   // 0x6FC(0x4)(ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class AShooterWeapon>          WeaponTemplate;                                    // 0x700(0x30)(ConstParm, BlueprintVisible, BlueprintReadOnly, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            BrokenIcon;                                        // 0x730(0x8)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            CustomBrokenOverlayIcon;                           // 0x738(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ItemIcon;                                          // 0x740(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            AlternateItemIconBelowDurability;                  // 0x748(0x8)(BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AlternateItemIconBelowDurabilityValue;             // 0x750(0x4)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DurabilityNotifyThresholdValue;                    // 0x754(0x4)(Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    ItemIconMaterialParent;                            // 0x758(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int16                                        ItemColorID[0x6];                                  // 0x760(0xC)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	int16                                        PreSkinItemColorID[0x6];                           // 0x76C(0xC)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint8                                        bUseItemColor[0x6];                                // 0x778(0x6)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E3B[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                RandomColorSet;                                    // 0x780(0x8)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              ItemIconMaterial;                                  // 0x788(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              HUDIconMaterial;                                   // 0x790(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ItemQuantity;                                      // 0x798(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	int32                                        MaxItemQuantity;                                   // 0x79C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<enum class EPrimalEquipmentType>      EquippedHideOtherEquipmentAttachTypes;             // 0x7A0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<uint64>                               SteamItemUserIDs;                                  // 0x7B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalStructure>        StructureToBuild;                                  // 0x7C0(0x30)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> StructuresToBuild;                                 // 0x7F0(0x10)(ConstParm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> CachedStructuresToBuild;                           // 0x800(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        StructureToBuildIndex;                             // 0x810(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E3E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                GiveItemWhenUsed;                                  // 0x818(0x8)(Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalInventoryComponent>> CraftingRequiresInventoryComponent;                // 0x820(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class ADroppedItem>            DroppedItemTemplateOverride;                       // 0x830(0x30)(BlueprintVisible, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class ADroppedItem>            DroppedItemTemplateForSecondryAction;              // 0x860(0x30)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             BuffToGiveOwnerCharacter;                          // 0x890(0x30)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              PreviewCameraRotation;                             // 0x8C0(0x18)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               PreviewCameraPivotOffset;                          // 0x8D8(0x18)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreviewCameraDistanceScaleFactor;                  // 0x8F0(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreviewCameraDefaultZoomMultiplier;                // 0x8F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreviewCameraMaxZoomMultiplier;                    // 0x8F8(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bItemIsUsable;                                     // 0x8FC(0x1)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E3F[0x43];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       CreationTime;                                      // 0x940(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, Config, GlobalConfig, SubobjectReference)
	double                                       LastAutoDurabilityDecreaseTime;                    // 0x948(0x8)(ExportObject, Net, Parm, ReturnParm, Transient, DisableEditOnInstance)
	double                                       LastUseTime;                                       // 0x950(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E41[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxCustomItemDescriptionLength;                    // 0x960(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        TempSlotIndex;                                     // 0x964(0x4)(Edit, ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        LastSlotIndex;                                     // 0x968(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AShooterWeapon>         AssociatedWeapon;                                  // 0x96C(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E42[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalItem*                           MyItemSkin;                                        // 0x978(0x8)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimalItem*                           SkinnedOntoItem;                                   // 0x980(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     WheelItemsAmmo;                                    // 0x988(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AShooterCharacter>      LastOwnerPlayer;                                   // 0x998(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	TArray<struct FCropItemPhaseData>            CropPhasesData;                                    // 0x9A0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CropGrowingFertilizerConsumptionRate;              // 0x9B0(0x4)(BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CropMaxFruitFertilizerConsumptionRate;             // 0x9B4(0x4)(BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CropGrowingWaterConsumptionRate;                   // 0x9B8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CropMaxFruitWaterConsumptionRate;                  // 0x9BC(0x4)(ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CropMaxFruits;                                     // 0x9C0(0x4)(ConstParm, BlueprintVisible, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CropNoFertilizerOrWaterCacheReductionRate;         // 0x9C4(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FertilizerEffectivenessMultiplier;                 // 0x9C8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EggAlertDinosAggroAmount;                          // 0x9CC(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EggAlertDinosAggroRadius;                          // 0x9D0(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E43[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          EggAlertDinosAggroTags;                            // 0x9D8(0x10)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EggAlertDinosForcedAggroTime;                      // 0x9E8(0x4)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EggMaximumDistanceFromOriginalDropToAlertDinos;    // 0x9EC(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                BrokenGiveItemClass;                               // 0x9F0(0x8)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ClearColorDurabilityThreshold;                     // 0x9F8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E44[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ItemClassToUseAsInitialCustomData;                 // 0xA00(0x8)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               OriginalItemDropLocation;                          // 0xA08(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	struct FLinearColor                          DurabilityBarColorForeground;                      // 0xA20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          DurabilityBarColorBackground;                      // 0xA30(0x10)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                OverrideCooldownTimeItemClass;                     // 0xA40(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinDurabilityForCraftingResource;                  // 0xA48(0x4)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ResourceRequirementIncreaseRatingPower;            // 0xA4C(0x4)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ResourceRequirementRatingScale;                    // 0xA50(0x4)(Edit, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ResourceRequirementRatingIncreasePercentage;       // 0xA54(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       NextSpoilingTime;                                  // 0xA58(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	double                                       LastSpoilingTime;                                  // 0xA60(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	TArray<class FString>                        DefaultFolderPaths;                                // 0xA68(0x10)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemRatingString;                                  // 0xA78(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DefaultWeaponMeshName;                             // 0xA88(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E46[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                EngramRequirementItemClassOverride;                // 0xA98(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E47[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            ExtraThrowItemSound;                               // 0xAB0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventNotificationItemCombatMode;                // 0xAB8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceNotificationItemCombatMode;                  // 0xAB9(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E48[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SpawnOnWaterEncroachmentBoxExtent;                 // 0xAC0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AActor>>          OnlyUsableOnSpecificClasses;                       // 0xAD8(0x10)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSaddlePassengerSeatDefinition> SaddlePassengerSeats;                              // 0xAE8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SaddleOverrideRiderSocketName;                     // 0xAF8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalDinoCharacter>    EggDinoClassToSpawn;                               // 0xB00(0x30)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        EggNumberOfLevelUpPointsApplied[0xC];              // 0xB30(0xC)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint8                                        EggNumberMutationsApplied[0xC];                    // 0xB3C(0xC)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	float                                        EggTamedIneffectivenessModifier;                   // 0xB48(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint8                                        EggColorSetIndices[0x6];                           // 0xB4C(0x6)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3E4A[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        EggGenderOverride;                                 // 0xB54(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	float                                        EggLoseDurabilityPerSecond;                        // 0xB58(0x4)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraEggLoseDurabilityPerSecondMultiplier;         // 0xB5C(0x4)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EggMinTemperature;                                 // 0xB60(0x4)(Edit, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EggMaxTemperature;                                 // 0xB64(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EggDroppedInvalidTempLoseItemRatingSpeed;          // 0xB68(0x4)(ConstParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E4D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            ShieldHitSound;                                    // 0xB70(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RecipeCraftingSkillScale;                          // 0xB78(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CustomItemID;                                      // 0xB7C(0x4)(ExportObject, BlueprintReadOnly, OutParm, Config, GlobalConfig, SubobjectReference)
	float                                        AddDinoTargetingRange;                             // 0xB80(0x4)(Edit, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DamageTorpidityArmorRating;                        // 0xB84(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IndirectTorpidityArmorRating;                      // 0xB88(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E4E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class APrimalEmitterSpawnable> UseParticleEffect;                                 // 0xB90(0x30)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  UseParticleEffectSocketName;                       // 0xBC0(0x8)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UseGiveDinoTameAffinityPercent;                    // 0xBC8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E4F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        CraftingAdditionalItemsToGive;                     // 0xBD0(0x10)(Edit, ConstParm, ExportObject, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        LastValidItemVersion;                              // 0xBE0(0x4)(Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalTameAffinityMultiplier;                      // 0xBE4(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CraftingGiveItemCount;                             // 0xBE8(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CraftingGivesItemQuantityOverride;                 // 0xBEC(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            UseItemOnItemSound;                                // 0xBF0(0x8)(Edit, ExportObject, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  UseUnlocksEmoteName;                               // 0xBF8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E50[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDinoAncestorsEntry>           EggDinoAncestors;                                  // 0xC08(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	TArray<struct FDinoAncestorsEntry>           EggDinoAncestorsMale;                              // 0xC18(0x10)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	int32                                        EggRandomMutationsFemale;                          // 0xC28(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	int32                                        EggRandomMutationsMale;                            // 0xC2C(0x4)(ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	TArray<class UClass*>                        EquippingRequiresEngrams;                          // 0xC30(0x10)(Edit, BlueprintReadOnly, Net, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCustomItemData>               CustomItemDatas;                                   // 0xC40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	class FString                                OverrideUseString;                                 // 0xC50(0x10)(Edit, ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SendToClientClassOverride;                         // 0xC60(0x8)(Edit, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                CrafterCharacterName;                              // 0xC68(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	class FString                                CrafterTribeName;                                  // 0xC78(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	float                                        CraftedSkillBonus;                                 // 0xC88(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	float                                        CraftingSkillQualityMultiplierMin;                 // 0xC8C(0x4)(Edit, ConstParm, BlueprintVisible, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CraftingSkillQualityMultiplierMax;                 // 0xC90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SinglePlayerCraftingSpeedMultiplier;               // 0xC94(0x4)(ConstParm, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NoLevelEngramSortingPriority;                      // 0xC98(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CustomFlags;                                       // 0xC9C(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CustomTag;                                         // 0xCA0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, EditConst, SubobjectReference)
	class UAnimSequence*                         OverrideDinoRiderMoveAnimation;                    // 0xCA8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         OverrideDinoRiderAnimation;                        // 0xCB0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EquippedReduceDurabilityInterval;                  // 0xCB8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E55[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastEquippedReduceDurabilityTime;                  // 0xCC0(0x8)(BlueprintVisible, ExportObject, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EquippedReduceDurabilityPerInterval;               // 0xCC8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ItemStatClampsMultiplier;                          // 0xCCC(0x4)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	float                                        MaxDurabiltiyOverride;                             // 0xCD0(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E57[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        NextRepairPercentage;                              // 0xCE8(0x4)(ConstParm, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E58[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UStaticMesh*                           NetDroppedMeshOverride;                            // 0xCF0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    NetDroppedMeshMaterialOverride;                    // 0xCF8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               NetDroppedMeshOverrideScale3D;                     // 0xD00(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bNonBlockingShield : 1;                            // Mask: 0x1, PropSize: 0x10xD18(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNetInfoFromClient : 1;                            // Mask: 0x2, PropSize: 0x10xD18(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_313 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bDisableItemUITooltip : 1;                         // Mask: 0x8, PropSize: 0x10xD18(0x1)(BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDepositDropping : 1;                       // Mask: 0x10, PropSize: 0x10xD18(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowSkinColorization : 1;                   // Mask: 0x20, PropSize: 0x10xD18(0x1)(BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipAddTekExtendedInfo : 1;                      // Mask: 0x40, PropSize: 0x10xD18(0x1)(Edit, ConstParm, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowCraftingWithStarterAmmo : 1;                 // Mask: 0x80, PropSize: 0x10xD18(0x1)(Edit, ConstParm, BlueprintReadOnly, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E5C[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSlateBrush                           WidgetCustomBrokenOverlayStyleBrush;               // 0xD20(0xD0)(DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                CustomBrokenBorderColor;                           // 0xDF0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E5D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftObjectPtr<class USkeletalMesh>          DyePreviewMeshOverrideSK;                          // 0xDF8(0x30)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TSoftObjectPtr<class UStaticMesh>            DyePreviewMeshOverrideSM;                          // 0xE28(0x30)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            AccessoryActivatedIconOverride;                    // 0xE58(0x8)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                CustomItemTooltipOverride;                         // 0xE60(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBlueprintAnimNotifications;                    // 0xE68(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPPreventUpload;                               // 0xE69(0x1)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E5F[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  EquippingCosmeticRequiresUnlockedEmoteName;        // 0xE6C(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CustomInventoryWidgetTextVerticalOffset;           // 0xE74(0x4)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseCustomContextMenuOptions;                      // 0xE78(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E60[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          TopLevelCustomContextMenuOptions;                  // 0xE80(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCustomContextSubmenu>         CustomContextSubMenus;                             // 0xE90(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCustomContextMenuData>        CustomContextOptionData;                           // 0xEA0(0x10)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventModifyArmorValue;                          // 0xEB0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPOnLocalUse;                                  // 0xEB1(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E61[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       AssociatedDinoID1;                                 // 0xEB4(0x4)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint32                                       AssociatedDinoID2;                                 // 0xEB8(0x4)(ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideInheritedStatWeight : 1;             // Mask: 0x1, PropSize: 0x10xEBC(0x1)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSkinDroppedItemTemplateForSecondryAction : 1;  // Mask: 0x2, PropSize: 0x10xEBC(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontRemoveOnEquip : 1;                            // Mask: 0x4, PropSize: 0x10xEBC(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_314 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3E63[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int64                                        CustomCosmeticModSkinReplacementID;                // 0xEC0(0x8)(OutParm, Config, GlobalConfig, SubobjectReference)
	int32                                        CustomCosmeticModSkinVariantID;                    // 0xEC8(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3E66[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                CustomCosmeticModSkinReplacementOriginalClass;     // 0xED0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3E67[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalItem* GetDefaultObj();

	bool UseItemOntoItem();
	bool Use();
	bool UpdatedItem();
	bool UnequipWeapon();
	bool StaticGetItemNameAndIcon(class UClass* ItemType, class AShooterPlayerController** ForPC);
	int32 StaticGetDinoColorSetIndexForItemColorIDFromDyeList(int32* ID);
	int32 StaticGetDinoColorSetIndexForItemColorID(int32* ID);
	struct FLinearColor StaticGetColorForItemColorIDFromDyeList(int32* ID);
	struct FLinearColor StaticGetColorForItemColorID(int32* ID);
	void SlottedTick(float* DeltaSeconds);
	class UPrimalItem* SkinEquippedBlueprintTick(float* DeltaSeconds);
	struct FUnreplicatedEggData SetUnreplicatedEggData();
	bool SetQuantity();
	int32 SetItemStatValues(int32 Idx);
	struct FItemStatInfo SetItemStatInfo(int32 Idx);
	TArray<int32> SetItemColors();
	struct FCustomItemData SetCustomItemData();
	int32 SetCustomColorParams();
	class APrimalDinoCharacter* SetAssociatedDinoID();
	void ServerUpdatedWeaponClipAmmo();
	bool ServerSendItemExecCommandToPlayer(class FName* CommandName, struct FBPNetExecParams* ExecParams);
	bool ServerSendItemExecCommandToEveryone(class FName* CommandName, struct FBPNetExecParams* ExecParams);
	void ServerRemoveWeaponAccessoryOnly();
	void ServerRemoveItemSkinOnly();
	void ServerRemoveItemSkin();
	class FName SelectedCustomContextMenuItem(class AShooterPlayerController** ForPC);
	float RepairItem();
	void RemoveWeaponAccessory();
	bool RemoveFromSlot(bool* bFastInventory);
	bool RemovedSkinFromItem();
	class FName RemoveCustomItemData();
	bool RemoveClipAmmo();
	bool RefreshAttachments();
	float RecalcSpoilingTime(class UPrimalInventoryComponent* ForComp);
	float OverrideItemRating();
	class USoundBase* OverrideCrouchingSound();
	class AShooterPlayerController* NotifyEditText();
	TArray<struct FCustomItemData> MergeCustomItemDatas();
	bool MeetRepairingRequirements();
	class FString MakeRepairingRequirementsString();
	void LocalUseStartHoldBP(class AShooterPlayerController** ForPC);
	void LocalUseStartHold(class AShooterPlayerController** ForPC);
	void LocalUseItemReleaseBP(class AShooterPlayerController** ForPC);
	void LocalUseItemRelease(class AShooterPlayerController** ForPC);
	void LocalUseAfterHoldBP(class AShooterPlayerController** ForPC);
	void LocalUseAfterHold(class AShooterPlayerController** ForPC);
	void LocalUse(class AShooterPlayerController** ForPC);
	bool IsValidForCrafting();
	bool IsUsableConsumable();
	bool IsOwnerInWater();
	bool IsOwnerInNoPainWater();
	bool IsCustomContextMenuItemEnabled();
	bool IsCooldownReadyForUse();
	bool IsBroken();
	float InitNewItem(float ItemQuality, class UPrimalInventoryComponent** ToInventory, float MinRandomQuality);
	class UWorld* InitializeItem();
	int32 IncrementItemQuantity(int32* Amount, bool* bIsFromUseConsumption, bool* bIsArkTributeItem);
	bool HasCustomItemData();
	bool HasBuffToGiveOwnerWhenEquipped();
	bool HasAvailableCustomCosmetics();
	float HandleShieldDamageBlocking(struct FDamageEvent* DamageEvent, class AController** EventInstigator, class AActor* DamageCauser);
	class UClass* GetWeaponTemplateMeleeDamageType();
	float GetWeaponTemplateMeleeDamageAmount();
	class UClass* GetWeaponTemplateHarvestDamageType();
	float GetWeaponTemplateHarvestDamageMultiplier();
	float GetWeaponTemplateDurabilityToConsumePerMeleeHit();
	int32 GetWeaponClipAmmo();
	float GetUseItemAddCharacterStatusValue(enum class EPrimalCharacterStatusValue* ValueType);
	struct FUnreplicatedEggData GetUnreplicatedEggData();
	float GetSpoilingTime();
	class FString GetRepairingRequirementsString(class APlayerController** OwningPlayer);
	float GetRemainingCooldownTime();
	class UClass* GetProjectileType(class UClass* ItemType);
	class AShooterCharacter* GetOwnerPlayer();
	class AActor* GetOwnerActor();
	int32 GetMaxItemQuantity(class UObject** WorldContextObject);
	int32 GetMaximumAdditionalCrafting(class UPrimalInventoryComponent* ForComp);
	float GetMaxDurability();
	float GetItemWeight();
	int32 GetItemStatValues(int32 Idx);
	class FString GetItemStatString();
	float GetItemStatModifierForTemplateItem();
	float GetItemStatModifier();
	struct FItemStatInfo GetItemStatInfo(int32 Idx);
	class FString GetItemShortName();
	struct FItemNetInfo GetItemNetInfo();
	TArray<struct FLinearColor> GetItemDyeColors();
	bool GetItemCustomColor();
	int32 GetItemColorIDFromDyeItemIDFromDyeList();
	int32 GetItemColorIDFromDyeItemID();
	int32 GetItemColorID();
	TArray<uint8> GetItemBytes();
	class FString GetInventoryIconDisplayText();
	class UPrimalInventoryComponent* GetInitializeItemOwnerInventory();
	class UMaterialInterface* GetHUDIconMaterial();
	int32 GetEngramRequirementLevel();
	float GetEggHatchTimeRemaining(class UWorld** TheWorld);
	float GetDurabilityPercentage();
	bool GetCustomItemData();
	float GetCryopodDeploymentRange();
	int32 GetCraftingResourceRequirement();
	TArray<struct FCraftingResourceRequirement> GetCraftingRequirements();
	class UActorComponent* GetComponentToAttach();
	class UClass* GetBuffToGiveOwnerWhenEquipped();
	TArray<struct FCustomCosmeticModSkin> GetAvailableCustomCosmetics();
	int32 GetAttachedComponentsNum();
	class UActorComponent* GetAttachedComponent();
	int32 GetAssociatedDinoID();
	TArray<TSoftClassPtr<class APrimalStructure>> GetAllStructuresToBuild();
	enum class EPrimalEquipmentType GetActualEquipmentType();
	void FinishRepairing();
	void EquippedBlueprintTick(float* DeltaSeconds);
	bool DoesItemUseColorRegion();
	class UPrimalItem* CreateItemFromNetInfo();
	class UPrimalItem* CreateFromBytes();
	bool Crafted();
	bool CraftBlueprint();
	class APlayerController* ConsumeResourcesForRepair();
	void ClientUpdatedWeaponClipAmmo();
	void ClearAssociatedDinoID();
	void ClampStats(class UPrimalInventoryComponent** Inventory);
	void ClampItemRating(class UPrimalInventoryComponent** Inventory);
	bool CheckForRepairResources();
	bool CheckForInventoryDupes();
	bool CanUseWithItemSource();
	bool CanUseWithItemDestination();
	bool CanUse();
	bool CanSpoil();
	bool CanShowNotificationItem();
	bool CanRepair();
	bool CanFullyCraft();
	bool CanEquipWeapon();
	bool CanDrop();
	bool CanCraft();
	int32 BPUsedOntoItem();
	class UObject* BPTributeItemUploaded();
	class UObject* BPTributeItemDownloaded();
	bool BPSupportUseOntoItem();
	bool BPShouldHideTopLevelCustomContextMenuOption();
	int32 BPSetWeaponClipAmmo();
	class UMaterialInstanceDynamic* BPSetupHUDIconMaterial();
	void BPServerVerifyStructurePlacementData();
	void BPServerHandleItemNetExecCommand(class AShooterPlayerController** ForPC, class FName* CommandName, struct FBPNetExecParams* ExecParams);
	bool BPProcessEditText(class AShooterPlayerController** ForPC);
	bool BPPreventWeaponEquip();
	bool BPPreventUseOntoItem();
	bool BPPreventUpload();
	bool BPPreventNewColorization();
	bool BPPreventEquip(class UPrimalInventoryComponent** ToInventory);
	void BPPreUseItem();
	class UWorld* BPPreInitializeItem();
	class UWorld* BPPostInitializeItem();
	class UActorComponent* BPPostConstructAttachment();
	class APrimalBuff* BPPostAddBuffToGiveOwnerCharacter();
	class UClass* BPOverrideProjectileType();
	float BPOverrideInheritedStatWeight(class APrimalDinoCharacter** ForDino);
	float BPOverrideEquippedDurabilityPercentage();
	int32 BPOverrideCraftingConsumption();
	void BPOnUpdatedItemContextMenu();
	void BPOnLocalUse(class AShooterCharacter** ForCharacter);
	int32 BPOnItemConsumed(class UPrimalInventoryComponent** Inventory);
	void BPNotifyItemRefreshed();
	bool BPNotifyDropped(class APrimalCharacter* FromCharacter);
	bool BPMatchesItemID();
	struct FItemNetID BPMakeItemID();
	void BPItemBroken();
	void BPItemBelowDurabilityThreshold();
	bool BPIsValidForCrafting();
	TArray<int32> BPInitItemColors();
	void BPInitIconMaterial();
	void BPInitFromItemNetInfo();
	class FString BPGetSkinnedCustomInventoryWidgetText();
	int32 BPGetNumberOfDefaultSaddleStructures();
	int32 BPGetMaxAmmo();
	int32 BPGetItemStatRandomValue(int32 Idx);
	float BPGetItemStatModifier(int32 Idx);
	void BPGetItemNetInfo();
	class FString BPGetItemName(class AShooterPlayerController** ForPC);
	int32 BPGetItemID();
	class UTexture2D* BPGetItemIcon(class AShooterPlayerController** ForPC);
	float BPGetItemDurabilityPercentage();
	class FString BPGetItemDescription(class AShooterPlayerController** ForPC);
	class UParticleSystem* BPGetFuelParticleSystemOverride();
	class USoundBase* BPGetFuelAudioOverride();
	struct FColor BPGetCustomInventoryWidgetTextColor();
	class FString BPGetCustomInventoryWidgetText();
	class UMaterialInterface* BPGetCustomIconMaterialParent();
	struct FColor BPGetCustomDurabilityTextColor();
	class FString BPGetCustomDurabilityText();
	float BPGetCustomAutoDecreaseDurabilityPerInterval();
	bool BPForceAllowRemoteAddToInventory(class UPrimalInventoryComponent** ToInventory);
	enum class EXPType BPEquippedItemOnXPEarning(class APrimalCharacter* ForChar);
	struct FVector2D BPDrawItemIcon(struct FVector2D* ItemCanvasScale, bool* bItemEnabled, struct FLinearColor* TheTintColor);
	class AActor* BPCustomSpawningEvent(const class FString& FailureReason);
	void BPCrafted();
	bool BPConsumeProjectileImpact(struct FHitResult* HitResult);
	void BPClientHandleItemNetExecCommand(class FName* CommandName, struct FBPNetExecParams* ExecParams, class AShooterPlayerController** ForPC);
	bool BPCanUse();
	bool BPCanAddToInventory(class UPrimalInventoryComponent** ToInventory);
	int32 BPBreakItemID();
	void BPAnimNotifyCustomState_End(class FName* CustomEventName, class USkeletalMeshComponent** MeshComp, class UAnimSequenceBase** Animation, class UAnimNotifyState** AnimNotifyObject);
	void BPAnimNotifyCustomState_Begin(class FName* CustomEventName, class USkeletalMeshComponent** MeshComp, class UAnimSequenceBase** Animation, float* TotalDuration, class UAnimNotifyState** AnimNotifyObject);
	void BPAnimNotifyCustomEvent(class FName* CustomEventName, class USkeletalMeshComponent** MeshComp, class UAnimSequenceBase** Animation, class UAnimNotify** AnimNotifyObject);
	bool BPAllowRemoteRemoveFromInventory(class AShooterPlayerController** ByPC, bool bRequestedByPlayer);
	bool BPAllowRemoteAddToInventory(class AShooterPlayerController** ByPC, bool bRequestedByPlayer);
	class FString BPAllowCrafting(class AShooterPlayerController** ForPC);
	void BPAddedAttachments();
	void BlueprintUsed();
	void BlueprintUnequipped();
	bool BlueprintPostEquipped();
	class AController* BlueprintOwnerPosssessed();
	bool BlueprintEquipped();
	bool ApplyingSkinOntoItem();
	class UMeshComponent* ApplyColorsToMesh();
	class APrimalStructure* ApplyColorsFromStructure();
	bool AllowRemoteAddToInventory(class AShooterPlayerController** ByPC, bool bRequestedByPlayer);
	bool AllowEquipItem(class UPrimalInventoryComponent** ToInventory);
	bool AddToSlot(int32* TheSlotIndex, bool* bFastInventory);
	class UPrimalItem* AddNewItem(class UClass** ItemArchetype, class UPrimalInventoryComponent** GiveToInventory, float ItemQuality, bool bForceNoBlueprint, bool* CreateOnClient, class UClass** ApplyItemSkin, float MinRandomQuality, bool* ClampStats, bool* bIgnoreAbsoluteMaxInventory, bool* bSkipDenySpawningInThisMap);
	void AddItemDurability(float* DurabilityToAdd);
};

// 0x220 (0x5D8 - 0x3B8)
// Class ShooterGame.PrimalItemInventoryToolTipWidget
class UPrimalItemInventoryToolTipWidget : public UTooltipSmartLayoutWidget
{
public:
	class FName                                  FnameMainInfo_Switcher;                            // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FnameMainInfo_Full_Icon;                           // 0x3C0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FnameMainInfo_Full_DescriptionLabel;               // 0x3C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FnameMainInfo_DescOnly_DescriptionLabel;           // 0x3D0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          FnameGeneral_LabelNames;                           // 0x3D8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          FnameGeneral_GroupNames;                           // 0x3E8(0x10)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        General_GroupFreq;                                 // 0x3F8(0x4)(Edit, ConstParm, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E83[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          FnameStat_LabelNames;                              // 0x400(0x10)(ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          FnameStat_GroupNames;                              // 0x410(0x10)(Edit, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Stat_GroupFreq;                                    // 0x420(0x4)(Edit, BlueprintVisible, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FnameCraftPanel;                                   // 0x424(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FnameCraftTitleLabel;                              // 0x42C(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E86[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          FnameCraft_RequirementLabels;                      // 0x438(0x10)(ConstParm, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          FnameCraft_RequirementIcons;                       // 0x448(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          FnameCraft_GroupNames;                             // 0x458(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Craft_GroupFreq;                                   // 0x468(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSlateColor                           Craft_RequirementsMet;                             // 0x46C(0x14)(ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSlateColor                           Craft_RequirementsUnmet;                           // 0x480(0x14)(Edit, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSlateColor                           NormalTextColor;                                   // 0x494(0x14)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSlateColor                           NormalSecondTextColor;                             // 0x4A8(0x14)(BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSlateColor                           NormalGeneralTextColor;                            // 0x4BC(0x14)(BlueprintVisible, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EngramBg;                                          // 0x4D0(0x8)(Edit, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            BlueprintBg;                                       // 0x4D8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            TekgramBg;                                         // 0x4E0(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            ItemQualityOverlay;                                // 0x4E8(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E88[0xE8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalItemInventoryToolTipWidget* GetDefaultObj();

};

// 0x270 (0x628 - 0x3B8)
// Class ShooterGame.PrimalItemToolTipWidget
class UPrimalItemToolTipWidget : public UToolTipWidget
{
public:
	class FString                                ItemNameLabelName;                                 // 0x3B8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemQuantityLabelName;                             // 0x3C8(0x10)(Edit, ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemDescriptionLabelName;                          // 0x3D8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemTypeLabelName;                                 // 0x3E8(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemSubTypeLabelName;                              // 0x3F8(0x10)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemIconImageName;                                 // 0x408(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemWeightLabelName;                               // 0x418(0x10)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemStatsLabelName;                                // 0x428(0x10)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemDurabilityLabelName;                           // 0x438(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemQualityImageName;                              // 0x448(0x10)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemSubtypePanelName;                              // 0x458(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemStatsPanelName;                                // 0x468(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemCraftingPanelName;                             // 0x470(0x8)(Edit, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemCraftingRequirementsLabelName;                 // 0x478(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemCraftingTitleLabelName;                        // 0x480(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemCraftingQueueLabelName;                        // 0x488(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemCraftingProgressBarName;                       // 0x490(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemCraftRepairInvReqLabelName;                    // 0x498(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SpoilIntoItemPanelName;                            // 0x4A0(0x8)(BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SpoilIntoItemNameLabelName;                        // 0x4A8(0x8)(ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SpoilIntoItemTimeLabelName;                        // 0x4B0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SpoilIntoItemIconName;                             // 0x4B8(0x8)(ExportObject, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EngramBg;                                          // 0x4C0(0x8)(Edit, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            BlueprintBg;                                       // 0x4C8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            TekgramBg;                                         // 0x4D0(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            ItemQualityOverlay;                                // 0x4D8(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E8A[0x148];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalItemToolTipWidget* GetDefaultObj();

};

// 0x0 (0xEE0 - 0xEE0)
// Class ShooterGame.PrimalItem_CruiseMissile
class UPrimalItem_CruiseMissile : public UPrimalItem
{
public:

	static class UClass* StaticClass();
	static class UPrimalItem_CruiseMissile* GetDefaultObj();

};

// 0x20 (0xF00 - 0xEE0)
// Class ShooterGame.PrimalItem_Dye
class UPrimalItem_Dye : public UPrimalItem
{
public:
	struct FLinearColor                          DyeColor;                                          // 0xEE0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UClass*                                DyeUISceneTemplate;                                // 0xEF0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E8B[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalItem_Dye* GetDefaultObj();

};

// 0x10 (0xEF0 - 0xEE0)
// Class ShooterGame.PrimalItem_Radio
class UPrimalItem_Radio : public UPrimalItem
{
public:
	uint8                                        bAllowVoice : 1;                                   // Mask: 0x1, PropSize: 0x10xEE0(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_316 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3E8C[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            SetFrequencySound;                                 // 0xEE8(0x8)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalItem_Radio* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.LandscapeUtils
class ULandscapeUtils : public UObject
{
public:

	static class UClass* StaticClass();
	static class ULandscapeUtils* GetDefaultObj();

};

// 0x2C8 (0x2F0 - 0x28)
// Class ShooterGame.PrimalLocalProfile
class UPrimalLocalProfile : public UObject
{
public:
	uint8                                        Pad_3E92[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FEngramCustomFolder>           CustomFolders;                                     // 0x48(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        UnlockedDinoEntries;                               // 0x58(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPrimalMapMarkerEntryData>     MapMarkers;                                        // 0x68(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<int32>                                DisplayedTutorials;                                // 0x78(0x10)(BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FArkInventoryData                     MyArkData;                                         // 0x88(0x30)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<uint64>                               SpectatorSavedIds;                                 // 0xB8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       SpectatorPositions;                                // 0xC8(0x10)(BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FRotator>                      SpectatorRotations;                                // 0xD8(0x10)(ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        FavoriteServersNames;                              // 0xE8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        RecentlyJoinedServersNames;                        // 0xF8(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        UnlockedAchievements;                              // 0x108(0x10)(ConstParm, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AchievementItemsCollectedList;                     // 0x118(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        UnlockedAchievementsList;                          // 0x128(0x10)(Edit, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<uint32>                               GlobalExplorerNoteUnlocks;                         // 0x138(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSet<class FName>                            GlobalNamedExplorerNoteUnlocks;                    // 0x148(0x50)(Edit, ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          TamedDinoTags;                                     // 0x198(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FFogOfWarInfoStruct>           PerMapFogOfWars;                                   // 0x1A8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMapMarkerPerMapInfo>          MapMarkersPerMaps;                                 // 0x1B8(0x10)(BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<class FName, struct FPhotoModeMotionControlTrackInfo> PhotoModeMotionControlTracks;                      // 0x1C8(0x50)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MapMarkersColorSliderPercent;                      // 0x218(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstThatchCraft;             // 0x21C(0x1)(Edit, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstJumpPadCraft;            // 0x21D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstOceanPlatformCraft;      // 0x21E(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstPressurePlateCraft;      // 0x21F(0x1)(Edit, ConstParm, BlueprintVisible, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstFishingNetCraft;         // 0x220(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstMiningDrillCraft;        // 0x221(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstShoulderCannonCraft;     // 0x222(0x1)(Edit, ConstParm, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstTekGrenadeLauncherCraft; // 0x223(0x1)(Edit, ExportObject, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstTekCruiseMissileCraft;   // 0x224(0x1)(BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstLaserTripWireCraft;      // 0x225(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstTekClawsCraft;           // 0x226(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstHoverSkiffCraft;         // 0x227(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstShapeshifterTransform;   // 0x228(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstShapeshifterRevert;      // 0x229(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstShapeshifterBloodlust;   // 0x22A(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstExoSuit;                 // 0x22B(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstTekBow;                  // 0x22C(0x1)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstTekPistol;               // 0x22D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstTekCropPlot;             // 0x22E(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstHoversail;               // 0x22F(0x1)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstPlantSpeciesR;           // 0x230(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToGen2BossBattleAvailable;      // 0x231(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstGen2ExplorerNoteFound;   // 0x232(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstGen2DispatcherEncountered; // 0x233(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumRespawns;                                       // 0x234(0x4)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E95[0xB8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalLocalProfile* GetDefaultObj();

	bool SaveProfile();
	TArray<struct FItemNetInfo> OnFinishedLoadingAllClustersItems(bool* Success, const class FString& UserId);
	void OnAllClustersItemsRemoved(bool* Success, const class FString& UserId, const TArray<struct FItemNetID>& ItemsIds);
};

// 0x68 (0x130 - 0xC8)
// Class ShooterGame.PrimalNavigationInvokerComponent
class UPrimalNavigationInvokerComponent : public UNavigationInvokerComponent
{
public:
	TMap<class FName, struct FVector2D>          AlternateGenerationAndRemovalRadii;                // 0xC8(0x50)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DeactivationDelay;                                 // 0x118(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E96[0x14];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalNavigationInvokerComponent* GetDefaultObj();

};

// 0x0 (0x1538 - 0x1538)
// Class ShooterGame.PrimalNavigationSystem
class UPrimalNavigationSystem : public UNavigationSystemV1
{
public:

	static class UClass* StaticClass();
	static class UPrimalNavigationSystem* GetDefaultObj();

	class UClass* GetNavAreaAtLocation(struct FVector* Location, struct FVector* Extent, class AActor** ForActor);
};

// 0x0 (0x60 - 0x60)
// Class ShooterGame.PrimalNavigationSystemConfig
class UPrimalNavigationSystemConfig : public UNavigationSystemModuleConfig
{
public:

	static class UClass* StaticClass();
	static class UPrimalNavigationSystemConfig* GetDefaultObj();

};

// 0x20 (0x1E0 - 0x1C0)
// Class ShooterGame.PrimalNavModifierComponent
class UPrimalNavModifierComponent : public UNavModifierComponent
{
public:
	struct FVector                               FailsafeLocation;                                  // 0x1C0(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ENavigationDataResolution         NavMeshResolution;                                 // 0x1D8(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E9B[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalNavModifierComponent* GetDefaultObj();

	void SetFailsafeExtentAndLocation(struct FVector* InExtent, const struct FVector& InLocation);
	struct FVector GetFailsafeExtentAndLocation(struct FVector* OutExtent);
};

// 0x0 (0x510 - 0x510)
// Class ShooterGame.PrimalNoClimbingVolume
class APrimalNoClimbingVolume : public AVolume
{
public:

	static class UClass* StaticClass();
	static class APrimalNoClimbingVolume* GetDefaultObj();

};

// 0x78 (0x358 - 0x2E0)
// Class ShooterGame.PrimalPathFollowingComponent
class UPrimalPathFollowingComponent : public UPathFollowingComponent
{
public:
	struct FVector                               MoveTowardTargetOffset;                            // 0x2E0(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               TargetFocalPositionOffset;                         // 0x2F8(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReachedDestinationThresholdOffset;                 // 0x310(0x4)(Edit, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MovementGoalHeight;                                // 0x314(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUse3DGoalRadius : 1;                              // Mask: 0x1, PropSize: 0x10x318(0x1)(ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceInputAcceptanceRadius : 1;                   // Mask: 0x2, PropSize: 0x10x318(0x1)(Edit, ConstParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDebugPathFollowing : 1;                           // Mask: 0x4, PropSize: 0x10x318(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDeceleratingForTurn : 1;                        // Mask: 0x8, PropSize: 0x10x318(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_317 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3E9D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastMoveBlockedTime;                               // 0x320(0x8)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LastMoveBlockedLocation;                           // 0x328(0x18)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DecelerationDistance;                              // 0x340(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StartAngle;                                        // 0x344(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	float                                        DecelerationRate;                                  // 0x348(0x4)(EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AccelerationRate;                                  // 0x34C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AngleToSpeedConst;                                 // 0x350(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E9F[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalPathFollowingComponent* GetDefaultObj();

};

// 0x0 (0x4C0 - 0x4C0)
// Class ShooterGame.SaveGameActor
class ASaveGameActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class ASaveGameActor* GetDefaultObj();

};

// 0x10 (0x4D0 - 0x4C0)
// Class ShooterGame.PrimalPersistentWorldData
class APrimalPersistentWorldData : public ASaveGameActor
{
public:
	TArray<struct FPlayerDeathReason>            PlayerDeathReasons;                                // 0x4C0(0x10)(Edit, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalPersistentWorldData* GetDefaultObj();

};

// 0x5B0 (0x5D8 - 0x28)
// Class ShooterGame.PrimalPlayerData
class UPrimalPlayerData : public UObject
{
public:
	struct FPrimalPlayerDataStruct               MyData;                                            // 0x28(0x508)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalBuffPersistentData*>     MyPersistentBuffDatas;                             // 0x530(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EB4[0x60];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FBossEngramsSoftReferenceMapping> BossEngramReferenceMap;                            // 0x5A0(0x10)(ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          RedeemedWorldItemSets;                             // 0x5B0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          RedeemedWorldEquipSets;                            // 0x5C0(0x10)(ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowArkSeasonPassItems;                          // 0x5D0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EB6[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalPlayerData* GetDefaultObj();

	bool SetPlayerHexagonCount();
	int32 SetChibiLevels(class AShooterPlayerController** ForPC);
	void SavePlayerData(class UWorld** ForWorld);
	class FString LinkedPlayerIDString();
	bool HasUnlockedAllExplorerNotes();
	bool HasGeneralizedAchievementTag();
	class FName GrantGeneralizedAchievementTag(class AShooterPlayerController** ForPC);
	class FString GetUniqueNetIdAsString();
	class FString GetUniqueIdString();
	class AShooterPlayerState* GetPlayerState(int32* LocalPlayerIndex);
	int32 GetPlayerHexagonCount();
	class AShooterCharacter* FindCharacterForPlayer(class UWorld** InWorld);
	class AShooterPlayerController* BPForceDefeatedBoss(int32* DifficultyIndex);
	void BPCreatedNewPlayerData();
	class AShooterCharacter* BPApplyToPlayerCharacter(class AShooterPlayerState* ForPlayerState);
	void BPAppliedToPlayerState(class AShooterPlayerState* ForPlayerState);
};

// 0x0 (0x10E8 - 0x10E8)
// Class ShooterGame.PrimalPlayerStatusComponent
class UPrimalPlayerStatusComponent : public UPrimalCharacterStatusComponent
{
public:

	static class UClass* StaticClass();
	static class UPrimalPlayerStatusComponent* GetDefaultObj();

};

// 0x0 (0x4C0 - 0x4C0)
// Class ShooterGame.PrimalPreviewSceneSetup
class APrimalPreviewSceneSetup : public AActor
{
public:

	static class UClass* StaticClass();
	static class APrimalPreviewSceneSetup* GetDefaultObj();

	TArray<class USceneComponent*> NotifySetupPreviewScene(class AShooterPlayerController** ForPC);
	float NotifyPreviewSceneUpdated();
};

// 0x2D0 (0x790 - 0x4C0)
// Class ShooterGame.ShooterProjectile
class AShooterProjectile : public AActor
{
public:
	class UShooterProjectileMovement*            MovementComp;                                      // 0x4C0(0x8)(Edit, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                         bFragmentate;                                      // 0x4C8(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3ED7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FragmentOriginOffset;                              // 0x4CC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FragmentConeHalfAngle;                             // 0x4D0(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumberOfFragmentProjectiles;                       // 0x4D4(0x4)(Edit, ConstParm, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                FragmentProjectileTemplate;                        // 0x4D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseOwnerProjectileLife;                           // 0x4E0(0x1)(ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3ED8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class USphereComponent*                      CollisionComp;                                     // 0x4E8(0x8)(Edit, ExportObject, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UParticleSystemComponent*              ParticleComp;                                      // 0x4F0(0x8)(Edit, Net, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  StaticMeshComp;                                    // 0x4F8(0x8)(Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ExplosionEmitter;                                  // 0x500(0x8)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance)
	class UClass*                                ImpactEmitter;                                     // 0x508(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EDA[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bExploded : 1;                                     // Mask: 0x1, PropSize: 0x10x518(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSpawnExplosionTemplateOnClient : 1;               // Mask: 0x2, PropSize: 0x10x518(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bExplodeOnClient : 1;                              // Mask: 0x4, PropSize: 0x10x518(0x1)(Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bExplodeOnImpact : 1;                              // Mask: 0x8, PropSize: 0x10x518(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bExplodeOnLifeTimeEnd : 1;                         // Mask: 0x10, PropSize: 0x10x518(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyOnExplode : 1;                             // Mask: 0x20, PropSize: 0x10x518(0x1)(Edit, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceUseTickFunction : 1;                         // Mask: 0x40, PropSize: 0x10x518(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceIgnoreFriendlyFire : 1;                      // Mask: 0x80, PropSize: 0x10x518(0x1)(ExportObject, Net, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAttachOnImpact : 1;                               // Mask: 0x1, PropSize: 0x10x519(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSpawnImpactEffectOnHit : 1;                       // Mask: 0x2, PropSize: 0x10x519(0x1)(ConstParm, BlueprintReadOnly, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReplicateImpact : 1;                              // Mask: 0x4, PropSize: 0x10x519(0x1)(Edit, ExportObject, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bImpactSetRotationToNormal : 1;                    // Mask: 0x8, PropSize: 0x10x519(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNoImpactEmitterOnCharacterHit : 1;                // Mask: 0x10, PropSize: 0x10x519(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRotateMeshWhileMoving : 1;                        // Mask: 0x20, PropSize: 0x10x519(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheckForNonBlockingHitImpactFX : 1;               // Mask: 0x40, PropSize: 0x10x519(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClientTickWhenInAirAndCheckForNonBlockingHitImpactFX : 1; // Mask: 0x80, PropSize: 0x10x519(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTickedNonBlockingHitImpactFX : 1;                 // Mask: 0x1, PropSize: 0x10x51A(0x1)(ConstParm, Net, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseTraceForBlocking : 1;                          // Mask: 0x2, PropSize: 0x10x51A(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHadAttachParent : 1;                              // Mask: 0x4, PropSize: 0x10x51A(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_319 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bStopOnExplode : 1;                                // Mask: 0x10, PropSize: 0x10x51A(0x1)(ConstParm, BlueprintVisible, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseTraceForBlockingStopOnExplode : 1;             // Mask: 0x20, PropSize: 0x10x51A(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseMultiTraceForBlocking : 1;                     // Mask: 0x40, PropSize: 0x10x51A(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_31A : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bExplodeEffectOnDestroy : 1;                       // Mask: 0x1, PropSize: 0x10x51B(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bImpactRequiresDinoLineOfSight : 1;                // Mask: 0x2, PropSize: 0x10x51B(0x1)(Edit, ExportObject, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bImpactPvEOnlyAlly : 1;                            // Mask: 0x4, PropSize: 0x10x51B(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPProjectileBounced : 1;                       // Mask: 0x8, PropSize: 0x10x51B(0x1)(ConstParm, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAttachOnProjectileBounced : 1;                    // Mask: 0x10, PropSize: 0x10x51B(0x1)(BlueprintVisible, Net, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPIgnoreProjectileImpact : 1;                  // Mask: 0x20, PropSize: 0x10x51B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoredByTurrets : 1;                             // Mask: 0x40, PropSize: 0x10x51B(0x1)(Edit, ConstParm, ExportObject, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bResetHasImpactedOnMultiTraceForBlocking : 1;      // Mask: 0x80, PropSize: 0x10x51B(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNonBlockingVolumeMustBeWater : 1;                 // Mask: 0x1, PropSize: 0x10x51C(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_31B : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3EDD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ClientSideCollisionRadius;                         // 0x520(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TraceForBlockingRadius;                            // 0x524(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CustomColorDesaturation;                           // 0x528(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EDE[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              RotateMeshFactor;                                  // 0x540(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ImpactTemplate;                                    // 0x558(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TornOffLifeSpan;                                   // 0x560(0x4)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PostExplosionKeepAliveLifeSpan;                    // 0x564(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       ExplosionNetworkTime;                              // 0x568(0x8)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NudgedImpactDistance;                              // 0x570(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreDirectImpactRadialDamage;                   // 0x574(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceNetUpdate;                                   // 0x575(0x1)(EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EDF[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ForceNetUpdateTimeInterval;                        // 0x578(0x4)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AShooterWeapon_Projectile> Weapon;                                            // 0x57C(0x8)(BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	float                                        ParticleColorIntensity;                            // 0x584(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ClientFailsafeLifespan;                            // 0x588(0x4)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseWeaponColorization : 1;                        // Mask: 0x1, PropSize: 0x10x58C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCustomColor : 1;                               // Mask: 0x2, PropSize: 0x10x58C(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoFullRadialDamage : 1;                           // Mask: 0x4, PropSize: 0x10x58C(0x1)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_31D : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3EE5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FProjectileWeaponData                 WeaponConfig;                                      // 0x590(0x28)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bExplodeOnNonBlockingImpact : 1;                   // Mask: 0x1, PropSize: 0x10x5B8(0x1)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRadialDamageIgnoreDamageCauser : 1;               // Mask: 0x2, PropSize: 0x10x5B8(0x1)(Edit, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMultiTraceCollideAgainstPawns : 1;                // Mask: 0x4, PropSize: 0x10x5B8(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTraceForBlockingDoImpactBackTrace : 1;            // Mask: 0x8, PropSize: 0x10x5B8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bExplosionOrientUpwards : 1;                       // Mask: 0x10, PropSize: 0x10x5B8(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bColorizeStructureOnImpact : 1;                    // Mask: 0x20, PropSize: 0x10x5B8(0x1)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClearStructureColorsOnImpact : 1;                 // Mask: 0x40, PropSize: 0x10x5B8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNonBlockingImpactNoExplosionEmitter : 1;          // Mask: 0x80, PropSize: 0x10x5B8(0x1)(Edit, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyOnExplodeNonBlockingImpact : 1;            // Mask: 0x1, PropSize: 0x10x5B9(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontFragmentOnDamage : 1;                         // Mask: 0x2, PropSize: 0x10x5B9(0x1)(Edit, ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventReflecting : 1;                            // Mask: 0x4, PropSize: 0x10x5B9(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPIgnoreRadialDamageVictim : 1;                // Mask: 0x8, PropSize: 0x10x5B9(0x1)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoFinalTraceCheckToDirectDamageVictim : 1;        // Mask: 0x10, PropSize: 0x10x5B9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoFinalTraceCheckFromInstigatorToDirectDamageVictim : 1; // Mask: 0x20, PropSize: 0x10x5B9(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_31E : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3EE6[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          CustomColor;                                       // 0x5BC(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AActor>                 DamageCauser;                                      // 0x5CC(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bHasImpacted;                                      // 0x5D4(0x1)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EE8[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            ReplicatedHitInfo;                                 // 0x5D8(0xF0)(ConstParm, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             ProjectileBounceSound;                             // 0x6C8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EE9[0x38];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ImpactedActors;                                    // 0x708(0x10)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LastVelocity;                                      // 0x718(0x18)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EEA[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        IgnoreNonBlockingHitClasses;                       // 0x738(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceIgnoreBlockingHitClasses;                    // 0x748(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseProjectileTraceChannel : 1;                    // Mask: 0x1, PropSize: 0x10x749(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsGlowStick : 1;                                  // Mask: 0x2, PropSize: 0x10x749(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsGlowStickSelf : 1;                              // Mask: 0x4, PropSize: 0x10x749(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseClientHitDetermination : 1;                    // Mask: 0x8, PropSize: 0x10x749(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_31F : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3EEB[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FluidSimSplashStrength;                            // 0x750(0x4)(BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EEC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x758(0x8)(Edit, ExportObject, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               LastFoliageTraceCheckLocation;                     // 0x760(0x18)(Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastFoliageTraceCheckTime;                         // 0x778(0x8)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        HasPerformedAnEnvirnonmentalImpact : 1;            // Mask: 0x1, PropSize: 0x10x780(0x1)(Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_320 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3EEE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DistanceCutoffForMidairProjectileFoliageTracing;   // 0x784(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeBetweenMidairProjectileFoliageTraces;          // 0x788(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EEF[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterProjectile* GetDefaultObj();

	void UpdateTargetPhysics();
	void StopProjectileMovement();
	struct FHitResult SpawnImpactEffect();
	bool ShouldNotifyServerOfClientImpact();
	void RestartProjectileMovement();
	void Reset();
	void ProjectileBounced(const struct FHitResult& ImpactResult, struct FVector* ImpactVelocity);
	bool PreventExplosionEmitter();
	void OnTouch(class AActor* OverlappedActor, class AActor** Actor);
	void OnProjectileStop(struct FHitResult* HitResult);
	bool OnImpact(struct FHitResult* HitResult);
	void OnExplode(const struct FHitResult& Result);
	void NetUpdateTimer();
	TArray<class AActor*> NetResetTransformAndVelocity(const struct FVector& NewLocation, const struct FVector& NewVelocity);
	void NetAttachRootComponentTo(class USceneComponent** InParent, class FName InSocketName, struct FVector* RelativeLocation, struct FRotator* RelativeRotation);
	class FName GetSocketForFinalTraceCheckFromInstigatorToDirectDamageVictim();
	int32 GetProjectileID();
	struct FVector ExplodeAtLocation();
	struct FHitResult Explode();
	bool DisableAndDestroy();
	void DeactivateProjectileEffects();
	void Colorize();
	struct FRotator ClientOnImpact(struct FHitResult* HitResult);
	void ClientNetImpactFX(struct FHitResult* HitResult);
	void ClientNetExplode(struct FHitResult* HitResult);
	void ClientNetDestroy();
	void ClearHomingTarget();
	TArray<class AShooterProjectile*> BPSpawnedFragments();
	void BPProjectileBounced(const struct FHitResult& ImpactResult, struct FVector* ImpactVelocity);
	struct FVector BPInitVelocity();
	float BPInitializedVelocity();
	bool BPIgnoreRadialDamageVictim(class AActor* Victim);
	void BPDestroyLikeDamage();
	float BPDamageScalarApplied();
	bool BPApplyExplosionDamageAndVFX();
	bool BP_IgnoreProjectileImpact();
	float ApplyDamageScalar();
	class AActor* AddMoveIgnoreActor();
};

// 0x28 (0x7B8 - 0x790)
// Class ShooterGame.PrimalProjectileArrow
class APrimalProjectileArrow : public AShooterProjectile
{
public:
	float                                        PickUpRadius;                                      // 0x790(0x4)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EF3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                PickupItemClass;                                   // 0x798(0x8)(BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        PickUpQuantity;                                    // 0x7A0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PercentChanceToBreakOnImpact;                      // 0x7A4(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PickItemClassApplySkin;                            // 0x7A8(0x8)(Edit, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ArrowPickedUpSound;                                // 0x7B0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalProjectileArrow* GetDefaultObj();

	void PickUpCheck();
	void PickedUp(class AShooterCharacter** ByCharacter);
};

// 0xD0 (0x888 - 0x7B8)
// Class ShooterGame.PrimalProjectileBoomerang
class APrimalProjectileBoomerang : public APrimalProjectileArrow
{
public:
	uint8                                        Pad_3EF6[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxDistanceToTravel;                               // 0x7C0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EF8[0xBC];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnFirstPointTravelDistanceMultiplier;          // 0x880(0x4)(ConstParm, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnSecondPointTravelDistanceMultiplier;         // 0x884(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalProjectileBoomerang* GetDefaultObj();

};

// 0x0 (0x790 - 0x790)
// Class ShooterGame.PrimalProjectileDilo
class APrimalProjectileDilo : public AShooterProjectile
{
public:

	static class UClass* StaticClass();
	static class APrimalProjectileDilo* GetDefaultObj();

};

// 0x28 (0x7B8 - 0x790)
// Class ShooterGame.PrimalProjectileFlare
class APrimalProjectileFlare : public AShooterProjectile
{
public:
	class UParticleSystemComponent*              SecondParticleComp;                                // 0x790(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeToActivateSecondParticleComp;                  // 0x798(0x4)(Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RandomFallingMovementInterval;                     // 0x79C(0x4)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RandomFallingMovementStrength;                     // 0x7A0(0x4)(Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F00[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            SecondParticleSound;                               // 0x7A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LightColorIntensity;                               // 0x7B0(0x4)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F01[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalProjectileFlare* GetDefaultObj();

};

// 0x58 (0x7E8 - 0x790)
// Class ShooterGame.PrimalProjectileGrapplingHook
class APrimalProjectileGrapplingHook : public AShooterProjectile
{
public:
	struct FVector                               GrapHookEndPointOffset;                            // 0x790(0x18)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaximumRopeDistance;                               // 0x7A8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PullingStrength;                                   // 0x7AC(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReleaseRopeSpeed;                                  // 0x7B0(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxPullMassOverride;                               // 0x7B4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DetachGrapHookLifespan;                            // 0x7B8(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F03[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               GrapHookDefaultOffset;                             // 0x7C0(0x18)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    GrapHookMaterial;                                  // 0x7D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GrapHookCableWidthOverride;                        // 0x7E0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowPullSleeping;                                // 0x7E4(0x1)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowPullFleeing;                                 // 0x7E5(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F05[0x2];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalProjectileGrapplingHook* GetDefaultObj();

};

// 0xF0 (0x8A8 - 0x7B8)
// Class ShooterGame.PrimalProjectileNetGun
class APrimalProjectileNetGun : public APrimalProjectileArrow
{
public:
	class USkeletalMeshComponent*                SkeletalMeshComp;                                  // 0x7B8(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                BuffToApplyToLightCharacters;                      // 0x7C0(0x8)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                BuffToApplyToHeavyCharacters;                      // 0x7C8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDinoMassToInmovilize;                           // 0x7D0(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F0D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FManagedBoneSetup>             ManagedBones;                                      // 0x7D8(0x10)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OnInpactMaxTraceDistance;                          // 0x7E8(0x4)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DissolveTime;                                      // 0x7EC(0x4)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F0E[0xB8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalProjectileNetGun* GetDefaultObj();

	struct FRotator GetManagedBoneRotation();
	TArray<struct FVector> GetManagedBoneLocationsAndRotations(const TArray<struct FRotator>& Rotations);
	struct FVector GetManagedBoneLocation();
	void CalculateBonePositions();
};

// 0x0 (0x790 - 0x790)
// Class ShooterGame.PrimalProjectileSpiderAcid
class APrimalProjectileSpiderAcid : public AShooterProjectile
{
public:

	static class UClass* StaticClass();
	static class APrimalProjectileSpiderAcid* GetDefaultObj();

};

// 0x0 (0x7E8 - 0x7E8)
// Class ShooterGame.PrimalRecastNavMesh
class APrimalRecastNavMesh : public ARecastNavMesh
{
public:

	static class UClass* StaticClass();
	static class APrimalRecastNavMesh* GetDefaultObj();

};

// 0x3D0 (0x5C0 - 0x1F0)
// Class ShooterGame.PrimalRichTextBlock
class UPrimalRichTextBlock : public UWidget
{
public:
	class FText                                  Text;                                              // 0x1F0(0x18)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst)
	FDelegateProperty_                           TextDelegate;                                      // 0x208(0x10)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	enum class ETextJustify                      Justification;                                     // 0x218(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	bool                                         AutoWrapText;                                      // 0x219(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_3F14[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        WrapTextAt;                                        // 0x21C(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	bool                                         CenterVertically;                                  // 0x220(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F15[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FMargin                               Margin;                                            // 0x224(0x10)(Edit, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	float                                        LineHeightPercentage;                              // 0x234(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_3F17[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTextBlockStyle                       WidgetStyle;                                       // 0x240(0x340)(ConstParm, Parm, ZeroConstructor, GlobalConfig, SubobjectReference)
	TArray<struct FPrimalTextStyle>              TextStyles;                                        // 0x580(0x10)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPrimalImageStyle>             ImageStyles;                                       // 0x590(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F18[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalRichTextBlock* GetDefaultObj();

	bool SetText(class FText* InText);
	void SetString(class FString* InString);
	class FText GetText();
};

// 0x8 (0xDA0 - 0xD98)
// Class ShooterGame.PrimalScrollBox
class UPrimalScrollBox : public UScrollBox
{
public:
	uint8                                        Pad_3F1A[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalScrollBox* GetDefaultObj();

	class UWidget* GetFirstWidgetWithinVisibleScrollboxFrame();
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.PrimalStaticData
class UPrimalStaticData : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPrimalStaticData* GetDefaultObj();

	class UPrimalStaticData* GetPrimalStaticData();
};

// 0x4E8 (0x510 - 0x28)
// Class ShooterGame.PrimalStaticData_MissionCompanionData
class UPrimalStaticData_MissionCompanionData : public UPrimalStaticData
{
public:
	uint8                                        Pad_3F1B[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPointOfInterestData_ForCompanion     MissionPointOfInterestData;                        // 0x30(0x4E0)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalStaticData_MissionCompanionData* GetDefaultObj();

};

// 0x210 (0x238 - 0x28)
// Class ShooterGame.PrimalStaticData_MissionCompanionReactionData
class UPrimalStaticData_MissionCompanionReactionData : public UPrimalStaticData
{
public:
	struct FCompanionReactionData                ReactionData_MissionStart;                         // 0x28(0xB0)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FCompanionReactionData                ReactionData_MissionEnd_Success;                   // 0xD8(0xB0)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FCompanionReactionData                ReactionData_MissionEnd_Failure;                   // 0x188(0xB0)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalStaticData_MissionCompanionReactionData* GetDefaultObj();

};

// 0xB8 (0x1250 - 0x1198)
// Class ShooterGame.PrimalStructureBearTrap
class APrimalStructureBearTrap : public APrimalStructure
{
public:
	class USkeletalMeshComponent*                TrapSK;                                            // 0x1198(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USphereComponent*                      TriggerComponent;                                  // 0x11A0(0x8)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             TrapTriggerSound;                                  // 0x11A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TrapDamageType;                                    // 0x11B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TrapMinPawnMass;                                   // 0x11B8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TrapMaxPawnMass;                                   // 0x11BC(0x4)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TrapDamageAmount;                                  // 0x11C0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PeriodicalTrapDamageTime;                          // 0x11C4(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PeriodicalTrapDamageAmount;                        // 0x11C8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IgnoreTriggerAfterSpawnTime;                       // 0x11CC(0x4)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          IgnoreDinosWithCustomTag;                          // 0x11D0(0x10)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          ForceImmobilizeDinosWithCustomTag;                 // 0x11E0(0x10)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HealthDecreasePerSecPlayers;                       // 0x11F0(0x4)(ConstParm, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HealthDecreasePerSecWild;                          // 0x11F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bImmuneToNormalDamage;                             // 0x11F8(0x1)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F32[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalCharacter*                      ImmobilizedCharacter;                              // 0x1200(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int8                                         CurrentTrapState;                                  // 0x1208(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int8                                         ClientPrevTrapState;                               // 0x1209(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bClosedTrap;                                       // 0x120A(0x1)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F34[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        HealthDecreasePerSec;                              // 0x120C(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       DestroyTime;                                       // 0x1210(0x8)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DestroyAfterTime;                                  // 0x1218(0x4)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseOnlyOnNonAllied;                               // 0x121C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F35[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        DamagedOnlyBy;                                     // 0x1220(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       NetworkPlacementTime;                              // 0x1230(0x8)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       OnDestroyFX;                                       // 0x1238(0x8)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPUseNotifyImmobilizedCharacterIsDeadOrInConscious : 1; // Mask: 0x1, PropSize: 0x10x1240(0x1)(ExportObject, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F38[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureBearTrap* GetDefaultObj();

	struct FHitResult TriggerTouched();
	void PeriodicalTrapDamageTimer();
	void OnRep_CurrentTrapState();
	int8 NetGotoTrapState();
	bool IsTrapPrepared();
	void HideAnimatedSK();
	void DecreaseDamageTimer();
	bool BPNotifyImmobilizedCharacterIsDeadOrInConscious(bool* IsDead);
	void BPDie();
};

// 0x118 (0x1710 - 0x15F8)
// Class ShooterGame.PrimalStructureSeating
class APrimalStructureSeating : public APrimalStructureItemContainer
{
public:
	TWeakObjectPtr<class AShooterCharacter>      SeatedCharacter;                                   // 0x15F8(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F6E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AShooterPlayerController> SeatedController;                                  // 0x1608(0x8)(Edit, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TWeakObjectPtr<class AShooterCharacter>> CharacterPerSeat;                                  // 0x1610(0x10)(ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F70[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        NumSeats;                                          // 0x1630(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F71[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SeatedCharacterLocationOffset;                     // 0x1638(0x18)(Edit, ConstParm, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              SeatedCharacterRotationOffset;                     // 0x1650(0x18)(Edit, ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSeatingSpot>                  OtherSeatingSpots;                                 // 0x1668(0x10)(Edit, ExportObject, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAdjustForLegLength : 1;                           // Mask: 0x1, PropSize: 0x10x1678(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRestrictTPVCameraYaw : 1;                         // Mask: 0x2, PropSize: 0x10x1678(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesPrimaryFire : 1;                              // Mask: 0x4, PropSize: 0x10x1678(0x1)(Edit, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesAltFire : 1;                                  // Mask: 0x8, PropSize: 0x10x1678(0x1)(ConstParm, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesItemSlotKeys : 1;                             // Mask: 0x10, PropSize: 0x10x1678(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventSeatingWhenHandcuffed : 1;                 // Mask: 0x20, PropSize: 0x10x1678(0x1)(ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowSleepingPlayers : 1;                         // Mask: 0x40, PropSize: 0x10x1678(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReleaseFindsGroundPlacement : 1;                  // Mask: 0x80, PropSize: 0x10x1678(0x1)(Edit, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowCrouchProneToSit : 1;                        // Mask: 0x1, PropSize: 0x10x1679(0x1)(Edit, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesTargeting : 1;                                // Mask: 0x2, PropSize: 0x10x1679(0x1)(Edit, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideLegacyStructureAmmoHUD : 1;                   // Mask: 0x4, PropSize: 0x10x1679(0x1)(ConstParm, ExportObject, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTraceToUnboardLocation : 1;                       // Mask: 0x8, PropSize: 0x10x1679(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_328 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F76[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TPVCameraYawRange;                                 // 0x167C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               TPVCameraOffset;                                   // 0x1680(0x18)(BlueprintVisible, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               TPVCameraOffsetMultiplier;                         // 0x1698(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        UnboardDistance;                                   // 0x16B0(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F77[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                SeatingActionText;                                 // 0x16B8(0x10)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            SeatingActionIcon;                                 // 0x16C8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             RideSound;                                         // 0x16D0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             UnrideSound;                                       // 0x16D8(0x8)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         SeatingAnimOverride;                               // 0x16E0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowAnyTeamToSit : 1;                            // Mask: 0x1, PropSize: 0x10x16E8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowOrbitCam : 1;                                // Mask: 0x2, PropSize: 0x10x16E8(0x1)(BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bPreventHandcuffLockedSeating : 1;                 // Mask: 0x4, PropSize: 0x10x16E8(0x1)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bJumpOnDetach : 1;                                 // Mask: 0x8, PropSize: 0x10x16E8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupportDynamicSeatingChanges : 1;                 // Mask: 0x10, PropSize: 0x10x16E8(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_329 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F7A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        SeatingActionPriority;                             // 0x16EC(0x4)(Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastServerUpdateSent;                              // 0x16F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F7C[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureSeating* GetDefaultObj();

	class AShooterCharacter* Release();
	void OnRep_SeatedCharacter();
	void OnRep_CharacterPerSeat();
	bool HasAvailableSeat();
	int32 GetNumTakenSeats();
	int32 GetNearestFreeSpot(class AShooterPlayerController** ForPC);
	bool Control();
	void ClearSeats();
	bool ChangeSeating();
	bool CanSeat(class AShooterPlayerController** ForPC, class AShooterCharacter** ForCharacter);
	int32 BPSeatedPlayer();
	int32 BPReleasedPlayer(class AShooterCharacter** ReleasedChar);
	bool BPPreventReleaseSeatingStructure();
	struct FVector BPOverrideUnboardLocation();
	void BPOnStopTargeting();
	void BPOnStartTargeting();
	bool BPHandleSitterPoop();
	int32 BPGetBestSeatNumber(class AShooterPlayerController** ForPC);
	bool BPAllowSeating(class AShooterPlayerController** ForPC);
};

// 0x88 (0x1798 - 0x1710)
// Class ShooterGame.PrimalStructureBed
class APrimalStructureBed : public APrimalStructureSeating
{
public:
	uint8                                        bDestroyAfterRespawnUse : 1;                       // Mask: 0x1, PropSize: 0x10x1710(0x1)(Edit, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_32D : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F82[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               PlayerSpawnLocOffset;                              // 0x1718(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              PlayerSpawnRotOffset;                              // 0x1730(0x18)(Edit, ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint32                                       LinkedPlayerID;                                    // 0x1748(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3F84[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                LinkedPlayerName;                                  // 0x1750(0x10)(ConstParm, ExportObject, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                BedName;                                           // 0x1760(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        UseCooldownTime;                                   // 0x1770(0x4)(Edit, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UseCooldownRadius;                                 // 0x1774(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AttachedToPlatformStructureEnemySpawnPreventionRadius; // 0x1778(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F87[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            FastTravelIcon;                                    // 0x1780(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       NextAllowedUseTime;                                // 0x1788(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3F89[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureBed* GetDefaultObj();

	class AShooterPlayerController* SpawnedPlayerFor(class APawn** ForPawn);
};

// 0xD0 (0x1268 - 0x1198)
// Class ShooterGame.PrimalStructureDoor
class APrimalStructureDoor : public APrimalStructure
{
public:
	class USceneComponent*                       MyDoorTransform;                                   // 0x1198(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  SecondDoorCosmeticVariantStaticMesh;               // 0x11A0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RotationSpeed;                                     // 0x11A8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F94[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundCue*                             DoorOpenSound;                                     // 0x11B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             DoorCloseSound;                                    // 0x11B8(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint32                                       CurrentPinCode;                                    // 0x11C0(0x4)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bInvertOpenCloseDirection : 1;                     // Mask: 0x1, PropSize: 0x10x11C4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupportsLocking : 1;                              // Mask: 0x2, PropSize: 0x10x11C4(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseSecondDoor : 1;                                // Mask: 0x4, PropSize: 0x10x11C4(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupportsPinLocking : 1;                           // Mask: 0x8, PropSize: 0x10x11C4(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsLocked : 1;                                     // Mask: 0x10, PropSize: 0x10x11C4(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, Config, InstancedReference, SubobjectReference)
	uint8                                        bIsPinLocked : 1;                                  // Mask: 0x20, PropSize: 0x10x11C4(0x1)(Edit, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAdminOnlyAccess : 1;                              // Mask: 0x40, PropSize: 0x10x11C4(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanBeForcedOpenByDino : 1;                        // Mask: 0x80, PropSize: 0x10x11C4(0x1)(ConstParm, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventBasingWhileMoving : 1;                     // Mask: 0x1, PropSize: 0x10x11C5(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDoorOpenIn : 1;                              // Mask: 0x2, PropSize: 0x10x11C5(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDoorOpenOut : 1;                             // Mask: 0x4, PropSize: 0x10x11C5(0x1)(Edit, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDoorMoving : 1;                                 // Mask: 0x8, PropSize: 0x10x11C5(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceStaticMobility : 1;                          // Mask: 0x10, PropSize: 0x10x11C5(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRotatePitch : 1;                                  // Mask: 0x20, PropSize: 0x10x11C5(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRotateRoll : 1;                                   // Mask: 0x40, PropSize: 0x10x11C5(0x1)(EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRotateYaw : 1;                                    // Mask: 0x80, PropSize: 0x10x11C5(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInitializedRotation : 1;                          // Mask: 0x1, PropSize: 0x10x11C6(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDoorInterpolation : 1;                     // Mask: 0x2, PropSize: 0x10x11C6(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGotoDoorState : 1;                           // Mask: 0x4, PropSize: 0x10x11C6(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideChangeDoorState : 1;                 // Mask: 0x8, PropSize: 0x10x11C6(0x1)(ConstParm, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_32F : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F95[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bForceNoPinLocking : 1;                            // Mask: 0x1, PropSize: 0x10x11C8(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDoesntAffectDinoNavigationWhileOpen : 1;          // Mask: 0x2, PropSize: 0x10x11C8(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoesntUseOpenMode : 1;                            // Mask: 0x4, PropSize: 0x10x11C8(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_330 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F96[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CurrentOpenMode;                                   // 0x11CC(0x4)(Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxOpenRotDeg;                                     // 0x11D0(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DoorStateChangeIgnoreEncroachmentInterval;         // 0x11D4(0x4)(ConstParm, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int8                                         DoorOpenState;                                     // 0x11D8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F97[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UStaticMeshComponent*                  SecondDoorMesh;                                    // 0x11E0(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F98[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              SecondDoorDefaultRot;                              // 0x11F0(0x18)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentDoorAngle;                                  // 0x1208(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F99[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            UnlockDoorSound;                                   // 0x1210(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            LockDoorSound;                                     // 0x1218(0x8)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            LockedSound;                                       // 0x1220(0x8)(ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastPinOpenSuccessTime;                            // 0x1228(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F9A[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            OpenIcon;                                          // 0x1238(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CloseIcon;                                         // 0x1240(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            OpenModeInAndOutIcon;                              // 0x1248(0x8)(BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            OpenModeAlwaysInIcon;                              // 0x1250(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            OpenModeAlwaysOutIcon;                             // 0x1258(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F9B[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureDoor* GetDefaultObj();

	void OnRep_DoorOpenState(int8* PrevDoorOpenState);
	void NetGotoDoorState(int8* DoorState);
	bool HasSamePinCode();
	int32 GetDoorState();
	void DelayedGotoDoorStateTimer();
	bool CanOpen(class APlayerController** ForPC);
	void BPSetDoorState(int32* DoorState);
	class APlayerController* BPOverrideChangeDoorState();
	void BPGotoDoorState(int32* NewDoorState);
};

// 0xD0 (0x1268 - 0x1198)
// Class ShooterGame.PrimalStructureElevatorPlatform
class APrimalStructureElevatorPlatform : public APrimalStructure
{
public:
	float                                        MaxCarryWeight;                                    // 0x1198(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Speed;                                             // 0x119C(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, SubobjectReference)
	float                                        DownSpeed;                                         // 0x11A0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ClientLocationInterpSpeed;                         // 0x11A4(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ClientLocationInterpSpeedDown;                     // 0x11A8(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UpObstructionTraceLength;                          // 0x11AC(0x4)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DownObstructionTraceLength;                        // 0x11B0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TrackTraceLength;                                  // 0x11B4(0x4)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            StartMovingSound;                                  // 0x11B8(0x8)(Edit, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            StopMovingSound;                                   // 0x11C0(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DistanceToTravel;                                  // 0x11C8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FA0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               StartLocation;                                     // 0x11D0(0x18)(ExportObject, Net, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bIsActivated : 1;                                  // Mask: 0x1, PropSize: 0x10x11E8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_331 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUpdateLocation : 1;                               // Mask: 0x4, PropSize: 0x10x11E8(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_332 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3FA1[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TWeakObjectPtr<class APrimalCharacter>> CarriedActors;                                     // 0x11F0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EPrimalStructureElevatorState     CurrentState;                                      // 0x1200(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FA2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TraveledDistance;                                  // 0x1204(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentLiftedWeight;                               // 0x1208(0x4)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPElevatorStopped;                             // 0x120C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FA3[0x1B];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        MinHeight;                                         // 0x1228(0x4)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxHeight;                                         // 0x122C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Height;                                            // 0x1230(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, EditConst)
	float                                        ReplicatedZ;                                       // 0x1234(0x4)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAddElevatorMultiUseEntries : 1;                   // Mask: 0x1, PropSize: 0x10x1238(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsLocked : 1;                                     // Mask: 0x2, PropSize: 0x10x1238(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, Config, InstancedReference, SubobjectReference)
	uint8                                        bIsPinLocked : 1;                                  // Mask: 0x4, PropSize: 0x10x1238(0x1)(Edit, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAdminOnlyAccess : 1;                              // Mask: 0x8, PropSize: 0x10x1238(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_333 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3FA4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       CurrentPinCode;                                    // 0x123C(0x4)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FA5[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            ElevateIcon;                                       // 0x1248(0x8)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DelevateIcon;                                      // 0x1250(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            StopIcon;                                          // 0x1258(0x8)(ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CallToMeIcon;                                      // 0x1260(0x8)(Edit, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureElevatorPlatform* GetDefaultObj();

	void ServerActivate(class APlayerController** ForPC, bool bForceDirection, enum class EPrimalStructureElevatorState Dir, float DistanceToTravelOverride);
	bool PlatformIsActive();
	void OnRep_bIsActivated();
	bool HasSamePinCode();
	bool HasReachedMaxWeight();
	float GetTrackHeight();
	float GetCurrentLiftedWeight();
	void GetAllTrackStructures(const TArray<class AActor*>& Tracks);
	void Deactivate(bool* bSwitchDirection, bool* bUseZPosOverride, float* ZPosOverride);
	void BPElevatorStopped(bool bSwitchedDirection, enum class EPrimalStructureElevatorState NewDirection);
	void Activate(class APlayerController** ForPC, bool bForceDirection, enum class EPrimalStructureElevatorState Dir, float DistanceToTravelOverride);
};

// 0x18 (0x1610 - 0x15F8)
// Class ShooterGame.PrimalStructureElevatorTrack
class APrimalStructureElevatorTrack : public APrimalStructureItemContainer
{
public:
	bool                                         bHasBase;                                          // 0x15F8(0x1)(ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FAC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class APrimalStructureElevatorPlatform> ElevatorBase;                                      // 0x15FC(0x8)(Edit, BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAddElevatorMultiUseEntries : 1;                   // Mask: 0x1, PropSize: 0x10x1604(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRequiresPower : 1;                                // Mask: 0x2, PropSize: 0x10x1604(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_334 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3FAD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TrackTopPoint;                                     // 0x1608(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TrackBottomPoint;                                  // 0x160C(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureElevatorTrack* GetDefaultObj();

	class APrimalStructureElevatorPlatform* SetElevatorBase();
	class APrimalStructureElevatorPlatform* MulticastSetElevatorBase();
	bool HasPlatformAttachedToTheTrack();
	void ClientHasPlatform();
	class APrimalStructureElevatorPlatform* BPGetElevatorPlatform();
};

// 0xE0 (0x1278 - 0x1198)
// Class ShooterGame.PrimalStructureExplosive
class APrimalStructureExplosive : public APrimalStructure
{
public:
	uint32                                       ConstructorPlayerDataID;                           // 0x1198(0x4)(Edit, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FB0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterCharacter*                     ConstructorPawn;                                   // 0x11A0(0x8)(ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ConstructorTargetingTeam;                          // 0x11A8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_335 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAnimatePlacement : 1;                             // Mask: 0x2, PropSize: 0x10x11AC(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_336 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3FB1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ExplosiveLocOffset;                                // 0x11B0(0x18)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              ExplosiveRotOffset;                                // 0x11C8(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlacementInitialSpeed;                             // 0x11E0(0x4)(Edit, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlacementMaxSpeed;                                 // 0x11E4(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlacementAccel;                                    // 0x11E8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExplosionDamage;                                   // 0x11EC(0x4)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ExplosionRadius;                                   // 0x11F0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ExplosionImpulse;                                  // 0x11F4(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UClass*                                ExplosionDamageType;                               // 0x11F8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ExplosiveAmmoItemTemplate;                         // 0x1200(0x8)(ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlertDinos : 1;                                   // Mask: 0x1, PropSize: 0x10x1208(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_337 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3FB5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AlertDinosRange;                                   // 0x120C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PickupItemClass;                                   // 0x1210(0x8)(BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        PickUpQuantity;                                    // 0x1218(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FB6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UStaticMeshComponent*                  AnimatedComponent;                                 // 0x1220(0x8)(BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FluidSimSplashStrength;                            // 0x1228(0x4)(BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FB7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x1230(0x8)(Edit, ExportObject, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3FB8[0x40];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureExplosive* GetDefaultObj();

	void NetIgnoreDestructionEvents();
	void ApplyPlacementPreview();
};

// 0x128 (0x1720 - 0x15F8)
// Class ShooterGame.PrimalStructureItemContainer_CropPlot
class APrimalStructureItemContainer_CropPlot : public APrimalStructureItemContainer
{
public:
	class UClass*                                SeedBaseItemTemplate;                              // 0x15F8(0x8)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                FertilizerBaseItemTemplate;                        // 0x1600(0x8)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                WaterNearbyStructureTemplate;                      // 0x1608(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CropRefreshIntervalMin;                            // 0x1610(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CropRefreshIntervalMax;                            // 0x1614(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WaterNearbyStructureRange;                         // 0x1618(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxWaterAmount;                                    // 0x161C(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ActiveRainWaterIncreaseSpeed;                      // 0x1620(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AverageRainWaterIncreaseMultiplier;                // 0x1624(0x4)(BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WaterItemAmountMultiplier;                         // 0x1628(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FD4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ExtraCropMeshScale;                                // 0x1630(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CropRefreshInterval;                               // 0x1648(0x4)(Edit, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CropPhaseFertilizerCache;                          // 0x164C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CropFruitFertilizerCache;                          // 0x1650(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesCrop : 1;                                     // Mask: 0x1, PropSize: 0x10x1654(0x1)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsWaterTank : 1;                                  // Mask: 0x2, PropSize: 0x10x1654(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGainWaterOverTime : 1;                            // Mask: 0x4, PropSize: 0x10x1654(0x1)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoFill : 1;                                     // Mask: 0x8, PropSize: 0x10x1654(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoMaxWaterAndFertilize : 1;                     // Mask: 0x10, PropSize: 0x10x1654(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoMaxGreenhouseEffect : 1;                      // Mask: 0x20, PropSize: 0x10x1654(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontAddWaterOnInventoryItemUsed : 1;              // Mask: 0x40, PropSize: 0x10x1654(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowOpenToSky : 1;                               // Mask: 0x80, PropSize: 0x10x1654(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetAdditionalGrowthMultiplier : 1;           // Mask: 0x1, PropSize: 0x10x1655(0x1)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsFertilized : 1;                                 // Mask: 0x2, PropSize: 0x10x1655(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsWatered : 1;                                    // Mask: 0x4, PropSize: 0x10x1655(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsSeeded : 1;                                     // Mask: 0x8, PropSize: 0x10x1655(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasFruitItems : 1;                                // Mask: 0x10, PropSize: 0x10x1655(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCropUsesGreenhouse : 1;                           // Mask: 0x20, PropSize: 0x10x1655(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowWaterAmount : 1;                              // Mask: 0x40, PropSize: 0x10x1655(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_339 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class ESeedCropPhase                    CurrentCropPhase;                                  // 0x1656(0x1)(Edit, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FDB[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                PlantedCrop;                                       // 0x1658(0x8)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalStructureItemContainer> IrrigationWaterTap;                                // 0x1660(0x8)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastCropRefreshTime;                               // 0x1668(0x8)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FDD[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UStaticMeshComponent*>          MyCropMeshes;                                      // 0x1680(0x10)(ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class APrimalStructure*                      MyCropStructure;                                   // 0x1690(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       CropRefreshTimeCache;                              // 0x1698(0x8)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        FertilizerAmount;                                  // 0x16A0(0x4)(Edit, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WaterAmount;                                       // 0x16A4(0x4)(ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        NumGreenHouseStructures;                           // 0x16A8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FE0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        WateringItemTemplates;                             // 0x16B0(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FertilizerConsumptionRateMultiplier;               // 0x16C0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FE1[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                WateredOverridesCraftingItemTemplate;              // 0x16D0(0x8)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinWateredOverridesCrafting;                       // 0x16D8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxGreenHouseStructures;                           // 0x16DC(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxGreenHouseCropGrowthMultiplier;                 // 0x16E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GainWaterRate;                                     // 0x16E4(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FE6[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CropMaxFruitsMultiplier;                           // 0x16F0(0x4)(Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FE8[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            FertilizerOnIcon;                                  // 0x1700(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FertilizerOffIcon;                                 // 0x1708(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DestroyPlantedCropIcon;                            // 0x1710(0x8)(Edit, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustCropYield_Max : 1;                     // Mask: 0x1, PropSize: 0x10x1718(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustCropYield_SingleRefresh : 1;           // Mask: 0x2, PropSize: 0x10x1718(0x1)(EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnCropPhaseIncrease : 1;                     // Mask: 0x4, PropSize: 0x10x1718(0x1)(ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnCropPhaseDecrease : 1;                     // Mask: 0x8, PropSize: 0x10x1718(0x1)(BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnHarvestItemsCreated : 1;                   // Mask: 0x10, PropSize: 0x10x1718(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnRemovedCrop : 1;                           // Mask: 0x20, PropSize: 0x10x1718(0x1)(ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnRefreshCrop : 1;                           // Mask: 0x40, PropSize: 0x10x1718(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnNotifyCraftedItem : 1;                     // Mask: 0x80, PropSize: 0x10x1718(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnFertilizerItemUsedUp : 1;                  // Mask: 0x1, PropSize: 0x10x1719(0x1)(ConstParm, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FEF[0x6];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureItemContainer_CropPlot* GetDefaultObj();

	void RemovePlantedCrop();
	void RefreshFertilized();
	void OnRep_WaterAmount();
	class UClass* OnRep_PlantedCrop();
	bool OnRep_HasFruitItems();
	enum class ESeedCropPhase OnRep_CurrentCropPhase();
	float GetGreenHouseCropGrowthMultiplier();
	void BPOnRemovedCrop();
	float BPOnRefreshCrop();
	class UPrimalItem* BPOnNotifyCraftedItem();
	TArray<class UPrimalItem*> BPOnHarvestItemsCreated();
	void BPOnFertilizerItemUsedUp();
	int32 BPOnCropPhaseIncrease();
	int32 BPOnCropPhaseDecrease();
	float BPGetAdditionalGrowthMultiplier();
	void BPClientUpdateWaterAmount();
	int32 BPAdjustCropYield_SingleRefresh();
	int32 BPAdjustCropYield_Max();
	float AddWater(float* Amount);
};

// 0x30 (0x1750 - 0x1720)
// Class ShooterGame.PrimalStructureItemContainer_CropPlot_VisualItems
class APrimalStructureItemContainer_CropPlot_VisualItems : public APrimalStructureItemContainer_CropPlot
{
public:
	class UStaticMeshComponent*                  MyExtraStaticMesh;                                 // 0x1720(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UStaticMesh*                           ExtraStaticMesh_NoItems;                           // 0x1728(0x8)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UStaticMesh*                           ExtraStaticMesh_HasItems;                          // 0x1730(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ItemClassesToCheck;                                // 0x1738(0x10)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasItems : 1;                                     // Mask: 0x1, PropSize: 0x10x1748(0x1)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoItemVisuals : 1;                                // Mask: 0x2, PropSize: 0x10x1748(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FF9[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureItemContainer_CropPlot_VisualItems* GetDefaultObj();

	void OnRep_HasItems();
	void BPUpdateItemVisuals();
};

// 0x220 (0x1818 - 0x15F8)
// Class ShooterGame.PrimalStructureItemContainer_SupplyCrate
class APrimalStructureItemContainer_SupplyCrate : public APrimalStructureItemContainer
{
public:
	float                                        MinItemSets;                                       // 0x15F8(0x4)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MaxItemSets;                                       // 0x15FC(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        NumItemSetsPower;                                  // 0x1600(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSetsRandomWithoutReplacement;                     // 0x1604(0x1)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4000[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinQualityMultiplier;                              // 0x1608(0x4)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MaxQualityMultiplier;                              // 0x160C(0x4)(Edit, Net, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        AboveOneExtraQualityMultiplier;                    // 0x1610(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4001[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSupplyCrateItemSet>           ItemSets;                                          // 0x1618(0x10)(BlueprintVisible, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UClass*                                ItemSetsOverride;                                  // 0x1628(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSupplyCrateItemSet>           AdditionalItemSets;                                // 0x1630(0x10)(ExportObject, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                AdditionalItemSetsOverride;                        // 0x1640(0x8)(ConstParm, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        RequiredLevelToAccess;                             // 0x1648(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxLevelToAccess;                                  // 0x164C(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InitialTimeToLoseHealth;                           // 0x1650(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IntervalTimeToLoseHealth;                          // 0x1654(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IntervalPercentHealthToLose;                       // 0x1658(0x4)(ExportObject, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4004[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               HUDWorldOffset;                                    // 0x1660(0x18)(EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGeneratedCrateItems : 1;                          // Mask: 0x1, PropSize: 0x10x1678(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsBonusCrate : 1;                                 // Mask: 0x2, PropSize: 0x10x1678(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsQuestCrate : 1;                                 // Mask: 0x4, PropSize: 0x10x1678(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSpawnCrateOnTopOfStructures : 1;                  // Mask: 0x8, PropSize: 0x10x1678(0x1)(Edit, ConstParm, Net, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bAppliedBuff : 1;                                  // Mask: 0x10, PropSize: 0x10x1678(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_33E : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4005[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class ASupplyCrateSpawningVolume> LinkedToCrateSpawnVolume;                          // 0x167C(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4006[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TWeakObjectPtr<class APrimalDinoCharacter>> LinkedNPCs;                                        // 0x1688(0x10)(Edit, ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4008[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SpawnInInDamageCollisionBoxExtent;                 // 0x16B0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsUnderWaterCrate;                                // 0x16C8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_400A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CrateMovementDuration;                             // 0x16CC(0x4)(Edit, ConstParm, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UCurveVector*                          CrateLocationCurve;                                // 0x16D0(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UCurveVector*                          CrateRotationCurve;                                // 0x16D8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECrateMovementMode                CrateMovementMode;                                 // 0x16E0(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_400C[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             ServerCrateMovementUpdateRateMinMax;               // 0x16E8(0x10)(ConstParm, BlueprintReadOnly, Net, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             ClientCrateMovementUpdateRateMinMax;               // 0x16F8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    InvisibleMaterial;                                 // 0x1708(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableHideSupplyCratesCheck : 1;                  // Mask: 0x1, PropSize: 0x10x1710(0x1)(ConstParm, BlueprintVisible, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_342 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_400E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          CrateColorParameter;                               // 0x1714(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_400F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UCurveFloat*                           CrateDissolveCurve;                                // 0x1728(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                CrateSpawnInLocationEffect;                        // 0x1730(0x8)(Edit, ConstParm, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInventoryAccessOnlyActivated : 1;                 // Mask: 0x1, PropSize: 0x10x1738(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_343 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4012[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalEmitterSpawnable*               CrateSpawnInLocationEffectRef;                     // 0x1740(0x8)(Edit, ConstParm, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMeshComponent*                        RenderedCrateMeshComponent;                        // 0x1748(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               FinalCrateLocation;                                // 0x1750(0x18)(Edit, ConstParm, ExportObject, Net, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              FinalCrateRotation;                                // 0x1768(0x18)(Edit, Net, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CurrentCrateLocation;                              // 0x1780(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              CurrentCrateRotation;                              // 0x1798(0x18)(Edit, ConstParm, ExportObject, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CurrentCrateRelLocation;                           // 0x17B0(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       StartedCrateMovementTime;                          // 0x17C8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       NextCrateMovementUpdateTime;                       // 0x17D0(0x8)(ConstParm, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentCrateCurveTime;                             // 0x17D8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CrateStartHeight;                                  // 0x17DC(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFinishedCrateMovement : 1;                        // Mask: 0x1, PropSize: 0x10x17E0(0x1)(Edit, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWantsOriginalMats : 1;                            // Mask: 0x2, PropSize: 0x10x17E0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsCrateRendered : 1;                              // Mask: 0x4, PropSize: 0x10x17E0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupplyCrateHidden : 1;                            // Mask: 0x8, PropSize: 0x10x17E0(0x1)(BlueprintVisible, Net, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_345 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4016[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UMaterialInterface*>            OriginalMaterials;                                 // 0x17E8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       NextCheckHideSupplyCratesTime;                     // 0x17F8(0x8)(ConstParm, ExportObject, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimalWindSourceComponent*            WindSourceComponentRef;                            // 0x1800(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentFadeOutTime;                                // 0x1808(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyWindSourceComponentOnLand : 1;             // Mask: 0x1, PropSize: 0x10x180C(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_346 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4019[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            SurvivorLevelUpIcon;                               // 0x1810(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureItemContainer_SupplyCrate* GetDefaultObj();

	void TickFadeOut();
	void StartLosingHealth();
	bool SetAppliedBuff();
	void OnRep_FinishedCrateMovement();
	void LoseHealth();
};

// 0x28 (0x1840 - 0x1818)
// Class ShooterGame.PrimalStructureItemContainer_HordeCrate
class APrimalStructureItemContainer_HordeCrate : public APrimalStructureItemContainer_SupplyCrate
{
public:
	class UMaterialInterface*                    ElementPostProcessMaterial;                        // 0x1818(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CrateLoc;                                          // 0x1820(0x18)(Edit, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastGameplayRelevantTime;                          // 0x1838(0x8)(BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureItemContainer_HordeCrate* GetDefaultObj();

	void SpawnElementNodePostProcess();
};

// 0x30 (0x1628 - 0x15F8)
// Class ShooterGame.PrimalStructureItemContainer_VisualItems
class APrimalStructureItemContainer_VisualItems : public APrimalStructureItemContainer
{
public:
	class UStaticMeshComponent*                  MyExtraStaticMesh;                                 // 0x15F8(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UStaticMesh*                           ExtraStaticMesh_NoItems;                           // 0x1600(0x8)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UStaticMesh*                           ExtraStaticMesh_HasItems;                          // 0x1608(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ItemClassesToCheck;                                // 0x1610(0x10)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreBlueprints;                                 // 0x1620(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreEngrams;                                    // 0x1621(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasItems : 1;                                     // Mask: 0x1, PropSize: 0x10x1622(0x1)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoItemVisuals : 1;                                // Mask: 0x2, PropSize: 0x10x1622(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreviousHasItems : 1;                             // Mask: 0x4, PropSize: 0x10x1622(0x1)(BlueprintVisible, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4024[0x5];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureItemContainer_VisualItems* GetDefaultObj();

	void UpdateVisuals();
	void OnRep_HasItems();
	void BPUpdateItemVisuals();
};

// 0x10 (0x1608 - 0x15F8)
// Class ShooterGame.PrimalStructureKeypad
class APrimalStructureKeypad : public APrimalStructureItemContainer
{
public:
	float                                        DoorActivationRange;                               // 0x15F8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_402F[0xC];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureKeypad* GetDefaultObj();

	bool ActivateKeypad(class AShooterPlayerController** ForPC, bool* bEnable);
};

// 0x70 (0x1208 - 0x1198)
// Class ShooterGame.PrimalStructureLadder
class APrimalStructureLadder : public APrimalStructure
{
public:
	float                                        LadderTopPoint;                                    // 0x1198(0x4)(Edit, ExportObject, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LadderBottomPoint;                                 // 0x119C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              LadderClimbRotationOffset;                         // 0x11A0(0x18)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_347 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bCanRetract : 1;                                   // Mask: 0x8, PropSize: 0x10x11B8(0x1)(ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanRetractFromBottom : 1;                         // Mask: 0x10, PropSize: 0x10x11B8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsRetracted : 1;                                  // Mask: 0x20, PropSize: 0x10x11B8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasLowerLaddersRetracted : 1;                     // Mask: 0x40, PropSize: 0x10x11B8(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowPublicRetraction : 1;                        // Mask: 0x80, PropSize: 0x10x11B8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4041[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            LadderRetractionSound;                             // 0x11C0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            LadderUnretractionSound;                           // 0x11C8(0x8)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ClimbUpIcon;                                       // 0x11D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ClimbDownIcon;                                     // 0x11D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            JumpIcon;                                          // 0x11E0(0x8)(BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ExtendLadderIcon;                                  // 0x11E8(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RetractLadderIcon;                                 // 0x11F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnablePublicRetractionIcon;                        // 0x11F8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisablePublicRetractionIcon;                       // 0x1200(0x8)(Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureLadder* GetDefaultObj();

	void UpdateRetraction();
	class AShooterCharacter* EndClimbingLadder(bool bServerClimbOver, const struct FVector& ServerClimbOverLoc, bool bIsFromJump);
	void BP_SetLaddersRetracted(bool bRetract);
};

// 0x40 (0x1638 - 0x15F8)
// Class ShooterGame.PrimalStructureMovingContainer
class APrimalStructureMovingContainer : public APrimalStructureItemContainer
{
public:
	struct FVector                               FinalLocation;                                     // 0x15F8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ItemBalloonLocation;                               // 0x1610(0x18)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint16                                       ItemLatitude;                                      // 0x1628(0x2)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint16                                       ItemLongitude;                                     // 0x162A(0x2)(Edit, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LocationName;                                      // 0x162C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasSetLocation;                                   // 0x1630(0x1)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_404E[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureMovingContainer* GetDefaultObj();

};

// 0x1C0 (0x680 - 0x4C0)
// Class ShooterGame.PrimalStructurePlacer
class APrimalStructurePlacer : public AInfo
{
public:
	uint8                                        Pad_405F[0x60];                                    // Fixing Size After Last Property  > TateDumper <
	enum class EPrimalStructurePlacerState       CurrentState;                                      // 0x520(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4060[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CurrentPlacingStructureIndex;                      // 0x524(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class APrimalStructure*                      CurrentPlacingStructure;                           // 0x528(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class APrimalStructure*                      CurrentSnapTarget;                                 // 0x530(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDebugStructures : 1;                              // Mask: 0x1, PropSize: 0x10x538(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDisplayMissionAreaStructureNoBuildZones : 1; // Mask: 0x2, PropSize: 0x10x538(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_348 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIgnoreOptionalSnaps : 1;                          // Mask: 0x80, PropSize: 0x10x538(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4061[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class APrimalStructure>> PlaceableStructures;                               // 0x540(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        PlacingAlignmentMode;                              // 0x550(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        PlacingRotationMode;                               // 0x554(0x4)(Edit, BlueprintReadOnly, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RotationAxisName;                                  // 0x558(0x8)(ExportObject, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RotationSpeed;                                     // 0x560(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AltRotationAxisName;                               // 0x564(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AltRotationSpeed;                                  // 0x56C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FCanvasIcon                           RotationIcon;                                      // 0x570(0x18)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RotationIconSize;                                  // 0x588(0x4)(BlueprintVisible, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RotationIconScale;                                 // 0x58C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PitchAxisName;                                     // 0x590(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PitchSpeed;                                        // 0x598(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AltPitchAxisName;                                  // 0x59C(0x8)(Edit, ConstParm, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AltPitchSpeed;                                     // 0x5A4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        YawOffset;                                         // 0x5A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        YawOffsetIncrement;                                // 0x5AC(0x4)(Edit, ConstParm, ExportObject, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UCurveFloat*                           PreviewMaterialLuminanceCurve;                     // 0x5B0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                PressUseString;                                    // 0x5B8(0x10)(Edit, ConstParm, BlueprintReadOnly, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                HoldUseString;                                     // 0x5C8(0x10)(Edit, ConstParm, ExportObject, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                KeyUseString;                                      // 0x5D8(0x10)(BlueprintVisible, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GamepadButtonUse;                                  // 0x5E8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                PressGiveDefaultWeaponString;                      // 0x5F0(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                HoldGiveDefaultWeaponString;                       // 0x600(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                KeyGiveDefaultWeaponString;                        // 0x610(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GamepadButtonGiveDefaultWeapon;                    // 0x620(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                KeyReloadString;                                   // 0x628(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GamepadReload;                                     // 0x638(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                NumVariantsString;                                 // 0x640(0x10)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_406A[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class UPrimalItem>            CurrentlyPlacingWithItem;                          // 0x678(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructurePlacer* GetDefaultObj();

	void SetForceDisplayMissionAreaStructureNoBuildZones(bool* bForceDisplay);
	void SetChoosingRotation(bool* bNewChoosingRotation);
	bool IsPlacingActive();
	void HandleSnapCycleActionTimer();
	void HandleOnUseActionTimer();
	void GetLastPlacementProperties(struct FVector* OutLastHitLoc, struct FRotator* OutLastHitRot, struct FRotator* OutLastViewRot);
	class AShooterHUD* DrawStructurePreviewHUD(class APrimalStructure** PlacingStructure);
};

// 0xB0 (0x12B8 - 0x1208)
// Class ShooterGame.PrimalStructurePortableLadder
class APrimalStructurePortableLadder : public APrimalStructureLadder
{
public:
	float                                        MaximumHeightAllowedForLadder;                     // 0x1208(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_406C[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                BottomAnimBlueprint;                               // 0x1220(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MidAnimBlueprint;                                  // 0x1228(0x8)(BlueprintVisible, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          MidRetractedAnimMontageBlueprint;                  // 0x1230(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          BottomRetractedAnimMontageBlueprint;               // 0x1238(0x8)(Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          MidAnimMontageBlueprint;                           // 0x1240(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          BottomAnimMontageBlueprint;                        // 0x1248(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          MidAnimMontageExtendedBlueprint;                   // 0x1250(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          BottomAnimMontageExtendedBlueprint;                // 0x1258(0x8)(ConstParm, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USkeletalMesh*                         MidSkeletalMesh;                                   // 0x1260(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USkeletalMesh*                         MyBottomSkeletalMesh;                              // 0x1268(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class USkeletalMeshComponent*>        MidLadderSkeletalMeshs;                            // 0x1270(0x10)(ConstParm, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                BottomLadderSkeletalMesh;                          // 0x1280(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class USkeletalMeshComponent*>        SkeletalMeshsForAnimation;                         // 0x1288(0x10)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_406F[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bisDonePlacing : 1;                                // Mask: 0x1, PropSize: 0x10x12A8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4070[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructurePortableLadder* GetDefaultObj();

	void UpdateLadder();
	bool UpdateBoxCollisionForRetraction();
	void PlaySetupAnimation();
	void BuildLadder();
};

// 0xA8 (0x1240 - 0x1198)
// Class ShooterGame.PrimalStructureSeaMine
class APrimalStructureSeaMine : public APrimalStructure
{
public:
	class USphereComponent*                      TriggerComponent;                                  // 0x1198(0x8)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USphereComponent*                      ExplodingTriggerComponent;                         // 0x11A0(0x8)(BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       ActivatedMineParticleSystem;                       // 0x11A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ActivatedMineParticleSystemOffset;                 // 0x11B0(0x18)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UMaterialInterface*>            ActivateMaterials;                                 // 0x11C8(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            ActivatedSound;                                    // 0x11D8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SeaMineSpeed;                                      // 0x11E0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SeaMineExplodeTime;                                // 0x11E4(0x4)(ConstParm, ExportObject, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExplosionDamage;                                   // 0x11E8(0x4)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ExplosionRadius;                                   // 0x11EC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ExplosionImpulse;                                  // 0x11F0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4082[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ExplosionDamageType;                               // 0x11F8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        OwnerTargetingTeam;                                // 0x1200(0x4)(ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4085[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class APrimalCharacter*>              TriggerOverlappingCharacters;                      // 0x1208(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bActivatedSeaMine : 1;                             // Mask: 0x1, PropSize: 0x10x1218(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableExplosion : 1;                             // Mask: 0x2, PropSize: 0x10x1218(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_349 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4087[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LastKnownTargetLocation;                           // 0x1220(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      SeaMineTarget;                                     // 0x1238(0x8)(ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureSeaMine* GetDefaultObj();

	void RefreshSeaMineTarget();
	int32 OnTriggerEndOverlap(class AActor* Other);
	struct FHitResult OnTriggerBeginOverlap(class AActor* Other);
	void OnRep_SeaMineTarget();
	struct FHitResult OnHit(const struct FVector& NormalImpulse);
	struct FHitResult OnExplodingTriggerBeginOverlap(class AActor* Other);
	void Explode();
};

// 0x58 (0x1768 - 0x1710)
// Class ShooterGame.PrimalStructureSeatingMusic
class APrimalStructureSeatingMusic : public APrimalStructureSeating
{
public:
	class UStaticMeshComponent*                  StickMesh1;                                        // 0x1710(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  StickMesh2;                                        // 0x1718(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StickMeshAttachPoint1;                             // 0x1720(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StickMeshAttachPoint2;                             // 0x1728(0x8)(Edit, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class USoundBase*>                    InstrumentSounds;                                  // 0x1730(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UAnimMontage*>                  InstrumentPawnAnimations;                          // 0x1740(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinimumTimeBetweenPlays;                           // 0x1750(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4088[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<double>                               LastPlayInstrumentTime;                            // 0x1758(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureSeatingMusic* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class ShooterGame.PrimalStructureSettings
class UPrimalStructureSettings : public UObject
{
public:
	class FName                                  TierTag;                                           // 0x28(0x8)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDamageTypeAdjuster>           BaseDamageTypeAdjusters;                           // 0x30(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDamageTypeAdjuster>           ExtraDamageTypeAdjusters;                          // 0x40(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DecayDestructionPeriodMultiplier;                  // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4089[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalStructureSettings* GetDefaultObj();

};

// 0x38 (0x11D0 - 0x1198)
// Class ShooterGame.PrimalStructureSign
class APrimalStructureSign : public APrimalStructure
{
public:
	class FString                                SignText;                                          // 0x1198(0x10)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SignWidth;                                         // 0x11A8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxNumberofCharacters;                             // 0x11AC(0x4)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinFontSize;                                       // 0x11B0(0x4)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DefaultScale;                                      // 0x11B4(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTextRenderComponent*                  TextRender;                                        // 0x11B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            SetSignTextIcon;                                   // 0x11C0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_408A[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureSign* GetDefaultObj();

	class FString OnRep_SignText();
};

// 0x20 (0x1288 - 0x1268)
// Class ShooterGame.PrimalStructureSkeletalDoor
class APrimalStructureSkeletalDoor : public APrimalStructureDoor
{
public:
	class USkeletalMeshComponent*                SkeletalDoorComponent;                             // 0x1268(0x8)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UShapeComponent*                       DoorCollisionComponent;                            // 0x1270(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UShapeComponent*                       TriggerComponent;                                  // 0x1278(0x8)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                BuffToApplyWhenInsideStructure;                    // 0x1280(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureSkeletalDoor* GetDefaultObj();

	int32 OnEndOverlap();
	struct FHitResult OnBeginOverlap();
	int32 GetDoorOpenState();
};

// 0x98 (0x450 - 0x3B8)
// Class ShooterGame.PrimalStructureToolTipWidget
class UPrimalStructureToolTipWidget : public UToolTipWidget
{
public:
	class UClass*                                ItemsToDisplayModuleTemplate;                      // 0x3B8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_408D[0x90];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalStructureToolTipWidget* GetDefaultObj();

};

// 0x8 (0x11A0 - 0x1198)
// Class ShooterGame.PrimalStructureTribeFlag
class APrimalStructureTribeFlag : public APrimalStructure
{
public:
	uint32                                       TribeID;                                           // 0x1198(0x4)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_408E[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureTribeFlag* GetDefaultObj();

};

// 0xB0 (0x1328 - 0x1278)
// Class ShooterGame.PrimalStructureTripwire
class APrimalStructureTripwire : public APrimalStructureExplosive
{
public:
	class UParticleSystemComponent*              WireComponent;                                     // 0x1278(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UBoxComponent*                         TriggerComponent;                                  // 0x1280(0x8)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              CableRotOffset;                                    // 0x1288(0x18)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaximumCableLength;                                // 0x12A0(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyPrimalCharacters : 1;                         // Mask: 0x1, PropSize: 0x10x12A4(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreAllies : 1;                                 // Mask: 0x2, PropSize: 0x10x12A4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNotifyTripChat : 1;                               // Mask: 0x4, PropSize: 0x10x12A4(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowingWireComponent : 1;                         // Mask: 0x8, PropSize: 0x10x12A4(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceIgnoreAllies : 1;                            // Mask: 0x10, PropSize: 0x10x12A4(0x1)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceIgnoreWildDinos : 1;                         // Mask: 0x20, PropSize: 0x10x12A4(0x1)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoingWireCheck : 1;                               // Mask: 0x40, PropSize: 0x10x12A4(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUnwiredTrap : 1;                                  // Mask: 0x80, PropSize: 0x10x12A4(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowToggleForceIgnoreAllies : 1;                 // Mask: 0x1, PropSize: 0x10x12A5(0x1)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowToggleForceIgnoreWildDinos : 1;              // Mask: 0x2, PropSize: 0x10x12A5(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_34C : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4091[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            NotifyTripChatSound;                               // 0x12A8(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                BoxName;                                           // 0x12B0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalStructureTripwire*              ConnectedTo;                                       // 0x12C0(0x8)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        OwnerTargetingTeam;                                // 0x12C8(0x4)(ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4092[0x2C];                                    // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            RewireIcon;                                        // 0x12F8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            UnwireIcon;                                        // 0x1300(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableTripAlliesIcon;                              // 0x1308(0x8)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableTripAlliesIcon;                             // 0x1310(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableTripWildDinosIcon;                           // 0x1318(0x8)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableTripWildDinosIcon;                          // 0x1320(0x8)(BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureTripwire* GetDefaultObj();

	void WireCheck();
	struct FHitResult TriggerTouched(class AActor* Other);
	class APrimalStructureTripwire* SetConnectedTo();
	void OnRep_UnwiredTrap();
	void OnRep_ConnectedTo();
	void NetUpdateBoxName(class FString* NewName);
	class APrimalStructureTripwire* Multicast_ConnectedTo();
	void DisconnectMe();
};

// 0x270 (0x1868 - 0x15F8)
// Class ShooterGame.PrimalStructureTurret
class APrimalStructureTurret : public APrimalStructureItemContainer
{
public:
	TWeakObjectPtr<class AActor>                 WeakTarget;                                        // 0x15F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastFindTargetTime;                                // 0x1600(0x8)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                AmmoItemTemplate;                                  // 0x1608(0x8)(ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MuzzleFlashEmitter;                                // 0x1610(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DuplicateTransient)
	float                                        FireInterval;                                      // 0x1618(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4099[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastFireTime;                                      // 0x1620(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	double                                       LastLongReloadStartTime;                           // 0x1628(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxFireYawDelta;                                   // 0x1630(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxFirePitchDelta;                                 // 0x1634(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               TargetingLocOffset;                                // 0x1638(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TargetingRotationInterpSpeed;                      // 0x1650(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NonTargetingRotationInterpSpeed;                   // 0x1654(0x4)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TargetingRanges[0x3];                              // 0x1658(0xC)(ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_409B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               TargetingTraceOffset;                              // 0x1668(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                FireDamageType;                                    // 0x1680(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FireDamageAmount;                                  // 0x1688(0x4)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FireDamageImpulse;                                 // 0x168C(0x4)(ConstParm, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       TrailFX;                                           // 0x1690(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              TurretAimRotOffset;                                // 0x1698(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               AimTargetLocOffset;                                // 0x16B0(0x18)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PlayerProneTargetOffset;                           // 0x16C8(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AimSpread;                                         // 0x16E0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseNoWarning : 1;                                 // Mask: 0x1, PropSize: 0x10x16E4(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseLevelLimitsForTargeting : 1;                   // Mask: 0x2, PropSize: 0x10x16E4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseInclusionListTargeting : 1;                    // Mask: 0x4, PropSize: 0x10x16E4(0x1)(Edit, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseNoAmmo : 1;                                    // Mask: 0x8, PropSize: 0x10x16E4(0x1)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyUseAmmoOnDamage : 1;                          // Mask: 0x10, PropSize: 0x10x16E4(0x1)(Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasOmniDirectionalFire : 1;                       // Mask: 0x20, PropSize: 0x10x16E4(0x1)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFireProjectiles : 1;                              // Mask: 0x40, PropSize: 0x10x16E4(0x1)(ConstParm, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClientFireProjectile : 1;                         // Mask: 0x80, PropSize: 0x10x16E4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsTargeting : 1;                                  // Mask: 0x1, PropSize: 0x10x16E5(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInWaterOnlyTargetWater : 1;                       // Mask: 0x2, PropSize: 0x10x16E5(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTurretIgnoreProjectiles : 1;                      // Mask: 0x4, PropSize: 0x10x16E5(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPTurretPreventsTargeting : 1;                 // Mask: 0x8, PropSize: 0x10x16E5(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAimIgnoreSockets : 1;                             // Mask: 0x10, PropSize: 0x10x16E5(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTurretIsDisabledTooManyNearbyTurrets : 1;         // Mask: 0x20, PropSize: 0x10x16E5(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAmmoFromNearbyContainer : 1;                   // Mask: 0x40, PropSize: 0x10x16E5(0x1)(Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseMaxInventoryForAmmoContainerReload : 1;        // Mask: 0x80, PropSize: 0x10x16E5(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsTargetListInclusion : 1;                        // Mask: 0x1, PropSize: 0x10x16E6(0x1)(Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_352 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        RangeSetting;                                      // 0x16E7(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        AISetting;                                         // 0x16E8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        WarningSetting;                                    // 0x16E9(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_409C[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MinTargetLevel;                                    // 0x16EC(0x4)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxTargetLevel;                                    // 0x16F0(0x4)(ConstParm, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_409D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        DinoTargetList;                                    // 0x16F8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumBullets;                                        // 0x1708(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumBulletsPerShot;                                 // 0x170C(0x4)(ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        LongAmmoReloadCD;                                  // 0x1710(0x4)(Edit, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxAmmoContainerReloadPercent;                     // 0x1714(0x4)(Edit, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AlwaysEnableFastTurretTargetingOverVelocity;       // 0x1718(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_409E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ProjectileClass;                                   // 0x1720(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        WarningExpirationTime;                             // 0x1728(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_409F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                WarningEmitterShort;                               // 0x1730(0x8)(Edit, ConstParm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                WarningEmitterLong;                                // 0x1738(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BatteryIntervalFromActivationBeforeFiring;         // 0x1740(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40A0[0x1C];                                    // Fixing Size After Last Property  > TateDumper <
	class UChildActorComponent*                  MyChildEmitterTargetingEffect;                     // 0x1760(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              DefaultTurretAimRotOffset;                         // 0x1768(0x18)(Edit, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               MuzzleLocOffset;                                   // 0x1780(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40A1[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MagazineSize;                                      // 0x17A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RangeToCheckForAmmo;                               // 0x17A4(0x4)(ConstParm, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AmmoBoxReloadCooldown;                             // 0x17A8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40A3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UStaticMeshComponent*                  CopySettingsRangeMesh;                             // 0x17B0(0x8)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40A4[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            ShowCopySettingsVisualIcon;                        // 0x17C8(0x8)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            HideCopySettingsVisualIcon;                        // 0x17D0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CopySettingsIcon;                                  // 0x17D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CopySettingsInRangeIcon;                           // 0x17E0(0x8)(ExportObject, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CopySettingsInRangeWithPinCodeIcon;                // 0x17E8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TargetingOptionsIcon;                              // 0x17F0(0x8)(Edit, ConstParm, ExportObject, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    RangeSettingIcons;                                 // 0x17F8(0x10)(ExportObject, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    AISettingIcons;                                    // 0x1808(0x10)(Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    WarningSettingIcons;                               // 0x1818(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            InclusionListIcon;                                 // 0x1828(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ExclusionListIcon;                                 // 0x1830(0x8)(Edit, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            AddCreatureToInclusionListIcon;                    // 0x1838(0x8)(Edit, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RemoveCreatureFromInclusionListIcon;               // 0x1840(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            AddCreatureToExclusionListIcon;                    // 0x1848(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RemoveCreatureFromExclusionListIcon;               // 0x1850(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FluidSimSplashStrength;                            // 0x1858(0x4)(BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40A7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x1860(0x8)(Edit, ExportObject, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureTurret* GetDefaultObj();

	void UpdatedTargeting();
	void StartWarning();
	void NetMultiUpdateTarget(class AActor* PNewTarget, double NewLastFireTime);
	class FName GetTargetAltAimSocket(class APrimalCharacter** ForTarget);
	struct FVector_NetQuantizeNormal ClientsFireProjectile(struct FVector* Origin);
	bool BPTurretPreventsTargeting(class APrimalCharacter* PotentialTarget);
	bool BPCopyCustomSettingsFromTurret();
};

// 0x208 (0x1918 - 0x1710)
// Class ShooterGame.PrimalStructureTurretBallista
class APrimalStructureTurretBallista : public APrimalStructureSeating
{
public:
	class FName                                  TurretTipBone;                                     // 0x1710(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RiderOverrideSocketName;                           // 0x1718(0x8)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                AmmoItemTemplate;                                  // 0x1720(0x8)(ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AlternateAmmoItemTemplates;                        // 0x1728(0x10)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ProjectileClass;                                   // 0x1738(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UClass*                                ShootingDamageType;                                // 0x1740(0x8)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShootingDamageAmount;                              // 0x1748(0x4)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShootingDamageImpulse;                             // 0x174C(0x4)(ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       ShootingTrailFX;                                   // 0x1750(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShootingAimSpread;                                 // 0x1758(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40B2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                MuzzleFlashEmitter;                                // 0x1760(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DuplicateTransient)
	float                                        ShootingFireInterval;                              // 0x1768(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40B3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastShootingFireTime;                              // 0x1770(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsTryingToShoot;                                  // 0x1778(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsShooting;                                       // 0x1779(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsTargeting;                                      // 0x177A(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40B5[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        YawViewRotation;                                   // 0x177C(0x4)(EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OldYawViewRotation;                                // 0x1780(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PitctViewRotation;                                 // 0x1784(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              RotationInput;                                     // 0x1788(0x18)(BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundCue*                             FireSound;                                         // 0x17A0(0x8)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             EmptyFireSound;                                    // 0x17A8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             RotateSoundCue;                                    // 0x17B0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RotateSpeedThreshold;                              // 0x17B8(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RotateSoundFadeInSpeed;                            // 0x17BC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RotateSoundFadeOutSpeed;                           // 0x17C0(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RotateSoundMinVolume;                              // 0x17C4(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RotateSoundMaxVolume;                              // 0x17C8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TPVCameraPitchMin;                                 // 0x17CC(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TPVCameraPitchMax;                                 // 0x17D0(0x4)(ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TPVCameraYawMin;                                   // 0x17D4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TPVCameraYawMax;                                   // 0x17D8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40B6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          FireBallistaAnimation;                             // 0x17E0(0x8)(ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          EmptyBallistaAnimation;                            // 0x17E8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ReloadBallistaAnimation;                           // 0x17F0(0x8)(Edit, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsLoaded;                                         // 0x17F8(0x1)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_40B7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ControllerRiddingYaw;                              // 0x17FC(0x4)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TurretSkeletalMeshComponentName;                   // 0x1800(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                MySkeletalMeshComp;                                // 0x1808(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AttachedModuleComponentName;                       // 0x1810(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                AttachedModuleSkeletalMeshComp;                    // 0x1818(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          AttachedModuleFireAnimation;                       // 0x1820(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          AttachedModuleReloadAnimation;                     // 0x1828(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ProjectileMeshAttachPoint;                         // 0x1830(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ProjectileMeshAttachPointForMeshOnly;              // 0x1838(0x8)(BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ProjectileBoneName;                                // 0x1840(0x8)(ConstParm, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClientFireProjectile : 1;                         // Mask: 0x1, PropSize: 0x10x1848(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseInstantDamageShooting : 1;                     // Mask: 0x2, PropSize: 0x10x1848(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableInElectricalStorm : 1;                     // Mask: 0x4, PropSize: 0x10x1848(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBallistaAimOffsetOnCharacter : 1;              // Mask: 0x8, PropSize: 0x10x1848(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsReloading : 1;                                  // Mask: 0x10, PropSize: 0x10x1848(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsFiring : 1;                                     // Mask: 0x20, PropSize: 0x10x1848(0x1)(ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_35A : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bQueueReloadingAnimation;                          // 0x1849(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFireProjectileInvertX : 1;                        // Mask: 0x1, PropSize: 0x10x184A(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowProjectileOnlyBasedOnAmmo : 1;                // Mask: 0x2, PropSize: 0x10x184A(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideProjectileBone : 1;                           // Mask: 0x4, PropSize: 0x10x184A(0x1)(BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanFire : 1;                                 // Mask: 0x8, PropSize: 0x10x184A(0x1)(BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPFiredWeapon : 1;                             // Mask: 0x10, PropSize: 0x10x184A(0x1)(ConstParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideProjectileBoneOnAttachedModule : 1;           // Mask: 0x20, PropSize: 0x10x184A(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAmmoFromNearbyContainer : 1;                   // Mask: 0x40, PropSize: 0x10x184A(0x1)(Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetDamageMultiplier : 1;                     // Mask: 0x80, PropSize: 0x10x184A(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40BA[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	class UStaticMeshComponent*                  ProjectileMesh;                                    // 0x1850(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       RotateSoundComponent;                              // 0x1858(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ProgressBarBackground;                             // 0x1860(0x8)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ProgressBarForeground;                             // 0x1868(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        AmmoCount;                                         // 0x1870(0x4)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst)
	uint8                                        Pad_40BC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                CurrentAmmoItemTemplate;                           // 0x1878(0x8)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MagazineSize;                                      // 0x1880(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RangeToCheckForAmmo;                               // 0x1884(0x4)(ConstParm, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40BD[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class UStaticMesh*                           AmmoItemTemplateMesh;                              // 0x18A0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UStaticMesh*>                   AlternateAmmoItemTemplateMeshes;                   // 0x18A8(0x10)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AlternateAmmoProjectileClasses;                    // 0x18B8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        BuffsWhileSeated;                                  // 0x18C8(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DefaultAmmoReloadAnimSpeed;                        // 0x18D8(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40BF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<float>                                AlternateAmmoReloadAnimSpeeds;                     // 0x18E0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HealthCostPerShot;                                 // 0x18F0(0x4)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinimumHealthPercentToShoot;                       // 0x18F4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InstantFireTraceRange;                             // 0x18F8(0x4)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         AimFromPlayerView;                                 // 0x18FC(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40C1[0xB];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FluidSimSplashStrength;                            // 0x1908(0x4)(BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40C2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x1910(0x8)(Edit, ExportObject, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureTurretBallista* GetDefaultObj();

	void TryFiring(bool* ShouldFire);
	void ServerSwitchAmmoType();
	void ServerSetTargeting(bool* bTargeting);
	class UClass* GetCurrentAmmoType();
	void ClientsPlayFireAnim();
	struct FVector_NetQuantizeNormal ClientsFireProjectile(struct FVector* Origin);
	float BPGetDamageMultiplier();
	void BPFiredWeapon();
	bool BPCanFire();
};

// 0x80 (0x18E8 - 0x1868)
// Class ShooterGame.PrimalStructureTurretPlant
class APrimalStructureTurretPlant : public APrimalStructureTurret
{
public:
	TArray<class FName>                          PlantMuzzleSockets;                                // 0x1868(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UAnimMontage*>                  PlantAttackAnims;                                  // 0x1878(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlantHealthRecoverPerSec;                          // 0x1888(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AmountOfFertilizerToUsePerShot;                    // 0x188C(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HealthRecoverPerSec;                               // 0x1890(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40C6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalStructureItemContainer_CropPlot* OwnerCropPlot;                                     // 0x1898(0x8)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40C7[0x48];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureTurretPlant* GetDefaultObj();

	void RecoverHealthTimer();
};

// 0x160 (0x1758 - 0x15F8)
// Class ShooterGame.PrimalStructureUnderwaterBase
class APrimalStructureUnderwaterBase : public APrimalStructureItemContainer
{
public:
	uint8                                        bIsFlooded : 1;                                    // Mask: 0x1, PropSize: 0x10x15F8(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsFrameHidden : 1;                                // Mask: 0x2, PropSize: 0x10x15F8(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_361 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_40DD[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FPorthole>                     Portholes;                                         // 0x1600(0x10)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                PortholeState;                                     // 0x1610(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                PortholeSaveState;                                 // 0x1620(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class APrimalStructureUnderwaterBase*> PortholeLinks;                                     // 0x1630(0x10)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                FloodedEmitter;                                    // 0x1640(0x8)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                UnfloodedEmitter;                                  // 0x1648(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            OpenPortholeSound;                                 // 0x1650(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ClosePortholeSound;                                // 0x1658(0x8)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            FreezePortholeSound;                               // 0x1660(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            UnfreezePortholeSound;                             // 0x1668(0x8)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<uint32>                               CurrentPinCodes;                                   // 0x1670(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        PortholeNameOverrides;                             // 0x1680(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FColor>                        PortholeNameIconColorOverrides;                    // 0x1690(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<class APlayerController*, class UPrimitiveComponent*> ClientsViewingPortholes;                           // 0x16A0(0x50)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40E1[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            DrainCompartmentIcon;                              // 0x1700(0x8)(BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FloodCompartmentIcon;                              // 0x1708(0x8)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DrainAllConnectedIcon;                             // 0x1710(0x8)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FloodAllConnectedIcon;                             // 0x1718(0x8)(Edit, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            OpenIcon;                                          // 0x1720(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            OpenWindowIcon;                                    // 0x1728(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CloseIcon;                                         // 0x1730(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ShowFrameIcon;                                     // 0x1738(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            HideFrameIcon;                                     // 0x1740(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ShowConnectedFramesIcon;                           // 0x1748(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            HideConnectedFramesIcon;                           // 0x1750(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureUnderwaterBase* GetDefaultObj();

	bool UpdateLockState();
	bool UpdateFrameState();
	bool UpdateFloodState();
	int32 SetPortholeState();
	void OnRep_IsFrameHidden();
	void OnRep_IsFlooded();
	class APrimalStructureUnderwaterBase* GetLinkedBaseByPortholeIndex();
	void ChangedCompartmentFloodState();
	int32 BPSetPortholeState();
	bool AreBasesOpenToEachOther();
};

// 0x20 (0x11B8 - 0x1198)
// Class ShooterGame.PrimalStructureWaterPipe
class APrimalStructureWaterPipe : public APrimalStructure
{
public:
	uint8                                        bAlwaysHasWater : 1;                               // Mask: 0x1, PropSize: 0x10x1198(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasWater : 1;                                     // Mask: 0x2, PropSize: 0x10x1198(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsMeshHidden : 1;                                 // Mask: 0x4, PropSize: 0x10x1198(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsWaterPipe : 1;                                  // Mask: 0x8, PropSize: 0x10x1198(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bConnectedToNonPipe : 1;                           // Mask: 0x10, PropSize: 0x10x1198(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnRefreshPipeMaterials : 1;                  // Mask: 0x20, PropSize: 0x10x1198(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnWaterStateChange : 1;                      // Mask: 0x40, PropSize: 0x10x1198(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanHideMesh : 1;                                  // Mask: 0x80, PropSize: 0x10x1198(0x1)(ExportObject, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40EB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AutoDestroyPeriodWhenUnconnectedToNonPipe;         // 0x119C(0x4)(ConstParm, BlueprintReadOnly, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    HasWaterMaterial;                                  // 0x11A0(0x8)(Edit, ExportObject, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    NoWaterMaterial;                                   // 0x11A8(0x8)(Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        WaterMaterialIndex;                                // 0x11B0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40EC[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureWaterPipe* GetDefaultObj();

	bool SetHasWater();
	void RefreshWaterState();
	void RefreshHasSourceMaterials();
	void OnRep_IsMeshHidden();
	bool OnRep_HasWater();
	bool BPOnWaterStateChange();
	class UMaterialInterface* BPOnRefreshPipeMaterials();
};

// 0x40 (0x68 - 0x28)
// Class ShooterGame.PrimalSupplyCrateItemSet
class UPrimalSupplyCrateItemSet : public UObject
{
public:
	struct FSupplyCrateItemSet                   ItemSet;                                           // 0x28(0x40)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalSupplyCrateItemSet* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class ShooterGame.PrimalSupplyCrateItemSets
class UPrimalSupplyCrateItemSets : public UObject
{
public:
	TArray<struct FSupplyCrateItemSet>           ItemSets;                                          // 0x28(0x10)(BlueprintVisible, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalSupplyCrateItemSets* GetDefaultObj();

};

// 0x1A8 (0x1D0 - 0x28)
// Class ShooterGame.PrimalTribeData
class UPrimalTribeData : public UObject
{
public:
	struct FTribeData                            TribeData;                                         // 0x28(0x1A8)(Edit, ExportObject, EditFixedSize, ReturnParm, Config)

	static class UClass* StaticClass();
	static class UPrimalTribeData* GetDefaultObj();

};

// 0x10 (0x768 - 0x758)
// Class ShooterGame.PrimalUI_Toast
class UPrimalUI_Toast : public UPrimalUI
{
public:
	int32                                        Counter;                                           // 0x758(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CounterMax;                                        // 0x75C(0x4)(Edit, BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ProgressCounter;                                   // 0x760(0x4)(ExportObject, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWillSetCounter;                                   // 0x764(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40F9[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalUI_Toast* GetDefaultObj();

	void SetCounter(int32 NewCounter);
	void OverrideTextValueWithString(const class FString& NewText, bool HideProgressBar);
	void OverrideTextValue(class FText NewText, bool HideProgressBar);
	void OverrideCounterStart(int32* Num);
	bool IsAtCounterMax();
	void InitCounter(int32 NewCounterMax, bool bInWillSetCounter);
	void IncrementCounter();
};

// 0xBE0 (0x10A0 - 0x4C0)
// Class ShooterGame.ShooterWeapon
class AShooterWeapon : public AActor
{
public:
	uint8                                        Pad_417F[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        EquipTime;                                         // 0x4C8(0x4)(Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4181[0x1C];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                OverridePawnTPVAnimBlueprint;                      // 0x4E8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          OverrideProneInAnim;                               // 0x4F0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          OverrideProneOutAnim;                              // 0x4F8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          OverrideJumpAnim;                                  // 0x500(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          OverrideLandedAnim;                                // 0x508(0x8)(ExportObject, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UAnimSequence*>                 OverrideRiderAnimSequenceFrom;                     // 0x510(0x10)(ExportObject, BlueprintReadOnly, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UAnimSequence*>                 OverrideRiderAnimSequenceTo;                       // 0x520(0x10)(Edit, ExportObject, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FCanvasIcon                           PrimaryIcon;                                       // 0x530(0x18)(ConstParm, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FCanvasIcon                           SecondaryIcon;                                     // 0x548(0x18)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FCanvasIcon                           PrimaryClipIcon;                                   // 0x560(0x18)(Edit, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FCanvasIcon                           SecondaryClipIcon;                                 // 0x578(0x18)(Edit, ConstParm, BlueprintVisible, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ItemDurabilityToConsumePerMeleeHit;                // 0x590(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        AmmoIconsCount;                                    // 0x594(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TargetingTooltipCheckRange;                        // 0x598(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseDinoRangeForTooltip : 1;                       // Mask: 0x1, PropSize: 0x10x59C(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_37A : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4185[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        PrimaryClipIconOffset;                             // 0x5A0(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SecondaryClipIconOffset;                           // 0x5A4(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TargetingInfoToolTipWidget;                        // 0x5A8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig)
	struct FVector2D                             TargetingInfoTooltipPadding;                       // 0x5B0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             TargetingInfoTooltipScale;                         // 0x5C0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyPassiveDurabilityWhenAccessoryActive;         // 0x5D0(0x1)(ExportObject, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableShooterOnElectricStorm;                    // 0x5D1(0x1)(ExportObject, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4188[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  OverrideAttachPoint;                               // 0x5D4(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4189[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               FPVRelativeLocation;                               // 0x5E0(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              FPVRelativeRotation;                               // 0x5F8(0x18)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               FPVRelativeLocation_Targeting;                     // 0x610(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              FPVRelativeRotation_Targeting;                     // 0x628(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FPVEnterTargetingInterpSpeed;                      // 0x640(0x4)(ExportObject, BlueprintReadOnly, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FPVExitTargetingInterpSpeed;                       // 0x644(0x4)(Edit, ExportObject, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EndDoMeleeSwingTime;                               // 0x648(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_418B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              FPVLookAtMaximumOffset;                            // 0x650(0x18)(ConstParm, BlueprintReadOnly, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              FPVLookAtSpeedBase;                                // 0x668(0x18)(ExportObject, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              FPVLookAtInterpSpeed;                              // 0x680(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              FPVLookAtMaximumOffset_Targeting;                  // 0x698(0x18)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              FPVLookAtSpeedBase_Targeting;                      // 0x6B0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              FPVLookAtInterpSpeed_Targeting;                    // 0x6C8(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               FPVImmobilizedLocationOffset;                      // 0x6E0(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              FPVImmobilizedRotationOffset;                      // 0x6F8(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FPVImmobilizedInterpSpeed;                         // 0x710(0x4)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsWeaponPing;                                     // 0x714(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsWeaponTracker;                                  // 0x715(0x1)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventLeftShoulder;                              // 0x716(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventRightShoulder;                             // 0x717(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_418D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bUseBlueprintAnimNotifications;                    // 0x71C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_418F[0xB];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          MeleeSwingSockets;                                 // 0x728(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        AllowMeleeTimeBeforeAnimationEnd;                  // 0x738(0x4)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4190[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalItem*                           AssociatedPrimalItem;                              // 0x740(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AMissionType*                          AssociatedMission;                                 // 0x748(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCanBeUsedAsEquipment;                             // 0x750(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4191[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FItemNetInfo                          AssociatedItemNetInfo;                             // 0x758(0x1E0)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponData                           WeaponConfig;                                      // 0x938(0x2C)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4193[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USkeletalMeshComponent*                Mesh3P;                                            // 0x968(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                WeaponAmmoItemTemplate;                            // 0x970(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class ACameraActor*                          AnimatedCamera;                                    // 0x978(0x8)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4194[0xC0];                                    // Fixing Size After Last Property  > TateDumper <
	class AShooterCharacter*                     MyPawn;                                            // 0xA40(0x8)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                Mesh1P;                                            // 0xA48(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       FireAC;                                            // 0xA50(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MuzzleAttachPoint;                                 // 0xA58(0x8)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       MuzzleFX;                                          // 0xA60(0x8)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       MuzzleFX_FPV;                                      // 0xA68(0x8)(BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       AltMuzzleFX;                                       // 0xA70(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       AltMuzzleFX_FPV;                                   // 0xA78(0x8)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              MuzzlePSC;                                         // 0xA80(0x8)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              MuzzlePSCSecondary;                                // 0xA88(0x8)(BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                FireCameraShake;                                   // 0xA90(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ReloadCameraShake;                                 // 0xA98(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MeleeCameraShake;                                  // 0xAA0(0x8)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UForceFeedbackEffect*                  FireForceFeedback;                                 // 0xAA8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             FireSound;                                         // 0xAB0(0x8)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             AltFireSound;                                      // 0xAB8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             FireFinishSound;                                   // 0xAC0(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             OutOfAmmoSound;                                    // 0xAC8(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MeleeDamageAmount;                                 // 0xAD0(0x4)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        TheMeleeSwingRadius;                               // 0xAD4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TheMeleeSwingInteractionRadius;                    // 0xAD8(0x4)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MeleeDamageImpulse;                                // 0xADC(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FWeaponAnim                           ReloadAnim;                                        // 0xAE0(0x10)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ProneTPVReloadAnim;                                // 0xAF0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           PartialReloadAnim;                                 // 0xAF8(0x10)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ProneTPVPartialReloadAnim;                         // 0xB08(0x8)(Edit, ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          WeaponMesh3PReloadAnim;                            // 0xB10(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           HarvestAnim;                                       // 0xB18(0x10)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           WeaponBreakAnim;                                   // 0xB28(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             EquipSound;                                        // 0xB38(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           EquipAnim;                                         // 0xB40(0x10)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           EquipNoAmmoClipAnim;                               // 0xB50(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           UnequipAnim;                                       // 0xB60(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           UnequipNoAmmoClipAnim;                             // 0xB70(0x10)(Edit, ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          WeaponMesh3PFireAnim;                              // 0xB80(0x8)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           FireAnim;                                          // 0xB88(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           MeleeAnim;                                         // 0xB98(0x10)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           MeleeNoAmmoClipAnim;                               // 0xBA8(0x10)(ConstParm, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FWeaponAnim>                   MeleeAnimList;                                     // 0xBB8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyUseFirstMeleeAnimWithShield : 1;              // Mask: 0x1, PropSize: 0x10xBC8(0x1)(Edit, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceShowCrosshairWhileFiring : 1;                // Mask: 0x2, PropSize: 0x10xBC8(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_37E : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bCloseRadialWheelOnAltFire : 1;                    // Mask: 0x8, PropSize: 0x10xBC8(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_37F : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4198[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPUpdateFirstPersonMeshes : 1;                 // Mask: 0x1, PropSize: 0x10xBCC(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_380 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4199[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FWeaponAnim>                   MeleeWithHitAnimList;                              // 0xBD0(0x10)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           ShieldHitAnim;                                     // 0xBE0(0x10)(ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FPVMoveOffscreenWhenTurningMaxMoveWeaponSpeed;     // 0xBF0(0x4)(BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FPVMoveOffscreenWhenTurningMinMoveWeaponSpeed;     // 0xBF4(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FPVMoveOffscreenWhenTurningMinViewRotSpeed;        // 0xBF8(0x4)(ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FPVMoveOffscreenWhenTurningMaxViewRotSpeed;        // 0xBFC(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FPVMoveOffscreenIdleRestoreInterval;               // 0xC00(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FPVMoveOffscreenIdleRestoreSpeed;                  // 0xC04(0x4)(ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FPVMoveOffscreenWhenTurningMaxOffset;              // 0xC08(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_419D[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FWeaponAnim                           TargetingFireAnim;                                 // 0xC18(0x10)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowSubmergedFiring : 1;                         // Mask: 0x1, PropSize: 0x10xC28(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_382 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHideFPVMesh : 1;                                  // Mask: 0x40, PropSize: 0x10xC28(0x1)(ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceTargeting : 1;                               // Mask: 0x80, PropSize: 0x10xC28(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanAltFire : 1;                                   // Mask: 0x1, PropSize: 0x10xC29(0x1)(ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAltFireDoesMeleeAttack : 1;                       // Mask: 0x2, PropSize: 0x10xC29(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAltFireDoesNotStopFire : 1;                       // Mask: 0x4, PropSize: 0x10xC29(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideDamageSourceFromLogs : 1;                     // Mask: 0x8, PropSize: 0x10xC29(0x1)(Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseTargetingFireAnim : 1;                         // Mask: 0x10, PropSize: 0x10xC29(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseTargetingReloadAnim : 1;                       // Mask: 0x20, PropSize: 0x10xC29(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsePartialReloadAnim : 1;                         // Mask: 0x40, PropSize: 0x10xC29(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseEquipNoAmmoClipAnim : 1;                       // Mask: 0x80, PropSize: 0x10xC29(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseUnequipNoAmmoClipAnim : 1;                     // Mask: 0x1, PropSize: 0x10xC2A(0x1)(Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseMeleeNoAmmoClipAnim : 1;                       // Mask: 0x2, PropSize: 0x10xC2A(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideLeftArmFPV : 1;                               // Mask: 0x4, PropSize: 0x10xC2A(0x1)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLoopedMuzzleFX : 1;                               // Mask: 0x8, PropSize: 0x10xC2A(0x1)(Edit, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMeleeHitUseMuzzleFX : 1;                          // Mask: 0x10, PropSize: 0x10xC2A(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsePostUpdateTickForFPVParticles : 1;             // Mask: 0x20, PropSize: 0x10xC2A(0x1)(BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFPVMoveOffscreenWhenTurning : 1;                  // Mask: 0x40, PropSize: 0x10xC2A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReloadAnimForceTickPoseOnServer : 1;              // Mask: 0x80, PropSize: 0x10xC2A(0x1)(BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLoopedFireSound : 1;                              // Mask: 0x1, PropSize: 0x10xC2B(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowTargetingWhileReloading : 1;                 // Mask: 0x2, PropSize: 0x10xC2B(0x1)(Edit, ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMeleeHitColorizesStructures : 1;                  // Mask: 0x4, PropSize: 0x10xC2B(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLoopedFireAnim : 1;                               // Mask: 0x8, PropSize: 0x10xC2B(0x1)(Edit, ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_383 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAutoRefire : 1;                                   // Mask: 0x40, PropSize: 0x10xC2B(0x1)(BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bConsumeAmmoOnUseAmmo : 1;                         // Mask: 0x80, PropSize: 0x10xC2B(0x1)(ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTargetUnTargetWithClick : 1;                      // Mask: 0x1, PropSize: 0x10xC2C(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontActuallyConsumeItemAmmo : 1;                  // Mask: 0x2, PropSize: 0x10xC2C(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bBPUseWeaponCanFire : 1;                           // Mask: 0x4, PropSize: 0x10xC2C(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPUseTargetingEvents : 1;                         // Mask: 0x8, PropSize: 0x10xC2C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_384 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41A4[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_385 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bWantsToFire : 1;                                  // Mask: 0x2, PropSize: 0x10xC34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWantsToAltFire : 1;                               // Mask: 0x4, PropSize: 0x10xC34(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_386 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseAmmoOnFiring : 1;                              // Mask: 0x1, PropSize: 0x10xC35(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAmmoServerOnly : 1;                            // Mask: 0x2, PropSize: 0x10xC35(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bListenToAppliedForeces : 1;                       // Mask: 0x4, PropSize: 0x10xC35(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_387 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41A6[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bOverrideAimOffsets : 1;                           // Mask: 0x1, PropSize: 0x10xC38(0x1)(Edit, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsSpyglass : 1;                                   // Mask: 0x2, PropSize: 0x10xC38(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_388 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41A7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ItemDestructionUnequipWeaponDelay;                 // 0xC3C(0x4)(ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WeaponUnequipDelay;                                // 0xC40(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41A9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FWeaponAnim                           TargetingReloadAnim;                               // 0xC48(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ProneTPVTargetingReloadAnim;                       // 0xC58(0x8)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41AA[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastFireTime;                                      // 0xC68(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_41AB[0x40];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        CurrentAmmo;                                       // 0xCB0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CurrentAmmoInClip;                                 // 0xCB4(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bReplicateCurrentAmmoInClipToNonOwners;            // 0xCB8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPAdjustAmmoPerShot;                           // 0xCB9(0x1)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasToggleableAccessory : 1;                       // Mask: 0x1, PropSize: 0x10xCBA(0x1)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bToggleAccessoryUseAltMuzzleFX : 1;                // Mask: 0x2, PropSize: 0x10xCBA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bToggleAccessoryUseAltFireSound : 1;               // Mask: 0x4, PropSize: 0x10xCBA(0x1)(BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanToggleAccessory : 1;                      // Mask: 0x8, PropSize: 0x10xCBA(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnScoped : 1;                                // Mask: 0x10, PropSize: 0x10xCBA(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDefaultWeapon : 1;                              // Mask: 0x20, PropSize: 0x10xCBA(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceKeepEquippedWhileInInventory : 1;            // Mask: 0x40, PropSize: 0x10xCBA(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyAllowUseWhenRidingDino : 1;                   // Mask: 0x80, PropSize: 0x10xCBA(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bPrimaryFireDoesMeleeAttack : 1;                   // Mask: 0x1, PropSize: 0x10xCBB(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMeleeHitCaptureDermis : 1;                        // Mask: 0x2, PropSize: 0x10xCBB(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_389 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	class FName                                  FPVAccessoryToggleComponent;                       // 0xCBC(0x8)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TPVAccessoryToggleComponent;                       // 0xCC4(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsAccessoryActive : 1;                            // Mask: 0x1, PropSize: 0x10xCCC(0x1)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanAccessoryBeSetOn : 1;                          // Mask: 0x2, PropSize: 0x10xCCC(0x1)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bConsumeAmmoItemOnReload : 1;                      // Mask: 0x4, PropSize: 0x10xCCC(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAutoReload : 1;                                // Mask: 0x8, PropSize: 0x10xCCC(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWantsToAutoReload : 1;                            // Mask: 0x10, PropSize: 0x10xCCC(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasPlayedReload : 1;                              // Mask: 0x20, PropSize: 0x10xCCC(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNetLoopedSimulatingWeaponFire : 1;                // Mask: 0x40, PropSize: 0x10xCCC(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_38A : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bBPHandleMeleeAttack : 1;                          // Mask: 0x1, PropSize: 0x10xCCD(0x1)(Edit, ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPShouldDealDamage : 1;                        // Mask: 0x2, PropSize: 0x10xCCD(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoesntUsePrimalItem : 1;                          // Mask: 0x4, PropSize: 0x10xCCD(0x1)(BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCanAccessoryBeSetOn : 1;                       // Mask: 0x8, PropSize: 0x10xCCD(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetActorForTargetingTooltip : 1;             // Mask: 0x10, PropSize: 0x10xCCD(0x1)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideAimDirection : 1;                    // Mask: 0x20, PropSize: 0x10xCCD(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_38B : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41B4[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPIsValidUnstasisActor : 1;                    // Mask: 0x1, PropSize: 0x10xCD0(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_38C : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41B5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TimeToAutoReload;                                  // 0xCD4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ToggleAccessorySound;                              // 0xCD8(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        FiredLastNoAmmoShot;                               // 0xCE0(0x4)(Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41B6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastNotifyShotTime;                                // 0xCE8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLoopingSimulateWeaponFire : 1;                    // Mask: 0x1, PropSize: 0x10xCF0(0x1)(ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_38D : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPCanMeleeAttack : 1;                          // Mask: 0x4, PropSize: 0x10xCF0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_38E : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41B7[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                MeleeDamageType;                                   // 0xD00(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bClientTriggersHandleFiring : 1;                   // Mask: 0x1, PropSize: 0x10xD08(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowUseHarvesting : 1;                           // Mask: 0x2, PropSize: 0x10xD08(0x1)(Edit, ConstParm, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventItemColors : 1;                            // Mask: 0x4, PropSize: 0x10xD08(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetSelectedMeleeAttackAnim : 1;              // Mask: 0x8, PropSize: 0x10xD08(0x1)(ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPWeaponDealDamage : 1;                        // Mask: 0x10, PropSize: 0x10xD08(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_38F : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41B9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPOnWeaponAnimPlayedNotify : 1;                // Mask: 0x1, PropSize: 0x10xD0C(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_390 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41BA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               VRTargetingModelOffset;                            // 0xD10(0x18)(Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               VRTargetingAimOriginOffset;                        // 0xD28(0x18)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    ScopeOverlayMI;                                    // 0xD40(0x8)(ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    ScopeCrosshairMI;                                  // 0xD48(0x8)(Edit, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              ScopeCrosshairMID;                                 // 0xD50(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ScopeCrosshairSize;                                // 0xD58(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ScopeCrosshairColorParameter;                      // 0xD5C(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bColorCrosshairBasedOnTarget : 1;                  // Mask: 0x1, PropSize: 0x10xD64(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowTargeting : 1;                               // Mask: 0x2, PropSize: 0x10xD64(0x1)(ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreTargetingFOV : 1;                           // Mask: 0x4, PropSize: 0x10xD64(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowDropAndPickup : 1;                           // Mask: 0x8, PropSize: 0x10xD64(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowDropAndPickupOnReload : 1;                   // Mask: 0x10, PropSize: 0x10xD64(0x1)(Edit, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bApplyAimDriftWhenTargeting : 1;                   // Mask: 0x20, PropSize: 0x10xD64(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseScopeOverlay : 1;                              // Mask: 0x40, PropSize: 0x10xD64(0x1)(Edit, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_391 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41BD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bHideFPVMeshWhileTargeting : 1;                    // Mask: 0x1, PropSize: 0x10xD68(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_392 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41BF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bGamepadRightIsSecondaryAction : 1;                // Mask: 0x1, PropSize: 0x10xD6C(0x1)(Edit, ConstParm, ExportObject, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGamepadLeftIsPrimaryFire : 1;                     // Mask: 0x2, PropSize: 0x10xD6C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDirectPrimaryFireToAltFire : 1;                   // Mask: 0x4, PropSize: 0x10xD6C(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanFire : 1;                                      // Mask: 0x8, PropSize: 0x10xD6C(0x1)(Edit, ExportObject, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceTargetingOnDino : 1;                         // Mask: 0x10, PropSize: 0x10xD6C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDirectTargetingToPrimaryFire : 1;                 // Mask: 0x20, PropSize: 0x10xD6C(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDirectTargetingToAltFire : 1;                     // Mask: 0x40, PropSize: 0x10xD6C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDirectTargetingToSecondaryAction : 1;             // Mask: 0x80, PropSize: 0x10xD6C(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDirectAltFireToSeconaryAction : 1;                // Mask: 0x1, PropSize: 0x10xD6D(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventEquippingUnderwater : 1;                   // Mask: 0x2, PropSize: 0x10xD6D(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseTPVWeaponMeshMeleeSockets : 1;                 // Mask: 0x4, PropSize: 0x10xD6D(0x1)(Edit, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTargetingForceTraceFloatingHUD : 1;               // Mask: 0x8, PropSize: 0x10xD6D(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRunning : 1;                                 // Mask: 0x10, PropSize: 0x10xD6D(0x1)(BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowUseWhileRidingDino : 1;                      // Mask: 0x20, PropSize: 0x10xD6D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bSupportsOffhandShield : 1;                        // Mask: 0x40, PropSize: 0x10xD6D(0x1)(ExportObject, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMeleeAttackHarvetUsableComponents : 1;            // Mask: 0x80, PropSize: 0x10xD6D(0x1)(ExportObject, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowSettingColorizeRegions : 1;                  // Mask: 0x1, PropSize: 0x10xD6E(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAttemptToDyeWithMeleeAttack : 1;                  // Mask: 0x2, PropSize: 0x10xD6E(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyDamagePawns : 1;                              // Mask: 0x4, PropSize: 0x10xD6E(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCharacterMeleeDamageModifier : 1;              // Mask: 0x8, PropSize: 0x10xD6E(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bConsumeZoomInOut : 1;                             // Mask: 0x10, PropSize: 0x10xD6E(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClipScopeInY : 1;                                 // Mask: 0x20, PropSize: 0x10xD6E(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bScopeFullscreen : 1;                              // Mask: 0x40, PropSize: 0x10xD6E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRunningWhileFiring : 1;                      // Mask: 0x80, PropSize: 0x10xD6E(0x1)(ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRunningWhileReloading : 1;                   // Mask: 0x1, PropSize: 0x10xD6F(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRunningWhileMeleeAttacking : 1;              // Mask: 0x2, PropSize: 0x10xD6F(0x1)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_395 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        MinItemDurabilityPercentageForShot;                // 0xD70(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bColorizeMuzzleFX : 1;                             // Mask: 0x1, PropSize: 0x10xD74(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_396 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41C8[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OverrideMuzzleFXAlpha;                             // 0xD78(0x4)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceFirstPersonWhileTargeting : 1;               // Mask: 0x1, PropSize: 0x10xD7C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPStartEquippedNotify : 1;                     // Mask: 0x2, PropSize: 0x10xD7C(0x1)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDirectPrimaryFireToSecondaryAction : 1;           // Mask: 0x4, PropSize: 0x10xD7C(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAlternateAimOffset : 1;                        // Mask: 0x8, PropSize: 0x10xD7C(0x1)(ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_397 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41CA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OverrideTargetingFOV;                              // 0xD80(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TargetingDelayTime;                                // 0xD84(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TargetingFOVInterpSpeed;                           // 0xD88(0x4)(OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AimDriftYawAngle;                                  // 0xD8C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AimDriftPitchAngle;                                // 0xD90(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AimDriftYawFrequency;                              // 0xD94(0x4)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AimDriftPitchFrequency;                            // 0xD98(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41CE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          AlternateInventoryEquipAnim;                       // 0xDA0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           OpenInventoryAnim;                                 // 0xDA8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MeleeHitRandomChanceToDestroyItem;                 // 0xDB8(0x4)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalFireCameraShakeScale;                        // 0xDBC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DurabilityCostToEquip;                             // 0xDC0(0x4)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PassiveDurabilityCostPerInterval;                  // 0xDC4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PassiveDurabilityCostInterval;                     // 0xDC8(0x4)(Edit, BlueprintVisible, ExportObject, Net, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GlobalFireCameraShakeScaleTargeting;               // 0xDCC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MeleeCameraShakeSpeedScale;                        // 0xDD0(0x4)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReloadCameraShakeSpeedScale;                       // 0xDD4(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MeleeConsumesStamina;                              // 0xDD8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41D2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                MeleeHitTargetCameraShake;                         // 0xDE0(0x8)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MeleeHitTargetCameraShakeMobile;                   // 0xDE8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MeleeHitColorizeStructuresUI;                      // 0xDF0(0x8)(ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HypoThermiaInsulation;                             // 0xDF8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HyperThermiaInsulation;                            // 0xDFC(0x4)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InsulationRange;                                   // 0xE00(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_41D3[0x24];                                    // Fixing Size After Last Property  > TateDumper <
	class USoundCue*                             TargetingSound;                                    // 0xE28(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             UntargetingSound;                                  // 0xE30(0x8)(ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FPVMeleeTraceFXRange;                              // 0xE38(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41D5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                MeleeAttackUsableHarvestDamageType;                // 0xE40(0x8)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MeleeAttackHarvetUsableComponentsRadius;           // 0xE48(0x4)(ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MeleeAttackUsableHarvestDamageMultiplier;          // 0xE4C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_41D7[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          TPVForcePlayAnim;                                  // 0xEA8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventOpeningInventory;                          // 0xEB0(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowUseOnSeatingStructure;                       // 0xEB1(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bOnlyUseOnSeatingStructure;                        // 0xEB2(0x1)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bDurabilityUseWeaponMaterial : 1;                  // Mask: 0x1, PropSize: 0x10xEB3(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideStandingAnim : 1;                         // Mask: 0x2, PropSize: 0x10xEB3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCustomSeatedAnim : 1;                          // Mask: 0x4, PropSize: 0x10xEB3(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPForceTPVTargetingAnimation : 1;              // Mask: 0x8, PropSize: 0x10xEB3(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePreventUseWhileRidingDino : 1;               // Mask: 0x10, PropSize: 0x10xEB3(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseBPPreventSwitchingWeapon : 1;                  // Mask: 0x20, PropSize: 0x10xEB3(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanEquip : 1;                                // Mask: 0x40, PropSize: 0x10xEB3(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseBPRemainEquipped : 1;                          // Mask: 0x80, PropSize: 0x10xEB3(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsInDestruction : 1;                              // Mask: 0x1, PropSize: 0x10xEB4(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceReloadOnDestruction : 1;                     // Mask: 0x2, PropSize: 0x10xEB4(0x1)(ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPModifyFOV : 1;                               // Mask: 0x4, PropSize: 0x10xEB4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bServerIgnoreCheckCanFire : 1;                     // Mask: 0x8, PropSize: 0x10xEB4(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetTPVCameraOffset : 1;                      // Mask: 0x10, PropSize: 0x10xEB4(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideRootRotationOffset : 1;              // Mask: 0x20, PropSize: 0x10xEB4(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSpawnedByMission : 1;                             // Mask: 0x40, PropSize: 0x10xEB4(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowFullClipReload : 1;                          // Mask: 0x80, PropSize: 0x10xEB4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowPassengerTPV : 1;                       // Mask: 0x1, PropSize: 0x10xEB5(0x1)(Edit, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventCarriedZoomInOut : 1;                      // Mask: 0x2, PropSize: 0x10xEB5(0x1)(BlueprintVisible, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInstantAccuracyReset : 1;                         // Mask: 0x4, PropSize: 0x10xEB5(0x1)(ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAlwaysPlayEquipAnim : 1;                     // Mask: 0x8, PropSize: 0x10xEB5(0x1)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_399 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41DF[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bIgnoreReloadState : 1;                            // Mask: 0x1, PropSize: 0x10xEB8(0x1)(OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPostSpawnMuzzleEffect : 1;                   // Mask: 0x2, PropSize: 0x10xEB8(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_39A : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41E0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPGetCrosshairColor : 1;                       // Mask: 0x1, PropSize: 0x10xEBC(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnorePlayerReload : 1;                           // Mask: 0x2, PropSize: 0x10xEBC(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAmmoReloadState : 1;                           // Mask: 0x4, PropSize: 0x10xEBC(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_39B : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41E2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_39C : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPOnBurstStarted : 1;                          // Mask: 0x2, PropSize: 0x10xEC0(0x1)(BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnBurstFinished : 1;                         // Mask: 0x4, PropSize: 0x10xEC0(0x1)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBurstStartAnim : 1;                            // Mask: 0x8, PropSize: 0x10xEC0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBurstFinishAnim : 1;                           // Mask: 0x10, PropSize: 0x10xEC0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSecondaryActionStopsFire : 1;                     // Mask: 0x20, PropSize: 0x10xEC0(0x1)(Edit, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAmmoSupportsAdjustedAmmoPerShot : 1;           // Mask: 0x40, PropSize: 0x10xEC0(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsMeleeWeapon : 1;                                // Mask: 0x80, PropSize: 0x10xEC0(0x1)(ConstParm, BlueprintVisible, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseTargetingAimDownSightsExposureAdjustment : 1;  // Mask: 0x1, PropSize: 0x10xEC1(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoDestroyPlayerWeaponWhenSleeping : 1;          // Mask: 0x2, PropSize: 0x10xEC1(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceOwnerControllerHighQualityViewerReplication : 1; // Mask: 0x4, PropSize: 0x10xEC1(0x1)(ConstParm, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTargetingForceOwnerControllerHighQualityViewerReplication : 1; // Mask: 0x8, PropSize: 0x10xEC1(0x1)(BlueprintVisible, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_39D : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41E7[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bBPDoClientCheckCanFire;                           // 0xEC4(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRestrictTPVCameraYaw;                             // 0xEC5(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41EA[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TPVCameraYawRange;                                 // 0xEC8(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFoceSimulatedTick;                                // 0xECC(0x1)(Edit, BlueprintVisible, ExportObject, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWasLastFireFromGamePad;                           // 0xECD(0x1)(ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableWeaponCrosshair;                           // 0xECE(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41EB[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class USkeletalMesh*                         DyePreviewMeshOverrideSK;                          // 0xED0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UStaticMesh*                           DyePreviewMeshOverrideSM;                          // 0xED8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bBPOverrideAspectRatio;                            // 0xEE0(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bBPOverrideFPVMasterPoseComponent;                 // 0xEE1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceAllowMountedWeaponry;                        // 0xEE2(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_41ED[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FireCameraShakeSpreadScaleExponent;                // 0xEE4(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FireCameraShakeSpreadScaleExponentLessThan;        // 0xEE8(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FireCameraShakeSpreadScaleMultiplierLessThan;      // 0xEEC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FireCameraShakeSpreadScaleMultiplier;              // 0xEF0(0x4)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseFireCameraShakeScale;                          // 0xEF4(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceTickWithNoController;                        // 0xEF5(0x1)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41EF[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FInstantWeaponData                    InstantConfig;                                     // 0xEF8(0x30)(Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentFiringSpread;                               // 0xF28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41F0[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class APrimalBuff>             ScopedBuff;                                        // 0xF38(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41F1[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimSequence*                         OverrideTPVShieldAnimation;                        // 0xF70(0x8)(Edit, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowTargetingDuringMeleeSwing;                   // 0xF78(0x1)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowDedicatedThirdPersonWeaponMeshTick;          // 0xF79(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41F3[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               FPVMuzzleLocationOffset;                           // 0xF80(0x18)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               TPVMuzzleLocationOffset;                           // 0xF98(0x18)(Edit, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceTPV_EquippedWhileRiding;                     // 0xFB0(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCutsEnemyGrapplingCable;                          // 0xFB1(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41F5[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               FPVInventoryReequipOffset;                         // 0xFB8(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableGamepadAimAssist;                          // 0xFD0(0x1)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41F7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AimAssistStrengthWeapon;                           // 0xFD4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41F9[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bForceTPVCameraOffset;                             // 0xFE4(0x1)(ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bUseBPSpawnMeleeEffects;                           // 0xFE5(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41FA[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FWeaponAnim                           StartBurstAnim;                                    // 0xFE8(0x10)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           FinishBurstAnim;                                   // 0xFF8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41FC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        AmmoInClipOnReload;                                // 0x100C(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        LastAmmoToConsume;                                 // 0x1010(0x4)(ConstParm, ExportObject, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EWeaponAmmoReloadState            AmmoReloadState;                                   // 0x1014(0x1)(Edit, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41FD[0x13];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                WeaponCameraSettingsOverrideClass;                 // 0x1028(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFPVScopedTargetingHidesNonWeaponHUD;              // 0x1030(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41FE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        LastSelectedMeleeAnim;                             // 0x1034(0x4)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bImpactAttachFXUsesPawnMesh : 1;                   // Mask: 0x1, PropSize: 0x10x1038(0x1)(Edit, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_39F : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4200[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          MeleeAnimListImpactFXAttachSockets1P;              // 0x1040(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          MeleeAnimListImpactFXAttachSockets3P;              // 0x1050(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideMeleeSwingSockets : 1;               // Mask: 0x1, PropSize: 0x10x1060(0x1)(ConstParm, ExportObject, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3A0 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4202[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            RemoveIcon;                                        // 0x1068(0x8)(BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RemovalOptionsIcon;                                // 0x1070(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            LockToIcon;                                        // 0x1078(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            UnlockFromIcon;                                    // 0x1080(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WeaponDurabilityPercent;                           // 0x1088(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WeaponDurabilityPercentUpdateInterval;             // 0x108C(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnMaxDurability : 1;                         // Mask: 0x1, PropSize: 0x10x1090(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAbsoluteScaleOnAttach : 1;                     // Mask: 0x2, PropSize: 0x10x1090(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bConsiderWeaponScaleOnAttach : 1;                  // Mask: 0x4, PropSize: 0x10x1090(0x1)(ConstParm, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3A1 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4205[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FluidSimSplashStrength;                            // 0x1094(0x4)(BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x1098(0x8)(Edit, ExportObject, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class AShooterWeapon* GetDefaultObj();

	bool UsesAmmo();
	void UseAmmo(int32* UseAmmoAmountOverride);
	void UpdateDurabilityMaterialParams();
	void UpdateAmmoReloadState();
	void ToggleAccessory();
	void StopWeaponAnimation(struct FWeaponAnim* Animation, bool bReplicate, bool bReplicateToInstigator);
	void StopSecondaryActionEvent();
	void StopFire();
	void StopAltFire();
	void StartUnequipEvent();
	void StartUnequip();
	void StartSecondaryActionEvent();
	bool StartFire();
	void StartAltFire();
	enum class EWeaponAmmoReloadState SetAmmoReloadState();
	void SetAmmoInClip(int32* NewAmmo);
	void SetAccessoryEnabled(bool bEnabled);
	void ServerToggleAccessory();
	void ServerStopSecondaryAction();
	void ServerStopFire();
	void ServerStopAltFire();
	void ServerStartSecondaryAction();
	void ServerStartReload();
	void ServerStartFire();
	void ServerStartAltFire();
	void ServerSetMeleeAnimIndex(int32* SelectedMeleeAnim);
	int32 ServerSetColorizeRegion(bool* bValToUse);
	struct FWeaponAnim SelectMeleeAttackAnim(int32* ForceSelectedAnim);
	void ReloadWeapon();
	class UAudioComponent* PlayWeaponSound(class USoundCue** Sound);
	void PlayWeaponBreakAnimation();
	float PlayWeaponAnimationEx(struct FWeaponAnim* Animation, float* InPlayRate, bool bPlayBothFirstAndThirdPerson, bool bReplicate, bool bReplicateToInstigator, bool bPauseOnFinish1P);
	float PlayWeaponAnimation(struct FWeaponAnim* Animation, bool bPlayBothFirstAndThirdPerson, bool bReplicate, bool bReplicateToInstigator, bool bPauseOnFinish1P);
	void PlayUseHarvestAnimation();
	void OnRep_WeaponDurabilityPercent();
	void OnRep_NetLoopedWeaponFire();
	void OnRep_MyPawn();
	void OnRep_CurrentAmmoInClip();
	void OnRep_AccessoryToggle();
	void OnInstigatorSleepingStateChanged();
	void OnInstigatorPlayDyingEvent();
	bool OnDurabilityChanged(float* NewDurabilityPercent);
	void OnAttachedToPawn();
	int32 NetSetLastAttackMontage();
	void LoadPrimalCameraWeaponOverride(class UClass** WeaponCameraOverrideClass);
	bool IsPlayingWeaponAnimMontage(struct FWeaponAnim* WeaponAnimMontage, float* TimeFromEndToConsiderFinished);
	bool IsOwningClient();
	bool IsLocallyOwned();
	bool IsInMeleeAttack();
	bool IsFiring();
	bool IsClimbing();
	bool HasInfiniteAmmo();
	class USkeletalMeshComponent* GetWeaponMesh();
	float GetWeaponDamageMultiplier();
	class UPrimalCameraConfig_WeaponOverride* GetWeaponCameraSettingsOverride();
	float GetWeaponAttackPlayRate();
	class UAnimSequence* GetStandingAnimation(float* OutBlendInTime, float* OutBlendOutTime);
	struct FWeaponAnim GetReloadAnim(bool* bOnlyCheckRegularReload);
	class AShooterCharacter* GetPawnOwner();
	struct FVector GetMuzzleLocation();
	struct FVector GetMuzzleDirection();
	class FString GetDebugInfoString();
	int32 GetCurrentAmmoInClip();
	int32 GetCurrentAmmo();
	bool GetColorizeRegionActivated();
	enum class EWeaponAmmoReloadState GetAmmoReloadState();
	struct FVector GetAdjustedAim();
	void ForceUpdateClientAmmo();
	bool ForceTPVTargetingAnimation();
	bool ForcesTPVCameraOffset();
	void ForceMeshUpdate(bool* bIsFirstPerson);
	class USceneComponent* FindComponentByName(class FName* ComponentName);
	void DoMeleeAttack();
	void DoHandleFiring();
	int32 ConsumeAmmoItem();
	void ClientStopSimulatingWeaponFire();
	void ClientStartReload();
	void ClientStartMuzzleFX();
	struct FVector ClientSpawnMeleeEffects();
	void ClientSimulateWeaponFire();
	int32 ClientSetClipAmmo(bool* bOnlyUpdateItem);
	void ClientPlayShieldHitAnim();
	void ClientClearPendingReload();
	void ClearClientReload();
	void CheckItemAssocation();
	bool CanReload();
	bool CanMeleeAttack();
	bool CanFire(bool bForceAllowSubmergedFiring);
	void BPWeaponZoom(bool* bZoomingIn);
	int32 BPWeaponDealDamage(int32* DamageAmount, float* Impulse);
	bool BPWeaponCanFire();
	void BPUpdateFirstPersonMeshes(bool* bIsFirstPerson);
	bool BPTryFireWeapon();
	void BPToggleAccessoryFailed();
	void BPToggleAccessory();
	void BPStopMeleeAttack();
	void BPStartEquippedNotify();
	struct FVector BPSpawnMeleeEffects();
	bool BPShouldDealDamage();
	void BPRequestReload();
	bool BPRemainEquipped();
	bool BPPreventSwitchingWeapon();
	void BPPostSpawnMuzzleEffect(class UParticleSystemComponent** NewMuzzlePSC);
	struct FRotator BPOverrideRootRotationOffset(struct FRotator* InRootRotation);
	class FName BPOverrideMeleeSwingSocket(class FName* FromSocket);
	class USkeletalMeshComponent* BPOverrideFPVMasterPoseComponent();
	struct FVector BPOverrideAimDirection(const struct FVector& DesiredAimDirection);
	bool BPOnWeaponAnimPlayedNotify(struct FWeaponAnim* Animation, float* InPlayRate, bool bPlayBothFirstAndThirdPerson, bool bReplicate, bool bReplicateToInstigator, bool bPauseOnFinish1P);
	void BPOnStopTargeting(bool bFromGamepadLeft);
	void BPOnStartTargeting(bool bFromGamepadLeft);
	void BPOnScoped();
	void BPOnMaxDurability();
	void BPOnBurstStarted();
	void BPOnBurstFinished();
	float BPModifyFOV(float InFOV);
	void BPMeleeAttackStarted();
	void BPLostController();
	bool BPIsValidUnStasisCaster();
	void BPHandleMeleeAttack();
	void BPGlobalFireWeapon();
	struct FVector BPGetTPVCameraOffset();
	class FText BPGetTargetingTooltipInfoLabel();
	struct FWeaponAnim BPGetSelectedMeleeAttackAnim();
	class UAnimSequence* BPGetSeatingAnimation();
	class FString BPGetDebugInfoString();
	enum class EWeaponState BPGetCurrentState();
	struct FColor BPGetCrosshairColor();
	class AActor* BPGetActorForTargetingTooltip();
	bool BPForceTPVTargetingAnimation();
	void BPFireWeapon();
	void BPFiredWeapon();
	void BPEndPlay();
	class AShooterHUD* BPDrawHUD();
	bool BPConstrainAspectRatio(float OutAspectRatio);
	bool BPCanToggleAccessory();
	bool BPCanMeleeAttack();
	bool BPCanEquip(class AShooterCharacter** ByCharacter);
	void BPAppliedPrimalItemToWeapon();
	void BPAnimNotifyCustomState_End(class FName* CustomEventName, class USkeletalMeshComponent** MeshComp, class UAnimSequenceBase** Animation, class UAnimNotifyState** AnimNotifyObject);
	void BPAnimNotifyCustomState_Begin(class FName* CustomEventName, class USkeletalMeshComponent** MeshComp, class UAnimSequenceBase** Animation, float* TotalDuration, class UAnimNotifyState** AnimNotifyObject);
	void BPAnimNotifyCustomEvent(class FName* CustomEventName, class USkeletalMeshComponent** MeshComp, class UAnimSequenceBase** Animation, class UAnimNotify** AnimNotifyObject);
	bool BPAllowNativeFireWeapon();
	int32 BPAdjustAmmoPerShot();
	void BP_OnReloadNotify();
	bool AllowUnequip();
	bool AllowTargeting();
	bool AllowedToFire(bool bForceAllowSubmergedFiring);
};

// 0xD8 (0x1178 - 0x10A0)
// Class ShooterGame.ShooterWeapon_Projectile
class AShooterWeapon_Projectile : public AShooterWeapon
{
public:
	bool                                         bUseAmmoOnFireProjectile;                          // 0x10A0(0x1)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4246[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ProjectileClass;                                   // 0x10A8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USoundCue*                             FireProjectileSound;                               // 0x10B0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  ProjectileMesh3P;                                  // 0x10B8(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ProjectileAttachPoint3P;                           // 0x10C0(0x8)(Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4248[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bSpawnProjectileOnClient;                          // 0x10CC(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPSelectProjectileToFire;                      // 0x10CD(0x1)(BlueprintVisible, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4249[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ProjectileSpreadYaw;                               // 0x10D0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ProjectileSpreadPitch;                             // 0x10D4(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ServerMaxProjectileAngleError;                     // 0x10D8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ServerMaxProjectileOriginError;                    // 0x10DC(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bServerFireProjectileForceUpdateAimActors : 1;     // Mask: 0x1, PropSize: 0x10x10E0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseHideProjectileAnimEvents : 1;                  // Mask: 0x2, PropSize: 0x10x10E0(0x1)(ExportObject, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3A3 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_424E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  Mesh1PProjectileBoneName;                          // 0x10E4(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LockOnYScreenPercentage;                           // 0x10EC(0x4)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseLockOn;                                        // 0x10F0(0x1)(ExportObject, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_424F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LockOnTime;                                        // 0x10F4(0x4)(ConstParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentLockOnTime;                                 // 0x10F8(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LockOnMaxTraceDistance;                            // 0x10FC(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LockOnTraceBoxExtent;                              // 0x1100(0x18)(Edit, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    ActorLockedMI;                                     // 0x1118(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              ActorLockedMID;                                    // 0x1120(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    ActorInLockedAreaMI;                               // 0x1128(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              ActorInLockedAreaMID;                              // 0x1130(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHasLockedTarget;                                  // 0x1138(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4253[0x3F];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterWeapon_Projectile* GetDefaultObj();

	void SetLockedTarget(class AActor** Actor, bool* bIsLocked);
	struct FVector_NetQuantizeNormal ServerFireProjectileEx(struct FVector* Origin, float Speed, int32 RandomSeed, int32* ProjectileID);
	struct FVector_NetQuantizeNormal ServerFireProjectile(struct FVector* Origin, int32* ProjectileID);
	void OnUnHideProjectile();
	void OnHideProjectile();
	void Listener_LockOn_Update(bool* Reset);
	void Listener_LockOn_Stop();
	struct FHitResult GetTrajectoryTarget(int32* SubSteps, float* TotalTime);
	struct FVector_NetQuantizeNormal ClientsFireProjectileEx(struct FVector* Origin, float Speed, int32 RandomSeed, int32* ProjectileID);
	struct FVector_NetQuantizeNormal ClientsFireProjectile(struct FVector* Origin, int32* ProjectileID);
	void CheckRefireTimer();
	float BPSelectProjectileToFire(class UClass** ProjectileClassOverride, class USoundCue** FireSoundOverride, bool* bSpawnOnClient);
	class AShooterProjectile* BPOnSpawnedProjectile();
};

// 0x88 (0x1200 - 0x1178)
// Class ShooterGame.PrimalWeaponBow
class APrimalWeaponBow : public AShooterWeapon_Projectile
{
public:
	float                                        MinimumInitialSpeed;                               // 0x1178(0x4)(ConstParm, BlueprintReadOnly, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaximumInitialSpeed;                               // 0x117C(0x4)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PullingTimeForMaximumSpeed;                        // 0x1180(0x4)(Edit, ExportObject, BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DamageFactorForSlowArrows;                         // 0x1184(0x4)(Edit, ConstParm, ExportObject, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DamageFactorForFastArrows;                         // 0x1188(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinimumPullingTimeToFire;                          // 0x118C(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisablePullingOnCrouch : 1;                       // Mask: 0x1, PropSize: 0x10x1190(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisablePullingOnProne : 1;                        // Mask: 0x2, PropSize: 0x10x1190(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysPlayTPVPullStringAnim : 1;                  // Mask: 0x4, PropSize: 0x10x1190(0x1)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3A4 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_425B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                MaxPullCameraShake;                                // 0x1198(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ArrowBoneName;                                     // 0x11A0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           PullStringAnim;                                    // 0x11A8(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideWeaponOnLaunch : 1;                           // Mask: 0x1, PropSize: 0x10x11B8(0x1)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseArrowMesh1P : 1;                               // Mask: 0x2, PropSize: 0x10x11B8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideOriginalArrowBone1P : 1;                      // Mask: 0x4, PropSize: 0x10x11B8(0x1)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAttachArrowToWeaponMesh3P : 1;                    // Mask: 0x8, PropSize: 0x10x11B8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReloadOnEmptyClip : 1;                            // Mask: 0x10, PropSize: 0x10x11B8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3A5 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_425D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  ArrowOnWeaponAttachPoint3P;                        // 0x11BC(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_425E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UStaticMeshComponent*                  ArrowMesh3P;                                       // 0x11C8(0x8)(Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ArrowAttachPoint3P;                                // 0x11D0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  ArrowMesh1P;                                       // 0x11D8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ArrowAttachPoint1P;                                // 0x11E0(0x8)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPendingPullString : 1;                            // Mask: 0x1, PropSize: 0x10x11E8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNewPullStringEvent : 1;                           // Mask: 0x2, PropSize: 0x10x11E8(0x1)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsPullingString : 1;                              // Mask: 0x4, PropSize: 0x10x11E8(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsPlayingPullStringAnim : 1;                      // Mask: 0x8, PropSize: 0x10x11E8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDidFireWeapon : 1;                                // Mask: 0x10, PropSize: 0x10x11E8(0x1)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsLastArrow : 1;                                  // Mask: 0x20, PropSize: 0x10x11E8(0x1)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontRequireIdleForReload : 1;                     // Mask: 0x40, PropSize: 0x10x11E8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanStartFire : 1;                            // Mask: 0x80, PropSize: 0x10x11E8(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceServerCheckPullingTime : 1;                  // Mask: 0x1, PropSize: 0x10x11E9(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3A6 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4261[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PullingTime;                                       // 0x11EC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ProjectileSpeed;                                   // 0x11F0(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4262[0xC];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalWeaponBow* GetDefaultObj();

	void UpdateTPVBowAnimation();
	void UnHideArrow();
	void ServerSetPullString(bool bIsPulling);
	void HideArrow();
	void BPSimulatedResetSetPullingTime();
	bool BPCanStartFire();
};

// 0x8 (0x1208 - 0x1200)
// Class ShooterGame.PrimalWeaponBoomerang
class APrimalWeaponBoomerang : public APrimalWeaponBow
{
public:
	float                                        ChanceToBreak;                                     // 0x1200(0x4)(ExportObject, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClientHideBoomerang : 1;                          // Mask: 0x1, PropSize: 0x10x1204(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4265[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalWeaponBoomerang* GetDefaultObj();

	void OnRep_ClientHideBoomerang();
};

// 0x8 (0x10A8 - 0x10A0)
// Class ShooterGame.ShooterWeapon_Melee
class AShooterWeapon_Melee : public AShooterWeapon
{
public:
	bool                                         bUseAltFireOnNormalFire;                           // 0x10A0(0x1)(BlueprintReadOnly, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4267[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterWeapon_Melee* GetDefaultObj();

};

// 0xC0 (0x1168 - 0x10A8)
// Class ShooterGame.PrimalWeaponElectronicBinoculars
class APrimalWeaponElectronicBinoculars : public AShooterWeapon_Melee
{
public:
	float                                        YPosDistance;                                      // 0x10A8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        XPosDistance;                                      // 0x10AC(0x4)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CompSize;                                          // 0x10B0(0x4)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DistanceX;                                         // 0x10B4(0x4)(Edit, BlueprintVisible, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DistanceY;                                         // 0x10B8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DistanceSize;                                      // 0x10BC(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                NightVisionBuff;                                   // 0x10C0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USceneComponent*                       AudioListener;                                     // 0x10C8(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    ScopeCompassMI;                                    // 0x10D0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              ScopeCompassMID;                                   // 0x10D8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    LatitudeMI;                                        // 0x10E0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              LatitudeMID;                                       // 0x10E8(0x8)(Edit, ExportObject, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    LongitudeMI;                                       // 0x10F0(0x8)(ConstParm, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              LongitudeMID;                                      // 0x10F8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LatLongInterpSpeed;                                // 0x1100(0x4)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_426D[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              CurrentCompassAngle;                               // 0x1110(0x18)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CompassNorthAngle;                                 // 0x1128(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CompassInterpSpeed;                                // 0x112C(0x4)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LatitudeOrigin;                                    // 0x1130(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LatitudeScale;                                     // 0x1134(0x4)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LongitudeOrigin;                                   // 0x1138(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LongitudeScale;                                    // 0x113C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SoundFadeInSpeed;                                  // 0x1140(0x4)(Edit, ExportObject, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinTargetingFOV;                                   // 0x1144(0x4)(Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxTargetingFOV;                                   // 0x1148(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_426F[0x16];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bZoomIn;                                           // 0x1162(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bZoomOut;                                          // 0x1163(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsNightVisionOn;                                  // 0x1164(0x1)(BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4271[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalWeaponElectronicBinoculars* GetDefaultObj();

	bool SetBinocularsTargeting();
	void ServerSetActivateNightVision(int8* bActive);
	float GetZoomFloat();
	void ClientSetActivateNightVision(int8* bActive);
};

// 0x2F0 (0x1398 - 0x10A8)
// Class ShooterGame.PrimalWeaponGPS
class APrimalWeaponGPS : public AShooterWeapon_Melee
{
public:
	class USkeletalMeshComponent*                CompassMesh1P;                                     // 0x10A8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                CompassMesh3P;                                     // 0x10B0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                MapMesh3P;                                         // 0x10B8(0x8)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UStaticMesh*                           AssetSM_MarkerMesh;                                // 0x10C0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UStaticMesh*                           AssetSM_PlayerMarkerMesh;                          // 0x10C8(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UStaticMesh*                           AssetSM_BalloonMarkerMesh;                         // 0x10D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MarkerMapScaleX;                                   // 0x10D8(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MarkerMapScaleY;                                   // 0x10DC(0x4)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MarkerOffsetZ;                                     // 0x10E0(0x4)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4279[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              MarkerRotationMin;                                 // 0x10E8(0x18)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              MarkerRotationMax;                                 // 0x1100(0x18)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxMapMarkers;                                     // 0x1118(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                MarkerTextColor;                                   // 0x111C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                PlayerMarkerTextColor;                             // 0x1120(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_427C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UStaticMeshComponent*>          MarkerComponents;                                  // 0x1128(0x10)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_427D[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UStaticMeshComponent*                  PlayerLocationMArkerComponent;                     // 0x1148(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_427F[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UStaticMeshComponent*                  ItemBalloonMarkerComponent;                        // 0x1160(0x8)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MapAttachPoint3P;                                  // 0x1168(0x8)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CompassAttachPoint1P;                              // 0x1170(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  GPSBoneName1P;                                     // 0x1178(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           ZoomInMapAnim;                                     // 0x1180(0x10)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           ZoomInGPSAnim;                                     // 0x1190(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           ZoomInCompassAnim;                                 // 0x11A0(0x10)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           ZoomOutMapAnim;                                    // 0x11B0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           ZoomOutGPSAnim;                                    // 0x11C0(0x10)(BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           ZoomOutCompassAnim;                                // 0x11D0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           DisplayMapAnim;                                    // 0x11E0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           DisplayGPSAnim;                                    // 0x11F0(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           DisplayCompassAnim;                                // 0x1200(0x10)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           UnequipMapAnim;                                    // 0x1210(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           UnequipGPSAnim;                                    // 0x1220(0x10)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           UnequipCompassAnim;                                // 0x1230(0x10)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           UnequipCompassAndMapAnim;                          // 0x1240(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           MeleeMapAnim;                                      // 0x1250(0x10)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           MeleeGPSAnim;                                      // 0x1260(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           MeleeCompassAnim;                                  // 0x1270(0x10)(ConstParm, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           MeleeCompassMapAnim;                               // 0x1280(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          TPV_MapOnlyIdle;                                   // 0x1290(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          TPV_GPSOnlyIdle;                                   // 0x1298(0x8)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          TPV_MapAndGPSIdle;                                 // 0x12A0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DigitParameterName;                                // 0x12A8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        LatitudeMaterialIndex1;                            // 0x12B0(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        LatitudeMaterialIndex2;                            // 0x12B4(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        LatitudeMaterialIndex3;                            // 0x12B8(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        LongitudeMaterialIndex1;                           // 0x12BC(0x4)(EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        LongitudeMaterialIndex2;                           // 0x12C0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        LongitudeMaterialIndex3;                           // 0x12C4(0x4)(ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MapMaterialIndex;                                  // 0x12C8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LatitudeOrigin;                                    // 0x12CC(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LatitudeScale;                                     // 0x12D0(0x4)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LongitudeOrigin;                                   // 0x12D4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LongitudeScale;                                    // 0x12D8(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        GPSCompassMaterialIndex;                           // 0x12DC(0x4)(BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CompassCenterParameterName;                        // 0x12E0(0x8)(ConstParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FogOfWarTextureParameterName;                      // 0x12E8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CompassNorthAngle;                                 // 0x12F0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CompassInterpSpeed;                                // 0x12F4(0x4)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwingSpeed;                                        // 0x12F8(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxSwingAngle;                                     // 0x12FC(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ItemBalloonLocation;                               // 0x1300(0x18)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowMap : 1;                                      // Mask: 0x1, PropSize: 0x10x1318(0x1)(Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowGPS : 1;                                      // Mask: 0x2, PropSize: 0x10x1318(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCompassInsteadOfGPS : 1;                       // Mask: 0x4, PropSize: 0x10x1318(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bZoomInMap : 1;                                    // Mask: 0x8, PropSize: 0x10x1318(0x1)(ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bZoomInGPS : 1;                                    // Mask: 0x10, PropSize: 0x10x1318(0x1)(ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWasFirstPerson : 1;                               // Mask: 0x20, PropSize: 0x10x1318(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3A7 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4285[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              CurrentCompassAngle;                               // 0x1320(0x18)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentSwingAngle;                                 // 0x1338(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentSwingFactor;                                // 0x133C(0x4)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentSwingTime;                                  // 0x1340(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PreviousPawnYaw;                                   // 0x1344(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              GPSCompassMaterialInstance;                        // 0x1348(0x8)(Edit, BlueprintVisible, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        PreviousLatitudeNumber;                            // 0x1350(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        PreviousLongitudeNumber;                           // 0x1354(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        PreviousBalloonLatitudeNumber;                     // 0x1358(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        PreviousBalloonLongitudeNumber;                    // 0x135C(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              LatitudeDigit1_MI;                                 // 0x1360(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              LatitudeDigit2_MI;                                 // 0x1368(0x8)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              LatitudeDigit3_MI;                                 // 0x1370(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              LongitudeDigit1_MI;                                // 0x1378(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              LongitudeDigit2_MI;                                // 0x1380(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              LongitudeDigit3_MI;                                // 0x1388(0x8)(Edit, ExportObject, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              Map_MI;                                            // 0x1390(0x8)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalWeaponGPS* GetDefaultObj();

	void ServerShowNone();
	void ServerShowMapOnly();
	void ServerShowGPSOnly();
	void ServerShowBoth();
	bool ServerSetUseCompassInsteadOfGPS();
	void RefreshUseCompass();
};

// 0x30 (0x11A8 - 0x1178)
// Class ShooterGame.PrimalWeaponGrapplingHook
class APrimalWeaponGrapplingHook : public AShooterWeapon_Projectile
{
public:
	bool                                         bDetachGrapHookOnUnequip;                          // 0x1178(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventReeling;                                   // 0x1179(0x1)(ConstParm, ExportObject, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPullingRope;                                      // 0x117A(0x1)(Edit, ConstParm, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_428C[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastTimeWithGrapHook;                              // 0x1180(0x8)(ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USceneComponent*                       CableAttach1P;                                     // 0x1188(0x8)(BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USceneComponent*                       CableAttach3P;                                     // 0x1190(0x8)(ExportObject, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             ReelInSoundCue;                                    // 0x1198(0x8)(DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             ReelOutSoundCue;                                   // 0x11A0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalWeaponGrapplingHook* GetDefaultObj();

};

// 0x88 (0x1200 - 0x1178)
// Class ShooterGame.PrimalWeaponGrenade
class APrimalWeaponGrenade : public AShooterWeapon_Projectile
{
public:
	struct FWeaponAnim                           PrepareThrowAnim;                                  // 0x1178(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           QuickThrowAnim;                                    // 0x1188(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           OvercookHurtAnim;                                  // 0x1198(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  GrenadeBoneName;                                   // 0x11A8(0x8)(Edit, ConstParm, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  GrenadePinBoneName;                                // 0x11B0(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxGrenadeLife;                                    // 0x11B8(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontCookGrenade : 1;                              // Mask: 0x1, PropSize: 0x10x11BC(0x1)(ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideGrenadeOnFireProjectile : 1;                  // Mask: 0x2, PropSize: 0x10x11BC(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnablePrepareThrowAnim : 1;                       // Mask: 0x4, PropSize: 0x10x11BC(0x1)(BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventCookingWhileProne : 1;                     // Mask: 0x8, PropSize: 0x10x11BC(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3A8 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	bool                                         bIsThrowingGrenade;                                // 0x11BD(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsCookingGrenade;                                 // 0x11BE(0x1)(ConstParm, ExportObject, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBlueprintSpeed;                                // 0x11BF(0x1)(Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHideSkeletalMesh;                                 // 0x11C0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4294[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CookingTime;                                       // 0x11C4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ProjectileOrigin;                                  // 0x11C8(0x18)(ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ProjectileShootDir;                                // 0x11E0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4296[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsWeapScout;                                      // 0x11F9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPlayBothFirstAndThirdPersonOnStartFire;           // 0x11FA(0x1)(EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4297[0x5];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalWeaponGrenade* GetDefaultObj();

	void UnHidePin();
	void UnHideGrenade();
	void ServerFixScout();
	void HidePin();
	void HideGrenade();
	float BPGetProjectileSpeed();
	void BPFixScout();
};

// 0xE8 (0x3510 - 0x3428)
// Class ShooterGame.PrimalWheeledVehicleCharacter
class APrimalWheeledVehicleCharacter : public APrimalDinoCharacter
{
public:
	float                                        RetainPlayerCameraRotationWhileMovingFor;          // 0x3428(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CameraRotationInterpolationSpeed;                  // 0x342C(0x4)(EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimalWheeledVehicleDustType*         DustType;                                          // 0x3430(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              DustPSC[0x4];                                      // 0x3438(0x20)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       EngineAC;                                          // 0x3458(0x8)(Edit, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       HonkAC;                                            // 0x3460(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       SkidAC;                                            // 0x3468(0x8)(Edit, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             SkidSound;                                         // 0x3470(0x8)(Edit, ConstParm, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             HonkSound;                                         // 0x3478(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             SkidSoundStop;                                     // 0x3480(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             LandingSound;                                      // 0x3488(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             ImpactSound;                                       // 0x3490(0x8)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SkidFadeoutTime;                                   // 0x3498(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SkidThresholdVelocity;                             // 0x349C(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LongSlipSkidThreshold;                             // 0x34A0(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LateralSlipSkidThreshold;                          // 0x34A4(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SkidDurationRequiredForStopSound;                  // 0x34A8(0x4)(ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_42A3[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SpringCompressionLandingThreshold;                 // 0x34B8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_42A4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UParticleSystem*                       DeathFX;                                           // 0x34C0(0x8)(Edit, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UpForce;                                           // 0x34C8(0x4)(BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BackForce;                                         // 0x34CC(0x4)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFollowCamera;                                     // 0x34D0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_42A7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinimumDamageSpeed;                                // 0x34D4(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_42A8[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector                               CenterTraceLocationOffset;                         // 0x34F0(0x18)(ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_42A9[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalWheeledVehicleCharacter* GetDefaultObj();

	void StopHonk();
	void StartHonk();
	void ServerHonk(bool* bEnable);
	void NetHonk(bool* bEnable);
};

// 0x90 (0xC0 - 0x30)
// Class ShooterGame.PrimalWheeledVehicleDustType
class UPrimalWheeledVehicleDustType : public UDataAsset
{
public:
	class UParticleSystem*                       DefaultFX;                                         // 0x30(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       ConcreteFX;                                        // 0x38(0x8)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       DirtFX;                                            // 0x40(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       WaterFX;                                           // 0x48(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       MetalFX;                                           // 0x50(0x8)(ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       WoodFX;                                            // 0x58(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       GrassFX;                                           // 0x60(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       FleshFX;                                           // 0x68(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       LeavesFX;                                          // 0x70(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       RockFX;                                            // 0x78(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       SandFX;                                            // 0x80(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       SnowFX;                                            // 0x88(0x8)(Edit, ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DefaultMinSpeed;                                   // 0x90(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConcreteMinSpeed;                                  // 0x94(0x4)(Edit, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DirtMinSpeed;                                      // 0x98(0x4)(ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WaterMinSpeed;                                     // 0x9C(0x4)(ConstParm, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MetalMinSpeed;                                     // 0xA0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WoodMinSpeed;                                      // 0xA4(0x4)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GrassMinSpeed;                                     // 0xA8(0x4)(Edit, ConstParm, ExportObject, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FleshMinSpeed;                                     // 0xAC(0x4)(Edit, ConstParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LeavesMinSpeed;                                    // 0xB0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RockMinSpeed;                                      // 0xB4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SandMinSpeed;                                      // 0xB8(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SnowMinSpeed;                                      // 0xBC(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalWheeledVehicleDustType* GetDefaultObj();

};

// 0x1E0 (0x298 - 0xB8)
// Class ShooterGame.PrimalWindSourceComponent
class UPrimalWindSourceComponent : public UActorComponent
{
public:
	uint8                                        bEnableFluidInteraction : 1;                       // Mask: 0x1, PropSize: 0x10xB8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        bEnableBubbleSpawnWhenUnderwaterIfWaterInteractionIsEnabled : 1; // Mask: 0x2, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableFoliageInteraction : 1;                     // Mask: 0x4, PropSize: 0x10xB8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFluidInteractionWasThrottled : 1;                 // Mask: 0x8, PropSize: 0x10xB8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFoliageInteractionWasThrottled : 1;               // Mask: 0x10, PropSize: 0x10xB8(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableFoliageInteractionOnBabies : 1;             // Mask: 0x20, PropSize: 0x10xB8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableFluidEmissionTexture : 1;                   // Mask: 0x40, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnabled : 1;                                      // Mask: 0x80, PropSize: 0x10xB8(0x1)(Edit, ConstParm, Parm, ZeroConstructor, Transient, EditConst, GlobalConfig)
	uint8                                        bUseVolumetricDispatcher : 1;                      // Mask: 0x1, PropSize: 0x10xB9(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTriggerConstant : 1;                              // Mask: 0x2, PropSize: 0x10xB9(0x1)(BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTriggerPeriodically : 1;                          // Mask: 0x4, PropSize: 0x10xB9(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTriggerManual : 1;                                // Mask: 0x8, PropSize: 0x10xB9(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseActorVelForStrength : 1;                       // Mask: 0x10, PropSize: 0x10xB9(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseActorVelForDirection : 1;                      // Mask: 0x20, PropSize: 0x10xB9(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPExitedFluidSurface : 1;                      // Mask: 0x40, PropSize: 0x10xB9(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPImpactedFluidSurface : 1;                    // Mask: 0x80, PropSize: 0x10xB9(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPImpactingFluidSurfaceTick : 1;               // Mask: 0x1, PropSize: 0x10xBA(0x1)(Edit, ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableDebug : 1;                                  // Mask: 0x2, PropSize: 0x10xBA(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	uint8                                        SelectThisComponent : 1;                           // Mask: 0x4, PropSize: 0x10xBA(0x1)(Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        SpecialCheck_DetermineInnerSphereImpactsFluid : 1; // Mask: 0x8, PropSize: 0x10xBA(0x1)(ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClearedParameters : 1;                            // Mask: 0x10, PropSize: 0x10xBA(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWasEnabled : 1;                                   // Mask: 0x20, PropSize: 0x10xBA(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3AC : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class EWindSourceMode                   WindSourceMode;                                    // 0xBB(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_42CD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               WindSourceRelativeOffset;                          // 0xC0(0x18)(ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ExtraCapsuleWindSourceRelativeOffset;              // 0xD8(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RadiusInner;                                       // 0xF0(0x4)(ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RadiusOuter;                                       // 0xF4(0x4)(Edit, ExportObject, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class EEffectScope                      EffectScope;                                       // 0xF8(0x1)(Edit, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_42D0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  CharacterAttachmentSocket;                         // 0xFC(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        Priority;                                          // 0x104(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        MinimumFoliageInteractionRadiusForBabies;          // 0x108(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Strength;                                          // 0x10C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        VelStrengthMultiplierXY;                           // 0x110(0x4)(Edit, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        VelStrengthMultiplierZ;                            // 0x114(0x4)(Edit, BlueprintVisible, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlasticityAmount;                                  // 0x118(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlasticityAmountAbsolute;                          // 0x11C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector3f                             SourceScale;                                       // 0x120(0xC)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OscillationSpeed;                                  // 0x12C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector3f                             DirectionalRadial;                                 // 0x130(0xC)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        BendAmount;                                        // 0x13C(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinVelocityThresholdSquared;                       // 0x140(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WindSpeed;                                         // 0x144(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WindHeading;                                       // 0x148(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WindFrequency;                                     // 0x14C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WindStrength;                                      // 0x150(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TriggerPeriodicInterval;                           // 0x154(0x4)(Edit, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector3f                             CurrentVelocity;                                   // 0x158(0xC)(Edit, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector3f                             CurrentAcceleration;                               // 0x164(0xC)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector3f                             ExtraCapsuleCurrentVelocity;                       // 0x170(0xC)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector3f                             ExtraCapsuleCurrentAcceleration;                   // 0x17C(0xC)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastTriggeredPeriodicTime;                         // 0x188(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       BeginPlayTime;                                     // 0x190(0x8)(Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PreviousLocation;                                  // 0x198(0x18)(Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector3f                             PreviousVelocity;                                  // 0x1B0(0xC)(Edit, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_42D5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ExtraCapsulePreviousLocation;                      // 0x1C0(0x18)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector3f                             ExtraCapsulePreviousVelocity;                      // 0x1D8(0xC)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_42D6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UCurveFloat*                           PlasticityCurve;                                   // 0x1E8(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class APrimalFoliageSolver*                  MyFoliageSolver;                                   // 0x1F0(0x8)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AVolumetricDispatcher*                 MyDispatcher;                                      // 0x1F8(0x8)(Edit, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExtraCapsuleAttachmentSocket;                      // 0x200(0x8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AttachmentSocket;                                  // 0x208(0x8)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CollectionIndex;                                   // 0x210(0x4)(ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_42D7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimitiveComponent*                   AttachmentComponent;                               // 0x218(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint64                                       LastFrameBelowFluidSurface;                        // 0x220(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint64                                       LastFrameAboveFluidSurface;                        // 0x228(0x8)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         SpecialCheck_IsInnerSphereAboveWater;              // 0x230(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_42D8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	uint64                                       LastFrameAppliedBySolver;                          // 0x238(0x8)(Edit, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_42D9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        BubbleComponentIsActive : 1;                       // Mask: 0x1, PropSize: 0x10x244(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_42DA[0x53];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalWindSourceComponent* GetDefaultObj();

	void SetAttachment(class UPrimitiveComponent* NewAttachmentComponent, int32 AttachmentCollectionIndex);
	void RefreshAttachment();
	bool IsInteractionEnabled();
	bool IsAttachedToPrimalStructure();
	bool IsAttachedToPrimalCharacter();
	class UPrimalWindSourceComponent* GetScaledRadiiForFoliageInteraction(float Inner, float Outer);
	struct FVector GetCurrentWindSourceLocation();
	struct FVector GetCurrentExtraCapsuleWindSourceLocation();
	void BPImpactingFluidSurfaceTick(const struct FVector& ImpactLocation, float PenetrationScalar);
	void BPImpactedFluidSurface(const struct FVector& ImpactLocation, float PenetrationScalar);
	void BPHandleCreatingBubbles();
	void BPExitedFluidSurface(const struct FVector& ImpactLocation, float PenetrationScalar);
	void BPDeactivateBubbleComponent();
	class FName AttachWindSourceToMeshComponent(class UMeshComponent* AttachMeshComp);
};

// 0x30 (0x60 - 0x30)
// Class ShooterGame.PrimalWirelessExchangeData
class UPrimalWirelessExchangeData : public UDataAsset
{
public:
	enum class EWirelessTransmissionType         WirelessType;                                      // 0x30(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_42E0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  WirelessTag;                                       // 0x34(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_42E1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          WirelessTagOverrides;                              // 0x40(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SupplyRange;                                       // 0x50(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SupplyLinkRange;                                   // 0x54(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConsumeRange;                                      // 0x58(0x4)(ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowPlacementPreview;                             // 0x5C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_42E3[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalWirelessExchangeData* GetDefaultObj();

};

// 0x428 (0x468 - 0x40)
// Class ShooterGame.PrimalWordFilter
class UPrimalWordFilter : public UPrimalWordList
{
public:
	uint8                                        Pad_42ED[0x414];                                   // Fixing Size After Last Property  > TateDumper <
	bool                                         WordsNeedSpaces;                                   // 0x454(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         DontCheckLetterRepeats;                            // 0x455(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_42EE[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        CensoredWords;                                     // 0x458(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalWordFilter* GetDefaultObj();

	bool SanitizeString();
	bool HasIllegalWord();
	bool HasBadParseCharacter();
};

// 0x8 (0x30 - 0x28)
// Class ShooterGame.PrimalWorldBuffCustomImplement
class UPrimalWorldBuffCustomImplement : public UObject
{
public:
	class FName                                  WorldBuffID;                                       // 0x28(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalWorldBuffCustomImplement* GetDefaultObj();

	void UpdateBuffCustomPersistantData();
	void Tick(float* DeltaSeconds);
	void PreDeconstruction();
	void PostConstruction();
	class UWorld* GetWorld();
	class UObject* GetOwner();
	void BuffTimerRefreshed();
	int32 BuffStackIncreased();
	int32 BuffStackDecrease();
};

// 0x28 (0x50 - 0x28)
// Class ShooterGame.PrimalWorldBuffData
class UPrimalWorldBuffData : public UObject
{
public:
	TArray<struct FWorldBuffDefinition>          WorldBuffDefinitions;                              // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalWorldBuffCustomImplement*> ConstructedWorldBuffImplements;                    // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4300[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalWorldBuffData* GetDefaultObj();

	void UnsuspendWorldBuffs();
	void SuspendWorldBuffs();
	class FName RemoveWorldBuff(class UObject** WorldContextObject);
	TArray<struct FWorldBuffDefinition> GetWorldBuffSet();
	bool GetWorldBuffDefinitionByName();
	class UPrimalWorldBuffData* GetWorldBuffData();
	bool CanActivateWorldBuff(class UObject** WorldContextObject);
	int32 AddWorldBuff(class UObject** WorldContextObject);
};

// 0x78 (0x538 - 0x4C0)
// Class ShooterGame.PrimalWorldModifier
class APrimalWorldModifier : public AActor
{
public:
	bool                                         bUseMapExclusionListAsExclusiveList;               // 0x4C0(0x1)(Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4308[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        MapExclusionList;                                  // 0x4C8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          PriorityTags;                                      // 0x4D8(0x10)(BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class AInstancedFoliageActor*>        ReskinnedFoliageTrackingList;                      // 0x4E8(0x10)(Edit, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FFoliageReskinDefinition>      FoliageReskinList;                                 // 0x4F8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class AStaticMeshActor*>              ReskinnedLevelStaticMeshTrackingList;              // 0x508(0x10)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSublevelOverrideGroup>        SublevelOverrideGroups;                            // 0x518(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnFoliageSkinned;                                  // 0x528(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalWorldModifier* GetDefaultObj();

	void TrySublevelSwaps();
	struct FSublevelOverrideGroup TryStaticMeshActorReskin();
	class AInstancedFoliageActor* TryFoliageReskin();
	void RescanForMapStaticMeshes();
	void RescanForFoliage();
	bool IsAllowedOnCurrentMap();
	bool HasPriority();
	struct FSublevelOverrideGroup GetCurrentSublevelOverrideGroup();
	void DoRescanForSublevelLoaded();
	void BPSkinFoliage(class UHierarchicalInstancedStaticMeshComponent* FoliageInstance);
	void BPPreFoliageScan();
	void BPPostInitializationHasPriority();
	void BPPostFoliageScan();
};

// 0x9A8 (0x22E0 - 0x1938)
// Class ShooterGame.PrimalWorldSettings
class APrimalWorldSettings : public AARKNXWorldSettings
{
public:
	class UClass*                                GraphClass;                                        // 0x1938(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableReplicationGraph;                          // 0x1940(0x1)(BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bMapSupportsMissions;                              // 0x1941(0x1)(Edit, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_431A[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                DefaultCameraPositionActor;                        // 0x1948(0x8)(Edit, ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UObject*>                       DynamicResourceRefs;                               // 0x1950(0x10)(ExportObject, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEditorEnableNPCSpawners;                          // 0x1960(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEditorDoForceDisableNPCSpawners;                  // 0x1961(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventGlobalNonEventSpawnOverrides;              // 0x1962(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEditorForceSpawnCharacterAsFemale;                // 0x1963(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PlacingStructureToggleMeshTagVisibility;           // 0x1964(0x8)(BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForcePreventPhysicsSimulation;                    // 0x196C(0x1)(Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceEnablePhysicsSimulation;                     // 0x196D(0x1)(ExportObject, Net, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bGenerateTerrain;                                  // 0x196E(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceSpawnAnimationTest;                          // 0x196F(0x1)(ConstParm, ExportObject, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOverrideLongitudeAndLatitude;                     // 0x1970(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_431D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LongitudeScale;                                    // 0x1974(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RegularWildDinoResistanceVersusTamesMultiplier;    // 0x1978(0x4)(ConstParm, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RegularWildDinoDamageVersusTamesMultiplier;        // 0x197C(0x4)(BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RegularWildDinoXPMultiplier;                       // 0x1980(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LatitudeScale;                                     // 0x1984(0x4)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LongitudeOrigin;                                   // 0x1988(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LatitudeOrigin;                                    // 0x198C(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MinKillX;                                          // 0x1990(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxKillX;                                          // 0x1994(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinKillY;                                          // 0x1998(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxKillY;                                          // 0x199C(0x4)(Edit, ExportObject, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxKillZ;                                          // 0x19A0(0x4)(BlueprintVisible, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxUnderWorldTraceRangeZ;                          // 0x19A4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                CurrentMinimapData;                                // 0x19A8(0x8)(Edit, BlueprintVisible, ExportObject, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            OverrideWeaponMapTextureEmpty;                     // 0x19B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            OverrideWeaponMapTextureFilled;                    // 0x19B8(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            OverrideUIMapTextureEmpty;                         // 0x19C0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            OverrideUIMapTextureFilled;                        // 0x19C8(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            OverrideUIMapTextureSmall;                         // 0x19D0(0x8)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                LevelBlueprintContainerActor;                      // 0x19D8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PrimalGameDataOverride;                            // 0x19E0(0x8)(Edit, ConstParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                ForceLoadMapName;                                  // 0x19E8(0x10)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        OverridePlayerSpawnRegions;                        // 0x19F8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                OverridePlayerSpawnRegionDifficulties;             // 0x1A08(0x10)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<uint8>                                OverridePlayerSpawnRegionsHideInSpawnUI;           // 0x1A18(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> LevelUseNPCClasses;                                // 0x1A28(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AMatineeActorManager*                  MatineeManager;                                    // 0x1A38(0x8)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4327[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	struct FReverbSettings                       DefaultWaterReverbSettings;                        // 0x1A98(0x20)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FInteriorSettings                     DefaultWaterAmbientZoneSettings;                   // 0x1AB8(0x24)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4328[0x64];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FClassRemappingWeight>         NPCRandomSpawnClassWeights;                        // 0x1B40(0x10)(Edit, BlueprintVisible, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FClassRemappingWeight>         SinglePlayerNPCRandomSpawnClassWeights;            // 0x1B50(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             SpawnLevelBoundsMax;                               // 0x1B60(0x10)(BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             SpawnLevelBoundsMin;                               // 0x1B70(0x10)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AutoSpectatorNamesMinZ;                            // 0x1B80(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseSpawnLevelBounds;                              // 0x1B84(0x1)(ConstParm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_432A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        CachedPersistentObjectClasses;                     // 0x1B88(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinosLerpToMaxRandomBaseLevel;                     // 0x1B98(0x4)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_432B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                DefaultSpawnPointRandomIndices;                    // 0x1BA0(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          OverrideFirstSpawnAnim;                            // 0x1BB0(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          OverrideSpawnAnim;                                 // 0x1BB8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TheWorldGammaOffset;                               // 0x1BC0(0x4)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWaterDinosUseFlightBlocking;                      // 0x1BC4(0x1)(ConstParm, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_432D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        GlobalHarvestHealthMultiplier;                     // 0x1BC8(0x4)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalHarvestAmountMultiplier;                     // 0x1BCC(0x4)(ConstParm, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFlyersStructurePreventionDismountingAnywhere;     // 0x1BD0(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFlyersStructurePreventionDismountingUnderTerrainOnly; // 0x1BD1(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_432E[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OverrideDifficultyMax;                             // 0x1BD4(0x4)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FItemMultiplier>               GlobalSpoilingTimeMultipliers;                     // 0x1BD8(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalStatusAdjustmentRateMultipliersPositive[0xC]; // 0x1BE8(0x30)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        GlobalStatusAdjustmentRateMultipliersNegative[0xC]; // 0x1C18(0x30)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ValidEngramGroupsBitMask;                          // 0x1C48(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_432F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FInventoryComponentDefaultItemsAppend> InventoryComponentAppends;                         // 0x1C50(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FInventoryComponentDefaultItemsAppend> InventoryComponentAppendsNonDedicated;             // 0x1C60(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DayCycleSpeedScale;                                // 0x1C70(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        DayTimeSpeedScale;                                 // 0x1C74(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        NightTimeSpeedScale;                               // 0x1C78(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        NegativeHyperthermalInsulationMultiplier;          // 0x1C7C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PositiveHyperthermalInsulationMultiplier;          // 0x1C80(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NegativeHypothermalInsulationMultiplier;           // 0x1C84(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PositiveHypothermalInsulationMultiplier;           // 0x1C88(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4333[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        GlobalCuddleFoodList;                              // 0x1C90(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CarnivoreNaturalTargetingRangeMultiplier;          // 0x1CA0(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HerbivoreNaturalTargetingRangeMultiplier;          // 0x1CA4(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicDay;                            // 0x1CA8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicNight;                          // 0x1CB0(0x8)(ConstParm, ExportObject, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicDay_Heavy;                      // 0x1CB8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicNight_Heavy;                    // 0x1CC0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            SplitscreenUnderwaterSound;                        // 0x1CC8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalHarvestingComponent>> HarvestComponentHealthScaleParents;                // 0x1CD0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                HarvestComponentHealthScaleParentsValue;           // 0x1CE0(0x10)(ExportObject, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalHarvestingComponent>> HarvestComponentHealthScaleExactMatch;             // 0x1CF0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                HarvestComponentHealthScaleExactMatchValue;        // 0x1D00(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Override_Sound_ReconnectToCharacter;               // 0x1D10(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        RequiresID;                                        // 0x1D18(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreBiomeWind;                                  // 0x1D1C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4338[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    Override_PostProcess_ColorLUT;                     // 0x1D20(0x8)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DefaultWaterLineStartZ;                            // 0x1D28(0x4)(Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DefaultDeepWaterStartZ;                            // 0x1D2C(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaximumPlayerFlyZ;                                 // 0x1D30(0x4)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_433A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftObjectPtr<class UObject>>        ExtraReferences;                                   // 0x1D38(0x10)(ConstParm, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> AllowDownloadDinoClasses;                          // 0x1D48(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                DefaultBiomeName;                                  // 0x1D58(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UDeferredMovementContext*              DeferredMovement;                                  // 0x1D68(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> PreventStructureClasses;                           // 0x1D70(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxFallSpeedMultiplier;                            // 0x1D80(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableStructureObstructedByWorldGeometryCheck;   // 0x1D84(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceEnableTurretLimit;                           // 0x1D85(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseMissions;                                      // 0x1D86(0x1)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseMissionsMetaData;                              // 0x1D87(0x1)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        LoadForceRespawnDinosVersion;                      // 0x1D88(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FirstSpawnNotTargetableForTime;                    // 0x1D8C(0x4)(Edit, ConstParm, BlueprintVisible, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreInMeshCheckingUnderwater;                   // 0x1D90(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowRidingFliers;                                // 0x1D91(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceDinoDrawHUD;                                 // 0x1D92(0x1)(ConstParm, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableFirstPersonRiding;                         // 0x1D93(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceDinoHighQualityAttacks;                      // 0x1D94(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bScaleDinoFloatingHUDByMeshSize;                   // 0x1D95(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_433B[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ForceCameraTransitionTimeUponPossession;           // 0x1D98(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AdditionalDinoHealthBarOffsetY;                    // 0x1D9C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AIOverrideNotifyNeighborsRange;                    // 0x1DA0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_433C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SpawnAnimationLocationOffset;                      // 0x1DA8(0x18)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MissionMultiUseEntryToolTipWidget;                 // 0x1DC0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MissionDataBuff;                                   // 0x1DC8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Config, GlobalConfig, SubobjectReference)
	class UClass*                                ActiveEventSpawnActor;                             // 0x1DD0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FAvailableMission>             AvailableMissions;                                 // 0x1DD8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMissionMetaData>              AvailableMissionsMetaData;                         // 0x1DE8(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMissionMetaData>              NonPlayerFacingMissionsMetaData;                   // 0x1DF8(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_433D[0x148];                                   // Fixing Size After Last Property  > TateDumper <
	float                                        GlobalDinoCountValue;                              // 0x1F50(0x4)(ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_433E[0x1C];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        ServerForceReplicateObjectClasses;                 // 0x1F70(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class UObject>                 ActiveEventOverrideObjectBlueprint;                // 0x1F80(0x30)(BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<class FName, TSoftClassPtr<class UObject>> EventNameToActiveEventOverrideObject;              // 0x1FB0(0x50)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSet<class AActor*>                          DeferredTickActors;                                // 0x2000(0x50)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        UnregisteredDeferredTickActors;                    // 0x2050(0x10)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimalWorldSettingsEventOverrides*    ActiveEventOverrides;                              // 0x2060(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                MetaTagInfoClass;                                  // 0x2068(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnforceSingleBiomeBuff;                           // 0x2070(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHideMissionSortByDistance;                        // 0x2071(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPlayPersistentPlayer;                             // 0x2072(0x1)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4340[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SM4DirectionalLightMultiplier;                     // 0x2074(0x4)(ConstParm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SM4SKyLightMultiplier;                             // 0x2078(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SM5DirectionalLightMultiplier;                     // 0x207C(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SM5SKyLightMultiplier;                             // 0x2080(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NoTrueSkySM5DirectionalLightMultiplier;            // 0x2084(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NoTrueSkySM5SKyLightMultiplier;                    // 0x2088(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConsoleSM5DirectionalLightMultiplier;              // 0x208C(0x4)(Edit, ConstParm, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConsoleSM5SKyLightMultiplier;                      // 0x2090(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalIBLCaptureBrightness;                        // 0x2094(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GlobalBakeAndStreamIBLMultiplier;                  // 0x2098(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4344[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               TrueSkyColorMultiplier;                            // 0x20A0(0x18)(ExportObject, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SkyIBLIntensityMultiplier;                         // 0x20B8(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GroundColorMultiplier;                             // 0x20BC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SkyColorMultiplier;                                // 0x20C0(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4346[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               AtmosphericFogMultiplier;                          // 0x20C8(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TrueSkyIntensityMultiplier;                        // 0x20E0(0x4)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalViewDistanceMultiplier;                      // 0x20E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalProxyDistanceMultiplier;                     // 0x20E8(0x4)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_434A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                IntroMoviePath;                                    // 0x20F0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        IntroExplorerNoteID;                               // 0x2100(0x4)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_434C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                OutroMoviePath;                                    // 0x2108(0x10)(ConstParm, ExportObject, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        OutroExplorerNoteID;                               // 0x2118(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowRagdolls;                                    // 0x211C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_434E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          MainMapDataLayers;                                 // 0x2120(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        GloballyLimitedParticleNum;                        // 0x2130(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4350[0x54];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FAdditionalStaticMeshSockets>  AdditionalFakeStaticMeshSockets;                   // 0x2188(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSet<TWeakObjectPtr<class UFXSystemComponent>> DeferredFXActivations;                             // 0x2198(0x50)(ConstParm, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableAllASAFluidSim;                            // 0x21E8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4352[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FGlobalMaterialParamOverrides         GlobalMaterialParamOverrides;                      // 0x21F0(0xF0)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnInstance)

	static class UClass* StaticClass();
	static class APrimalWorldSettings* GetDefaultObj();

	bool IsAllowedInLevelBounds(struct FVector* AtLocat);
	bool GetMissionMetaData(class FName* MissionTag, struct FMissionMetaData* Value);
	bool GetFoliageAndFluidSimEnabled();
	bool GetExtraStaticMeshSocketByName(struct FFakeStaticMeshSocketData* OutFakeSocketData);
	bool CanSpawnGloballyLimitedParticle(class UNiagaraComponent** ForNiagaraComponent);
};

// 0x30 (0x58 - 0x28)
// Class ShooterGame.PrimalWorldSettingsEventOverrides
class UPrimalWorldSettingsEventOverrides : public UObject
{
public:
	TArray<struct FClassRemappingWeight>         NPCRandomSpawnClassWeights;                        // 0x28(0x10)(Edit, BlueprintVisible, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FClassRemappingWeight>         SinglePlayerNPCRandomSpawnClassWeights;            // 0x38(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FActiveEventGlobalStatusAdjustments> AdditionalGlobalStatusAdjustmentsDuringEvent;      // 0x48(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalWorldSettingsEventOverrides* GetDefaultObj();

};

// 0x160 (0x8F0 - 0x790)
// Class ShooterGame.ProgressBarWidget
class UProgressBarWidget : public UCustomCanvasWidget
{
public:
	class UTexture2D*                            ProgressBarBackground;                             // 0x790(0x8)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ProgressBarForeground;                             // 0x798(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentPercent;                                    // 0x7A0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          BarForegroundColor;                                // 0x7A4(0x10)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PercentInterpolationSpeed;                         // 0x7B4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinValueStartRedFlash;                             // 0x7B8(0x4)(BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxValueStartRedFlash;                             // 0x7BC(0x4)(BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinValueStartYellowFlash;                          // 0x7C0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxValueStartYellowFlash;                          // 0x7C4(0x4)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          BarFlashColor;                                     // 0x7C8(0x10)(ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          BarFlashColorBackground;                           // 0x7D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          RedBarFlashColor;                                  // 0x7E8(0x10)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          RedBarFlashColorBackground;                        // 0x7F8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          YellowBarFlashColor;                               // 0x808(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          YellowBarFlashColorBackground;                     // 0x818(0x10)(Edit, ConstParm, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BarFlashSpeed;                                     // 0x828(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BarFlashThreshold;                                 // 0x82C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BarFlashDuration;                                  // 0x830(0x4)(ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4357[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DisplayString;                                     // 0x838(0x10)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	struct FLinearColor                          DisplayStringColor;                                // 0x848(0x10)(Edit, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UFont*                                 DisplayStringFont;                                 // 0x858(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             DisplayStringOffset;                               // 0x860(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             DisplayStringScale;                                // 0x870(0x10)(ExportObject, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDisplayStringCenterX : 1;                         // Mask: 0x1, PropSize: 0x10x880(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDisplayStringCenterY : 1;                         // Mask: 0x2, PropSize: 0x10x880(0x1)(BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bPrintNumbersInDisplayString : 1;                  // Mask: 0x4, PropSize: 0x10x880(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysDrawDisplayString : 1;                      // Mask: 0x8, PropSize: 0x10x880(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisplayStringNumbersUseFloats : 1;                // Mask: 0x10, PropSize: 0x10x880(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBarFlashThresholdAbsolute : 1;                    // Mask: 0x20, PropSize: 0x10x880(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoBarFlashOnDecrease : 1;                         // Mask: 0x40, PropSize: 0x10x880(0x1)(ConstParm, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoBarFlashOnIncrease : 1;                         // Mask: 0x80, PropSize: 0x10x880(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInterpolatePercent : 1;                           // Mask: 0x1, PropSize: 0x10x881(0x1)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseDisplayString : 1;                             // Mask: 0x2, PropSize: 0x10x881(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseLinkedCharacterStatus : 1;                     // Mask: 0x4, PropSize: 0x10x881(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseOutlineDropShadow : 1;                         // Mask: 0x8, PropSize: 0x10x881(0x1)(Edit, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3B2 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class EPrimalCharacterStatusState       LinkedCharacterStatusStateType;                    // 0x882(0x1)(Edit, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EPrimalCharacterStatusValue       LinkedCharacterStatusValueType;                    // 0x883(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseLinkedStatusStateToFlashRed : 1;               // Mask: 0x1, PropSize: 0x10x884(0x1)(Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3B3 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4358[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          BarBackgroundColor;                                // 0x888(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4359[0x58];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UProgressBarWidget* GetDefaultObj();

};

// 0xF8 (0x120 - 0x28)
// Class ShooterGame.RadialSelectorHUD
class URadialSelectorHUD : public UObject
{
public:
	int32                                        NumDivisions;                                      // 0x28(0x4)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InnerDistance;                                     // 0x2C(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        OuterDistance;                                     // 0x30(0x4)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        OuterDistanceScaleCountOffset;                     // 0x34(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseUISizeY;                                       // 0x38(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SelectionDistanceOffset;                           // 0x3C(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CenterImageSizeX;                                  // 0x40(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CenterImageSizeY;                                  // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstance*                     MI;                                                // 0x48(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CenterImage;                                       // 0x50(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UTexture2D*                            SegmentTexture;                                    // 0x58(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            SelectedTexture;                                   // 0x60(0x8)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstance*                     RadialMaterial;                                    // 0x68(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UFont*                                 TextFont;                                          // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CurrentSelection;                                  // 0x78(0x4)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SelectedSelection;                                 // 0x7C(0x4)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        TargetSelection;                                   // 0x80(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ActivationSelection;                               // 0x84(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SelectionTime;                                     // 0x88(0x4)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_435D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<float>                                DivisionAlpha;                                     // 0x90(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        ActionNames;                                       // 0xA0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              Segment_SelectedDynamicMI;                         // 0xB0(0x8)(Edit, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              Segment_UnselectedDynamicMI;                       // 0xB8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstance*                     AnalogDirectionDynamicMI;                          // 0xC0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_435E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        IconDefaultSize;                                   // 0xD0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IconSizeScaleFactor;                               // 0xD4(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IconMaxSize;                                       // 0xD8(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableTransitionScaling;                         // 0xDC(0x1)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bStayOnScreen;                                     // 0xDD(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowMovement;                                    // 0xDE(0x1)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_4360[0x41];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class URadialSelectorHUD* GetDefaultObj();

};

// 0x70 (0x190 - 0x120)
// Class ShooterGame.RadialSelectorHUD_Custom
class URadialSelectorHUD_Custom : public URadialSelectorHUD
{
public:
	uint8                                        Pad_4361[0x68];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        TextScaleCountOffset;                              // 0x188(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4362[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class URadialSelectorHUD_Custom* GetDefaultObj();

};

// 0x98 (0x1B8 - 0x120)
// Class ShooterGame.RadialSelectorHUD_Inventory
class URadialSelectorHUD_Inventory : public URadialSelectorHUD
{
public:
	class UPrimalInventoryComponent*             PlayerInventory;                                   // 0x120(0x8)(Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4363[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            ClearTameOrderingGroupIcon;                        // 0x150(0x8)(ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    DinoGroupIconArray;                                // 0x158(0x10)(ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    CommandsBindingsIcons;                             // 0x168(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            StartYellingIcon;                                  // 0x178(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            StopYellingIcon;                                   // 0x180(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            StartTalkingIcon;                                  // 0x188(0x8)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            StopTalkingIcon;                                   // 0x190(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            StartWhisperingIcon;                               // 0x198(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            StopWhisperingIcon;                                // 0x1A0(0x8)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    ChatIcons;                                         // 0x1A8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class URadialSelectorHUD_Inventory* GetDefaultObj();

};

// 0x48 (0x168 - 0x120)
// Class ShooterGame.RadialSelectorHUD_MultiUse
class URadialSelectorHUD_MultiUse : public URadialSelectorHUD
{
public:
	uint8                                        Pad_4365[0x34];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        TextScaleCountOffset;                              // 0x154(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4366[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class URadialSelectorHUD_MultiUse* GetDefaultObj();

};

// 0xA0 (0x1C0 - 0x120)
// Class ShooterGame.RadialSelectorHUD_PlayerAction
class URadialSelectorHUD_PlayerAction : public URadialSelectorHUD
{
public:
	TArray<enum class EPlayerActionIndex>        ActionBindings;                                    // 0x120(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    ActionBindingsIcons;                               // 0x130(0x10)(ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4368[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bAddUnlockableEmotes;                              // 0x170(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4369[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            ShowHatIcon;                                       // 0x178(0x8)(BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            HideHatIcon;                                       // 0x180(0x8)(Edit, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_436A[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TextScaleCountOffset;                              // 0x190(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_436B[0x2C];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class URadialSelectorHUD_PlayerAction* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class ShooterGame.RCONServer
class URCONServer : public UObject
{
public:
	uint8                                        Pad_436D[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	class UShooterCheatManager*                  CheatManager;                                      // 0x50(0x8)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig)
	uint8                                        Pad_436E[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class URCONServer* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class ShooterGame.ReportServerReplicatedFunctionsCommandlet
class UReportServerReplicatedFunctionsCommandlet : public UCommandlet
{
public:

	static class UClass* StaticClass();
	static class UReportServerReplicatedFunctionsCommandlet* GetDefaultObj();

};

// 0x0 (0x4C0 - 0x4C0)
// Class ShooterGame.SaveGameActorTickable
class ASaveGameActorTickable : public ASaveGameActor
{
public:

	static class UClass* StaticClass();
	static class ASaveGameActorTickable* GetDefaultObj();

};

// 0x48 (0x920 - 0x8D8)
// Class ShooterGame.ServerInfoInfoEntryButton
class UServerInfoInfoEntryButton : public UDataListEntryButton
{
public:
	uint8                                        bIsCustom : 1;                                     // Mask: 0x1, PropSize: 0x10x8D8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_3B6 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_436F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                InfoName;                                          // 0x8E0(0x10)(Edit, ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                InfoValue;                                         // 0x8F0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCenterDisplayName;                                // 0x900(0x1)(BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4371[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          DisplayStringSelectedColor;                        // 0x904(0x10)(ConstParm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TextClipOffset;                                    // 0x914(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FolderNameTextFontScale;                           // 0x918(0x4)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4373[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UServerInfoInfoEntryButton* GetDefaultObj();

};

// 0x0 (0x298 - 0x298)
// Class ShooterGame.ShooterActorChannel
class UShooterActorChannel : public UActorChannel
{
public:

	static class UClass* StaticClass();
	static class UShooterActorChannel* GetDefaultObj();

};

// 0xE40 (0x2960 - 0x1B20)
// Class ShooterGame.ShooterCharacter
class AShooterCharacter : public APrimalCharacter
{
public:
	uint8                                        Pad_440E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UParticleSystemComponent*              ListenServerBoundsPSC;                             // 0x1B28(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4410[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          SpawnIntroAnim1P;                                  // 0x1B38(0x8)(BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          RespawnIntroAnim1P;                                // 0x1B40(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ProneInAnim;                                       // 0x1B48(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ProneOutAnim;                                      // 0x1B50(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          StartRidingAnim;                                   // 0x1B58(0x8)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          StopRidingAnim;                                    // 0x1B60(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          TalkingAnim;                                       // 0x1B68(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          VoiceTalkingAnim;                                  // 0x1B70(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UAnimMontage>>   EmoteAnims;                                        // 0x1B78(0x10)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          FireBallistaAnimation;                             // 0x1B88(0x8)(ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ReloadBallistaAnimation;                           // 0x1B90(0x8)(Edit, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          DraggingCharacterAnim;                             // 0x1B98(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             CheckCancelEmoteBuffClass;                         // 0x1BA0(0x30)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4414[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bWasProne;                                         // 0x1BE8(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsPreviewCharacter;                               // 0x1BE9(0x1)(ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4415[0x12];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        WalkBobMagnitude;                                  // 0x1BFC(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WalkBobInterpSpeed;                                // 0x1C00(0x4)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinimumDistanceThresholdToCrouch;                  // 0x1C04(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinimumDistanceThresholdToProneFromStanding;       // 0x1C08(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinimumDistanceThresholdToProneFromCrouch;         // 0x1C0C(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TargetingTime;                                     // 0x1C10(0x4)(Edit, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BobMaxMovementSpeed;                               // 0x1C14(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WeaponBobMaxMovementSpeed;                         // 0x1C18(0x4)(ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinRunSpeedThreshold;                              // 0x1C1C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsTargeting : 1;                                  // Mask: 0x1, PropSize: 0x10x1C20(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsCrafting : 1;                                   // Mask: 0x2, PropSize: 0x10x1C20(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsRiding : 1;                                     // Mask: 0x4, PropSize: 0x10x1C20(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsIndoors : 1;                                    // Mask: 0x8, PropSize: 0x10x1C20(0x1)(BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsClimbing : 1;                                   // Mask: 0x10, PropSize: 0x10x1C20(0x1)(Edit, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsViewingInventory : 1;                           // Mask: 0x20, PropSize: 0x10x1C20(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAlternateFallBlendspace : 1;                   // Mask: 0x40, PropSize: 0x10x1C20(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsFemale : 1;                                     // Mask: 0x80, PropSize: 0x10x1C20(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, DisableEditOnInstance)
	uint8                                        bPlaySpawnAnim : 1;                                // Mask: 0x1, PropSize: 0x10x1C21(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPlayFirstSpawnAnim : 1;                           // Mask: 0x2, PropSize: 0x10x1C21(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNoPhysics : 1;                                    // Mask: 0x4, PropSize: 0x10x1C21(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3C0 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bGaveInitialItems : 1;                             // Mask: 0x1, PropSize: 0x10x1C22(0x1)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReceivedGenesisSeasonPassItems : 1;               // Mask: 0x2, PropSize: 0x10x1C22(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3C1 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4418[0x65];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DefaultWeapon;                                     // 0x1C88(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                OverrideDefaultWeapon;                             // 0x1C90(0x8)(Edit, ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MapWeapon;                                         // 0x1C98(0x8)(Edit, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                GPSWeapon;                                         // 0x1CA0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                CompassWeapon;                                     // 0x1CA8(0x8)(Edit, ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4419[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                PlayerName;                                        // 0x1CB8(0x10)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, SubobjectReference)
	TWeakObjectPtr<class APrimalDinoCharacter>   RidingDino;                                        // 0x1CC8(0x8)(Edit, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                Mesh1P;                                            // 0x1CD0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          LowerBodyPartRootBones;                            // 0x1CD8(0x10)(Edit, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPhysicsAsset*                         FPVCameraAnimationPhysicsAsset;                    // 0x1CE8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          DropItemAnimation;                                 // 0x1CF0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ThrowItemAnimation;                                // 0x1CF8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          PickupItemAnimation;                               // 0x1D00(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ActivateInventoryAnimation;                        // 0x1D08(0x8)(BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                SurvivorProfilePreviewMesh;                        // 0x1D10(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              LastDinoAimRotationOffset;                         // 0x1D18(0x18)(ExportObject, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_441A[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class APrimalProjectileBoomerang*            LastFiredBoomerang;                                // 0x1D48(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class APrimalProjectileGrapplingHook*        LastFiredGrapHook;                                 // 0x1D50(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimalCableComponent*                 GrapplingHookCable;                                // 0x1D58(0x8)(ConstParm, ExportObject, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       LastGrapHookAC;                                    // 0x1D60(0x8)(ConstParm, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        _GrapHookCableObjectCount;                         // 0x1D68(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_441B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               GrapHookDefaultOffset;                             // 0x1D70(0x18)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GrapHookCableWidth;                                // 0x1D88(0x4)(ConstParm, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_441C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    GrapHookMaterial;                                  // 0x1D90(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LadderJumpVelocity;                                // 0x1D98(0x4)(Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GrapHookPulledRopeDistance;                        // 0x1D9C(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GrapHookSyncTime;                                  // 0x1DA0(0x4)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bReleasingGrapHook;                                // 0x1DA4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_441D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastTimeDestroyedWeapon;                           // 0x1DA8(0x8)(ConstParm, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_441E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                PlatformProfileName;                               // 0x1DB8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FUniqueNetIdRepl                      PlatformProfileID;                                 // 0x1DC8(0x30)(ExportObject, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPlayerStatusStateCharacterSound> CharacterStatusStateSounds;                        // 0x1DF8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       CharacterStatusStateSoundComponent;                // 0x1E08(0x8)(ExportObject, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastUncrouchTime;                                  // 0x1E10(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastUnproneTime;                                   // 0x1E18(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastTimeStartedCrouchOrProneTransition;            // 0x1E20(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_441F[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DefaultTPVAnimBlueprint;                           // 0x1E58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  WeaponAttachPoint;                                 // 0x1E60(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TargetingSpeedModifier;                            // 0x1E68(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4420[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            LowHealthSound;                                    // 0x1E70(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            FastTravelSound;                                   // 0x1E78(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          CallFollowAnim;                                    // 0x1E80(0x8)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          CallStayAnim;                                      // 0x1E88(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          CallFollowAnimSingle;                              // 0x1E90(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          CallStayAnimSingle;                                // 0x1E98(0x8)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          CallMoveToAnim;                                    // 0x1EA0(0x8)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          CallAttackAnim;                                    // 0x1EA8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       LowHealthWarningPlayer;                            // 0x1EB0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4421[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        CraftingMovementSpeedModifier;                     // 0x1ED0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4422[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               WeaponBobMagnitudes;                               // 0x1ED8(0x18)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               WeaponBobPeriods;                                  // 0x1EF0(0x18)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               WeaponBobOffsets;                                  // 0x1F08(0x18)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               WeaponBobMagnitudes_Targeting;                     // 0x1F20(0x18)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               WeaponBobPeriods_Targeting;                        // 0x1F38(0x18)(Edit, ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               WeaponBobOffsets_Targeting;                        // 0x1F50(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WeaponBobMinimumSpeed;                             // 0x1F68(0x4)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WeaponBobSpeedBase;                                // 0x1F6C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WeaponBobSpeedBaseFalling;                         // 0x1F70(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4423[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FItemAttachmentInfo>           DefaultAttachmentInfos;                            // 0x1F78(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            StartCrouchSound;                                  // 0x1F88(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            EndCrouchSound;                                    // 0x1F90(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            StartProneSound;                                   // 0x1F98(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            EndProneSound;                                     // 0x1FA0(0x8)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                NextInventoryWeapon;                               // 0x1FA8(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            PreMapWeaponItemNetID;                             // 0x1FB0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            CurrentWeaponItemID;                               // 0x1FB8(0x8)(Edit, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ServerSeatedViewRotationYaw;                       // 0x1FC0(0x4)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ServerSeatedViewRotationPitch;                     // 0x1FC4(0x4)(ConstParm, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AShooterWeapon*                        CurrentWeapon;                                     // 0x1FC8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4424[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bDrawHealthBar : 1;                                // Mask: 0x1, PropSize: 0x10x1FD8(0x1)(Edit, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3C2 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4425[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        HealthBarOffsetY;                                  // 0x1FDC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideHealthBarOffset : 1;                    // Mask: 0x1, PropSize: 0x10x1FE0(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCustomHealthBarColor : 1;                      // Mask: 0x2, PropSize: 0x10x1FE0(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3C3 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4426[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	uint64                                       LinkedPlayerDataID;                                // 0x1FE8(0x8)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4427[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AShooterPlayerController> LastValidPlayerController;                         // 0x2018(0x8)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          DrinkingAnimation;                                 // 0x2020(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastRequestedTribeTime;                            // 0x2028(0x8)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        LastRequestedTribeID;                              // 0x2030(0x4)(Edit, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4428[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                LastRequestedTribeName;                            // 0x2038(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AShooterCharacter>      LastRequestedTribePlayerCharacter;                 // 0x2048(0x8)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IndoorsHyperthermiaInsulation;                     // 0x2050(0x4)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IndoorsHypothermiaInsulation;                      // 0x2054(0x4)(BlueprintVisible, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IndoorCheckInterval;                               // 0x2058(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4429[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FItemNetID                            PreRidingWeaponItemNetID;                          // 0x2068(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            PreInventoryWeaponItemNetID;                       // 0x2070(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FOverrideAnimBlueprintEntry>   OverrideAnimBlueprints;                            // 0x2078(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         ViewingInventoryAnimation;                         // 0x2088(0x8)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         DefaultDinoRidingAnimation;                        // 0x2090(0x8)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         DefaultDinoRidingMoveAnimation;                    // 0x2098(0x8)(EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         DefaultSeatingAnimation;                           // 0x20A0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         DefaultShieldAnimation;                            // 0x20A8(0x8)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ShieldCoverAnimation;                              // 0x20B0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ShieldCoverAnimationForCrouch;                     // 0x20B8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableLookYaw : 1;                               // Mask: 0x1, PropSize: 0x10x20C0(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPlayingShieldCoverAnimation : 1;                  // Mask: 0x2, PropSize: 0x10x20C0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPlayingShieldCoverAnimationForCrouch : 1;         // Mask: 0x4, PropSize: 0x10x20C0(0x1)(Edit, ConstParm, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTriggerBPUnstasis : 1;                            // Mask: 0x8, PropSize: 0x10x20C0(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3C4 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHatHidden : 1;                                    // Mask: 0x80, PropSize: 0x10x20C0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3C5 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAllowDPC : 1;                                     // Mask: 0x2, PropSize: 0x10x20C1(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3C6 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsConnected : 1;                                  // Mask: 0x8, PropSize: 0x10x20C1(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3C7 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bLockedToSeatingStructure : 1;                     // Mask: 0x40, PropSize: 0x10x20C1(0x1)(ConstParm, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventAllWeapons : 1;                            // Mask: 0x80, PropSize: 0x10x20C1(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceBuffAimOverride : 1;                         // Mask: 0x1, PropSize: 0x10x20C2(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsHidingFPVMesh : 1;                              // Mask: 0x2, PropSize: 0x10x20C2(0x1)(Edit, ConstParm, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3C8 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_442A[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        EnemyPlayerMaxCursorHUDDistanceProne;              // 0x20C4(0x4)(BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EnemyPlayerMaxCursorHUDDistanceCrouched;           // 0x20C8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EnemyPlayerMaxCursorHUDDistanceStanding;           // 0x20CC(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_442B[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSaddlePassengerSeatDefinition        CurrentPassengerSeatDefinition;                    // 0x20D8(0x110)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UAnimMontage>>   AnimsOverrideFrom;                                 // 0x21E8(0x10)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UAnimMontage>>   AnimOverrideTo;                                    // 0x21F8(0x10)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UAnimSequence>>  AnimSequencesOverrideFrom;                         // 0x2208(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UAnimSequence>>  AnimSequenceOverrideTo;                            // 0x2218(0x10)(ConstParm, ExportObject, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_442C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          BodyColors[0x4];                                   // 0x222C(0x40)(Edit, ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        FacialHairIndex;                                   // 0x226C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        HeadHairIndex;                                     // 0x226D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        EyebrowIndex;                                      // 0x226E(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_442D[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RawBoneModifiers[0x1A];                            // 0x2270(0x68)(EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_442E[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bHasBoneModifiersOverride : 1;                     // Mask: 0x1, PropSize: 0x10x22F8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3C9 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        DynamicMaterialBytes[0x32];                        // 0x22F9(0x32)(BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        DynamicOverrideHairDyeBytes[0x4];                  // 0x232B(0x4)(Edit, BlueprintVisible, ExportObject, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_442F[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimaryDataAsset*                     Player_Voice_Collection;                           // 0x2330(0x8)(Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LoggedOutTargetingDesirability;                    // 0x2338(0x4)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsRainWatered;                                    // 0x233C(0x1)(ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4430[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       UniqueNetIdTypeHash;                               // 0x234C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint32                                       SplitscreenMainPlayerUniqueNetIdTypeHash;          // 0x2350(0x4)(ExportObject, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4431[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          SpawnAnim;                                         // 0x2368(0x8)(ConstParm, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          FirstSpawnAnim;                                    // 0x2370(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          SleepOutAnim;                                      // 0x2378(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4432[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UPrimalItem*>                   OldItemSlots;                                      // 0x23A0(0x10)(BlueprintVisible, ExportObject, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsFastInventoryActivated;                         // 0x23B0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4433[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        FastInventoryLastIndex;                            // 0x23C0(0x4)(ConstParm, BlueprintReadOnly, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        FastInventoryLastMaxRow;                           // 0x23C4(0x4)(Edit, BlueprintVisible, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        FastInventoryQuantitySlots;                        // 0x23C8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4434[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                CustomFolderFastInventory;                         // 0x23D0(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4435[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       SavedLastTimeHadController;                        // 0x23E8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastTimeHadController;                             // 0x23F0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LastTaggedTime;                                    // 0x23F8(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LastTaggedTimeExtra;                               // 0x23FC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LastTaggedTimeThird;                               // 0x2400(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraFloatVar;                                     // 0x2404(0x4)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ExtraVectorVar;                                    // 0x2408(0x18)(Edit, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ExtraExtraVectorVar;                               // 0x2420(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExtraNameVar;                                      // 0x2438(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsOnSeatingStructure;                             // 0x2440(0x1)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsControllingBallista;                            // 0x2441(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBallistaAimOffset;                             // 0x2442(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4436[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CurrentControlledBallistaYaw;                      // 0x2444(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsServerAdmin;                                    // 0x2448(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4437[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class APrimalStructureSeating> SeatingStructure;                                  // 0x244C(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SeatingStructureSeatNumber;                        // 0x2454(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4438[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            ThrowCharacterSound;                               // 0x2460(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4439[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        PlayerBadgeGroup;                                  // 0x2478(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bShouldInvertTurnInput;                            // 0x2479(0x1)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_443A[0x36];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        InventoryDragWeightScale;                          // 0x24B0(0x4)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_443B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          MountedCarryingDinoAnimation;                      // 0x24B8(0x8)(ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          CuddleAnimation;                                   // 0x24C0(0x8)(Edit, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_443C[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	class UAnimSequence*                         CharacterAdditiveStandingAnim;                     // 0x2520(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_443D[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class USkeletalMeshComponent*                HeadHairComponent;                                 // 0x2538(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                FacialHairComponent;                               // 0x2540(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                EyebrowsComponent;                                 // 0x2548(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                EyelashesComponent;                                // 0x2550(0x8)(ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IntervalForFullHeadHairGrowth;                     // 0x2558(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IntervalForFullFacialHairGrowth;                   // 0x255C(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PercentOfFullFacialHairGrowth;                     // 0x2560(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        PercentOfFullHeadHairGrowth;                       // 0x2564(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FLinearColor                          OriginalHairColor;                                 // 0x2568(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FShooterCharacterPostUpdateTickFunction PostUpdateTick;                                    // 0x2578(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_443E[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReplicatedWeight;                                  // 0x25B4(0x4)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_443F[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UParticleSystemComponent*              LocalCorpseEmitter;                                // 0x25C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	double                                       LocalDiedAtTime;                                   // 0x25C8(0x8)(Edit, ConstParm, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4440[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            ProneMoveSound;                                    // 0x25D8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       UploadEarliestValidTime;                           // 0x25E0(0x8)(BlueprintReadOnly, Net, Parm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4441[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AController>            SpawnedForController;                              // 0x25F4(0x8)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4442[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UParticleSystemComponent*              JunctionLinkCableParticle;                         // 0x2600(0x8)(Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4443[0x24];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bPreventWeaponMovementAnims;                       // 0x262C(0x1)(Edit, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4444[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class APrimalStructure>       CurrentItemBalloon;                                // 0x2630(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            NotifyWeaponUnequipped;                            // 0x2638(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            NotifyWeaponEquipped;                              // 0x2648(0x10)(EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            NotifyWeaponFired;                                 // 0x2658(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            NotifyOnWeaponEquip;                               // 0x2668(0x10)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        PlayerHexagonCount;                                // 0x2678(0x4)(Edit, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        DefaultHexagonAmountEarnedOnMissionCompletion;     // 0x267C(0x4)(Edit, ExportObject, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4445[0x40];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        MeshHeightAdjustment;                              // 0x26C0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BuffExtraDamageMultiplier;                         // 0x26C4(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNormalizeHeadPosition;                            // 0x26C8(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4446[0x17];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnFirstPersonCameraView;                           // 0x26E0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnThirdPersonCameraView;                           // 0x26F0(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint32                                       ExpectedBaseID;                                    // 0x2700(0x4)(ConstParm, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4447[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastExpectedBaseTime;                              // 0x2708(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventShowHUDOnSpawnIntroCompletion;             // 0x2710(0x1)(Edit, ConstParm, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4448[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bHideFloatingHUD : 1;                              // Mask: 0x1, PropSize: 0x10x2714(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDrawHUD : 1;                                 // Mask: 0x2, PropSize: 0x10x2714(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceSeatingAnim : 1;                             // Mask: 0x4, PropSize: 0x10x2714(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsPressingRunning : 1;                            // Mask: 0x8, PropSize: 0x10x2714(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoDestroyPlayerWeapons : 1;                     // Mask: 0x10, PropSize: 0x10x2714(0x1)(Edit, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3CA : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseDefaultWeaponWhenOpeningInventory : 1;         // Mask: 0x40, PropSize: 0x10x2714(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3CB : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4449[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class APrimalDinoCharacter>   SavedRidingDino;                                   // 0x2718(0x8)(BlueprintVisible, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       DialogueSoundComponent;                            // 0x2720(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UMaterialInterface*>            CachedPlayerMaterials;                             // 0x2728(0x10)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UMaterialInterface*>            CachedAttachmentMaterials;                         // 0x2738(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       CurrentShadowOpactiy;                              // 0x2748(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       FPVShadowThreshold;                                // 0x2750(0x8)(Edit, ExportObject, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       FPVShadowFade;                                     // 0x2758(0x8)(Edit, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimationAsset*                       ReplicatedSleepAnim;                               // 0x2760(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftObjectPtr<class UAnimationAsset>        SavedSleepAnim;                                    // 0x2768(0x30)(ConstParm, BlueprintVisible, ExportObject, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AimMagnetismStrength;                              // 0x2798(0x4)(Edit, ConstParm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AimMagnetismOffsetDecaySpeed;                      // 0x279C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AimMagnetismOffsetMultiplier;                      // 0x27A0(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_444A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TMap<int32, class AShooterProjectile*>       FiredProjectilesCache;                             // 0x27A8(0x50)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_444B[0x44];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        LocallyInterpolatedViewLocationZSpeed;             // 0x283C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_444C[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bNeedsHairOrBodyUpdate : 1;                        // Mask: 0x1, PropSize: 0x10x2848(0x1)(Edit, ConstParm, ExportObject, Net, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3CC : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_444D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DefaultPercentOfFullHeadHairGrowth;                // 0x284C(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        DefaultHeadHairIndex;                              // 0x2850(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DefaultPercentOfFullFacialHairGrowth;              // 0x2854(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        DefaultFacialHairIndex;                            // 0x2858(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSKDynamicMatsHaveBeenRecentlyChangedAndNeedUpdatingOnTheAnimbp : 1; // Mask: 0x1, PropSize: 0x10x285C(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3CD : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_444E[0xB];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ClearRiderCameraTransitionInterpSpeed;             // 0x2868(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ClearRiderCameraTransitionInterpTime;              // 0x286C(0x4)(Edit, ConstParm, BlueprintVisible, Net, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TPVCameraExtraCollisionZOffset;                    // 0x2870(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_444F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            TribeManagementOptionsIcon;                        // 0x2878(0x8)(Edit, ExportObject, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RecruitToTribeIcon;                                // 0x2880(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            BanishFromTribeIcon;                               // 0x2888(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PromoteToAdminIcon;                                // 0x2890(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            AcceptTribeInvitationIcon;                         // 0x2898(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            MergeTribeAcceptInvitationIcon;                    // 0x28A0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ViewTribeInfoIcon;                                 // 0x28A8(0x8)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TribeInvitationOptionsIcon;                        // 0x28B0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            InviteToAllianceIcon;                              // 0x28B8(0x8)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CantInviteToAllianceIcon;                          // 0x28C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            AcceptInviteToAllianceIcon;                        // 0x28C8(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CantAcceptInviteToAllianceIcon;                    // 0x28D0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DeclareTribeWarIcon;                               // 0x28D8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            AcceptTribeWarIcon;                                // 0x28E0(0x8)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ShowUserPageIcon;                                  // 0x28E8(0x8)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EquippedArmorDurabilityPercent3;                   // 0x28F0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EquippedArmorDurabilityPercent4;                   // 0x28F4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EquippedArmorDurabilityPercent5;                   // 0x28F8(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EquippedArmorDurabilityPercent6;                   // 0x28FC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4450[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastTimePushed;                                    // 0x2908(0x8)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4451[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        LastPushedDirection;                               // 0x2930(0x4)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        VisualVelocitySizeWhenPushed;                      // 0x2934(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4452[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        LocalUpdateCharsInRangeInterval;                   // 0x2948(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4453[0x14];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterCharacter* GetDefaultObj();

	bool UseAlternateStandingAnim();
	bool UseAltAimOffsetAnim();
	bool UseAdditiveStandingAnim();
	void UpdateProjectileCache();
	void UpdateExpectedBase();
	void UpdateAutoTurn();
	void UpdateAutoPlayer();
	void UpdateAutoMove();
	void UpdateAutoJump();
	void UpdateAutoFire();
	TArray<struct FAllyRadarDatas> UpdateAllyRadarDatas();
	void TryLaunchMountedDino();
	void TryCutEnemyGrapplingCable();
	float SyncGrapHookDistance();
	class AActor* StructurePlacementUseAlternateOriginActor();
	bool StartWeaponSwitch();
	float StartCameraTransition();
	void ShowWeapon();
	void SetPreventEquipAllWeapons(bool bPrevent);
	bool SetPlayerHexagonCount();
	void SetImplantSuicideCooldownStartTime(double StartTime);
	class USkeletalMeshComponent* SetHairOnComponent(class USkeletalMeshComponent* LeaderPoseComponent, TSoftObjectPtr<class USkeletalMesh>* HairMesh, class UClass* AnimBlueprint, TSoftObjectPtr<class UMaterialInterface>* FemaleHairOverride);
	bool SetFastInventoryMode();
	class APrimalStructure* SetExpectedBase();
	float SetCarriedPitchYaw();
	bool SetCameraMode();
	TArray<struct FBoneModifierNamed> SetBoneModifiersOverride();
	void SetAutoPlayer(bool* bEnable);
	void ServerToClientsPlayFireBallistaAnimation();
	void ServerSwitchMap();
	void ServerSwitchBallistaAmmo();
	void ServerStopFireBallista();
	bool ServerStartSurfaceCameraForPassenger();
	bool ServerSetViewingInventory();
	bool ServerSetTargeting();
	bool ServerSetBallistaTargeting();
	float ServerSetBallistaNewRotation();
	uint8 ServerSeatingStructureAction();
	int32 ServerRequestHexagonTrade();
	bool ServerReleaseGrapHookCable();
	class AShooterPlayerController* ServerReceiveTribeInvite();
	struct FVector ServerPrepareMountedDinoForLaunch(const struct FVector& ViewLoc);
	void ServerPlayFireBallistaAnimation();
	int32 ServerNotifyProjectileImpact(struct FHitResult* HitResult);
	struct FVector_NetQuantizeNormal ServerNotifyBallistaShot();
	struct FVector ServerNetEndClimbingLadder();
	void ServerLaunchMountedDino();
	bool ServerForceUpdatedAimedActors();
	struct FVector_NetQuantizeNormal ServerFireBallistaProjectile(struct FVector* Origin);
	float ServerDetachGrapHookCable();
	bool ServerClearSwitchingWeapon();
	void ServerCheckDrinkingWater();
	void ResetRootAimRotation();
	void RenamePlayer(class FString* NewName);
	void RefreshRiderSocket();
	uint8 PlayEmoteAnimation();
	void PlayDrinkingAnimation();
	class AShooterWeapon* OnWeaponUnequipped();
	void OnWeaponEquipped(class AShooterWeapon* NewWeapon);
	void OnRep_RawBoneModifiers();
	void OnRep_LastPushedDirection();
	void OnRep_HatHidden();
	class AShooterWeapon* OnRep_CurrentWeapon();
	void OnRep_bIsClimbing();
	void NetUpdateCharacterConfig();
	float NetSimulatedForceUpdateAimedActors();
	int32 NetSetOverrideHeadHairColor();
	int32 NetSetOverrideFacialHairColor();
	int32 NetSetHeadHairPercent();
	int32 NetSetFacialHairPercent();
	int32 NetSetEyebrowStyle();
	class FString LinkedPlayerIDString();
	void LaunchMountedDino();
	bool IsWatchingExplorerNote();
	bool IsUsingShield();
	bool IsUsingClimbingPick();
	bool IsTargeting();
	bool IsProjectileInCache(int32* ProjectileID);
	bool IsPreInventoryItem();
	bool IsPlayingUpperBodyCallAnimation();
	bool IsPlayingRepawnAnim();
	bool IsPlayingInitialSpawnAnim();
	bool IsOutside();
	bool IsNearTopOfLadder();
	bool IsIndoorsAtLoc(class UWorld** TheWorld);
	bool IsGrapplingHardAttached();
	bool IsGrapplingAttachedToMe();
	bool IsFiring();
	bool IsCurrentPassengerLimitCameraYaw();
	bool IsCarriedAsPassenger();
	bool IsBlockingWithShield();
	void HideWeapon();
	bool HasAnyOtherBuffsUsingConsolidatedMultiUse();
	class UPrimalItem* GivePrimalItemWeapon();
	int32 GiveHexagonsOnMissionReward(class FName* MissionTag);
	int32 GiveHexagons(float* OverrideCollectSFXVolume, bool* VFXImmediatelyAttracts);
	void GiveDefaultWeaponTimer();
	bool GiveDefaultWeapon();
	class AShooterWeapon* GetWeapon();
	float GetTargetingSpeedModifier();
	class AShooterPlayerController* GetSpawnedForController();
	class UAnimSequence* GetSeatingAnimation();
	float GetRidingDinoAnimSpeedRatio();
	class APrimalDinoCharacter* GetRidingDino();
	int32 GetPlayerHexagonCount();
	class UPrimalPlayerData* GetPlayerData();
	float GetPercentageOfHeadHairGrowth();
	float GetPercentageOfFacialHairGrowth();
	double GetLastAttackTime();
	int32 GetHeadHairIndex();
	struct FLinearColor GetHeadHairColor();
	int32 GetFacialHairIndex();
	struct FLinearColor GetFacialHairColor();
	int32 GetEyebrowIndex();
	class UAnimSequence* GetDinoRidingMoveAnimation();
	class UAnimSequence* GetDinoRidingAnimation();
	float GetCharacterCreatorDynamicMatValue();
	float GetBoneModifierValue();
	bool GetBlockingShieldOffsets();
	class UAnimSequence* GetAlternateStandingAnim(float* OutBlendInTime, float* OutBlendOutTime);
	TArray<float> GetAllBoneModifierValues();
	bool GetAdditiveStandingAnimNonAdditive();
	class UAnimSequence* GetAdditiveStandingAnim(float* OutBlendInTime, float* OutBlendOutTime);
	float GetActualTargetingFOV();
	class AMissionType* GetActiveMission();
	void GameStateHandleEvent(class FName* NameParam, struct FVector* VecParam);
	void FinishWeaponSwitch();
	class AShooterCharacter* FindForPlayerController(class AShooterPlayerController** APC);
	bool DoForceStreamComponents();
	void DetachGrapHookCable();
	void DetachFromLadder();
	bool CycleFastInventoryNext();
	bool CycleFastInventory();
	void ClientWasPushed();
	void ClientUpdatedInventory();
	int32 ClientsSpawnHexagonVFX(float* OverrideCollectSFXVolume, bool* VFXImmediatelyAttracts);
	uint32 ClientSetExpectedBase();
	struct FItemNetID ClientReceiveNextWeaponID();
	void ClientPlayHarvestAnim();
	class FString ClientNotifyTribeRequest(class AShooterCharacter** PlayerCharacter);
	void ClientNetEndClimbingLadder();
	class FString ClientInviteToAlliance(uint32* AllianceID, class FString* AllianceName);
	void ClientClearTribeRequest();
	void ClearSpawnAnim();
	void ClearRidingDino(bool* bFromDino, int32* OverrideUnboardDirection, bool* bForceEvenIfBuffPreventsClear);
	void ClearPreInventoryWeaponItemNetID();
	void ClearBoneModifiersOverride();
	bool CanStartWeaponSwitch();
	bool CanEquipWeapons();
	bool CanBeTetheredByPlayer();
	void CallGameStateHandleEvent(class FName* NameParam, struct FVector* VecParam);
	bool BuffsPreventFirstPerson();
	void BreakGrapple();
	void BPUnstasis();
	void BPUnlockedAllExplorerNotes();
	void BPSetupFirstPersonHandsMesh();
	bool BPSetPlayerHexagonCount();
	class USkeletalMeshComponent* BPSetFirstPersonMasterPoseComponent();
	float BPOverrideHealthBarOffset(class APlayerController** ForPC);
	void BPNonDedicatedPostAnimUpdate();
	int32 BPGetPlayerHexagonCount();
	struct FVector BPGetHealthBarColor();
	bool BPCanImplantSuicide();
	void AuthPostSpawnInit();
	void AttachToLadder(class USceneComponent** Parent);
	void ApplyBoneModifiers();
	class USkeletalMeshComponent* ApplyBodyColors();
	bool AnimUseAimOffset();
};

// 0x60 (0x15A0 - 0x1540)
// Class ShooterGame.ShooterCharacterMovement
class UShooterCharacterMovement : public UPrimalCharacterMovement
{
public:
	float                                        MaxSpeedMultiplier;                                // 0x1540(0x4)(Edit, Net, Parm, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bUseAdditionalLinePenetrationChecks;               // 0x1544(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4455[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bWaterBaseOnly : 1;                                // Mask: 0x1, PropSize: 0x10x1548(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowWaterWalking : 1;                            // Mask: 0x2, PropSize: 0x10x1548(0x1)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4456[0x57];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterCharacterMovement* GetDefaultObj();

	void UpdateAnalogueInputModifier();
	void SetCurrentAcceleration(const struct FVector& NewAcceleration);
	struct FRotator SetClimbingTarget();
	bool IsWaterWalking();
	float BPApplyVelocityBraking(float* Friction, const struct FVector& InOutVelocity);
	float BP_PhysicsRotation();
	float BP_PerformMovement();
	float BP_GetAnalogueInputModifier();
};

// 0x10 (0x40 - 0x30)
// Class ShooterGame.ExplorerNoteLocations
class UExplorerNoteLocations : public UDataAsset
{
public:
	TArray<struct FExplorerNoteLocationsPair>    LocationPairs;                                     // 0x30(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UExplorerNoteLocations* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.PrimalCheatManagerExtension
class UPrimalCheatManagerExtension : public UCheatManagerExtension
{
public:

	static class UClass* StaticClass();
	static class UPrimalCheatManagerExtension* GetDefaultObj();

	void JumpToNextExplorerNote();
	int32 JumpToExplorerNoteByIndex(bool bOnlyIfUnopened);
	void JTNN();
	int32 JTEN(bool bOnlyIfUnopened);
	class AActor* GetTargetActor();
	class APrimalDinoCharacter* GetRidingDino();
	class AShooterCharacter* GetPlayerCharacter();
	TArray<class AActor*> GetAllExplorerNoteActors();
	TArray<class AActor*> GetAllActorsInRadius(enum class ECheatActorType Type, float Radius);
};

// 0x2448 (0x2F80 - 0xB38)
// Class ShooterGame.ShooterPlayerController
class AShooterPlayerController : public ABasePlayerController
{
public:
	class UPaintingStreamingComponent*           PaintingStreamingComponent;                        // 0xB38(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig)
	uint8                                        HeldItemSlot[0xA];                                 // 0xB40(0xA)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        UsedItemSlot[0xA];                                 // 0xB4A(0xA)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4741[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastRepeatUseConsumableTime[0xA];                  // 0xB58(0x50)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        LastFrameScrollUp;                                 // 0xBA8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        LastFrameScrollDown;                               // 0xBAC(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       HeldItemSlotTime[0xA];                             // 0xBB0(0x50)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastUsedItemSlotTimes[0xA];                        // 0xC00(0x50)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RespawnSoundDelay;                                 // 0xC50(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4743[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                PauseMenuUITemplate;                               // 0xC58(0x8)(ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4744[0x38];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector                               CurrentPlayerCharacterLocation;                    // 0xC98(0x18)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4745[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bPreventControllerAutoUnfreeze : 1;                // Mask: 0x1, PropSize: 0x10xCC8(0x1)(ExportObject, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShouldAutoUploadTribeFlag : 1;                    // Mask: 0x2, PropSize: 0x10xCC8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGamepadHotbarModifierPressed : 1;                 // Mask: 0x4, PropSize: 0x10xCC8(0x1)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3CE : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4746[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalStructurePlacer*                StructurePlacer;                                   // 0xCD8(0x8)(Edit, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4747[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LastDeathLocation;                                 // 0xCF0(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastDeathTime;                                     // 0xD08(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastDeathMark;                                     // 0xD10(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4748[0x200];                                   // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class APrimalCharacter>       LastDeathPrimalCharacter;                          // 0xF18(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4749[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bFirstSpecatorCycleSinceDeath;                     // 0xF38(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowGameModeHUD;                                  // 0xF39(0x1)(Edit, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_474A[0x26];                                    // Fixing Size After Last Property  > TateDumper <
	class USoundCue*                             SelectSlotSound;                                   // 0xF60(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                FogOfWarClass;                                     // 0xF68(0x8)(BlueprintReadOnly, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UFogOfWar*                             FogOfWar;                                          // 0xF70(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Config, GlobalConfig)
	class UPrimalLocalProfile*                   PrimalLocalProfile;                                // 0xF78(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig)
	uint8                                        Pad_474B[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        CurrentGameModeMaxNumOfRespawns;                   // 0xFA0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_474C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterCharacter*                     LastDiedListenServerHost;                          // 0xFA8(0x8)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LastRawInputDir;                                   // 0xFB0(0x18)(Edit, ExportObject, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_474D[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                StructurePlacerClass;                              // 0xFE8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_474E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxUseDistance;                                    // 0xFF8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxUseCheckRadius;                                 // 0xFFC(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<bool>                                 SavedSurvivorProfileSettings;                      // 0x1000(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCachedOnlyShowOnlineTribeMembers;                 // 0x1010(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_474F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        SavedMissionBiomeFilterMask;                       // 0x1014(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bInitializedMissionUI;                             // 0x1018(0x1)(BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bMissionSortByDistance;                            // 0x1019(0x1)(BlueprintVisible, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4750[0x16];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bUsingExtendedInfoMap;                             // 0x1030(0x1)(ExportObject, BlueprintReadOnly, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4751[0x27];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         IsChangingCameraMode;                              // 0x1058(0x1)(Edit, BlueprintVisible, ExportObject, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4752[0x17];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bUseOldMiniMap;                                    // 0x1070(0x1)(Edit, BlueprintVisible, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4753[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FMinimapMark                          CurrentTrackingMark;                               // 0x1078(0x78)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4754[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDinoMapMarkerInfo>            MapDinos;                                          // 0x10F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TWeakObjectPtr<class UPrimalInventoryComponent>> RemoteViewingInventories;                          // 0x1108(0x10)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPServerCycleSpectator : 1;                    // Mask: 0x1, PropSize: 0x10x1118(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3CF : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4755[0x5F];                                    // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AActor>                 FastTravelDroppedInventory;                        // 0x1178(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4756[0x19];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bPreventCanOpenMap;                                // 0x1199(0x1)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4757[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                PhotoModeMarkerActor;                              // 0x11A0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4758[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bIsFirstSpawn : 1;                                 // Mask: 0x1, PropSize: 0x10x11B0(0x1)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsRespawning : 1;                                 // Mask: 0x2, PropSize: 0x10x11B0(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3D0 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4759[0x2F];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                SteamInventoryStatusUITemplate;                    // 0x11E0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_475A[0xD0];                                    // Fixing Size After Last Property  > TateDumper <
	struct FItemNetID                            LastSteamItemIDToRemove;                           // 0x12B8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            LastSteamItemIDToAdd;                              // 0x12C0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_475B[0x238];                                   // Fixing Size After Last Property  > TateDumper <
	int32                                        SpectatorCycleIndex;                               // 0x1500(0x4)(BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_475C[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsFastTravelling;                                 // 0x1505(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bLastSpawnWasFastTravel;                           // 0x1506(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableTargetingInput;                             // 0x1507(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableFire;                                       // 0x1508(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableAltFire;                                    // 0x1509(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_475D[0x1F];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bPreventPaintingStreaming;                         // 0x1529(0x1)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_475E[0xCE];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FServerChatMessage>            ServerMessageQueue;                                // 0x15F8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bReachedTamedDinoLimit;                            // 0x1608(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHasSurvivedOneDay;                                // 0x1609(0x1)(BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHasReachedHighestPeak;                            // 0x160A(0x1)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHasReachedLowestDepth;                            // 0x160B(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4760[0x9C];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bUseCustomCrosshairBP;                             // 0x16A8(0x1)(OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4761[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FPointOfInterestData_ForCompanion> WaypointsSOTF;                                     // 0x16B0(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4762[0x78];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<uint8>                                LastDownloadPlayerDataBytes;                       // 0x1738(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4764[0x38];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        ViewingWheelCategory;                              // 0x1780(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4765[0x24];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_3D1 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bNotifyPawnBuffsOfDamageEvents : 1;                // Mask: 0x4, PropSize: 0x10x17A8(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3D2 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4767[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bForceHideGameplayUI;                              // 0x17B1(0x1)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4768[0x36];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bPreventDefaultCharacterItems;                     // 0x17E8(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4769[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SFXVolumeMultiplier;                               // 0x17EC(0x4)(ExportObject, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_476B[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       LastShowExtendedInfoTime;                          // 0x1810(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_476C[0xB1];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsOnlyViewingRemoteInventory;                     // 0x18C9(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHasViewOnlyInventoryOpen;                         // 0x18CA(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDrawBlackBackground;                              // 0x18CB(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_476D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                CreativeModeBuff;                                  // 0x18D0(0x8)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PrimalStatsCacheFlushInterval;                     // 0x18D8(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_476E[0x38];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        PingCoolDownTime;                                  // 0x1914(0x4)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastPingTime;                                      // 0x1918(0x8)(Edit, ExportObject, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PingTraceDistance;                                 // 0x1920(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxTeamPingDataOnClient;                           // 0x1924(0x4)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FTeamPingDataForClient>        CurrentClientTeamPings;                            // 0x1928(0x10)(ConstParm, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FTeamPingDataForClient                TeamPingSettings_GoHere;                           // 0x1938(0x80)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FTeamPingDataForClient                TeamPingSettings_Follow;                           // 0x19B8(0x80)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FTeamPingDataForClient                TeamPingSettings_FollowMe;                         // 0x1A38(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FTeamPingDataForClient                TeamPingSettings_Attack;                           // 0x1AB8(0x80)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FTeamPingDataForClient                TeamPingSettings_Tame;                             // 0x1B38(0x80)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FTeamPingDataForClient                TeamPingSettings_LootIt;                           // 0x1BB8(0x80)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FTeamPingDataForClient                TeamPingSettings_Danger;                           // 0x1C38(0x80)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FTeamPingDataForClient                TeamPingSettings_Track;                            // 0x1CB8(0x80)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FTeamPingDataForClient                TeamPingSettings_RallyPoint;                       // 0x1D38(0x80)(BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FTeamPingDataForClient                TeamPingSettings_ClearRallyPoint;                  // 0x1DB8(0x80)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PingNotifyRadius;                                  // 0x1E38(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PingLifetime;                                      // 0x1E3C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PingLifetime_Dying;                                // 0x1E40(0x4)(Edit, BlueprintVisible, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4771[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            PingIcon_Default;                                  // 0x1E48(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PingIcon_Players;                                  // 0x1E50(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PingIcon_Dinos;                                    // 0x1E58(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PingIcon_Structures;                               // 0x1E60(0x8)(Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPingData>                     CurrentPings;                                      // 0x1E68(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4772[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	struct FTeamPingData                         TribeCacheRallyPointData;                          // 0x1E88(0x50)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTribeCacheHaveRallyPointData;                     // 0x1ED8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4773[0x1D3];                                   // Fixing Size After Last Property  > TateDumper <
	uint8                                        bWantsToPing : 1;                                  // Mask: 0x1, PropSize: 0x10x20AC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnablePingSystem : 1;                             // Mask: 0x2, PropSize: 0x10x20AC(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreNextToggleInGameMenu : 1;                   // Mask: 0x4, PropSize: 0x10x20AC(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3D3 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4774[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bDebugPOIs;                                        // 0x20B0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4775[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        POI_SearchTickInterval_Current;                    // 0x20B4(0x4)(ConstParm, BlueprintVisible, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             POI_SearchTickInterval_RandRanges;                 // 0x20B8(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        POI_SearchRadius;                                  // 0x20C8(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4776[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       POI_LastSearchTickTime;                            // 0x20D0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UUserWidget*>                   SpawnedPointWidgets;                               // 0x20D8(0x10)(Edit, ConstParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class APointOfInterestCosmeticActor*> SpawnedPointCosmeticActors;                        // 0x20E8(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPointOfInterestData_ForCompanion> NearbyPointsOfInterest;                            // 0x20F8(0x10)(Edit, BlueprintVisible, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FMissionWaypointInfo                  MissionWaypoint;                                   // 0x2108(0x38)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4778[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_3D4 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bWasGamepadHotbarModifierPressed_RightShoulder : 1; // Mask: 0x2, PropSize: 0x10x2154(0x1)(BlueprintVisible, Net, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3D5 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_477B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnClientReceiveStructuresPlacedOnFloor;            // 0x2158(0x10)(BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_477C[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsInAdvancedCinematicMode;                        // 0x2188(0x1)(ConstParm, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_477E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        Gen1ENFixDesyncValue;                              // 0x218C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FStructHighlightInfo>          HighlightedStructures;                             // 0x2190(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> EnforcementRelevantStructures;                     // 0x21A0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FLinearColor>                  EnforcementColors;                                 // 0x21B0(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4780[0x54];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bEnableSpectatorDetach;                            // 0x2214(0x1)(Edit, BlueprintVisible, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableSpectatorCycling;                           // 0x2215(0x1)(ExportObject, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4781[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FUserCosmeticInfo                     UserCosmeticInfo;                                  // 0x2218(0x10)(Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance)
	TMap<int32, class AActor*>                   ActiveWaypoints_Creatures;                         // 0x2228(0x50)(ConstParm, ExportObject, BlueprintReadOnly, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<int32, class AActor*>                   ActiveWaypoints_Players;                           // 0x2278(0x50)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastNetworkTimeRequestedFilterCachedTeamTameList;  // 0x22C8(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4782[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FTamingWaypointInfo>           TamingWaypoints;                                   // 0x22D8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4783[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FTrackedActorWaypointInfo>     TrackedActorWaypoints;                             // 0x2300(0x10)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FTrackedActorWaypointInfo>     TrackedActorWaypoints_TeammatesOnMap;              // 0x2310(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4784[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CustomActorTracking_DisplayedResultsCount;         // 0x2324(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CustomActorTracking_LastSavedCustomTameSelectionType; // 0x2328(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CustomActorTracking_LastSavedDinoGroup;            // 0x232C(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                CustomActorTracking_LastSavedCustomTameSearchText; // 0x2330(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CustomActorTracking_LastSavedScrollbarIndex;       // 0x2340(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CustomActorTracking_HasJustChangedSelectionType;   // 0x2344(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CustomActorTracking_HasJustChangedDinoGroup;       // 0x2345(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CustomActorTracking_HasJustChangedSearchText;      // 0x2346(0x1)(OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4785[0x29];                                    // Fixing Size After Last Property  > TateDumper <
	TMap<int32, struct FTrackedActorPlusInfoStruct> AllCreaturesWhosInfoIsBeingSentToClientFromServer; // 0x2370(0x50)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<int32, struct FTrackedActorPlusInfoStruct> AllPlayersWhosInfoIsBeingSentToClientFromServer_NotTeammates; // 0x23C0(0x50)(ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<int32, struct FTrackedActorPlusInfoStruct> AllPlayersWhosInfoIsBeingSentToClientFromServer_Teammates; // 0x2410(0x50)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCustomTrackedActorInfo>       TrackedActorIDs_TotalForFilter_Ordered;            // 0x2460(0x10)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<int32, int32>                           TrackedActorIDs_OrderMap_Players;                  // 0x2470(0x50)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<int32, int32>                           TrackedActorIDs_OrderMap_Creatures;                // 0x24C0(0x50)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<int32, bool>                            CreaturesAlreadyHandledByTamingAutoAdd;            // 0x2510(0x50)(BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       CachedTeamTameListUpdateInterval;                  // 0x2560(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CustomActorTracking_MaxAllowedFavoritedActors;     // 0x2568(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CustomActorTracking_MaxAllowedWaypointTrackedActors; // 0x256C(0x4)(Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ServerRequestCustomTrackedActorListInterval_WithoutUI; // 0x2570(0x4)(BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ServerRequestCustomTrackedActorListInterval_WithUI; // 0x2574(0x4)(ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ClientTimerCachedTameSelectionType;                // 0x2578(0x4)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ClientTimerCachedDinoGroup;                        // 0x257C(0x4)(ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ClientTimerCachedCustomTameSearchText;             // 0x2580(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ClientTimerCachedNewScrollbarIndex;                // 0x2590(0x4)(BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         LatestClientAutoTrackTamesSetting;                 // 0x2594(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4787[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TrackActorPOILocationLerpRateWhenNotInClientRange; // 0x2598(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ActorTrackingPOIAlphaOnScreen;                     // 0x259C(0x4)(ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ActorTrackingPOIScaleOnScreen;                     // 0x25A0(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ActorTrackingPOIAlphaOffScreen;                    // 0x25A4(0x4)(ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ActorTrackingPOIScaleOffScreen;                    // 0x25A8(0x4)(ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DesiredDistanceForActorTrackingPOILoweredTransparency; // 0x25AC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             ActorTrackingPOIDistanceToScreenCenterForTransparency; // 0x25B0(0x10)(Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             POIDistanceToScreenCenterDismiss;                  // 0x25C0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_478A[0xDC];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        ForcedTimerRestrictionOnRequestingTrackingInfoFromServer; // 0x26AC(0x4)(ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_478B[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TMap<uint32, bool>                           ActorTracking_TempTrack_TrackState_Creatures;      // 0x26B8(0x50)(ConstParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<uint32, bool>                           ActorTracking_TempTrackPOIVisibleState_Creatures;  // 0x2708(0x50)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<uint32, bool>                           ActorTracking_TempTrack_TrackState_Players;        // 0x2758(0x50)(Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<uint32, bool>                           ActorTracking_TempTrackPOIVisibleState_Players;    // 0x27A8(0x50)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        ActorTracking_TempTrackActorsNotYetSyncedAtAll;    // 0x27F8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_478C[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DistanceNearDeathWaypointToClearPOI;               // 0x2810(0x4)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ClientsideTrackLatestDeathPOI;                     // 0x2814(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_478D[0x43];                                    // Fixing Size After Last Property  > TateDumper <
	class APostProcessVolume*                    LastHighestPriorityPostProcessVolume;              // 0x2858(0x8)(Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FPrimalPlayerDataStruct               MyPlayerDataStruct;                                // 0x2860(0x508)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AVolumetricDispatcher*                 MyVolumetricDispatcher;                            // 0x2D68(0x8)(ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        DebugPingLifetime : 1;                             // Mask: 0x1, PropSize: 0x10x2D70(0x1)(OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnablingSpectator : 1;                            // Mask: 0x2, PropSize: 0x10x2D70(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3D6 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_478E[0x1CF];                                   // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPGetExtraWaypointsSOTF : 1;                   // Mask: 0x1, PropSize: 0x10x2F40(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_478F[0x3F];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterPlayerController* GetDefaultObj();

	void ZoneVolumeReport();
	void WriteVideoReplayBufferToDisk();
	class FString WritePNTScreenshot();
	bool ViewingAnUploadTerminal();
	void UseFastInventory();
	class FName UpdateTrackingWaypointMark();
	void UpdateRallyPoinTimer();
	TArray<struct FCustomTrackedActorInfo> UpdateCustomActorTrackListEntries_Combined(TArray<struct FTrackedActorPlusInfoStruct>* InfoList, bool* IsInfoFresh, bool* IsPlayer);
	int32 UnlockExplorerNote(bool* ForceShowExplorerNoteUI, bool* SavePlayerData);
	class FName UnlockEmote();
	void UndermeshSphere(int32 Radius);
	void TurnOnGmBuffAndTekArmorAndStatFpsAndAlsoStatUnitBecauseThisIsEasierToTypeOnXbox();
	float TurnInput();
	void TryToForceUploadCharacter();
	bool TryCreateTeamPingType(enum class ETeamPingType PingType);
	bool TraceTeamPingType(enum class ETeamPingType PingType, enum class ETeamPingType ReturnPingType);
	void ToggleWeaponAccessory();
	void ToggleHud();
	float Tick_UpdatePings();
	float Tick_SearchForPOIs();
	void TestPurchaseEP();
	void TestPhysxPerf(int32 RayCount, float DistanceOfRays);
	void TestNotification();
	void TestAlarmNotification(const class FString& Title, class FString* Message);
	void TellServerAboutNewAutoTrackSetting_ServerLogic(bool SelectedAutotrack);
	void TellServerAboutNewAutoTrackSetting(bool SelectedAutotrack);
	bool SwitchFastInventory();
	void SwitchChangeCameraMode();
	void StopTrackingItem(class UPrimalItem* ItemReference);
	void StopSpectating();
	void StartWhistleSelection();
	void StartTrackingItem(class UPrimalItem* ItemReference);
	void StartSurfaceCameraForPassenger(float OnSurfaceTargetYaw, float OnSurfaceTargetPitch, float OnSurfaceTargetRoll);
	void StartSurfaceCamera(float OnSurfaceTargetYaw, float OnSurfaceTargetPitch, float OnSurfaceTargetRoll, float OnSurfaceCameraInterpolationSpeed, bool UseSurfaceCameraInterpolation, struct FVector* CameraOffset);
	void StartPlacingStructrue(class UClass* BuildingStructure);
	void StartEmoteSelection();
	void StartArkGamepadFaceButtonTop();
	void StartArkGamepadFaceButtonRight();
	void StartArkGamepadFaceButtonLeft();
	void StartArkGamepadFaceButtonBottom();
	void StartArkGamepadBackButton();
	void SpectatorDetachOrbitCamera();
	void SpawnTestStructures(int32 NumStructures, float* Spacing, int32 StructureArrayIndex, int32 NumStructureTypes);
	int32 SpawnTestDinos(float* Spacing, int32 DinoArrayIndex, int32 NumDinoTypes);
	void ShowTribeManagerBP();
	void ShowTribeFlagPainting(bool AutoUploadLastPainting, class APrimalStructureTribeFlag* TribeFlag);
	void ShowMyAdminManager();
	void ShowCustomTrackedDinoListMenu(int32 SpecificCharacterID, bool* IsPlayer, bool IsFavorite, bool IsWaypoint);
	bool ShouldSpawnWaterInteraction();
	bool ShouldShowExtendedHUDInfo();
	bool ShouldHideGameplayUI();
	bool SetVideoReplayEnabled();
	void SetupNewTrackBP();
	void SetReplayVideoQuality(int32 VideoQuality);
	float SetPlayerPos();
	int32 SetNumReplaySecondsToStore();
	void SetMultiUseWheelCategory(int32* Category, class APrimalBuff* OptionalBuff, class AActor* OverrideTargetActor);
	void SetMissionWaypointVisible(bool* bInIsVisible);
	void SetMissionWaypointInfo(class FString* InWaypointTitle, struct FVector* InWaypointDestination, class FName* InWaypointID);
	void SetLastInventoryRetrievalTime();
	bool SetInfiniteStats();
	void SetGodMode(bool* bEnable);
	struct FCustomTrackedActorInfo SetFCustomTrackedPlayerInfoMembersByPlayerRef(bool* bIsTrackedWaypoint, bool bIsValidForCurrentFilter);
	struct FCustomTrackedActorInfo SetFCustomTrackedDinoInfoMembersByDinoRef(class APrimalDinoCharacter** HandledDino, bool* bIsTrackedWaypoint, bool bIsValidForCurrentFilter);
	void SetDoFInterpTime(float* InterpTime);
	int32 SetCustomActorTracking_LastSavedScrollbarIndex();
	void SetCustomActorTracking_LastSavedDinoGroup(int32 DinoGroup);
	void SetCustomActorTracking_LastSavedCustomTameSelectionType(int32 CustomTameSelectionType);
	void SetCustomActorTracking_LastSavedCustomTameSearchText(const class FString& CustomTameSearchText);
	void SetControllerGamepadActive(bool* bIsActive);
	bool SetCinematicModeAdvanced(bool* bPreventCameraAnimFPV, bool* bSetHUDHidden, bool* bDisableKeymappings, TArray<class FName>* KeyActionNames, bool* bDisableChat);
	void SetCheatPlayer(bool* bEnable);
	bool SetChangingCameraMode();
	void SetAutoPlayer(bool* bEnable);
	void SetAdminIcon(bool* bAdminIcon);
	struct FItemNetID ServerVerifyStructurePlacementItemData();
	class APrimalDinoCharacter* ServerUploadDino();
	class UPrimalInventoryComponent* ServerUploadCurrentCharacterAndItems();
	class UPrimalInventoryComponent* ServerUploadCharaterDataToArk();
	void ServerUpdateCustomActorTrackListEntries_Players(TArray<struct FTrackedActorPlusInfoStruct>* InfoList, bool* IsInfoFresh);
	void ServerUpdateCustomActorTrackListEntries_Creatures(TArray<struct FTrackedActorPlusInfoStruct>* InfoList, bool* IsInfoFresh);
	void ServerUntrackAllActors_ServerLogic();
	void ServerUntrackAllActors();
	int32 ServerUnlockPerMapExplorerNote(bool* bAvoidBuff, bool* SavePlayerData);
	void ServerUnbanPlayer(class FString* PlayerSteamName);
	struct FItemNetID ServerTransferToRemoteInventory(bool* bAlsoTryToEqup, int32 RequestedQuantity);
	void ServerTransferredPlayerConfirmationResult(bool* bAccept);
	bool ServerTransferFromRemoteInventory(int32 RequestedQuantity, int32* ToSlotIndex);
	class UPrimalInventoryComponent* ServerTransferAllToRemoteInventory(const class FString& CurrentCustomFolderFilter, const class FString& CurrentNameFilter, class FString* CurrentDestinationFolder, bool* bNoFolderView, bool OnlySkins, bool AlsoSkins);
	class UPrimalInventoryComponent* ServerTransferAllFromRemoteInventory(const class FString& CurrentCustomFolderFilter, const class FString& CurrentNameFilter, class FString* CurrentDestinationFolder, bool* bNoFolderView);
	bool ServerTogglePOIVisibilityForTrackedPlayerWaypoint_ServerLogic();
	bool ServerTogglePOIVisibilityForTrackedPlayerWaypoint();
	bool ServerTogglePOIVisibilityForTrackedCreatureWaypoint_ServerLogic();
	bool ServerTogglePOIVisibilityForTrackedCreatureWaypoint();
	bool ServerTogglePOIVisibilityForTrackedActorWaypoint_Combined(int32* TrackedActorIndex, bool* IsPlayer, bool* bDoToggle);
	void ServerSuicide();
	class APrimalStructure* ServerStructureSkinNetMessage(class FName* SkinMessageName, struct FSkinNetMessageParams* SkinMessageParams);
	class APrimalStructure* ServerStructureSetSkinPersistentData(struct FSkinNetMessageParams* SkinMessageParams);
	class AShooterWeapon* ServerStopWeaponFire();
	class AShooterWeapon* ServerStopWeaponAltFire();
	void ServerStopSpectating();
	void ServerStayAlive();
	class AShooterWeapon* ServerStartWeaponFire();
	class AShooterWeapon* ServerStartWeaponAltFire();
	uint64 ServerSpectateToPlayerByID();
	void ServerShowMessageOfTheDay();
	void ServerSetVRPlayer(bool* bSetVRPlayer);
	void ServerSetSupressAdminIcon(bool* bSuppress);
	int32 ServerSetSubscribedApp(bool* bPreventDefaultItems);
	void ServerSetSlomoRateFromSpectator(float* Rate);
	void ServerSetMessageOfTheDay(class FString* Message);
	class APrimalStructureMovingContainer* ServerSetItemBalloonLocation(struct FPrimalMapMarkerEntryData* MapMarker);
	int32 ServerSetFreeCraftingQuantity();
	int32 ServerSetFavoriteTrackedPlayerViaCharacterIndex_ServerLogic(bool* ShouldFavorite);
	int32 ServerSetFavoriteTrackedPlayerViaCharacterIndex(bool* ShouldFavorite);
	int32 ServerSetFavoriteTrackedCreatureViaCharacterIndex_ServerLogic(bool* ShouldFavorite);
	int32 ServerSetFavoriteTrackedCreatureViaCharacterIndex(bool* ShouldFavorite);
	int32 ServerSetFavoriteTrackedActorViaCharacterIndex_Combined(bool* ShouldFavorite, bool* IsPlayer);
	int32 ServerSetDeathWaypointVisible_ServerLogic();
	int32 ServerSetDeathWaypointVisible();
	int32 ServerSetDeathWaypointInvisible_ServerLogic();
	int32 ServerSetDeathWaypointInvisible();
	bool ServerSetActiveWaypointTrackedPlayerViaCharacterIndex_ServerLogic();
	bool ServerSetActiveWaypointTrackedPlayerViaCharacterIndex();
	bool ServerSetActiveWaypointTrackedCreatureViaCharacterIndex_ServerLogic();
	bool ServerSetActiveWaypointTrackedCreatureViaCharacterIndex();
	bool ServerSetActiveWaypointTrackedActorViaCharacterIndex_Combined(bool* IsPlayer);
	void ServerSendDirectMessage(class FString* PlayerSteamID, class FString* Message);
	int32 ServerSendChatMessage();
	enum class EPrimalARKTributeDataType ServerSendArkDataPayloadEnd(struct FGuid* ID);
	uint32 ServerSendArkDataPayloadBegin(struct FGuid* ID, class FString* Name);
	TArray<uint8> ServerSendArkDataPayload(struct FGuid* ID);
	class FName ServerSelectedCustomItemAction();
	void ServerSaveWorld();
	void ServerRequestUpdateTrackedWaypointsOnly_ServerLogic(bool ClientAutoTrackTamesSetting);
	void ServerRequestUpdateTrackedWaypointsOnly(bool ClientAutoTrackTamesSetting);
	void ServerRequestUpdateTrackedWaypointsAndMapPlayers_ServerLogic(bool ClientAutoTrackTamesSetting);
	void ServerRequestUpdateTrackedWaypointsAndMapPlayers(bool ClientAutoTrackTamesSetting);
	void ServerRequestUpdateActiveMissionTags();
	void ServerRequestTribeLog();
	void ServerRequestTamingInfoList_ServerLogic();
	void ServerRequestTamingInfoList();
	void ServerRequestStructuresPlacedOnFloor(TArray<class APrimalStructure*>* OnStructures);
	class UClass* ServerRequestShowLeaderboards(class FName* MissionTag);
	void ServerRequestSetPin(class UObject** ForTarget, int32* PinValue, bool* bIsSetting, int32* TheCustomIndex);
	int32 ServerRequestSetDefaultDestination(int32* ForSpawnPointID);
	int32 ServerRequestRespawnAtPoint(int32 SpawnRegionIndex);
	struct FItemNetID ServerRequestRemoveWeaponClipAmmo();
	struct FItemNetID ServerRequestRemoveWeaponAccessoryOnly();
	struct FItemNetID ServerRequestRemoveItemSkinOnly();
	struct FItemNetID ServerRequestRemoveItemSkin();
	void ServerRequestRemoveDinoFromTamingListByID_ServerLogic(int32* InID1, int32* InID2);
	void ServerRequestRemoveDinoFromTamingListByID(int32* InID1, int32* InID2);
	struct FItemNetID ServerRequestRemoveCustomCosmetic();
	class UPrimalInventoryComponent* ServerRequestRemoteDropAllItems(const class FString& CurrentCustomFolderFilter, const class FString& CurrentNameFilter);
	void ServerRequestPlaceStructureSkin(class APrimalStructure** StructureToSkin, class UClass** StructureSkinClass, int64 CustomCosmeticStructureSkinModID, int32 CustomCosmeticStructureSkinModVariantID);
	bool ServerRequestPlaceStructure(int32 StructureIndex, const struct FVector& BuildLocation, const struct FRotator& BuildRotation, const struct FBPNetExecParams& LocalData, bool bIsCheat, int32 WithSnapPointCycle);
	void ServerRequestMyTribeOnlineList();
	void ServerRequestLevelUp(class UPrimalCharacterStatusComponent* ForStatusComp, enum class EPrimalCharacterStatusValue* ValueType);
	int32 ServerRequestInventoryUseItemWithItem();
	int32 ServerRequestInventoryUseItemWithActor(class AActor** AnActor);
	int32 ServerRequestInventoryUseItemRemoteWithItemLocal(class UPrimalInventoryComponent* Localinv, class UPrimalInventoryComponent* Remoteinv);
	struct FItemNetID ServerRequestInventoryUseItem();
	struct FItemNetID ServerRequestInventorySwapItems();
	int32 ServerRequestFastTravelToPoint(int32 FromSpawnPointID);
	void ServerRequestDropAllItems(const class FString& CurrentCustomFolderFilter, const class FString& CurrentNameFilter, bool OnlySkins, bool AlsoSkins);
	int32 ServerRequestDownloadPlayerCharacter(const struct FArkTributePlayerData& DownloadedCharacter, int32 SpawnRegionIndex);
	struct FARKTributeDino ServerRequestDownloadDino();
	class APrimalDinoCharacter* ServerRequestDinoCharStats();
	void ServerRequestDinoAncestors(class APrimalDinoCharacter** ForDino);
	int32 ServerRequestCustomTrackedActorList_ServerLogic(int32 CustomTameSelectionType, int32 DinoGroup, const class FString& CustomTameSearchText, bool ClientAutoTrackTamesSetting);
	int32 ServerRequestCustomTrackedActorList(int32 CustomTameSelectionType, int32 DinoGroup, const class FString& CustomTameSearchText, bool ClientAutoTrackTamesSetting);
	void ServerRequestCreateMissionDataBuff();
	class APrimalStructureItemContainer* ServerRequestContainerFuel();
	struct FItemNetID ServerRequestApplyCustomCosmetic(int64 CustomCosmeticSkinID, int32 CustomCosmeticSkinVariantID);
	class UPrimalInventoryComponent* ServerRequestActorItems(bool bInventoryItems, bool bWithFirstSpawn);
	int32 ServerRepeatMultiUse();
	struct FItemNetID ServerRepairItem();
	void ServerRemoveSteamItemSucceeded();
	void ServerRemoveSteamItem(uint32 ItemdDefId);
	bool ServerRemovePawnItem();
	void ServerRemovePassenger();
	void ServerRemoveCustomActorTrackListEntries_FromTotalList_TeammatePlayers(TArray<int32>* InfoList, bool* IsInfoFresh);
	void ServerRemoveCustomActorTrackListEntries_FromTotalList_Players(TArray<int32>* InfoList, bool* IsInfoFresh);
	void ServerRemoveCustomActorTrackListEntries_FromTotalList_Creatures(TArray<int32>* InfoList, bool* IsInfoFresh);
	void ServerRemoveAdminPlayer(class FString* PlayerSteamName);
	void ServerReleaseSeatingStructure();
	void ServerRefreshSteamInventory();
	void ServerReceiveCustomActorTrackList_Players(TArray<struct FTrackedActorPlusInfoStruct>* InfoList, bool* IsInfoFresh);
	void ServerReceiveCustomActorTrackList_Creatures(TArray<struct FTrackedActorPlusInfoStruct>* InfoList, bool* IsInfoFresh);
	void ServerReadMessageOFTheDay();
	bool ServerProcessItemNetExecCommandUnreliableBP(class FName* CommandName, struct FBPNetExecParams* ExecParams);
	bool ServerProcessItemNetExecCommandBP(class FName* CommandName, struct FBPNetExecParams* ExecParams);
	void ServerPaint(class UStructurePaintingComponent** Structure, const TArray<struct FPaintItem>& Paints, bool bLastBatch, bool bFromLoadFile, bool ReplicateToClients);
	class UObject* ServerNotifyEditText();
	int32 ServerMultiUse();
	void ServerLoadWorld();
	void ServerLoadUploadedDinos();
	void ServerLoadUploadedCharacters();
	bool ServerLoadArkInventoryItems();
	void ServerListPlayers();
	void ServerKickPlayer(class FString* PlayerSteamName);
	class UPrimalInventoryComponent* ServerInventoryClearCraftQueue();
	struct FItemNetID ServerGrindItemInRemoteInventory(bool GrindStack);
	class FString ServerGlobalCommand();
	bool ServerGiveItem(bool* UseExactQuality, bool* bGiveEngram);
	void ServerGetVersion();
	void ServerGetOriginalHairColor();
	void ServerGetMessageOfTheDay();
	void ServerFixScoutPlayerState();
	struct FItemNetID ServerEquipToRemoteInventory();
	struct FItemNetID ServerEquipPawnItem();
	struct FItemNetID ServerDropFromRemoteInventory();
	void ServerDropAllNotReadyForUploadItems();
	void ServerDPC();
	int32 ServerDownloadTransferredPlayer();
	class FString ServerDisallowPlayerToJoinNoCheck();
	struct FItemNetID ServerDeleteItemFromCustomFolder(int32 InventoryCompType);
	class FString ServerDeleteCustomFolder(int32 InventoryCompType);
	void ServerDataSetRPC(TArray<struct FDataSet>* DataSets);
	bool ServerCycleSpectator();
	struct FItemNetID ServerCraftItem();
	void ServerClearPOIVisibilityForAllActors_ServerLogic();
	void ServerClearPOIVisibilityForAllActors();
	int32 ServerClearDeathWaypoint_ServerLogic();
	int32 ServerClearDeathWaypoint();
	void ServerCheckUnfreeze();
	void ServerCheckIsValidPlayerToDownload(const struct FArkTributePlayerData& PlayerData);
	void ServerCheckIfWildDinoChildCanBeImprinted_ServerLogic();
	void ServerCheckIfWildDinoChildCanBeImprinted();
	struct FItemNetInfo ServerCharacterUploadWithItems_UploadItem();
	uint64 ServerCharacterUploadWithItems_Start(const struct FArkTributePlayerData& PlayerData);
	uint64 ServerCharacterUploadWithItems_FinishAndCreateCharacter();
	TArray<uint8> ServerCharacterUploadWithItems_CharaterPayload();
	void ServerBanPlayer(class FString* PlayerSteamName);
	TArray<struct FItemNetID> ServerAutoStackItemIDs();
	bool ServerAsyncLoadArkInventoryItems();
	class FString ServerAllowPlayerToJoinNoCheck();
	struct FItemNetID ServerAddItemToCustomFolder(int32 InventoryCompType);
	struct FItemNetID ServerAddItemToArkInventory(int32 RequestedQuantity);
	struct FItemNetID ServerAddItemFromArkInventory(int32 RequestedQuantity);
	void ServerAddCustomActorTrackListEntries_Players(TArray<struct FTrackedActorPlusInfoStruct>* InfoList, bool* IsInfoFresh);
	void ServerAddCustomActorTrackListEntries_Creatures_ForcePOIVisible(TArray<struct FTrackedActorPlusInfoStruct>* InfoList, bool* IsInfoFresh);
	void ServerAddCustomActorTrackListEntries_Creatures(TArray<struct FTrackedActorPlusInfoStruct>* InfoList, bool* IsInfoFresh);
	void ServerAddAdminPlayer(class FString* PlayerSteamName);
	bool ServerAddAchievementID();
	class UPrimalInventoryComponent* ServerActorViewRemoteInventory();
	class UPrimalInventoryComponent* ServerActorCloseRemoteInventory();
	void Server_UpdateRallyPointData();
	TArray<class FString> Server_SendBlockListFromClient();
	int32 Server_SelectAndJoinVoiceChannel();
	struct FReplicatePingData Server_RespondToPing();
	void Server_RequestLastDeathTrackingActorLoc_ServerLogic();
	void Server_RequestLastDeathTrackingActorLoc();
	void Server_Ping(const struct FReplicatePingData& WithPingData);
	void Server_HandleOnPossessBlockedPlayer(class AShooterPlayerController* OtherPC);
	void Server_GetPlatformNameFromId(uint32* ID);
	void Server_DoTeamPing(const struct FTeamPingData& WithPingData);
	void SendAlarmNotification(const class FString& SteamID, const class FString& Title, class FString* Message);
	void SCP();
	bool SameLinkedId(int64* Value);
	void RPCStayAlive();
	struct FReplicatePingData RespondToPing();
	void RequestUpdateCachedTeamTameList();
	class FString RequestSpectator();
	void RenamePlayer(class FString* NewName);
	class FName RemoveMinimapMark();
	void RemoveItemSucceeded();
	bool RemoveCustomActorTrackListEntries_FromTotalList_Combined(TArray<int32>* InfoList, bool* IsInfoFresh, bool* IsPlayer);
	class FString RemoteServerCheat();
	class FString RemoteCheat();
	void ReleasedChangeCameraMode();
	void RefreshDinoTrackInfo();
	TArray<struct FCustomTrackedActorInfo> ReceiveCustomActorTrackList_Combined(TArray<struct FTrackedActorPlusInfoStruct>* InfoList, bool* IsInfoFresh, bool* IsPlayer);
	void QuitToMainMenu();
	void QueryGDKStats();
	int32 PurchaseEngramPoint();
	void PrintColors();
	void PressedChangeCameraMode();
	void PlayHitMarkerStructureAlly();
	void PlayHitMarkerStructure();
	struct FHitMarkerSettings PlayHitMarkerCharacterBP(bool* bHitFriendlyTarget);
	struct FHitMarkerSettings PlayHitMarkerCharacter(bool* bHitFriendlyTarget);
	class FString PlayerCommand(const class FString& TheCommand);
	void PingNearbyPlayers(const struct FReplicatePingData& WithPingData);
	void OnWhistlePress();
	void OnToggleInGameMenu();
	void OnToggleDoFMenu();
	void OnStopTargeting();
	void OnStopFire();
	void OnStartTargeting();
	void OnStartInGameMenu();
	void OnStartFire();
	void OnSpectatorIncreaseBaseSpeedStart();
	void OnSpectatorDecreaseBaseSpeedStart();
	bool OnServerRefreshSteamInventoryFinished(uint64 SteamID);
	bool OnRefreshSteamInventoryToCheckConsumeFinished(uint64 SteamID);
	bool OnRefreshSteamInventoryFinished(uint64 SteamID);
	void OnRecievedUpdatedCachedTeamTameList(bool* IsInfoFresh, int32* DesiredIndexOfWidgetThatShouldHaveItsCreatureReturned);
	void OnPingUp();
	void OnPingDown();
	int32 OnLoadArkTributePlayersDataFinished(bool* Success);
	void OnLevelView();
	void OnFirstSaveAfterCharacterDownloadFinished(bool* Success);
	void OnEmoteKey2Release();
	void OnEmoteKey2Press();
	void OnEmoteKey1Release();
	void OnEmoteKey1Press();
	void OnDisableSpectator();
	void OnCurrentCharacterAndItemsUploaded(bool* Success);
	bool OnConsumeItemFinished(uint64 SteamID);
	void OnArkTributeSaved(bool* Success);
	TArray<uint64> OnAddItemFinished(uint64 SteamID);
	void OnAddedItemsToAllClustersInventory(bool* Success, const class FString& UserId, const TArray<int32>& MasterIndexNum);
	int32 NotifyTribeWarStatus();
	class AActor* NotifyPawnBuffsOfDamageEvent(float* DamageAmount, struct FDamageEvent* DamageEvent);
	struct FMinimapMark NewMinimapMark();
	class USceneComponent* NetSpawnFoliageVFXActorAtLocationAndDoFoliageInteraction_Simple(class UClass** AnActorClass, struct FRotator_NetQuantize* AtRotation, int32* DataIndex);
	class USceneComponent* NetSpawnFoliageVFXActorAtLocationAndDoFoliageInteraction(class UClass** AnActorClass, struct FRotator_NetQuantize* AtRotation, int32* DataIndex);
	class FName NetSpawnActorAtLocation(class UClass** AnActorClass, struct FRotator_NetQuantize* AtRotation, int32* DataIndex);
	class UClass* MobileSpawnTameConsoleAdd(bool IsBaby);
	bool MobileSpawnTame(bool IsBaby, bool IsFemale);
	void MarkDinoListEntryWidgetFavoritePlayer(int32* ID);
	void MarkDinoListEntryWidgetFavoriteCreature(int32* ID);
	void MarkDinoListEntryWidgetFavoriteCombined(int32* ID, bool* IsPlayer);
	void LogChatMessage(struct FPrimalChatMessage* Message);
	class FName LockEmote();
	void LoadUserCosmeticsInfo();
	class FString LinkedPlayerIDString();
	void LevelView();
	void LeaveMeAlone();
	class FString JoinVoiceLobby();
	class FString JoinVoiceChannel();
	bool IsViewingInventoryUI();
	bool IsTribeAdmin();
	void IsTargetSleeping();
	bool IsSpectator();
	bool IsSOTFIntro();
	bool IsRemoteControlling();
	bool IsPOINearCenterOfScreen(struct FVector2D* DeadZone);
	bool IsPlayerViewingPing(class AShooterPlayerController** ForPC);
	bool IsPingedItem();
	bool IsPawnAcknowledged();
	bool IsMinimapOpened();
	bool IsJumpInputPressed();
	bool IsInTribe();
	bool IsInputPressed(class FName* InputName);
	bool IsHudVisible();
	bool IsGameInputAllowed();
	bool IsFirstLocalPlayerOrLivingLocalPlayer();
	bool IsFirstLocalPlayer();
	bool IsEmoteUnlocked();
	bool IsAtPersonalTameLimit();
	bool IsAltFireInputPressed();
	bool InitPing(const struct FPingData& ForPingData);
	void InitCharacterPainting(class APrimalCharacter** Char);
	void InfiniteStats();
	enum class EPrimalGDKStat IncrementStat();
	bool HideRiders();
	void HideFPVMesh();
	bool HavePingDataOfPlayer();
	bool HasGodMode();
	bool HasBestScoreForMission(class FName* MissionTag);
	class FString GlobalCommand();
	bool GiveSlotItemNum(int32 MasterIndexNum);
	bool GiveSlotItem();
	int32 GiveColors();
	enum class ETrackedActorCategory GetTrackedActorCategoryEnumFromInt();
	struct FTeamPingDataForClient GetTeamPingSettingsByType();
	struct FVector GetTamedDinosNearBy();
	int32 GetSubscribedAppIds();
	class AShooterSpectatorPawn* GetShooterSpectatorPawn();
	class AShooterHUD* GetShooterHud();
	bool GetPlayerViewPointNoModifiers(struct FVector* Out_Location, struct FRotator* Out_Rotation);
	class FString GetPlayerCharacterName();
	class AShooterCharacter* GetPlayerCharacterEvenIfDead();
	class AShooterCharacter* GetPlayerCharacter();
	class FString GetPingTitleForActor(class AActor** ForActor);
	class UTexture2D* GetPingIconForComponent();
	class FString GetPersonalTameLimitString();
	class UPrimalInventoryComponent* GetPawnInventoryComponent();
	TArray<struct FPointOfInterestData_ForCompanion> GetNearbyPOIs();
	void GetMapMarkerPOIs();
	struct FVector2D GetLocalPlayerViewSize();
	int32 GetLinkedPlayerID();
	double GetLastInventoryRetrievalTime();
	class UPrimalItem* GetInventoryUISelectedSkinRemote();
	class UPrimalItem* GetInventoryUISelectedSkinLocal();
	class UPrimalItem* GetInventoryUISelectedItemRemote();
	class UPrimalItem* GetInventoryUISelectedItemLocal();
	int32 GetIntFromTrackedActorCategoryEnum();
	TArray<uint8> GetHeldItemSlots();
	struct FExplorerNoteEntry GetExplorerNoteEntry();
	class UPrimalItem* GetCustomCosmeticUISelectedSkinLocal();
	class UPrimalItem* GetCustomCosmeticUISelectedItemLocal();
	class AShooterCharacter* GetControllerPlayer();
	struct FLeaderboardRow GetBestScoreForMission(class FName* MissionTag);
	void GetAllMatinees();
	TArray<struct FTrackedActorPlusInfoStruct> GetAllCachedTeamTames();
	bool GetAllAimedHarvestActors();
	class AMissionType* GetActiveMission();
	class FString FormatTextWithKeyBindings(class FString* InText, bool* bIgnoreMarkup, int32* IconOffset);
	void ForceSpectatorCycleBP();
	void FlushPrimalStats();
	void FlushLevelStreaming();
	void FinishInputBlockingTimeout();
	int32 FindGetTrackedActorWaypointIndexID();
	int32 FindGetTrackedActorWaypointIndex();
	int32 FindGetTrackedActorFavoritedIndexID();
	int32 FindGetTrackedActorFavoritedIndex();
	void FinalFlushLevelStreaming();
	void EnvQA();
	void EnforcementHighlight(bool* bEnable);
	bool EndWhistleSelectionInput();
	void EndWhistleSelection();
	void EndSurfaceCamera();
	bool EndEmoteSelection();
	void EndArkGamepadFaceButtonTop();
	void EndArkGamepadFaceButtonRight();
	void EndArkGamepadFaceButtonLeft();
	void EndArkGamepadFaceButtonBottom();
	void EndArkGamepadBackButton();
	bool EnableSpectator();
	void EditorReconnect();
	struct FVector2D DrawMultiUsePingEntry();
	struct FVector2D DrawCrosshairOnScreenBP();
	void DoServerCheckUnfreeze();
	void DoPlayerCommand(const class FString& TheCommand);
	bool DoPingTrace();
	bool DoesPlayerOwnPing();
	void DoCrash();
	void DisableSurfaceCameraInterpolation();
	void DisableEnemyInvisible();
	void DebugStructures();
	void DebugCheckSeven(bool* bEnable);
	void CopyWorldBuffStatus();
	void CopyCoordsToClipboard();
	void ConditonalEndGamepadModiferState();
	struct FItemNetID ClientUsedActorItem();
	TArray<struct FARKTributeDinoListing> ClientUploadedDinosLoaded();
	class APrimalDinoCharacter* ClientUploadDino();
	struct FPrimalPlayerDataStruct ClientUpdateMyPlayerDataStruct();
	int32 ClientUpdateItemWeaponClipAmmo();
	int32 ClientUpdateItemQuantity();
	float ClientUpdateItemDurability();
	struct FCustomItemData ClientUpdateItemCustomData();
	TArray<struct FItemCraftQueueEntry> ClientUpdateInventoryCraftQueue();
	void ClientUpdateCustomActorTrackListEntries_Players(TArray<struct FCustomTrackedActorInfo>* InfoList, bool* IsInfoFresh);
	void ClientUpdateCustomActorTrackListEntries_Creatures(TArray<struct FCustomTrackedActorInfo>* InfoList, bool* IsInfoFresh);
	int32 ClientUnlockExplorerNote(bool* ForceShowExplorerNoteUI, bool* SavePlayerData);
	class FString ClientUnlockAchievement(bool* SavePlayerData);
	uint64 ClientTeleportSpectator(struct FVector* Location);
	struct FItemNetID ClientSwapActorItems();
	class USoundBase* ClientStopLocalSound();
	bool ClientStartSurfaceCameraForPassenger();
	void ClientStartReceivingTribeLog();
	bool ClientStartReceivingActorItems();
	class FString ClientStartActivity();
	void ClientSimpleMarkTrackedActorInfoUpdated();
	bool ClientsideTogglePOIVisibilityForTrackedPlayerWaypoint();
	bool ClientsideTogglePOIVisibilityForTrackedCreatureWaypoint();
	bool ClientsideSetActiveWaypointTrackedPlayerViaCharacterIndex();
	bool ClientsideSetActiveWaypointTrackedCreatureViaCharacterIndex();
	void ClientShowTransferredPlayerConfirmationDialog();
	bool ClientShowSpawnUIForTransferringPlayer();
	float ClientShowSpawnUI();
	class UObject* ClientShowPaintingUI();
	struct FLeaderboardRow ClientShowLeaderboard(class FName* MissionTag);
	bool ClientShowCharacterCreationUI();
	class FText ClientShooterWasKicked();
	void ClientSetSpectatorLocation(const struct FVector& NewLocation);
	int32 ClientSetPersonalDinoTameCount();
	class UClass* ClientSetHUDAndInitUIScenes();
	struct FRotator ClientSetControlRotation();
	float ClientSetContainerFuel();
	bool ClientSetCanEnableCheats();
	int32 ClientSetArkTributeLimits();
	class USoundBase* ClientServerSOTFNotificationCustom(class FString* MessageText, int32 TribeID);
	TArray<struct FPrimalPlayerCharacterConfigStructReplicated> ClientServerSOTFNotification(enum class ESTOFNotificationType NotificationType, class FString* MessageText, bool* bLastPlayer, class FString* TribeName, int32 TribeID);
	class USoundBase* ClientServerNotificationSingle(class FString* MessageText, int32 MessageTypeID, int32* Priority);
	class USoundBase* ClientServerNotification(class FString* MessageText, int32* Priority);
	bool ClientServerChatMessage(class FString* MessageText);
	class FString ClientServerChatDirectMessage(class FString* MessageText);
	class FString ClientSendVersion();
	bool ClientSendItemNetExecCommandToServer(class FName* CommandName, struct FBPNetExecParams* ExecParams);
	class UPrimalInventoryComponent* ClientSendFolderData(const TArray<struct FServerCustomFolder>& ServerCustomFolder);
	uint64 ClientSendArkDataPayloadEnd(struct FGuid* ID);
	uint32 ClientSendArkDataPayloadBegin(struct FGuid* ID, class FString* Name);
	TArray<uint8> ClientSendArkDataPayload(struct FGuid* ID);
	bool ClientRunLocalConsoleCommand();
	void ClientResetRespawningFlag();
	int32 ClientRequestNewTrackInfoFromServer_TimerRestriction(int32 CustomTameSelectionType, int32 DinoGroup, const class FString& CustomTameSearchText);
	int32 ClientRequestNewTrackInfoFromServer(int32 CustomTameSelectionType, int32 DinoGroup, const class FString& CustomTameSearchText);
	void ClientRequestDeathPOIHidden_TimerRestriction();
	int32 ClientRemoveItemFromSteamInventory();
	struct FItemNetID ClientRemoveItemFromArk();
	void ClientRemoveCustomActorTrackListEntries_FromTotalList_TeammatePlayers(TArray<int32>* InfoList, bool* IsInfoFresh);
	void ClientRemoveCustomActorTrackListEntries_FromTotalList_Players(TArray<int32>* InfoList, bool* IsInfoFresh);
	void ClientRemoveCustomActorTrackListEntries_FromTotalList_Creatures(TArray<int32>* InfoList, bool* IsInfoFresh);
	bool ClientRemoveActorItem();
	bool ClientRefreshSteamInventoryFinished();
	class FString ClientReceiveTribeLog();
	void ClientReceiveTamingInfoList(TArray<struct FTamingDinoInfo>* InfoList);
	TArray<struct FStructuresOnFloor> ClientReceiveStructuresPlacedOnFloor();
	bool ClientReceivePlayerDataArray_End();
	void ClientReceivePlayerDataArray_Begin();
	TArray<uint8> ClientReceivePlayerDataArray_AppendPlayerDataChunk();
	void ClientReceivePlayerDataArray_AppendPlayerData(const struct FArkTributePlayerDataListing& PlayerData);
	struct FLinearColor ClientReceiveOriginalHairColor();
	TArray<uint32> ClientReceiveMyTribeOnlineList();
	TArray<float> ClientReceiveDinoCharStats();
	void ClientReceiveDinoAncestors(class APrimalDinoCharacter** ForDino, TArray<struct FDinoAncestorsEntry>* DinoAncestors, const TArray<struct FDinoAncestorsEntry>& DinoAncestorsMale, int32 RandomMutationsFemale, int32 RandomMutationsMale);
	void ClientReceiveCustomActorTrackList_Players(TArray<struct FCustomTrackedActorInfo>* InfoList, bool* IsInfoFresh);
	void ClientReceiveCustomActorTrackList_Creatures(TArray<struct FCustomTrackedActorInfo>* InfoList, bool* IsInfoFresh);
	void ClientReceiveActiveMissionTags(TArray<class FName>* MissionTags);
	int32 ClientProgressAchievementInteger(bool* SavePlayerData);
	float ClientProgressAchievement(bool* SavePlayerData);
	bool ClientProcessItemNetExecCommandUnreliableBP(class FName* CommandName, struct FBPNetExecParams* ExecParams);
	bool ClientProcessItemNetExecCommandBP(class FName* CommandName, struct FBPNetExecParams* ExecParams);
	class USoundBase* ClientPlayLocalSound(bool* bAttach);
	bool ClientPlayerIsValidToDownload(const struct FArkTributePlayerData& PlayerData);
	void ClientOnStartDownloadTransferredPlayerCharacter();
	class FString ClientOnEndDownloadTransferredPlayerCharacter(bool* Success);
	void ClientOnDropAllNotReadyForUploadItemsFinished();
	uint64 ClientOnCurrentCharacterAndItemsUploaded();
	void ClientOnAddedItemsToAllClustersInventory(bool* Success, const class FString& UserId, const TArray<int32>& MasterIndexNum);
	class FName ClientNotifyUnlockHairStyleOrEmote();
	bool ClientNotifyUnlockedEngram();
	void ClientNotifyUnlockedAllExplorerNotes();
	float ClientNotifyTribeXP();
	void ClientNotifyTorpidityIncrease();
	class UClass* ClientNotifyTamedDino();
	class UClass* ClientNotifySummonedDino();
	struct FUniqueNetIdRepl ClientNotifyShowProfileRequest();
	class FString ClientNotifyRemotePlayerDeath();
	class APawn* ClientNotifyPlayerKill(class AActor** PlayerPawn);
	void ClientNotifyPlayerDeathReason(const class FString& ReasonString);
	void ClientNotifyPlayerDeath(class APawn* InstigatingPawn);
	bool ClientNotifyPaintFinished();
	float ClientNotifyMessageOfTheDay(class FString* Message);
	void ClientNotifyListenServerOutOfRange();
	int32 ClientNotifyLevelUp(class APrimalCharacter* ForChar);
	void ClientNotifyHitHarvest();
	class UObject* ClientNotifyEditText();
	class APawn* ClientNotifyDinoKill(class APrimalDinoCharacter* InstigatingPawn);
	class FString ClientNotifyDinoDeath(bool* bIsVehicle);
	class UClass* ClientNotifyDefeatedDino();
	void ClientNotifyCantHitHarvest();
	void ClientNotifyCantHarvest();
	void ClientNotifyAdmin();
	bool ClientLoadArkItems();
	struct FItemNetID ClientInsertActorItem();
	class UObject* ClientHUDNotificationTypeParams();
	void ClientGetMessageOfTheDay(class FString* Message);
	bool ClientFinishedReceivingActorItems();
	class UPrimalInventoryComponent* ClientFinishedLoadArkItems();
	void ClientFailedToAddItemFromArkInventory();
	void ClientFailedRemoveSaddle();
	void ClientEndReceivingTribeLog();
	bool ClientEndActivity();
	void ClientDrawUndermeshSphere(int32 Radius);
	float ClientDrawBrushComponentInGame(class UBrushComponent* BrushComponent, bool* bDrawSolidBox);
	void ClientDownloadPlayerCharacterRequestFinished(bool* Success);
	void ClientDownloadDinoRequestFinished(bool* Success);
	int32 ClientDoMultiUse();
	bool ClientDisplayNotificationDialog(class FString* Message, const class FString& Title);
	void ClientDataSetRPC(TArray<struct FDataSet>* DataSets);
	void ClientCreateDeathMark(struct FVector* Location);
	class UClass* ClientCollectedAchievementItem();
	struct FPrimalChatMessage ClientChatMessage();
	bool ClientAddItemToArk();
	class FString ClientAddFolderToInventoryComponent(int32 InventoryCompType);
	float ClientAddFloatingText(float FadeOutTime);
	int32 ClientAddFloatingDamageText(int32* DamageAmount);
	void ClientAddCustomActorTrackListEntries_Players(TArray<struct FCustomTrackedActorInfo>* InfoList, bool* IsInfoFresh);
	void ClientAddCustomActorTrackListEntries_Creatures_ForcePOIVisible(TArray<struct FCustomTrackedActorInfo>* InfoList, bool* IsInfoFresh);
	void ClientAddCustomActorTrackListEntries_Creatures(TArray<struct FCustomTrackedActorInfo>* InfoList, bool* IsInfoFresh);
	class FString ClientAddActorItemToFolder();
	bool ClientAddActorItem();
	bool Client_UpdateRallyPointData(const struct FTeamPingData& RallyPointData);
	TArray<uint32> Client_RecieveBlockedUserIdsFromServer();
	struct FReplicatePingData Client_ReceivePingResponse(class AShooterCharacter* RespondingPlayer);
	struct FReplicatePingData Client_ReceivePing();
	struct FVector Client_ReceiveLastDeathTrackingActorLoc();
	class ADayCycleManager* Client_ReceiveBuffFromDayCycle();
	class FString Client_GetPlatformNameFromId(uint32* ID);
	void Client_AddTeamPing(const struct FTeamPingData& WithPingData);
	class FString CheckRequestSpectator();
	void CheckForPlayerInventory();
	void CheckforOrbiting();
	class FString CheckCheatsPassword();
	void CheckCanEnableCheats();
	class FString Cheat();
	float ChangeServerRequestCustomTrackedActorListInterval_WithUI();
	float ChangeServerRequestCustomTrackedActorListInterval_WithoutUI();
	void CCC();
	bool CanTeamPing();
	bool CanPingRallyPoint();
	bool CanPingPlayer(class AShooterCharacter** ForPlayer);
	bool CanDoPlayerCharacterInput();
	bool CanDismissPOI();
	void CallServerRestartPlayer();
	struct FCustomTrackedActorInfo BPSetFCustomTrackedPlayerInfoMembersByPlayerRef(bool* bIsTrackedWaypoint, bool bIsValidForCurrentFilter);
	void BPServerRequestUpdateTrackedWaypointsOnly();
	void BPServerRequestUpdateTrackedWaypointsAndMapPlayers();
	int32 BPServerRequestRespawnAtPoint(int32 SpawnRegionIndex);
	int32 BPServerRequestCustomTrackedActorList(int32 CustomTameSelectionType, int32 DinoGroup, const class FString& CustomTameSearchText, bool Handled);
	bool BPServerRemovePawnItem();
	void BPServerHandleDataSetRPC(TArray<struct FDataSet>* DataSets);
	class AActor* BPServerCycleSpectator();
	bool BPSearchForPOIs();
	void BPReceivedPlayer(class UPlayer** InPlayer);
	bool BPPreventTurnInput(bool* bIsSpectatorTurn);
	bool BPPreventChangeCamera();
	void BPOnSpawnPlayerCameraManager();
	void BPOnRecievedUpdatedCachedTeamTameList(int32 CustomTameSelectionType, int32 DinoGroup, const class FString& CustomTameSearchText, bool* IsInfoFresh, int32* DesiredIndexOfWidgetThatShouldHaveItsCreatureReturned, bool Handled, int32* ScrollbarIndex);
	bool BPHandleServerCheckUnfreeze();
	bool BPHandleClientCheckUnfreeze();
	void BPGetPlayerViewPoint(struct FVector* Out_Location, struct FRotator* Out_Rotation);
	class APlayerController* BPGetExtraWaypointsSOTF(class AShooterCharacter** PlayerPawn, const TArray<struct FPointOfInterestData_ForCompanion>& IndicatorsIn, const TArray<struct FPointOfInterestData_ForCompanion>& IndicatorsOut);
	void BPDisableSpectator();
	int32 BPClientUnlockExplorerNote(bool* ForceShowExplorerNoteUI);
	void BPClientHandleDataSetRPC(TArray<struct FDataSet>* DataSets);
	bool BPCheckClientPossession();
	struct FVector BPCheckCanDinoSpawnFromLocation(const struct FVector& CheckLocation);
	struct FVector BPApplyFoliageHarvestEffectOnHitAndCollect(struct FVector* InteractDir);
	void BPActivatedMultiUseSelection();
	void BPAcknowledgePossession(class APawn** P);
	void BlueprintGiveLevels(TArray<int32>* Levels);
	bool BlueprintGiveItem(bool* UseExactQuality, bool* bGiveEngram);
	float AutoCycle();
	void AttemptTransferRedownload();
	void AsyncLoadInventory();
	bool AllowTribeGroupPermission(enum class ETribeGroupPermission* TribeGroupPermission, class UObject** OnObject);
	bool AllowedToSpectateAllTeams();
	class FString AdminCheat();
	bool AddFloatingDamageText(float* DamageAmount, class AActor* DamageCauser, class AShooterPlayerController** EventInstigator);
	TArray<struct FCustomTrackedActorInfo> AddCustomActorTrackListEntries_Combined(TArray<struct FTrackedActorPlusInfoStruct>* InfoList, bool* IsInfoFresh, bool* IsPlayer, bool* ForcePOIVisible);
};

// 0x30 (0xB8 - 0x88)
// Class ShooterGame.ShooterCheatManager
class UShooterCheatManager : public UCheatManager
{
public:
	TArray<TSoftClassPtr<class UCheatManagerExtension>> CheatManagerExtentions;                            // 0x88(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4898[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsRCONCheatManager;                               // 0xA0(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4899[0x17];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterCheatManager* GetDefaultObj();

	void WhatIsMyTarget();
	void VisualizeWorldGeo();
	void VisualizeWorld();
	int32 VisualizeClass();
	void VerifyTransferInventory();
	class FString UnlockEngram();
	class FString UnlockEmote();
	void UnlockAllExplorerNotes();
	class FString UnlockAchievement();
	void UnbanPlayer(class FString* PlayerSteamName);
	void TTC(class FString* DinoID);
	int32 TTAL(class FString* ActorName);
	void TribeStructureAudit(int32* TribeTeamID);
	void TribeMessage(int32* TribeTeamID, class FString* Message);
	void TribeDinoAudit(int32* TribeTeamID);
	class FString TransferImprints();
	class FString TPName();
	float TPCoords(float* Lon);
	void TP(class FString* LocationName);
	void ToggleVolumetricDispatcherDebug();
	void ToggleVolumetricDispatcher();
	void ToggleTracker();
	void ToggleSimulateUnderMemoryPressure();
	void ToggleNavSystem();
	void ToggleLowGravSpin();
	void ToggleLocation();
	void ToggleHud();
	void ToggleGun();
	void ToggleFreezeStatusValues();
	void ToggleFoliageInteraction();
	void ToggleFluidInteraction();
	void ToggleDamageNumbers();
	void ToggleDamageLogging();
	void ToggleClawStepping();
	void TOD(const class FString& TimeString);
	void TimeOfDay(const class FString& TimeString);
	void TestSteamRefreshItems();
	class FString TeleportToPlayerName();
	int64 TeleportToPlayer();
	int32 TeleportToNearestDino();
	void TeleportToCreature(class FString* DinoID);
	void TeleportToActorLocation(class FString* ActorName);
	int32 TeleportToActiveHorde();
	class FString TeleportPlayerNameToMe();
	int64 TeleportPlayerIDToMe();
	void TeleportCreatureToMe(class FString* DinoID);
	void TCTM(class FString* DinoID);
	float TameAOE(float Radius);
	void TakeTribe(int32* TribeTeamID);
	void TakeAllStructure();
	void TakeAllDino();
	void TacoBell();
	class FString SummonTamed();
	void Suicide();
	void StopLoggingSavedMoves();
	void StartSaveBackup();
	bool StartNearestHorde(int32* DifficultyLevel);
	void StartMissionWithMetaData(class FName* MissionTag);
	void StartMission(class FName* MissionTag);
	void StartLoggingSavedMoves();
	void SpoilItem();
	float SPIG();
	float SPI();
	void SpectateMyTarget();
	float SpawnSetupDino(float* ZOffset);
	float SpawnExactDino(class FString* ImprinterName, const class FString& Colors, int64* DinoID, int64 Exp, float* ZOffset);
	void SpawnEgg();
	int32 SpawnDino(float* ZOffset);
	float SpawnActorTamed(float* ZOffset);
	int32 SpawnActorSpreadTamed(float* ZOffset, float SpreadAmount);
	int32 SpawnActorSpread(float* ZOffset, float SpreadAmount);
	float SpawnActorBaby(float* ZOffset);
	float SpawnActor(float* ZOffset);
	void SimulateMemoryPressureRestart();
	int32 ShowTutorial(bool* bForceDisplay);
	void ShowMessageOfTheDay();
	void ShowInGameMenu();
	class FString ShowHibernatingDino();
	void ShowDebugPingLifetime(bool* bEnable);
	void ShowCheatMenu();
	void ShowAvailableMissionTags();
	void ShowActiveMissions();
	bool SetVideoReplayEnabled();
	void SetUnstasisRadius(float* Value);
	void SetTimeOfDay(const class FString& TimeString);
	float SetTargetPlayerColorVal();
	float SetTargetPlayerBodyVal();
	int32 SetTargetDinoColor();
	float SetTamingEffectivenessModifier();
	class FName SetStatOnTarget(float* Value);
	bool SetSleepingAOE(float Radius);
	void SetShowAllPlayers(bool* bEnable);
	float SetPlayerPos();
	int16 SetPlayerLevel();
	int32 SetPerfCheck();
	int32 SetNumReplaySecondsToStore();
	void SetNetworkTime(float NewTime);
	bool SetMyTargetSleeping();
	class FString SetMessageOfTheDay(class FString* Message);
	float SetMaterialParamaterCollectionByNameAndFloatValue();
	void SetInstantHarvest(bool* bEnable);
	bool SetInfiniteStats();
	float SetImprintQuality();
	class FString SetImprintedPlayer();
	int32 SetHeadHairstyle();
	float SetHeadHairPercent();
	int32 SetGraphicsQuality();
	void SetGodMode(bool* bEnable);
	bool SetGlobalPause();
	int32 SetFacialHairstyle();
	float SetFacialHairPercent();
	void SetDifficultyValue(float NewTime);
	float SetDebugMeleeAttacks();
	void SetDayCycleSpeed(float Speed);
	void SetDay(int32* Day);
	int32 SetChatLogMaxAgeInDays();
	class FName SetCameraProfile();
	float SetBabyAgeAOE(float Radius);
	float SetBabyAge();
	void SetAllAvailableMissionsComplete();
	int32 SetActiveMissionDebugFlags();
	class FString ServerChatToPlayer(class FString* MessageText);
	void ServerChatTo(const class FString& SteamID, class FString* MessageText);
	void ServerChat(class FString* MessageText);
	void SendDataDogMetric(class FString* Message);
	bool SDFRide();
	bool SDFBaby();
	bool SDF(bool* bIsTamed);
	class FString ScriptCommand();
	void Scatter();
	void SaveWorldDisableTransfer();
	void SaveWorld();
	void SAP();
	int32 RunDinoTest(float* AbilityDelay);
	void RespawnPlayer(bool KeepGender, int32 OptionalDefaultPreset);
	void ResetLiveTuningOverloads();
	void ResetLeaderboards();
	void RequestUpdateActiveMissionTags();
	void RequestAimedStructurePlaceTime();
	void RequestAimedDinoTamedTime();
	void ReportTrackedChangelistMgrs();
	void ReportSpawnManagers();
	void ReportLeastSpawnManagers();
	void RepairArea(float Radius);
	void RenameTribeID(int32 TribeID, class FString* NewName);
	void RenameTribe(class FString* TribeName, class FString* NewName);
	int32 RenamePlayerId(class FString* NewName);
	class FString RenamePlayer(class FString* NewName);
	class FString RemoveWorldBuff();
	void RemoveTribeAdmin();
	class FName RemoveDinoTest();
	void RemoveAllWorldBuffs();
	void RegrowFoliage(float Radius);
	void RefillStats();
	void RedownloadModsOnServerRestart();
	void ReassertColorization();
	int32 RainMonkeys(float SpreadAmount, float* ZOffset);
	int32 RainDinos(float SpreadAmount, float* ZOffset);
	int32 RainDanger(float SpreadAmount, float* ZOffset);
	int32 RainCritters(float SpreadAmount, float* ZOffset);
	class FString Psc();
	void PrintDinoStats();
	void PrintActorLocation(class FString* ActorName);
	void PlayerCommand(const class FString& TheCommand);
	void Pgosweep();
	void PerformGCAndCleanupActors();
	class FString OpenMap();
	void OnToggleInGameMenu();
	void OneHPTarget();
	void OneHPAOE(class FName* Category, float Radius, int32 TribeID);
	void OneHP();
	void NextPerfCheck();
	float MoveTargetTo();
	class FName Mission(float* Value);
	int32 MaxAscend();
	void MakeTribeFounder();
	void MakeTribeAdmin();
	int16 LvlUp();
	void LogStackTrace();
	void LMA();
	void ListUploadedSurvivorsForTargetPlayer();
	class FString ListUploadedSurvivorsForPlayerWithClusterID();
	class FString ListUploadedSurvivorsForPlayer();
	void ListPlayers();
	void ListMyTargetBuffs();
	void ListMyBuffs();
	void ListDinos();
	void ListAllPlayerBuffs();
	void ListAllItems();
	void ListActiveHordeEvents();
	int32 LevelUpTarget();
	int32 LevelUpAOE(float Radius);
	int32 LevelUp();
	void LessThan(int32* TribeTeamID, int32* Connections, bool* IncludeContainers);
	void LeaveMission();
	void LeaveMeAlone();
	void KillSplitscreenPlayer();
	int64 KillPlayer();
	bool KillAOETribe(class FName* Category, float Radius, int32 TribeID);
	void KillAOE(class FName* Category, float Radius);
	void Kill();
	void KickPlayer(class FString* PlayerSteamName);
	int64 JoinTribe(int32* TribeTeamID);
	float IsUndermesh();
	bool InteractWithFluid(float Radius, float Speed);
	void InfiniteWeight();
	void InfiniteStats();
	bool InfiniteGod();
	int32 HurtMyTarget();
	int32 HurtMyAOE(float Radius);
	int32 HiWarp();
	int32 HideTutorial();
	class FString HibernationReport();
	void HatchEgg();
	void GTIPL(int32 TribeID);
	void GTIDPL(int32 TribeID);
	void GoToFirstMutagenDrop();
	int32 GMSummon();
	int32 GMComp();
	void GMBuff();
	void GlobalObjectCount();
	class FName GiveWeaponSet();
	void GiveToMeAOE(float Radius);
	void GiveToMe();
	class FName GiveTekEngramsTo();
	void GiveResources();
	int32 GiveMaxLevel();
	bool GiveItemToPlayer();
	void GiveItemSkins(const class FString& EquipmentType);
	class FName GiveItemSet();
	bool GiveItemNumToPlayer(int32 MasterIndexNum);
	bool GiveItemNum(int32 MasterIndexNum);
	bool GiveItem();
	void GiveInfiniteStatsToTarget();
	float GiveExpToTarget(bool* FromTribeShare, bool* bPreventSharingWithTribe);
	float GiveExpToPlayer(bool* FromTribeShare, bool* bPreventSharingWithTribe);
	int32 GiveExplorerNote();
	void GiveEngramsTekOnly();
	void GiveEngrams();
	int32 GiveDinoSet();
	void GiveCreativeModeToTarget();
	int64 GiveCreativeModeToPlayer();
	void GiveCreativeMode();
	void GiveBossItems();
	class FName GiveBossEngrams(int8* Difficulty);
	class FName GiveArmorSet();
	void GiveAllStructure();
	void GiveAllExplorerNotes();
	class FName GFID();
	bool GFI();
	void GetTribeIdPlayerList(int32 TribeID);
	void GetTribe(int32 TribeID);
	int32 GetSteamIDForPlayerID();
	void GetSpoiledEgg(int32* NumMutationsToAdd);
	void GetPlayerIDForSteamID(int32 SteamID);
	void GetNearestAlliedPlayerOrDino();
	void GetGameLog();
	void GetEgg(int32* NumMutationsToAdd);
	void GetChat();
	void GetAllTamesNumber();
	void GetAllStructuresNumber();
	void GetAllNumbers();
	class FString GetAllMyTarget();
	void GetAllItemsNumber();
	void GCMT();
	int64 GCMP();
	void GCM();
	void GameCommand(const class FString& TheCommand);
	bool FSM();
	void ForceUpdateDynamicConfig();
	class FString ForceTribes(const class FString& NewTribeName);
	void ForceTameAOE(float Radius);
	void ForceTame();
	void ForceStartMission(class FName* MissionTag);
	bool ForceStartMatch();
	bool ForceReturnIsXboxOneBuildOnPC();
	bool ForceReturnIsPS4BuildOnPC();
	void ForcePoop();
	int64 ForcePlayerToJoinTribeId(int32* TribeTeamID);
	int64 ForcePlayerToJoinTribe(class FString* TribeName);
	int64 ForcePlayerToJoinTargetTribe();
	void ForceMutagenSpawn();
	void ForceJoinTribe();
	class FName ForceGiveBuff(bool* bEnable);
	bool ForceEnableMeshCheckingOnMe();
	class FString ForceCompleteActiveMission();
	void ForceCheckInMesh();
	void FindMutagenDrops();
	bool FEMCOM();
	void EnemyInVisible(bool* Invisible);
	void EnableSpectator(bool* bDestroyPlayerCharacter);
	class FString EnableCheats();
	void EnableAllMating();
	void DupeLastItem();
	void DumpFallbackSeeds();
	void DumpDinoStats();
	void DumpConfig();
	void DumpAssetProperties(const class FString& Asset);
	float DrawDebugBoxForVolumes(int32* VolumeClassIndex, bool* bDebugAllVolumeClasses, bool* bDrawSolidBox);
	float DrainWater();
	float DrainFood();
	void DragMyTarget();
	void DoTestingThing();
	void DoTame();
	void DoStall(float* StallSeconds);
	void DoRestartLevel();
	void DoHang();
	void DoExit();
	void DoDamagePct(float* PercentDamage, float* SpeedOfImpact, float* Impulse);
	void DisallowPlayerToJoinNoCheck(const class FString& SteamID);
	void DisableSpectator();
	void DisableAllMating();
	class FName DinoSet(float* Value);
	class FName Dino();
	void DetachChar();
	void DestroyWildDinos();
	bool DestroyWildDinoClasses();
	void DestroyTribeStructuresLessThan(int32* TribeTeamID, int32* Connections, bool* IncludeContainers, bool* IncludeLargeGates);
	void DestroyTribeStructures();
	void DestroyTribePlayers();
	void DestroyTribeIdStructures(int32* TribeTeamID);
	void DestroyTribeIdPlayers(int32* TribeTeamID);
	void DestroyTribeIdDinos(int32* TribeTeamID);
	void DestroyTribeId(int32* TribeTeamID);
	void DestroyTribeDinos();
	void DestroyStructures();
	void DestroyMyTarget4();
	void DestroyMyTarget3();
	void DestroyMyTarget2();
	void DestroyMyTarget();
	void DestroyMyPawn();
	void DestroyFoliage(float Radius, bool* PutFoliageResourcesInInventory);
	void DestroyAOE(class FName* Category, float Radius);
	void DestroyAllTames();
	void DestroyAllEnemies();
	bool DestroyActors();
	class FName DefeatBoss(int8* Difficulty);
	int32 DefeatAllBosses();
	void DeepPockets();
	void DebugToggleHLNAMonologue();
	void DebugPathsForTarget();
	void DebugMyTarget();
	void DebugMyDinoTarget();
	void DebugCompanionReactions();
	void DebugCompanionAsyncLoadedFiles();
	void DebugCheckDinoPawnsOctree();
	void DebugAllowVRMissionTeleport();
	void DeactivateMission();
	float DCMSet();
	void CryoMyTarget();
	void CryoAOE(float Radius);
	void Cryo(class FString* DinoID);
	void CompleteMission();
	void CloneDino();
	void ClearTutorials();
	int32 ClearPlayerInventory(bool* bClearInventory, bool* bClearSlotItems, bool* bClearEquippedItems);
	void ClearMyBuffs();
	void ClearMessageOfTheDay();
	void ClearDinoTest();
	void ClearCryoSickness();
	void CheatAction(const class FString& ActionName);
	void ChatLogAppend(class FString* MessageText);
	void CamZoomOut();
	void CamZoomIn();
	void Broadcast(class FString* MessageText);
	bool BPCheckDenySpawningInThisMap();
	class FString BanPlayer(class FString* PlayerSteamName);
	class FString ArkChangeUIPlatform();
	void AreAllSublevelsForDataLayerLoaded(class FString* DataLayerName);
	void AllowPlayerToJoinNoCheck(const class FString& SteamID);
	class FString AddWorldBuff();
	int32 AddTokens();
	int32 AddMutations(int32* HowMany);
	void AddItemToAllClustersInventory(const class FString& UserId, int32 MasterIndexNum);
	float AddHexagons();
	float AddExperienceToTarget(bool* FromTribeShare, bool* bPreventSharingWithTribe);
	float AddExperience(bool* FromTribeShare, bool* bPreventSharingWithTribe);
	void AddEquipmentDurability(float* Durability);
	int32 AddDinoTest(float* AbilityDelay);
	float AddChibiExpToPlayer();
	float AddChibiExp();
	class FName AddBuffPreventTagToSelf();
};

// 0x100 (0x168 - 0x68)
// Class ShooterGame.ShooterDamageType
class UShooterDamageType : public UPrimalDamageType
{
public:
	class UClass*                                HitTargetableActorImpactEffects;                   // 0x68(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DamageTorpidityIncreaseMultiplier;                 // 0x70(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_48B4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FCanvasIcon                           KillIcon;                                          // 0x78(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference)
	class UForceFeedbackEffect*                  HitForceFeedback;                                  // 0x90(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UForceFeedbackEffect*                  KilledForceFeedback;                               // 0x98(0x8)(ExportObject, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDamagePrimalCharacterStatusValueModifier> DamageCharacterStatusValueModifiers;               // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsMeleeDamage : 1;                                // Mask: 0x1, PropSize: 0x10xB0(0x1)(Edit, BlueprintVisible, ExportObject, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontActuallyDealDamage : 1;                       // Mask: 0x2, PropSize: 0x10xB0(0x1)(Net, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventMeleeHarvesting : 1;                       // Mask: 0x4, PropSize: 0x10xB0(0x1)(Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHarvestDamageWithNoResourceGrab : 1;              // Mask: 0x8, PropSize: 0x10xB0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventMomentumWhenFalling : 1;                   // Mask: 0x10, PropSize: 0x10xB0(0x1)(Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyGiveBuffToPlayerOrTamed : 1;                  // Mask: 0x20, PropSize: 0x10xB0(0x1)(Edit, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDamageProjectiles : 1;                            // Mask: 0x40, PropSize: 0x10xB0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyGiveBuffToPlayer : 1;                         // Mask: 0x80, PropSize: 0x10xB0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyGiveBuffToDino : 1;                           // Mask: 0x1, PropSize: 0x10xB1(0x1)(BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasRiderIgnoreDamage : 1;                         // Mask: 0x2, PropSize: 0x10xB1(0x1)(BlueprintVisible, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowShieldBlockAllPointDamage : 1;               // Mask: 0x4, PropSize: 0x10xB1(0x1)(Edit, ConstParm, BlueprintReadOnly, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDefaultTargetHurtEffect : 1;               // Mask: 0x8, PropSize: 0x10xB1(0x1)(ConstParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDamageInstigator : 1;                             // Mask: 0x10, PropSize: 0x10xB1(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bApplyMomentumToBigPawns : 1;                      // Mask: 0x20, PropSize: 0x10xB1(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoDragDeadDino : 1;                             // Mask: 0x40, PropSize: 0x10xB1(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bImpulseResetsDinoVelocity : 1;                    // Mask: 0x80, PropSize: 0x10xB1(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventHitPawnEffectsFromLocalInstigator : 1;     // Mask: 0x1, PropSize: 0x10xB2(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRiderIgnoreDamage : 1;                            // Mask: 0x2, PropSize: 0x10xB2(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNoFriendlyDamage : 1;                             // Mask: 0x4, PropSize: 0x10xB2(0x1)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsTurretDamage : 1;                               // Mask: 0x8, PropSize: 0x10xB2(0x1)(Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceGeneralArmorUsage : 1;                       // Mask: 0x10, PropSize: 0x10xB2(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDamageImpulseOnly : 1;                            // Mask: 0x20, PropSize: 0x10xB2(0x1)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreDinoFlyers : 1;                             // Mask: 0x40, PropSize: 0x10xB2(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustDamage : 1;                            // Mask: 0x80, PropSize: 0x10xB2(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustAggro : 1;                             // Mask: 0x1, PropSize: 0x10xB3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustHarvestingDamage : 1;                  // Mask: 0x2, PropSize: 0x10xB3(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisplayHitMarker : 1;                             // Mask: 0x4, PropSize: 0x10xB3(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHitMarkerPlaySound : 1;                           // Mask: 0x8, PropSize: 0x10xB3(0x1)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDinoDamageCauserAllowSameTeam : 1;                // Mask: 0x10, PropSize: 0x10xB3(0x1)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyApplyDamageTorpidityToPlayersAndTames : 1;    // Mask: 0x20, PropSize: 0x10xB3(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDinoOnDinoDamageCauserAllowSameTeam : 1;          // Mask: 0x40, PropSize: 0x10xB3(0x1)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3D7 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        DamageInstigatorPercentage;                        // 0xB4(0x4)(ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceRespawnCooldown : 1;                         // Mask: 0x1, PropSize: 0x10xB8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowDamageCorpses : 1;                           // Mask: 0x2, PropSize: 0x10xB8(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowFriendlyFire : 1;                       // Mask: 0x4, PropSize: 0x10xB8(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowPvEDamage : 1;                          // Mask: 0x8, PropSize: 0x10xB8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyOnKill : 1;                                // Mask: 0x10, PropSize: 0x10xB8(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDinoKillVictimItemCollection : 1;          // Mask: 0x20, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsInstantDamage : 1;                              // Mask: 0x40, PropSize: 0x10xB8(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventHurtAnim : 1;                              // Mask: 0x80, PropSize: 0x10xB8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventHurtSoundAndCameraShake : 1;               // Mask: 0x1, PropSize: 0x10xB9(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3D8 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_48B5[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        UseSpecialDamageInterval;                          // 0xBC(0x4)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WildDinoForcedAggroDuration;                       // 0xC0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_48B6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class APrimalBuff>             BuffToGiveVictimCharacter;                         // 0xC8(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MassScaleDamageImpulseExponent;                    // 0xF8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_48B7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class AActor>>          DamageIgnoreActorClasses;                          // 0x100(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AActor>>          DamageOnlyActorClasses;                            // 0x110(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FOverrideDamageHarvestingEntry> OverrideDamageHarvestEntries;                      // 0x120(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                InvalidHarvestOverrideDamageType;                  // 0x130(0x8)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FTargetClassDamageScaler>      TargetClassDamageScalers;                          // 0x138(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        OverrideDamageForResourceHarvestingItems;          // 0x148(0x10)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        OverrideDamageForResourceHarvestingDamageTypes;    // 0x158(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UShooterDamageType* GetDefaultObj();

	class UClass* OverrideBuffToGiveVictimCharacter(class APrimalCharacter* Victim, float IncomingDamage, struct FDamageEvent* TheDamageEvent, class AController** EventInstigator, class AActor* DamageCauser);
	float BPAdjustHarvestingDamage(class AActor* Victim, float IncomingDamage, struct FDamageEvent* TheDamageEvent, class AController** EventInstigator, class AActor* DamageCauser);
	float BPAdjustDamage(class AActor* Victim, float IncomingDamage, struct FDamageEvent* TheDamageEvent, class AController** EventInstigator, class AActor* DamageCauser);
	float BPAdjustAggro(float IncomingDamage, struct FDamageEvent* TheDamageEvent, class AController** EventInstigator, class AActor* DamageCauser);
};

// 0x48 (0x1070 - 0x1028)
// Class ShooterGame.ShooterEngine
class UShooterEngine : public UGameEngine
{
public:
	uint8                                        Pad_48B8[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	class UPrimalRichTextBlock*                  StartupScreenTextBlock;                            // 0x1048(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_48B9[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterEngine* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class ShooterGame.MusicDataAsset
class UMusicDataAsset : public UDataAsset
{
public:
	TMap<class FName, TSoftObjectPtr<class USoundWave>> NameToSoundWaveMap;                                // 0x30(0x50)(ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMusicDataAsset* GetDefaultObj();

};

// 0x88 (0xB0 - 0x28)
// Class ShooterGame.MusicPlayer
class UMusicPlayer : public UObject
{
public:
	TMap<class FName, struct FAudioComponentWrapper> PlayingMusicMap;                                   // 0x28(0x50)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMusicDataAsset*                       MusicDataAsset;                                    // 0x78(0x8)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig)
	uint8                                        Pad_48BA[0x30];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMusicPlayer* GetDefaultObj();

};

// 0x790 (0x950 - 0x1C0)
// Class ShooterGame.ShooterGameInstance
class UShooterGameInstance : public UPrimalGameInstance
{
public:
	uint8                                        Pad_48C1[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnAsyncAssetLoaded;                                // 0x218(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_48C2[0x150];                                   // Fixing Size After Last Property  > TateDumper <
	class UOpenColorIODisplayExtensionWrapper*   OpenColorIOObject;                                 // 0x378(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FAssetPathObjectPair>          AsyncLoadededAssetReferences;                      // 0x380(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UWorldModifiersContainer*              WorldModifiersContainer;                           // 0x390(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnInstance, GlobalConfig)
	uint8                                        Pad_48C3[0xA8];                                    // Fixing Size After Last Property  > TateDumper <
	class UMusicPlayer*                          MusicPlayer;                                       // 0x440(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig)
	class FString                                WelcomeScreenMap;                                  // 0x448(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                MainMenuMap;                                       // 0x458(0x10)(Edit, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference)
	int32                                        AutoPgoSweepInterval;                              // 0x468(0x4)(ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_48C4[0x204];                                   // Fixing Size After Last Property  > TateDumper <
	TArray<class UObject*>                       ObjectsPendingTimeShift;                           // 0x670(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_48C5[0x1E4];                                   // Fixing Size After Last Property  > TateDumper <
	class FName                                  ActiveEvent;                                       // 0x864(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48C6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                WorldModifierConfigOverride;                       // 0x870(0x10)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_48C7[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_3D9 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHasPlayedMainMenuIntroOnce : 1;                   // Mask: 0x2, PropSize: 0x10x8D0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_48C8[0x7F];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterGameInstance* GetDefaultObj();

	class FString StartNonDedicatedSession();
	bool Server_IsPlayerBlocked();
	void LoadTheGameMedia();
	TArray<int32> GetTribeDataMemberIds(struct FTribeData* Data);
	class FString FinishLoadMap();
	void EnableOpenColorIOObject(bool* bEnable);
	void DisplayGlobalMainMenuNotification();
	bool Client_IsPlayerBlocked(int32* LinkedID);
	bool CanUseUserGeneratedContent();
	bool AsyncUnloadAssetFromPath();
	bool AsyncUnloadAssetFromObject();
	void AsyncLoadAssetFromPath(class FString* AssetPath);
};

// 0x3C0 (0x8A0 - 0x4E0)
// Class ShooterGame.ShooterGameSession
class AShooterGameSession : public AGameSession
{
public:
	uint8                                        Pad_48CA[0x3C0];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterGameSession* GetDefaultObj();

	bool OnRecreateSessionListenServerDestroy();
};

// 0x6A8 (0x7F0 - 0x148)
// Class ShooterGame.ShooterGameUserSettings
class UShooterGameUserSettings : public UGameUserSettings
{
public:
	int32                                        AdvancedGraphicsQuality;                           // 0x148(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        MasterAudioVolume;                                 // 0x14C(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        MusicAudioVolume;                                  // 0x150(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        SFXAudioVolume;                                    // 0x154(0x4)(Edit, ConstParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        VoiceAudioVolume;                                  // 0x158(0x4)(Edit, ConstParm, ExportObject, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        SoundUIAudioVolume;                                // 0x15C(0x4)(BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        CharacterAudioVolume;                              // 0x160(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_48D3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        ConsoleCommandHistory;                             // 0x168(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StructureTooltipMaxSpeedMultiply;                  // 0x178(0x4)(Edit, ExportObject, Net, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        UIScaling;                                         // 0x17C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        UIQuickbarScaling;                                 // 0x180(0x4)(EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        CameraShakeScale;                                  // 0x184(0x4)(ConstParm, ExportObject, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bFirstPersonRiding;                                // 0x188(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bThirdPersonPlayer;                                // 0x189(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bShowStatusNotificationMessages;                   // 0x18A(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_48D5[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TrueSkyQuality;                                    // 0x18C(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        FOVMultiplier;                                     // 0x190(0x4)(Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        GroundClutterDensity;                              // 0x194(0x4)(ExportObject, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bFilmGrain;                                        // 0x198(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bMotionBlur;                                       // 0x199(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bUseGamepadSpeaker;                                // 0x19A(0x1)(Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bUseDFAO;                                          // 0x19B(0x1)(ConstParm, ExportObject, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bUseSSAO;                                          // 0x19C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bShowChatBox;                                      // 0x19D(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bCameraViewBob;                                    // 0x19E(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bInvertLookY;                                      // 0x19F(0x1)(Edit, ConstParm, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bFloatingNames;                                    // 0x1A0(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bChatBubbles;                                      // 0x1A1(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bHideServerInfo;                                   // 0x1A2(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bJoinNotifications;                                // 0x1A3(0x1)(ConstParm, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bDisableNameYourTamePopup;                         // 0x1A4(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         MinimalFloatingNameSetting;                        // 0x1A5(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bCraftablesShowAllItems;                           // 0x1A6(0x1)(ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bLocalInventoryItemsShowAllItems;                  // 0x1A7(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bLocalInventoryCraftingShowAllItems;               // 0x1A8(0x1)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bRemoteInventoryItemsShowAllItems;                 // 0x1A9(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bRemoteInventoryCraftingShowAllItems;              // 0x1AA(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bRemoteInventoryShowEngrams;                       // 0x1AB(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bEnableLowLightEnhancement;                        // 0x1AC(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bEnableFluidInteraction;                           // 0x1AD(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bDisableHLOD;                                      // 0x1AE(0x1)(ExportObject, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bRequiresRestart;                                  // 0x1AF(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LookLeftRightSensitivity;                          // 0x1B0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        LookUpDownSensitivity;                             // 0x1B4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        TPVCameraHorizontalOffsetFactor;                   // 0x1B8(0x4)(ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        GraphicsQuality;                                   // 0x1BC(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        ActiveLingeringWorldTiles;                         // 0x1C0(0x4)(ConstParm, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        ClientNetQuality;                                  // 0x1C4(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        TheGammaCorrection;                                // 0x1C8(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        LastServerSearchType;                              // 0x1CC(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        LastServerSort;                                    // 0x1D0(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        LastPVESearchType;                                 // 0x1D4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        LastDLCTypeSearchType;                             // 0x1D8(0x4)(ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         LastServerSortAsc;                                 // 0x1DC(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         LastAutoFavorite;                                  // 0x1DD(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         ShowPlayerServers;                                 // 0x1DE(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         LastServerSearchHideFull;                          // 0x1DF(0x1)(Edit, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         LastServerSearchProtected;                         // 0x1E0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         LastPlatformSpecificServerSearch;                  // 0x1E1(0x1)(BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         HideItemTextOverlay;                               // 0x1E2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bForceShowItemNames;                               // 0x1E3(0x1)(Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bDistanceFieldShadowing;                           // 0x1E4(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bDisableShadows;                                   // 0x1E5(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_48DA[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LODScalar;                                         // 0x1E8(0x4)(Edit, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bToggleToTalk;                                     // 0x1EC(0x1)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         HighQualityMaterials;                              // 0x1ED(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         HighQualitySurfaces;                               // 0x1EE(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bTemperatureF;                                     // 0x1EF(0x1)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bDisableTorporEffect;                              // 0x1F0(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bChatShowSteamName;                                // 0x1F1(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bChatShowTribeName;                                // 0x1F2(0x1)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bReverseTribeLogOrder;                             // 0x1F3(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        EmoteKeyBind1;                                     // 0x1F4(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        EmoteKeyBind2;                                     // 0x1F8(0x4)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bNoBloodEffects;                                   // 0x1FC(0x1)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bLowQualityVFX;                                    // 0x1FD(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bSpectatorManualFloatingNames;                     // 0x1FE(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bSuppressAdminIcon;                                // 0x1FF(0x1)(Edit, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bUseSimpleDistanceMovement;                        // 0x200(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bHasSavedGame;                                     // 0x201(0x1)(Edit, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bDisableMeleeCameraSwingAnims;                     // 0x202(0x1)(Edit, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bPreventInventoryOpeningSounds;                    // 0x203(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bPreventBiomeWalls;                                // 0x204(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bPreventHitMarkers;                                // 0x205(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bPreventCrosshair;                                 // 0x206(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bPreventColorizedItemNames;                        // 0x207(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bHighQualityLODs;                                  // 0x208(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bExtraLevelStreamingDistance;                      // 0x209(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bEnableColorGrading;                               // 0x20A(0x1)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_48E0[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        VSyncMode;                                         // 0x20C(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        DOFSettingInterpTime;                              // 0x210(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_48E1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDepthOfFieldSetting>          DOFSettings;                                       // 0x218(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        LastJoinedSessionPerCategory;                      // 0x228(0x10)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        LastSessionCategoryJoined;                         // 0x238(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        PendingLastSessionCategoryJoined;                  // 0x23C(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableMenuTransitions;                           // 0x240(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bEnableInventoryItemTooltips;                      // 0x241(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bRemoteInventoryShowCraftables;                    // 0x242(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bNoTooltipDelay;                                   // 0x243(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        LocalItemSortType;                                 // 0x244(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        LocalCraftingSortType;                             // 0x248(0x4)(Edit, BlueprintVisible, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        RemoteItemSortType;                                // 0x24C(0x4)(Edit, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        RemoteCraftingSortType;                            // 0x250(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_48E6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        VersionMetaTag;                                    // 0x258(0x4)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         ShowExplorerNoteSubtitles;                         // 0x25C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         DisableMenuMusic;                                  // 0x25D(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         DisableDefaultCharacterItems;                      // 0x25E(0x1)(ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         DisableLoadScreenMusic;                            // 0x25F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bRequestDefaultCharacterItemsOnce;                 // 0x260(0x1)(Edit, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bHasSeenGen2Intro;                                 // 0x261(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_48EA[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TMap<int32, bool>                            CinematicForNoteShouldReset;                       // 0x268(0x50)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bHasSetupDifficultySP;                             // 0x2B8(0x1)(BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bHasSetupVisualSettings;                           // 0x2B9(0x1)(ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_48EB[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TMap<class FString, struct FDateTime>        AgreedToTerms;                                     // 0x2C0(0x50)(Edit, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_48EC[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bHasRunAutoSettings;                               // 0x311(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bHideFloatingPlayerNames;                          // 0x312(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bHideGamepadItemSelectionModifier;                 // 0x313(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bToggleExtendedHUDInfo;                            // 0x314(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         PlayActionWheelClickSound;                         // 0x315(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         PlayHUDRolloverSound;                              // 0x316(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_48ED[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CompanionReactionVerbosity;                        // 0x318(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         EnableEnvironmentalReactions;                      // 0x31C(0x1)(ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         EnableRespawnReactions;                            // 0x31D(0x1)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         EnableDeathReactions;                              // 0x31E(0x1)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         EnableSayHelloReactions;                           // 0x31F(0x1)(BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         EnableEmoteReactions;                              // 0x320(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         EnableMovementSounds;                              // 0x321(0x1)(ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         DisableSubtitles;                                  // 0x322(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bEnableASACamera;                                  // 0x323(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         ConsoleAccess;                                     // 0x324(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_48EE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CompanionSubtitleVerbosityLevel;                   // 0x328(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         CompanionIsHiddenState;                            // 0x32C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_48EF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxAscensionLevel;                                 // 0x330(0x4)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bHostSessionHasBeenOpened;                         // 0x334(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bForceTPVCameraOffset;                             // 0x335(0x1)(ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bDisableTPVCameraInterpolation;                    // 0x336(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bEnableHDROutput;                                  // 0x337(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        HDRDisplayMinLuminance;                            // 0x338(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        HDRDisplayMidLuminance;                            // 0x33C(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        HDRDisplayMaxLuminance;                            // 0x340(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        FoliageInteractionDistance;                        // 0x344(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        FoliageInteractionDistanceLimit;                   // 0x348(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        FoliageInteractionQuantityLimit;                   // 0x34C(0x4)(ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        HDRDisplayMinLuminanceMinValue;                    // 0x350(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HDRDisplayMidLuminanceMinValue;                    // 0x354(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HDRDisplayMaxLuminanceMinValue;                    // 0x358(0x4)(Edit, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HDRDisplayMinLuminanceMaxValue;                    // 0x35C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HDRDisplayMidLuminanceMaxValue;                    // 0x360(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HDRDisplayMaxLuminanceMaxValue;                    // 0x364(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GUI3DWidgetQuality;                                // 0x368(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFPVClimbingGear;                                  // 0x36C(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bFPVGlidingGear;                                   // 0x36D(0x1)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bHasInitializedScreenPercentage;                   // 0x36E(0x1)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_48F0[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	TMap<class FName, float>                     CameraZoomPerDinoNameTag;                          // 0x370(0x50)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	TMap<class FName, float>                     CameraHeightPerDinoNameTag;                        // 0x3C0(0x50)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	TMap<class FName, class FString>             PhotomodePresets_Camera;                           // 0x410(0x50)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	TMap<class FName, class FString>             PhotomodePresets_Movement;                         // 0x460(0x50)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	TMap<class FName, class FString>             PhotomodePresets_Splines;                          // 0x4B0(0x50)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	TMap<class FName, class FString>             PhotomodePresets_PPs;                              // 0x500(0x50)(Edit, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	TMap<class FName, class FString>             PhotomodePresets_Targeting;                        // 0x550(0x50)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	TMap<class FName, class FString>             PhotomodeLastUsedSettings;                         // 0x5A0(0x50)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	TArray<struct FMinimapMark>                  SavedMinimapMarks;                                 // 0x5F0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxLastDeathMark;                                  // 0x600(0x4)(ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bSaveLastDeathMark;                                // 0x604(0x1)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bShowPingsOnMap;                                   // 0x605(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bShowDinosOnMap;                                   // 0x606(0x1)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bShowWaypointsOnMap;                               // 0x607(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bShowPlayersOnMap;                                 // 0x608(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bShowBedsOnMap;                                    // 0x609(0x1)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_48F1[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AimAssistStrengthMultiplier;                       // 0x60C(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bForceShowRadialWheelTexts;                        // 0x610(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bHideStructurePlacementCrosshair;                  // 0x611(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_48F2[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SavedMainMapZoom;                                  // 0x614(0x4)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        SavedOverlayMapZoom;                               // 0x618(0x4)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bMinimalUI;                                        // 0x61C(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	enum class ETooltipMode                      FloatingTooltipStructureMode;                      // 0x61D(0x1)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	enum class ETooltipMode                      FloatingTooltipDinoMode;                           // 0x61E(0x1)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	enum class ETooltipMode                      FloatingTooltipDroppedItemsMode;                   // 0x61F(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	enum class ETooltipMode                      FloatingTooltipPlayerMode;                         // 0x620(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	enum class ENotificationMode                 TopNotificationMode;                               // 0x621(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	enum class ENotificationMode                 ItemNotificationMode;                              // 0x622(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bMinimapOverlayUseLowOpacity;                      // 0x623(0x1)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        FilterTypeInventoryLocal;                          // 0x624(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        FilterTypeInventoryRemote;                         // 0x628(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        FilterTypeCustomCosmeticItems;                     // 0x62C(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	int32                                        FilterTypeCustomCosmeticSkins;                     // 0x630(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	enum class EAimAssistType                    bUseGamepadAimAssist;                              // 0x634(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_48F3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Gamma1;                                            // 0x638(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        Gamma2;                                            // 0x63C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bDisableBloom;                                     // 0x640(0x1)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bDisableLightShafts;                               // 0x641(0x1)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bUseLowQualityLevelStreaming;                      // 0x642(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bUseDistanceFieldAmbientOcclusion;                 // 0x643(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bPreventItemCraftingSounds;                        // 0x644(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bHighQualityAnisotropicFiltering;                  // 0x645(0x1)(ConstParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_48F4[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AmbientSoundVolume;                                // 0x648(0x4)(Edit, ConstParm, BlueprintReadOnly, DisableEditOnInstance, SubobjectReference)
	bool                                         bUseOldThirdPersonCameraTrace;                     // 0x64C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnInstance, SubobjectReference)
	bool                                         bUseOldThirdPersonCameraOffset;                    // 0x64D(0x1)(Edit, BlueprintVisible, ExportObject, Net, DisableEditOnInstance, SubobjectReference)
	bool                                         bShowedGenesisDLCBackground;                       // 0x64E(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnInstance, SubobjectReference)
	bool                                         bShowedGenesis2DLCBackground;                      // 0x64F(0x1)(BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnInstance, SubobjectReference)
	bool                                         bHasStartedTheGameOnce;                            // 0x650(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, SubobjectReference)
	bool                                         bViewedAnimatedSeriesTrailer;                      // 0x651(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnInstance, SubobjectReference)
	bool                                         bViewedARK2Trailer;                                // 0x652(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, SubobjectReference)
	bool                                         bShowRTSKeyBinds;                                  // 0x653(0x1)(Parm, DisableEditOnInstance, SubobjectReference)
	float                                        TemporaryMusicStingerReductionMultiplier;          // 0x654(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHasCompletedGen2;                                 // 0x658(0x1)(Edit, ExportObject, Parm, DisableEditOnInstance, SubobjectReference)
	bool                                         bEnableFootstepDecals;                             // 0x659(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, DisableEditOnInstance, SubobjectReference)
	bool                                         bEnableFootstepParticles;                          // 0x65A(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnInstance, SubobjectReference)
	bool                                         bShowInfoButtons;                                  // 0x65B(0x1)(BlueprintVisible, ExportObject, Net, Parm, DisableEditOnInstance, SubobjectReference)
	bool                                         bDisablePaintings;                                 // 0x65C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnInstance, SubobjectReference)
	bool                                         StopExplorerNoteAudioOnClose;                      // 0x65D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnInstance, SubobjectReference)
	bool                                         bVibration;                                        // 0x65E(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnInstance, SubobjectReference)
	bool                                         bUIVibration;                                      // 0x65F(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnInstance, SubobjectReference)
	float                                        RadialSelectionSpeed;                              // 0x660(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnInstance, SubobjectReference)
	bool                                         bDisableVirtualCursor;                             // 0x664(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_48F5[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         PreventDetailGraphics;                             // 0x666(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_48F6[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        GroundClutterRadius;                               // 0x668(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnInstance, SubobjectReference)
	int32                                        HFSQuality;                                        // 0x66C(0x4)(Edit, ExportObject, OutParm, DisableEditOnInstance, SubobjectReference)
	bool                                         bMenuGyro;                                         // 0x670(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_48F8[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        GyroSensitivity;                                   // 0x674(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnInstance, SubobjectReference)
	float                                        VirtualCursorSensitivity;                          // 0x678(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnInstance, SubobjectReference)
	float                                        BubbleParticlesMultiplier;                         // 0x67C(0x4)(Edit, ConstParm, ExportObject, Net, OutParm, DisableEditOnInstance, SubobjectReference)
	float                                        CrosshairScale;                                    // 0x680(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnInstance, SubobjectReference)
	float                                        CrosshairOpacity;                                  // 0x684(0x4)(Edit, EditFixedSize, OutParm, DisableEditOnInstance, SubobjectReference)
	struct FLinearColor                          CrosshairColor;                                    // 0x688(0x10)(ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnInstance, SubobjectReference)
	struct FVector2D                             CrosshairColorPickerValue;                         // 0x698(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnInstance, SubobjectReference)
	struct FLinearColor                          CrosshairColorOverEnemy;                           // 0x6A8(0x10)(Net, EditFixedSize, OutParm, DisableEditOnInstance, SubobjectReference)
	struct FVector2D                             CrosshairColorPickerValueOverEnemy;                // 0x6B8(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnInstance, SubobjectReference)
	struct FLinearColor                          CrosshairColorOverAlly;                            // 0x6C8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnInstance, SubobjectReference)
	struct FVector2D                             CrosshairColorPickerValueOverAlly;                 // 0x6D8(0x10)(Edit, ConstParm, ExportObject, Parm, OutParm, DisableEditOnInstance, SubobjectReference)
	struct FLinearColor                          CrosshairColorHitmark;                             // 0x6E8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnInstance, SubobjectReference)
	struct FVector2D                             CrosshairColorPickerValueHitmark;                  // 0x6F8(0x10)(Edit, ExportObject, Net, Parm, OutParm, DisableEditOnInstance, SubobjectReference)
	int32                                        CurrentCameraModeIndex;                            // 0x708(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnInstance, SubobjectReference)
	int32                                        CurrentDinoCameraModeIndex;                        // 0x70C(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnInstance, SubobjectReference)
	bool                                         bShowAmbientInsectsVFX;                            // 0x710(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4900[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        TextChatFilterType;                                // 0x714(0x4)(Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, SubobjectReference)
	int32                                        VoiceChatFilterType;                               // 0x718(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, SubobjectReference)
	bool                                         bAutomaticallyCreateWaypointOnTamingCreatures;     // 0x71C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, SubobjectReference)
	bool                                         bAutomaticallyCreatePOIOnDeath;                    // 0x71D(0x1)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	bool                                         bEnableDLSS;                                       // 0x71E(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	bool                                         bEnableDLFG;                                       // 0x71F(0x1)(BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	bool                                         bEnableReflex;                                     // 0x720(0x1)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4903[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        SuperResolutionQualityLevel;                       // 0x724(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	bool                                         bOCIOIsEnabled;                                    // 0x728(0x1)(ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4905[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                OCIOAsset;                                         // 0x730(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference)
	int32                                        OCIOColorSpace;                                    // 0x740(0x4)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	int32                                        OCIODisplayView;                                   // 0x744(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	class UOpenColorIOConfiguration*             CurrentOCIOConfiguration;                          // 0x748(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FOpenColorIODisplayConfiguration      CurrenOCIODisplayConfiguration;                    // 0x750(0xA0)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UShooterGameUserSettings* GetDefaultObj();

	int32 SetSuperResolutionQualityLevel();
	void SetEnableReflex(bool* bEnable);
	void SetEnableDLSS(bool* bEnable);
	void SetEnableDLFG(bool* bEnable);
	class UShooterGameUserSettings* GetUserSettings();
	TArray<int32> GetSupportedSuperResolutionQualityLevels();
	class FString GetSuperResolutionQualityLevelName();
	int32 GetSuperResolutionQualityLevel();
	int32 GetQualityLevelPostProcessing();
	bool GetEnableReflex();
	bool GetEnableDLSS();
	bool GetEnableDLFG();
	bool GetDLSSSupported();
	int32 GetDLSSModeIndex(class FString* Value);
	void AddToAgreedToTerms();
};

// 0x148 (0x4F8 - 0x3B0)
// Class ShooterGame.ShooterGameViewportClient
class UShooterGameViewportClient : public UGameViewportClient
{
public:
	TArray<class UObject*>                       ViewPortWidgets;                                   // 0x3B0(0x10)(EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4913[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            LoadingMusic;                                      // 0x3D0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UFont*                                 InfoFont;                                          // 0x3D8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4914[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	class UPrimalUI_Toast*                       UpdatingModsUI;                                    // 0x408(0x8)(BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4915[0x9];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         VideoReplayEnabled;                                // 0x419(0x1)(ConstParm, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4916[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NumReplaySecondsToStore;                           // 0x41C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference)
	uint8                                        Pad_4917[0xD8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterGameViewportClient* GetDefaultObj();

	class UPrimalUI* IsAnyUIConsumingInput(class UClass** PrimalUIClass, class AShooterPlayerController** Owner);
	class UShooterGameViewportClient* GetViewportClient(class UWorld** ForWorld);
	TArray<class UPrimalUI*> GetUIScenesFromClass(class UClass** PrimalUIClass);
	class UPrimalUI* GetUISceneFromClass(class UClass** PrimalUIClass, class ABasePlayerController** Owner);
	class UPrimalUI* GetTopUI();
	class UWorld* GetGameWorld();
	TArray<class UPrimalUI*> GetAllUIScenesFromClass(class UClass** PrimalUIClass, class ABasePlayerController** Owner);
	bool CloseAllUIsOnDie(class AShooterPlayerController** SPC);
	bool AnyScenesWithMouseCapture();
	bool AnyNonInventoryScenesWithMouseCapture(class AShooterPlayerController** ForPC);
};

// 0x28 (0x58 - 0x30)
// Class ShooterGame.ShooterGameLoadingScreenManager
class UShooterGameLoadingScreenManager : public UEngineSubsystem
{
public:
	uint8                                        Pad_4918[0x28];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterGameLoadingScreenManager* GetDefaultObj();

};

// 0xA8 (0x650 - 0x5A8)
// Class ShooterGame.ShooterGame_Menu
class AShooterGame_Menu : public AGameMode
{
public:
	class FString                                MenuMusic;                                         // 0x5A8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig)
	class UClass*                                SponsoredModsMenu;                                 // 0x5B8(0x8)(ConstParm, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ActiveEvent;                                       // 0x5C0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FActiveEventMainMenuOverride>  ActiveEventMainMenuOverrides;                      // 0x5C8(0x10)(Edit, ConstParm, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    BackgroundTextureOverrides;                        // 0x5D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<class UTexture2D*, class FString>       SoundToPlayPerBackground;                          // 0x5E8(0x50)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         HasStartedMusic;                                   // 0x638(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_491A[0x17];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterGame_Menu* GetDefaultObj();

	void PlayMusic();
	bool GetMainMenuOverrideData(struct FActiveEventMainMenuOverride* OverrideData);
	class UTexture2D* GetMainMenuBackgroundTexture();
};

// 0x10 (0x40 - 0x30)
// Class ShooterGame.ShooterHaptics
class UShooterHaptics : public UDataAsset
{
public:
	TArray<struct FShooterForceFeedback>         ForceFeedbackTable;                                // 0x30(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UShooterHaptics* GetDefaultObj();

};

// 0x940 (0xEF8 - 0x5B8)
// Class ShooterGame.ShooterHUD
class AShooterHUD : public AHUD
{
public:
	class UClass*                                HurtCameraShake;                                   // 0x5B8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	class UUI_SavingOverlay*                     SavingOverlay;                                     // 0x5C0(0x8)(Edit, ExportObject, Net, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, DuplicateTransient)
	float                                        MaxDamageCameraShakeScale;                         // 0x5C8(0x4)(Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDamageCameraShakeSpeedInverse;                  // 0x5CC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowAllPlayersWhenSpectating;                     // 0x5D0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4952[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bShowAllPlayersWhenSpectatingLocal;                // 0x5D2(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4953[0xD];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PlayerInfoRequestTimeInterval;                     // 0x5E0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4954[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	class UTrackingItemUI*                       TrackingItemsHUD;                                  // 0x5F8(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPlayerHUDUI*                          MyPlayerHUD;                                       // 0x600(0x8)(Edit, BlueprintVisible, ExportObject, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimalUI*                             MyPlayerHUDSOTF;                                   // 0x608(0x8)(BlueprintVisible, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimalUI*                             CurrentMinimapHUD;                                 // 0x610(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimalUI*                             ChangeCameraModeUI;                                // 0x618(0x8)(BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UHUDCustomStatusWidget*                MyPlayerCustomStatusHUD;                           // 0x620(0x8)(Edit, ConstParm, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UHUDActiveMissionWidget*               MyPlayerActiveMissionHUD;                          // 0x628(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UHUDPointsOfInterestContainer*         MyPlayerPointsOfInterestHUD;                       // 0x630(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UHUDPingsContainer*                    MyPlayerPingHUD;                                   // 0x638(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UUI_LeaderboardWidget*                 MyPlayerLeaderboardHUD;                            // 0x640(0x8)(ConstParm, BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UUI_Subtitles*                         MySubtitlesHUD;                                    // 0x648(0x8)(ConstParm, ExportObject, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UUI_HudOverlay*                        MyOverlayHUD;                                      // 0x650(0x8)(Edit, ConstParm, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UUI_HudOverlay*                        MyTopOverlayHUD;                                   // 0x658(0x8)(ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UUI_ChatBox*                           ChatBoxUI;                                         // 0x660(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference)
	class UBuildingUI*                           BuildingUI;                                        // 0x668(0x8)(Edit, ConstParm, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig)
	class UClass*                                HubUITemplate;                                     // 0x670(0x8)(ConstParm, BlueprintReadOnly, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SurvivorProfileUITemplate;                         // 0x678(0x8)(BlueprintVisible, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PlayerHUDUITemplate;                               // 0x680(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PlayerHUDCustomStatusTemplate;                     // 0x688(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PlayerHUDActiveMissionTemplate;                    // 0x690(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PlayerHUDPointsOfInterestTemplate;                 // 0x698(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TrackingItemsTemplate;                             // 0x6A0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                LeaderboardsUITemplate;                            // 0x6A8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SubtitlesUITemplate;                               // 0x6B0(0x8)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SavingOverlayUITemplate;                           // 0x6B8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                OverlayHUDUITemplate;                              // 0x6C0(0x8)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TopOverlayHUDUITemplate;                           // 0x6C8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                InventoryUITemplate;                               // 0x6D0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MissionListUITemplate;                             // 0x6D8(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                AdminMangmentUITemplate;                           // 0x6E0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ConsoleDedicatedUITemplate;                        // 0x6E8(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TribeManagerUITemplate;                            // 0x6F0(0x8)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TribeWarUITemplate;                                // 0x6F8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PinEntryUITemplate;                                // 0x700(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TextEntryUITemplate;                               // 0x708(0x8)(ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MapMarkersUITemplate;                              // 0x710(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SpawnUITemplate;                                   // 0x718(0x8)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                AllPlayersListTemplate;                            // 0x720(0x8)(ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ChatBoxUITemplate;                                 // 0x728(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TutorialUITemplate;                                // 0x730(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MinimapUITemplate;                                 // 0x738(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                BuildingUITemplate;                                // 0x740(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PlayerHUDSOTF;                                     // 0x748(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ChangeCameraModeTemplate;                          // 0x750(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowChatBoxByDefault;                             // 0x758(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4955[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                InventoryRadialSelectorTemplate;                   // 0x760(0x8)(ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MultiUseRadialSelectorTemplate;                    // 0x768(0x8)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PlayerActionRadialSelectorTemplate;                // 0x770(0x8)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                WhistleRadialSelectorTemplate;                     // 0x778(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                EmoteRadialSelectorTemplate;                       // 0x780(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                CustomRadialSelectorTemplate;                      // 0x788(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                CustomTrackedDinoListUITemplate;                   // 0x790(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class URadialSelectorHUD*                    CurrentRadialSelector;                             // 0x798(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class URadialSelectorHUD_Inventory*          InventoryRadialSelector;                           // 0x7A0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class URadialSelectorHUD_MultiUse*           MultiUseRadialSelector;                            // 0x7A8(0x8)(ConstParm, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class URadialSelectorHUD_PlayerAction*       PlayerActionRadialSelector;                        // 0x7B0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class URadialSelectorHUD_PlayerAction*       WhistleRadialSelector;                             // 0x7B8(0x8)(ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class URadialSelectorHUD_PlayerAction*       EmoteRadialSelector;                               // 0x7C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class URadialSelectorHUD_Custom*             CustomRadialSelector;                              // 0x7C8(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4956[0xC8];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        FloatingMultiUseIconSize;                          // 0x898(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4957[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             FloatingMultiUseIconOffset;                        // 0x8A0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          FloatingMultiUseIconBGColor;                       // 0x8B0(0x10)(ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                DisableUseIconColor;                               // 0x8C0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4958[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            GenericMultiUseIcon;                               // 0x8C8(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GenericBackIcon;                                   // 0x8D0(0x8)(Edit, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GenericSubMenuMultiUseIcon;                        // 0x8D8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ItemAddedNotificationIcon;                         // 0x8E0(0x8)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ItemRemovedNotificationIcon;                       // 0x8E8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          ItemAddedNotificationIconColor;                    // 0x8F0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          ItemRemovedNotificationIconColor;                  // 0x900(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4959[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UFont*                                 BigFont;                                           // 0x918(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UFont*                                 NormalFont;                                        // 0x920(0x8)(BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class UFont*                                 SmallFont;                                         // 0x928(0x8)(ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class UTexture2D*                            HitNotifyTexture;                                  // 0x930(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            HUDMainTextureAtlas;                               // 0x938(0x8)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            HUDAssets02TextureAtlas;                           // 0x940(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            LowHealthOverlayTexture;                           // 0x948(0x8)(ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            HitMarkerTexture;                                  // 0x950(0x8)(Edit, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MultiUseUITemplate;                                // 0x958(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeToHideChat;                                    // 0x960(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_495A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            DeathIcon;                                         // 0x968(0x8)(Edit, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            KilledIcon;                                        // 0x970(0x8)(Edit, ConstParm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ChatPopupInterval;                                 // 0x978(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_495B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            SpeechBubble;                                      // 0x980(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_495C[0x38];                                    // Fixing Size After Last Property  > TateDumper <
	struct FCanvasIcon                           HitNotifyIcon[0x8];                                // 0x9C0(0xC0)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FCanvasIcon                           Crosshair[0x5];                                    // 0xA80(0x78)(BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FCanvasIcon                           HitNotifyCrosshair;                                // 0xAF8(0x18)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_495D[0x168];                                   // Fixing Size After Last Property  > TateDumper <
	TArray<struct FHUDNotification>              HUDNotifications;                                  // 0xC78(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHUDNotification>              ItemHUDNotifications;                              // 0xC88(0x10)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHUDNotification>              SingletonHUDNotifications;                         // 0xC98(0x10)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_495E[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bHUDHidden;                                        // 0xCB8(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowChatPopup;                                    // 0xCB9(0x1)(BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_495F[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FCustomWheelSettings                  TeamPingWheelSettings;                             // 0xCC0(0x48)(BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<enum class ETeamPingType>             TeamPingTypes;                                     // 0xD08(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4960[0x40];                                    // Fixing Size After Last Property  > TateDumper <
	class UUI_Inventory*                         CurrentOpenedInventory;                            // 0xD58(0x8)(BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UUI_Hub*                               CurrentlyOpenedHubUI;                              // 0xD60(0x8)(Edit, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bMultiUseIsDrawingUIHUD;                           // 0xD68(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4961[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AActor>                 LastTargetedActor;                                 // 0xD78(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHintReplacementKeysForKeyboardControls> GenericGamepadReplacementsForKeyboardControls;     // 0xD80(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AdditionalDinoMultiuseCheckDistance;               // 0xD90(0x4)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4962[0x134];                                   // Fixing Size After Last Property  > TateDumper <
	class UUI_Tutorial*                          TutorialUI;                                        // 0xEC8(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference)
	uint8                                        Pad_4963[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class APrimalDinoCharacter*>          CachedFloatingOverlaps;                            // 0xEE0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4964[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bDefeatedBossPreventingSpawnUICreation : 1;        // Mask: 0x1, PropSize: 0x10xEF4(0x1)(Edit, ConstParm, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3DA : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	bool                                         bShowingMinimapTooltip;                            // 0xEF5(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4965[0x2];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterHUD* GetDefaultObj();

	bool StartCustomWheelRadialSelector(bool* AllowMovement);
	void ShowTeamPingWheel(bool* CanTrack);
	class UUI_SurvivorProfile* ShowSurvivorProfileUI();
	void ShowSpawnUI(class APrimalStructure* FastTravelIgnoreBed);
	void ShowPinEntryUI(class AActor** ATargetable, bool* bIsSetting, int32* CustomIndex);
	class UPrimalUI* ShowNewMinimap(class AShooterPlayerController** ToSPC);
	bool ShowMultiUseUIFor(class AActor** AnActor, struct FMultiUseWheelOption* WheelCategoryEntry);
	class UUI_MissionList* ShowMissionList(class UObject* FromDispatcher);
	bool ShowMissionAlert(enum class EMissionAlertType AlertType, class FString* AlertTitle);
	class UMinimapSubMenuUI* ShowMap();
	class UUI_Inventory* ShowInventory();
	class UUI_EngramsMenu* ShowEngramsMenu(bool* bInputDelay);
	bool ShowChatBox(bool* bIsFromNewChat);
	class UPrimalUI* ShowChangeCameraModeUI();
	class UBuildingUI* ShowBuildingUI();
	void SetAllowShowChatBox(bool* bAllow);
	class FString ReplaceKeyboardControlsTextWithXboxControlIconPaths(class FString* ActionKey, int32* IconOffset);
	void RemoveBuildingUI();
	void NotifyOutOfAmmo();
	bool IsUsingCustomWheelRadialSelector();
	bool IsUsingBuildingUI();
	bool IsMissionAlertVisible(bool* bGetTopAlertVisibility);
	bool IsChatBoxVisible();
	float HitchDetected();
	void HideTopMissionAlert();
	void HideMissionAlert();
	void HideChatBox();
	class UUI_Subtitles* GetSubtitlesWidget();
	class AShooterPlayerController* GetShooterPC();
	bool GetSelectedCustomWheelEntry(struct FCustomWheelEntry* SelectedEntry);
	class APlayerController* GetPlayerOwner();
	class UPrimalUI* GetOrCreateSpawnMenu();
	class UUI_Hub* GetOrCreateActiveHub();
	class UFont* GetOffLineSmallFont();
	class UFont* GetOffLineNormalFont();
	class UFont* GetOffLineBigFont();
	bool GetMultiUseRadialSelection(struct FMultiUseEntry* SelectedEntry, bool* bIncludeTimedEntries);
	class UTexture2D* GetIconForKey(class FString* ActionKey);
	float GetFloatingHUDScreenEdgeFadeAlpha();
	class UUI_Hub* GetCurrentHubUI();
	struct FVector2D GetCurrentCrosshairScreenLocation();
	class UUI_ChatBox* GetChatBoxWidget();
	void GetAdditionalExplorerNoteDynamicMaterialParams(struct FExplorerNoteEntry* ExplorerNote, TArray<struct FNameScalarPair>* ScalarMaterialParams, TArray<struct FNameColorPair>* ColorMaterialParams);
	class FString FormatTextureAsRichText(class UTexture2D** InTexture, int32* IconOffset);
	class FString FormatRichTextWithKeyBindings(class FString* InText, bool* bIgnoreMarkup);
	class FString FormatRichTextWithColor(class FString* InText, struct FLinearColor* InColor);
	void ForceHUDHidden(bool* bForcedHidden);
	void EndMultiUseRadialSelector();
	void EndCustomWheelRadialSelector();
	void EndAllRadialSelectors();
	struct FMultiUseEntry DrawMultiUseIcon(struct FVector2D* Vec, class UTexture2D* Icon, class UMaterialInterface** MatIcon, struct FColor* Color);
	void DrawCrosshairOnScreen(struct FVector2D* AtScreenLocation, float* WithCrossSpread, struct FColor* WithDrawColor, float* WithAlphaPercent, float* WithScale);
	class UTrackingItemUI* CreateOrGetTrackItemUI();
	bool CloseSpawnMenu();
	void CloseChangeCameraModeUI();
	bool CloseActiveHub();
	bool ChatWindowHasFocus();
	void CancelCustomWheelRadialSelector();
	void BPUpdateHUDRichTextOverlaysByInstigator(class AActor* ByInstigator);
	int32 BPUpdateHUDRichTextOverlayAtIndex(const struct FHUDRichTextOverlayData& InOverlay);
	void BPUpdateHUDRichTextOverlay(const struct FHUDRichTextOverlayData& InOverlay);
	void BPUpdateAllHUDRichTextOverlays(TArray<struct FHUDRichTextOverlayData>* InOverlayData);
	void BPSimulateHit(float DamageTaken, struct FDamageEvent* DamageEvent, class APawn* PawnInstigator);
	class UPrimalUI* BPShowUIScene(class UClass* UISceneTemplate, class UObject** AssociatedObject2);
	void BPSetHUDRichTextOverlayVerticalWidgetAlignment(const struct FHUDRichTextOverlayData& InOverlay, enum class EVerticalAlignment* InAlignV, struct FHUDRichTextOverlayData* OutOverlay, bool bUpdateAfterSetting);
	void BPSetHUDRichTextOverlayVerticalScreenAnchor(const struct FHUDRichTextOverlayData& InOverlay, enum class EVerticalAlignment* InAnchorV, struct FHUDRichTextOverlayData* OutOverlay, bool bUpdateAfterSetting);
	void BPSetHUDRichTextOverlayUseAutoWrap(const struct FHUDRichTextOverlayData& InOverlay, bool* InAutoWrap, struct FHUDRichTextOverlayData* OutOverlay, bool bUpdateAfterSetting);
	void BPSetHUDRichTextOverlayScale(const struct FHUDRichTextOverlayData& InOverlay, float* InScale, struct FHUDRichTextOverlayData* OutOverlay, bool bUpdateAfterSetting);
	void BPSetHUDRichTextOverlayPosition(const struct FHUDRichTextOverlayData& InOverlay, struct FVector2D* InPosition, struct FHUDRichTextOverlayData* OutOverlay, bool bUpdateAfterSetting);
	void BPSetHUDRichTextOverlayInstigator(const struct FHUDRichTextOverlayData& InOverlay, class AActor** InInstigator, struct FHUDRichTextOverlayData* OutOverlay, bool bUpdateAfterSetting);
	void BPSetHUDRichTextOverlayHorizontalWidgetAlignment(const struct FHUDRichTextOverlayData& InOverlay, enum class EHorizontalAlignment* InAlignH, struct FHUDRichTextOverlayData* OutOverlay, bool bUpdateAfterSetting);
	void BPSetHUDRichTextOverlayHorizontalScreenAnchor(const struct FHUDRichTextOverlayData& InOverlay, enum class EHorizontalAlignment* InAnchorH, struct FHUDRichTextOverlayData* OutOverlay, bool bUpdateAfterSetting);
	void BPSetHUDRichTextOverlayDisplayText(const struct FHUDRichTextOverlayData& InOverlay, class FString* InString, struct FHUDRichTextOverlayData* OutOverlay, bool bUpdateAfterSetting);
	void BPSetHUDRichTextOverlayDefaultTextColor(const struct FHUDRichTextOverlayData& InOverlay, struct FLinearColor* InColor, struct FHUDRichTextOverlayData* OutOverlay, bool bUpdateAfterSetting);
	void BPRemoveHUDRichTextOverlaysByInstigator(class AActor* ByInstigator);
	int32 BPRemoveHUDRichTextOverlayAtIndex();
	void BPRemoveHUDRichTextOverlay(const struct FHUDRichTextOverlayData& InOverlay);
	void BPRemoveAllHUDRichTextOverlays();
	void BPInitUIScenes();
	TArray<struct FHUDRichTextOverlayData> BPGetHUDRichTextOverlays();
	void BPForceReinitUI();
	class UCanvas* BPDrawUIHUD();
	class UCanvas* BPDrawHUD();
	bool BPCustomAddHUDNotification(const class FString& NotificationString, const struct FColor& NotificationColor, class UMaterialInterface* NotificationMaterial, class UTexture2D* NotificationTexture, int32 MessageTypeID, int32* Priority);
	void BPAddHUDRichTextOverlayAtIndex(const struct FHUDRichTextOverlayData& InOverlay, int32 InsertAtIndex);
	void BPAddHUDRichTextOverlay(const struct FHUDRichTextOverlayData& InOverlay);
	int32 BPAddHUDNotification(const class FString& NotificationString, const struct FColor& NotificationColor, class UMaterialInterface* NotificationMaterial, class UTexture2D* NotificationTexture, int32 MessageTypeID, int32 ItemMsgType, float ItemQuantityFloat, int32* Priority);
	void AcceptTeamPingWheel();
};

// 0x398 (0x858 - 0x4C0)
// Class ShooterGame.ShooterImpactEffect
class AShooterImpactEffect : public AActor
{
public:
	class UParticleSystem*                       SurfaceImpactFX[0x10];                             // 0x4C0(0x80)(Net, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            WaeponImpactSound;                                 // 0x540(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            SurfaceImpactSound[0x10];                          // 0x548(0x80)(BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDecalRange;                                     // 0x5C8(0x4)(BlueprintVisible, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4967[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDecalData                            SurfaceDecalData[0x10];                            // 0x5D0(0x200)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SurfaceImpactSpawnActors[0x10];                    // 0x7D0(0x80)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverridePawnHitDecal : 1;                         // Mask: 0x1, PropSize: 0x10x850(0x1)(ConstParm, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverridePawnHitFX : 1;                            // Mask: 0x2, PropSize: 0x10x850(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNoHitEffectOnPawns : 1;                           // Mask: 0x4, PropSize: 0x10x850(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNoSoundEffectOnPawns : 1;                         // Mask: 0x8, PropSize: 0x10x850(0x1)(Edit, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNoSpawnActorOnPawns : 1;                          // Mask: 0x10, PropSize: 0x10x850(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNoDecalOnPawns : 1;                               // Mask: 0x20, PropSize: 0x10x850(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4968[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterImpactEffect* GetDefaultObj();

	class UParticleSystemComponent* StaticSpawnImpactEffects(class UObject** WorldContextObject, class UClass** ImpactEffectClass, struct FHitResult* SurfaceHit, const struct FVector& ShotDirection, bool* UseShotDirectionForImpactEffectActorClassRotation, bool AttachImpactEffectActorToSurfaceHitActor);
};

// 0x18 (0x9F0 - 0x9D8)
// Class ShooterGame.ShooterLaserBeamComponent
class UShooterLaserBeamComponent : public UParticleSystemComponent
{
public:
	bool                                         bIsOwnerWeapon;                                    // 0x9D8(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4969[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LaserBeamRange;                                    // 0x9DC(0x4)(Edit, ExportObject, Net, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_496A[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterLaserBeamComponent* GetDefaultObj();

};

// 0x11B8 (0x1670 - 0x4B8)
// Class ShooterGame.ShooterLocalPlayer
class UShooterLocalPlayer : public ULocalPlayer
{
public:
	TSet<class UPrimalUI*>                       UITicks;                                           // 0x4B8(0x50)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UOnlineSession*                        OnlineSession;                                     // 0x508(0x8)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst)
	class UShooterPersistentUser*                PersistentUser;                                    // 0x510(0x8)(ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_496B[0x1158];                                  // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterLocalPlayer* GetDefaultObj();

};

// 0x0 (0x1E0 - 0x1E0)
// Class ShooterGame.ShooterOnlineSessionClient
class UShooterOnlineSessionClient : public UOnlineSessionClient
{
public:

	static class UClass* StaticClass();
	static class UShooterOnlineSessionClient* GetDefaultObj();

};

// 0x38 (0xF8 - 0xC0)
// Class ShooterGame.ShooterPendingNetGame
class UShooterPendingNetGame : public UPendingNetGame
{
public:
	uint8                                        Pad_496C[0x38];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterPendingNetGame* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class ShooterGame.ShooterPersistentUser
class UShooterPersistentUser : public USaveGame
{
public:
	int32                                        Kills;                                             // 0x28(0x4)(BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        Deaths;                                            // 0x2C(0x4)(Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        Wins;                                              // 0x30(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        Losses;                                            // 0x34(0x4)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        BulletsFired;                                      // 0x38(0x4)(ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        RocketsFired;                                      // 0x3C(0x4)(Edit, ConstParm, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        BotsCount;                                         // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Gamma;                                             // 0x44(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        AimSensitivity;                                    // 0x48(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bInvertedYAxis;                                    // 0x4C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_496D[0x1B];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterPersistentUser* GetDefaultObj();

};

// 0x23E0 (0x5E00 - 0x3A20)
// Class ShooterGame.ShooterPlayerCameraManager
class AShooterPlayerCameraManager : public APlayerCameraManager
{
public:
	TMap<class UMaterialInterface*, float>       MatFadeDown;                                       // 0x3A20(0x50)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FMinimalViewInfo                      LastPreModifierCameraCache;                        // 0x3A70(0x870)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NormalFOV;                                         // 0x42E0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TargetingFOV;                                      // 0x42E4(0x4)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TPVZOffsetInterpSpeed;                             // 0x42E8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4986[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPostProcessSettings                  PPMaterials;                                       // 0x42F0(0x780)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4987[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bHasCustomDepthStencil;                            // 0x4A7C(0x1)(Edit, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCustomDepthStencilIgnoreHealth;                   // 0x4A7D(0x1)(Edit, BlueprintReadOnly, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCompleteCustomDepthStencilOverride;               // 0x4A7E(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4988[0x19];                                    // Fixing Size After Last Property  > TateDumper <
	class FName                                  LastActualCameraStyle;                             // 0x4A98(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4989[0x1108];                                  // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LastTPVCameraOffset;                               // 0x5BA8(0x18)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LastTPVCollisionHeight;                            // 0x5BC0(0x4)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TPVCollisionHeightInterpSpeed;                     // 0x5BC4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_498A[0xC4];                                    // Fixing Size After Last Property  > TateDumper <
	struct FFloatSpringState                     CameraArmLengthSpringState;                        // 0x5C8C(0xC)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FFloatSpringState                     CameraPivotLocationSpringStateX;                   // 0x5C98(0xC)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FFloatSpringState                     CameraPivotLocationSpringStateY;                   // 0x5CA4(0xC)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FFloatSpringState                     CameraPivotLocationSpringStateZ;                   // 0x5CB0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_498B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FQuaternionSpringState                CameraPivotRotationSpringState;                    // 0x5CC0(0x40)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_498C[0x100];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterPlayerCameraManager* GetDefaultObj();

	void UpdateCameraState(class APrimalCharacter* ForChar);
	void StartCameraTransition(float TransitionDuration, bool bUseFinalModifiedViewTarget, bool bAllowSpectorPawn);
	bool ShouldUseSlowInterpToOldCamera(class APrimalCharacter* ForChar);
	bool ShouldUseASACamera(class APrimalCharacter* ForChar, bool bCheckShouldSwitchToOldCamera);
	void SetLastTargetLocationLoc(const struct FVector& NewTargetLocationLoc);
	struct FQuat PrimalCameraQuaternionSpringInterp(const struct FQuat& Current, float CriticalDampingFactor, float Mass);
	float PrimalCameraFloatSpringInterp(float Current, float CriticalDampingFactor, float Mass, float MinValue, float MaxValue);
	enum class EPrimalCameraState OnCameraStateChanged(class APrimalCharacter* ForChar);
	bool IsInFrustum(const struct FVector& BoxLocation, const struct FVector& BoxExtents);
	bool IsFirstPerson();
	bool HandleTurn();
	bool HandleLook();
	float GetTPVCollisionHeight(class AActor** ForTarget, bool bIncludeHeightScalar);
	enum class EPrimalCameraState GetPrimalCameraState();
	struct FVector GetPrimalCameraCurrentPivotLocationOffset(class APrimalCharacter* ForChar, bool bCheckShouldSwitchToOldCamera);
	struct FVector GetPrimalCameraCurrentPivotLocation(class APrimalCharacter* ForChar, bool bCheckShouldSwitchToOldCamera);
	uint8 GetColorCodedStencil(enum class EStencilAlliance* InAlliance, float* HealthPercent);
	class FName GetCameraStyle();
	void GetCameraAimViewPoint(const struct FVector& OutCamLoc, const struct FRotator& OutCamRot);
	class FName GetCahcedCameraStyle();
	class UObject* GetBlendableFromMIC(class UMaterialInterface* InInterface);
	struct FRotator CameraGetRotationForPawnMovementInput(class APrimalCharacter** ForPawn, const struct FRotator& InControlRotation);
	bool BPUpdateViewTarget(const struct FTViewTarget& OutVT);
};

// 0x8 (0xB40 - 0xB38)
// Class ShooterGame.ShooterPlayerController_Menu
class AShooterPlayerController_Menu : public ABasePlayerController
{
public:
	class UPrimalLocalProfile*                   PrimalLocalProfile;                                // 0xB38(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig)

	static class UClass* StaticClass();
	static class AShooterPlayerController_Menu* GetDefaultObj();

};

// 0xBD8 (0x11B0 - 0x5D8)
// Class ShooterGame.ShooterPlayerState
class AShooterPlayerState : public APlayerState
{
public:
	uint8                                        Pad_49B9[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	class UPrimalPlayerData*                     MyPlayerData;                                      // 0x608(0x8)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FPrimalPlayerDataStruct               MyPlayerDataStruct;                                // 0x610(0x508)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultItemSlotClasses[0xA];                       // 0xB18(0x50)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        DefaultItemSlotEngrams[0xA];                       // 0xB68(0xA)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49BA[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTribeData                            MyTribeData;                                       // 0xB78(0x1A8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FTribeData                            LastTribeInviteData;                               // 0xD20(0x1A8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49BB[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSpawnPointInfo>               CachedSpawnPointInfos;                             // 0xF18(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        TotalEngramPoints;                                 // 0xF28(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        FreeEngramPoints;                                  // 0xF2C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        EngramItemBlueprints;                              // 0xF30(0x10)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49BC[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       NextAllowedRespawnTime;                            // 0xF90(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        AllowedRespawnInterval;                            // 0xF98(0x4)(Edit, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_49BD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastTimeDiedToEnemyTeam;                           // 0xFA0(0x8)(Edit, ConstParm, ExportObject, Net, Parm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        CurrentlySelectedDinoOrderGroup;                   // 0xFA8(0x4)(ConstParm, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_49BE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDinoOrderGroup                       DinoOrderGroups[0xA];                              // 0xFB0(0x1E0)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	double                                       GenesisAbilityErrorLastTime;                       // 0x1190(0x8)(ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       NextAllowTurretCopySettingsTime;                   // 0x1198(0x8)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49BF[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bQuitter : 1;                                      // Mask: 0x1, PropSize: 0x10x11A8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49C0[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterPlayerState* GetDefaultObj();

	void UpdatedPlayerData();
	bool ServerUnlockEngram();
	int32 ServerTribeRequestRemoveRankGroup();
	void ServerTribeRequestNewRallyPoint(const struct FTeamPingData& RallyPointData);
	void ServerTribeRequestNewAlliance(class FString* AllianceName);
	struct FTribeRankGroup ServerTribeRequestApplyRankGroupSettings();
	void ServerTribeRequestAddRankGroup(class FString* GroupName);
	int32 ServerSetSelectedDinoOrderGroup();
	void ServerSetDinoGroupName(int32 GroupIndex, class FString* GroupName);
	class UClass* ServerSetDefaultItemSlotClass(bool bIsEngram);
	int32 ServerRequestTransferOwnershipInMyTribe();
	int32 ServerRequestSpawnPointsForDownloadedCharacters();
	int32 ServerRequestSetTribeMemberGroupRank();
	struct FTribeGovernment ServerRequestSetTribeGovernment();
	void ServerRequestRenameTribe(const class FString& ServerRequestRenameTribe);
	int32 ServerRequestRemovePlayerIndexFromMyTribe();
	uint32 ServerRequestRemoveAllianceMember(uint32* AllianceID);
	int32 ServerRequestPromotePlayerInMyTribe();
	uint32 ServerRequestPromoteAllianceMember(uint32* AllianceID);
	class UClass* ServerRequestMySpawnPoints();
	void ServerRequestLeaveTribe();
	void ServerRequestLeaveAlliance(uint32* AllianceID);
	void ServerRequestDinoOrderGroups();
	int32 ServerRequestDemotePlayerInMyTribe();
	struct FTribeGovernment ServerRequestCreateNewTribe(class FString* TribeName);
	void ServerRequestCreateNewPlayer(const struct FPrimalPlayerCharacterConfigStructReplicated& PlayerCharacterConfig);
	void ServerRequestChangePlayerData(const struct FPrimalPlayerCharacterConfigStructReplicated& PlayerCharacterConfig);
	class UClass* ServerRequestApplyEngramPoints();
	int32 ServerRejectTribeWar();
	void ServerGetServerOptions();
	void ServerGetPlayerWhiteListedData();
	void ServerGetPlayerConnectedData();
	void ServerGetPlayerBannedData();
	void ServerGetPlayerAdministratorData();
	void ServerGetAllPlayerNamesAndLocations();
	void ServerGetAlivePlayerConnectedData();
	int32 ServerDinoOrderGroup_RemoveEntryByIndex(int32 GroupIndex);
	bool ServerDinoOrderGroup_Clear(int32 GroupIndex);
	bool ServerDinoOrderGroup_AddOrRemoveDinoClass(int32 GroupIndex);
	bool ServerDinoOrderGroup_AddOrRemoveDinoCharacter(int32 GroupIndex);
	float ServerDeclareTribeWar(int32* EndDayNumber);
	int32 ServerAcceptTribeWar();
	struct FTribeData SendTribeInviteData();
	void OnRep_UpdatedEngrams();
	class FString NotifyUniqueDinoDownloaded();
	class FString NotifyUniqueDinoDownloadAllowed();
	class FString NotifyTribememberLeft();
	class FString NotifyTribememberJoined();
	bool NotifyPlayerLeftTribe(class FString* TribeName);
	class FString NotifyPlayerLeft();
	bool NotifyPlayerJoinedTribe(class FString* TribeName);
	class FString NotifyPlayerJoined();
	void NotifyAllianceChanged();
	bool IsTribeAdmin();
	bool IsInTribe();
	bool IsFriendly();
	bool IsDinoInOrderGroup(int32 GroupIndex);
	bool IsDinoClassInOrderGroup(int32 GroupIndex);
	bool IsAlliedWith();
	bool HasEngram();
	class FString GetUniqueNetIdAsString();
	class FString GetUniqueIdString();
	int32 GetTribeId();
	int32 GetHexCostToPurchaseNextEngramPoint();
	TArray<class UClass*> GetDefaultItemSlotClasses();
	bool DoRespec();
	bool ClientUpdateNewRallyPoint(const struct FTeamPingData& RallyPointData);
	int32 ClientRefreshDinoOrderGroup(int32 GroupIndex);
	TArray<struct FSpawnPointInfo> ClientReceiveSpawnPoints();
	void ClientNotifyLevelUpAvailable();
	struct FServerOptions ClientGetServerOptions();
	void ClientGetPlayerWhiteListedData(const TArray<struct FAdminPlayerDataInfo>& List);
	void ClientGetPlayerConnectedData(const TArray<struct FAdminPlayerDataInfo>& List);
	void ClientGetPlayerBannedData(const TArray<struct FAdminPlayerDataInfo>& List);
	void ClientGetPlayerAdministratorData(const TArray<struct FAdminPlayerDataInfo>& List);
	void ClientGetAllPlayerNamesAndLocations(const TArray<struct FAliveNameAndLocation>& List);
	void ClientGetAlivePlayerConnectedData(const TArray<struct FAlivePlayerDataInfo>& List);
	bool ClearTribe(class APlayerController** ForPC);
	class AShooterPlayerState* BroadcastDeath();
	bool AllowTribeGroupPermission(enum class ETribeGroupPermission* TribeGroupPermission, class UObject** OnObject);
	bool AllowDinoOrderByGroup();
	bool AddToTribe(const struct FTribeData& MyNewTribe, bool* bIsFromInvite);
};

// 0x0 (0x218 - 0x218)
// Class ShooterGame.ShooterProjectileMovement
class UShooterProjectileMovement : public UProjectileMovementComponent
{
public:

	static class UClass* StaticClass();
	static class UShooterProjectileMovement* GetDefaultObj();

};

// 0x218 (0x9A8 - 0x790)
// Class ShooterGame.ShooterProjectile_Swarm
class AShooterProjectile_Swarm : public AShooterProjectile
{
public:
	class USceneComponent*                       SwarmRoot;                                         // 0x790(0x8)(ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SwarmSize;                                         // 0x798(0x4)(ConstParm, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SwarmLeaderCount;                                  // 0x79C(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BoidCollisionRadius;                               // 0x7A0(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49C3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBoidBehavior                         SwarmBehavior;                                     // 0x7A8(0x40)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DynamicAvoidanceDuration;                          // 0x7E8(0x4)(Edit, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49C4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FFlockPersistentData                  SwarmPersistentData;                               // 0x7F0(0x38)(ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       SwarmParticleSystem;                               // 0x828(0x8)(Edit, ConstParm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SwarmOpacityParticleParamName;                     // 0x830(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFadeOutSwarmOverProjectileLife;                   // 0x838(0x1)(ConstParm, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49C5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SwarmOpacityFadeTimeOnBoidImpact;                  // 0x83C(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LifespanAfterImpact;                               // 0x840(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwarmDelayedStartTime;                             // 0x844(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BoidSpawnInterval;                                 // 0x848(0x4)(BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BoidInitialFollowProjectileTime;                   // 0x84C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BoidInitialDisableCollisionTime;                   // 0x850(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwarmLifetimeAfterPrimaryProjectileDestruction;    // 0x854(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwarmSpawnRadius;                                  // 0x858(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49C6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             SwarmInitialSpeedRange;                            // 0x860(0x10)(Edit, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             SwarmMaxSpeedRange;                                // 0x870(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             SwarmMaxForceRange;                                // 0x880(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             SwarmTurnRateRange;                                // 0x890(0x10)(Edit, ConstParm, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwarmTargetRadius;                                 // 0x8A0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwarmTargetHelixSpeed;                             // 0x8A4(0x4)(Edit, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FBoid>                         SwarmData;                                         // 0x8A8(0x10)(Edit, ConstParm, BlueprintVisible, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UParticleSystemComponent*>      SwarmComps;                                        // 0x8B8(0x10)(Edit, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<double>                               BoidSpawnTimes;                                    // 0x8C8(0x10)(Edit, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<double>                               BoidExplodeTimes;                                  // 0x8D8(0x10)(BlueprintReadOnly, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                FlockingWhitelist;                                 // 0x8E8(0x10)(ConstParm, BlueprintVisible, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseCrazinessMultiplier;                           // 0x8F8(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49C7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CrazinessMultiplier;                               // 0x8FC(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPGetBoidSpawnLocationAndVelocity;             // 0x900(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49C8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FProjectileArc                        LaunchArc;                                         // 0x908(0x58)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       ProjectileSpawnTime;                               // 0x960(0x8)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ProjectilePeakTime;                                // 0x968(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ProjectileImpactTime;                              // 0x96C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49C9[0x38];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterProjectile_Swarm* GetDefaultObj();

	float TimeSinceProjectileSpawn();
	void SpawnSwarm();
	TArray<struct FBoid> MultiSyncSwarm();
	double MultiPrimaryProjectileDestroyed(const struct FVector& ImpactLocation);
	int32 GetNumberOfBoidsInFlight();
	void DoSwarmSync();
	struct FHitResult BPOnBoidExplode();
	struct FVector BPGetBoidSpawnLocationAndVelocity();
};

// 0x0 (0x120 - 0x120)
// Class ShooterGame.ShooterGraphNode_AlwaysRelevant
class UShooterGraphNode_AlwaysRelevant : public UReplicationGraphNode_ActorList
{
public:

	static class UClass* StaticClass();
	static class UShooterGraphNode_AlwaysRelevant* GetDefaultObj();

};

// 0xF0 (0x140 - 0x50)
// Class ShooterGame.ShooterGraphNode_TeamAlwaysRelevant
class UShooterGraphNode_TeamAlwaysRelevant : public UReplicationGraphNode
{
public:
	TMap<int32, class UShooterGraphNode_AlwaysRelevant*> TeamNodes;                                         // 0x50(0x50)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49CA[0xA0];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterGraphNode_TeamAlwaysRelevant* GetDefaultObj();

};

// 0x50 (0x170 - 0x120)
// Class ShooterGame.ShooterGraphNode_Default
class UShooterGraphNode_Default : public UReplicationGraphNode_ActorList
{
public:
	uint8                                        Pad_49CB[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterGraphNode_Default* GetDefaultObj();

};

// 0x50 (0x170 - 0x120)
// Class ShooterGame.ShooterGraphNode_StaggeredByDistance
class UShooterGraphNode_StaggeredByDistance : public UReplicationGraphNode_ActorList
{
public:
	uint8                                        Pad_49CC[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterGraphNode_StaggeredByDistance* GetDefaultObj();

};

// 0x0 (0x270 - 0x270)
// Class ShooterGame.ShooterGraphNode_BaseSpatialGrid
class UShooterGraphNode_BaseSpatialGrid : public UReplicationGraphNode_GridSpatialization2D
{
public:

	static class UClass* StaticClass();
	static class UShooterGraphNode_BaseSpatialGrid* GetDefaultObj();

};

// 0x0 (0x170 - 0x170)
// Class ShooterGame.ShooterGraphNode_DynamicGridCell
class UShooterGraphNode_DynamicGridCell : public UReplicationGraphNode_GridCell
{
public:

	static class UClass* StaticClass();
	static class UShooterGraphNode_DynamicGridCell* GetDefaultObj();

};

// 0x0 (0x270 - 0x270)
// Class ShooterGame.ShooterGraphNode_DynamicSpatialGrid
class UShooterGraphNode_DynamicSpatialGrid : public UShooterGraphNode_BaseSpatialGrid
{
public:

	static class UClass* StaticClass();
	static class UShooterGraphNode_DynamicSpatialGrid* GetDefaultObj();

};

// 0x50 (0x1C0 - 0x170)
// Class ShooterGame.ShooterGraphNode_DormantGridCell
class UShooterGraphNode_DormantGridCell : public UReplicationGraphNode_GridCell
{
public:
	TSet<class AActor*>                          ActorSet;                                          // 0x170(0x50)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UShooterGraphNode_DormantGridCell* GetDefaultObj();

};

// 0x50 (0x2C0 - 0x270)
// Class ShooterGame.ShooterGraphNode_DormantSpatialGrid
class UShooterGraphNode_DormantSpatialGrid : public UShooterGraphNode_BaseSpatialGrid
{
public:
	uint8                                        Pad_49CD[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterGraphNode_DormantSpatialGrid* GetDefaultObj();

};

// 0x18 (0x388 - 0x370)
// Class ShooterGame.ShooterReplicationConnectionGraph
class UShooterReplicationConnectionGraph : public UNetReplicationGraphConnection
{
public:
	class UShooterGraphNode_AlwaysRelevant*      AlwaysRelevantNode;                                // 0x370(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	TArray<class UShooterGraphNode_DormantGridCell*> DormantCells;                                      // 0x378(0x10)(Edit, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UShooterReplicationConnectionGraph* GetDefaultObj();

};

// 0x50 (0x5C0 - 0x570)
// Class ShooterGame.ShooterReplicationGraph
class UShooterReplicationGraph : public UReplicationGraph
{
public:
	float                                        DynamicCellSize;                                   // 0x570(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DormantCellSize;                                   // 0x574(0x4)(Edit, ConstParm, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DistanceMultiplier;                                // 0x578(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49CE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bEnableSpatialRebuilds;                            // 0x580(0x1)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49CF[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UShooterGraphNode_DynamicSpatialGrid*  DynamicGrid;                                       // 0x588(0x8)(ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UShooterGraphNode_DormantSpatialGrid*  DormantGrid;                                       // 0x590(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UShooterGraphNode_Default*             DefaultBehaviorNode;                               // 0x598(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UShooterGraphNode_AlwaysRelevant*      AlwaysRelevantNode;                                // 0x5A0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	class UShooterGraphNode_TeamAlwaysRelevant*  TeamAlwaysRelevantNode;                            // 0x5A8(0x8)(ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49D0[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterReplicationGraph* GetDefaultObj();

};

// 0x78 (0x620 - 0x5A8)
// Class ShooterGame.ShooterSpectatorPawn
class AShooterSpectatorPawn : public ASpectatorPawn
{
public:
	uint8                                        Pad_49D2[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        MaxOrbitRadius;                                    // 0x5C0(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinOrbitRadius;                                    // 0x5C4(0x4)(ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49D3[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AActor>                 CurrentOrbitCamTarget;                             // 0x5F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49D4[0x28];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterSpectatorPawn* GetDefaultObj();

	void SpectatorIncreaseBaseSpeedStart();
	void SpectatorIncreaseBaseSpeedEnd();
	void SpectatorDecreaseBaseSpeedStart();
	void SpectatorDecreaseBaseSpeedEnd();
	struct FVector SetSavedSpectatorPositionForIndex(struct FRotator* Rotation);
	int32 SaveSpectatorPositionForIndex();
	void OrbitCamOff();
	int32 LoadSpectatorPositionFromIndex();
	TArray<struct FVector> GetSavedSpectatorPositions(const TArray<struct FRotator>& Rotations);
	void BPOrbitCamOn(class AActor** OrbitTarget);
};

// 0xB0 (0x1150 - 0x10A0)
// Class ShooterGame.ShooterWeapon_FlameThrower
class AShooterWeapon_FlameThrower : public AShooterWeapon
{
public:
	int32                                        InstantDamageAmount;                               // 0x10A0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DamageTestSphereRadius;                            // 0x10A4(0x4)(BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DamageTestBoxExtentSide;                           // 0x10A8(0x4)(Edit, ConstParm, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DamageTestMuzzleOffset;                            // 0x10AC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FlameHurtMaxDistance;                              // 0x10B0(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49D5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FVector>                       DamageImpactPoints;                                // 0x10B8(0x10)(ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               MuzzleDirectionOffset;                             // 0x10C8(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ETickingGroup                     MuzzlePSCTickGroupOverride;                        // 0x10E0(0x1)(ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49D6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseMuzzlePSCTickGroupOverride : 1;                // Mask: 0x1, PropSize: 0x10x10E4(0x1)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3DB : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_49D7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                FlameThrowerFXDefaultColor;                        // 0x10E8(0x4)(ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49D8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DamageType;                                        // 0x10F0(0x8)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig)
	class UParticleSystem*                       FlameThrowerFX;                                    // 0x10F8(0x8)(ConstParm, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       FlameThrowerFX_FPV;                                // 0x1100(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       OnFireFX;                                          // 0x1108(0x8)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       HarvestFX;                                         // 0x1110(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49D9[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        ShotDelay;                                         // 0x1128(0x4)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49DA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FXDelay;                                           // 0x1130(0x4)(ConstParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49DB[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bMuzzlePSC_IsTPV : 1;                              // Mask: 0x1, PropSize: 0x10x1148(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSpawnImpactEffects : 1;                      // Mask: 0x2, PropSize: 0x10x1148(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPBeginStopShootEffects : 1;                   // Mask: 0x4, PropSize: 0x10x1148(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49DC[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterWeapon_FlameThrower* GetDefaultObj();

	void TickShootFX();
	void StopShootFX();
	void SpawnImpactEffects();
	void ServerTickShootFX();
	void ServerStopShootFX();
	void ServerBeginShootFX();
	void EndFXDelay();
	void ClientSpawnHarvestFX(TArray<struct FVector>* Impacts);
	void BPStopShootEffects();
	void BPSpawnImpactEffects(TArray<struct FVector>* Impacts);
	void BPSpawnHarvestEffects(TArray<struct FVector>* Impacts);
	void BPBeginShootEffects();
	void BeginShootFX();
};

// 0xE8 (0x1238 - 0x1150)
// Class ShooterGame.ShooterWeapon_Activated
class AShooterWeapon_Activated : public AShooterWeapon_FlameThrower
{
public:
	uint8                                        bIsActivated : 1;                                  // Mask: 0x1, PropSize: 0x10x1150(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3DC : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_49DF[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FWeaponAnim>                   ActivateAnim;                                      // 0x1160(0x10)(Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FWeaponAnim>                   DeactivateAnim;                                    // 0x1170(0x10)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           StopFireAnim;                                      // 0x1180(0x10)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           MovementFireAnim;                                  // 0x1190(0x10)(ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49E0[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bDamagePawns;                                      // 0x11A8(0x1)(Edit, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49E1[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ActivateCameraShake;                               // 0x11B0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ActivateCameraShakeSpeedScale;                     // 0x11B8(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49E2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               FireOrigin;                                        // 0x11C0(0x18)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               FireDirection;                                     // 0x11D8(0x18)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               TargetLocation;                                    // 0x11F0(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  BeamTargetParameterName;                           // 0x1208(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             FireLoopSound;                                     // 0x1210(0x8)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       FireLoopAC;                                        // 0x1218(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             IdleSound;                                         // 0x1220(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       IdleAC;                                            // 0x1228(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             EmptySound;                                        // 0x1230(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AShooterWeapon_Activated* GetDefaultObj();

	struct FVector ServerPreFire(struct FVector* Origin);
	void ServerCancelActivation();
	bool ServerActivateWeapon(int32 NAnimIndex);
	bool IsActivationAnimPlaying();
	void HandleActivation(bool* bActive);
	struct FVector GetBeamTarget();
	void EndActivationAnim();
	bool ClientHandleActivation();
	bool ClientActivateWeapon();
	struct FVector BPPreFireEvent(struct FVector* Origin);
	bool ActivateWeapon(int32 NAnimIndex);
};

// 0x38 (0x10D8 - 0x10A0)
// Class ShooterGame.ShooterWeapon_ChainSaw
class AShooterWeapon_ChainSaw : public AShooterWeapon
{
public:
	TArray<struct FWeaponAnim>                   ShootAnimList;                                     // 0x10A0(0x10)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FWeaponAnim>                   ShootWithHitAnimList;                              // 0x10B0(0x10)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             IdleSound;                                         // 0x10C0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       IdleAC;                                            // 0x10C8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49E3[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterWeapon_ChainSaw* GetDefaultObj();

	void ServerStopFireAnim();
	void ServerReloadWeapon();
	void ServerHit();
	void ClientSimulateChangeFireAnim();
};

// 0x740 (0x17E8 - 0x10A8)
// Class ShooterGame.ShooterWeapon_Climb
class AShooterWeapon_Climb : public AShooterWeapon_Melee
{
public:
	float                                        MinStaminaToClimb;                                 // 0x10A8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ClimbingMode;                                      // 0x10AC(0x1)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        PreviousClimbingMode;                              // 0x10AD(0x1)(ConstParm, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ClimbingType;                                      // 0x10AE(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        CurrentClimbingMovementType;                       // 0x10AF(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClimbingLeftArm : 1;                              // Mask: 0x1, PropSize: 0x10x10B0(0x1)(Edit, ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInitialAttach : 1;                                // Mask: 0x2, PropSize: 0x10x10B0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEarthquakeLocked : 1;                             // Mask: 0x4, PropSize: 0x10x10B0(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3DD : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_49F2[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector_NetQuantize100                ClimbingAnchorPosition;                            // 0x10B8(0x18)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector_NetQuantizeNormal             ClimbingAnchorNormal;                              // 0x10D0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49F3[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               PreviousClimbingAnchorPosition;                    // 0x10F0(0x18)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PreviousClimbingAnchorNormal;                      // 0x1108(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ClimbingDirection;                                 // 0x1120(0x18)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ClimbingAnchorDirection;                           // 0x1138(0x18)(BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ClimbingOvershootTime;                             // 0x1150(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ClimbingLookingToSide;                             // 0x1154(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             ClimbLowStaminaLoopSC;                             // 0x1158(0x8)(Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       ClimbLowStaminaLoopAC;                             // 0x1160(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ClimbLowStaminaPercentagePlaySound;                // 0x1168(0x4)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49F4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FClimbingAnims                        ClimbAnims;                                        // 0x1170(0x400)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           TurnLeftAnim;                                      // 0x1570(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           TurnRightAnim;                                     // 0x1580(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           TurnLeftAnimHanging;                               // 0x1590(0x10)(ConstParm, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           TurnRightAnimHanging;                              // 0x15A0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         RightClimbingAnimation;                            // 0x15B0(0x8)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         LeftClimbingAnimation;                             // 0x15B8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         RightClimbingHangAnimation;                        // 0x15C0(0x8)(Edit, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         LeftClimbingHangAnimation;                         // 0x15C8(0x8)(Edit, ConstParm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         InventoryRightClimbAnimation;                      // 0x15D0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         InventoryLeftClimbAnimation;                       // 0x15D8(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         InventoryRightClimbHangAnimation;                  // 0x15E0(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         InventoryLeftClimbHangAnimation;                   // 0x15E8(0x8)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           SlideDownLeftAnim;                                 // 0x15F0(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           SlideDownRightAnim;                                // 0x1600(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LeftMesh1PComponentName;                           // 0x1610(0x8)(ConstParm, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RightMesh1PComponentName;                          // 0x1618(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LeftMesh3PComponentName;                           // 0x1620(0x8)(ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RightMesh3PComponentName;                          // 0x1628(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LeftPickAttachPoint3P;                             // 0x1630(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  LeftMesh1P;                                        // 0x1638(0x8)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  RightMesh1P;                                       // 0x1640(0x8)(ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  LeftMesh3P;                                        // 0x1648(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  RightMesh3P;                                       // 0x1650(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ClimbPickHitCameraShake;                           // 0x1658(0x8)(ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FBiomeZoneImpactEffect                LeftClimbImpactEffects;                            // 0x1660(0x80)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FBiomeZoneImpactEffect                RightClimbImpactEffects;                           // 0x16E0(0x80)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ImpactSocketName;                                  // 0x1760(0x8)(ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxSpawnedImpactEffects;                           // 0x1768(0x4)(Edit, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ServerCurrentClimbingType;                         // 0x176C(0x1)(Edit, ConstParm, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49F5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ServerCurrentClimbingDirection;                    // 0x1770(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UpdatingDirectionTime;                             // 0x1788(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49F6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActiveImpactEffects;                               // 0x1790(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ClimbingSettingsClass;                             // 0x17A0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UCameraModifier*                       ActiveCameraModifer;                               // 0x17A8(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ClimbingMinAttachedDurationBeforeAllowingDetach;   // 0x17B0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49F7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ClimbingLastAttachedStartedTime;                   // 0x17B8(0x8)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49F8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bHasAValidClimbingTarget;                          // 0x17C4(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49F9[0x23];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterWeapon_Climb* GetDefaultObj();

	bool ShouldShowTargetingArray();
	struct FVector_NetQuantizeNormal SetClimbingAnchorPoint(uint8 Type, uint8* Mode);
	void ServerSetClimbingLeftArm(bool* ClimbingLeftArm);
	struct FVector ServerRequestClimbMove(uint8 Type, bool* ClimbingLeftArm);
	void ServerReleaseClimbingAnchor(bool* bWithJump, struct FVector_NetQuantizeNormal* InputDir, bool* bForceMinTimeCheckBeforeReleasing);
	void ServerPerformTurn(bool* ClimbingLeftArm);
	void ReleaseClimbingAnchor(bool* bWithJump, struct FVector* InputDir, bool* bForceMinTimeCheckBeforeReleasing);
	bool IsClimbingUp();
	bool IsClimbingHanging();
	struct FVector GetViewLocation();
	struct FVector GetViewDirection();
	bool ClimbTrace(struct FHitResult* HitResult, uint8 Type);
	void ClientNotifyNoClimbSurface();
	bool CanLandOnSurface(struct FHitResult* HitResult);
	bool CanClimbOnSurface(struct FHitResult* HitResult);
	void BPUpdateClimbTarget(float* DeltaSeconds, bool* bClimbing, struct FVector* AnchorPosition, struct FVector* AnchorNormal, bool* bCanClimb, bool* bCanLand, struct FVector* ClimbLocation, struct FVector* ClimbNormal, bool* bHudVisible);
};

// 0x48 (0x10E8 - 0x10A0)
// Class ShooterGame.ShooterWeapon_Instant
class AShooterWeapon_Instant : public AShooterWeapon
{
public:
	uint8                                        Pad_49FC[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UParticleSystem*                       TrailFX;                                           // 0x10A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       TrailFX_Local;                                     // 0x10B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TrailTargetParam;                                  // 0x10B8(0x8)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OriginCheckDistance;                               // 0x10C0(0x4)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49FD[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        NumTracesPerShot;                                  // 0x10D8(0x4)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49FE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bPlayFireSoundOnInstantHit : 1;                    // Mask: 0x1, PropSize: 0x10x10E0(0x1)(ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bExecSpread : 1;                                   // Mask: 0x2, PropSize: 0x10x10E0(0x1)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFireFromMuzzle : 1;                               // Mask: 0x4, PropSize: 0x10x10E0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventSimulatingMultipleShots : 1;               // Mask: 0x8, PropSize: 0x10x10E0(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPerformObstructionCheck : 1;                      // Mask: 0x10, PropSize: 0x10x10E0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSpawnTrailToHit : 1;                              // Mask: 0x20, PropSize: 0x10x10E0(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClampTrailToMaxWeaponRange : 1;                   // Mask: 0x40, PropSize: 0x10x10E0(0x1)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSpawnImpactEffects : 1;                      // Mask: 0x80, PropSize: 0x10x10E0(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowNativeWithSpawnedImpacts : 1;                // Mask: 0x1, PropSize: 0x10x10E1(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRotateTrailFXByFireDirection : 1;                 // Mask: 0x2, PropSize: 0x10x10E1(0x1)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAttachTrailFXToFirstPersonMuzzle : 1;             // Mask: 0x4, PropSize: 0x10x10E1(0x1)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetCurrentSpread : 1;                        // Mask: 0x8, PropSize: 0x10x10E1(0x1)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPKillImpactEffects : 1;                       // Mask: 0x10, PropSize: 0x10x10E1(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49FF[0x6];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterWeapon_Instant* GetDefaultObj();

	int32 SimulateInstantHit(struct FVector* Origin);
	TArray<struct FVector_NetQuantizeNormal> ServerNotifyShotOrigin(struct FVector* Origin, TArray<struct FHitResult>* Impacts);
	TArray<struct FVector_NetQuantizeNormal> ServerNotifyShot(TArray<struct FHitResult>* Impacts);
	struct FVector ServerForceShot();
	struct FVector NetSimulateForceShot();
	struct FVector GetFireLocationAndDirection(struct FVector* Location);
	float GetCurrentSpread();
	void CheckRefireTimer();
	float BPSpawnImpactEffects();
	struct FVector BPPostSpawnTrailEffect();
	void BPKillImpactEffects();
	float BPGetCurrentSpread();
};

// 0x10 (0x10F8 - 0x10E8)
// Class ShooterGame.ShooterWeapon_InstantCharging
class AShooterWeapon_InstantCharging : public AShooterWeapon_Instant
{
public:
	uint8                                        bDidFireWeapon : 1;                                // Mask: 0x1, PropSize: 0x10x10E8(0x1)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3DE : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4A00[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ChargeStartTime;                                   // 0x10F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AShooterWeapon_InstantCharging* GetDefaultObj();

	void ServerSetCharging(double StartTime);
};

// 0x68 (0x1150 - 0x10E8)
// Class ShooterGame.ShooterWeapon_InstantPenetrating
class AShooterWeapon_InstantPenetrating : public AShooterWeapon_Instant
{
public:
	float                                        MaxPenetrationTraceDistance;                       // 0x10E8(0x4)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PenaltyPerPenetration;                             // 0x10EC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PenaltyPerUnrealUnit;                              // 0x10F0(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPStopPenetratingAtHit;                        // 0x10F4(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A05[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bDebugPenetration : 1;                             // Mask: 0x1, PropSize: 0x10x10F8(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A06[0x57];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterWeapon_InstantPenetrating* GetDefaultObj();

	float WeaponPenetrationTrace(struct FVector* Start, struct FVector* End, bool bDebugDraw);
	int32 PassiveUseAmmo(int32* Amount);
	bool BPStopPenetratingAtHit();
};

// 0xE8 (0x1190 - 0x10A8)
// Class ShooterGame.ShooterWeapon_MeleeLock
class AShooterWeapon_MeleeLock : public AShooterWeapon_Melee
{
public:
	uint8                                        Pad_4A07[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LockValue;                                         // 0x10B0(0x4)(Edit, BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LockVFXValue;                                      // 0x10B4(0x4)(ConstParm, ExportObject, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastAttackTime;                                    // 0x10B8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	double                                       LastHitTime;                                       // 0x10C0(0x8)(Edit, ConstParm, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         HitThisAttack;                                     // 0x10C8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A08[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LockDecayValue;                                    // 0x10CC(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LockHitIncrement;                                  // 0x10D0(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LockMissDecrement;                                 // 0x10D4(0x4)(Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ESimpleCurve                      AnimationRateCurve;                                // 0x10D8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A09[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinAnimationRate;                                  // 0x10DC(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxAnimationRate;                                  // 0x10E0(0x4)(BlueprintVisible, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ESimpleCurve                      DamageCurve;                                       // 0x10E4(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A0A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinDamageMultiplier;                               // 0x10E8(0x4)(ConstParm, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDamageMultiplier;                               // 0x10EC(0x4)(Edit, ConstParm, BlueprintVisible, Net, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             TargetBuff_MaxDamage;                              // 0x10F0(0x30)(BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             OwnerBuff_MaxDamage;                               // 0x1120(0x30)(Edit, BlueprintReadOnly, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LockTurnRate;                                      // 0x1150(0x4)(ConstParm, ExportObject, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinPullDistance;                                   // 0x1154(0x4)(Edit, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxPullDistance;                                   // 0x1158(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxTargetDistance;                                 // 0x115C(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TargetAngle;                                       // 0x1160(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxLockTime;                                       // 0x1164(0x4)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AttackMoveSpeed;                                   // 0x1168(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AttackAirImpulse;                                  // 0x116C(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AttackMoveDuration;                                // 0x1170(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxPowerThreshold;                                 // 0x1174(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A0B[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bSteppingEnabled;                                  // 0x118C(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A0C[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterWeapon_MeleeLock* GetDefaultObj();

	void OnRep_LockValue();
	void EndMeleeAttack();
};

// 0x80 (0x1120 - 0x10A0)
// Class ShooterGame.ShooterWeapon_Placer
class AShooterWeapon_Placer : public AShooterWeapon
{
public:
	class UClass*                                StructureToPlace;                                  // 0x10A0(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           SecondaryActionAnim;                               // 0x10A8(0x10)(Edit, ConstParm, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           UnableToPlaceAnim;                                 // 0x10B8(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           PlaceOnSelfAnim;                                   // 0x10C8(0x10)(BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           EquipItemAnim;                                     // 0x10D8(0x10)(ExportObject, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanDetonateExplosives : 1;                        // Mask: 0x1, PropSize: 0x10x10E8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideLeftArmFPVWhenNoAmmo : 1;                     // Mask: 0x2, PropSize: 0x10x10E8(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPlaySecondaryActionAnim : 1;                      // Mask: 0x4, PropSize: 0x10x10E8(0x1)(Edit, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAnimNotifyToPlaceStructure : 1;                // Mask: 0x8, PropSize: 0x10x10E8(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bModifyDetonatorMaterial : 1;                      // Mask: 0x10, PropSize: 0x10x10E8(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPlacingStructureConsumeItemAmmo : 1;              // Mask: 0x20, PropSize: 0x10x10E8(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontPlaceStructureOnFire : 1;                     // Mask: 0x40, PropSize: 0x10x10E8(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSecondaryAction : 1;                         // Mask: 0x80, PropSize: 0x10x10E8(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreFireAction : 1;                           // Mask: 0x1, PropSize: 0x10x10E9(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSkipStartPlacingCheatCheck : 1;                   // Mask: 0x2, PropSize: 0x10x10E9(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3DF : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4A0D[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TimeToHideLeftArmFPV;                              // 0x10EC(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExplosiveBoneName;                                 // 0x10F0(0x8)(ConstParm, ExportObject, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                ItemToPlace3P;                                     // 0x10F8(0x8)(ConstParm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemAttachPoint3P;                                 // 0x1100(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DetonateExplosivesMaxRadius;                       // 0x1108(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ChangeMaterialDiffrentBehaviour;                   // 0x110C(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHiddenExplosive;                                  // 0x110D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWaitingForPlacement;                              // 0x110E(0x1)(BlueprintVisible, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A0E[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PlacementWaitTimeFromEquip;                        // 0x1110(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinimumTimeBetweenPlacements;                      // 0x1114(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A0F[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterWeapon_Placer* GetDefaultObj();

	void ServerDetonateExplosives();
	void PlaceStructureWithSecondaryAction();
	void GetPlacementOrigin(const struct FVector& OriginLocation, const struct FRotator& OriginRotation);
	bool BPSecondaryAction();
	void BPPrefireAction();
};

// 0x60 (0x1108 - 0x10A8)
// Class ShooterGame.ShooterWeapon_Whip
class AShooterWeapon_Whip : public AShooterWeapon_Melee
{
public:
	class UClass*                                StunBuff;                                          // 0x10A8(0x8)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                BlockedByShieldBuff;                               // 0x10B0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                HerdDinoBuff;                                      // 0x10B8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               HarvestingBoxExtent;                               // 0x10C0(0x18)(Edit, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               HarvestingWhipTipOffset;                           // 0x10D8(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDinoDragWeightToApplyBuff;                      // 0x10F0(0x4)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxFlyerDinoDragWeightToApplyBuff;                 // 0x10F4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DurabilityMultiplierForFriendDinos;                // 0x10F8(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DurabilityMultiplierForHarvesting;                 // 0x10FC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A10[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterWeapon_Whip* GetDefaultObj();

};

// 0x0 (0x68 - 0x68)
// Class ShooterGame.SilentDamageType
class USilentDamageType : public UPrimalDamageType
{
public:

	static class UClass* StaticClass();
	static class USilentDamageType* GetDefaultObj();

};

// 0x0 (0x4C0 - 0x4C0)
// Class ShooterGame.HideActorList
class AHideActorList : public AActor
{
public:

	static class UClass* StaticClass();
	static class AHideActorList* GetDefaultObj();

	void HandleHideActorsList(class UObject** WorldContextObject);
	class FName GetDomeTag();
	enum class EDomeState GetDomeState();
};

// 0x78 (0x538 - 0x4C0)
// Class ShooterGame.SkyBoxLoader
class ASkyBoxLoader : public AHideActorList
{
public:
	TArray<struct FSoftObjectPath>               SkyBoxStringReferences;                            // 0x4C0(0x10)(BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSoftObjectPath>               FogScatterStringReferences;                        // 0x4D0(0x10)(ConstParm, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSoftObjectPath>               FogLossStringReferences;                           // 0x4E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSkyBoxLoadedStatus>           LoadedStatus;                                      // 0x4F0(0x10)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    LoadedSkyTextures;                                 // 0x500(0x10)(BlueprintVisible, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    LoadedFogScatterTextures;                          // 0x510(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    LoadedFogLossTextures;                             // 0x520(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A14[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ASkyBoxLoader* GetDefaultObj();

	bool SetSkyTextureIndices(int32 Texture0, int32 Texture1);
	bool LoadSkyTextureIndexArray(const TArray<int32>& TextureInices);
	bool LoadSkyTextureIndex(int32 TextureIdx);
	void K2_OnTextureIndicesLoaded(const TArray<int32>& TextureIndices);
};

// 0x2E0 (0x7A0 - 0x4C0)
// Class ShooterGame.SOTFNotification
class ASOTFNotification : public AActor
{
public:
	float                                        NightBloomMultiplier;                              // 0x4C0(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EffectScale;                                       // 0x4C4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               BackgroundOffset;                                  // 0x4C8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UStaticMesh*                           BackgroundMesh;                                    // 0x4E0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              BackgroundRotation;                                // 0x4E8(0x18)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BackgroundMeshScale;                               // 0x500(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BackgroundMeshDoubleScale;                         // 0x504(0x4)(ConstParm, ExportObject, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PreviewImageBloom;                                 // 0x508(0x4)(Net, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FadeOutInterval;                                   // 0x50C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FadeInInterval;                                    // 0x510(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAnimateScaling : 1;                               // Mask: 0x1, PropSize: 0x10x514(0x1)(ConstParm, BlueprintVisible, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3E0 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4A17[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LightBrightness;                                   // 0x518(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A18[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              LightRotation;                                     // 0x520(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GapBetweenPlayerImages;                            // 0x538(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                BannerEliminationTextColor;                        // 0x53C(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                BannerVictoryTextColor;                            // 0x540(0x4)(Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BannerTextBloom;                                   // 0x544(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BannerTextFontScale;                               // 0x548(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinSizePerPlayer;                                  // 0x54C(0x4)(Edit, ConstParm, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               BannerTextOffset;                                  // 0x550(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                EliminationText;                                   // 0x568(0x10)(Edit, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                VictoryText;                                       // 0x578(0x10)(ConstParm, ExportObject, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ScrollingTextFadePower;                            // 0x588(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ScrollingTextSpeed;                                // 0x58C(0x4)(BlueprintVisible, BlueprintReadOnly, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ScrollingTextBloom;                                // 0x590(0x4)(ConstParm, ExportObject, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ScrollingTextInterval;                             // 0x594(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ScrollingTextOffset;                               // 0x598(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ScrollingTextLifeTime;                             // 0x5B0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ScrollingTextDoubleMultiplier;                     // 0x5B4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ScrollingTextScale;                                // 0x5B8(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ScrollingTextCount;                                // 0x5BC(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                ScrollingTextColor;                                // 0x5C0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A19[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               PreviewCameraLocation;                             // 0x5C8(0x18)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              PreviewCameraRotation;                             // 0x5E0(0x18)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreviewCameraFOV;                                  // 0x5F8(0x4)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A1A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              PreviewMeshRotation;                               // 0x600(0x18)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ESkyLightSourceType               AmbientSourceType;                                 // 0x618(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A1B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UTextureCube*                          AmbientCubemap;                                    // 0x620(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	struct FColor                                AmbientLightColor;                                 // 0x628(0x4)(ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AmbientBrightness;                                 // 0x62C(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UFont*                                 TextFont;                                          // 0x630(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterial*                             TextMaterial;                                      // 0x638(0x8)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              TextRotation;                                      // 0x640(0x18)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerNameFontSize;                                // 0x658(0x4)(Edit, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A1C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               PlayerNameOffset;                                  // 0x660(0x18)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerNameTextBloom;                               // 0x678(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A1D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               DeathReasonOffset;                                 // 0x680(0x18)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DeathReasonFontSize;                               // 0x698(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                DeathReasonTextColor;                              // 0x69C(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DeathReasonTextBloom;                              // 0x6A0(0x4)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                PlayerNameTextColor;                               // 0x6A4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UStaticMesh*                           PlayerImageMesh;                                   // 0x6A8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             DeathSound;                                        // 0x6B0(0x8)(Edit, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundCue*                             TribeEliminatedSound;                              // 0x6B8(0x8)(Edit, ConstParm, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            PlayerDeathMusic1;                                 // 0x6C0(0x8)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            PlayerDeathMusic2;                                 // 0x6C8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            TribeEliminationMusic;                             // 0x6D0(0x8)(Edit, ConstParm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            VictoryMusic;                                      // 0x6D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DefaultNotificationInterval;                       // 0x6E0(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A1E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSOTFNotificationInfo>         NotificationsQueue;                                // 0x6E8(0x10)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSOTFNotificationInfo                 CurrentNotification;                               // 0x6F8(0x78)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class AShooterCharacter*>             PreviewCharacter;                                  // 0x770(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UPreviewImage*>                 PreviewImages;                                     // 0x780(0x10)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A1F[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ASOTFNotification* GetDefaultObj();

	float ComputeHeadHairMorphTargetValue(bool bFemale, uint8 HairIndex, float PercentOfGrowth);
	float ComputeFacialHairMorphTargetValue(bool bFemale, uint8 HairIndex, float PercentOfGrowth);
	struct FLinearColor ColorBG();
};

// 0x58 (0x518 - 0x4C0)
// Class ShooterGame.SOTFNotificationDisplay
class ASOTFNotificationDisplay : public AActor
{
public:
	class ASOTFNotification*                     NotificationSystem;                                // 0x4C0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FScrollingTextInfo>            ScrollableTexts;                                   // 0x4C8(0x10)(Edit, BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPlayerPreviewImage>           CachedPlayerImages;                                // 0x4D8(0x10)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FBannerTextInfo                       BannerText;                                        // 0x4E8(0x18)(Edit, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastScrollingTextActivationTime;                   // 0x500(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A20[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ASOTFNotificationDisplay* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class ShooterGame.SoundNodeLocalPlayer
class USoundNodeLocalPlayer : public USoundNode
{
public:

	static class UClass* StaticClass();
	static class USoundNodeLocalPlayer* GetDefaultObj();

};

// 0x8 (0x80 - 0x78)
// Class ShooterGame.SoundNodeDelayedRandom
class USoundNodeDelayedRandom : public USoundNodeRandom
{
public:
	class USoundWave*                            RetainedWave;                                      // 0x78(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundNodeDelayedRandom* GetDefaultObj();

};

// 0x20 (0x68 - 0x48)
// Class ShooterGame.SoundNodeVehicleEngine
class USoundNodeVehicleEngine : public USoundNode
{
public:
	TArray<struct FVehicleEngineDatum>           EngineSamples;                                     // 0x48(0x10)(Edit, ConstParm, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A22[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CurrentRPM;                                        // 0x5C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A23[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USoundNodeVehicleEngine* GetDefaultObj();

};

// 0x80 (0x810 - 0x790)
// Class ShooterGame.SpawnMapWidget
class USpawnMapWidget : public UCustomCanvasWidget
{
public:
	class UMaterialInstance*                     MI;                                                // 0x790(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableMapDrawing;                                // 0x798(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableMarkersAndSpawnPoints;                     // 0x799(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A24[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  FogOfWarTextureParameterName;                      // 0x79C(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeToUpdateTooltipForEachSpawnPoint;              // 0x7A4(0x4)(Edit, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SpawnPointAreaToMapAreaPercentage;                 // 0x7A8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A25[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                SpawnPointUITemplate;                              // 0x7B0(0x8)(BlueprintVisible, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              Map_DynamicMI;                                     // 0x7B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    RegionMarkerMI;                                    // 0x7C0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             RegionMarkerSize;                                  // 0x7C8(0x10)(Edit, ConstParm, ExportObject, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A26[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	class UUI_Spawn*                             SpawnUI;                                           // 0x808(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference)

	static class UClass* StaticClass();
	static class USpawnMapWidget* GetDefaultObj();

};

// 0x10 (0x1C70 - 0x1C60)
// Class ShooterGame.SpherePostProcessVolume
class ASpherePostProcessVolume : public APostProcessVolume
{
public:
	float                                        SphereVolumeRadius;                                // 0x1C60(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A27[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USphereComponent*                      SphereComponent;                                   // 0x1C68(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig)

	static class UClass* StaticClass();
	static class ASpherePostProcessVolume* GetDefaultObj();

};

// 0x0 (0x510 - 0x510)
// Class ShooterGame.FoliageInclusionVolume
class AFoliageInclusionVolume : public AVolume
{
public:

	static class UClass* StaticClass();
	static class AFoliageInclusionVolume* GetDefaultObj();

};

// 0x8 (0x4C8 - 0x4C0)
// Class ShooterGame.HierarchicalInstancedStaticMeshActor
class AHierarchicalInstancedStaticMeshActor : public AActor
{
public:
	class UHierarchicalInstancedStaticMeshComponent* InstancedStaticMeshComponent;                      // 0x4C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, DisableEditOnInstance, GlobalConfig)

	static class UClass* StaticClass();
	static class AHierarchicalInstancedStaticMeshActor* GetDefaultObj();

};

// 0x4B8 (0xC10 - 0x758)
// Class ShooterGame.StatsPanelWidget
class UStatsPanelWidget : public UPrimalUI
{
public:
	class FName                                  MultiUseButton1Name;                               // 0x758(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MultiUseButton2Name;                               // 0x760(0x8)(BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MultiUseButton3Name;                               // 0x768(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MultiUseButton4Name;                               // 0x770(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MultiUseButton5Name;                               // 0x778(0x8)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MultiUseButton6Name;                               // 0x780(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FCustomButtonWidgetStyle              DefaultMultiuseButtonExtendedStyle;                // 0x788(0x48)(ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FButtonStyle                          DefaultMultiuseButtonStyle;                        // 0x7D0(0x3F0)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A28[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStatsPanelWidget* GetDefaultObj();

};

// 0x360 (0xF70 - 0xC10)
// Class ShooterGame.StatsPanelWidget_Character
class UStatsPanelWidget_Character : public UStatsPanelWidget
{
public:
	class FName                                  PlayerStatusBoxName;                               // 0xC10(0x8)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExperienceBoxName;                                 // 0xC18(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  UpgradesBoxName;                                   // 0xC20(0x8)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EquipmentDataListPanelName;                        // 0xC28(0x8)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DisabledEquipmentPanelName;                        // 0xC30(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  GenderSwitcherName;                                // 0xC38(0x8)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NameLabelName;                                     // 0xC40(0x8)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LevelLabelName;                                    // 0xC48(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  TribeLabelName;                                    // 0xC50(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  BiomeRegionLabelName;                              // 0xC58(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SpawnRegionLabelName;                              // 0xC60(0x8)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TameLimitLabelName;                                // 0xC68(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ArmorLabelName;                                    // 0xC70(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HypothermalInsulationLabelName;                    // 0xC78(0x8)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HyperthermalInsulationLabelName;                   // 0xC80(0x8)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HypothermalInsulationNameLabelName;                // 0xC88(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HyperthermalInsulationNameLabelName;               // 0xC90(0x8)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExperienceBarName;                                 // 0xC98(0x8)(ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExperienceLabelName;                               // 0xCA0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StatWidgetNames[0xC];                              // 0xCA8(0x60)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ImprintingStatWidgetName;                          // 0xD08(0x8)(Edit, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ShowAncestorsButtonName;                           // 0xD10(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NumUpgradePointsAvailableLabelName;                // 0xD18(0x8)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HyperthermalInsulationBoxName;                     // 0xD20(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HypothermalInsulationBoxName;                      // 0xD28(0x8)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TameLimitBoxName;                                  // 0xD30(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StatDayValueTextBlockName;                         // 0xD38(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StatTimeValueTextBlockName;                        // 0xD40(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StatTmpValueTextBlockName;                         // 0xD48(0x8)(BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StatWindValueTextBlockName;                        // 0xD50(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A29[0x1E8];                                   // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsOnBuffTab;                                      // 0xF40(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A2A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalCharacterStatusComponent*       StatusCharacter;                                   // 0xF48(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A2B[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                PanelBuffTemplate;                                 // 0xF60(0x8)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A2C[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStatsPanelWidget_Character* GetDefaultObj();

	bool SwitchTabStatsBuff();
	bool OnSwitchTabStatsBuffBP();
};

// 0x80 (0xC90 - 0xC10)
// Class ShooterGame.StatsPanelWidget_Obelisk
class UStatsPanelWidget_Obelisk : public UStatsPanelWidget
{
public:
	class FName                                  NameLabelName;                                     // 0xC10(0x8)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DescriptionLabelName;                              // 0xC18(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  UploadCharacterDataButtonName;                     // 0xC20(0x8)(ConstParm, BlueprintVisible, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TravelToAnotherServerButtonName;                   // 0xC28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RefreshArkButtonName;                              // 0xC30(0x8)(ConstParm, ExportObject, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ArkStorageStatName;                                // 0xC38(0x8)(DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ArkDinoStatName;                                   // 0xC40(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StorageStatName;                                   // 0xC48(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A30[0x40];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStatsPanelWidget_Obelisk* GetDefaultObj();

};

// 0xB0 (0xCC0 - 0xC10)
// Class ShooterGame.StatsPanelWidget_Structure
class UStatsPanelWidget_Structure : public UStatsPanelWidget
{
public:
	class FName                                  EquipmentDataListPanelName;                        // 0xC10(0x8)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DisabledEquipmentPanelName;                        // 0xC18(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StructureNameLabelName;                            // 0xC20(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  OwnerLabelName;                                    // 0xC28(0x8)(Edit, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DescriptionLabelName;                              // 0xC30(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HealthStatName;                                    // 0xC38(0x8)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StorageStatName;                                   // 0xC40(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  WeightStatName;                                    // 0xC48(0x8)(Edit, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A31[0x70];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStatsPanelWidget_Structure* GetDefaultObj();

};

// 0x98 (0x3C8 - 0x330)
// Class ShooterGame.StatWidget
class UStatWidget : public UPrimalUserWidget
{
public:
	class FText                                  StatName;                                          // 0x330(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	class UTexture2D*                            StatIcon;                                          // 0x348(0x8)(BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A32[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	class FName                                  StatTextBlockName;                                 // 0x364(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StatValueBlockName;                                // 0x36C(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StatImageName;                                     // 0x374(0x8)(ExportObject, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StatBarName;                                       // 0x37C(0x8)(Edit, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StatButtonName;                                    // 0x384(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A33[0x24];                                    // Fixing Size After Last Property  > TateDumper <
	class UButton*                               StatUpgradeButton;                                 // 0x3B0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UWidgetSwitcher*                       PulsatingSwitcher;                                 // 0x3B8(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A34[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStatWidget* GetDefaultObj();

	void ClickedButton(class UWidget** ClickedWidget);
};

// 0x110 (0x8A0 - 0x790)
// Class ShooterGame.StoreItemWidget
class UStoreItemWidget : public UCustomCanvasWidget
{
public:
	float                                        ItemPrice;                                         // 0x790(0x4)(BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A35[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ItemName;                                          // 0x798(0x10)(Edit, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_4A36[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSlateBrush                           ItemIcon;                                          // 0x7B0(0xD0)(BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FSlateColor                           ForegroundColor;                                   // 0x880(0x14)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	float                                        PriceOffset;                                       // 0x894(0x4)(Edit, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NameOffset;                                        // 0x898(0x4)(Edit, ConstParm, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A37[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStoreItemWidget* GetDefaultObj();

};

// 0xE8 (0x1A0 - 0xB8)
// Class ShooterGame.StructurePaintingComponent
class UStructurePaintingComponent : public UActorComponent
{
public:
	uint8                                        Pad_4A39[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        PaintingSizeX;                                     // 0xC8(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        PaintingSizeY;                                     // 0xCC(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FColor>                        ColorTable;                                        // 0xD0(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        PaintingTextureUVIndex;                            // 0xE0(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        PaintingRevision;                                  // 0xE4(0x4)(BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        UniquePaintingId;                                  // 0xE8(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance)
	uint8                                        Pad_4A3A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              PreviewCameraRotation;                             // 0xF0(0x18)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               PreviewCameraPivotOffset;                          // 0x108(0x18)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreviewCameraDistanceScaleFactor;                  // 0x120(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreviewCameraDefaultZoomMultiplier;                // 0x124(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreviewCameraMaxZoomMultiplier;                    // 0x128(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bMultiplicativeBlending : 1;                       // Mask: 0x1, PropSize: 0x10x12C(0x1)(Edit, ConstParm, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMirroredTexCoordU : 1;                            // Mask: 0x2, PropSize: 0x10x12C(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsExtraDinoSaddleCanvas : 1;                      // Mask: 0x4, PropSize: 0x10x12C(0x1)(BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bApplyRootBoneTranslationsWhenPainting : 1;        // Mask: 0x8, PropSize: 0x10x12C(0x1)(ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSaveToTribeFlagPainting : 1;                      // Mask: 0x10, PropSize: 0x10x12C(0x1)(Edit, ConstParm, ExportObject, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3E1 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4A3B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  PaintingTextureParamName;                          // 0x130(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastStreamRequestTime;                             // 0x138(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A3C[0x40];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnPaintingTextureSet;                              // 0x180(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ForceReplicateToServer;                            // 0x190(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A3D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                TransparencyReplacedWithBackgroundColor;           // 0x194(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A3E[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStructurePaintingComponent* GetDefaultObj();

	void UnloadExtraPaintingComponent();
	void TryPaintExtraPaintingComponent();
	bool SaveLocalPainting();
	void OnRep_PaintingRevision();
	void OnRep_PaintingId(int32 PrevUniquePaintingId);
	bool HasPaintingTexture();
	void ClientPaint(class AShooterPlayerController* Painter, const TArray<struct FPaintItem>& Paints);
};

// 0x40 (0x550 - 0x510)
// Class ShooterGame.StructurePreventionZoneVolume
class AStructurePreventionZoneVolume : public AVolume
{
public:
	uint8                                        bOnlyPreventInPvE : 1;                             // Mask: 0x1, PropSize: 0x10x510(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyPreventInDedicated : 1;                       // Mask: 0x2, PropSize: 0x10x510(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventAllStructures : 1;                         // Mask: 0x4, PropSize: 0x10x510(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisabled : 1;                                     // Mask: 0x8, PropSize: 0x10x510(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_3E2 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4A40[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class APrimalStructure>> OnlyAllowStructuresOfType;                         // 0x518(0x10)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventionVolumeForcePreventFlyers : 1;           // Mask: 0x1, PropSize: 0x10x528(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventionVolumePreventsFlyers : 1;               // Mask: 0x2, PropSize: 0x10x528(0x1)(ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventionVolumeForceAllowFlyers : 1;             // Mask: 0x4, PropSize: 0x10x528(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventStructureDamageIncrease : 1;               // Mask: 0x8, PropSize: 0x10x528(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bStructurePreventionOnly : 1;                      // Mask: 0x10, PropSize: 0x10x528(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOptionallyEnabled : 1;                            // Mask: 0x20, PropSize: 0x10x528(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceEnabledWhenAllowCaveBuildingPVPIsFalse : 1;  // Mask: 0x40, PropSize: 0x10x528(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceOnGenesis : 1;                               // Mask: 0x80, PropSize: 0x10x528(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsMissionZone : 1;                                // Mask: 0x1, PropSize: 0x10x529(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowUndergroundCheck : 1;                   // Mask: 0x2, PropSize: 0x10x529(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3E3 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4A41[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        StructureDamageMultiplier;                         // 0x52C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	TArray<class FName>                          ForcePreventStructuresWithTheseTags;               // 0x530(0x10)(BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AShooterWeapon>>  PreventUsingWeapons;                               // 0x540(0x10)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AStructurePreventionZoneVolume* GetDefaultObj();

	class AStructurePreventionZoneVolume* BPIsWithinAnyStructurePreventionVolume(class UWorld** ForWorld, bool* bCheckDisabled, bool* bIsForDamageCheck, bool* bIgnoreOptionalVolumes);
};

// 0x60 (0x7B8 - 0x758)
// Class ShooterGame.StructureStatWidget
class UStructureStatWidget : public UPrimalUI
{
public:
	class FText                                  StatName;                                          // 0x758(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	class UTexture2D*                            StatIcon;                                          // 0x770(0x8)(BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StatTextBlockName;                                 // 0x778(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StatValueBlockName;                                // 0x780(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StatImageName;                                     // 0x788(0x8)(ExportObject, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StatBarName;                                       // 0x790(0x8)(Edit, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A42[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStructureStatWidget* GetDefaultObj();

};

// 0x48 (0x508 - 0x4C0)
// Class ShooterGame.SupplyCrateSpawningSettings
class ASupplyCrateSpawningSettings : public AActor
{
public:
	TArray<struct FSupplyCrateSpawnEntry>        LinkedSupplyCrateEntries;                          // 0x4C0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSpawnPointWeights : 1;                         // Mask: 0x1, PropSize: 0x10x4D0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3E4 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4A43[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxNumCrates;                                      // 0x4D4(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DelayBeforeFirstCrate;                             // 0x4D8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDelayBeforeFirstCrate;                          // 0x4DC(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ZoneVolumeMaxNumberOfNPCBuffer;                    // 0x4E0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IntervalBetweenCrateSpawns;                        // 0x4E4(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxIntervalBetweenCrateSpawns;                     // 0x4E8(0x4)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IntervalBetweenMaxedCrateSpawns;                   // 0x4EC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxIntervalBetweenMaxedCrateSpawns;                // 0x4F0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinCrateDistanceFromPlayer;                        // 0x4F4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinCrateDistanceFromStructure;                     // 0x4F8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NoValidSpawnReCheckInterval;                       // 0x4FC(0x4)(BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinTimeBetweenCrateSpawnsAtSamePoint;              // 0x500(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A44[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ASupplyCrateSpawningSettings* GetDefaultObj();

};

// 0xA8 (0x5B8 - 0x510)
// Class ShooterGame.SupplyCrateSpawningVolume
class ASupplyCrateSpawningVolume : public AVolume
{
public:
	TArray<struct FSupplyCrateSpawnEntry>        LinkedSupplyCrateEntries;                          // 0x510(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A45[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSupplyCrateSpawnPointEntry>   LinkedSpawnPointEntries;                           // 0x530(0x10)(Edit, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsEnabled : 1;                                    // Mask: 0x1, PropSize: 0x10x540(0x1)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst)
	uint8                                        bUseSpawnPointWeights : 1;                         // Mask: 0x2, PropSize: 0x10x540(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoSpawnCrateOnTopOfStructures : 1;                // Mask: 0x4, PropSize: 0x10x540(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePreventCrateOnTopOfStructures : 1;           // Mask: 0x8, PropSize: 0x10x540(0x1)(ConstParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReallyUseCrateRequiresLoadedLevel : 1;            // Mask: 0x10, PropSize: 0x10x540(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3E5 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4A46[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxNumCrates;                                      // 0x544(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DelayBeforeFirstCrate;                             // 0x548(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDelayBeforeFirstCrate;                          // 0x54C(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ZoneVolumeMaxNumberOfNPCBuffer;                    // 0x550(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IntervalBetweenCrateSpawns;                        // 0x554(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxIntervalBetweenCrateSpawns;                     // 0x558(0x4)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IntervalBetweenMaxedCrateSpawns;                   // 0x55C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxIntervalBetweenMaxedCrateSpawns;                // 0x560(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SP_IntervalBetweenCrateSpawns;                     // 0x564(0x4)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SP_MaxIntervalBetweenCrateSpawns;                  // 0x568(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SP_IntervalBetweenMaxedCrateSpawns;                // 0x56C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SP_MaxIntervalBetweenMaxedCrateSpawns;             // 0x570(0x4)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SP_NoValidSpawnRecheckInterval;                    // 0x574(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SP_DelayBeforeFirstCrate;                          // 0x578(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SP_MaxDelayBeforeFirstCrate;                       // 0x57C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinCrateDistanceFromPlayer;                        // 0x580(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinCrateDistanceFromStructure;                     // 0x584(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NoValidSpawnReCheckInterval;                       // 0x588(0x4)(BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinTimeBetweenCrateSpawnsAtSamePoint;              // 0x58C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinDistanceFromOtherCrate;                         // 0x590(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CrateSpawningRequiresLoadedDataLayer;              // 0x594(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceRandomSupplyCratePoints;                     // 0x59C(0x1)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A47[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class APrimalStructureItemContainer_SupplyCrate*> MyCrates;                                          // 0x5A0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A48[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ASupplyCrateSpawningVolume* GetDefaultObj();

	void SpawnCratesFromAllVolumes(class UWorld** TheWorld);
	void SpawnCratesFromAllPoints();
	void SetSpawnEnabled(bool* bEnable);
	void CheckForSupplyCrateStart();
	void CheckCrateSpawn();
};

// 0x0 (0x60 - 0x60)
// Class ShooterGame.SwitchMountedDLCManager
class USwitchMountedDLCManager : public UMountedDLCManager
{
public:

	static class UClass* StaticClass();
	static class USwitchMountedDLCManager* GetDefaultObj();

};

// 0x168 (0x8C0 - 0x758)
// Class ShooterGame.TamingListEntryWidget
class UTamingListEntryWidget : public UBaseSelectableButtonWidget
{
public:
	class FString                                ItemLabelName;                                     // 0x758(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          NameLabelColor_Default;                            // 0x768(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          NameLabelColor_Female;                             // 0x778(0x10)(BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          NameLabelColor_Male;                               // 0x788(0x10)(Edit, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          BackgroundColor_Default;                           // 0x798(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          BackgroundColor_Tracked;                           // 0x7A8(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          BackgroundColor_Completed;                         // 0x7B8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SeparatorColor;                                    // 0x7C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DistanceIconTexture;                               // 0x7D8(0x8)(ConstParm, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CompletedIconTexture;                              // 0x7E0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TooltipBackgroundTexture;                          // 0x7E8(0x8)(ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GenderIcon_Male;                                   // 0x7F0(0x8)(OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GenderIcon_Female;                                 // 0x7F8(0x8)(Edit, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A49[0xC0];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTamingListEntryWidget* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.TargetableInterface
class ITargetableInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ITargetableInterface* GetDefaultObj();

	class UObject* ToUObject();
};

// 0x10 (0x4D0 - 0x4C0)
// Class ShooterGame.TargetArea
class ATargetArea : public AActor
{
public:
	float                                        Radius;                                            // 0x4C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4A4A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USphereComponent*                      MySphereComponent;                                 // 0x4C8(0x8)(ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ATargetArea* GetDefaultObj();

};

// 0x50 (0x408 - 0x3B8)
// Class ShooterGame.TargetingInfoToolTipWidget
class UTargetingInfoToolTipWidget : public UToolTipWidget
{
public:
	uint8                                        Pad_4A4C[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTargetingInfoToolTipWidget* GetDefaultObj();

};

// 0x10 (0x340 - 0x330)
// Class ShooterGame.TestItemWidget
class UTestItemWidget : public UPrimalUserWidget
{
public:
	class FString                                ItemLabelName;                                     // 0x330(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UTestItemWidget* GetDefaultObj();

};

// 0x40 (0xF8 - 0xB8)
// Class ShooterGame.TickingHelperComponent
class UTickingHelperComponent : public UActorComponent
{
public:
	struct FTimeRange                            ThrottledTickTimeRange;                            // 0xB8(0x8)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	enum class ETickingGroup                     InitWithTickGroup;                                 // 0xC0(0x1)(Edit, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUsePerFrameTickEvents;                            // 0xC1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseThrottledTickEvents;                           // 0xC2(0x1)(ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A51[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnPerFrameTickEvent;                               // 0xC8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnThrottledTickEvent;                              // 0xD8(0x10)(ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A52[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTickingHelperComponent* GetDefaultObj();

	void SetComponentTickGroup(enum class ETickingGroup NewTickGroup);
	float OnThrottledTick();
};

// 0x128 (0x638 - 0x510)
// Class ShooterGame.TogglePainVolume
class ATogglePainVolume : public AVolume
{
public:
	uint8                                        Pad_4A53[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bEnabled;                                          // 0x560(0x1)(Edit, ConstParm, Parm, ZeroConstructor, Transient, EditConst, GlobalConfig)
	uint8                                        Pad_4A54[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class UObject>>         ActorClassesToExclude;                             // 0x568(0x10)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UObject>>         ActorClassesToInclude;                             // 0x578(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class AEmitter*>                      ToggleEmitters;                                    // 0x588(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        StructureDamageOverlapPoints;                      // 0x598(0x10)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       SavedStructureDamageOverlapPoints;                 // 0x5A8(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StructureDamageOverlapRadius;                      // 0x5B8(0x4)(Edit, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A55[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bPainCausing : 1;                                  // Mask: 0x1, PropSize: 0x10x5C8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3E6 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4A56[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DamagePerSec;                                      // 0x5CC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StructureDamagePerSec;                             // 0x5D0(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A57[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DamageType;                                        // 0x5D8(0x8)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig)
	class UClass*                                StructureDamageType;                               // 0x5E0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PainInterval;                                      // 0x5E8(0x4)(BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEntryPain : 1;                                    // Mask: 0x1, PropSize: 0x10x5EC(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPainWalkingOnly : 1;                              // Mask: 0x2, PropSize: 0x10x5EC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBeginOverlapEvent : 1;                         // Mask: 0x4, PropSize: 0x10x5EC(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseEndOverlapEvent : 1;                           // Mask: 0x8, PropSize: 0x10x5EC(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCausedPainEvent : 1;                           // Mask: 0x10, PropSize: 0x10x5EC(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreWildDinos : 1;                              // Mask: 0x20, PropSize: 0x10x5EC(0x1)(ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTriggerUndermeshDetection : 1;                    // Mask: 0x40, PropSize: 0x10x5EC(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3E7 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4A58[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class AController*                           DamageInstigator;                                  // 0x5F0(0x8)(Edit, ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            BeginOverlapEvent;                                 // 0x5F8(0x10)(Edit, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            EndOverlapEvent;                                   // 0x608(0x10)(OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            CausedPainEvent;                                   // 0x618(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DelayTogglePainActive;                             // 0x628(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A59[0xC];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ATogglePainVolume* GetDefaultObj();

	void SetPainVolumeEnabled(bool* bEnable);
	void OnInterpToggle(bool* bEnable);
	void OnEndOverlap(class AActor* OverlappedActor, class AActor** Actor);
	void OnBeginOverlap(class AActor* OverlappedActor, class AActor** Actor);
	void GetOverlappedActors(const TArray<class AActor*>& OutActors);
	int32 GetOverlappedActorNum();
};

// 0x18 (0x348 - 0x330)
// Class ShooterGame.ToolTipWidgetPrimalStructureModuleItemsToDisplay
class UToolTipWidgetPrimalStructureModuleItemsToDisplay : public UPrimalUserWidget
{
public:
	class UClass*                                DisplayItemListEntryTemplate;                      // 0x330(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A5A[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UToolTipWidgetPrimalStructureModuleItemsToDisplay* GetDefaultObj();

};

// 0x10 (0x340 - 0x330)
// Class ShooterGame.ToolTipWidgetPrimalStructureModuleItemsToDisplayListItem
class UToolTipWidgetPrimalStructureModuleItemsToDisplayListItem : public UPrimalUserWidget
{
public:
	uint8                                        Pad_4A5B[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UToolTipWidgetPrimalStructureModuleItemsToDisplayListItem* GetDefaultObj();

};

// 0x9D8 (0x1130 - 0x758)
// Class ShooterGame.TrackedDinoListEntryWidget
class UTrackedDinoListEntryWidget : public UBaseSelectableButtonWidget
{
public:
	class FString                                ItemLabelName;                                     // 0x758(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          NameLabelColor_Default;                            // 0x768(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          NameLabelColor_Female;                             // 0x778(0x10)(BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          NameLabelColor_Male;                               // 0x788(0x10)(Edit, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          BackgroundColor_Default;                           // 0x798(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          BackgroundColor_Tracked;                           // 0x7A8(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          BackgroundColor_Completed;                         // 0x7B8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SeparatorColor;                                    // 0x7C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DistanceIconTexture;                               // 0x7D8(0x8)(ConstParm, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CompletedIconTexture;                              // 0x7E0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TooltipBackgroundTexture;                          // 0x7E8(0x8)(ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GenderIcon_Male;                                   // 0x7F0(0x8)(OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GenderIcon_Female;                                 // 0x7F8(0x8)(Edit, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PlayerIcon;                                        // 0x800(0x8)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A5C[0x138];                                   // Fixing Size After Last Property  > TateDumper <
	struct FButtonStyle                          DefaultButtonStyle;                                // 0x940(0x3F0)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FButtonStyle                          TrackedButtonStyle;                                // 0xD30(0x3F0)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        WidgetIndex;                                       // 0x1120(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A5D[0xC];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTrackedDinoListEntryWidget* GetDefaultObj();

	void RecentlyUpdatedInfoTimerEnd();
	void OnPOIOptButtonPressed();
	void OnPOIOptButton_SelectedPressed();
	void OnFavoriteButtonPressed();
	void OnFavoriteButton_SelectedPressed();
	bool BPOnFavoriteButtonPressed(bool Handled);
};

// 0xB0 (0x808 - 0x758)
// Class ShooterGame.TrackingItemUI
class UTrackingItemUI : public UPrimalUI
{
public:
	uint8                                        Pad_4A5E[0x98];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        TrackingResourcesItem;                             // 0x7F0(0x10)(Edit, ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A5F[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTrackingItemUI* GetDefaultObj();

	void UpdateTrackingInfoBP();
	class UClass* StopTrackItem();
	int32 RemoveInfoTrackIndex();
};

// 0x80 (0x7D8 - 0x758)
// Class ShooterGame.TradeItemButtonWidget
class UTradeItemButtonWidget : public UBaseSelectableButtonWidget
{
public:
	class FName                                  ItemCostTextBlockName;                             // 0x758(0x8)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemQuantityTextBlockName;                         // 0x760(0x8)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemImageName;                                     // 0x768(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemWeightTextBlockName;                           // 0x770(0x8)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          CanAffordPriceText;                                // 0x778(0x10)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          TooExpensivePriceText;                             // 0x788(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSelectOnClicked : 1;                              // Mask: 0x1, PropSize: 0x10x798(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A60[0x3F];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTradeItemButtonWidget* GetDefaultObj();

};

// 0x18 (0x770 - 0x758)
// Class ShooterGame.TribeManagerListButton
class UTribeManagerListButton : public UBaseSelectableButtonWidget
{
public:
	uint8                                        bSelectOnClicked : 1;                              // Mask: 0x1, PropSize: 0x10x758(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A61[0x17];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTribeManagerListButton* GetDefaultObj();

};

// 0x40 (0x798 - 0x758)
// Class ShooterGame.TribeMemberButtonWidget
class UTribeMemberButtonWidget : public UBaseSelectableButtonWidget
{
public:
	uint8                                        bSelectOnClicked : 1;                              // Mask: 0x1, PropSize: 0x10x758(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A62[0x3F];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTribeMemberButtonWidget* GetDefaultObj();

};

// 0x30 (0x788 - 0x758)
// Class ShooterGame.TribeWarButtonWidget
class UTribeWarButtonWidget : public UBaseSelectableButtonWidget
{
public:
	uint8                                        bSelectOnClicked : 1;                              // Mask: 0x1, PropSize: 0x10x758(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A63[0x2F];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTribeWarButtonWidget* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class ShooterGame.TriggerEffectLibrary
class UTriggerEffectLibrary : public UDataAsset
{
public:
	TArray<struct FTriggerEffectLibraryEntry>    Library;                                           // 0x30(0x10)(ExportObject, Net, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UTriggerEffectLibrary* GetDefaultObj();

};

// 0x10 (0x768 - 0x758)
// Class ShooterGame.UIMainModShop
class UUIMainModShop : public UPrimalUI
{
public:
	uint8                                        Pad_4A64[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         ModUninstallDialogOpen;                            // 0x760(0x1)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A65[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUIMainModShop* GetDefaultObj();

	void OnUserAuthenticated();
	int64 OnRequestedModPage();
	bool IsModInstallPageOpen();
	bool GamepadChangeTab();
	void CloseModInstallPage();
};

// 0x498 (0xBF0 - 0x758)
// Class ShooterGame.UI_AdminMangment
class UUI_AdminMangment : public UPrimalUI
{
public:
	uint8                                        Pad_4A6A[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	class FName                                  FPSValueName;                                      // 0x7B0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NumConnectedName;                                  // 0x7B8(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NumBannedName;                                     // 0x7C0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NumWhiteListedName;                                // 0x7C8(0x8)(Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MaxStructuresInRangeName;                          // 0x7D0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RemoveFromWhiteListButtonName;                     // 0x7D8(0x8)(Edit, ConstParm, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CancelCheatCommandButtonName;                      // 0x7E0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExcuteCheatCommandButtonName;                      // 0x7E8(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CopyPlayerIDCheatCommandButtonName;                // 0x7F0(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CopySteamIDCheatCommandButtonName;                 // 0x7F8(0x8)(Edit, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CheatsScrollBoxName;                               // 0x800(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                CheatSlotButtonTemplate;                           // 0x808(0x8)(Edit, ExportObject, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A6B[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class FName                                  CancelManualBanButtonName;                         // 0x820(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExcuteManualBanButtonName;                         // 0x828(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CancelManualwhiteListedButtonName;                 // 0x830(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExcuteManualwhiteListedButtonName;                 // 0x838(0x8)(Edit, ExportObject, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  KickButtonName;                                    // 0x840(0x8)(Edit, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RefreshButtonName;                                 // 0x848(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ParamtersPanelName;                                // 0x850(0x8)(Edit, BlueprintVisible, ExportObject, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ManualBanPanelName;                                // 0x858(0x8)(Edit, ConstParm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ManualWhiteListedPaneName;                         // 0x860(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ConnectedPlayerPanelName;                          // 0x868(0x8)(ExportObject, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RefreshingConnectedPlayerPanelName;                // 0x870(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  BannedPlayerPanelName;                             // 0x878(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RefreshingBannedPlayerPanelName;                   // 0x880(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  WhiteListedPlayerPanelName;                        // 0x888(0x8)(Edit, ConstParm, ExportObject, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RefreshingWhiteListedPlayerPanelName;              // 0x890(0x8)(ExportObject, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ParmterTextFieldName;                              // 0x898(0x8)(Edit, BlueprintVisible, ExportObject, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ChetFunctionSelectedImageName;                     // 0x8A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DifficultyOffsetName;                              // 0x8A8(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  GlobalVoiceChatName;                               // 0x8B0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ProximityChatName;                                 // 0x8B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NoTributeDownloadsName;                            // 0x8C0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AllowThirdPersonPlayerName;                        // 0x8C8(0x8)(Edit, ConstParm, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AlwaysNotifyPlayerLeftName;                        // 0x8D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DontAlwaysNotifyPlayerJoinedName;                  // 0x8D8(0x8)(BlueprintVisible, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AddToWhiteListButtonName;                          // 0x8E0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ManualAddToWhiteListButtonName;                    // 0x8E8(0x8)(Edit, ConstParm, BlueprintVisible, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ServerHardcoreName;                                // 0x8F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ServerPVEName;                                     // 0x8F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ServerCrosshairName;                               // 0x900(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ServerForceNoHUDName;                              // 0x908(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FunctionDiscriptionName;                           // 0x910(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ShowMapPlayerLocationName;                         // 0x918(0x8)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ServerPasswordName;                                // 0x920(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ServerAdminPasswordName;                           // 0x928(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PositionName;                                      // 0x930(0x8)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MessgaeOfTheDayName;                               // 0x938(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SetMessgaeOfTheDayName;                            // 0x940(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AllConnectedPlayerScrollBoxName;                   // 0x948(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AllBannedPlayerScrollBoxName;                      // 0x950(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AllWhiteListedPlayerScrollBoxName;                 // 0x958(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ServerScrollBoxName;                               // 0x960(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SlotButtonTemplate;                                // 0x968(0x8)(Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ServerInfoButtonTemplate;                          // 0x970(0x8)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  BanButtonName;                                     // 0x978(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ManualBanButtonName;                               // 0x980(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EnterPramterName;                                  // 0x988(0x8)(Edit, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  UnBanButtonName;                                   // 0x990(0x8)(Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CloseButtonName;                                   // 0x998(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DirectMessageTextFieldName;                        // 0x9A0(0x8)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DirectMessageButtonName;                           // 0x9A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ErrorBlockName;                                    // 0x9B0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ErrorBlockManualBanName;                           // 0x9B8(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ErrorBlockManualWhiteListedName;                   // 0x9C0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ErrorBlockMessageOfTheDayName;                     // 0x9C8(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ManualBanningSteamIDTextFieldName;                 // 0x9D0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ManualWhiteListedSteamIDTextFieldName;             // 0x9D8(0x8)(Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              OwnerPlayerController;                             // 0x9E0(0x8)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CustomGameUIButtonName;                            // 0x9E8(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UServerInfoInfoEntryButton*            FPSEntry;                                          // 0x9F0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A6C[0x40];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxDirectMessageChars;                             // 0xA38(0x4)(Edit, ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxSteamIDChars;                                   // 0xA3C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxMessageofthedayChars;                           // 0xA40(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A6D[0x1AC];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_AdminMangment* GetDefaultObj();

	class FText OnTextCommittedWhiteListed(enum class ETextCommit* CommitMethod);
	class FText OnTextCommittedMessageOfTheDay(enum class ETextCommit* CommitMethod);
	class FText OnTextCommittedManualBan(enum class ETextCommit* CommitMethod);
	class FText OnTextCommitted(enum class ETextCommit* CommitMethod);
	class FText OnTextChangedMessageOfTheDay();
	class FText OnTextChangedManulaBan();
	class FText OnTextChangedManualWhiteLised();
	class FText OnTextChanged();
};

// 0x90 (0x7E8 - 0x758)
// Class ShooterGame.UI_AllPlayersList
class UUI_AllPlayersList : public UPrimalUI
{
public:
	class FName                                  CloseButtonName;                                   // 0x758(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AllPlayersListBoxName;                             // 0x760(0x8)(ConstParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SlotButtonTemplate;                                // 0x768(0x8)(Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A6E[0x78];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_AllPlayersList* GetDefaultObj();

	class FText OnTribeNameFilterChanged();
	class FText OnPlayerNameFilterChanged();
};

// 0xE0 (0x838 - 0x758)
// Class ShooterGame.UI_ChatBox
class UUI_ChatBox : public UPrimalUI
{
public:
	class UClass*                                ChatMessageUITemplate;                             // 0x758(0x8)(ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ServerBroadCastMessageUITemplate;                  // 0x760(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ChatBoxName;                                       // 0x768(0x10)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                EditTextBoxName;                                   // 0x778(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                SendingModelLabelName;                             // 0x788(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                InputBoxName;                                      // 0x798(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DisplayModeLabelName;                              // 0x7A8(0x8)(Edit, ExportObject, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CanavasPanelName;                                  // 0x7B0(0x8)(Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ServerSenderText;                                  // 0x7B8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ChatHistoryLimit;                                  // 0x7C8(0x4)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A70[0x6C];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_ChatBox* GetDefaultObj();

	void SwitchChatMode();
	void OnChatUITapped();
	class FText HandleChatTextCommitted(enum class ETextCommit* CommitMethod);
	class FText HandleChatTextChanged();
};

// 0x78 (0x7D0 - 0x758)
// Class ShooterGame.UI_ChatMessage
class UUI_ChatMessage : public UPrimalUI
{
public:
	class FString                                ChatBlockName;                                     // 0x758(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A71[0x68];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_ChatMessage* GetDefaultObj();

};

// 0x988 (0x10E0 - 0x758)
// Class ShooterGame.UI_ListSessions
class UUI_ListSessions : public UPrimalUI
{
public:
	struct FSlateColor                           SearchingColor;                                    // 0x758(0x14)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSlateColor                           SearchingCompleteColor;                            // 0x76C(0x14)(Edit, ConstParm, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  JoinButtonName;                                    // 0x780(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RefreshButtonName;                                 // 0x788(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FavoritesButtonName;                               // 0x790(0x8)(BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FavoritesButtonLabelName;                          // 0x798(0x8)(Edit, ConstParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CancelButtonName;                                  // 0x7A0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RentYourOwnServerButtonName;                       // 0x7A8(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MyScrollBoxName;                                   // 0x7B0(0x8)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  SearchingTextBlockName;                            // 0x7B8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SessionsPanelName;                                 // 0x7C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FindSessionTextFieldName;                          // 0x7C8(0x8)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PasswordAcceptButtonName;                          // 0x7D0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DarkBGName;                                        // 0x7D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PasswordCancelButtonName;                          // 0x7E0(0x8)(ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PasswordTextFieldName;                             // 0x7E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PasswordPanelName;                                 // 0x7F0(0x8)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ErrorBlockName;                                    // 0x7F8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ServersCountBlockName;                             // 0x800(0x8)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ShowProtectedSessionsCheckBoxName;                 // 0x808(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ShowAvailableServersCheckBoxName;                  // 0x810(0x8)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ShowServersTypeComboBoxName;                       // 0x818(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ShowPlatformSpecificServersCheckBoxName;           // 0x820(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         PlatformSpecificHidesOfficialTab;                  // 0x828(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         PlatformSpecificHidesFavoritesTab;                 // 0x829(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A78[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  OfficialStatusLabelName;                           // 0x82C(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A79[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                SlotButtonTemplate;                                // 0x838(0x8)(Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                TermsAndConditionsUITemplate;                      // 0x840(0x8)(OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxPasswordChars;                                  // 0x848(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A7A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSlateBrush                           AscendingIcon;                                     // 0x850(0xD0)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSlateBrush                           DescendingIcon;                                    // 0x920(0xD0)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A7B[0x610];                                   // Fixing Size After Last Property  > TateDumper <
	class FString                                ChineseLaunchURL;                                  // 0x1000(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A7C[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class FString                                FilterServerByModIdName;                           // 0x1020(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A7D[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	TMap<int32, int64>                           ModListIndexToIDMap;                               // 0x1088(0x50)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A7E[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_ListSessions* GetDefaultObj();

	void SwapSortAscendingDescending();
	void SlotButtonSelected(class UWidget* TheWidget);
	void SetupModFilterList(class UComboBoxString* ForComboBox);
	void SetupLayout();
	void SetModIdFilter(int64 InFilterServerByModId, const class FString& InFilterServerByModIdName);
	void SetCurrentServerSearchType(int32 ServerType);
	void ResetModIdFilter();
	void RefreshSlotButtons();
	class FText OnTextCommitted(enum class ETextCommit* CommitMethod);
	class FText OnTextChanged();
	enum class ESelectInfo OnSortComboBoxSelectionChanged(const class FString& SelectedItem);
	enum class ESelectInfo OnServersFilterComboBoxSelectionChanged(const class FString& SelectedItem);
	class FString OnServerListingClickedModPopup(bool bNeedInit, int64 ServerID);
	void OnModPopupEventReport(class UPrimalUserWidget* WithUI, int64 ServerID);
	void OnModPopupEventJoin(class UPrimalUserWidget* WithUI, int64 ServerID);
	void OnModPopupEventFavorite(class UPrimalUserWidget* WithUI, int64 ServerID);
	void OnModPopupEventBack(class UPrimalUserWidget* WithUI, int64 ServerID);
	enum class ESelectInfo OnMapComboBoxSelectionChanged(const class FString& SelectedItem);
	enum class ESelectInfo OnGameModeComboBoxSelectionChanged(const class FString& SelectedItem);
	void OnDenyTermsOfServiceDialog();
	void OnCheckBoxChecked(bool InNewState);
	void OnAutoFavoriteChecked(bool InNewState);
	void ForceUpdateServerTypeSelection();
	void FailedLastPlayedShortcut();
	void ChangeSortAscendingDescending(bool Ascending);
	void BPSetupLayout();
};

// 0x10 (0x10F0 - 0x10E0)
// Class ShooterGame.UI_ClusterServersListSessions
class UUI_ClusterServersListSessions : public UUI_ListSessions
{
public:
	class AShooterGameSession*                   ClustersServersListGameSession;                    // 0x10E0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A7F[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_ClusterServersListSessions* GetDefaultObj();

};

// 0xC0 (0x3F0 - 0x330)
// Class ShooterGame.UI_Compass
class UUI_Compass : public UPrimalUserWidget
{
public:
	uint8                                        Pad_4A80[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LatitudeOrigin;                                    // 0x338(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LatitudeScale;                                     // 0x33C(0x4)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LongitudeOrigin;                                   // 0x340(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LongitudeScale;                                    // 0x344(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CompassNorthAngle;                                 // 0x348(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CompassInterpSpeed;                                // 0x34C(0x4)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwingSpeed;                                        // 0x350(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxSwingAngle;                                     // 0x354(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              CurrentCompassAngle;                               // 0x358(0x18)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentSwingAngle;                                 // 0x370(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentSwingFactor;                                // 0x374(0x4)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentSwingTime;                                  // 0x378(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CompassCenterParameterName;                        // 0x37C(0x8)(ConstParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PreviousPawnYaw;                                   // 0x384(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    CompassMI;                                         // 0x388(0x8)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              CompassMID;                                        // 0x390(0x8)(BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             buffRequiredForVisibility;                         // 0x398(0x30)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LongitudeText;                                     // 0x3C8(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LatitudeText;                                      // 0x3D0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A81[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_Compass* GetDefaultObj();

};

// 0x68 (0x7C0 - 0x758)
// Class ShooterGame.UI_ConsoleCommand
class UUI_ConsoleCommand : public UPrimalUI
{
public:
	uint8                                        Pad_4A83[0x60];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ButtonTemplate;                                    // 0x7B8(0x8)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UUI_ConsoleCommand* GetDefaultObj();

	class FText OnTextCommited(enum class ETextCommit* CommitMethod);
	void ButtonSelected(class UWidget* TheWidget);
};

// 0x298 (0x9F0 - 0x758)
// Class ShooterGame.UI_ConsoleDedicated
class UUI_ConsoleDedicated : public UPrimalUI
{
public:
	uint8                                        Pad_4A85[0x90];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                SlotButtonTemplate;                                // 0x7E8(0x8)(Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxDirectMessageChars;                             // 0x7F0(0x4)(Edit, ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExitToMenuButtonName;                              // 0x7F4(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RemoveFromWhiteListButtonName;                     // 0x7FC(0x8)(Edit, ConstParm, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AdminUIButtonName;                                 // 0x804(0x8)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NumWhiteListedName;                                // 0x80C(0x8)(Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  WhiteListedPlayerPanelName;                        // 0x814(0x8)(Edit, ConstParm, ExportObject, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RefreshingWhiteListedPlayerPanelName;              // 0x81C(0x8)(ExportObject, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AddToWhiteListButtonName;                          // 0x824(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AllWhiteListedPlayerScrollBoxName;                 // 0x82C(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  BannedPlayerPanelName;                             // 0x834(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RefreshingBannedPlayerPanelName;                   // 0x83C(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AllBannedPlayerScrollBoxName;                      // 0x844(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  UnBanButtonName;                                   // 0x84C(0x8)(Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TextMessageEditableBoxName;                        // 0x854(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  BroadcastingVoiceTextBlockName;                    // 0x85C(0x8)(Edit, BlueprintVisible, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ServerNameTextBlockName;                           // 0x864(0x8)(ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ServerPassTextBlockName;                           // 0x86C(0x8)(Edit, ConstParm, ExportObject, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  InviteFriendsButtonName;                           // 0x874(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  BanButtonName;                                     // 0x87C(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NumConnectedName;                                  // 0x884(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AllConnectedPlayerScrollBoxName;                   // 0x88C(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ConnectedPlayerPanelName;                          // 0x894(0x8)(ExportObject, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RefreshingConnectedPlayerPanelName;                // 0x89C(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RefreshButtonName;                                 // 0x8A4(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DirectMessageTextFieldName;                        // 0x8AC(0x8)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DirectMessageButtonName;                           // 0x8B4(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ErrorBlockName;                                    // 0x8BC(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  KickButtonName;                                    // 0x8C4(0x8)(Edit, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NumBannedName;                                     // 0x8CC(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A86[0x11C];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_ConsoleDedicated* GetDefaultObj();

	class UDataListEntryButton* PlayerDoubleClicked();
	class FText OnTextChanged();
	class FText HandleTextMessageTextCommitted(enum class ETextCommit* CommitMethod);
};

// 0x158 (0x8B0 - 0x758)
// Class ShooterGame.UI_Cooking
class UUI_Cooking : public UPrimalUI
{
public:
	TArray<class UClass*>                        DrinkRecipeTemplates;                              // 0x758(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        FoodRecipeTemplates;                               // 0x768(0x10)(BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                NoteItemTemplate;                                  // 0x778(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A87[0x70];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FColor>                        PaletteColors;                                     // 0x7F0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A88[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	class UMaterialInstanceDynamic*              ItemIconMIC;                                       // 0x858(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A89[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_Cooking* GetDefaultObj();

	void RefreshItemLists();
	void RefreshInventoryViewer();
	void OnRefreshColorRegionSlidersBP();
	void OnRedSliderValueChanged(float SliderValue);
	class FText OnItemNameChanged();
	class FText OnItemDescriptionChanged();
	void OnGreenSliderValueChanged(float SliderValue);
	void OnBlueSliderValueChanged(float SliderValue);
	class UDataListEntryButton* MyInventoryItemDoubleClicked();
};

// 0x0 (0x758 - 0x758)
// Class ShooterGame.UI_Cosmetics
class UUI_Cosmetics : public UPrimalUI
{
public:

	static class UClass* StaticClass();
	static class UUI_Cosmetics* GetDefaultObj();

};

// 0x48 (0x7A0 - 0x758)
// Class ShooterGame.UI_CustomOverlay
class UUI_CustomOverlay : public UPrimalUI
{
public:
	class UClass*                                MouseClass;                                        // 0x758(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UUserWidget*                           MouseObject;                                       // 0x760(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         UseArrow;                                          // 0x768(0x1)(BlueprintReadOnly, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A8B[0x37];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_CustomOverlay* GetDefaultObj();

	void UseCirclePointer();
	void UseArrowPointer();
	bool ShowReticule();
	void SetupMouse();
	float SetPointerScale();
	float SetPointerColorAdd();
	void SetMouseVisibility(bool* bIsVisible);
	class APlayerController* SetMousePositionFromPC();
	struct FVector2D SetMousePosition();
	float SetInnerRingScales();
	float SetArrowAlpha();
	int32 AddChildToCanvas();
};

// 0x248 (0x9B0 - 0x768)
// Class ShooterGame.UI_CustomTrackedDinoList
class UUI_CustomTrackedDinoList : public UPrimalSubMenuUI
{
public:
	class UClass*                                TrackedActorListEntryTemplate;                     // 0x768(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            POI_Icon;                                          // 0x770(0x8)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FilterSelectionComboBoxName;                       // 0x778(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A90[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  DinoGroupSelectionComboBoxName;                    // 0x788(0x8)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A91[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  AdditionalSearchTermsTextboxName;                  // 0x798(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A92[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  AdditionalSearchInputTitleName;                    // 0x7A8(0x8)(Edit, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A93[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  ObtainingLatestInfoTextName;                       // 0x7B8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A94[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        WaypointsFilterOptionIndex;                        // 0x7C8(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        FavoritesFilterOptionIndex;                        // 0x7CC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        TeammateFilterOptionIndex;                         // 0x7D0(0x4)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        AllTamesFilterOptionIndex;                         // 0x7D4(0x4)(ConstParm, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A95[0x1D8];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_CustomTrackedDinoList* GetDefaultObj();

	class FText SearchTextChanged();
	void OpenToSpecificEntry(int32 SpecificCharacterID, bool* IsPlayer, bool IsFavorite, bool IsWaypoint);
	enum class ESelectInfo OnFilterSelectionComboBoxSelectionChanged(const class FString& SelectedItem);
	enum class ESelectInfo OnActorGroupSelectionComboBoxSelectionChanged(const class FString& SelectedItem);
	void MarkDinoListEntryWidgetFavorite(int32* ID, bool* IsPlayer);
	class FText AdditionalSearchTermsTextboxChanged();
};

// 0x10 (0x330 - 0x320)
// Class ShooterGame.UI_DebugSpawnMenuEntry
class UUI_DebugSpawnMenuEntry : public UUserWidget
{
public:
	class FString                                EntryName;                                         // 0x320(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UUI_DebugSpawnMenuEntry* GetDefaultObj();

};

// 0x320 (0xA78 - 0x758)
// Class ShooterGame.UI_DebugSpawnMenu
class UUI_DebugSpawnMenu : public UPrimalUI
{
public:
	bool                                         Alphabetize_Rebuild;                               // 0x758(0x1)(ExportObject, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A96[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UTexture2D*>                    FolderIcons;                                       // 0x760(0x10)(Edit, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> DinoBlueprintIDs;                                  // 0x770(0x10)(ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     SaddleBlueprintIDs;                                // 0x780(0x10)(ConstParm, BlueprintVisible, ExportObject, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     SaddleBlueprintIDs2;                               // 0x790(0x10)(Edit, ConstParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ResourceBlueprintIDs;                              // 0x7A0(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     FoodBlueprintIDs;                                  // 0x7B0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     SeedBlueprintIDs;                                  // 0x7C0(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ClothingBlueprintIDs;                              // 0x7D0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     WeaponBlueprintIDs;                                // 0x7E0(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ToolBlueprintIDs;                                  // 0x7F0(0x10)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     AmmoBlueprintIDs;                                  // 0x800(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ThatchStructureBlueprintIDs;                       // 0x810(0x10)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     WoodStructureBlueprintIDs;                         // 0x820(0x10)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     StoneStructureBlueprintIDs;                        // 0x830(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     MetalStructureBlueprintIDs;                        // 0x840(0x10)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ElectricStructureBlueprintIDs;                     // 0x850(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     MiscStructureBlueprintIDs;                         // 0x860(0x10)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     FurnatureStructureBlueprintIDs;                    // 0x870(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     DinoEggBlueprintIDs;                               // 0x880(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     DinoFertEggBlueprintIDs;                           // 0x890(0x10)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     KibbleBlueprintIDs;                                // 0x8A0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     DyeBlueprintIDs;                                   // 0x8B0(0x10)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ArtifactBlueprintIDs;                              // 0x8C0(0x10)(ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     SkinBlueprintIDs;                                  // 0x8D0(0x10)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     TekBlueprintIDs;                                   // 0x8E0(0x10)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCheatMenuCharacterPresetItems> CharacterPresetItems;                              // 0x8F0(0x10)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ScorchedEarthItemBlueprints;                       // 0x900(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ScorchedEarthStructureBlueprintIDs;                // 0x910(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ScorchedEarthDinoSaddles;                          // 0x920(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> ScorchedEarthDinos;                                // 0x930(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ScorchedEarthEggBlueprintIDs;                      // 0x940(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ScorchedEarthFertEggBlueprintIDs;                  // 0x950(0x10)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     AberrationItemBlueprints;                          // 0x960(0x10)(Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     AberrationDinoSaddles;                             // 0x970(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ExtraAberrationDinoSaddles;                        // 0x980(0x10)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> AberrationUniqueDinos;                             // 0x990(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> AberrantDinos;                                     // 0x9A0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     AberrantDinoSaddles;                               // 0x9B0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> CommunityDinos;                                    // 0x9C0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     CommunityDinoSaddles;                              // 0x9D0(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     CommunityItemBlueprints;                           // 0x9E0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ExtinctionItemBlueprints;                          // 0x9F0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ExtinctionDinoSaddles;                             // 0xA00(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> ExtinctionDinos;                                   // 0xA10(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> ExtinctionCorruptedDinos;                          // 0xA20(0x10)(ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ExtinctionEggBlueprintIDs;                         // 0xA30(0x10)(ConstParm, ExportObject, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ExtinctionFertEggBlueprintIDs;                     // 0xA40(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     EventItemsBlueprintIDs;                            // 0xA50(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> EventDinos;                                        // 0xA60(0x10)(ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A97[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_DebugSpawnMenu* GetDefaultObj();

	TArray<class UUI_DebugSpawnMenuEntry*> SortSelection();
};

// 0x198 (0x8F0 - 0x758)
// Class ShooterGame.UI_DepthOfFieldMenu
class UUI_DepthOfFieldMenu : public UPrimalUI
{
public:
	class FName                                  SaveButtonName;                                    // 0x758(0x8)(Edit, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ApplyButtonName;                                   // 0x760(0x8)(BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CancelButtonName;                                  // 0x768(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NearButtonName;                                    // 0x770(0x8)(ExportObject, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MediumButtonName;                                  // 0x778(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FarButtonName;                                     // 0x780(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ClearButtonName;                                   // 0x788(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FocalDistanceSliderName;                           // 0x790(0x8)(Edit, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FocalRegionSliderName;                             // 0x798(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NearTransitionRegionSliderName;                    // 0x7A0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FarTransitionRegionSliderName;                     // 0x7A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ScaleSliderName;                                   // 0x7B0(0x8)(BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MaxBokehSliderName;                                // 0x7B8(0x8)(ConstParm, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  OcclusionSliderName;                               // 0x7C0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FocalDistanceTextBoxName;                          // 0x7C8(0x8)(ConstParm, ExportObject, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FocalRegionTextBoxName;                            // 0x7D0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NearTransitionRegionTextBoxName;                   // 0x7D8(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FarTransitionRegionTextBoxName;                    // 0x7E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ScaleTextBoxName;                                  // 0x7E8(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MaxBokehTextBoxName;                               // 0x7F0(0x8)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  OcclusionTextBoxName;                              // 0x7F8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  BlurModeComboBoxName;                              // 0x800(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A99[0xE8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_DepthOfFieldMenu* GetDefaultObj();

	void OnSliderValueChanged(float SliderValue);
	class FText OnNumericValueCommitted(enum class ETextCommit* CommitMethod);
	bool OnCheckBoxChanged();
};

// 0xE8 (0x850 - 0x768)
// Class ShooterGame.UI_DinoOrderGroups
class UUI_DinoOrderGroups : public UPrimalSubMenuUI
{
public:
	class UClass*                                DinoOrderGroupEntryTemplate;                       // 0x768(0x8)(ConstParm, ExportObject, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ContextMenuClass;                                  // 0x770(0x8)(Edit, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A9A[0xD8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_DinoOrderGroups* GetDefaultObj();

	void RefreshEntries();
	void DinoOrderGroupSelected(class UWidget* TheWidget);
	void DinoClassSelected(class UWidget* TheWidget);
	void DinoCharSelected(class UWidget* TheWidget);
};

// 0x2E0 (0xA38 - 0x758)
// Class ShooterGame.UI_DyeItem
class UUI_DyeItem : public UPrimalUI
{
public:
	class FString                                DyeItemsDataListName;                              // 0x758(0x10)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                BrushItemsDataListName;                            // 0x768(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CloseButtonName;                                   // 0x778(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LoadPaintingsButtonName;                           // 0x780(0x8)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SavePaintingsButtonName;                           // 0x788(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ResetCameraButtonName;                             // 0x790(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemLabelName;                                     // 0x798(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DyeLabelName;                                      // 0x7A0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          DyeRegionButtonsNames;                             // 0x7A8(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DyeButtonName;                                     // 0x7B8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DyeIconImageName;                                  // 0x7C0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DurabilityProgressBarName;                         // 0x7C8(0x8)(Edit, ConstParm, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemIconImageName;                                 // 0x7D0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TitleLabelName;                                    // 0x7D8(0x8)(Edit, ExportObject, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PreviewWidgetName;                                 // 0x7E0(0x8)(ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PaintLabelName;                                    // 0x7E8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EraseAllButtonName;                                // 0x7F0(0x8)(Edit, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  BackgroundImageName;                               // 0x7F8(0x8)(ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PantingListUITemplate;                             // 0x800(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SaveDialogUITemplate;                              // 0x808(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          PlayerPreviewMaterialFloatParameterNamesToReset;   // 0x810(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A9C[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class FName                                  CursorWidgetName;                                  // 0x838(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCosmeticFlagPainting;                             // 0x840(0x1)(Edit, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A9D[0x197];                                   // Fixing Size After Last Property  > TateDumper <
	class UClass*                                CustomHumanAnimInstanceClass;                      // 0x9D8(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A9E[0x58];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_DyeItem* GetDefaultObj();

	void ShowUploadTribeFlagWindow(bool AutoUploadLastPainting, bool* bCloseParentUIAfterFinished);
	bool SavePainting();
	class FText HandleOnSearchTextChanged();
	TArray<struct FBoneModifier> GetBoneMods_Female();
	TArray<struct FBoneModifier> GetBoneMods();
	class UDataListEntryButton* DyeItemDoubleClicked();
	void DrawWithNewDye(bool* UploadingTribeFlag);
	void DeleteLastUploadedTribeFlag();
	void ClearTribeFlag();
};

// 0x128 (0x890 - 0x768)
// Class ShooterGame.UI_EngramsMenu
class UUI_EngramsMenu : public UPrimalSubMenuUI
{
public:
	class FName                                  ARKPrimeEngramsButtonName;                         // 0x768(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ScorchedEarthEngramsButtonName;                    // 0x770(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TekgramsButtonName;                                // 0x778(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LearnEngramButtonTextName;                         // 0x780(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AvailablePointsTextName;                           // 0x788(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  UnlearnedEngramsButtonName;                        // 0x790(0x8)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AberrationEngramsButtonName;                       // 0x798(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExtinctionEngramsButtonName;                       // 0x7A0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  GenesisEngramsButtonName;                          // 0x7A8(0x8)(Edit, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EngramTitleLabelName;                              // 0x7B0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EngramsDataListName;                               // 0x7B8(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EngramFilterTextBoxName;                           // 0x7C0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LearnEngramButtonName;                             // 0x7C8(0x8)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A9F[0xC0];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_EngramsMenu* GetDefaultObj();

	void OnEngramsFilterChanged(bool* bIsChecked);
	class FText OnEngramFilterChanged();
	class UDataListEntryButton* EngramSelected();
	class UDataListEntryButton* EngramDoubleClicked();
};

// 0x78 (0x7D0 - 0x758)
// Class ShooterGame.UI_GenericConfirmationDialog
class UUI_GenericConfirmationDialog : public UPrimalUI
{
public:
	class FName                                  TitleLabelName;                                    // 0x758(0x8)(Edit, ExportObject, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MessageLabelName;                                  // 0x760(0x8)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  GamePadPanelName;                                  // 0x768(0x8)(ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ButtonAcceptConfirmationName;                      // 0x770(0x8)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ButtonDenyConfirmationName;                        // 0x778(0x8)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  GamepadImageAcceptName;                            // 0x780(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  GamepadImageDenyName;                              // 0x788(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AA0[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnClosedEventObject;                               // 0x7C0(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UUI_GenericConfirmationDialog* GetDefaultObj();

	void OverrideCancelButtonText(class FText CancelText);
	void OverrideAcceptButtonText(class FText AcceptText);
	int32 GetSplitscreenLocalPlayerIndex();
};

// 0x250 (0x9A8 - 0x758)
// Class ShooterGame.UI_Hairstyle
class UUI_Hairstyle : public UPrimalUI
{
public:
	class FName                                  TabBgSwitcherName;                                 // 0x758(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  HeadHairEnabledEffectName;                         // 0x760(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FacialHairEnabledEffectName;                       // 0x768(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextActiveColor;                           // 0x770(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextInactiveColor;                         // 0x780(0x10)(OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                HairStyleEntryTemplate;                            // 0x790(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AA1[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AShooterCharacter>      TargetActor;                                       // 0x7F0(0x8)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4AA2[0xC8];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            TheHairStyleSelectedDelegate;                      // 0x8C0(0x10)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            ClearHeadHairButtonClickedDelegate;                // 0x8D0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            ClearFacialHairButtonClickedDelegate;              // 0x8E0(0x10)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AA3[0x40];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          HairMaterialsNames;                                // 0x930(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          HairDyeMaterialsNames;                             // 0x940(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NewHeadHairIndex;                                  // 0x950(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NewEyebrowIndex;                                   // 0x954(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NewFacialHairIndex;                                // 0x958(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NewHeadHairPercent;                                // 0x95C(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NewFacialHairPercent;                              // 0x960(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AA4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                HeadHairDyeID1;                                    // 0x968(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                HeadHairDyeID2;                                    // 0x978(0x10)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                FacialHairDyeID1;                                  // 0x988(0x10)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                FacialHairDyeID2;                                  // 0x998(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UUI_Hairstyle* GetDefaultObj();

	int32 UpdateHeadHairStyleIndex();
	int32 UpdateFacialHairStyleIndex();
	int32 UpdateEyebrowStyleIndex();
	void OnHeadHairStyleButtonClicked(class UWidget* TheWidget);
	void OnFacialHairStyleButtonClicked(class UWidget* TheWidget);
	void OnEyebrowStyleButtonClicked(class UWidget* TheWidget);
	TArray<class UDyeItemSelector*> GetDyeItemSelectors();
	void BPSetupForPreviewMesh();
};

// 0xF0 (0x848 - 0x758)
// Class ShooterGame.UI_HelpPage
class UUI_HelpPage : public UPrimalUI
{
public:
	uint8                                        Pad_4AA5[0xF0];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_HelpPage* GetDefaultObj();

};

// 0x8F8 (0x1050 - 0x758)
// Class ShooterGame.UI_HexagonConversion
class UUI_HexagonConversion : public UPrimalUI
{
public:
	uint8                                        Pad_4AA6[0x138];                                   // Fixing Size After Last Property  > TateDumper <
	class FName                                  ItemIconName;                                      // 0x890(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemIconPanelName;                                 // 0x898(0x8)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemNameTextBoxName;                               // 0x8A0(0x8)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CostPanelName;                                     // 0x8A8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CostCountTextBoxName;                              // 0x8B0(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CurrentCountTextBoxName;                           // 0x8B8(0x8)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SubtotalCountTextBoxName;                          // 0x8C0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RemainingCountTextBoxName;                         // 0x8C8(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AvailableItemsScrollboxName;                       // 0x8D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ConvertButtonName;                                 // 0x8D8(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CloseButtonName;                                   // 0x8E0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemQuantityTextBoxName;                           // 0x8E8(0x8)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemDescriptionTextBoxName;                        // 0x8F0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemWeightValueTextBlockName;                      // 0x8F8(0x8)(ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemInventoryQuantityValueTextBlockName;           // 0x900(0x8)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ConvertButtonItemIconName;                         // 0x908(0x8)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  QuantitySelectorTextBlockName;                     // 0x910(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ConvertButtonSubtotalTextBlockName;                // 0x918(0x8)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ConvertButtonQuantityTextBlockName;                // 0x920(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  WeightBeforePurchaseTextBlockName;                 // 0x928(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  WeightAfterPurchaseTextBlockName;                  // 0x930(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  WeightBeforePurchaseProgressBarName;               // 0x938(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  WeightAfterPurchaseProgressBarName;                // 0x940(0x8)(Edit, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  IncreaseQuantityButtonName;                        // 0x948(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  IncreaseQuantity10ButtonName;                      // 0x950(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MaxIncreaseQuantityButtonName;                     // 0x958(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DecreaseQuantityButtonName;                        // 0x960(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DecreaseQuantity10ButtonName;                      // 0x968(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MaxDecreaseQuantityButtonName;                     // 0x970(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SearchTextBoxName;                                 // 0x978(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        AvailableItemsPerRow;                              // 0x980(0x4)(BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AA7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<bool>                                 CurrentAvailableItems;                             // 0x988(0x10)(ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AA8[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                SlotButtonTemplate;                                // 0x9A8(0x8)(Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                EmptySlotButtonTemplate;                           // 0x9B0(0x8)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FCustomButtonWidgetStyle              UnavailableItemButtonStyle;                        // 0x9B8(0x48)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AA9[0x48];                                    // Fixing Size After Last Property  > TateDumper <
	struct FCustomButtonWidgetStyle              UnavailableConvertButtonStyle;                     // 0xA48(0x48)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AAA[0x48];                                    // Fixing Size After Last Property  > TateDumper <
	struct FSlateColor                           NotAbleToPurchaseTextColor;                        // 0xAD8(0x14)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSlateColor                           AbleToPurchaseTextColor;                           // 0xAEC(0x14)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSlateColor                           NeutralTextColor;                                  // 0xB00(0x14)(Edit, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AAB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FCompanionReactionData                PurchaseItemReaction;                              // 0xB18(0xB0)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FCompanionReactionData                CloseStoreReactionNoPurchase;                      // 0xBC8(0xB0)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FCompanionReactionData                CloseStoreReactionDidPurchase;                     // 0xC78(0xB0)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FCompanionReactionData                OpenStoreReaction;                                 // 0xD28(0xB0)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FCompanionReactionData                OpenStoreReactionSale;                             // 0xDD8(0xB0)(Edit, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FCompanionReactionData                OpenStoreReactionChange;                           // 0xE88(0xB0)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FCompanionReactionData                OpenStoreReactionNewItemUnlocked;                  // 0xF38(0xB0)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AAC[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         DebugTestSaleReaction;                             // 0xFEA(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         DebugTestChangeReaction;                           // 0xFEB(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         DebugTestNewReaction;                              // 0xFEC(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AAD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundCue*                             StoreOpenSound;                                    // 0xFF0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             StoreCloseSound;                                   // 0xFF8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        RequiredQuantity;                                  // 0x1000(0x4)(Edit, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AAE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UHexagonTradableOption*                CurrentTradableItemOption;                         // 0x1008(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSlateColor                           WeightTextColor;                                   // 0x1010(0x14)(ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSlateColor                           OverencumberedTextColor;                           // 0x1024(0x14)(Edit, ExportObject, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ItemRow;                                           // 0x1038(0x4)(BlueprintVisible, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ItemColumn;                                        // 0x103C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AAF[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_HexagonConversion* GetDefaultObj();

	void TradableItemSelected(class UWidget* TheWidget);
	void PopulateAvailableTradeItems(TArray<bool>* AvailableItems);
	class FText OnSearchTextChanged();
	void HideItem(int32 ItemIndex);
	int32 GetWidgetIndexOfAssociatedItemIndex(int32 ItemIndex);
	int32 GetCurrentlySelectedTradeItemWidgetIndex();
	void FilterAvailableTradeItems(TArray<bool>* AvailableTradableItems, class FString* FilterText);
};

// 0x1178 (0x18D0 - 0x758)
// Class ShooterGame.UI_HostSession
class UUI_HostSession : public UPrimalUI
{
public:
	TArray<struct FMapDescription>               MapDescriptionsArray;                              // 0x758(0x10)(ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ProceduralButtonName;                              // 0x768(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DeleteProceduralArkButtonName;                     // 0x770(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HostButtonName;                                    // 0x778(0x8)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HostDedicatedButtonName;                           // 0x780(0x8)(ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HostListenButtonName;                              // 0x788(0x8)(Edit, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  UpdateModsButtonName;                              // 0x790(0x8)(ConstParm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ProgressTextName;                                  // 0x798(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CancelButtonName;                                  // 0x7A0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MyScrollBoxName;                                   // 0x7A8(0x8)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4ABD[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  MySwitchScrollBoxName;                             // 0x7B8(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SessionsPanelName;                                 // 0x7C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ClearLocalDataButtonName;                          // 0x7C8(0x8)(Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ConnectingPanelName;                               // 0x7D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PasswordAcceptButtonName;                          // 0x7D8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PasswordCancelButtonName;                          // 0x7E0(0x8)(ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PasswordTextFieldName;                             // 0x7E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PasswordAdminTextFieldName;                        // 0x7F0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SessionNameTextFieldName;                          // 0x7F8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PasswordPanelName;                                 // 0x800(0x8)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ErrorBlockName;                                    // 0x808(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SlotButtonTemplate;                                // 0x810(0x8)(Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ProceduralSettingsTemplate;                        // 0x818(0x8)(BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4ABE[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxPasswordChars;                                  // 0x828(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxSessionNameChars;                               // 0x82C(0x4)(Edit, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextActiveColor;                           // 0x830(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextInactiveColor;                         // 0x840(0x10)(OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PlayerDamageScale;                                 // 0x850(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerDamageOffset;                                // 0x854(0x4)(Edit, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerDamageDefault;                               // 0x858(0x4)(ConstParm, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerResistanceScale;                             // 0x85C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerResistanceOffset;                            // 0x860(0x4)(ConstParm, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerResistanceDefault;                           // 0x864(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerWaterDrainScale;                             // 0x868(0x4)(Edit, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerWaterDrainOffset;                            // 0x86C(0x4)(Edit, BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerWaterDrainDefault;                           // 0x870(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerFoodDrainScale;                              // 0x874(0x4)(Edit, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerFoodDrainOffset;                             // 0x878(0x4)(Edit, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerFoodDrainDefault;                            // 0x87C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerStaminaDrainScale;                           // 0x880(0x4)(ExportObject, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerStaminaDrainOffset;                          // 0x884(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerStaminaDrainDefault;                         // 0x888(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerHealthRecoveryScale;                         // 0x88C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerHealthRecoveryOffset;                        // 0x890(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerHealthRecoveryDefault;                       // 0x894(0x4)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerHarvestingDamageScale;                       // 0x898(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerHarvestingDamageOffset;                      // 0x89C(0x4)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerHarvestingDamageDefault;                     // 0x8A0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoCountScale;                                    // 0x8A4(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoCountOffset;                                   // 0x8A8(0x4)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoCountDefault;                                  // 0x8AC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoDamageScale;                                   // 0x8B0(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoDamageOffset;                                  // 0x8B4(0x4)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoDamageDefault;                                 // 0x8B8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoResistanceScale;                               // 0x8BC(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoResistanceOffset;                              // 0x8C0(0x4)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoResistanceDefault;                             // 0x8C4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoFoodDrainScale;                                // 0x8C8(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoFoodDrainOffset;                               // 0x8CC(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoFoodDrainDefault;                              // 0x8D0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoStaminaDrainScale;                             // 0x8D4(0x4)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoStaminaDrainOffset;                            // 0x8D8(0x4)(BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoStaminaDrainDefault;                           // 0x8DC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoHealthRecoveryScale;                           // 0x8E0(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoHealthRecoveryOffset;                          // 0x8E4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoHealthRecoveryDefault;                         // 0x8E8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoHarvestingDamageScale;                         // 0x8EC(0x4)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoHarvestingDamageOffset;                        // 0x8F0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoHarvestingDamageDefault;                       // 0x8F4(0x4)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoTurretDamageScale;                             // 0x8F8(0x4)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoTurretDamageOffset;                            // 0x8FC(0x4)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoTurretDamageDefault;                           // 0x900(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StructureDamageScale;                              // 0x904(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StructureDamageOffset;                             // 0x908(0x4)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StructureDamageDefault;                            // 0x90C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StructureResistanceScale;                          // 0x910(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StructureResistanceOffset;                         // 0x914(0x4)(Edit, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StructureResistanceDefault;                        // 0x918(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StructureDamageRepairCDScale;                      // 0x91C(0x4)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StructureDamageRepairCDOffset;                     // 0x920(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StructureDamageRepairCDDefault;                    // 0x924(0x4)(BlueprintVisible, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StructureMaxInRangeScale;                          // 0x928(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StructureMaxInRangeOffset;                         // 0x92C(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StructureMaxInRangeDefault;                        // 0x930(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        XPMultiplierScale;                                 // 0x934(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        XPMultiplierOffset;                                // 0x938(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        XPMultiplierDefault;                               // 0x93C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamingSpeedScale;                                  // 0x940(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamingSpeedOffset;                                 // 0x944(0x4)(Edit, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamingSpeedDefault;                                // 0x948(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HarvestAmountScale;                                // 0x94C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HarvestAmountOffset;                               // 0x950(0x4)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HarvestAmountDefault;                              // 0x954(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DifficultyValueScale;                              // 0x958(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DifficultyValueOffset;                             // 0x95C(0x4)(ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DifficultyValueDefault;                            // 0x960(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ListenServerTetherDistanceScale;                   // 0x964(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ListenServerTetherDistanceOffset;                  // 0x968(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ListenServerTetherDistanceDefault;                 // 0x96C(0x4)(ExportObject, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AutoStartTimeScale;                                // 0x970(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AutoStartTimeOffset;                               // 0x974(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AutoStartTimeDefault;                              // 0x978(0x4)(ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AutoStopTimeScale;                                 // 0x97C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AutoStopTimeOffset;                                // 0x980(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AutoStopTimeDefault;                               // 0x984(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PvEStructureDecayPeriodScale;                      // 0x988(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PvEStructureDecayPeriodOffset;                     // 0x98C(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PvEStructureDecayPeriodDefault;                    // 0x990(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PvEDinoDecayPeriodScale;                           // 0x994(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PvEDinoDecayPeriodOffset;                          // 0x998(0x4)(Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PvEDinoDecayPeriodDefault;                         // 0x99C(0x4)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalCheckPeriodScale;        // 0x9A0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalCheckPeriodOffset;       // 0x9A4(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalCheckPeriodDefault;      // 0x9A8(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalMultiplierScale;         // 0x9AC(0x4)(ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalMultiplierOffset;        // 0x9B0(0x4)(ConstParm, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalMultiplierDefault;       // 0x9B4(0x4)(Edit, ConstParm, ExportObject, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalBaseAmountScale;         // 0x9B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalBaseAmountOffset;        // 0x9BC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalBaseAmountDefault;       // 0x9C0(0x4)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PreventOfflinePvPIntervalScale;                    // 0x9C4(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PreventOfflinePvPIntervalOffset;                   // 0x9C8(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PreventOfflinePvPIntervalDefault;                  // 0x9CC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PvPZoneStructureDamageScale;                       // 0x9D0(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PvPZoneStructureDamageOffset;                      // 0x9D4(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PvPZoneStructureDamageDefault;                     // 0x9D8(0x4)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StructurePreventResourceRadiusScale;               // 0x9DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StructurePreventResourceRadiusOffset;              // 0x9E0(0x4)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StructurePreventResourceRadiusDefault;             // 0x9E4(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DayCycleSpeedScale;                                // 0x9E8(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        DayCycleSpeedOffset;                               // 0x9EC(0x4)(Edit, ConstParm, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DayCycleSpeedDefault;                              // 0x9F0(0x4)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DayTimeSpeedScale;                                 // 0x9F4(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        DayTimeSpeedOffset;                                // 0x9F8(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DayTimeSpeedDefault;                               // 0x9FC(0x4)(Edit, ConstParm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NightTimeSpeedScale;                               // 0xA00(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        NightTimeSpeedOffset;                              // 0xA04(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NightTimeSpeedDefault;                             // 0xA08(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StartTimeHourScale;                                // 0xA0C(0x4)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StartTimeHourOffset;                               // 0xA10(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StartTimeHourDefault;                              // 0xA14(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalSpoilingTimeScale;                           // 0xA18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalSpoilingTimeOffset;                          // 0xA1C(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalSpoilingTimeDefault;                         // 0xA20(0x4)(BlueprintVisible, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalItemDecompositionTimeScale;                  // 0xA24(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalItemDecompositionTimeOffset;                 // 0xA28(0x4)(Edit, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalItemDecompositionTimeDefault;                // 0xA2C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalCorpseDecompositionTimeScale;                // 0xA30(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalCorpseDecompositionTimeOffset;               // 0xA34(0x4)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalCorpseDecompositionTimeDefault;              // 0xA38(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ResourceNoReplenishRadiusPlayersScale;             // 0xA3C(0x4)(Edit, ConstParm, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ResourceNoReplenishRadiusPlayersOffset;            // 0xA40(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ResourceNoReplenishRadiusPlayersDefault;           // 0xA44(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ResourceNoReplenishRadiusStructuresScale;          // 0xA48(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ResourceNoReplenishRadiusStructuresOffset;         // 0xA4C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ResourceNoReplenishRadiusStructuresDefault;        // 0xA50(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HarvestHealthScale;                                // 0xA54(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HarvestHealthOffset;                               // 0xA58(0x4)(BlueprintVisible, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HarvestHealthDefault;                              // 0xA5C(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ResourcesRespawnPeriodScale;                       // 0xA60(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ResourcesRespawnPeriodOffset;                      // 0xA64(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ResourcesRespawnPeriodDefault;                     // 0xA68(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CropGrowthSpeedScale;                              // 0xA6C(0x4)(Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CropGrowthSpeedOffset;                             // 0xA70(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CropGrowthSpeedDefault;                            // 0xA74(0x4)(ExportObject, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CropDecaySpeedScale;                               // 0xA78(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CropDecaySpeedOffset;                              // 0xA7C(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CropDecaySpeedDefault;                             // 0xA80(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PoopIntervalScale;                                 // 0xA84(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PoopIntervalOffset;                                // 0xA88(0x4)(ConstParm, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PoopIntervalDefault;                               // 0xA8C(0x4)(Edit, ConstParm, BlueprintVisible, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MatingIntervalScale;                               // 0xA90(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MatingIntervalOffset;                              // 0xA94(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MatingIntervalDefault;                             // 0xA98(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LayEggIntervalScale;                               // 0xA9C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LayEggIntervalOffset;                              // 0xAA0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LayEggIntervalDefault;                             // 0xAA4(0x4)(Edit, ConstParm, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EggHatchSpeedScale;                                // 0xAA8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EggHatchSpeedOffset;                               // 0xAAC(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EggHatchSpeedDefault;                              // 0xAB0(0x4)(Edit, ConstParm, Net, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyMatureSpeedScale;                              // 0xAB4(0x4)(ExportObject, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyMatureSpeedOffset;                             // 0xAB8(0x4)(BlueprintVisible, ExportObject, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyMatureSpeedDefault;                            // 0xABC(0x4)(Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyFoodConsumptionSpeedScale;                     // 0xAC0(0x4)(BlueprintReadOnly, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyFoodConsumptionSpeedOffset;                    // 0xAC4(0x4)(Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyFoodConsumptionSpeedDefault;                   // 0xAC8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyCuddleIntervalScale;                           // 0xACC(0x4)(ConstParm, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyCuddleIntervalOffset;                          // 0xAD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyCuddleIntervalDefault;                         // 0xAD4(0x4)(Edit, ConstParm, BlueprintVisible, Net, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyCuddleGracePeriodScale;                        // 0xAD8(0x4)(Edit, ExportObject, BlueprintReadOnly, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyCuddleGracePeriodOffset;                       // 0xADC(0x4)(ConstParm, ExportObject, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyCuddleGracePeriodDefault;                      // 0xAE0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyCuddleLoseImprintQualitySpeedScale;            // 0xAE4(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyCuddleLoseImprintQualitySpeedOffset;           // 0xAE8(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyCuddleLoseImprintQualitySpeedDefault;          // 0xAEC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyImprintingStatScaleScale;                      // 0xAF0(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyImprintingStatScaleOffset;                     // 0xAF4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyImprintingStatScaleDefault;                    // 0xAF8(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildHealthScale;                   // 0xAFC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildHealthOffset;                  // 0xB00(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildHealthDefault;                 // 0xB04(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildStaminaScale;                  // 0xB08(0x4)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildStaminaOffset;                 // 0xB0C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildStaminaDefault;                // 0xB10(0x4)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildTorpidityScale;                // 0xB14(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildTorpidityOffset;               // 0xB18(0x4)(OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildTorpidityDefault;              // 0xB1C(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildOxygenScale;                   // 0xB20(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildOxygenOffset;                  // 0xB24(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildOxygenDefault;                 // 0xB28(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildFoodScale;                     // 0xB2C(0x4)(Edit, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildFoodOffset;                    // 0xB30(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildFoodDefault;                   // 0xB34(0x4)(ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildWaterScale;                    // 0xB38(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildWaterOffset;                   // 0xB3C(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildWaterDefault;                  // 0xB40(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildTemperatureScale;              // 0xB44(0x4)(Edit, ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildTemperatureOffset;             // 0xB48(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildTemperatureDefault;            // 0xB4C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildWeightScale;                   // 0xB50(0x4)(ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildWeightOffset;                  // 0xB54(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildWeightDefault;                 // 0xB58(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildDamageScale;                   // 0xB5C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildDamageOffset;                  // 0xB60(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildDamageDefault;                 // 0xB64(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildSpeedScale;                    // 0xB68(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildSpeedOffset;                   // 0xB6C(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildSpeedDefault;                  // 0xB70(0x4)(Edit, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildTemperatureFortitudeScale;     // 0xB74(0x4)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildTemperatureFortitudeOffset;    // 0xB78(0x4)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildTemperatureFortitudeDefault;   // 0xB7C(0x4)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedHealthScale;                  // 0xB80(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedHealthOffset;                 // 0xB84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedHealthDefault;                // 0xB88(0x4)(Edit, ConstParm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedStaminaScale;                 // 0xB8C(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedStaminaOffset;                // 0xB90(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedStaminaDefault;               // 0xB94(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedTorpidityScale;               // 0xB98(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedTorpidityOffset;              // 0xB9C(0x4)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedTorpidityDefault;             // 0xBA0(0x4)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedOxygenScale;                  // 0xBA4(0x4)(Edit, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedOxygenOffset;                 // 0xBA8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedOxygenDefault;                // 0xBAC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedFoodScale;                    // 0xBB0(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedFoodOffset;                   // 0xBB4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedFoodDefault;                  // 0xBB8(0x4)(Edit, ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedWaterScale;                   // 0xBBC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedWaterOffset;                  // 0xBC0(0x4)(Edit, ExportObject, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedWaterDefault;                 // 0xBC4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedTemperatureScale;             // 0xBC8(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedTemperatureOffset;            // 0xBCC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedTemperatureDefault;           // 0xBD0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedWeightScale;                  // 0xBD4(0x4)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedWeightOffset;                 // 0xBD8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedWeightDefault;                // 0xBDC(0x4)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedDamageScale;                  // 0xBE0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedDamageOffset;                 // 0xBE4(0x4)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedDamageDefault;                // 0xBE8(0x4)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedSpeedScale;                   // 0xBEC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedSpeedOffset;                  // 0xBF0(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedSpeedDefault;                 // 0xBF4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedTemperatureFortitudeScale;    // 0xBF8(0x4)(BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedTemperatureFortitudeOffset;   // 0xBFC(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedTemperatureFortitudeDefault;  // 0xC00(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddHealthScale;               // 0xC04(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddHealthOffset;              // 0xC08(0x4)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddHealthDefault;             // 0xC0C(0x4)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddStaminaScale;              // 0xC10(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddStaminaOffset;             // 0xC14(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddStaminaDefault;            // 0xC18(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddTorpidityScale;            // 0xC1C(0x4)(Edit, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddTorpidityOffset;           // 0xC20(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddTorpidityDefault;          // 0xC24(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddOxygenScale;               // 0xC28(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddOxygenOffset;              // 0xC2C(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddOxygenDefault;             // 0xC30(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddFoodScale;                 // 0xC34(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddFoodOffset;                // 0xC38(0x4)(Edit, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddFoodDefault;               // 0xC3C(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddWaterScale;                // 0xC40(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddWaterOffset;               // 0xC44(0x4)(Edit, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddWaterDefault;              // 0xC48(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddTemperatureScale;          // 0xC4C(0x4)(Edit, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddTemperatureOffset;         // 0xC50(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddTemperatureDefault;        // 0xC54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddWeightScale;               // 0xC58(0x4)(ConstParm, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddWeightOffset;              // 0xC5C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddWeightDefault;             // 0xC60(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddDamageScale;               // 0xC64(0x4)(ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddDamageOffset;              // 0xC68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddDamageDefault;             // 0xC6C(0x4)(Edit, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddSpeedScale;                // 0xC70(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddSpeedOffset;               // 0xC74(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddSpeedDefault;              // 0xC78(0x4)(Edit, ExportObject, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddTemperatureFortitudeScale; // 0xC7C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddTemperatureFortitudeOffset; // 0xC80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddTemperatureFortitudeDefault; // 0xC84(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffHealthScale;               // 0xC88(0x4)(Edit, ConstParm, BlueprintVisible, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffHealthOffset;              // 0xC8C(0x4)(BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffHealthDefault;             // 0xC90(0x4)(DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffStaminaScale;              // 0xC94(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffStaminaOffset;             // 0xC98(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffStaminaDefault;            // 0xC9C(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffTorpidityScale;            // 0xCA0(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffTorpidityOffset;           // 0xCA4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffTorpidityDefault;          // 0xCA8(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffOxygenScale;               // 0xCAC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffOxygenOffset;              // 0xCB0(0x4)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffOxygenDefault;             // 0xCB4(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffFoodScale;                 // 0xCB8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffFoodOffset;                // 0xCBC(0x4)(Edit, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffFoodDefault;               // 0xCC0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffWaterScale;                // 0xCC4(0x4)(BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffWaterOffset;               // 0xCC8(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffWaterDefault;              // 0xCCC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffTemperatureScale;          // 0xCD0(0x4)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffTemperatureOffset;         // 0xCD4(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffTemperatureDefault;        // 0xCD8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffWeightScale;               // 0xCDC(0x4)(ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffWeightOffset;              // 0xCE0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffWeightDefault;             // 0xCE4(0x4)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffDamageScale;               // 0xCE8(0x4)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffDamageOffset;              // 0xCEC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffDamageDefault;             // 0xCF0(0x4)(Edit, ExportObject, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffSpeedScale;                // 0xCF4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffSpeedOffset;               // 0xCF8(0x4)(BlueprintVisible, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffSpeedDefault;              // 0xCFC(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffTemperatureFortitudeScale; // 0xD00(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffTemperatureFortitudeOffset; // 0xD04(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffTemperatureFortitudeDefault; // 0xD08(0x4)(ConstParm, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerHealthScale;                     // 0xD0C(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerHealthOffset;                    // 0xD10(0x4)(ConstParm, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerHealthDefault;                   // 0xD14(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerStaminaScale;                    // 0xD18(0x4)(Edit, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerStaminaOffset;                   // 0xD1C(0x4)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerStaminaDefault;                  // 0xD20(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerTorpidityScale;                  // 0xD24(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerTorpidityOffset;                 // 0xD28(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerTorpidityDefault;                // 0xD2C(0x4)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerOxygenScale;                     // 0xD30(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerOxygenOffset;                    // 0xD34(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerOxygenDefault;                   // 0xD38(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerFoodScale;                       // 0xD3C(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerFoodOffset;                      // 0xD40(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerFoodDefault;                     // 0xD44(0x4)(Edit, ConstParm, ExportObject, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerWaterScale;                      // 0xD48(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerWaterOffset;                     // 0xD4C(0x4)(BlueprintVisible, ExportObject, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerWaterDefault;                    // 0xD50(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerTemperatureScale;                // 0xD54(0x4)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerTemperatureOffset;               // 0xD58(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerTemperatureDefault;              // 0xD5C(0x4)(BlueprintVisible, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerWeightScale;                     // 0xD60(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerWeightOffset;                    // 0xD64(0x4)(BlueprintVisible, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerWeightDefault;                   // 0xD68(0x4)(Edit, ConstParm, BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerDamageScale;                     // 0xD6C(0x4)(Edit, ConstParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerDamageOffset;                    // 0xD70(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerDamageDefault;                   // 0xD74(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerSpeedScale;                      // 0xD78(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerSpeedOffset;                     // 0xD7C(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerSpeedDefault;                    // 0xD80(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerTemperatureFortitudeScale;       // 0xD84(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerTemperatureFortitudeOffset;      // 0xD88(0x4)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerTemperatureFortitudeDefault;     // 0xD8C(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        KillXPMultiplierScale;                             // 0xD90(0x4)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        KillXPMultiplierOffset;                            // 0xD94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        KillXPMultiplierDefault;                           // 0xD98(0x4)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HarvestXPMultiplierScale;                          // 0xD9C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HarvestXPMultiplierOffset;                         // 0xDA0(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HarvestXPMultiplierDefault;                        // 0xDA4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CraftXPMultiplierScale;                            // 0xDA8(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CraftXPMultiplierOffset;                           // 0xDAC(0x4)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CraftXPMultiplierDefault;                          // 0xDB0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GenericXPMultiplierScale;                          // 0xDB4(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GenericXPMultiplierOffset;                         // 0xDB8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GenericXPMultiplierDefault;                        // 0xDBC(0x4)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SpecialXPMultiplierScale;                          // 0xDC0(0x4)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SpecialXPMultiplierOffset;                         // 0xDC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SpecialXPMultiplierDefault;                        // 0xDC8(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExplorerNoteXPMultiplierScale;                     // 0xDCC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExplorerNoteXPMultiplierOffset;                    // 0xDD0(0x4)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExplorerNoteXPMultiplierDefault;                   // 0xDD4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BossKillXPMultiplierScale;                         // 0xDD8(0x4)(ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BossKillXPMultiplierOffset;                        // 0xDDC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BossKillXPMultiplierDefault;                       // 0xDE0(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AlphaKillXPMultiplierScale;                        // 0xDE4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AlphaKillXPMultiplierOffset;                       // 0xDE8(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AlphaKillXPMultiplierDefault;                      // 0xDEC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WildKillXPMultiplierScale;                         // 0xDF0(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WildKillXPMultiplierOffset;                        // 0xDF4(0x4)(Edit, ConstParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WildKillXPMultiplierDefault;                       // 0xDF8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CaveKillXPMultiplierScale;                         // 0xDFC(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CaveKillXPMultiplierOffset;                        // 0xE00(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CaveKillXPMultiplierDefault;                       // 0xE04(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedKillXPMultiplierScale;                        // 0xE08(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedKillXPMultiplierOffset;                       // 0xE0C(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedKillXPMultiplierDefault;                      // 0xE10(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UnclaimedKillXPMultiplierScale;                    // 0xE14(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UnclaimedKillXPMultiplierOffset;                   // 0xE18(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UnclaimedKillXPMultiplierDefault;                  // 0xE1C(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RaidDinoCharacterFoodDrainScale;                   // 0xE20(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RaidDinoCharacterFoodDrainOffset;                  // 0xE24(0x4)(Edit, ExportObject, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RaidDinoCharacterFoodDrainDefault;                 // 0xE28(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FishingLootQualityScale;                           // 0xE2C(0x4)(ConstParm, ExportObject, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FishingLootQualityOffset;                          // 0xE30(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FishingLootQualityDefault;                         // 0xE34(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CustomRecipeEffectivenessScale;                    // 0xE38(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CustomRecipeEffectivenessOffset;                   // 0xE3C(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CustomRecipeEffectivenessDefault;                  // 0xE40(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CustomRecipeSkillScale;                            // 0xE44(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CustomRecipeSkillOffset;                           // 0xE48(0x4)(BlueprintVisible, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CustomRecipeSkillDefault;                          // 0xE4C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FuelConsumptionIntervalScale;                      // 0xE50(0x4)(ExportObject, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FuelConsumptionIntervalOffset;                     // 0xE54(0x4)(ExportObject, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FuelConsumptionIntervalDefault;                    // 0xE58(0x4)(ExportObject, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerPlatformMaxStructuresScale;                     // 0xE5C(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerPlatformMaxStructuresOffset;                    // 0xE60(0x4)(ExportObject, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerPlatformMaxStructuresDefault;                   // 0xE64(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideMaxExperiencePointsPlayerScale;            // 0xE68(0x4)(Edit, ConstParm, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideMaxExperiencePointsPlayerOffset;           // 0xE6C(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideMaxExperiencePointsPlayerDefault;          // 0xE70(0x4)(Edit, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideMaxExperiencePointsDinoScale;              // 0xE74(0x4)(ConstParm, BlueprintVisible, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideMaxExperiencePointsDinoOffset;             // 0xE78(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideMaxExperiencePointsDinoDefault;            // 0xE7C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxNumberOfPlayersInTribeScale;                    // 0xE80(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxNumberOfPlayersInTribeOffset;                   // 0xE84(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxNumberOfPlayersInTribeDefault;                  // 0xE88(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CraftingSkillBonusScale;                           // 0xE8C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CraftingSkillBonusOffset;                          // 0xE90(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CraftingSkillBonusDefault;                         // 0xE94(0x4)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SupplyCrateLootQualityScale;                       // 0xE98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SupplyCrateLootQualityOffset;                      // 0xE9C(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SupplyCrateLootQualityDefault;                     // 0xEA0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AC6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDifficultyValues>             DifficultyDefaultValues;                           // 0xEA8(0x10)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AC7[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        EngramFilterIndex;                                 // 0xECC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AC8[0x918];                                   // Fixing Size After Last Property  > TateDumper <
	TArray<class UTexture2DDynamic*>             ModPreviewGCStore;                                 // 0x17E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AC9[0xA8];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        MapSelectTimer;                                    // 0x18A0(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SwitchSelectedMapIndex;                            // 0x18A4(0x4)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SwitchSelectedMapMode;                             // 0x18A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SliderValueStoredSigDigits;                        // 0x18AC(0x4)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4ACA[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UWidget*                               LastHostWidgetClicked;                             // 0x18C0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4ACB[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_HostSession* GetDefaultObj();

	void UpdateDifficultyRules(int32* Difficulty);
	void SlotButtonSelected(class UWidget* TheWidget);
	void ShowConfirmationForSettingsMedium();
	void ShowConfirmationForSettingsHard();
	void ShowConfirmationForSettingsEasy();
	void SetupLayout();
	class UEditableTextBox* SetTextIntFromSettingsData(int32* Value);
	float SetSliderFromSettingsData(float* Value, class UDataListValueGeneric** Slider);
	class UPrimalGameSettingsData* SetSettingsWithSettingsDataAsset();
	int32 SetSelectedMapIndex();
	class UDataListValueGeneric* SetCheckBoxFromSettingsData(bool* Value);
	void SelectMapButtonPressed();
	void QueueMapSelect();
	void OnSliderValueChanged(float SliderValue);
	class FText OnSessionPasswordTextCommitted(enum class ETextCommit* CommitMethod);
	class FText OnSessionPasswordTextChanged();
	class FText OnSessionNameTextCommitted(enum class ETextCommit* CommitMethod);
	class FText OnSessionNameTextChanged();
	class FText OnNumericValueCommitted(enum class ETextCommit* CommitMethod);
	void OnModInfoRequested(int64 ModId);
	void OnImageLoadFinish(class UTexture2DDynamic** NewTexture);
	void OnEngramTabOpened();
	void OnDeleteMapServerDataButtonClicked(class UWidget* TheWidget);
	void OnDeleteMapSaveGameButtonClicked(class UWidget* TheWidget);
	void OnCFCoreUIRegister();
	void OnCFCoreUIControllerInit();
	class FText OnAdminPasswordTextCommitted(enum class ETextCommit* CommitMethod);
	class FText OnAdminPasswordTextChanged();
	void OnActiveModReorderButtonClicked(class UWidget* TheWidget);
	void MoveToMapScreen();
	void ModSelected(class UWidget* TheWidget);
	bool IsInMapSelectView();
	class UCustomButtonWidget* HighlightPresetButton();
	bool HasSaveForMapIndex();
	bool HasDLCforMapIndex();
	class UDataListEntryButton_HostSession* GetSwitchMapEntryForIndex();
	int32 GetSelectedMapIndex();
	TArray<class UDataListEntryButton_HostSession*> GetModMaps();
	class UScrollBox* GetMapSelectScrollBox();
	struct FMapDescription GetMapInfo();
	class UDataListEntryButton* EngramDoubleClicked();
	bool DoesSettingsMatchSettingsDataAsset();
	int32 DeleteSingleplayerData();
	void ConfirmedChangeSettingsToMedium();
	void ConfirmedChangeSettingsToHard();
	void ConfirmedChangeSettingsToEasy();
	void BPPostPopulateMods();
	TArray<struct FInstalledMod> BPPopulateMods();
	void BPOnUpdateSavedDataButtons();
	bool BPIsPresetDifficultyUIOpen();
	void ActiveModSelected(class UWidget* TheWidget);
};

// 0x250 (0x9A8 - 0x758)
// Class ShooterGame.UI_Hub
class UUI_Hub : public UPrimalUI
{
public:
	class FName                                  TopRecenteringSpacerName;                          // 0x758(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  InventoryMenuButtonName;                           // 0x760(0x8)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EngramsMenuButtonName;                             // 0x768(0x8)(BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TribeManagerMenuButtonName;                        // 0x770(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TameGroupsMenuButtonName;                          // 0x778(0x8)(Edit, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SurvivorProfileMenuButtonName;                     // 0x780(0x8)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionListMenuButtonName;                         // 0x788(0x8)(Edit, ConstParm, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MinimapMenuButtonName;                             // 0x790(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  OptionsMenuButtonName;                             // 0x798(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SubMenuWidgetSwitcherName;                         // 0x7A0(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CloseHubButtonName;                                // 0x7A8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  OpenPauseMenuName;                                 // 0x7B0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HexagonCurrencyValuePanelName;                     // 0x7B8(0x8)(Edit, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HexagonCurrencyValueTextBlockName;                 // 0x7C0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                InventoryUITemplate;                               // 0x7C8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TribeManagerUITemplate;                            // 0x7D0(0x8)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                EngramsMenuUITemplate;                             // 0x7D8(0x8)(Edit, ConstParm, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TameGroupsUITemplate;                              // 0x7E0(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SurvivorProfileUITemplate;                         // 0x7E8(0x8)(BlueprintVisible, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MissionListUITemplate;                             // 0x7F0(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MinimapUITemplate;                                 // 0x7F8(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                OptionsMenuUITemplate;                             // 0x800(0x8)(BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TamingListUITemplate;                              // 0x808(0x8)(Edit, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                CustomTrackedDinoListUITemplate;                   // 0x810(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             TabSwitchSound;                                    // 0x818(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4ACD[0x60];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        SelectedMissionEntryIndex;                         // 0x880(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SelectedBiomeFilterMask;                           // 0x884(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4ACE[0x120];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_Hub* GetDefaultObj();

	void RecenterHub();
	bool IsSubMenuActive(enum class EHubSubMenu* MenuType);
	class UUI_SurvivorProfile* GetSurvivorProfileMenu(bool* bAutoShow);
};

// 0x28 (0x780 - 0x758)
// Class ShooterGame.UI_HudOverlay
class UUI_HudOverlay : public UPrimalUI
{
public:
	class FName                                  HudOverlayWidgetName;                              // 0x758(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UCanvasPanel*                          ToolTipPanel;                                      // 0x760(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AD1[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_HudOverlay* GetDefaultObj();

	class UToolTipWidget* ShowOverlayTooltip(class AShooterPlayerController* HUDOwner, class UObject* SponsorObject, class UClass* ToolTipPrefab, const struct FVector2D& ScreenPos, enum class EAlignHorizontalUI* HorizontalAlignment, enum class EAlignVerticalUI* VerticalAlignment, const struct FVector2D& WithPadding, const struct FVector2D& OverlayScale, bool bRetainScreenProjectionFromWorld, const struct FVector& ScreenProjectionWorldPosition, const struct FVector2D& ScreenProjectionPositionOffset);
};

// 0x3B0 (0xB18 - 0x768)
// Class ShooterGame.UI_Inventory
class UUI_Inventory : public UPrimalSubMenuUI
{
public:
	class FName                                  PanelContainerLeftName;                            // 0x768(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PanelContainerCenterName;                          // 0x770(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PanelContainerRightName;                           // 0x778(0x8)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  WidgetSwitcherRightName;                           // 0x780(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  QuickActionSlotPanelName;                          // 0x788(0x8)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  QuickActionSlotDataListName;                       // 0x790(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PlayerCharacterPanelName;                          // 0x798(0x8)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PlayerInventoryPanelName;                          // 0x7A0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RemoteInventoryPanelName;                          // 0x7A8(0x8)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StatsPanelName;                                    // 0x7B0(0x8)(ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DinoAncestryOverlayName;                           // 0x7B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ListSessionsUITemplate;                            // 0x7C0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SteamInventoryStatusUITemplate;                    // 0x7C8(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                CustomCosmeticPanelTemplate;                       // 0x7D0(0x8)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             ErrorSound;                                        // 0x7D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AD2[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bHasRemoteInventory;                               // 0x7F8(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AD3[0x31F];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_Inventory* GetDefaultObj();

	void SetInventoryVisibility(bool* bVisible);
};

// 0x50 (0x7A8 - 0x758)
// Class ShooterGame.UI_LeaderboardWidget
class UUI_LeaderboardWidget : public UPrimalUI
{
public:
	class FName                                  LeaderboardHeaderContainerName;                    // 0x758(0x8)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LeaderboardRowContainerName;                       // 0x760(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CloseButtonName;                                   // 0x768(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TableWidth;                                        // 0x770(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AD4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UPanelWidget*                          HeaderContainer;                                   // 0x778(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class ULeaderboardRowWidget*                 HeaderRowWidget;                                   // 0x780(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UButton*                               CloseButton;                                       // 0x788(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UVerticalBox*                          RowContainer;                                      // 0x790(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class ULeaderboardRowWidget*>         RowWidgets;                                        // 0x798(0x10)(ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UUI_LeaderboardWidget* GetDefaultObj();

	struct FLeaderboardDisplayRow SetRows(TArray<struct FLeaderboardDisplayRow>* Rows);
	void SetLeaderboardWidgetVisible(bool* bIsVisible);
};

// 0x328 (0xA80 - 0x758)
// Class ShooterGame.UI_ListCharacterData
class UUI_ListCharacterData : public UPrimalUI
{
public:
	class FName                                  DownloadButtonName;                                // 0x758(0x8)(Edit, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CancelButtonName;                                  // 0x760(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MyScrollBoxName;                                   // 0x768(0x8)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  CharacterStatsPanelName;                           // 0x770(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                CharacterSlotButtonTemplate;                       // 0x778(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CharacterLabelName;                                // 0x780(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  CharacterViewPanelName;                            // 0x788(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CharacterViewBlockerName;                          // 0x790(0x8)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExperienceLabelName;                               // 0x798(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExperienceBarName;                                 // 0x7A0(0x8)(ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CharacterHypoThermalInsulationLabelName;           // 0x7A8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CharacterHyperThermalInsulationLabelName;          // 0x7B0(0x8)(ConstParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StatsWidgetNames[0xC];                             // 0x7B8(0x60)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CameraFocalOffset;                                 // 0x818(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AD6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                SteamInventoryStatusUITemplate;                    // 0x820(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AD7[0x258];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_ListCharacterData* GetDefaultObj();

	void OnUploadedCharactersLoaded(TArray<struct FArkTributePlayerData>* CharactersData, TArray<uint32>* ExpirationTimesUTC);
	void OnUploadedCharactersListingsLoaded(bool* Success, TArray<struct FArkTributePlayerDataListing>* CharactersListings);
	void CharacterSlotButtonSelected(class UWidget* TheWidget);
};

// 0x1D0 (0x928 - 0x758)
// Class ShooterGame.UI_ListTamedDinos
class UUI_ListTamedDinos : public UPrimalUI
{
public:
	class FName                                  DownloadButtonName;                                // 0x758(0x8)(Edit, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  UploadButtonName;                                  // 0x760(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CancelButtonName;                                  // 0x768(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MyScrollBoxName;                                   // 0x770(0x8)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                DinoSlotButtonTemplate;                            // 0x778(0x8)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  CharacterStatsPanelName;                           // 0x780(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CharacterLabelName;                                // 0x788(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ExperienceLabelName;                               // 0x790(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExperienceBarName;                                 // 0x798(0x8)(ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CharacterHypoThermalInsulationLabelName;           // 0x7A0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CharacterHyperThermalInsulationLabelName;          // 0x7A8(0x8)(ConstParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StatsLabelNames[0xC];                              // 0x7B0(0x60)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AD8[0x118];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_ListTamedDinos* GetDefaultObj();

};

// 0x2E0 (0xA38 - 0x758)
// Class ShooterGame.UI_MainMenu
class UUI_MainMenu : public UPrimalUI
{
public:
	class FString                                OptionsButtonName;                                 // 0x758(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                HostButtonName;                                    // 0x768(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                JoinButtonName;                                    // 0x778(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ExitButtonName;                                    // 0x788(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ListSessionsName;                                  // 0x798(0x10)(Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                HelpButtonName;                                    // 0x7A8(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                NewsLabelName;                                     // 0x7B8(0x10)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ConnectingPanelName;                               // 0x7C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                EditableTextJoinName;                              // 0x7D0(0x10)(Edit, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EditableTextJoinPanelName;                         // 0x7E0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ConnectingDialogPanelName;                         // 0x7E8(0x8)(Edit, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ListSessionsUITemplate;                            // 0x7F0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                OptionsMenuUITemplate;                             // 0x7F8(0x8)(BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                OptionsMenuUITemplate_PC;                          // 0x800(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                OptionsMenuUITemplate_UWP;                         // 0x808(0x8)(ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                HostSessoinUITemplate;                             // 0x810(0x8)(ConstParm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                HelpPageUITemplate;                                // 0x818(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SlotButtonTemplate;                                // 0x820(0x8)(Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                NotifClass;                                        // 0x828(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                WelcomeClass;                                      // 0x830(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ModShopUITemplate;                                 // 0x838(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TermsAndConditionsUITemplate;                      // 0x840(0x8)(OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                UpdatingModsUITemplate;                            // 0x848(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsNewMainMenu;                                    // 0x850(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsPlayingIntroCinematic;                          // 0x851(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4ADA[0x6E];                                    // Fixing Size After Last Property  > TateDumper <
	class UScrollBox*                            TotalConversionsScrollBox;                         // 0x8C0(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UDataListEntryButton_MainMenu*> TotalConversionsEntryWidgets;                      // 0x8C8(0x10)(Edit, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4ADB[0x156];                                   // Fixing Size After Last Property  > TateDumper <
	bool                                         WaitingForPrivileges;                              // 0xA2E(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4ADC[0x9];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_MainMenu* GetDefaultObj();

	void TotalConversionSelected(class UWidget* TheWidget);
	void StopIntroCinematic();
	void StopAllCardAnims();
	void StartMainMenuPressed();
	bool SettingsOverlayIsOpen();
	enum class ESlateVisibility SetMainJoinedButtonVisibility();
	bool OverrideBGImage();
	int64 OpenModShop();
	void OnLastPlayedButtonClicked();
	void OnGamepadSelectionChanged(class UWidget* Widget);
	void OnCFCoreUIControllerInit();
	void JumpToNonDedicatedView();
	void JumpToListSessionView();
	void JumpToIslandSP();
	void JumpToFirstSP();
	void JoinLastPlayedServerShortcutSkip();
	void HighlightStartButton();
	void HandleDLCInstalledEvent();
	void ForceListSessionToTab();
	void EscapeMainMenuPressed();
};

// 0x1A8 (0x900 - 0x758)
// Class ShooterGame.UI_MapMarkersEntry
class UUI_MapMarkersEntry : public UPrimalUI
{
public:
	class UClass*                                SlotButtonTemplate;                                // 0x758(0x8)(Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  TabBgSwitcherName;                                 // 0x760(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  AddEnabledEffectName;                              // 0x768(0x8)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RemoveEnabledEffectName;                           // 0x770(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CloseButtonName;                                   // 0x778(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AcceptButtonName;                                  // 0x780(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TitleLabelName;                                    // 0x788(0x8)(Edit, ExportObject, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CoordOneLabelName;                                 // 0x790(0x8)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CoordTwoLabelName;                                 // 0x798(0x8)(ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MarkerNameLabelName;                               // 0x7A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MarkerNameTextBoxName;                             // 0x7A8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CoordOneTextBoxName;                               // 0x7B0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CoordTwoTextBoxName;                               // 0x7B8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ErrorBlockName;                                    // 0x7C0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RemoveCloseButtonName;                             // 0x7C8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RemoveAcceptButtonName;                            // 0x7D0(0x8)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RemoveMarkersListName;                             // 0x7D8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RemoveMarkersPanelName;                            // 0x7E0(0x8)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AddMarkersPanelName;                               // 0x7E8(0x8)(Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  GoToAddButtonName;                                 // 0x7F0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  GoToRemoveButtonName;                              // 0x7F8(0x8)(Edit, ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxOpenTime;                                       // 0x800(0x4)(BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextActiveColor;                           // 0x804(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextInactiveColor;                         // 0x814(0x10)(OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4ADE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FLinearColor>                  ColorSetMarkers;                                   // 0x828(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4ADF[0xC8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_MapMarkersEntry* GetDefaultObj();

	class FText OnTextCommitted(enum class ETextCommit* CommitMethod);
	class FText OnTextChanged();
	void OnColorSliderValueChanged(float SliderValue);
	void MarkerButtonSelected(class UWidget* TheWidget);
};

// 0x2A8 (0x5D8 - 0x330)
// Class ShooterGame.UI_MenuCarousel
class UUI_MenuCarousel : public UPrimalUserWidget
{
public:
	class FName                                  EntryContainerName;                                // 0x330(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PipContainerName;                                  // 0x338(0x8)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RolloverProgressName;                              // 0x340(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NavButtonForwardName;                              // 0x348(0x8)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NavButtonBackName;                                 // 0x350(0x8)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MainButtonCoverName;                               // 0x358(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCarouselEntryData>            CarouselData;                                      // 0x360(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCarouselEntryData>            CarouselData_WebSourced;                           // 0x370(0x10)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultCarouselEntryTemplateClass;                 // 0x380(0x8)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<class FName, class UClass*>             CarouselEntryTemplateClasses;                      // 0x388(0x50)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultCarouselPipTemplateClass;                   // 0x3D8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<class FName, class UClass*>             CarouselPipTemplateClasses;                        // 0x3E0(0x50)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasInitialized : 1;                               // Mask: 0x1, PropSize: 0x10x430(0x1)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasStarted : 1;                                   // Mask: 0x2, PropSize: 0x10x430(0x1)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDownloadingImages : 1;                          // Mask: 0x4, PropSize: 0x10x430(0x1)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseWebDataSource : 1;                             // Mask: 0x8, PropSize: 0x10x430(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseLocalizedWebDataSources : 1;                   // Mask: 0x10, PropSize: 0x10x430(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAddLocToWebRequestData : 1;                       // Mask: 0x20, PropSize: 0x10x430(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAutoScrollInterval : 1;                        // Mask: 0x40, PropSize: 0x10x430(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3E8 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4AE0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AutoScrollInterval;                                // 0x434(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AE1[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                WebDataSourceDefaultURL;                           // 0x440(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                WebDataSourceLocalizedURLFormat;                   // 0x450(0x10)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                WebDataSourceKeyName;                              // 0x460(0x10)(Edit, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<class FString, class FString>           WebDataSourceRequestHeaders;                       // 0x470(0x50)(Edit, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<class FString, class FString>           WebDataSourceURLEncodedContent;                    // 0x4C0(0x50)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<class FString, class FString>           ExternalLinkURLEncodedContent;                     // 0x510(0x50)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AE2[0x78];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_MenuCarousel* GetDefaultObj();

	void OnNavForward(class UWidget* TheWidget);
	void OnNavBack(class UWidget* TheWidget);
	void OnMainClick(class UWidget* TheWidget);
	void OnImageDownloadSuccess(class UTexture2DDynamic** NewTexture);
	void OnImageDownloadFailure(class UTexture2DDynamic** NewTexture);
	void OnClickPip(class UWidget* TheWidget);
	void DoFocusActionStart(class FString* ActionKey, const class FString& ActionValue);
	void DoFocusActionEnd(class FString* ActionKey, const class FString& ActionValue);
	void DoClickAction(class FString* ActionKey, const class FString& ActionValue);
	void BlueprintInit();
};

// 0x10 (0x768 - 0x758)
// Class ShooterGame.UI_MenuCarouselButtonWidget
class UUI_MenuCarouselButtonWidget : public UBaseSelectableButtonWidget
{
public:
	class FName                                  TheButtonWidgetName;                               // 0x758(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UCustomButtonWidget*                   TheButton;                                         // 0x760(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UUI_MenuCarouselButtonWidget* GetDefaultObj();

};

// 0x10 (0x340 - 0x330)
// Class ShooterGame.UI_MenuCarouselEntryWidget
class UUI_MenuCarouselEntryWidget : public UPrimalUserWidget
{
public:
	class FName                                  ResourceImageName;                                 // 0x330(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UImage*                                ResourceImage;                                     // 0x338(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UUI_MenuCarouselEntryWidget* GetDefaultObj();

	class FString Init();
	float EntryFocusTick();
	bool EntryFocusStart();
	bool EntryFocusEnd();
	void EntryDoClickAction(class FString* ActionKey, const class FString& ActionValue);
	class FString BlueprintInit();
	bool AllowAutoscrollNavTo();
};

// 0x8 (0x770 - 0x768)
// Class ShooterGame.UI_MenuCarouselPipWidget
class UUI_MenuCarouselPipWidget : public UUI_MenuCarouselButtonWidget
{
public:
	uint8                                        Pad_4AE7[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_MenuCarouselPipWidget* GetDefaultObj();

	void SetPip(bool bNewState);
	bool PipStateChanged();
	bool IsPipActive();
	class FString Init();
	float EntryFocusTick();
	bool EntryFocusStart();
	bool EntryFocusEnd();
	class FString BlueprintInit();
};

// 0x580 (0xCE8 - 0x768)
// Class ShooterGame.UI_MissionList
class UUI_MissionList : public UPrimalSubMenuUI
{
public:
	class FName                                  CloseButtonName;                                   // 0x768(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TitleLabelName;                                    // 0x770(0x8)(Edit, ExportObject, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionListContainerName;                          // 0x778(0x8)(ConstParm, ExportObject, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionDetailsContainerName;                       // 0x780(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionDetails_MissionNameTextBlockName;           // 0x788(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionDetails_MissionDescriptionTextBlockName;    // 0x790(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionDetails_StartMissionButtonName;             // 0x798(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionDetails_StartMissionButtonTextName;         // 0x7A0(0x8)(BlueprintVisible, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionDetails_LeaderboardsButtonName;             // 0x7A8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionDetails_LeaderboardsButtonTextName;         // 0x7B0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionDetails_DifficultyTextBlockName;            // 0x7B8(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionStatusPanelName;                            // 0x7C0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MetaTagInfoClass;                                  // 0x7C8(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MissionList_WidgetType;                            // 0x7D0(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MissionRequirement_WidgetType;                     // 0x7D8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MissionObjective_WidgetType;                       // 0x7E0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MissionTimer_WidgetType;                           // 0x7E8(0x8)(ConstParm, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                WorldBuffEffectListEntry_WidgetType;               // 0x7F0(0x8)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                MissionRequirementEntry_WidgetType;                // 0x7F8(0x8)(BlueprintReadOnly, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                StartButtonDisplayText_StartMission;               // 0x800(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                StartButtonDisplayText_LeaveMission;               // 0x810(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                StartButtonDisplayText_EnableStatTracker;          // 0x820(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                StartButtonDisplayText_DisableStatTracker;         // 0x830(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionList_EntryButtonWidgetName;                 // 0x840(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionList_NameWidgetName;                        // 0x848(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionList_DescWidgetName;                        // 0x850(0x8)(Edit, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionList_ErrorTextWidgetName;                   // 0x858(0x8)(OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionList_EligibilityWidgetName;                 // 0x860(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionList_StartButtonTextWidgetName;             // 0x868(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionList_StartButtonWidgetName;                 // 0x870(0x8)(ExportObject, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ArcticIcon;                                        // 0x878(0x8)(ConstParm, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            BogIcon;                                           // 0x880(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            LunarIcon;                                         // 0x888(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            OceanIcon;                                         // 0x890(0x8)(Edit, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            VolcanicIcon;                                      // 0x898(0x8)(ConstParm, ExportObject, Net, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            SoloIcon;                                          // 0x8A0(0x8)(Edit, BlueprintVisible, Net, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            MultiplayerIcon;                                   // 0x8A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TableWidth;                                        // 0x8B0(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LatestScoreTableWidth;                             // 0x8B4(0x4)(BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxLeaderboardRowsToDisplay;                       // 0x8B8(0x4)(Edit, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextActiveColor;                           // 0x8BC(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextInactiveColor;                         // 0x8CC(0x10)(OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AE8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            TabBackgroundTexture;                              // 0x8E0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TabMirroredBackgroundTexture;                      // 0x8E8(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          AlphaMissionColor;                                 // 0x8F0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          BetaMissionColor;                                  // 0x900(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          GammaMissionColor;                                 // 0x910(0x10)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          ActiveMissionColor;                                // 0x920(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          InactiveMissionColor;                              // 0x930(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          AvailableMissionColor;                             // 0x940(0x10)(ConstParm, BlueprintVisible, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          UnavailableMissionColor;                           // 0x950(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          DefaultTextColor;                                  // 0x960(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FLinearColor                          GlitchTintColor;                                   // 0x970(0x10)(BlueprintReadOnly, Net, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          GlitchTextColor;                                   // 0x980(0x10)(Edit, ConstParm, BlueprintVisible, Net, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AE9[0x2C8];                                   // Fixing Size After Last Property  > TateDumper <
	class ULeaderboardRowWidget*                 HeaderRowWidget;                                   // 0xC58(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UVerticalBox*                          RowContainer;                                      // 0xC60(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class ULeaderboardRowWidget*>         RowWidgets;                                        // 0xC68(0x10)(ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class ULeaderboardRowWidget*                 LatestScoreRowWidget;                              // 0xC78(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UVerticalBox*                          LatestPlayerScoreRowContainer;                     // 0xC80(0x8)(BlueprintVisible, ExportObject, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AEA[0x60];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_MissionList* GetDefaultObj();

	class FText OnMissionFilterChanged();
};

// 0x48 (0x7A0 - 0x758)
// Class ShooterGame.UI_MultiUse
class UUI_MultiUse : public UPrimalUI
{
public:
	class FName                                  MyScrollBoxName;                                   // 0x758(0x8)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ActorDescriptionLabelName;                         // 0x760(0x8)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ButtonEntryWidgetTemplate;                         // 0x768(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AEB[0x30];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_MultiUse* GetDefaultObj();

	void ClickedEntry(class UWidget** ClickedWidget);
};

// 0x60 (0x7B8 - 0x758)
// Class ShooterGame.UI_Notification
class UUI_Notification : public UPrimalUI
{
public:
	class FName                                  TitleLabelName;                                    // 0x758(0x8)(Edit, ExportObject, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MessageLabelName;                                  // 0x760(0x8)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  OkButtonName;                                      // 0x768(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  BoxCanvasPanelName;                                // 0x770(0x8)(EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bReturnToMainMenuOnClose;                          // 0x778(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AEC[0x3F];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_Notification* GetDefaultObj();

};

// 0x78 (0x7E0 - 0x768)
// Class ShooterGame.UI_OptionsMenu
class UUI_OptionsMenu : public UPrimalSubMenuUI
{
public:
	class UClass*                                EntryTemplate;                                     // 0x768(0x8)(Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FOptionsSet>                   OptionsSets;                                       // 0x770(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AED[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class UPrimalUserWidget>       ModShopUIClass;                                    // 0x7B0(0x30)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UUI_OptionsMenu* GetDefaultObj();

	void ResetTutorials(class UWidget** ClickedWidget);
	void ResetCinematics(class UWidget** ClickedWidget);
	void OpenModShop(class UWidget** ClickedWidget);
	void OnGraphicsQualityComboBoxChanged(const class FString& SelectedItem);
	void OnGraphicsPresetValueChanged();
};

// 0x438 (0xBA0 - 0x768)
// Class ShooterGame.UI_OptionsMenu_UWP
class UUI_OptionsMenu_UWP : public UPrimalSubMenuUI
{
public:
	class FName                                  SaveButtonName;                                    // 0x768(0x8)(Edit, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ApplyButtonName;                                   // 0x770(0x8)(BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ResetButtonName;                                   // 0x778(0x8)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CancelButtonName;                                  // 0x780(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ResolutionWidthTextBoxName;                        // 0x788(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ResolutionHeightTextBoxName;                       // 0x790(0x8)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ResolutionsComboBoxName;                           // 0x798(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  WindowModeComboBoxName;                            // 0x7A0(0x8)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  GraphicsQualityComboBoxName;                       // 0x7A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ResolutionScaleSliderName;                         // 0x7B0(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ViewDistanceComboBoxName;                          // 0x7B8(0x8)(Edit, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AntiAliasingComboBoxName;                          // 0x7C0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PostProcessingComboBoxName;                        // 0x7C8(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ShadowsComboBoxName;                               // 0x7D0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TexturesComboBoxName;                              // 0x7D8(0x8)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EffectsComboBoxName;                               // 0x7E0(0x8)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AudioVolumeSliderName;                             // 0x7E8(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FKeyBindingItem>               KeyBindings;                                       // 0x7F0(0x10)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  InvertMouseYCheckBoxName;                          // 0x800(0x8)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CameraShakeScaleSliderName;                        // 0x808(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FirstPersonRidingCheckboxName;                     // 0x810(0x8)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ToggleToTalkCheckBoxName;                          // 0x818(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ToggleExtendedHUDInfoCheckboxName;                 // 0x820(0x8)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AF6[0x378];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_OptionsMenu_UWP* GetDefaultObj();

	float OptionsGraphTick(struct FGeometry* MyGeometry);
	class FText OnWidthChanged();
	enum class ESelectInfo OnViewDistanceComboBoxSelectionChanged(const class FString& SelectedItem);
	enum class ESelectInfo OnResolutionsComboBoxSelectionChanged(const class FString& SelectedItem);
	void OnResolutionScaleChanged(float SliderValue);
	class FText OnHeightChanged();
	void OnGraphicsQualityComboBoxChanged(const class FString& SelectedItem);
	void OnGraphicsPresetValueChanged();
};

// 0x1A8 (0x900 - 0x758)
// Class ShooterGame.UI_PaintingsList
class UUI_PaintingsList : public UPrimalUI
{
public:
	class FName                                  PaintingListName;                                  // 0x758(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SelectButtonName;                                  // 0x760(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CloseButtonName;                                   // 0x768(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DeleteButtonName;                                  // 0x770(0x8)(ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FailCloseButtonName;                               // 0x778(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LoadingLabelName;                                  // 0x780(0x8)(ConstParm, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LoadingCanvasName;                                 // 0x788(0x8)(ExportObject, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissingTextName;                                   // 0x790(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NeededTextName;                                    // 0x798(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ResourcesScrollBoxName;                            // 0x7A0(0x8)(Edit, ConstParm, ExportObject, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissingScrollBoxName;                              // 0x7A8(0x8)(ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RenamePaintingName;                                // 0x7B0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SlotButtonTemplate;                                // 0x7B8(0x8)(Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ResourceEntryTemplate;                             // 0x7C0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AF7[0xA4];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         UploadingTribeFlag;                                // 0x86C(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AF8[0x73];                                    // Fixing Size After Last Property  > TateDumper <
	class UPaintingTexture*                      Preview;                                           // 0x8E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AF9[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_PaintingsList* GetDefaultObj();

	void SetUploadingTribeFlag(bool AutoUploadLastPainting, bool* bCloseParentUIAfterFinished);
};

// 0x0 (0x758 - 0x758)
// Class ShooterGame.UI_PartySystem
class UUI_PartySystem : public UPrimalUI
{
public:

	static class UClass* StaticClass();
	static class UUI_PartySystem* GetDefaultObj();

};

// 0x260 (0x9B8 - 0x758)
// Class ShooterGame.UI_PauseMenu
class UUI_PauseMenu : public UPrimalUI
{
public:
	class FString                                CloseButtonName;                                   // 0x758(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                QuitButtonName;                                    // 0x768(0x10)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                QuitButtonTextBlockName;                           // 0x778(0x10)(BlueprintVisible, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                TestWidgetName;                                    // 0x788(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  InventoryButtonName;                               // 0x798(0x8)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  TribeManagerButtonName;                            // 0x7A0(0x8)(BlueprintReadOnly, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  OptionsButtonName;                                 // 0x7A8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                InviteFriendsButtonName;                           // 0x7B0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ServerPingTextBlockName;                           // 0x7C0(0x8)(Edit, ConstParm, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                HelpButtonName;                                    // 0x7C8(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                LeaveSplitScreenButtonName;                        // 0x7D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class UUI_OptionsMenu>         OptionsMenuUITemplate;                             // 0x7E8(0x30)(BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ConsoleCommandUITemplate;                          // 0x818(0x8)(ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class UUI_OptionsMenu_UWP>     OptionsMenuUITemplate_UWP;                         // 0x820(0x30)(ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class UUI_PCOptionsMenu>       OptionsMenuUITemplate_PC;                          // 0x850(0x30)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AShooterWeapon>>  HandcuffList;                                      // 0x880(0x10)(Edit, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AFE[0x128];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_PauseMenu* GetDefaultObj();

	void UpdateRespawnButtonLabel();
	void UpdatePlayerList(const class FString& PlayerList);
	void OpenConsoleCommandUI();
};

// 0x7C8 (0xF30 - 0x768)
// Class ShooterGame.UI_PCOptionsMenu
class UUI_PCOptionsMenu : public UPrimalSubMenuUI
{
public:
	class FName                                  SaveButtonName;                                    // 0x768(0x8)(Edit, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ApplyButtonName;                                   // 0x770(0x8)(BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ResetButtonName;                                   // 0x778(0x8)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CancelButtonName;                                  // 0x780(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ResolutionWidthTextBoxName;                        // 0x788(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ResolutionHeightTextBoxName;                       // 0x790(0x8)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ResolutionsComboBoxName;                           // 0x798(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  WindowModeComboBoxName;                            // 0x7A0(0x8)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  GraphicsQualityComboBoxName;                       // 0x7A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ResolutionScaleSliderName;                         // 0x7B0(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ViewDistanceComboBoxName;                          // 0x7B8(0x8)(Edit, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AntiAliasingComboBoxName;                          // 0x7C0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PostProcessingComboBoxName;                        // 0x7C8(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ShadowsComboBoxName;                               // 0x7D0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TexturesComboBoxName;                              // 0x7D8(0x8)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EffectsComboBoxName;                               // 0x7E0(0x8)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AudioVolumeSliderName;                             // 0x7E8(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FKeyBindingItem>               KeyBindings;                                       // 0x7F0(0x10)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  InvertMouseYCheckBoxName;                          // 0x800(0x8)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CameraShakeScaleSliderName;                        // 0x808(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FirstPersonRidingCheckboxName;                     // 0x810(0x8)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ToggleToTalkCheckBoxName;                          // 0x818(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ToggleFluidInteractionCheckboxName;                // 0x820(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ToggleExtendedHUDInfoCheckboxName;                 // 0x828(0x8)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CrosshairSizeSliderName;                           // 0x830(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CrosshairOpacitySliderName;                        // 0x838(0x8)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CrosshairColorSliderName_R;                        // 0x840(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CrosshairColorSliderName_G;                        // 0x848(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CrosshairColorSliderName_B;                        // 0x850(0x8)(Edit, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FramecapTextBoxName;                               // 0x858(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EnableFramecapCheckBoxName;                        // 0x860(0x8)(ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCancelButtonIsBackButton;                         // 0x868(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B05[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  TextChatFilterComboBoxName;                        // 0x86C(0x8)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  VoiceChatFilterComboBoxName;                       // 0x874(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  VirtualCursorSensitivitySliderName;                // 0x87C(0x8)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  BubbleParticlesMultiplierSliderName;               // 0x884(0x8)(ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ControllerVibrationCheckboxName;                   // 0x88C(0x8)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ControllerUIVibrationCheckboxName;                 // 0x894(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DisablePaintingsCheckboxName;                      // 0x89C(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DisableVirtualCursorCheckboxName;                  // 0x8A4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B06[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class UPrimalUserWidget>       ModShopUIClass;                                    // 0x8B8(0x30)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B07[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bHasChangedAnyValue;                               // 0x918(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B08[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ConfirmationDialogType;                            // 0x91C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B09[0x328];                                   // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             CrosshairColorPickerValue;                         // 0xC48(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4B0A[0x2D8];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_PCOptionsMenu* GetDefaultObj();

	bool UseConsoleVideoOptions();
	void UseAutoDetectSettingsCheckboxChanged(bool* bIsChecked);
	bool UnblockAllModsCallback();
	void ShowFinalUnblockModsMessage();
	void SetNVidiaDLSSEnabled(bool bEnabled);
	void ResetOptionsMenuValueChanged();
	void OptionsMenuValueChanged();
	float OptionsGraphTick(struct FGeometry* MyGeometry);
	void OpenModShop(class UWidget** ClickedWidget);
	class FText OnWidthChanged();
	enum class ESelectInfo OnViewDistanceComboBoxSelectionChanged(const class FString& SelectedItem);
	enum class ESelectInfo OnResolutionsComboBoxSelectionChanged(const class FString& SelectedItem);
	class FText OnHeightChanged();
	void OnGraphicsQualityComboBoxChanged(const class FString& SelectedItem);
	void OnGraphicsPresetValueChanged();
	class FText OnFPSCapChanged();
	enum class ESelectInfo OnComboBoxGenericChanged(const class FString& SelectedItem);
	void LoadSettings();
	bool IsPC();
	bool IsNvidiaGraphicCard();
	void InitializeUI();
	class UUI_PCOptionsMenu* GetLivePCOptionsMenu();
	bool GetIsNVidiaDLSSEnabled();
	void CancelUnblockAllMods(bool* bAccept);
	void BackButtonClicked();
};

// 0xC0 (0x818 - 0x758)
// Class ShooterGame.UI_PinEntry
class UUI_PinEntry : public UPrimalUI
{
public:
	class FName                                  CloseButtonName;                                   // 0x758(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  UseLastPinButtonName;                              // 0x760(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  UseLastPinButtonLabelName;                         // 0x768(0x8)(ExportObject, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ToggleShowLastPinButtonName;                       // 0x770(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ToggleShowLastPinButtonLabelName;                  // 0x778(0x8)(ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PinLabelName;                                      // 0x780(0x8)(Edit, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TitleLabelName;                                    // 0x788(0x8)(Edit, ExportObject, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          PinButtonsNames;                                   // 0x790(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B0B[0x78];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_PinEntry* GetDefaultObj();

};

// 0x2B0 (0xA40 - 0x790)
// Class ShooterGame.UI_PreviewWidget
class UUI_PreviewWidget : public UCustomCanvasWidget
{
public:
	uint8                                        Pad_4B15[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    RenderMaterial;                                    // 0x798(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FOV;                                               // 0x7A0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig)
	uint8                                        Pad_4B16[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UTextureRenderTarget2D*>        RenderTargets;                                     // 0x7A8(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               MeshScale;                                         // 0x7B8(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator                              MeshRotation;                                      // 0x7D0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CameraPivotOffset;                                 // 0x7E8(0x18)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               OverrideCameraOffset;                              // 0x800(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             PanExtents;                                        // 0x818(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CustomLimitedPanExtentsY;                          // 0x828(0x4)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PanSpeed;                                          // 0x82C(0x4)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PanBrakeSpeed;                                     // 0x830(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CameraDistance;                                    // 0x834(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaximumZoomMultiplier;                             // 0x838(0x4)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinimumZoomMultiplier;                             // 0x83C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DefaultZoomMultiplier;                             // 0x840(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PCRenderTargetScale;                               // 0x844(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bLimitPivotOffset;                                 // 0x848(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B17[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxLimitPivotOffset;                               // 0x84C(0x4)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FemalePivotOffsetMultiplier;                       // 0x850(0x4)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BrakeSpeed;                                        // 0x854(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ZoomInterpSpeed;                                   // 0x858(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WheelDeltaMultiplier;                              // 0x85C(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RotationSpeed;                                     // 0x860(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinPitch;                                          // 0x864(0x4)(ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxPitch;                                          // 0x868(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAutoRotateWidget;                                 // 0x86C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B18[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              AutoRotator;                                       // 0x870(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCanResetCamera;                                   // 0x888(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ESkyLightSourceType               AmbientSourceType;                                 // 0x889(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B19[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UTextureCube*                          AmbientCubemap;                                    // 0x890(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	struct FColor                                AmbientLightColor;                                 // 0x898(0x4)(ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AmbientBrightness;                                 // 0x89C(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSwapInput : 1;                                    // Mask: 0x1, PropSize: 0x10x8A0(0x1)(ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bChangeDirectionalLightRelativeRotation : 1;       // Mask: 0x2, PropSize: 0x10x8A0(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3E9 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4B1A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              DirectionalLightRelativeRotation;                  // 0x8A8(0x18)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               DirectionalLightRelativeLocation;                  // 0x8C0(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                DirectionalLightColor;                             // 0x8D8(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DirectionalLightBrightness;                        // 0x8DC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RTQualityMultiplier;                               // 0x8E0(0x4)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideShadowBias;                                // 0x8E4(0x4)(ConstParm, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTextureRenderTarget2D*                RenderTarget;                                      // 0x8E8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        ZoomMultiplier;                                    // 0x8F0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint32                                       UpdateSkyTickCount;                                // 0x8F4(0x4)(BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B1B[0x48];                                    // Fixing Size After Last Property  > TateDumper <
	class UWorld*                                GameWorld;                                         // 0x940(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TargetZoomMultiplier;                              // 0x948(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B1C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class USceneComponent*>               PreviewComponents;                                 // 0x950(0x10)(Edit, ConstParm, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	struct FVector2D                             RotationVelocity;                                  // 0x960(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             PanVelocity;                                       // 0x970(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             Pan;                                               // 0x980(0x10)(ConstParm, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UMeshComponent*                        PreviewMesh;                                       // 0x990(0x8)(Edit, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
	class UWorld*                                PreviewWorld;                                      // 0x998(0x8)(ConstParm, EditFixedSize, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	class USceneCaptureComponent2D*              CaptureComponent;                                  // 0x9A0(0x8)(Parm, OutParm, Transient, Config, EditConst, SubobjectReference)
	class UDirectionalLightComponent*            DirctionalLight;                                   // 0x9A8(0x8)(Edit, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USkyLightComponent*                    SkyLight;                                          // 0x9B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst)
	class ULineBatchComponent*                   LineBatcher;                                       // 0x9B8(0x8)(ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          PreviewWidgetColorFactor;                          // 0x9C0(0x10)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B1D[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class APrimalPreviewSceneSetup*              PreviewSceneSetup;                                 // 0x9E0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PreviewSceneSetupTemplate;                         // 0x9E8(0x8)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalPreviewSceneSetup> PreviewSceneSetupTemplateSoftRef;                  // 0x9F0(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bManuallyInitializePreviewSceneSetup;              // 0xA20(0x1)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B1F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              OrbitRotation;                                     // 0xA28(0x18)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UUI_PreviewWidget* GetDefaultObj();

	void UpdateSkyCaptures();
	float SetTargetZoomMultiplier();
	float ResetZoomTo();
	void InitializePreviewSceneSetup();
	class UMeshComponent* GetPreviewMesh();
	class UMeshComponent* GetMeshComponent();
	class USceneCaptureComponent2D* GetCaptureComponent();
	void ClearRotationVelocity();
};

// 0x20 (0x778 - 0x758)
// Class ShooterGame.UI_PrimalTest
class UUI_PrimalTest : public UPrimalUI
{
public:
	class FString                                VerticalBoxName;                                   // 0x758(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ChildWidgetTemplate;                               // 0x768(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B24[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_PrimalTest* GetDefaultObj();

};

// 0xD90 (0x14E8 - 0x758)
// Class ShooterGame.UI_ProceduralSettings
class UUI_ProceduralSettings : public UPrimalUI
{
public:
	class FName                                  CancelButtonName;                                  // 0x758(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HostButtonName;                                    // 0x760(0x8)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ResetButtonName;                                   // 0x768(0x8)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RandomizeButtonName;                               // 0x770(0x8)(Edit, ConstParm, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  LoadFavoriteButtonName;                            // 0x778(0x8)(ConstParm, BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SaveFavoriteButtonName;                            // 0x780(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PresetsComboBoxName;                               // 0x788(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FavoriteComboBoxName;                              // 0x790(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ArkNameTextBoxName;                                // 0x798(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MapSeedTextBoxName;                                // 0x7A0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LandscapeRadiusTextBoxName;                        // 0x7A8(0x8)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  WaterFrequencyTextBoxName;                         // 0x7B0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MountainFrequencyTextBoxName;                      // 0x7B8(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MountainSlopeTextBoxName;                          // 0x7C0(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MountainHeightTextBoxName;                         // 0x7C8(0x8)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TurbulencePowerTextBoxName;                        // 0x7D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ShoreSlopeTextBoxName;                             // 0x7D8(0x8)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  WaterLevelTextBoxName;                             // 0x7E0(0x8)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  GrassDensityTextBoxName;                           // 0x7E8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  JungleGrassDensityTextBoxName;                     // 0x7F0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  OceanFloorLevelTextBoxName;                        // 0x7F8(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SnowBiomeSizeTextBoxName;                          // 0x800(0x8)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RedwoodBiomeSizeTextBoxName;                       // 0x808(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MountainBiomeStartTextBoxName;                     // 0x810(0x8)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MountainTreeDensityTextBoxName;                    // 0x818(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  JungleBiomeStartTextBoxName;                       // 0x820(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  IslandBorderCurveTextBoxName;                      // 0x828(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MaxSawnHeightTextBoxName;                          // 0x830(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MountainGrassDensityTextBoxName;                   // 0x838(0x8)(Edit, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SnowGrassDensityTextBoxName;                       // 0x840(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SnowMountainGrassDensityTextBoxName;               // 0x848(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SnowBiomeLocationXTextBoxName;                     // 0x850(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SnowBiomeLocationYTextBoxName;                     // 0x858(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RedwoodBiomeLocationXTextBoxName;                  // 0x860(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RedwoodBiomeLocationYTextBoxName;                  // 0x868(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TerrainScaleXTextBoxName;                          // 0x870(0x8)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TerrainScaleYTextBoxName;                          // 0x878(0x8)(Edit, ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TerrainScaleZTextBoxName;                          // 0x880(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  North1StartXTextBoxName;                           // 0x888(0x8)(Edit, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  North1StartYTextBoxName;                           // 0x890(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  North1EndXTextBoxName;                             // 0x898(0x8)(BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  North1EndYTextBoxName;                             // 0x8A0(0x8)(BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  North2StartXTextBoxName;                           // 0x8A8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  North2StartYTextBoxName;                           // 0x8B0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  North2EndXTextBoxName;                             // 0x8B8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  North2EndYTextBoxName;                             // 0x8C0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  North3StartXTextBoxName;                           // 0x8C8(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  North3StartYTextBoxName;                           // 0x8D0(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  North3EndXTextBoxName;                             // 0x8D8(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  North3EndYTextBoxName;                             // 0x8E0(0x8)(Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  South1StartXTextBoxName;                           // 0x8E8(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  South1StartYTextBoxName;                           // 0x8F0(0x8)(ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  South1EndXTextBoxName;                             // 0x8F8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  South1EndYTextBoxName;                             // 0x900(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  South2StartXTextBoxName;                           // 0x908(0x8)(Edit, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  South2StartYTextBoxName;                           // 0x910(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  South2EndXTextBoxName;                             // 0x918(0x8)(ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  South2EndYTextBoxName;                             // 0x920(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  South3StartXTextBoxName;                           // 0x928(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  South3StartYTextBoxName;                           // 0x930(0x8)(ConstParm, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  South3EndXTextBoxName;                             // 0x938(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  South3EndYTextBoxName;                             // 0x940(0x8)(ConstParm, ExportObject, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  East1StartXTextBoxName;                            // 0x948(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  East1StartYTextBoxName;                            // 0x950(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  East1EndXTextBoxName;                              // 0x958(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  East1EndYTextBoxName;                              // 0x960(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  East2StartXTextBoxName;                            // 0x968(0x8)(BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  East2StartYTextBoxName;                            // 0x970(0x8)(BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  East2EndXTextBoxName;                              // 0x978(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  East2EndYTextBoxName;                              // 0x980(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  East3StartXTextBoxName;                            // 0x988(0x8)(ConstParm, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  East3StartYTextBoxName;                            // 0x990(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  East3EndXTextBoxName;                              // 0x998(0x8)(Edit, ConstParm, ExportObject, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  East3EndYTextBoxName;                              // 0x9A0(0x8)(Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  West1StartXTextBoxName;                            // 0x9A8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  West1StartYTextBoxName;                            // 0x9B0(0x8)(ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  West1EndXTextBoxName;                              // 0x9B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  West1EndYTextBoxName;                              // 0x9C0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  West2StartXTextBoxName;                            // 0x9C8(0x8)(ConstParm, BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  West2StartYTextBoxName;                            // 0x9D0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  West2EndXTextBoxName;                              // 0x9D8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  West2EndYTextBoxName;                              // 0x9E0(0x8)(BlueprintVisible, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  West3StartXTextBoxName;                            // 0x9E8(0x8)(ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  West3StartYTextBoxName;                            // 0x9F0(0x8)(BlueprintVisible, ExportObject, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  West3EndXTextBoxName;                              // 0x9F8(0x8)(Edit, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  West3EndYTextBoxName;                              // 0xA00(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B2B[0xAE0];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_ProceduralSettings* GetDefaultObj();

	class FText OnTextCommitted(enum class ETextCommit* CommitMethod);
	enum class ESelectInfo OnPresetSelectionChanged(const class FString& SelectedItem);
};

// 0x60 (0x7B8 - 0x758)
// Class ShooterGame.UI_SavePainting
class UUI_SavePainting : public UPrimalUI
{
public:
	class FName                                  CloseButtonName;                                   // 0x758(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SaveButtonName;                                    // 0x760(0x8)(Edit, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FileNameTextBoxName;                               // 0x768(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ErrorTextBoxName;                                  // 0x770(0x8)(ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B2E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         OverrideExisting;                                  // 0x780(0x1)(ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B2F[0x37];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_SavePainting* GetDefaultObj();

	void HandleFilterStringTextCommitted(class FText NewText, enum class ETextCommit* CommitMethod);
	void HandleFilterStringTextChanged(class FText NewText);
};

// 0x8 (0x760 - 0x758)
// Class ShooterGame.UI_SavingOverlay
class UUI_SavingOverlay : public UPrimalUI
{
public:
	uint8                                        Pad_4B30[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_SavingOverlay* GetDefaultObj();

};

// 0xC8 (0x820 - 0x758)
// Class ShooterGame.UI_ServerBroadcastMessage
class UUI_ServerBroadcastMessage : public UPrimalUI
{
public:
	class FString                                MessageTextBlockName;                              // 0x758(0x10)(ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSlateFontInfo                        BoldFont;                                          // 0x768(0x58)(Edit, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSlateFontInfo                        RegularFont;                                       // 0x7C0(0x58)(ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B31[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_ServerBroadcastMessage* GetDefaultObj();

};

// 0x38 (0x790 - 0x758)
// Class ShooterGame.UI_SessionSortArrow
class UUI_SessionSortArrow : public UPrimalUI
{
public:
	uint8                                        Pad_4B32[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  ImageName;                                         // 0x760(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            UpImage;                                           // 0x768(0x8)(Edit, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DownImage;                                         // 0x770(0x8)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EmptyImage;                                        // 0x778(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B33[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_SessionSortArrow* GetDefaultObj();

};

// 0x68 (0x7C0 - 0x758)
// Class ShooterGame.UI_SpawnPoint
class UUI_SpawnPoint : public UPrimalUI
{
public:
	uint8                                        Pad_4B34[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	class FName                                  SpawnPointImageName;                               // 0x76C(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B35[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            SpawnPointImageNormal;                             // 0x778(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            SpawnPointImageDisabled;                           // 0x780(0x8)(Edit, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            SpawnPointImageSelected;                           // 0x788(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CurrentLocation;                                   // 0x790(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            MarkerTexture;                                     // 0x798(0x8)(Edit, ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DefaultDestinationImageName;                       // 0x7A0(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B36[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_SpawnPoint* GetDefaultObj();

};

// 0x90 (0x7E8 - 0x758)
// Class ShooterGame.UI_SteamInventoryStatusPopup
class UUI_SteamInventoryStatusPopup : public UPrimalUI
{
public:
	class FName                                  CloseButtonName;                                   // 0x758(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TitleLabelName;                                    // 0x760(0x8)(Edit, ExportObject, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DownloadMessageLabelName;                          // 0x768(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  UploadMessageLabelName;                            // 0x770(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                TitleText;                                         // 0x778(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                MessageText;                                       // 0x788(0x10)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Config, GlobalConfig, SubobjectReference)
	int32                                        NumberOfDots;                                      // 0x798(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeoutInterval;                                   // 0x79C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DotsUpdateInterval;                                // 0x7A0(0x4)(Edit, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B3A[0x44];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_SteamInventoryStatusPopup* GetDefaultObj();

};

// 0x90 (0x7E8 - 0x758)
// Class ShooterGame.UI_Subtitles
class UUI_Subtitles : public UPrimalUI
{
public:
	class FName                                  SubtitlesTextBoxName;                              // 0x758(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DialogueTextBoxName;                               // 0x760(0x8)(BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DialogueIconImageName;                             // 0x768(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnProcessDynamicMaterialForDialogueIcon;           // 0x770(0x10)(Edit, ConstParm, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSubtitleCue>                  SoundWaveSubtitles;                                // 0x780(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B4E[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class USoundCue*                             CurrentlyPlayingSound;                             // 0x7A8(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundWave*                            CurrentlyPlayingSoundWave;                         // 0x7B0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B4F[0x30];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_Subtitles* GetDefaultObj();

	class FText SetSubtitleFromText();
	class UMaterialInterface* SetSubtitleFromStringWithDurationAndIcon();
	class FString SetSubtitleFromString();
	class UMaterialInterface* SetSubtitleFromSoundWave();
	class UMaterialInterface* SetSubtitleFromSoundCue();
	class UTexture2D* SetIconMaterialParams();
	void OnShowSubtitles();
	void OnHideSubtitles();
	bool IsIconVisible();
	bool IsCurrentIconEqualToGivenIcon();
	void HideSubtitles();
	float ForceSetSubtitlesManualTime();
};

// 0x468 (0xBD0 - 0x768)
// Class ShooterGame.UI_SurvivorProfile
class UUI_SurvivorProfile : public UPrimalSubMenuUI
{
public:
	uint8                                        Pad_4B60[0x298];                                   // Fixing Size After Last Property  > TateDumper <
	class USoundWave*                            AsyncLoadedSoundWave;                              // 0xA00(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B62[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UMaterialInstanceDynamic*>      ExplorerNoteDynamicMaterials;                      // 0xA60(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B63[0x60];                                    // Fixing Size After Last Property  > TateDumper <
	class USoundCue*                             AsyncLoadedSoundCue;                               // 0xAD0(0x8)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B64[0x70];                                    // Fixing Size After Last Property  > TateDumper <
	class UGenericDataListEntry*                 AsyncLoadingDinoEntry;                             // 0xB48(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            AsyncLoadedDinoTexture;                            // 0xB50(0x8)(Edit, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            AsyncLoadedDialogueAnimTexture;                    // 0xB58(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       DialogueSoundComponent;                            // 0xB60(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowingDossiers;                                  // 0xB68(0x1)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowingScorchedEarth;                             // 0xB69(0x1)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B67[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  ExplorerNoteMaterialParameterName;                 // 0xB6C(0x8)(ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExplorerNoteAnimTextureParamName;                  // 0xB74(0x8)(Edit, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExplorerNoteAnimTextureStartTimeParamName;         // 0xB7C(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExplorerNoteAnimTextureDurationParamName;          // 0xB84(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExplorerNoteAnimTextureDurationOffset;             // 0xB8C(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExplorerNoteFadeInSpeed;                           // 0xB90(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExplorerNoteFadeOutSpeed;                          // 0xB94(0x4)(BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShowDossierTitleDelayTime;                         // 0xB98(0x4)(ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExplorerNoteExtraCloseTime;                        // 0xB9C(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        NoteCategoryNames;                                 // 0xBA0(0x10)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSlateBrush>                   CategoryIcons;                                     // 0xBB0(0x10)(ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B6A[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_SurvivorProfile* GetDefaultObj();

	bool ShowExplorerNoteEntry();
	void SetFirstFitDisplay(int32* ID);
	void OnSubtitlesCheckboxChanged(bool InNewState);
	class FText OnNoteNameFilterChanged();
	void OnMoviePlaybackFinished(class FString* MoviePath, bool* bPlaybackWasCancelled);
	void HideDossier();
};

// 0x108 (0x870 - 0x768)
// Class ShooterGame.UI_TamingList
class UUI_TamingList : public UPrimalSubMenuUI
{
public:
	class UClass*                                TamingListEntryTemplate;                           // 0x768(0x8)(ExportObject, Net, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            POI_Icon;                                          // 0x770(0x8)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B6D[0xF8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_TamingList* GetDefaultObj();

	class FText SearchTextChanged();
};

// 0x98 (0x7F0 - 0x758)
// Class ShooterGame.UI_TextEntry
class UUI_TextEntry : public UPrimalUI
{
public:
	class FName                                  CloseButtonName;                                   // 0x758(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AcceptButtonName;                                  // 0x760(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TitleLabelName;                                    // 0x768(0x8)(Edit, ExportObject, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EditTextBoxName;                                   // 0x770(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CheckBoxName;                                      // 0x778(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CheckBoxLabelName;                                 // 0x780(0x8)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxOpenTime;                                       // 0x788(0x4)(BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B73[0x56];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bNumericValue;                                     // 0x7E2(0x1)(ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bLimitInput;                                       // 0x7E3(0x1)(Edit, ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        LimitCount;                                        // 0x7E4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCanCommitEmptyString;                             // 0x7E8(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNumericAndChar;                                   // 0x7E9(0x1)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B75[0x6];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_TextEntry* GetDefaultObj();

	class FText OnTextCommitted(enum class ETextCommit* CommitMethod);
	class FText OnTextChanged();
};

// 0x4C8 (0xC30 - 0x768)
// Class ShooterGame.UI_TribeManager
class UUI_TribeManager : public UPrimalSubMenuUI
{
public:
	class FName                                  CreateNewTribeButtonName;                          // 0x768(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LeaveTribeButtonName;                              // 0x770(0x8)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TribeNameLabelName;                                // 0x778(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TribeNameEditBoxName;                              // 0x780(0x8)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RemovePlayerFromTribeButtonName;                   // 0x788(0x8)(Edit, ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ManageTribePanelName;                              // 0x790(0x8)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NewTribePanelName;                                 // 0x798(0x8)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MyScrollBoxName;                                   // 0x7A0(0x8)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ReverseLogOrderButtonName;                         // 0x7A8(0x8)(OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TribePlayerEntryButtonTemplate;                    // 0x7B0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TribeWarEntryButtonTemplate;                       // 0x7B8(0x8)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TribeAllianceEntryButtonTemplate;                  // 0x7C0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TribeAllianceMemberEntryButtonTemplate;            // 0x7C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                RankEntryButtonTemplate;                           // 0x7D0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextActiveColor;                           // 0x7D8(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextInactiveColor;                         // 0x7E8(0x10)(OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	double                                       LastPlayerRefreshTime;                             // 0x7F8(0x8)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B90[0x430];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_TribeManager* GetDefaultObj();

	void TribeWarEntryButtonSelected(class UWidget* TheWidget);
	void TribeAllianceMemberButtonSelected(class UWidget* TheWidget);
	void TribeAllianceEntryButtonSelected(class UWidget* TheWidget);
	void RankGroupButtonSelected(class UWidget* TheWidget);
	void PlayerEntryButtonSelected(class UWidget* TheWidget);
	enum class ESelectInfo OnGroupRankSelectedSelector(const class FString& SelectedItem);
	enum class ESelectInfo OnGroupRankSelected(const class FString& SelectedItem);
	int32 BPRankGroupIndexSelected();
	int32 BPRankGroupIndexApplied();
};

// 0x58 (0x7B0 - 0x758)
// Class ShooterGame.UI_TribeWarEntry
class UUI_TribeWarEntry : public UPrimalUI
{
public:
	uint8                                        Pad_4B9B[0x58];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_TribeWarEntry* GetDefaultObj();

	class FText OnTextCommitted(enum class ETextCommit* CommitMethod);
	class FText OnTextChanged();
};

// 0x30 (0x788 - 0x758)
// Class ShooterGame.UI_Tutorial
class UUI_Tutorial : public UPrimalUI
{
public:
	class FName                                  TutorialTitleLabelName;                            // 0x758(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TutorialTextLabelName;                             // 0x760(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TutorialImageName;                                 // 0x768(0x8)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B9F[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_Tutorial* GetDefaultObj();

};

// 0x60 (0x7B8 - 0x758)
// Class ShooterGame.UI_Welcome
class UUI_Welcome : public UPrimalUI
{
public:
	class FName                                  NicknameLabelName;                                 // 0x758(0x8)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LoadingLabelName;                                  // 0x760(0x8)(ConstParm, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  OkButtonName;                                      // 0x768(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MainMenuTemplate;                                  // 0x770(0x8)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                NotifClass;                                        // 0x778(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4BA1[0x38];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_Welcome* GetDefaultObj();

};

// 0x48 (0x7A0 - 0x758)
// Class ShooterGame.UI_XBoxFooter
class UUI_XBoxFooter : public UPrimalUI
{
public:
	uint8                                        Pad_4BA2[0x48];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_XBoxFooter* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.VictoryCoreHighest
class UVictoryCoreHighest : public UObject
{
public:

	static class UClass* StaticClass();
	static class UVictoryCoreHighest* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.VictoryCore
class UVictoryCore : public UVictoryCoreHighest
{
public:

	static class UClass* StaticClass();
	static class UVictoryCore* GetDefaultObj();

	bool VTraceSphereBP_IgnoreActorsArray(class UObject** WorldContextObject, struct FVector* Start, struct FVector* End, struct FHitResult* HitOut, float Radius, int32* CollisionGroups, bool* bReturnPhysMaterial, class FName* TraceTag);
	bool VTraceSphereBP(class UObject** WorldContextObject, struct FVector* Start, struct FVector* End, struct FHitResult* HitOut, float Radius, class AActor* ActorToIgnore, int32* CollisionGroups, bool* bReturnPhysMaterial, class FName* TraceTag, class AActor** OtherActorToIgnore, class AActor** AnotherActorToIgnore);
	bool VTraceSingleBP_IgnoreActorsArray(class UObject** WorldContextObject, struct FVector* Start, struct FVector* End, int32* CollisionGroups, class FName* TraceTag, bool* bReturnPhysMaterial);
	bool VTraceSingleBP(class UObject** WorldContextObject, struct FVector* Start, struct FVector* End, int32* CollisionGroups, class FName* TraceTag, class AActor* ActorToIgnore);
	bool VTraceShapeMultiBP(class UObject** WorldContextObject, TArray<struct FHitResult>* OutHits, struct FVector* Start, struct FVector* End, int32* CollisionGroups, bool* bReturnPhysMaterial, class FName* TraceTag);
	bool VTraceShapeBP(class UObject** WorldContextObject, struct FVector* Start, struct FVector* End, struct FHitResult* HitOut, int32* CollisionGroups, bool* bReturnPhysMaterial, class FName* TraceTag);
	bool VTraceMultiBP_IgnoreActorsArray(class UObject** WorldContextObject, TArray<struct FHitResult>* OutHits, struct FVector* Start, struct FVector* End, int32* CollisionGroups, struct FVector* BoxExtent, bool* bReturnPhysMaterial, class FName* TraceTag);
	bool VTraceMultiBP(class UObject** WorldContextObject, TArray<struct FHitResult>* OutHits, struct FVector* Start, struct FVector* End, int32* CollisionGroups, struct FVector* BoxExtent, bool* bReturnPhysMaterial, class FName* TraceTag);
	bool VTraceAgainstActorExpensive(class UObject** WorldContextObject, struct FVector* Start, struct FVector* End, struct FHitResult* HitOut, int64* CollisionGroups, bool* bReturnPhysMaterial, struct FVector* BoxExtent, class FName* TraceTag);
	class UObject* VNewObjectTransient(class UClass** ClassToUse);
	class UObject* VNewObjectFromBlueprintOuter(class UClass** ClassToUse);
	class UObject* VNewObjectFromBlueprint(class UObject** WorldContextObject, class UClass** ClassToUse);
	bool VisualLog_Print(class AActor** Actor, class FString* Message);
	float VisualLog_Location(class AActor** Actor, class FString* Message, struct FVector* Location, bool* bAlsoPrintMessage);
	float VisualLog_LineSegment(class AActor** Actor, class FString* Message, struct FVector* Start, struct FVector* End, bool* bAlsoPrintMessage);
	class FName VisualLog_Histogram(class AActor** Actor, struct FVector2D* DataSample, class FName* DataName);
	bool VisualLog_AxisAlignedBox(class AActor** Actor, class FString* Message, struct FVector* BoxMin, struct FVector* BoxMax, struct FLinearColor* BoxColor, bool* bAlsoPrintMessage);
	void ViewTrailer(bool* bAnimatedSeriesTrailer, bool* bARK2Trailer);
	struct FVector ViewDirectionAngleOffset(struct FVector* RightVector, float* AngleOffsetDegrees, float* MaxAngleDegreesBeforeInterpToUp);
	float VectorDistance();
	void UseCooldown(class UObject** WorldContextObject, double CooldownClock);
	class UActorComponent* UnRegisterComponentBP();
	void TrimArray_Vector(TArray<struct FVector>* Array, int32* MaxLength, bool* bRemoveFromEnd);
	void TrimArray_Float(TArray<float>* Array, int32* MaxLength, bool* bRemoveFromEnd);
	struct FVector2D TransformVectorByScreenProjectionGlobalTransform(struct FVector2D* OutVec);
	bool TraceProjectileArc(class UObject** WorldContextObject, struct FProjectileArc* Arc, struct FHitResult* HitResult, float* EndArcTime, struct FVector* ArcPeakLocation, float* MaxArcLength, const TArray<class AActor*>& ActorsToIgnore, float* ArcTimeStep, enum class ECollisionChannel* CollisionChannel, bool* bTraceObjectTypeOnly);
	void ToggleFreezeLevelStreaming(class UObject** WorldContextObject);
	float TimeSince_Utc();
	float TimeSince_Network(class UObject** WorldContextObject);
	float TimeSince(class UObject** WorldContextObject);
	float TimeSeconds(class UObject** WorldContextObject);
	bool SupportsShaderModel5();
	int32 StringToIntAscii(class FString* SourceString, int32* StringIndex);
	class UClass* StringReferenceToClass(class FString* StringReference);
	void StopMusic(class UObject** WorldContextObject, class FString* TrackToStop, float* CrossFadeOutDuration);
	void StopMovie();
	void StopCompanionEventForPlayer(class APrimalCharacter** Player);
	void StopAllMusicTracks(class UObject** WorldContextObject);
	void SteamOverlayOpenURL(class FString* ToURL);
	bool StaticPlaySoundAtLocation(class UObject** WorldContextObject, class USoundBase** Sound, struct FVector* Location, struct FRotator* Rotation, float* VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundConcurrency* ConcurrencySettings, class UInitialActiveSoundParams** InitialParams);
	float StaticGetTimeSince(class UObject** WorldContextObject);
	bool StaticCheckForCommand(class FString* CommandName);
	struct FCompanionEventData StartCompanionEventForPlayer(class APrimalCharacter** Player, class AActor** EventActor);
	bool SplineLineTrace(const TArray<class AActor*>& ActorsToIgnore, TArray<struct FHitResult>* OutHits, int32* NumTracesPerSegment, bool* bStopOnBlockingHit);
	bool SphereOverlapFast(class UObject** WorldContextObject, float Radius);
	class APrimalStructure* SpawnSaddleAttachedStructure(class UClass** StructureToSpawn, struct FVector* Location, struct FRotator* Rotation, bool* bLinkToParent, int32* ConfigIndex, class FName* SKAttachmentSocketOrBoneName);
	TArray<class APrimalDinoCharacter*> SpawnFollowerBasedOnRNG(TArray<float>* WeightedChanceArray, TSoftClassPtr<class APrimalDinoCharacter> FollowerClass, float* SpawnChanceMultiplier, float SpawnCountMultiplier, bool bIsChild, float AgeMin, float AgeMax);
	class APrimalDinoCharacter* SpawnFollower(TSoftClassPtr<class APrimalDinoCharacter> FollowerClass, bool bIsChild, float AgeMin, float AgeMax);
	class APrimalDinoCharacter* SpawnCustomDino(class UObject** WorldContextObject, bool bUseExactSpawnLocation, bool bSuppressTamingNotifications);
	class ABrush* SpawnBoxBrushActorFast(class UClass** BrushType, const struct FTransform& BrushTransform, struct FVector* BoxExtent);
	class ABrush* SpawnBoxBrushActor(class UClass** BrushType, const struct FTransform& BrushTransform, struct FVector* BoxExtent);
	class AActor* SpawnActorInWorld(class UObject** WorldContextObject, class UClass** AnActorClass, struct FRotator* AtRotation, int32* DataIndex, class APawn* InstigatorPawn);
	class AActor* SpawnActorDeferred(class UClass* Class, class UObject** WorldContextObject, struct FVector* Location, struct FRotator* Rotation, class AActor** Owner, class APawn* Instigator, bool bNoCollisionFail);
	TArray<struct FVector> SortPointsByDistance(const struct FVector& FromLoc);
	TArray<class AActor*> SortActorsByType();
	TArray<class AActor*> SortActorsByTag(int32 TagIndex);
	class AActor* SortActorsByDistanceReturnNearest(const struct FVector& FromLoc, bool bRemoveNullEntries);
	TArray<class AActor*> SortActorsByDistance(const struct FVector& FromLoc);
	class FString SimpleReplaceUnicodeWithSupportedAlternatives(const class FString& OriginalString);
	class FString SimpleFloatString(float InputVal);
	struct FVector SimpleCurveInterpClampedVector(float Alpha);
	struct FTransform SimpleCurveInterpClampedTransform(float Alpha);
	struct FRotator SimpleCurveInterpClampedRotator(float Alpha, bool bShortestPath);
	struct FLinearColor SimpleCurveInterpClampedLinearColor(float Alpha);
	float SimpleCurveInterpClamped(float Alpha);
	float SimpleCurveEval(float* Value);
	float ShowEditorNotification(class UObject** WorldContextObject, class FString* Message, bool* bServerOnly);
	enum class ETickingGroup SetTickGroupBP();
	void SetSessionPrefix(const class FString& InPrefix);
	void SetSelectedLevelActors(const TArray<class AActor*>& ActorsToSelect, bool bClearPreviousSelection);
	bool SetMultiUseEntryPriority(bool bFindByUseIndexInsteadOfArrayIndex);
	float SetMousePosition();
	class UPrimalItem* SetMaterialColorizationFromItemColors(class UMaterialInstanceDynamic* DynamicMic);
	void SetLevelActorFolderPath(class AActor** Actor, class FName FolderPath);
	void SetLastMapPlayed(const class FString& NewLastMapPlayed);
	void SetGrassEnable(bool bGrassEnable);
	enum class EPrimalCharacterStatusValue SetDinoSetupPointsPerStat(int32* Value, bool bIsPlayerAdded, bool bAddInsteadOfSet);
	class UPrimitiveComponent* SetComponentCustomNavigableGeometry(uint8 CustomNavigableGeometryType);
	int32 SetBoolArrayElemTrue(const TArray<bool>& TheArray);
	int32 SetBoolArrayElemFalse(const TArray<bool>& TheArray);
	struct FRotator SetAnimBPOffsets(class UAnimInstance* ForAnimInstance, struct FTransform* RootOffsetTransform);
	void SetAllowControllerInputWithCursor(bool* bAllow);
	bool ServerSearchFoliageByResource(class UObject** WorldContextObject, struct FVector* Origin, float Radius, const TArray<struct FOverlappedFoliageElement>& OutFoliage, const TArray<class UClass*>& HarvestResources, bool bVisibleAndActiveOnly, bool* bIncludeUsableFoliage, bool* bIncludeMeshFoliage, bool* bReverseSort);
	bool ServerSearchFoliage(class UObject** WorldContextObject, struct FVector* Origin, float Radius, const TArray<struct FOverlappedFoliageElement>& OutFoliage, bool bVisibleAndActiveOnly, bool* bIncludeUsableFoliage, bool* bIncludeMeshFoliage, bool* bReverseSort);
	TArray<class AActor*> ServerOctreeOverlapActorsClassBitMask(class UObject** WorldContextObject, float Radius, int32* OctreeTypeBitMask, bool* bForceActorLocationDistanceCheck);
	TArray<class AActor*> ServerOctreeOverlapActorsClass(class UObject** WorldContextObject, float Radius, enum class EServerOctreeGroup* OctreeType, bool* bForceActorLocationDistanceCheck);
	TArray<class AActor*> ServerOctreeOverlapActorsBitMask(class UObject** WorldContextObject, float Radius, int32* OctreeTypeBitMask, bool* bForceActorLocationDistanceCheck);
	TArray<class AActor*> ServerOctreeOverlapActors(class UObject** WorldContextObject, float Radius, enum class EServerOctreeGroup* OctreeType, bool* bForceActorLocationDistanceCheck);
	bool ServerCheckMeshingOnActor(class AActor** OnActor, bool* bForceUseActorCenterBounds);
	struct FVector SelectVectorIfWithinRange(bool* PickedA);
	struct FVector SelectCloserVector(struct FVector* Origin, bool* PickedA);
	struct FVector RotateDirToTargetWithAngleLimits(struct FVector* RotateDir, struct FVector* TowardsDir, struct FRotator* WithAngleLimits, bool* bForceZeroRoll);
	void ReupdateCaptures(class UObject** WorldContextObject, bool* bReinitSkylights);
	class APlayerController* ResetMousePositionToCenter();
	void ResetCooldown(double CooldownClock);
	void ResetCharacterBoneModifiersToPreset(class UObject** WorldContextObject, class UPrimalPlayerData* PlayerData, class AShooterPlayerState** UsedPlayerState, int32 PresetIndex);
	struct FRotator RemoveRollFromRotator(struct FRotator* FromRotator);
	struct FRotator RemovePitchAndRollFromRotator(struct FRotator* FromRotator);
	bool RemoveNetworkActorFromWorld_StopsReplication(class UObject** WorldContextObject, class AActor** ActorToRemove);
	int32 RemoveLocalPlayer();
	TArray<class APrimalDinoCharacter*> RemoveInvalidObjectsInContainer(TArray<class APrimalDinoCharacter*>* FContainer);
	class AActor* RemoveFromActorList(class UObject** WorldContextObject);
	bool RemoveActorFromCustomActorList(class UObject** WorldContextObject, class AActor** ActorToRemove);
	class UActorComponent* RegisterComponentBP();
	void RefreshApplySoundVolumes();
	void RefreshApplySoundAndMusicVolumes();
	void RecursivelyApplDynamicMaterialParamsToMeshAndChildren_Helper(class UMeshComponent** WithMesh, TArray<class FName>* DynamicMaterialParams_Scalar_Names, TArray<float>* DynamicMaterialParams_Scalar, TArray<class FName>* DynamicMaterialParams_Vector_Names, TArray<struct FVector>* DynamicMaterialParams_Vector, TArray<class FName>* DynamicMaterialParams_Texture_Names, TArray<class UTexture*>* DynamicMaterialParams_Texture);
	void RecordMeshingMetrics(class AActor** ForActor, bool* bWasDestroyed);
	bool ReallySupportsShaderModel5();
	struct FVector RandomPointInBoundingBoxFromStream(struct FVector* Origin, struct FVector* BoxExtent);
	class UObject* PureDefaultObject();
	class UObject* PureClassDefaultObject();
	bool ProjectWorldLocationToScreenOrScreenEdgePosition(float ScreenMarginPercent, bool WidgetSpace, bool OnScreen, bool bAdjustWithScreenDPI);
	struct FVector ProjectVectorOntoInsideOfSphere(const struct FVector& ProjectVector, const struct FVector& ProjectVectorLocation, bool bOnlyProjectIfVectorIsLeavingSphere);
	struct FVector ProjectScreenLocationIntoWorld(class APlayerController** ForPC, float ProjectionDist);
	struct FVector ProjectLocationToEdgeOfSphere(bool bOutDidProject, bool bOnlyProjectIfWithinRadius, bool bForceProjection2D, class AActor* DebugContextActor, float DebugDuration);
	class FString PrintMessageInShippingBuild();
	float PrecisionRound(float InputVal, int32* Precision);
	TArray<struct FVector> PointsRandomDist(struct FVector* Location, float Radius, float PointRadius);
	TArray<struct FVector> PointsOnAGrid(class UObject** WorldContextObject, struct FRotator* Rotation, float Radius, float MinSize);
	TArray<struct FVector> PointsOnACircle(float Radius);
	struct FVector PointOnSphere(float Radius, float DegreesI, float DegreesJ);
	struct FVector2D PointOnCircle(float Radius);
	float PlayMusic(class UObject** WorldContextObject, const class FString& MusicFile, bool* bLooping, bool bDontFadeInIfNoOtherTracks, bool bPlayEvenIfCurrentlyPlaying, float OverrideVolume);
	bool PlayMovie(class UObject** WorldContextObject, class FString* MoviePath, bool bMovieIsSkippable, FDelegateProperty_ OnMoviePlaybackFinishedDelegate, bool bPlayedOnClient, enum class EPlayMovieVolumeType VolumeType);
	bool PlayerOwnsScorchedEarthServer();
	bool PlayerOwnsGenesisSeasonPassServer();
	bool PlayerOwnsExtinctionServer();
	bool PlayerOwnsAberrationServer();
	int32 PlayCompanionReactionToPlayers(const TArray<class APrimalCharacter*>& PlayersWhoGetReaction, const struct FCompanionReactionData& ReactionData, bool ForcePlayNow, class UMaterialInterface** DialogueIconOverride);
	int32 PlayCompanionReactionOnSolePlayer(class APrimalCharacter* PlayersWhoGetReaction, const struct FCompanionReactionData& ReactionData, bool ForcePlayNow, class UMaterialInterface** DialogueIconOverride);
	bool PlaceStructure(class UClass** StructureToPlace);
	bool OwnsSteamAppID();
	bool OwnsScorchedEarth();
	bool OwnsGenesisSeasonPass();
	bool OwnsGenesis();
	bool OwnsExtinction();
	bool OwnsDLC();
	bool OwnsCrystalIsles();
	bool OwnsAberration();
	bool OverlappingStationaryObjectsTraceBP(class UObject** WorldContextObject, class APrimalCharacter** SourceCharacter, struct FVector* Origin, float Radius);
	bool OverlappingActorsTraceBP(class UObject** WorldContextObject, struct FVector* Origin, float Radius);
	bool OverlappingActorsBP(class UObject** WorldContextObject, struct FVector* Origin, float Radius, int32* CollisionGroups);
	class FString OpenStorePageForDLC();
	class FString OpenMapEx();
	class UClass* ObjectRefToClassRef(class UObject* InObject);
	bool ObjectIsChildOfSoftRef(class UObject** Object);
	bool ObjectIsChildOf(class UObject** Object);
	struct FRotator NormalizeRotator();
	double NetworkTimeToRealWorldUtcTime(class UObject** WorldContextObject, double NetworkTime);
	bool MultiTraceProjectSphere(class UObject** WorldContextObject, struct FVector* Origin, int32* MaxTraceCount);
	float MultiLinePenetrationTraceByChannel(class UObject** WorldContextObject, struct FVector* Start, struct FVector* End, const TArray<class AActor*>& ActorsToIgnore, bool* bIgnoreSelf);
	float MulticastDrawDebugString();
	float MulticastDrawDebugSphere(float Radius);
	float MulticastDrawDebugPoint();
	bool MulticastDrawDebugLine();
	float MulticastDrawDebugCylinder(struct FVector* Start, struct FVector* End, float Radius);
	float MulticastDrawDebugCoordinateSystem();
	bool MulticastDrawDebugCapsuleWithExtents(float Radius);
	float MulticastDrawDebugCapsule(float Radius, struct FRotator* Rotation);
	float MulticastDrawDebugCamera(class ACameraActor* CameraActor);
	float MulticastDrawDebugBox(struct FVector* Extent, struct FRotator* Rotation);
	float MulticastDrawDebugArrow();
	struct FDinoSetup ModifyDinoSetupTargetLevel();
	void MarkGen2IntroAsSeen(class UObject** WorldContextObject);
	float MapRangeToCurveClamped(float* Value);
	float MapAngleRangeToCurveClamped();
	struct FPrimalPlayerCharacterConfigStructReplicated MakePlayerCharacterConfigStructReplicated();
	struct FPlane MakePlaneWithPoints(struct FVector* C);
	struct FHitResult MakeHitResult(struct FVector* Location, class UPhysicalMaterial** PhysMat);
	void LogStackTrace();
	struct FVector LeadTargetPosition(const struct FVector& TargetLocation, struct FVector* TargetVelocity);
	class FString LeaderboardColumnNameToString();
	bool KillTargetCharacterOrStructure(class AActor* DamageCauser);
	class FString JoinStringArrayWithNewlines();
	bool IsXboxOneBuild();
	bool IsWorkshopIDSubscribed();
	bool IsVerboseDisplayEnabled(class UObject** WorldContextObject);
	bool IsValidItemForGrinding(class UPrimalInventoryComponent** Inventory);
	bool IsUWPBuild();
	bool IsUndermesh(class APrimalCharacter* Character, bool* DebugDraw);
	bool IsTimeSince_Utc(bool* bForceTrueAtZeroTime);
	bool IsTimeSince_Network(class UObject** WorldContextObject, bool* bForceTrueAtZeroTime);
	bool IsTimeSince(class UObject** WorldContextObject, bool* bForceTrueAtZeroTime);
	int32 IsStringContainedInArray(const TArray<class FString>& ArrayOfStrings);
	bool IsSplitscreen();
	bool IsSOTFLobby();
	bool IsSOTF();
	bool IsShipping();
	bool IsSavingSaveGame();
	bool IsRunningTotalConversion();
	bool IsPVEServer(class UObject** WorldContextObject);
	bool IsPS4Build();
	bool IsPointStuckWithinMesh(class UObject** WorldContextObject, class AActor* ActorToIgnore);
	bool IsPointInCone(float ConeHalfAngle);
	bool IsPlayingMovie();
	bool IsPlayInEditor(class UObject** WorldContextObject);
	bool IsOfficialServer();
	bool IsNonHostPlayer(class UObject** WorldContextObject);
	bool IsMissionTagActiveAnywhere(class AShooterPlayerController** FromPC, class FName* MissionTag);
	bool IsMissionActiveAnywhere();
	bool IsLowMemPlatform();
	bool IsLockhart();
	bool IsLocationLikelyWithinAnIncorrectlyPlacedWaterVolume(class UObject** WorldContextObject, const struct FVector& ImpactLocation);
	bool IsLoadingSaveGame();
	bool IsLinuxOrMacBuild();
	bool IsJapanesePS5Build();
	bool IsInsideOrIntersectsBox(const struct FVector& BoxExtents);
	bool IsInsideBox(const struct FVector& BoxExtents);
	bool IsGameWorld(class UObject** WorldContextObject);
	bool IsGamePadConnected();
	bool IsFluidInteractionEnabled(class UObject** WorldContext);
	bool IsEpicClient();
	bool IsEngramGroupAllowed(class AShooterPlayerController** ForPC);
	bool IsEditor();
	bool IsDistanceLessThan();
	bool IsDistanceGreaterThan();
	bool IsDinoDuped(class UObject** WorldContextObject);
	bool IsCryopodNerfEnabled(class UObject** WorldContextObject);
	bool IsCooldownComplete(class UObject** WorldContextObject, double CooldownClock, float CooldownDuration);
	bool IsConsoleServerBuild();
	bool IsConsoleBuild();
	int32 IsChildOfClassesSoftRef();
	int32 IsChildOfClassesSoft();
	int32 IsChildOfClasses();
	bool IsBrainControllingDinoAttached(class APrimalCharacter* Character);
	struct FVector2D InverseTransformVectorByScreenProjectionGlobalTransform(struct FVector2D* OutVec);
	struct FTransform InverseTransform();
	class FString IntToStringAscii();
	bool IntersectsBox(const struct FVector& BoxExtents);
	bool InlineLoadLevels();
	struct FVector Helix(float Radius);
	bool HasPlayerSeenGen2Intro(class UObject** WorldContextObject);
	bool HasCraftingRequirementsGreaterThanOne();
	bool GrindItemIntoInventory(class UPrimalInventoryComponent** Inventory);
	int32 GrindAllItemsToInventory(class UPrimalInventoryComponent** Inventory);
	float GridTraceAroundPoint(class UObject** WorldContextObject, struct FVector* Origin, const TArray<class AActor*>& ActorsToIgnore, enum class ECollisionChannel* CollisionChannel);
	TArray<class UPrimalItem*> GiveItemToCharacter(class APrimalCharacter* Character, class UClass* ItemType);
	TArray<class ULevelStreaming*> GetWorldSublevels(class UObject** WorldContextObject);
	double GetWorldLoadedAtTime(class UObject** WorldContextObject);
	int32 GetWeightedRandomIndexFromArray(const TArray<float>& PArray, float ForceRand);
	float GetVolumeOfCapsule(float CapsuleRadius);
	struct FVector GetVelocityDeltaBetweenChars();
	int32 GetUpsellIndex();
	class FString GetTwoLetterISOLanguageName();
	float GetTimeSince(class APawn* Pawn);
	float GetTimeSeconds(class APawn* Pawn);
	struct FColor GetTeamColor();
	struct FColor GetStatusColorForPlayerTetherDistance(class UObject** WorldContextObject);
	struct FBoxSphereBounds GetStaticMeshBounds();
	enum class EActorListsBP GetSpecialActorList(class UObject** WorldContextObject, const TArray<class AActor*>& OutActors);
	class FString GetSoundWaveLocalizedSpokenText();
	class FString GetSoundCueLocalizedSpokenText();
	float GetSimpleMontageDuration();
	class UShooterGameUserSettings* GetShooterGameUserSettings();
	class AShooterCharacter* GetShooterCharacterFromPawn(class APawn* Pawn);
	class AShooterCharacter* GetShooterCharacterFromController();
	TArray<class AActor*> GetSelectedLevelActors();
	int32 GetSecondsIntoDay();
	struct FVector2D GetScreenPercentLocation(class APlayerController** ForPC);
	float GetScreenPercentage();
	float GetScreenFramePerfScalar();
	double GetRealWorldUtcTimeInSeconds();
	bool GetRandomWeightedDinoSetup();
	struct FVector2D GetRandomCircleCenterPointEncompassingPointWithinOuterCircle();
	float GetProjectileArcPeakTime(class UObject** WorldContextObject, struct FProjectileArc* Arc);
	class UWorld* GetPrimaryWorld();
	float GetPrimaryCameraLocationDistanceFromPoint();
	struct FVector GetPrimaryCameraLocation();
	bool GetPreviousTrackedActorLinkedEntry(int32* ID, int32* Category);
	class AShooterCharacter* GetPlayerCharacterByIndex(class UObject** WorldContextObject, int32 PlayerIndex);
	class AShooterCharacter* GetPlayerCharacterByController();
	class FString GetPlatformName();
	struct FVector GetPlaneNormal();
	bool GetOverlappedHarvestActors(class UObject** WorldContextObject);
	class FString GetObjectString();
	bool GetObjectsReferencedBy();
	class FString GetObjectPathName();
	class FName GetObjectName();
	class FName GetObjectFName();
	bool GetNextTrackedActorLinkedEntry(int32* ID, int32* Category);
	class FString GetNewlineCharacter();
	double GetNetworkTimeInSeconds(class UObject** WorldContextObject);
	class UAnimSequence* GetNearestAnimSequenceFromBlendSpace(class UBlendSpace* BlendSpace);
	class AActor* GetNearestAlliedPlayer(class UObject** WorldContextObject, struct FVector* Location);
	class AActor* GetNearestAlliedDinoElsePlayer(class UObject** WorldContextObject, struct FVector* Location);
	class AActor* GetNearestAllieDDino(class UObject** WorldContextObject, struct FVector* Location);
	class FName GetMontageGroupName();
	class UAnimMontage* GetMontageFromAnimAsset();
	double GetMissionNetworkStartTime(class UObject** WorldContextObject, class FName* MissionTag);
	class AActor* GetMissionActorOfTypes(class UObject** WorldContextObject);
	class AActor* GetMissionActorOfType(class UObject** WorldContextObject);
	float GetMatineeLength();
	bool GetLocaleSpecificSoundWaveAnimTexturePairArrays();
	bool GetLocaleSpecificAudio();
	TArray<class FName> GetLoadedStreamingLevelNames();
	float GetLaunchVelocityAndGravity(const struct FVector& StartLocation, const struct FVector& TargetLocation, struct FVector* LaunchVelocity);
	class FString GetLastMapPlayed();
	class FString GetLastHostedMapPlayed();
	class FString GetKeyNameFromActionName(class FName ActionName);
	class FString GetKeyName(const struct FKey& Key);
	class FName GetKeybindName(class FName* KeyBind);
	class FText GetKeybindDisplayName(class FName* KeyBind);
	struct FKey GetKeybindByPredicate();
	class UClass* GetItemClassFromItemSetup();
	class FName GetHitBoneNameFromDamageEvent(class APrimalCharacter* Character, struct FDamageEvent* DamageEvent, bool* bIsPointDamage);
	class UPrimalHarvestingComponent* GetHarvestingComponentFromHitBodyIndex();
	bool GetGroundLocation(class UObject** WorldContextObject, struct FVector* TheGroundLoc);
	class UClass* GetGrinderReplacementItem(class UClass* Current);
	class ADirectionalLight* GetFirstDirectionalLight(class UObject** WorldContextObject);
	int32 GetEditorBuildRevision();
	class FString GetDLCNameFromSelector(enum class EDLCSelector SelectedDLC);
	float GetDistanceToCollision();
	class UClass* GetDinoStaticClass();
	int32 GetDinoSetupPointsPerStat();
	bool GetDinoSetupGroup_WeightedRandom();
	bool GetDinoSetupGroup_ByName(class FName* GroupName);
	class UClass* GetDinoSetupDinoType();
	bool GetDinoSetupCapsuleSize(float CapsuleRadius);
	class APrimalDinoCharacter* GetDinoCharacterByID(class UObject** WorldContextObject, int32* DinoID1, int32* DinoID2);
	class UObject* GetDefaultObject();
	class FText GetDefaultCharacterName();
	struct FVector GetCustomDinoSpawnLocation(class UObject** WorldContextObject);
	class ACustomActorList* GetCustomActorList(class UObject** WorldContextObject);
	float GetCurrentCameraExposure();
	struct FVector2D GetControllerMovementInputs(class APlayerController** ForPC);
	class AActor* GetClosestActorArray();
	class FString GetClassString();
	class FString GetClassPathName();
	class FName GetClassFName();
	class UObject* GetClassDefaultObjectFromAsset();
	class UObject* GetClassDefaultObject();
	bool GetCharacterCapsuleSize(float CapsuleRadius);
	class FName GetBlockingMissionTag(class AShooterPlayerController** FromPC, class FName* MissionTag);
	struct FVector GetBestHitInfoFromDamageEvent(struct FDamageEvent* DamageEvent);
	TArray<int32> GetArrayIndicesSorted_Int(TArray<int32>* Array);
	TArray<int32> GetArrayIndicesSorted_Float(TArray<float>* Array);
	TArray<int32> GetArrayIndicesSorted_Double(TArray<double>* Array);
	float GetAngleBetweenVectorsPure(const struct FVector& VectorA, const struct FVector& VectorB);
	float GetAngleBetweenVectors(const struct FVector& VectorA, const struct FVector& VectorB);
	TArray<class AActor*> GetAllPlayerStarts(class UObject** WorldContextObject);
	TArray<class AActor*> GetAllMissionDispatchers(class UObject** WorldContextObject);
	TArray<class AActor*> GetAllMissionDispatcherPoints(class UObject** WorldContextObject);
	TArray<class AActor*> GetAllMissionActors(class UObject** WorldContextObject);
	TArray<class AShooterPlayerController*> GetAllLocalPlayerControllers(class UObject** WorldContextObject);
	TArray<class AShooterCharacter*> GetAllLocalPlayerCharacters(class UObject** WorldContextObject);
	TArray<class APlayerCameraManager*> GetAllLocalPlayerCameraManagers(class UObject** WorldContextObject);
	TArray<struct FKey> GetAllKeybindsByPredicate();
	class FString GetAllClassesOfType(bool* bAllowAbstract);
	bool GetAllBlueprintAssetsOfNativeClass(class UClass** InNativeClass, TArray<struct FAssetData>* FoundAssets);
	TArray<class FName> GetAllAvailableMissionsAsTags(class UObject** WorldContextObject);
	TArray<struct FAvailableMission> GetAllAvailableMissions(class UObject** WorldContextObject);
	bool GetAllAnimationSequencesFromMontage(class UAnimMontage** InMontage, TArray<class UAnimationAsset*>* AnimationAssets);
	TSoftClassPtr<class AActor> GetAllActorsOfClassSoft(class UObject** WorldContextObject, const TArray<class AActor*>& OutActors);
	TArray<class APlayerController*> GetActuallyTrulyLocalPlayerControllers(class UObject** WorldContextObject);
	class AActor* GetActorFromOverlapResult(const struct FOverlapResult& OverlapResult);
	class UClass* GenerateRandomLootItemFromLootTable(float ItemQuality);
	class UClass* GenerateRandomLootItem();
	void GenerateDeathBlendSpacesForDino(class APrimalDinoCharacter* Dino);
	class FString Generate_UUID();
	bool GameModeHasPlayerTethering(class UObject** WorldContextObject);
	class FString FuseChunkedFString(TArray<class FString>* InputStringArray);
	class FString FormatAsTimeLong(int32 InTime);
	class FString FormatAsTime(int32 InTime, bool UseLeadingZero, bool bForceLeadingZeroHour, bool bShowSeconds);
	struct FLinearColor ForceScreenColorFade(class UObject** WorldContextObject, float* FullOpacityInterval, float* TheFadeOutInterval);
	void ForceLevelStreamingToBlock(class UObject** WorldContextObject, float* ForTime);
	double FloatToDouble(float* Value);
	struct FVector FlattenDirectionVectorInLocalSpace(struct FRotator* Rotation);
	struct FVector FlattenDirectionVector();
	void FinishSpawning(class AActor** Actor);
	bool FindWorldActors(class UObject** WorldContextObject, TArray<class AActor*>* FContainer, class UClass** FType, class FName* FTag);
	bool FindValidLocationNextToTarget(class UObject** WorldContextObject, class APrimalCharacter** SourceCharacter, float* DistanceMargin, int32* MaxTraceCount, class AActor* ActorToIgnore, bool* SkipCloseDistanceRestriction, bool* AllowLocationInAir);
	bool FindValidLocationInFrontOfTarget(class APrimalCharacter** SourceCharacter, float* DistanceMargin, enum class ECollisionChannel* CollisionChannel, bool* bFailIfLocationNotOnGround, class AActor* ActorToIgnore);
	class FName FindSocketClosestToDirection(struct FVector* TargetDirection, TArray<float>* DotProducts, bool* bOnlySocketsWithPrefix, class FString* SocketPrefix);
	TArray<class APrimalCharacter*> FindNearbyCharactersOfClass(class UObject** WorldContextObject, float Radius, class UClass** CharacterClass, bool* bTamedDinosOnly, bool* bWildDinosOnly);
	class FString FindLocalizedVersionOfFilename(struct FSoftObjectPath* OriginalFile);
	class UPrimalAIState* FindActorAIState(class UClass** FStateType, TArray<struct FDinoAttackInfo>* FContainerOfStates);
	void ExitToModLocalMainMenu();
	void ExitToARKGlobalMainMenu();
	void ExitApplication();
	struct FVector EvalProjectileArc(class UObject** WorldContextObject, struct FProjectileArc* Arc);
	int32 ECC_TO_BITFIELD_BP(enum class ECollisionChannel* ConvertChannel);
	bool DrawDebugCapsuleWithExtents(class UObject** WorldContextObject, float Radius);
	uint8 DrawDebugCapsule(class UObject** WorldContextObject, struct FVector* CapsuleTop, struct FVector* CapsuleBottom, float Radius, struct FColor* Color, bool* bPersistentLines, float LifeTime);
	bool DoForceStreamComponents(const TArray<class UMeshComponent*>& ComponentsArray, bool* bIsFirstPerson);
	bool DoesOwnSelectedDLC(enum class EDLCSelector SelectedDLC);
	class AActor* DisableGCM();
	void DestroyAllCharactersWithinMissionTileVolumes(class UObject** WorldContextObject, bool bOnlyCheckForDeadCharacters, class FName ForceOnTileStreamVolumeCustomTag);
	class AShooterProjectile* DeferredSpawnAndFireProjectile_Start(struct FVector* Origin, class APrimalCharacter** ForCharacter, struct FTransform* SpawnTransform, bool bNoCollisionFail);
	class AShooterProjectile* DeferredSpawnAndFireProjectile_Finish(struct FTransform* SpawnTransform);
	float DebugDrawProjectileArc(class UObject** WorldContextObject, struct FProjectileArc* Arc, float MaxArcTime, float* ArcTimeStep);
	void DeactivateMissionForPlayerCharacter(class AShooterCharacter** PlayerPawn, bool bOverrideForcePreventLeavingMissions);
	double DateTimeToSeconds(const struct FDateTime& DateTimeValue);
	class UBlendSpace* CreateBlendSpaceFromAnimationNameSubstring(const class FString& SubString, float CardinalBlendSpaceXYOffset, float CardinalBlendSpaceYOffset);
	class UHierarchicalInstancedStaticMeshComponent* CopyFoliageSettingsToInstancedStaticMeshComponent(class UFoliageType_InstancedStaticMesh** Settings, bool bAlsoCopyBodyInstances);
	class APrimalDinoCharacter* CopyDinoColorSetIndicies(class APrimalDinoCharacter** Src);
	float CooldownTimeRemaining(class UObject** WorldContextObject, double CooldownClock, float CooldownDuration);
	struct FRotator ConvertRotatorFromWorldToLocal(const struct FRotator& ConvertRot, const struct FRotator& ToParentRotation);
	struct FRotator ConvertRotatorFromLocalToWorld(const struct FRotator& ConvertRot, const struct FRotator& FromParentRotation);
	struct FPrimalPlayerCharacterConfigStructReplicated ConvertPlayerCharacterConfigStructReplicated(const struct FPrimalPlayerCharacterConfigStruct& Structdata);
	class FString ConvertIntToStringWithCommas(int32 GivenNumber);
	struct FVector_NetQuantizeNormal Conv_VectorToVectorNetQuantizeNormal();
	struct FVector_NetQuantize Conv_VectorToVectorNetQuantize();
	class UObject* ConstructObjectBP(class UClass* Class, class UObject* Outer, class FName* Name);
	class UObject* ConstructObjectAutoNameBP(class UClass* Class, class UObject* Outer);
	float ComponentGetBoundsSphereRadius();
	bool ComponentBoundsEncompassesPoint(float BoundsMultiplier);
	bool ClipLineInsideBox(struct FVector* Origin, struct FVector* Extent, const struct FVector& OutLineStart, const struct FVector& OutLineEnd);
	class FString ClassToStringReference();
	class UObject* ClassRefToObjectRef(class UClass** InClass);
	float ClampRotAxis(float BaseAxis, float DesiredAxis, float MaxDiff);
	struct FVector ClampLocation(const struct FVector& BaseLocation, const struct FVector& DesiredLocation, float MaxDiff, bool* bTraceClampLocation, class UObject** WorldContextObject, struct FVector* TraceFromLocation);
	TArray<class FString> ChunkFStringIntoArray(class FString* InputString, int32* ChunkSize);
	struct FLinearColor ChangeSaturation(struct FLinearColor* InColor, float* NewSaturation);
	bool CapsuleSweepProjectileArc(class UObject** WorldContextObject, struct FProjectileArc* Arc, struct FRotator* CapsuleRotation, float CapsuleRadius, bool* bRotateCapsuleAlongPath, struct FHitResult* HitResult, float* EndArcTime, float* MaxArcLength, const TArray<class AActor*>& ActorsToIgnore, bool* bIgnoreSelf, float* ArcTimeStep, enum class ECollisionChannel* CollisionChannel);
	bool CapsuleSweepMulti(class UObject** WorldContextObject, TArray<struct FHitResult>* OutHits, struct FVector* Start, struct FVector* End, struct FRotator* CapsuleRot, float Radius, const TArray<class AActor*>& ActorsToIgnore, bool* bIgnoreSelf, enum class ECollisionChannel* CollisionChannel, bool bDebugDraw, bool* bFindInitialOverlaps);
	bool CapsuleSweepFast(class UObject** WorldContextObject, struct FVector* Start, struct FVector* End, struct FRotator* CapsuleRot, float Radius, enum class ECollisionChannel* CollisionChannel, bool* bIgnoreSelf, bool bDebugDraw);
	bool CapsuleOverlapFast(class UObject** WorldContextObject, class AActor** FirstOverlappedActor, struct FVector* Origin, struct FRotator* CapsuleRotation, float Radius, enum class ECollisionChannel* CollisionChannel, bool* bIgnoreSelf, bool bDebugDraw, bool* bBlockingOnly);
	bool CanTeleport();
	bool CanSpawnCustomDino(class UObject** WorldContextObject, struct FVector* OutCalculatedSpawnLocation, struct FVector* PlayerLocation, bool* bDoExtraSafetyChecks, class APrimalCharacter** SpawningCharacter);
	void CallGlobalLevelEvent(class UObject** WorldContextObject, class FName* EventName);
	struct FIntPoint CalculateGPSCoordinates(class UObject** WorldContextObject, struct FVector* WorldPos);
	bool BreakPlayerCharacterConfigStructReplicated(struct FPrimalPlayerCharacterConfigStructReplicated* FromStruct);
	bool BPVTrace(class UWorld** TheWorld, struct FVector* Start, struct FVector* End, struct FHitResult* HitOut, bool* HasHitNonMovableComponent, class AActor* ActorToIgnore, int32* CollisionGroups, bool* bReturnPhysMaterial, struct FVector* BoxExtent, class FName* TraceTag, class AActor** OtherActorToIgnore, struct FRotator* Rot, class AActor** AnotherActorToIgnore);
	bool BPSweepComponent(struct FVector* Start, struct FVector* End, float Radius, struct FVector* Extent);
	struct FRotator BPRTransformInverse(struct FRotator* RBasis);
	struct FRotator BPRTransform(struct FRotator* RBasis);
	struct FRotator BPRotatorLerp(float Alpha);
	class AShooterPlayerState* BPRequestRenameTribe(class FString* TribeName);
	class AShooterPlayerState* BPRequestLeaveTribe();
	class AShooterPlayerState* BPRequestCreateTribe(class FString* TribeName);
	bool BPProjectWorldToScreenPositionRaw(struct FVector2D* Out_ScreenLocation, const struct FVector& Out_ViewLocation, bool Out_bIsScreenLocationInsideViewRect, bool bIgnoreScreenProjectionGlobalTransform);
	struct FVector2D BPProjectWorldToScreenPosition();
	TArray<struct FOverlapResult> BPOverlapMultiByObjectType(const struct FVector& MyLoc);
	class UObject* BPLoadObject(const class FString& PathName);
	class UClass* BPLoadClass(const class FString& PathName);
	bool BPIsTemplate(class UObject* AnObject);
	bool BPIsDinoIDEqual(int32 FirstDinoID1, int32 FirstDinoID2, int32 SecondDinoID1, int32 SecondDinoID2);
	int32 BPGetWeightedRandomIndex(const TArray<float>& PArray, float ForceRand);
	class FString BPGetPrimaryMapName(class UObject** WorldContextObject);
	float BPGetBiomeWind(class ABiomeZoneVolume* BiomeZoneVolume, float GlobalWind);
	float BPGetBiomeTemperature(class ABiomeZoneVolume* BiomeZoneVolume, float GlobalTemperature);
	class FString BPFormatAsTimeLong(int32 InTime);
	class FString BPFormatAsTime(int32 InTime, bool UseLeadingZero, bool bForceLeadingZeroHour, bool bShowSeconds);
	float BPFLerpFastPure(float InMin, float InMax, float InPercent);
	float BPFLerpFast(float InMin, float InMax, float InPercent);
	float BPFLerp(float InMin, float InMax, float InPercent, bool bClampToMin, bool bClampToMax);
	bool BPFastTrace(class UObject** WorldContextObject, class AActor* ActorToIgnore);
	void BoxFromOriginAndExtent(struct FVector* Origin, struct FVector* Extent, const struct FVector& OutBoxMin, const struct FVector& OutBoxMax);
	void BlockTillAllStreamingRequestsFinished();
	TArray<class APrimalDinoCharacter*> AttemptToSpawnAWildFollower(const TArray<float>& WeightedChanceArrayMultipliers);
	bool AreVectorsNearlyEqual(const struct FVector& VectorA, const struct FVector& VectorB, float WithinError);
	bool AreVector2DsNearlyEqual(const struct FVector2D& VectorA, const struct FVector2D& VectorB, float WithinError);
	bool AreVector2DsEqual(const struct FVector2D& VectorA, const struct FVector2D& VectorB);
	bool AreTransformsNearlyEqual(const struct FTransform& TransformA, const struct FTransform& TransformB, float WithinError);
	bool AreRotatorsNearlyEqual(const struct FRotator& RotatorA, const struct FRotator& RotatorB, float WithinError);
	bool AreAllSublevelsForDataLayerLoaded(class UObject** WorldContextObject, class FName* DataLayerName);
	float ApplyEnvironmentalInteractionShotHit_Universal(class UObject** WorldContextObject, struct FHitResult* ImpactHitInfo, const struct FVector& VelocityOrShootDirection, class UNiagaraSystem** FluidSimSplashTemplateOverride, float Radius);
	float ApplyEnvironmentalInteractionExplosion_Universal(class UObject** WorldContextObject, struct FVector* Location, class UNiagaraSystem** FluidSimSplashTemplateOverride);
	bool AmbientInsectsVFXEnabled();
	struct FVector2D AdjustScreenPositionWithScreenDPI(class UObject** WorldContextObject);
	enum class EEditorMessageLogLevel AddToEditorMessageLog(class UObject** WorldContextObject, class FString* Message, bool* bServerOnly);
	class AActor* AddToActorList(class UObject** WorldContextObject);
	bool AddNetworkActorFromWorld_StartsReplication(class UObject** WorldContextObject);
	int32 AddLocalPlayer();
	bool AddFoliageInteraction(class UObject** WorldContextObject, struct FVector* Location, float Radius, const struct FVector& Velocity, float* Plasticity);
	bool AddFoliageCapsuleInteractionEffect(class UObject** WorldContextObject, struct FVector* Location, struct FVector* ExtraCapsuleLocation, float Radius, const struct FVector& Velocity);
	void AddFluidInteraction(class UObject** WorldContextObject, struct FVector* Location, float Radius, const struct FVector& Velocity, bool* bSplash, bool* bRipple, class UNiagaraSystem** FluidSimSplashTemplateOverride, bool* PlaySplashSound, struct FVector* SplashLocation, float* SplashRadius);
	void AddFluidCapsuleInteractionEffect(class UObject** WorldContextObject, struct FVector* Location, struct FVector* ExtraCapsuleLocation, float Radius, const struct FVector& Velocity, bool* bSplash, bool* bRipple, class UNiagaraSystem** FluidSimSplashTemplateOverride, bool* PlaySplashSound, struct FVector* SplashLocation, float* SplashRadius);
	bool AddEnvironmentInteractionEffect(class UObject** WorldContextObject, struct FVector* Location, float Radius, const struct FVector& Velocity, bool* bSplash, bool* bRipple, class UNiagaraSystem** FluidSimSplashTemplateOverride, bool* PlaySplashSound, struct FVector* SplashLocation, float* SplashRadius);
	bool AddEnvironmentCapsuleInteractionEffect(class UObject** WorldContextObject, struct FVector* Location, struct FVector* ExtraCapsuleLocation, float Radius, const struct FVector& Velocity, bool* bSplash, bool* bRipple, class UNiagaraSystem** FluidSimSplashTemplateOverride, bool* PlaySplashSound, struct FVector* SplashLocation, float* SplashRadius);
	float AddCombinedFoliageFluidInteraction(class UObject** WorldContextObject, struct FVector* Location, float Radius, const struct FVector& Velocity, float* Plasticity, bool* bSplash, bool* bRipple, class UNiagaraSystem** FluidSimSplashTemplateOverride, bool* PlaySplashSound, struct FVector* SplashLocation, float* SplashRadius);
	float AddCombinedFoliageFluidCapsuleInteractionEffect(class UObject** WorldContextObject, struct FVector* Location, struct FVector* ExtraCapsuleLocation, float Radius, const struct FVector& Velocity, bool* bSplash, bool* bRipple, class UNiagaraSystem** FluidSimSplashTemplateOverride, bool* PlaySplashSound, struct FVector* SplashLocation, float* SplashRadius);
	class FName AddAnimSlotToSkeleton(class FName* SlotName);
	bool AddActorToCustomActorList(class UObject** WorldContextObject);
	bool ActorHasLineOfSightToWorldLocation();
	bool ActorHasLineOfSight(class AActor* ToActor);
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.VirtualCursor
class UVirtualCursor : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UVirtualCursor* GetDefaultObj();

	bool IsVirtualCursorEnabled();
	bool IsOverInteractableWidget();
	bool Enable();
	class APlayerController* Disable();
};

// 0x10 (0x40 - 0x30)
// Class ShooterGame.VirtualCursorManager
class UVirtualCursorManager : public ULocalPlayerSubsystem
{
public:
	uint8                                        Pad_4FEA[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UVirtualCursorManager* GetDefaultObj();

	bool IsCursorValid();
	bool IsCursorOverInteractableWidget();
	bool EnableAnalogCursor();
	void DisableAnalogCursor();
	bool ContainsGamepadCursorInputProcessor();
};

// 0x68 (0x7C0 - 0x758)
// Class ShooterGame.VisualSettingsUI
class UVisualSettingsUI : public UPrimalUI
{
public:
	uint8                                        Pad_4FEF[0x48];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UOpenColorIOConfiguration*>     ArrayOCIODisplayConfiguration;                     // 0x7A0(0x10)(BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        HDRDisplayMinLuminance;                            // 0x7B0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        HDRDisplayMidLuminance;                            // 0x7B4(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        HDRDisplayMaxLuminance;                            // 0x7B8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4FF0[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UVisualSettingsUI* GetDefaultObj();

	enum class ESelectInfo OnOcioSettingUpdated(const class FString& SelectedItem);
	enum class ESelectInfo OnOcioSettingChanged(const class FString& SelectedItem);
	void ApplyDefaultSettings();
};

// 0x178 (0x638 - 0x4C0)
// Class ShooterGame.VolumetricDispatcher
class AVolumetricDispatcher : public AActor
{
public:
	TArray<struct FVolumetricDispatchDetailLevel> DetailLevels;                                      // 0x4C0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        CurrentDetailLevel;                                // 0x4D0(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_5012[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TWeakObjectPtr<class AActor>>         CachedActorList;                                   // 0x4D8(0x10)(BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        LastListBuildFrames;                               // 0x4E8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_5013[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FComponentVolumetricDispatch>  ComponentDispatches;                               // 0x4F0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FVolumetricDispatch>           PendingWaterDispatches;                            // 0x500(0x10)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FVolumetricDispatch>           PendingWaterDispatches_Delayed;                    // 0x510(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FVolumetricDispatch>           PendingOneTimeFoliageDispatches;                   // 0x520(0x10)(Edit, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FVolumetricDispatch>           PendingOneTimeFoliageDispatches_Delayed;           // 0x530(0x10)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FVolumetricDispatch>           PendingOneTimeCombinedFoliageFluidDispatches;      // 0x540(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FVolumetricDispatch>           PendingOneTimeCombinedFoliageFluidDispatches_Delayed; // 0x550(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UPrimalWindSourceComponent*>    WindSourceComponents;                              // 0x560(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_5016[0xA0];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bEnableFluidInteraction;                           // 0x610(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bEnableFoliageInteraction;                         // 0x611(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDebug;                                            // 0x612(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bEnabled;                                          // 0x613(0x1)(Edit, ConstParm, Parm, ZeroConstructor, Transient, EditConst, GlobalConfig)
	uint8                                        Pad_5018[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NumFoliageInteractions;                            // 0x620(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NumFluidInteractions;                              // 0x624(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinimumBabyFluidScale;                             // 0x628(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         HasHandledBubblesForThisCompThisTick;              // 0x62C(0x1)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         WithinBubbleDistanceLimit;                         // 0x62D(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_501A[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        GlobalMaxAllowedFrameDelayBuffer;                  // 0x630(0x4)(Edit, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_501B[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AVolumetricDispatcher* GetDefaultObj();

	class UPrimalWindSourceComponent* UnRegisterWindSource();
	void SetEnabled(bool* bEnable);
	class UPrimalWindSourceComponent* RegisterWindSource();
	void FluidSpash(struct FVector* Location, float Radius, const struct FVector& Velocity, class UNiagaraSystem** FluidSimSplashTemplateOverride, bool* PlaySplashSound);
	void AddFoliageInteraction(class UObject** WorldContextObject, struct FVector* Location, float Radius, float* RadiusOuter, const struct FVector& Velocity, struct FFoliageInteractionSettings* Settings);
	void AddFluidInteraction(class UObject** WorldContextObject, struct FVector* Location, float Radius, const struct FVector& Velocity, struct FFluidInteractionSettings* Settings);
	struct FFluidInteractionSettings AddCombinedFoliageFluidInteraction(class UObject** WorldContextObject, struct FVector* Location, float Radius, float* RadiusOuter, const struct FVector& Velocity);
	void AddCapsuleFoliageInteraction(class UObject** WorldContextObject, struct FVector* Location, struct FVector* ExtraCapsuleLocation, float Radius, float* RadiusOuter, const struct FVector& Velocity, struct FFoliageInteractionSettings* Settings);
	void AddCapsuleFluidInteraction(class UObject** WorldContextObject, struct FVector* Location, struct FVector* ExtraCapsuleLocation, float Radius, const struct FVector& Velocity, struct FFluidInteractionSettings* Settings);
	struct FFluidInteractionSettings AddCapsuleCombinedFoliageFluidInteraction(class UObject** WorldContextObject, struct FVector* Location, struct FVector* ExtraCapsuleLocation, float Radius, float* RadiusOuter, const struct FVector& Velocity);
};

// 0x18 (0x48 - 0x30)
// Class ShooterGame.VRBattleGroupDataAsset
class UVRBattleGroupDataAsset : public UDataAsset
{
public:
	TArray<struct FVRBattleWaveUnit>             Units;                                             // 0x30(0x10)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceSpawnEntireGroup;                            // 0x40(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_501D[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UVRBattleGroupDataAsset* GetDefaultObj();

};

// 0x8 (0x3430 - 0x3428)
// Class ShooterGame.VRMainBoss_Character
class AVRMainBoss_Character : public APrimalDinoCharacter
{
public:
	class AMissionType*                          CurrentMission;                                    // 0x3428(0x8)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AVRMainBoss_Character* GetDefaultObj();

};

// 0x0 (0xB8 - 0xB8)
// Class ShooterGame.WaterVolumeWithFlowVisualizerComponent
class UWaterVolumeWithFlowVisualizerComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UWaterVolumeWithFlowVisualizerComponent* GetDefaultObj();

};

// 0xB0 (0x5E0 - 0x530)
// Class ShooterGame.WaterVolumeWithFlow
class AWaterVolumeWithFlow : public APhysicsVolume
{
public:
	float                                        CellSize;                                          // 0x530(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig)
	uint8                                        Pad_5026[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             FlowMagnitudeMinMax;                               // 0x538(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_5028[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FGridIndex>                    GridIDs;                                           // 0x598(0x10)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FVector2D>                     FlowVectors;                                       // 0x5A8(0x10)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bHasValidGridSize;                                 // 0x5B8(0x1)(EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_5029[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FGridIndex                            CachedGridSize;                                    // 0x5BC(0x8)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_502A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        BuffsToApply;                                      // 0x5C8(0x10)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bApplyBuffsOnClient : 1;                           // Mask: 0x1, PropSize: 0x10x5D8(0x1)(ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_502B[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AWaterVolumeWithFlow* GetDefaultObj();

	class AActor* SetStrengthFromSplineActor();
	enum class EColorChannelTarget SetPaintValueAtGridIndex(const struct FGridIndex& Grid, struct FColor* InColor);
	class AActor* SetDestinationsFromSplineActor();
	void SetDefaultPaintColors();
	float SetCellSize();
	void PaintStrengthFromSpline();
	void PaintObstruction();
	void PaintDestinationFromSpline();
	bool IsGridIndexValid(const struct FGridIndex& Grid);
	struct FColor GetPaintValueAtGridIndex(const struct FGridIndex& Grid);
	struct FVector GetLocationForGridIndex();
	struct FGridIndex GetGridSize();
	bool GetGridIndexForLocation(struct FVector* Location, const struct FGridIndex& Grid);
	struct FVector GetFlowVectorAtLocation(struct FVector* Location);
	void GenerateFlowField();
	void ClearAllPaintChannels();
	void BuildEverything();
};

// 0xC0 (0x3F0 - 0x330)
// Class ShooterGame.WorldBuffEntryWidget
class UWorldBuffEntryWidget : public UPrimalUserWidget
{
public:
	float                                        DefaultDisplayTime;                                // 0x330(0x4)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ExpiringSoonDisplayTime;                           // 0x334(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_5037[0xB8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UWorldBuffEntryWidget* GetDefaultObj();

	bool SyncData(const struct FWorldBuffPersistantData& WorldBuffPersistantData);
	bool InitializeMe();
	void FadeOut();
	void Collapse();
	void BeginExpiring();
};

// 0x10 (0x38 - 0x28)
// Class ShooterGame.WorldModifiersContainer
class UWorldModifiersContainer : public UObject
{
public:
	TArray<struct FPrimalWorldModifierList>      WorldModifiers;                                    // 0x28(0x10)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UWorldModifiersContainer* GetDefaultObj();

};

}


