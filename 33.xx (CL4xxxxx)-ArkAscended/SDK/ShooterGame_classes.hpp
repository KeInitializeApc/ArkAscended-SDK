#pragma once

// Dumped with TateDumper!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0xB0 (0x790 - 0x6E0)
// Class ShooterGame.CustomCanvasWidget
class UCustomCanvasWidget : public UButton
{
public:
	uint8                                        Pad_B19[0x48];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bOverrideScreenCanvasProjection;                   // 0x728(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreParentAlpha;                                // 0x729(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B1A[0x6];                                      // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnDraggedObject;                                   // 0x730(0x10)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B1B[0x50];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCustomCanvasWidget* GetDefaultObj();

};

// 0x148 (0x8D8 - 0x790)
// Class ShooterGame.DataListEntryButton
class UDataListEntryButton : public UCustomCanvasWidget
{
public:
	uint8                                        Pad_B1D[0x10];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DisplayString;                                     // 0x7A0(0x10)(BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                AdditionalDisplayString;                           // 0x7B0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ContextMenuAnchorName;                             // 0x7C0(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ItemIcon;                                          // 0x7C8(0x8)(Edit, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          ForegroundColor;                                   // 0x7D0(0x10)(BlueprintVisible, Net, ReturnParm, Config, DisableEditOnInstance)
	bool                                         bUseSelectedBackgroundColor;                       // 0x7E0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B1E[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          SelectedBackgroundColor;                           // 0x7E4(0x10)(Edit, ConstParm, BlueprintReadOnly, Parm, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_B1F[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            AltHighlightBGTexture;                             // 0x7F8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        NameOffset;                                        // 0x800(0x4)(ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bClickable;                                        // 0x804(0x1)(ConstParm, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnabled;                                          // 0x805(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Transient, EditConst, GlobalConfig)
	bool                                         bUseDisplayString;                                 // 0x806(0x1)(ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B20[0x1];                                      // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          DisplayStringColor;                                // 0x808(0x10)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             DisplayStringOffset;                               // 0x818(0x10)(Edit, ConstParm, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TextDisplayStringSize;                             // 0x828(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B21[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             DisplayStringScale;                                // 0x830(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisplayStringCenterX;                             // 0x840(0x1)(Edit, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisplayStringCenterY;                             // 0x841(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSetIndexPlusOneToDisplayString;                   // 0x842(0x1)(BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowClickingWhenNoEntry;                         // 0x843(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B22[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class UFont*                                 DisplayStringFont;                                 // 0x848(0x8)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            SelectedIcon;                                      // 0x850(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, DuplicateTransient)
	struct FLinearColor                          DisabledColor;                                     // 0x858(0x10)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          TintColorOverride;                                 // 0x868(0x10)(ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDataListAutomaticallyOverrideText : 1;            // Mask: 0x1, PropSize: 0x10x878(0x1)(ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDataListAutomaticallyOverrideEnabled : 1;         // Mask: 0x2, PropSize: 0x10x878(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWrapText : 1;                                     // Mask: 0x4, PropSize: 0x10x878(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseDataProviderCustomColor : 1;                   // Mask: 0x8, PropSize: 0x10x878(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideTintColor : 1;                            // Mask: 0x10, PropSize: 0x10x878(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowDisplayStringWhenHasItem : 1;                 // Mask: 0x20, PropSize: 0x10x878(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCustomTextColor : 1;                           // Mask: 0x40, PropSize: 0x10x878(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSelected : 1;                                     // Mask: 0x80, PropSize: 0x10x878(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, SubobjectReference)
	uint8                                        bForceDraggingDisabled : 1;                        // Mask: 0x1, PropSize: 0x10x879(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDraggable : 1;                                    // Mask: 0x2, PropSize: 0x10x879(0x1)(ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_82 : 2;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAllowExtraIcon : 1;                               // Mask: 0x10, PropSize: 0x10x879(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bToggleButton : 1;                                 // Mask: 0x20, PropSize: 0x10x879(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_83 : 2;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_B26[0x16];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            OverrideDisabledIcon;                              // 0x890(0x8)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             WrappedTextSpacingAdjust;                          // 0x898(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B27[0x8];                                      // Fixing Size After Last Property  > TateDumper <
	struct FColor                                OverridenTextColor;                                // 0x8B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHasEngram;                                        // 0x8B4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bKnownEngram;                                      // 0x8B5(0x1)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOverrideStlye;                                    // 0x8B6(0x1)(Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B29[0x11];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialInstanceDynamic*              MyIconMat;                                         // 0x8C8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UMenuAnchor*                           ContextMenuAnchor;                                 // 0x8D0(0x8)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UDataListEntryButton* GetDefaultObj();

	void OnGetContextMenuContent(class UWidget** ReturnValue);
	void GetStringValue(class FString* ReturnValue);
	void GetOverridenStringValue(class FString* ReturnValue);
	class UWidget* ClickedSecondaryButton();
	class UWidget* ClickedButton();
};

// 0x58 (0x930 - 0x8D8)
// Class ShooterGame.AdminPlayerInfoEntryButton
class UAdminPlayerInfoEntryButton : public UDataListEntryButton
{
public:
	uint8                                        bIsCustom : 1;                                     // Mask: 0x1, PropSize: 0x10x8D8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_84 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_B30[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	class FString                                PlayerName;                                        // 0x8E0(0x10)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                SteamPlayerName;                                   // 0x8F0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                LinkedPlayerID;                                    // 0x900(0x10)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	bool                                         bCenterDisplayName;                                // 0x910(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B32[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          DisplayStringSelectedColor;                        // 0x914(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B33[0xC];                                      // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAdminPlayerInfoEntryButton* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.AhoCorasickMatch
class UAhoCorasickMatch : public UObject
{
public:

	static class UClass* StaticClass();
	static class UAhoCorasickMatch* GetDefaultObj();

	bool SearchWords(const TArray<class FString>& OutKeys);
	struct FAhoCorasickMatcher AddWords();
};

// 0x20 (0x4E8 - 0x4C8)
// Class ShooterGame.AIAttackCoordinator
class AAIAttackCoordinator : public AActor
{
public:
	int32                                        MaxAttackersPerTarget;                             // 0x4C8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        UpdateInterval;                                    // 0x4CC(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	TArray<TWeakObjectPtr<class APrimalDinoAIController>> Attackers;                                         // 0x4D0(0x10)(Edit, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B44[0x8];                                      // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AAIAttackCoordinator* GetDefaultObj();

	TArray<class APrimalDinoAIController*> UpdateAttackGroup();
	void RemoveAttacker(class APrimalDinoAIController** Controller);
	void GetNumAttackersWithPriorityForTarget(class AActor* Target, int32* ReturnValue);
	void GetNumAttackersForTarget(class AActor* Target, int32* ReturnValue);
	void ClearAllAttackers();
	void CalculateAttackerPriorityWeight(class APrimalDinoAIController* Attacker, float* ReturnValue);
	void AddAttackerCharacter(class APrimalDinoCharacter** Character);
	void AddAttacker(class APrimalDinoAIController** Controller);
};

// 0xC0 (0xE8 - 0x28)
// Class ShooterGame.AllClustersInventory
class UAllClustersInventory : public UObject
{
public:
	uint8                                        Pad_B5B[0xC0];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAllClustersInventory* GetDefaultObj();

	class FString OnFinishedSaveForChangingItems(bool Success);
	bool OnFinishedReadLockForCreateLock(bool Success);
	TArray<struct FItemNetInfo> OnFinishedLoadForChangingItems(bool Success);
	class FString OnFinishedCreateLockForChangingItems(bool Success);
	class FString OnFinishedClearLockForChangingItems(bool Success);
};

// 0x38 (0x910 - 0x8D8)
// Class ShooterGame.AllPaintingsEntryButton
class UAllPaintingsEntryButton : public UDataListEntryButton
{
public:
	class FString                                Filename;                                          // 0x8D8(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm)
	class FString                                FilePath;                                          // 0x8E8(0x10)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          DisplayStringSelectedColor;                        // 0x8F8(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B61[0x8];                                      // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAllPaintingsEntryButton* GetDefaultObj();

};

// 0x48 (0x920 - 0x8D8)
// Class ShooterGame.AllPlayersEntryButton
class UAllPlayersEntryButton : public UDataListEntryButton
{
public:
	class FString                                PlayerName;                                        // 0x8D8(0x10)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                TribeName;                                         // 0x8E8(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint64                                       PlayerID;                                          // 0x8F8(0x8)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint64                                       TargetingTeamID;                                   // 0x900(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	class AShooterCharacter*                     CurrentCharachter;                                 // 0x908(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          DisplayStringSelectedColor;                        // 0x910(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UAllPlayersEntryButton* GetDefaultObj();

};

// 0xC8 (0x410 - 0x348)
// Class ShooterGame.AnimInstance_DinoBlueprintBase
class UAnimInstance_DinoBlueprintBase : public UAnimInstance
{
public:
	bool                                         bAllowNativeAnimations;                            // 0x348(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableBlueprint;                                 // 0x349(0x1)(BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B66[0x6];                                      // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              RootRotationOffset;                                // 0x350(0x18)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	struct FVector                               RootLocationOffset;                                // 0x368(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSkipAnimGraph;                                    // 0x380(0x1)(ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B69[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        MovementAnimRate;                                  // 0x384(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MovementAnimRatePower;                             // 0x388(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinMovementAnimRate;                               // 0x38C(0x4)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxMovementAnimRate;                               // 0x390(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MovingAnimSpeedTreshold;                           // 0x394(0x4)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsMoving;                                         // 0x398(0x1)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseAimOffset;                                     // 0x399(0x1)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B6B[0x2];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        AimPitch;                                          // 0x39C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AimYaw;                                            // 0x3A0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBlinking;                                      // 0x3A4(0x1)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B6E[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        BlinkBlend;                                        // 0x3A8(0x4)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseTurning;                                       // 0x3AC(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseTurnInPlaceAnimation;                          // 0x3AD(0x1)(ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B70[0x2];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        TurningEnabledBlendTime;                           // 0x3B0(0x4)(Edit, ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TurningDisabledBlendTime;                          // 0x3B4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TurningDirectionBlendTime;                         // 0x3B8(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinTurnRateForTurnAnimation;                       // 0x3BC(0x4)(Edit, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsTurning;                                        // 0x3C0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTurningRight;                                     // 0x3C1(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseSwimming;                                      // 0x3C2(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B74[0x1];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        SwimmingMovingAnimSpeedThreshold;                  // 0x3C4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsSwimming;                                       // 0x3C8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseRunning;                                       // 0x3C9(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseRunningMovementAnimRate;                       // 0x3CA(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B75[0x1];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        RunningMovementAnimRate;                           // 0x3CC(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsRunning;                                        // 0x3D0(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseSleepingAnim;                                  // 0x3D1(0x1)(ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B79[0x6];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SleepingAnimTranslationOffset;                     // 0x3D8(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsSleeping;                                       // 0x3F0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	bool                                         bUseFalling;                                       // 0x3F1(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B7A[0x2];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        FallingAnimPlayRate;                               // 0x3F4(0x4)(Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FallingBlendInTime;                                // 0x3F8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FallingBlendOutTime;                               // 0x3FC(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsFalling;                                        // 0x400(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B7C[0xF];                                      // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimInstance_DinoBlueprintBase* GetDefaultObj();

};

// 0xE8 (0x430 - 0x348)
// Class ShooterGame.AnimInstance_DinoRootBoneName
class UAnimInstance_DinoRootBoneName : public UAnimInstance
{
public:
	bool                                         bAllowNativeAnimations;                            // 0x348(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableBlueprint;                                 // 0x349(0x1)(BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B84[0x6];                                      // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              RootRotationOffset;                                // 0x350(0x18)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	struct FVector                               RootLocationOffset;                                // 0x368(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        IKAlpha;                                           // 0x380(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDisableIK;                                        // 0x384(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableIKWhenFalling;                             // 0x385(0x1)(OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSleepingEnableIK;                                 // 0x386(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSkipAnimGraph;                                    // 0x387(0x1)(ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MovementAnimRate;                                  // 0x388(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MovementAnimRatePower;                             // 0x38C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinMovementAnimRate;                               // 0x390(0x4)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxMovementAnimRate;                               // 0x394(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MovingAnimSpeedTreshold;                           // 0x398(0x4)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MovingBlendInTime;                                 // 0x39C(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MovingBlendOutTime;                                // 0x3A0(0x4)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsMoving;                                         // 0x3A4(0x1)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseAimOffset;                                     // 0x3A5(0x1)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B90[0x2];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        AimPitch;                                          // 0x3A8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AimYaw;                                            // 0x3AC(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AimOffsetPitchScale;                               // 0x3B0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AimOffsetYawScale;                                 // 0x3B4(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseAlignGround;                                   // 0x3B8(0x1)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B93[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        AlignGroundAlpha;                                  // 0x3BC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBlinking;                                      // 0x3C0(0x1)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B95[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        BlinkBlend;                                        // 0x3C4(0x4)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseTurning;                                       // 0x3C8(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseTurnInPlaceAnimation;                          // 0x3C9(0x1)(ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B96[0x2];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        TurningEnabledBlendTime;                           // 0x3CC(0x4)(Edit, ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TurningDisabledBlendTime;                          // 0x3D0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TurningDirectionBlendTime;                         // 0x3D4(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinTurnRateForTurnAnimation;                       // 0x3D8(0x4)(Edit, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsTurning;                                        // 0x3DC(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTurningRight;                                     // 0x3DD(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseSwimming;                                      // 0x3DE(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B97[0x1];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        SwimmingMovingAnimSpeedThreshold;                  // 0x3E0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsSwimming;                                       // 0x3E4(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseRunning;                                       // 0x3E5(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseRunningMovementAnimRate;                       // 0x3E6(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B9A[0x1];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        RunningMovementAnimRate;                           // 0x3E8(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RunningBlendInTime;                                // 0x3EC(0x4)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RunningBlendOutTime;                               // 0x3F0(0x4)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsRunning;                                        // 0x3F4(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseSleepingAnim;                                  // 0x3F5(0x1)(ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B9B[0x2];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SleepingAnimTranslationOffset;                     // 0x3F8(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsSleeping;                                       // 0x410(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	bool                                         bUseFalling;                                       // 0x411(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B9C[0x2];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        FallingAnimPlayRate;                               // 0x414(0x4)(Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FallingBlendInTime;                                // 0x418(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FallingBlendOutTime;                               // 0x41C(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsFalling;                                        // 0x420(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B9F[0xF];                                      // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimInstance_DinoRootBoneName* GetDefaultObj();

};

// 0x158 (0x4A0 - 0x348)
// Class ShooterGame.AnimInstance_DinoRootTransform
class UAnimInstance_DinoRootTransform : public UAnimInstance
{
public:
	bool                                         bAllowNativeAnimations;                            // 0x348(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableBlueprint;                                 // 0x349(0x1)(BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BA4[0x6];                                      // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              RootRotationOffset;                                // 0x350(0x18)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	struct FVector                               RootLocationOffset;                                // 0x368(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FTransform                            RootOffsetTransform;                               // 0x380(0x60)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSkipAnimGraph;                                    // 0x3E0(0x1)(ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BA6[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        MovementAnimRate;                                  // 0x3E4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MovementAnimRatePower;                             // 0x3E8(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinimumMovementSpeed;                              // 0x3EC(0x4)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MovingBlendInTime;                                 // 0x3F0(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MovingBlendOutTime;                                // 0x3F4(0x4)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsMoving;                                         // 0x3F8(0x1)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BAB[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        MinimumMovementSpeedFlying;                        // 0x3FC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FlyingMoveBlendIn;                                 // 0x400(0x4)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FlyingMoveBlendOut;                                // 0x404(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsFlying;                                         // 0x408(0x1)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseFlyingOffset;                                  // 0x409(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BAE[0x6];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector                               FlyingOffset;                                      // 0x410(0x18)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CurrentFlyingOffset;                               // 0x428(0x18)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LandedOffset;                                      // 0x440(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseAimOffset;                                     // 0x458(0x1)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BB1[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        AimPitch;                                          // 0x45C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AimYaw;                                            // 0x460(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AimOffsetPitchScale;                               // 0x464(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AimOffsetYawScale;                                 // 0x468(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBlinking;                                      // 0x46C(0x1)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BB3[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        BlinkBlend;                                        // 0x470(0x4)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseTurning;                                       // 0x474(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BB4[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        TurningEnabledBlendTime;                           // 0x478(0x4)(Edit, ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TurningDisabledBlendTime;                          // 0x47C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TurningDirectionBlendTime;                         // 0x480(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinTurnRateForTurnAnimation;                       // 0x484(0x4)(Edit, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsTurning;                                        // 0x488(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTurningRight;                                     // 0x489(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseRunning;                                       // 0x48A(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsRunning;                                        // 0x48B(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseSleepingAnim;                                  // 0x48C(0x1)(ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsSleeping;                                       // 0x48D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	bool                                         bUseFalling;                                       // 0x48E(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BBF[0x1];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        FallingAnimPlayRate;                               // 0x490(0x4)(Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FallingBlendInTime;                                // 0x494(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FallingBlendOutTime;                               // 0x498(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsFalling;                                        // 0x49C(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseMounted;                                       // 0x49D(0x1)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsMounted;                                        // 0x49E(0x1)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BC5[0x1];                                      // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimInstance_DinoRootTransform* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class ShooterGame.AnimNotifyState_Custom
class UAnimNotifyState_Custom : public UAnimNotifyState
{
public:
	class FName                                  EventName;                                         // 0x30(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bSendNotifyToWeapon;                               // 0x38(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSendNotifyToArmorSlot;                            // 0x39(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EPrimalEquipmentType              ArmorSlotToSendNotify;                             // 0x3A(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BCF[0x5];                                      // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimNotifyState_Custom* GetDefaultObj();

};

// 0x18 (0x58 - 0x40)
// Class ShooterGame.AnimNotify_CustomEvent
class UAnimNotify_CustomEvent : public UAnimNotify
{
public:
	class FName                                  EventName;                                         // 0x40(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bSendNotifyToWeapon;                               // 0x48(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSendNotifyToArmorSlot;                            // 0x49(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EPrimalEquipmentType              ArmorSlotToSendNotify;                             // 0x4A(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bLockHeadPositionNormalized;                       // 0x4B(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeToLockHeadPosition;                            // 0x4C(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUnlockHeadPositionNormalized;                     // 0x50(0x1)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BD3[0x7];                                      // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimNotify_CustomEvent* GetDefaultObj();

};

// 0x38 (0x78 - 0x40)
// Class ShooterGame.AnimNotify_PlayCameraShake
class UAnimNotify_PlayCameraShake : public UAnimNotify
{
public:
	float                                        PercentChanceToPlay;                               // 0x40(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BD5[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class UClass*                                TheCameraShake;                                    // 0x48(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        InnerRadius;                                       // 0x50(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OuterRadius;                                       // 0x54(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Falloff;                                           // 0x58(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bOrientShakeTowardsEpicenter;                      // 0x5C(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BD6[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        ShakeScale;                                        // 0x60(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_BD7[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class FString                                AttachName;                                        // 0x68(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UAnimNotify_PlayCameraShake* GetDefaultObj();

};

// 0x10 (0x120 - 0x110)
// Class ShooterGame.AnimNotify_PlayParticleEffectCustom
class UAnimNotify_PlayParticleEffectCustom : public UAnimNotify_PlayParticleEffect
{
public:
	class FName                                  AttachedComponentTag;                              // 0x110(0x8)(Net, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BDC[0x8];                                      // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimNotify_PlayParticleEffectCustom* GetDefaultObj();

};

// 0x10 (0x50 - 0x40)
// Class ShooterGame.AnimNotify_StopSound
class UAnimNotify_StopSound : public UAnimNotify
{
public:
	class USoundBase*                            SoundToStop;                                       // 0x40(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        FadeOutTime;                                       // 0x48(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_BDE[0x4];                                      // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimNotify_StopSound* GetDefaultObj();

};

// 0x98 (0xC0 - 0x28)
// Class ShooterGame.AntiDupeTransactionLog
class UAntiDupeTransactionLog : public UObject
{
public:
	class UWorld*                                CurrentWorld;                                      // 0x28(0x8)(Edit, ConstParm, ExportObject, Net, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BDF[0x90];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAntiDupeTransactionLog* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class ShooterGame.ArkCloudInventoryData
class UArkCloudInventoryData : public UObject
{
public:
	struct FArkInventoryData                     MyArkData;                                         // 0x28(0x30)(ConstParm, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UArkCloudInventoryData* GetDefaultObj();

};

// 0x18 (0x4E0 - 0x4C8)
// Class ShooterGame.BaseBoxTrigger
class ABaseBoxTrigger : public AActor
{
public:
	class USceneComponent*                       SceneComp;                                         // 0x4C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UBoxComponent*                         TriggerBox;                                        // 0x4D0(0x8)(Edit, ConstParm, Net, Parm, OutParm, DisableEditOnInstance, GlobalConfig)
	uint8                                        bUseBPOnTriggerBeginOverlap : 1;                   // Mask: 0x1, PropSize: 0x10x4D8(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnTriggerEndOverlap : 1;                     // Mask: 0x2, PropSize: 0x10x4D8(0x1)(EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_C06[0x7];                                      // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ABaseBoxTrigger* GetDefaultObj();

	void OnTriggerEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	struct FHitResult OnTriggerBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep);
	void IsCharacterTouchingTrigger(class APrimalCharacter** Character, bool* ReturnValue);
	void GetAllCharactersTouchingTrigger(const TArray<class APrimalCharacter*>& OutCharacters);
	void BPOnTriggerEndOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	struct FHitResult BPOnTriggerBeginOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep);
};

// 0x40 (0xB38 - 0xAF8)
// Class ShooterGame.BasePlayerController
class ABasePlayerController : public APrimalPlayerController
{
public:
	uint8                                        Pad_C21[0x28];                                     // Fixing Size After Last Property  > TateDumper <
	class UUI_CustomOverlay*                     CustomCursor;                                      // 0xB20(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_C22[0x8];                                      // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsGamepadActive;                                  // 0xB30(0x1)(Edit, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_C24[0x7];                                      // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ABasePlayerController* GetDefaultObj();

	bool SimulateInputKey(const struct FKey& Key);
	void ServerCheat(const class FString& Msg);
	void Say(const class FString& Msg);
	void ClientStartOnlineGame();
	struct FRotator ClientSetSpectatorCamera();
	int32 ClientSendRoundEndEvent(bool* bIsWinner);
	void ClientGameStarted();
	void ClientEndOnlineGame();
};

// 0x10 (0x330 - 0x320)
// Class ShooterGame.PrimalUserWidget
class UPrimalUserWidget : public UUserWidget
{
public:
	uint8                                        Pad_C51[0x8];                                      // Fixing Size After Last Property  > TateDumper <
	int32                                        ViewportZOrder;                                    // 0x328(0x4)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        DPIScaler;                                         // 0x32C(0x4)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalUserWidget* GetDefaultObj();

	void WidgetRemovedFromViewport();
	void WidgetAddedToViewport();
	void StopAnimationByString(class FString* Name);
	void SetZOrderInViewport(int32* ZOrder);
	void PlayAnimationByString(class FString* Name, bool* ReturnValue);
	bool OnWidgetGamepadActiveChangedBP();
	class UFont* NumCharactersThatFit(class FString* ReturnValue);
	void HandleVirtualBack(bool* ReturnValue);
	struct FKey HandleKeyUp(bool* ReturnValue);
	void GetOverrideHighligteableWidgetBP(class UWidget** ReturnValue);
	struct FBPNetExecParams ExecuteCommandForPrimalUI();
	struct FBPNetExecParams BPExecutedCommandForPrimalUI();
};

// 0x428 (0x758 - 0x330)
// Class ShooterGame.PrimalUI
class UPrimalUI : public UPrimalUserWidget
{
public:
	uint8                                        Pad_CD2[0x4C];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bCaptureMouseInput;                                // 0x37C(0x1)(ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventGamepadDpadNavegation;                     // 0x37D(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceVirtualCursorEnabled;                        // 0x37E(0x1)(ConstParm, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsClosing;                                        // 0x37F(0x1)(BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWantsPrimalItemNotifications;                     // 0x380(0x1)(BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_CD6[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DefaultToolTipWidget;                              // 0x388(0x8)(Edit, ExportObject, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEscapeClosesMenu;                                 // 0x390(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEscapeOpensPauseMenu;                             // 0x391(0x1)(Edit, ConstParm, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSpecialRightOpensPauseMenu;                       // 0x392(0x1)(BlueprintVisible, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bMenuSupportSlomo;                                 // 0x393(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bClickClosesMenu;                                  // 0x394(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsGameplayUI;                                     // 0x395(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsTopUI;                                          // 0x396(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EHighlightStartingPoint           HighlightStartPointType;                           // 0x397(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ConfirmationDialogUITemplate;                      // 0x398(0x8)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                XBoxFooterUITemplate;                              // 0x3A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowCancelIcon;                                   // 0x3A8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowAcceptIcon;                                   // 0x3A9(0x1)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowLStickIcon;                                   // 0x3AA(0x1)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowRStickIcon;                                   // 0x3AB(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowBumpersIcon;                                  // 0x3AC(0x1)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowStartBtnIcon;                                 // 0x3AD(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowLTBtnIcon;                                    // 0x3AE(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowRTBtnIcon;                                    // 0x3AF(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowFaceBtnLeftIcon;                              // 0x3B0(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowFaceBtnTopIcon;                               // 0x3B1(0x1)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowFaceBtnRightIcon;                             // 0x3B2(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowFaceBtnBottomIcon;                            // 0x3B3(0x1)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowLeftShoulderBtnIcon;                          // 0x3B4(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowXBoxFooter;                                   // 0x3B5(0x1)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreUIScaling;                                  // 0x3B6(0x1)(Edit, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCloseOnPlayerDie;                                 // 0x3B7(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SplitscreenDPIScaler;                              // 0x3B8(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceFullscreenVirtualCursor;                     // 0x3BC(0x1)(BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bConstrainVirtualCursor;                           // 0x3BD(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDoExtraDataListButtonPanelFilteringChecks;        // 0x3BE(0x1)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_CDF[0x1];                                      // Fixing Size After Last Property  > TateDumper <
	class FName                                  DefaultHighlightWidgetOverrideName;                // 0x3C0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShouldValidateInputOnRemove;                      // 0x3C8(0x1)(EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldStretchMainScreenWhenHandheld;               // 0x3C9(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         WasInHandheldMode;                                 // 0x3CA(0x1)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_CE2[0x5];                                      // Fixing Size After Last Property  > TateDumper <
	struct FAnchors                              OriginalUnStretchedAnchors;                        // 0x3D0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FMargin                               OriginalUnstretchedSize;                           // 0x3F0(0x10)(ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             OriginalSizeBoxUnstretchedSize;                    // 0x400(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FAnchors                              StretchedHandheldAnchors;                          // 0x410(0x20)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FMargin                               StretchedHandheldSize;                             // 0x430(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             SizeBoxHandheldSize;                               // 0x440(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        VirtualCursorFrames;                               // 0x450(0x4)(Edit, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_CE6[0x4C];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AnalogDeltaX;                                      // 0x4A0(0x4)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AnalogDeltaY;                                      // 0x4A4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_CEB[0x1C0];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            HTTPGetResponseEvent;                              // 0x668(0x10)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalStructureItemContainer> ItemContainer;                                     // 0x678(0x8)(ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCachedIsGamepadActive;                            // 0x680(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_CED[0xD3];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         OverrideButtonSounds;                              // 0x754(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_CEE[0x3];                                      // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalUI* GetDefaultObj();

	bool UsingProController(bool* ReturnValue);
	enum class EDLCSelector ShowDLCConfirmationDialog(class UUI_GenericConfirmationDialog** ReturnValue);
	bool ShowConfirmationDialogBP(const class FString& MessageText);
	void SetInputMode();
	bool SetHighlightedWidget();
	void ResetAllScrollBars();
	void RemovedFromViewport();
	bool ProcessSplitscreen();
	class UWorld* PlayHapticEffect(struct FVector* Location);
	class FString OpenTheStoreDLCPage();
	void OnMouseButtonDownEvent(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent, struct FEventReply* ReturnValue);
	void OnKeyUpEvent(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyboardEvent, struct FEventReply* ReturnValue);
	void OnKeyDownEvent(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyboardEvent, struct FEventReply* ReturnValue);
	void OnGamepadButtonDownEvent(const struct FGeometry& MyGeometry, struct FControllerEvent* ControllerEvent, struct FEventReply* ReturnValue);
	bool OnGamepadActiveChangedBP();
	bool OnGamepadActiveChanged();
	void OnDLCConfirmationDialogClosed(bool* bAccept);
	class UWidget* OnCreateCredits();
	void OnConfirmationDialogClosedBP(bool* bAccept);
	void OnConfirmationDialogClosed(bool* bAccept);
	void MainMenuEscapePressed();
	void IsRightTriggerDown(bool* ReturnValue);
	void IsLeftTriggerDown(bool* ReturnValue);
	class FString HTTPGetString();
	void HandleDockedModeChanges();
	void GetWidgetToScaleForHandheld(class UWidget** ReturnValue);
	void GetSizeboxForExtraHandheldScaling(class USizeBox** ReturnValue);
	void GetShooterHud(class AShooterHUD** ReturnValue);
	void GetPlayerState(class AShooterPlayerState** ReturnValue);
	void GetPC(class AShooterPlayerController** ReturnValue);
	void GetPawn(class APrimalCharacter** ReturnValue);
	void GetOpenComboBox(class UComboBoxString** ReturnValue);
	void FixHighlights();
	struct FVector2D DoExtraScalingForSplitscreen();
	void CloseWithAnimation();
	class UWidget* ClickedSecondaryButton();
	class UWidget* ClickedButton();
	bool CheckGamepadActiveChanged();
	struct FSlateColor ChangeChildrenTextColorBP(class UPanelWidget* Parent, bool* Recursive);
	void BPVirtualCursorinit();
	void BPReleasedVirtualAccept();
	bool BPProcessSplitscreenAndAddToViewport();
	void BPHighlightWidgetOnStart(bool* ReturnValue);
	bool BPHandleDockedModeChange();
	struct FKey BPGamepadReleased(bool* ReturnValue);
	void BPEscapeClosed(bool* ReturnValue);
	void BPCycleHighlighted(bool* ReturnValue);
	float BPControlHighlighted();
	void AddedToViewport();
};

// 0x0 (0x758 - 0x758)
// Class ShooterGame.BaseSelectableButtonWidget
class UBaseSelectableButtonWidget : public UPrimalUI
{
public:

	static class UClass* StaticClass();
	static class UBaseSelectableButtonWidget* GetDefaultObj();

	bool BPSetSelected();
	void BPIsSelected(bool* ReturnValue);
	void BPGetButton(class UCustomButtonWidget** ReturnValue);
};

// 0x8A0 (0xE50 - 0x5B0)
// Class ShooterGame.ShooterGameState
class AShooterGameState : public AGameState
{
public:
	uint8                                        Pad_E64[0x10];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NumNPC;                                            // 0x5C0(0x4)(Edit, ConstParm, Net, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumHibernatedNPC;                                  // 0x5C4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        NPCActiveCountTamed;                               // 0x5C8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumActiveNPC;                                      // 0x5CC(0x4)(ExportObject, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumDeadNPC;                                        // 0x5D0(0x4)(ConstParm, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumPlayerActors;                                   // 0x5D4(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumPlayerConnected;                                // 0x5D8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bServerUseLocalizedChat;                           // 0x5DC(0x1)(ConstParm, Net, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_E69[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        LocalizedChatRadius;                               // 0x5E0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        LocalizedChatRadiusUnconsiousScale;                // 0x5E4(0x4)(Edit, BlueprintVisible, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        ServerFramerate;                                   // 0x5E8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_E6B[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class FString                                NewStructureDestructionTag;                        // 0x5F0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	int32                                        DayNumber;                                         // 0x600(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        DayTime;                                           // 0x604(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	double                                       NetworkTime;                                       // 0x608(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint32                                       TimeUTC;                                           // 0x610(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	int32                                        NetUTC;                                            // 0x614(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsOfficialServer;                                 // 0x618(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsListenServer;                                   // 0x619(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsDediServer;                                     // 0x61A(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsServerRunningOnConsole;                         // 0x61B(0x1)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsArkTributeAvailable;                            // 0x61C(0x1)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsArkDownloadsAllowed;                            // 0x61D(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowThirdPersonPlayer;                           // 0x61E(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bServerHardcore;                                   // 0x61F(0x1)(ConstParm, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bServerPVE;                                        // 0x620(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAutoPvE;                                          // 0x621(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bServerCrosshair;                                  // 0x622(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bServerForceNoHUD;                                 // 0x623(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFlyerPlatformAllowUnalignedDinoBasing;            // 0x624(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bMapPlayerLocation;                                // 0x625(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPvEDisableFriendlyFire;                           // 0x626(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPvEAllowTribeWar;                                 // 0x627(0x1)(Edit, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bPvEAllowTribeWarCancel;                           // 0x628(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bEnablePvPGamma;                                   // 0x629(0x1)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventDroppedItemPhysics;                        // 0x62A(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisablePvEGamma;                                  // 0x62B(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumTamedDinos;                                     // 0x62C(0x4)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxStructuresInRange;                              // 0x630(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	float                                        DayCycleSpeedScale;                                // 0x634(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        DayTimeSpeedScale;                                 // 0x638(0x4)(BlueprintVisible, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        NightTimeSpeedScale;                               // 0x63C(0x4)(ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	int32                                        StartTimeHour;                                     // 0x640(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        PvEStructureDecayPeriodMultiplier;                 // 0x644(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        PvEDinoDecayPeriodMultiplier;                      // 0x648(0x4)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        PerPlatformMaxStructuresMultiplier;                // 0x64C(0x4)(ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        ImplantSuicideCD;                                  // 0x650(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bDisableStructureDecayPvE;                         // 0x654(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableDinoDecayPvE;                              // 0x655(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowCaveBuildingPvE;                             // 0x656(0x1)(OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowCaveBuildingPvP;                             // 0x657(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventDownloadSurvivors;                         // 0x658(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bReachedPlatformStructureLimit;                    // 0x659(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAdminLogging;                                     // 0x65A(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPvPStructureDecay;                                // 0x65B(0x1)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventDownloadDinos;                             // 0x65C(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventDownloadItems;                             // 0x65D(0x1)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventUploadDinos;                               // 0x65E(0x1)(Edit, Net, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventUploadItems;                               // 0x65F(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventUploadSurvivors;                           // 0x660(0x1)(Edit, ExportObject, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventMateBoost;                                 // 0x661(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventStructurePainting;                         // 0x662(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowCharacterCreation;                           // 0x663(0x1)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowSpawnPointSelection;                         // 0x664(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_E87[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxTamedDinos;                                     // 0x668(0x4)(EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bDisableSpawnAnimations;                           // 0x66C(0x1)(Edit, ExportObject, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_E8A[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	class FString                                PlayerListString;                                  // 0x670(0x10)(EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnPlayerListPopulated;                             // 0x680(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalSpoilingTimeMultiplier;                      // 0x690(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        GlobalItemDecompositionTimeMultiplier;             // 0x694(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	int32                                        MaxNumberOfPlayersInTribe;                         // 0x698(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        TribeSlotReuseCooldown;                            // 0x69C(0x4)(ExportObject, Net, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalCorpseDecompositionTimeMultiplier;           // 0x6A0(0x4)(ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        EggHatchSpeedMultiplier;                           // 0x6A4(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	class FName                                  ActiveEvent;                                       // 0x6A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bAllowPaintingWithoutResources;                    // 0x6B0(0x1)(ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableExtraStructurePreventionVolumes;            // 0x6B1(0x1)(BlueprintVisible, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_E93[0x6];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<struct FItemCraftingCostOverride>     OverrideItemCraftingCosts;                         // 0x6B8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FItemMaxItemQuantityOverride>  OverrideItemMaxQuantity;                           // 0x6C8(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         DisableRailgunPVP;                                 // 0x6D8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_E99[0xA7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       PrivateNetworkTime;                                // 0x780(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	double                                       LastServerSaveTime;                                // 0x788(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        ServerSaveInterval;                                // 0x790(0x4)(Edit, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        TribeNameChangeCooldown;                           // 0x794(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        PlatformSaddleBuildAreaBoundsMultiplier;           // 0x798(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bAlwaysAllowStructurePickup;                       // 0x79C(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_E9E[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        StructurePickupTimeAfterPlacement;                 // 0x7A0(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        StructurePickupHoldDuration;                       // 0x7A4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bAllowHideDamageSourceFromLogs;                    // 0x7A8(0x1)(ConstParm, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_EA2[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<struct FClassMultiplier>              DinoClassSpeedMultipliers;                         // 0x7B0(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassMultiplier>              TamedDinoClassSpeedMultipliers;                    // 0x7C0(0x10)(BlueprintVisible, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRiderDinoCollision;                               // 0x7D0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_EA7[0x1F];                                     // Fixing Size After Last Property  > TateDumper <
	class UAudioComponent*                       DynamicMusicAudioComponent;                        // 0x7F0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       DynamicMusicAudioComponent2;                       // 0x7F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_EA9[0x10];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FLevelExperienceRamp>          LevelExperienceRampOverrides;                      // 0x810(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FEngramEntryOverride>          OverrideEngramEntries;                             // 0x820(0x10)(Edit, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                CustomGameUITemplate;                              // 0x830(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        PreventDinoTameClassNames;                         // 0x838(0x10)(ExportObject, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        ListenServerTetherDistanceMultiplier;              // 0x848(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	uint8                                        Pad_EAD[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class FString                                PGMapName;                                         // 0x850(0x10)(ConstParm, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                SupportedSpawnRegions;                             // 0x860(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, EditConst, InstancedReference, SubobjectReference)
	class UPaintingCache*                        PaintingCache;                                     // 0x870(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig)
	class USoundBase*                            StaticOverrideMusic;                               // 0x878(0x8)(Edit, ConstParm, ExportObject, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableDeathTeamSpectator;                         // 0x880(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_EB3[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector                               PlayerFloatingHUDOffset;                           // 0x888(0x18)(BlueprintReadOnly, Net, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerFloatingHUDOffsetScreenY;                    // 0x8A0(0x4)(Net, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        StructureDamageRepairCooldown;                     // 0x8A4(0x4)(ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bForceAllStructureLocking;                         // 0x8A8(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowCustomRecipes;                               // 0x8A9(0x1)(Edit, ConstParm, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bAllowRaidDinoFeeding;                             // 0x8AA(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_EBB[0x1];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        CustomRecipeEffectivenessMultiplier;               // 0x8AC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        CustomRecipeSkillMultiplier;                       // 0x8B0(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_EBE[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            OverrideAreaMusic;                                 // 0x8B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               OverrideAreaMusicPosition;                         // 0x8C0(0x18)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideAreaMusicRange;                            // 0x8D8(0x4)(ConstParm, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowUnclaimDinos;                                // 0x8DC(0x1)(ExportObject, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_EC2[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        FloatingHUDRange;                                  // 0x8E0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        FloatingChatRange;                                 // 0x8E4(0x4)(Edit, BlueprintVisible, Parm, EditConst, InstancedReference, SubobjectReference)
	int32                                        ExtinctionEventTimeInterval;                       // 0x8E8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	float                                        RTSModeNumSelectableDinosScale;                    // 0x8EC(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	float                                        RTSMaxRangeFromPlayerCharacterScale;               // 0x8F0(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtinctionEventPercent;                            // 0x8F4(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	int32                                        ExtinctionEventSecondsRemaining;                   // 0x8F8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDoExtinctionEvent;                                // 0x8FC(0x1)(BlueprintVisible, ExportObject, Net, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_ECB[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	int32                                        DestroyTamesOverLevelClamp;                        // 0x900(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_ECE[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<struct FInventoryComponentDefaultItemsAppend> InventoryComponentAppends;                         // 0x908(0x10)(BlueprintReadOnly, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventOfflinePvP;                                // 0x918(0x1)(ConstParm, BlueprintVisible, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPvPDinoDecay;                                     // 0x919(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowUnclaimDinosConfig;                          // 0x91A(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceUseInventoryAppends;                         // 0x91B(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOverideStructurePlatformPrevention;               // 0x91C(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_ED6[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        ItemStackSizeMultiplier;                           // 0x920(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	uint8                                        Pad_ED9[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                PreventOfflinePvPLiveTeams;                        // 0x928(0x10)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                PreventOfflinePvPExpiringTeams;                    // 0x938(0x10)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                PreventOfflinePvPExpiringTimes;                    // 0x948(0x10)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_EDC[0xA0];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bAllowAnyoneBabyImprintCuddle;                     // 0x9F8(0x1)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableImprintDinoBuff;                           // 0x9F9(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_EDE[0x2];                                      // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxPersonalTamedDinos;                             // 0x9FC(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_EDF[0x18];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ClusterId;                                         // 0xA18(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_EE0[0x30];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ServerSessionName;                                 // 0xA58(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventTribeAlliances;                            // 0xA68(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_EE1[0x19];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bServerUseDinoList;                                // 0xA82(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPvEAllowStructuresAtSupplyDrops;                  // 0xA83(0x1)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowForceNetUpdate;                              // 0xA84(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_EF6[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        MinimumDinoReuploadInterval;                       // 0xA88(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HairGrowthSpeedMultiplier;                         // 0xA8C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoHairGrowthSpeedMultiplier;                     // 0xA90(0x4)(ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FastDecayInterval;                                 // 0xA94(0x4)(OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                CachedSessionOwnerId;                              // 0xA98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        OxygenSwimSpeedStatMultiplier;                     // 0xAA8(0x4)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	uint8                                        Pad_EFA[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnHTTPGetResponse;                                 // 0xAB0(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnHTTPPostResponse;                                // 0xAC0(0x10)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowMultipleAttachedC4;                          // 0xAD0(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCrossARKAllowForeignDinoDownloads;                // 0xAD1(0x1)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_EFD[0x16];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bUseCorpseLocator;                                 // 0xAE8(0x1)(Edit, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bEnablePlayerMoveThroughSleeping;                  // 0xAE9(0x1)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnablePlayerMoveThroughAlly;                      // 0xAEA(0x1)(ConstParm, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableStructurePlacementCollision;               // 0xAEB(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bUseSingleplayerSettings;                          // 0xAEC(0x1)(Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bAllowPlatformSaddleMultiFloors;                   // 0xAED(0x1)(Edit, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bPreventSpawnAnimations;                           // 0xAEE(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_F06[0x1];                                      // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxAlliancesPerTribe;                              // 0xAF0(0x4)(ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxTribesPerAlliance;                              // 0xAF4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsLegacyServer;                                   // 0xAF8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableDinoDecayClaiming;                         // 0xAF9(0x1)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_F09[0x2];                                      // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxTamedDinos_SoftTameLimit_CountdownForDeletionDuration; // 0xAFC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	int32                                        MaxTamedDinos_SoftTameLimit_NumTamedDinos_UnderLimit; // 0xB00(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxTamedDinos_SoftTameLimit_NumTamedDinos_OverLimit; // 0xB04(0x4)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         MaxTamedDinos_SoftTameLimit_HasDoneInitialSearch;  // 0xB08(0x1)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_F0D[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	class FName                                  UseStructurePreventionVolumeTag;                   // 0xB0C(0x8)(ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxStructuresInSmallRadius;                        // 0xB14(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RadiusStructuresInSmallRadius;                     // 0xB18(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseTameLimitForStructuresOnly;                    // 0xB1C(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCrafting;                          // 0xB1D(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCraftingForDinos;                  // 0xB1E(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCraftingForPlayers;                // 0xB1F(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCraftingForStructures;             // 0xB20(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_F24[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        WirelessCraftingRangeOverride;                     // 0xB24(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_F25[0xC];                                      // Fixing Size After Last Property  > TateDumper <
	bool                                         bLimitTurretsInRange;                              // 0xB34(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_F27[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        LimitTurretsRange;                                 // 0xB38(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        LimitTurretsNum;                                   // 0xB3C(0x4)(ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        LimitGeneratorsNum;                                // 0xB40(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LimitGeneratorsRange;                              // 0xB44(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        CropPlotStackLimit;                                // 0xB48(0x4)(Edit, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisablePhotoMode;                                 // 0xB4C(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bDisableTekLegsBoost;                              // 0xB4D(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_F2C[0x2];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        PhotoModeRangeLimit;                               // 0xB50(0x4)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bForceAllowAllStructures;                          // 0xB54(0x1)(Edit, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowCreativeMode;                                 // 0xB55(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_F2D[0x22];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PassiveTameIntervalMultiplier;                     // 0xB78(0x4)(Edit, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_F2F[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        UniqueDinos;                                       // 0xB80(0x10)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          ActiveMissionTags;                                 // 0xB90(0x10)(BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint32                                       MinimumUniqueDownloadInterval;                     // 0xBA0(0x4)(OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint32                                       MaximumUniqueDownloadInterval;                     // 0xBA4(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreStructuresPreventionVolumes;                // 0xBA8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventOutOfTribePinCodeUse;                      // 0xBA9(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_F35[0x6];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDinoDownloadData>             UniqueDownloads;                                   // 0xBB0(0x10)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDataSet>                      GameDataSets;                                      // 0xBC0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UPrimalWorldSettingsEventOverrides*    ActiveEventOverrides;                              // 0xBD0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreLimitMaxStructuresInRangeTypeFlag;          // 0xBD8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_F3B[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<struct FMassTeleportData>             MassTeleportQueue;                                 // 0xBE0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_F3E[0x70];                                     // Fixing Size After Last Property  > TateDumper <
	TMap<class FName, class UDataLayerInstance*> DataLayerMap;                                      // 0xC60(0x50)(Edit, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowLowGravitySpin;                              // 0xCB0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_F3F[0x17];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnDinoDownloaded;                                  // 0xCC8(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnDinoUploaded;                                    // 0xCD8(0x10)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FWorldBuffPersistantData>      WorldBuffPersistantDatas;                          // 0xCE8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TurretCopySettingsCooldown;                        // 0xCF8(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseHexagonRewardMultiplier;                       // 0xCFC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HexagonRewardMultiplier;                           // 0xD00(0x4)(ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HexagonCostMultiplier;                             // 0xD04(0x4)(ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableHexagonStore;                              // 0xD08(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHexStoreAllowOnlyEngramTradeOption;               // 0xD09(0x1)(ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowSpeedLeveling;                               // 0xD0A(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bAllowFlyerSpeedLeveling;                          // 0xD0B(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_F46[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        PreventBreedingForClassNames;                      // 0xD10(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        LiveTuningReplicatedChunkSize;                     // 0xD20(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_F47[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        LiveTuningOverloadChunks;                          // 0xD28(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_F48[0x8];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        PreventTransferForClassNames;                      // 0xD40(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        EnvironmentIndex;                                  // 0xD50(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        NextEnvironmentIndex;                              // 0xD54(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                FloatingPlatformProfileNameColor;                  // 0xD58(0x4)(ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                FloatingNameColor;                                 // 0xD5C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       NextMutagenTime;                                   // 0xD60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        OverrideMaxExperiencePointsPlayer;                 // 0xD68(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	int32                                        OverrideMaxExperiencePointsDino;                   // 0xD6C(0x4)(BlueprintVisible, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	TArray<int32>                                DeferredExplorerNoteUnlockQueue;                   // 0xD70(0x10)(BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableCustomFoldersInTributeInventories;         // 0xD80(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_F4F[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<TWeakObjectPtr<class AActor>>         ForcedRelevantPOIActors;                           // 0xD88(0x10)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableRailgunPVP;                                // 0xD98(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_F52[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        MinimumTimebetweeninventoryRetrieval;              // 0xD9C(0x4)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WildFollowerSpawnChanceMultiplier;                 // 0xDA0(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WildFollowerSpawnCountMultiplier;                  // 0xDA4(0x4)(Edit, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableDinoItemBlacklist;                         // 0xDA8(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowCryoFridgeOnSaddle;                          // 0xDA9(0x1)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_F53[0x56];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       RealtimeThrottledTickTimeAmount;                   // 0xE00(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_F54[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	uint8                                        bCharacterPaintingOnlySameTeam : 1;                // Mask: 0x1, PropSize: 0x10xE0C(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_9B : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_F59[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<struct FNetChangeDefaultPropertyValue> CurrentDefaultPropertyValueUpdates;                // 0xE10(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_F5A[0x30];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterGameState* GetDefaultObj();

	struct FTeleportDestination StartMassTeleport(class AActor** InitiatingActor, const TArray<class AActor*>& TeleportActors, class UClass* BuffToApply, float TeleportDuration, float TeleportRadius, bool bTeleportingSnapsToGround, bool bMaintainRotation, bool* ReturnValue);
	class AActor* ShouldMassTeleportMoveActor(const struct FMassTeleportData& WithMassTeleportData, bool* ReturnValue);
	void SetNextEnvironmentIndex(int32 NewNextEnvironmentIndex);
	void SetEnvironmentIndex(int32 NewEnvironmentIndex);
	void RemoveRelevantPOIActor(class AActor** POI);
	void QueueExplorerNoteForDeferredUnlock(int32 ExplorerNoteIndex);
	void PrintCDODebugForChar(class APrimalCharacter* ReferenceChar);
	void PrintCDODebug(class APrimalCharacter* ReferenceChar, struct FCDODebugData* CDODebugData);
	void PrepareActorForMassTeleport(class AActor* PrepareActor, const struct FMassTeleportData& WithMassTeleportData);
	void OnRep_SupportedSpawnRegions();
	void OnRep_ReplicateLocalizedChatRadius();
	void OnRep_ReplicateLiveTuningOverloadChunks();
	void OnRep_CurrentDefaultPropertyValueUpdates();
	void OnNewClassInitialized(class UClass* ForClass);
	void OnHUDNotification(const struct FHUDNotification& Notification, bool* ReturnValue);
	void NetUpdateOfflinePvPLiveTeams(const TArray<int32>& NewPreventOfflinePvPLiveTeams);
	void NetUpdateOfflinePvPExpiringTeams(const TArray<int32>& NewPreventOfflinePvPExpiringTeams, const TArray<float>& NewPreventOfflinePvPExpiringTimes);
	class FName NetSpawnFoliageVFXActorAtLocationAndDoFoliageInteraction(class UClass** AnActorClass, struct FVector_NetQuantize* AtLocation, const struct FRotator_NetQuantize& AtRotation, class AActor** EffectOwnerToIgnore, float* MaxRangeToReplicate, bool* bOnlySendToEffectOwner, bool IsSimpleFoliageInteraction, const struct FVector& FoliageOrigin_ImpactPoint, const struct FVector& TraceEndpoint);
	float NetAddFloatingText(struct FVector* AtLocation, class FString* FloatingTextString, struct FColor* FloatingTextColor, float* TextLifeSpan, struct FVector* TextVelocity, float* MinScale, float* FadeInTime, int32 OnlySendToTeamID);
	int32 NetAddFloatingDamageText(struct FVector* AtLocation, int32 FromTeamID, int32 OnlySendToTeamID);
	void Multi_SpawnCosmeticActor(class UClass* SpawnActorOfClass, struct FVector* SpawnAtLocation, struct FRotator* SpawnWithRotation);
	void LoadedWorld();
	void IsValidMassTeleportData(struct FMassTeleportData* CheckData, bool* ReturnValue);
	void IsUniqueDinoAlreadySpawned(TSoftClassPtr<class APrimalDinoCharacter>* UniqueDino, bool* ReturnValue);
	void IsTeamIDInvincible(int32* TargetingTeamID, bool* bInvincibleOnlyWhenOffline, bool* ReturnValue);
	void IsMassTeleportInProgress(class AActor** InitiatingActor, bool* ReturnValue);
	void IsEngramClassHidden(class UClass** ForItemClass, bool* ReturnValue);
	class FString HTTPPostRequest();
	class FString HTTPGetRequest();
	void HandleInitializedGameState();
	void GetStartTimeHour(int32* ReturnValue);
	void GetOfflineDamagePreventionTime(int32* TargetingTeamID, float* ReturnValue);
	void GetNetworkTimeDelta(class AShooterGameState* GameState, double* NetTime, bool* bTimeUntil, double* ReturnValue);
	void GetItemMaxQuantityOverride(class UClass* ForClass, struct FMaxItemQuantityOverride* OutMaxQuantity, bool* ReturnValue);
	void GetIniArray(class FString* SectionName, TArray<struct FGameIniData>* ReturnValue);
	void GetGamePhase(enum class EGamePhase* ReturnValue);
	void GetDayTimeString(class FString* ReturnValue);
	void GetDayCycleSpeed(float* ReturnValue);
	void GetCleanServerSessionName(class FString* ReturnValue);
	void ForceStartMatch(bool* PreventFinishTheMatch, bool* UseQuetzalBus);
	void DisplayWelcomeUI();
	class FName CDOGetPrintStringForObjectProperty(class UObject** TheObject, class FString* OutString, bool* ReturnValue);
	void CDOGetPrintStringForObjectProperties(class UObject** TheObject, TArray<class FName>* PropertyNames, class FString* OutString, bool* ReturnValue);
	void CancelMassTeleport(class AActor** WithInitiatingActor, bool* ReturnValue);
	void BPPreGameplaySetup();
	class FName BPNetSpawnActorAtLocation(class UClass** AnActorClass, struct FVector* AtLocation, const struct FRotator& AtRotation, class AActor** EffectOwnerToIgnore, float* MaxRangeToReplicate, bool* bOnlySendToEffectOwner);
	class AShooterHUD* BPDrawGameStateHUD();
	void BaseSpawnBuffAndAttachToCharacter(class UClass** Buff, class APrimalCharacter** PrimalCharacter, float* ExperiencePoints, class APrimalBuff** ReturnValue);
	struct FVector BaseProjectWorldToScreenPosition(class APlayerController** ThePC, struct FVector2D* ReturnValue);
	void BaseIsTribeID(int32 TeamID, bool* ReturnValue);
	void BaseGetCustomActors(class FName* SearchCustomTag, class ACustomActorList** ReturnValue);
	void BaseGetAllShooterControllers(TArray<class AShooterPlayerController*>* ReturnValue);
	void BaseGetAllShooterCharactersOfTeam(int32* KillerTeam, TArray<class AShooterCharacter*>* ReturnValue);
	void BaseGetAllShooterCharacters(TArray<class AShooterCharacter*>* ReturnValue);
	void BaseGetAllDinoCharactersOfTeam(int32* KillerTeam, TArray<class APrimalDinoCharacter*>* ReturnValue);
	class AShooterHUD* BaseDrawTileOnCanvas(class UTexture** Tex, float X, float Y, float* XL, float* YL, float* U, float* V, float* UL, float* VL, struct FColor* DrawColor);
	void AllowDownloadDino(TSoftClassPtr<class APrimalDinoCharacter>* TheDinoClass, bool* ReturnValue);
	void AllowDinoTame(class APrimalDinoCharacter** DinoChar, class AShooterPlayerController* ForPC, bool* ReturnValue);
	void AllowDinoClassTame(class UClass** DinoCharClass, class AShooterPlayerController* ForPC, bool* ReturnValue);
	void AddTokens(int32 Quantity, int32* byTribe);
	void AddRelevantPOIActor(class AActor** POI);
	float AddFloatingText(struct FVector* AtLocation, class FString* FloatingTextString, struct FColor* FloatingTextColor, float* TextLifeSpan, struct FVector* TextVelocity, float* MinScale, float* FadeInTime);
};

// 0x0 (0xE50 - 0xE50)
// Class ShooterGame.BattleGameState
class ABattleGameState : public AShooterGameState
{
public:

	static class UClass* StaticClass();
	static class ABattleGameState* GetDefaultObj();

};

// 0xD8 (0x770 - 0x698)
// Class ShooterGame.BeamWeaponComponent
class UBeamWeaponComponent : public UPrimitiveComponent
{
public:
	class UParticleSystem*                       ParticleSystemTemplate;                            // 0x698(0x8)(ConstParm, BlueprintVisible, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       ChargeupParticleSystemTemplate;                    // 0x6A0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       BurstWhenFiredSystemTemplate;                      // 0x6A8(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       ImpactSystemTemplate;                              // 0x6B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        Duration;                                          // 0x6B8(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        DamageRadius;                                      // 0x6BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DamageType;                                        // 0x6C0(0x8)(ExportObject, Parm, OutParm, Transient, GlobalConfig)
	float                                        DamageDelay;                                       // 0x6C8(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseDamage;                                        // 0x6CC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Length;                                            // 0x6D0(0x4)(ConstParm, BlueprintVisible, Net, ReturnParm)
	bool                                         IsPenetrating;                                     // 0x6D4(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_10CF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TargetTrackingSpeed;                               // 0x6D8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         UseOwnerForward;                                   // 0x6DC(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_10D6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Offset;                                            // 0x6E0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
	float                                        ChargeupTime;                                      // 0x6E4(0x4)(Edit, ConstParm, ExportObject, Net, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         WhenChargingWaitForCallToFire;                     // 0x6E8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         DeactivateChargeupOnFiring;                        // 0x6E9(0x1)(Edit, BlueprintVisible, ExportObject, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_10D9[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            BeamStoppedFiringEvent;                            // 0x6F0(0x10)(Edit, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AActor>                 BeamTarget;                                        // 0x700(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              ParticleComp;                                      // 0x708(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              ChargeUpComp;                                      // 0x710(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              ImpactComp;                                        // 0x718(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_10DC[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UBeamWeaponComponent* GetDefaultObj();

	void UpdateBeamVisuals();
	void StopFiring();
	void StartFiring();
	void StartCharging();
	void SetTarget(class AActor* Target);
	void GetTarget(class AActor** ReturnValue);
	void GetParticleSystem(class UParticleSystemComponent** ReturnValue);
	void GetLastStoppedFiringTime(double* ReturnValue);
	void GetIsFiring(bool* ReturnValue);
	void GetIsCharging(bool* ReturnValue);
	void GetImpactParticleSystem(class UParticleSystemComponent** ReturnValue);
	void GetChargeupParticleSystem(class UParticleSystemComponent** ReturnValue);
	void GetBeamEndLocation(struct FVector* ReturnValue);
};

// 0x30 (0xE8 - 0xB8)
// Class ShooterGame.BeamWeaponController
class UBeamWeaponController : public UActorComponent
{
public:
	TArray<struct FComponentReference>           BeamWeapons;                                       // 0xB8(0x10)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            BeamStoppedFiringEvent;                            // 0xC8(0x10)(Edit, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            BeamsStoppedFiringEvent;                           // 0xD8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UBeamWeaponController* GetDefaultObj();

	void StopFiringBeams();
	void StartChargingBeams(bool* ReturnValue);
	void StartChargingBeam(bool* ReturnValue);
	class UBeamWeaponComponent* OnBeamStoppedFiringHandler();
	void GetBeamWeaponComponents(TArray<class UBeamWeaponComponent*>* ReturnValue);
	void FireBeams(bool* ReturnValue);
	void FireBeam(bool* ReturnValue);
};

// 0x10 (0x768 - 0x758)
// Class ShooterGame.BinocularsWidgetUI
class UBinocularsWidgetUI : public UPrimalUI
{
public:
	class FName                                  GamepadUnlockButtonName;                           // 0x758(0x8)(Edit, BlueprintReadOnly, Net, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_119C[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UBinocularsWidgetUI* GetDefaultObj();

	class APrimalCharacter* GetDinoParentClass(class UClass** ReturnValue);
	enum class EPrimalCharacterStatusValue GetCharUsesStat(bool* ReturnValue);
	class APrimalCharacter* GetCharTorpidMaxStatus(float* ReturnValue);
	class APrimalCharacter* GetCharTorpidCurrentStatus(float* ReturnValue);
	enum class EPrimalCharacterStatusValue GetCharNumStatPointsString(class FString* ReturnValue);
	class APrimalCharacter* GetCharHealthMaxStatus(float* ReturnValue);
	class APrimalCharacter* GetCharHealthCurrentStatus(float* ReturnValue);
};

// 0x90 (0x558 - 0x4C8)
// Class ShooterGame.BiomeZoneSettings
class ABiomeZoneSettings : public AActor
{
public:
	class FString                                BiomeZoneName;                                     // 0x4C8(0x10)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        FinalTemperatureMultiplier;                        // 0x4D8(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        FinalTemperatureExponent;                          // 0x4DC(0x4)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        FinalTemperatureAddition;                          // 0x4E0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        PreOffsetTemperatureMultiplier;                    // 0x4E4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        PreOffsetTemperatureExponent;                      // 0x4E8(0x4)(Net, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        PreOffsetTemperatureAddition;                      // 0x4EC(0x4)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        AboveTemperatureOffsetThreshold;                   // 0x4F0(0x4)(EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        AboveTemperatureOffsetMultiplier;                  // 0x4F4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        AboveTemperatureOffsetExponent;                    // 0x4F8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        BelowTemperatureOffsetThreshold;                   // 0x4FC(0x4)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        BelowTemperatureOffsetMultiplier;                  // 0x500(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        BelowTemperatureOffsetExponent;                    // 0x504(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        AbsoluteTemperatureOverride;                       // 0x508(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventCrops : 1;                                 // Mask: 0x1, PropSize: 0x10x50C(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_B0 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_11AC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        EggRangeMaximumNumberOverride;                     // 0x510(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        EggMaximumNumberOverride;                          // 0x514(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        EggChanceToSpawnOverride;                          // 0x518(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        EggIntervalUnstasisChanceToSpawnOverride;          // 0x51C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        OverrideEggLimitsDinoClasses;                      // 0x520(0x10)(ExportObject, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        BiomeZonePriority;                                 // 0x530(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxMultiplier;                                     // 0x534(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicDay;                            // 0x538(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicNight;                          // 0x540(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicDay_Heavy;                      // 0x548(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicNight_Heavy;                    // 0x550(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ABiomeZoneSettings* GetDefaultObj();

};

// 0x1B8 (0x6D0 - 0x518)
// Class ShooterGame.BiomeZoneVolume
class ABiomeZoneVolume : public AVolume
{
public:
	class FString                                BiomeZoneName;                                     // 0x518(0x10)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	enum class EBiomeZone                        BiomeZone;                                         // 0x528(0x1)(Net, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_128D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FinalTemperatureMultiplier;                        // 0x52C(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        FinalTemperatureExponent;                          // 0x530(0x4)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        FinalTemperatureAddition;                          // 0x534(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        PreOffsetTemperatureMultiplier;                    // 0x538(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        PreOffsetTemperatureExponent;                      // 0x53C(0x4)(Net, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        PreOffsetTemperatureAddition;                      // 0x540(0x4)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        AboveTemperatureOffsetThreshold;                   // 0x544(0x4)(EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        AboveTemperatureOffsetMultiplier;                  // 0x548(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        AboveTemperatureOffsetExponent;                    // 0x54C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        BelowTemperatureOffsetThreshold;                   // 0x550(0x4)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        BelowTemperatureOffsetMultiplier;                  // 0x554(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        BelowTemperatureOffsetExponent;                    // 0x558(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        AbsoluteTemperatureOverride;                       // 0x55C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        AbsoluteMaxTemperature;                            // 0x560(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        AbsoluteMinTemperature;                            // 0x564(0x4)(ConstParm, BlueprintReadOnly, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventCrops : 1;                                 // Mask: 0x1, PropSize: 0x10x568(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsOutside : 1;                                    // Mask: 0x2, PropSize: 0x10x568(0x1)(BlueprintVisible, ExportObject, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemoveBuffWhenLeavingVolume : 1;                  // Mask: 0x4, PropSize: 0x10x568(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_B7 : 5;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1299[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        EggRangeMaximumNumberOverride;                     // 0x56C(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        EggMaximumNumberOverride;                          // 0x570(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        EggChanceToSpawnOverride;                          // 0x574(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        EggIntervalUnstasisChanceToSpawnOverride;          // 0x578(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_129F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        OverrideEggLimitsDinoClasses;                      // 0x580(0x10)(ExportObject, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        BiomeZonePriority;                                 // 0x590(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxMultiplier;                                     // 0x594(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        AbsoluteWindOverride;                              // 0x598(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        PreOffsetWindMultiplier;                           // 0x59C(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        PreOffsetWindExponent;                             // 0x5A0(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        PreOffsetWindAddition;                             // 0x5A4(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        AboveWindOffsetThreshold;                          // 0x5A8(0x4)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        AboveWindOffsetMultiplier;                         // 0x5AC(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        AboveWindOffsetExponent;                           // 0x5B0(0x4)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        BelowWindOffsetThreshold;                          // 0x5B4(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        BelowWindOffsetMultiplier;                         // 0x5B8(0x4)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        BelowWindOffsetExponent;                           // 0x5BC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        FinalWindMultiplier;                               // 0x5C0(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        FinalWindExponent;                                 // 0x5C4(0x4)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        FinalWindAddition;                                 // 0x5C8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_12A3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<float>                                BiomeCustomDatas;                                  // 0x5D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        StatusAdjustmentRateMultipliersPositive[0xC];      // 0x5E0(0x30)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        StatusAdjustmentRateMultipliersNegative[0xC];      // 0x610(0x30)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyApplyAdjustmentRateValuesOutdoors;            // 0x640(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bStatusAdjustRateValues;                           // 0x641(0x1)(ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableDayTransitionSounds;                       // 0x642(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_12A5[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class APrimalBuff>             BuffToGive;                                        // 0x648(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             BuffToPreventActiveUse;                            // 0x678(0x30)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicDay;                            // 0x6A8(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicDay_Heavy;                      // 0x6B0(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicNight;                          // 0x6B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicNight_Heavy;                    // 0x6C0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ForceMusicInBiome;                                 // 0x6C8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ABiomeZoneVolume* GetDefaultObj();

	class AActor* OnEndOverlap(class AActor** Actor);
	class AActor* OnBeginOverlap(class AActor** Actor);
	bool IsPointUnderwater(class UWorld* ForWorld, bool* ReturnValue);
	struct FVector IsPointInVacuumBase(class UWorld* ForWorld, bool* ReturnValue);
	bool GetWaterVolumeAtPoint(class UWorld* ForWorld, class APhysicsVolume** ReturnValue);
	bool GetPhysicsVolumeAtLocation(class UWorld* ForWorld, class APhysicsVolume** ReturnValue);
	class UWorld* GetBiomeZoneVolume(struct FVector* Location, class ABiomeZoneVolume** ReturnValue);
	class UWorld* GetAllBiomeZones(TArray<class ABiomeZoneVolume*>* BiomeZones);
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.BiomeZoneVolumeEffectUtility
class UBiomeZoneVolumeEffectUtility : public UObject
{
public:

	static class UClass* StaticClass();
	static class UBiomeZoneVolumeEffectUtility* GetDefaultObj();

	class AActor* SpawnRelevantEffect(struct FVector* Location, bool bIsImpactActor);
	class UWorld* SpawnImpactEffect(const struct FHitResult& HitResult, const struct FBiomeZoneImpactEffect& ImpactEffect, class AActor** Owner, class AActor** ReturnValue);
	class AActor* GetRelevantEffect(const struct FVector& ForLocation, bool bIsImpactActor, struct FBiomeZoneVolumeEffect* ReturnValue);
};

// 0x8 (0xA0 - 0x98)
// Class ShooterGame.BTService_FindTarget
class UBTService_FindTarget : public UBTService_BlackboardBase
{
public:
	bool                                         bDontSet;                                          // 0x98(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_12D7[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UBTService_FindTarget* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class ShooterGame.BTService_UpdateAggro
class UBTService_UpdateAggro : public UBTService
{
public:

	static class UClass* StaticClass();
	static class UBTService_UpdateAggro* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class ShooterGame.BTTask_AttackTarget
class UBTTask_AttackTarget : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UBTTask_AttackTarget* GetDefaultObj();

};

// 0x38 (0xD0 - 0x98)
// Class ShooterGame.BTTask_GetRandomWanderDestination
class UBTTask_GetRandomWanderDestination : public UBTTask_BlackboardBase
{
public:
	struct FVector                               LocOverride;                                       // 0x98(0x18)(ConstParm, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        RandomOffsetMultiplier;                            // 0xB0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseRandomNegativeXDir;                            // 0xB4(0x1)(ConstParm, ExportObject, Net, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOrientRandOffsetByRotation;                       // 0xB5(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_12DF[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              OrientRandOffsetByRotation;                        // 0xB8(0x18)(Edit, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UBTTask_GetRandomWanderDestination* GetDefaultObj();

};

// 0x0 (0xD0 - 0xD0)
// Class ShooterGame.BTTask_RotateToFaceBBEntryWithGrab
class UBTTask_RotateToFaceBBEntryWithGrab : public UBTTask_RotateToFaceBBEntry
{
public:

	static class UClass* StaticClass();
	static class UBTTask_RotateToFaceBBEntryWithGrab* GetDefaultObj();

};

// 0x0 (0x758 - 0x758)
// Class ShooterGame.BuildingUI
class UBuildingUI : public UPrimalUI
{
public:

	static class UClass* StaticClass();
	static class UBuildingUI* GetDefaultObj();

	void GetStructurePlacer(class APrimalStructurePlacer** ReturnValue);
	void GetStructureIcon(class APrimalStructure** Structure, class UTexture2D** ReturnValue);
};

// 0x8 (0x38 - 0x30)
// Class ShooterGame.CachedDB
class UCachedDB : public UDataAsset
{
public:
	bool                                         bForceRepopulateAll;                               // 0x30(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_12FE[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCachedDB* GetDefaultObj();

	void PopulateDBFromEditor();
	void PopulateDB(const TArray<struct FAssetData>& CustomAssetList);
};

// 0x50 (0x88 - 0x38)
// Class ShooterGame.ShooterWeaponDB
class UShooterWeaponDB : public UCachedDB
{
public:
	TMap<TSoftClassPtr<class AShooterWeapon>, struct FShooterWeaponDBEntry> CachedWeaponData;                                  // 0x38(0x50)(ExportObject, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UShooterWeaponDB* GetDefaultObj();

};

// 0x50 (0x88 - 0x38)
// Class ShooterGame.PrimalDinoDB
class UPrimalDinoDB : public UCachedDB
{
public:
	TMap<TSoftClassPtr<class APrimalDinoCharacter>, struct FPrimalDinoDBEntry> CachedDinoData;                                    // 0x38(0x50)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalDinoDB* GetDefaultObj();

};

// 0x50 (0x88 - 0x38)
// Class ShooterGame.PrimalStructureDB
class UPrimalStructureDB : public UCachedDB
{
public:
	TMap<TSoftClassPtr<class APrimalStructure>, struct FPrimalStructureDBEntry> CachedStructureData;                               // 0x38(0x50)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalStructureDB* GetDefaultObj();

};

// 0x50 (0x88 - 0x38)
// Class ShooterGame.PrimalInventoryDB
class UPrimalInventoryDB : public UCachedDB
{
public:
	TMap<TSoftClassPtr<class UPrimalInventoryComponent>, struct FPrimalInventoryDBEntry> CachedInventoryData;                               // 0x38(0x50)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalInventoryDB* GetDefaultObj();

};

// 0x50 (0x88 - 0x38)
// Class ShooterGame.PrimalMissionDB
class UPrimalMissionDB : public UCachedDB
{
public:
	TMap<TSoftClassPtr<class AMissionType>, struct FPrimalMissionDBEntry> CachedMissionData;                                 // 0x38(0x50)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalMissionDB* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class ShooterGame.GenerateCacheDBForModsCommandlet
class UGenerateCacheDBForModsCommandlet : public UCommandlet
{
public:

	static class UClass* StaticClass();
	static class UGenerateCacheDBForModsCommandlet* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class ShooterGame.CameraModifier_Climbing
class UCameraModifier_Climbing : public UCameraModifier
{
public:
	class AShooterWeapon_Climb*                  OwningWeapon;                                      // 0x48(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UCameraModifier_Climbing* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class ShooterGame.CDOLiveUpdateData
class UCDOLiveUpdateData : public UObject
{
public:
	TArray<struct FNetChangeDefaultPropertyValue> CDOLiveUpdates;                                    // 0x28(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FCDODebugData                         CDODebugData;                                      // 0x38(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance)

	static class UClass* StaticClass();
	static class UCDOLiveUpdateData* GetDefaultObj();

};

// 0x30 (0x360 - 0x330)
// Class ShooterGame.CharacterViewPanelWidget
class UCharacterViewPanelWidget : public UPrimalUserWidget
{
public:
	class FString                                PreviewWidgetName;                                 // 0x330(0x10)(Edit, ConstParm, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_132F[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCharacterViewPanelWidget* GetDefaultObj();

	void RefreshPreviewWidget();
};

// 0x38 (0x910 - 0x8D8)
// Class ShooterGame.CheatFunctionInfoEntryButton
class UCheatFunctionInfoEntryButton : public UDataListEntryButton
{
public:
	uint8                                        bIsCustom : 1;                                     // Mask: 0x1, PropSize: 0x10x8D8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_B9 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1332[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                FunctionName;                                      // 0x8E0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bCenterDisplayName;                                // 0x8F0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1337[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          DisplayStringSelectedColor;                        // 0x8F4(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FolderNameTextClipOffset;                          // 0x904(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1339[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCheatFunctionInfoEntryButton* GetDefaultObj();

};

// 0x548 (0xA10 - 0x4C8)
// Class ShooterGame.PointOfInterestActor
class APointOfInterestActor : public AActor
{
public:
	uint8                                        Pad_1353[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class USceneComponent*                       PointRootComp;                                     // 0x4D8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class USphereComponent*                      PointUseSphereComp;                                // 0x4E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTextRenderComponent*                  PointTextComp;                                     // 0x4E8(0x8)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTextRenderComponent*                  PointTitleTextComp;                                // 0x4F0(0x8)(Edit, ConstParm, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1358[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPointOfInterestData                  MyPointOfInterestData;                             // 0x500(0x1E0)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FPointOfInterestCompanionBehavior     MyPointOfInterestCompanionBehavior;                // 0x6E0(0x300)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               UseSphereLocOffset;                                // 0x9E0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        UseSphereRadius;                                   // 0x9F8(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TitleTextZOffset;                                  // 0x9FC(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasBeenViewed : 1;                                // Mask: 0x1, PropSize: 0x10xA00(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	uint8                                        bSyncWithPointManager : 1;                         // Mask: 0x2, PropSize: 0x10xA00(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventViewMultiUseEntry : 1;                     // Mask: 0x4, PropSize: 0x10xA00(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDebugPointActor_Persistent : 1;                   // Mask: 0x8, PropSize: 0x10xA00(0x1)(EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDebugPointActor_Single : 1;                       // Mask: 0x10, PropSize: 0x10xA00(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDebugPointActor_ClearDebugLines : 1;              // Mask: 0x20, PropSize: 0x10xA00(0x1)(ConstParm, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_BA : 2;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_135E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class APointOfInterestManagerList*           MyPointManager;                                    // 0xA08(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APointOfInterestActor* GetDefaultObj();

	void RefreshPointData();
	void IsPointOfInterestValid(bool* ReturnValue);
	void GetMyPointOfInterestData(struct FPointOfInterestData* ReturnValue);
	void GetMyPointOfInterestCompanionBehavior(struct FPointOfInterestCompanionBehavior* ReturnValue);
};

// 0x60 (0xA70 - 0xA10)
// Class ShooterGame.CompanionEventTrigger
class ACompanionEventTrigger : public APointOfInterestActor
{
public:
	class UBoxComponent*                         BoxTriggerComp;                                    // 0xA10(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTextRenderComponent*                  EventTitleTextComp;                                // 0xA18(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FCompanionEventData                   MyEventData;                                       // 0xA20(0x50)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ACompanionEventTrigger* GetDefaultObj();

	class AActor* OnEndOverlap(class AActor** Actor);
	class AActor* OnBeginOverlap(class AActor** Actor);
};

// 0x18 (0x770 - 0x758)
// Class ShooterGame.ConsoleCommandButtonWidget
class UConsoleCommandButtonWidget : public UBaseSelectableButtonWidget
{
public:
	uint8                                        Pad_136F[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UConsoleCommandButtonWidget* GetDefaultObj();

};

// 0x58 (0x388 - 0x330)
// Class ShooterGame.ContextMenu
class UContextMenu : public UPrimalUserWidget
{
public:
	FDelegateProperty_                           OnPopulateMenu;                                    // 0x330(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	FDelegateProperty_                           OnPopulateMenuCustom;                              // 0x340(0x10)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnActiveItemChanged;                               // 0x350(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class FName                                  CustomName;                                        // 0x360(0x8)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1389[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UContextMenu* GetDefaultObj();

	class UContextMenuItem* SetActiveItem();
	class FName PopulateContextMenuCustom__DelegateSignature(class UContextMenu* ContextMenu);
	void PopulateContextMenu__DelegateSignature(class UContextMenu* ContextMenu);
	void GetActiveItem(class UContextMenuItem** ReturnValue);
	bool CloseMenu();
	class UContextMenuItem* ActiveMenuItemChanged__DelegateSignature();
};

// 0xF0 (0x420 - 0x330)
// Class ShooterGame.ContextMenuItem
class UContextMenuItem : public UPrimalUserWidget
{
public:
	FDelegateProperty_                           OnGetMenuContentEvent;                             // 0x330(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	FDelegateProperty_                           OnGetMenuContentEventCustom;                       // 0x340(0x10)(ConstParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnExecuteMainAction;                               // 0x350(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnExecuteMainActionCustom;                         // 0x360(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class FName                                  SubmenuMenuAnchorName;                             // 0x370(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class FName                                  SubmenuIndicatorName;                              // 0x378(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class FName                                  ShortcutKeyWidgetName;                             // 0x380(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class FName                                  SwitchName;                                        // 0x388(0x8)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class FName                                  SwitchContainerName;                               // 0x390(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	enum class EUContextMenuItemSwitchMode       SwitchType;                                        // 0x398(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	bool                                         IsSwitchedOn;                                      // 0x399(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_13D4[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  CustomName;                                        // 0x39C(0x8)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_13D8[0x7C];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UContextMenuItem* GetDefaultObj();

	void SetSubmenuEnabled(bool* bEnabled);
	int32 SetShortcutKey(const struct FKey& Key);
	void SetJustification(enum class ETextJustify Value);
	class FText SetCaption();
	void OnGetContextMenuContent(class UWidget** ReturnValue);
	class FName OnButtonClickedEventObjectCustom__DelegateSignature(class UContextMenuItem* ContextMenuItem);
	void OnButtonClickedEventObject__DelegateSignature(class UContextMenuItem* ContextMenuItem);
	void OnButtonClicked();
	class UContextMenuItem* OnActiveMenuItemChanged(class UContextMenu* ContextMenu);
	void GetSubmenuEnabled(bool* ReturnValue);
	class FName GetSubmenuContentCustom__DelegateSignature(class UContextMenuItem* ContextMenuItem, class UContextMenu** ReturnValue);
	void GetSubmenuContent__DelegateSignature(class UContextMenuItem* ContextMenuItem, class UContextMenu** ReturnValue);
	void GetJustification(enum class ETextJustify* ReturnValue);
	void GetCaption(class FText* ReturnValue);
};

// 0x18 (0x438 - 0x420)
// Class ShooterGame.ContextMenuItem_Sort
class UContextMenuItem_Sort : public UContextMenuItem
{
public:
	class FName                                  SorDirSwitcherName;                                // 0x420(0x8)(Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_13DF[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UContextMenuItem_Sort* GetDefaultObj();

};

// 0x38 (0x458 - 0x420)
// Class ShooterGame.ContextMenuItem_Spinner
class UContextMenuItem_Spinner : public UContextMenuItem
{
public:
	FMulticastInlineDelegateProperty_            OnValueCommitted;                                  // 0x420(0x10)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1403[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MinValue;                                          // 0x434(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        MaxValue;                                          // 0x438(0x4)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1406[0x1C];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UContextMenuItem_Spinner* GetDefaultObj();

	int32 SetValue();
	int32 SetMinValue();
	int32 SetMaxValue();
	int32 OnSpinnerValueCommitedEvent__DelegateSignature(enum class ETextCommit CommitMethod);
	class FText HandleOnTextCommited(enum class ETextCommit CommitMethod);
	class FText HandleOnTextChanged();
	void HandleOnButtonIncreaseClicked();
	void HandleOnButtonDecreaseClicked();
	void GetValue(int32* ReturnValue);
	void GetMinValue(int32* ReturnValue);
	void GetMaxValue(int32* ReturnValue);
};

// 0x20 (0x3A8 - 0x388)
// Class ShooterGame.ContextMenu_DinoGroupEntry
class UContextMenu_DinoGroupEntry : public UContextMenu
{
public:
	class UClass*                                ItemClass_SimpleButton;                            // 0x388(0x8)(ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ItemClass_SimpleCaption;                           // 0x390(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ItemClass_Spinner;                                 // 0x398(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SubmenuClass;                                      // 0x3A0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UContextMenu_DinoGroupEntry* GetDefaultObj();

	void PopulateRootMenu(class UContextMenu* ContextMenu);
	class UContextMenuItem* HandleActionSetGroup();
	class UContextMenuItem* HandleActionRemoveDino();
	class UContextMenuItem* HandleActionRemoveClass();
};

// 0x8 (0x390 - 0x388)
// Class ShooterGame.ContextMenu_InventorySort
class UContextMenu_InventorySort : public UContextMenu
{
public:
	class UClass*                                ItemClass_SortButton;                              // 0x388(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UContextMenu_InventorySort* GetDefaultObj();

	void PopulateRootMenu(class UContextMenu* ContextMenu);
	class UContextMenuItem* HandleActionWeight();
	class UContextMenuItem* HandleActionUnsort();
	class UContextMenuItem* HandleActionType();
	class UContextMenuItem* HandleActionSpoilTimer();
	class UContextMenuItem* HandleActionAlphabetical();
};

// 0x50 (0x3D8 - 0x388)
// Class ShooterGame.ContextMenu_PrimalItem
class UContextMenu_PrimalItem : public UContextMenu
{
public:
	class UClass*                                ItemClass_SimpleButton;                            // 0x388(0x8)(ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ItemClass_SimpleCaption;                           // 0x390(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ItemClass_Spinner;                                 // 0x398(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SubmenuClass;                                      // 0x3A0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_14D1[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        SplitAmountValue;                                  // 0x3B8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        SplitAmountMax;                                    // 0x3BC(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        CraftAmountValue;                                  // 0x3C0(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        CraftAmountMax;                                    // 0x3C4(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        CraftQuantityValue;                                // 0x3C8(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        CraftQuantityMax;                                  // 0x3CC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsFreeCraftingMode : 1;                           // Mask: 0x1, PropSize: 0x10x3D0(0x1)(BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_14D4[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UContextMenu_PrimalItem* GetDefaultObj();

	void PopulateSubmenuSplitStack(class UContextMenu* ContextMenu);
	void PopulateSubmenuSplitAmount(class UContextMenu* ContextMenu);
	void PopulateSubmenuRemove(class UContextMenu* ContextMenu);
	class FName PopulateSubmenuCustom(class UContextMenu* ContextMenu);
	void PopulateSubmenuCraftAmount(class UContextMenu* ContextMenu);
	void PopulateRootMenu(class UContextMenu* ContextMenu);
	void PopulateFolderMenu(class UContextMenu* ContextMenu);
	void PopulateCraftMenu(class UContextMenu* ContextMenu);
	int32 HandleSplitAmountValueCommit(enum class ETextCommit CommitMethod);
	void HandleOnGetSubmenuSplitStackContent(class UContextMenuItem* MenuItem, class UContextMenu** ReturnValue);
	void HandleOnGetSubmenuSplitAmountContent(class UContextMenuItem* MenuItem, class UContextMenu** ReturnValue);
	void HandleOnGetSubmenuRemoveContent(class UContextMenuItem* MenuItem, class UContextMenu** ReturnValue);
	class FName HandleOnGetSubmenuCustomContent(class UContextMenuItem* MenuItem, class UContextMenu** ReturnValue);
	void HandleOnGetSubmenuCraftContent(class UContextMenuItem* MenuItem, class UContextMenu** ReturnValue);
	void HandleOnGetSubmenuCraftAmountContent(class UContextMenuItem* MenuItem, class UContextMenu** ReturnValue);
	int32 HandleCraftAmountValueCommit(enum class ETextCommit CommitMethod);
	class UContextMenuItem* HandleActionUse();
	class UContextMenuItem* HandleActionUnequip();
	class UContextMenuItem* HandleActionTransfer();
	class UContextMenuItem* HandleActionTrack();
	class UContextMenuItem* HandleActionSplitOne();
	class UContextMenuItem* HandleActionSplitHalf();
	class UContextMenuItem* HandleActionSplitAmount();
	class UContextMenuItem* HandleActionSplitAll();
	class UContextMenuItem* HandleActionSetCraftQuantity();
	class UContextMenuItem* HandleActionRepair();
	class UContextMenuItem* HandleActionRenameFolder();
	class UContextMenuItem* HandleActionRemoveSkin();
	class UContextMenuItem* HandleActionRemoveAmmo();
	class UContextMenuItem* HandleActionRemoveAccessory();
	class UContextMenuItem* HandleActionFavorite();
	class UContextMenuItem* HandleActionFastInventoryInFolder();
	class UContextMenuItem* HandleActionEquipAllInFolder();
	class UContextMenuItem* HandleActionEquip();
	class UContextMenuItem* HandleActionDiscard();
	class UContextMenuItem* HandleActionDeleteFolder();
	class FName HandleActionCustom();
	class UContextMenuItem* HandleActionCraftOne();
	class UContextMenuItem* HandleActionCraftAmount();
	class UContextMenuItem* HandleActionCraftAll();
	void BPUpdateCanUse();
};

// 0x8 (0x4F0 - 0x4E8)
// Class ShooterGame.CorruptedAvatarAttackCoordinator
class ACorruptedAvatarAttackCoordinator : public AAIAttackCoordinator
{
public:
	uint8                                        Pad_14E0[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ACorruptedAvatarAttackCoordinator* GetDefaultObj();

};

// 0xB0 (0xE8 - 0x38)
// Class ShooterGame.CursorSettings
class UCursorSettings : public UDeveloperSettings
{
public:
	struct FRuntimeFloatCurve                    AnalogCursorAccelerationCurve;                     // 0x38(0x88)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxAnalogCursorSpeed;                              // 0xC0(0x4)(ExportObject, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxAnalogCursorSpeedWhenHovered;                   // 0xC4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AnalogCursorDragCoefficient;                       // 0xC8(0x4)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AnalogCursorDragCoefficientWhenHovered;            // 0xCC(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinAnalogCursorSpeed;                              // 0xD0(0x4)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AnalogCursorDeadZone;                              // 0xD4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AnalogCursorAccelerationMultiplier;                // 0xD8(0x4)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AnalogCursorSize;                                  // 0xDC(0x4)(Edit, ConstParm, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseEngineAnalogCursor;                            // 0xE0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAnalogCursorNoAcceleration;                       // 0xE1(0x1)(ExportObject, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_14EA[0x6];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCursorSettings* GetDefaultObj();

};

// 0x18 (0x4E0 - 0x4C8)
// Class ShooterGame.CustomActorList
class ACustomActorList : public AInfo
{
public:
	TArray<class AActor*>                        ActorList;                                         // 0x4C8(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_14F1[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ACustomActorList* GetDefaultObj();

	void DestroyActors();
};

// 0x60 (0x740 - 0x6E0)
// Class ShooterGame.CustomButtonWidget
class UCustomButtonWidget : public UButton
{
public:
	struct FCustomButtonWidgetStyle              ExtendedWidgetStyle;                               // 0x6E0(0x48)(BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsToggleButton;                                    // 0x728(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsToggledOn;                                       // 0x729(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1503[0x16];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCustomButtonWidget* GetDefaultObj();

	void SetToggledState(bool IsToggled);
	void SetIsToggleButton(bool IsToggle);
	void GetToggledState(bool* ReturnValue);
	void GetIsToggleButton(bool* ReturnValue);
	void BPSetToggledState(bool IsToggled);
};

// 0x39D0 (0x3FA0 - 0x5D0)
// Class ShooterGame.ShooterGameMode
class AShooterGameMode : public APrimalGameMode
{
public:
	uint8                                        Pad_1772[0x108];                                   // Fixing Size After Last Property  > TateDumper <
	class FString                                BanFileName;                                       // 0x6D8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1774[0x188];                                   // Fixing Size After Last Property  > TateDumper <
	class UShooterCheatManager*                  ServerCheatManager;                                // 0x870(0x8)(BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ForceLoadWorldSeconds;                             // 0x878(0x4)(BlueprintVisible, Net, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1777[0x1C];                                    // Fixing Size After Last Property  > TateDumper <
	class URCONServer*                           RCONSocket;                                        // 0x898(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FString                                PlayersJoinNoCheckFilename;                        // 0x8A0(0x10)(BlueprintReadOnly, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FString                                PlayersExclusiveCheckFilename;                     // 0x8B0(0x10)(Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UShooterCheatManager*                  GlobalCommandsCheatManager;                        // 0x8C0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_177A[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class FString                                CheckGlobalEnablesURL;                             // 0x8D8(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UDatabase_LoginData*                   Database_LoginDataRef;                             // 0x8E8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UDatabase_PubSub_GeneralNotifications* PubSub_GeneralNotificationsRef;                    // 0x8F0(0x8)(ConstParm, ExportObject, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_177E[0x88];                                    // Fixing Size After Last Property  > TateDumper <
	TMap<int32, uint64>                          PlayersIds;                                        // 0x980(0x50)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TMap<uint64, int32>                          SteamIds;                                          // 0x9D0(0x50)(BlueprintReadOnly, Net, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1780[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bGlobalDisableLoginLockCheck;                      // 0xA70(0x1)(Edit, Net, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTempDisableLoginLockCheck;                        // 0xA71(0x1)(Edit, ConstParm, BlueprintReadOnly, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1782[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                MyServerId;                                        // 0xA78(0x10)(Edit, BlueprintVisible, ExportObject, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1784[0x70];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FTribeData>                    TribesData;                                        // 0xAF8(0x10)(Edit, ConstParm, BlueprintVisible, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<class APrimalDinoCharacter*>          ActivelyTamingDinos;                               // 0xB08(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAutoCreateNewPlayerData;                          // 0xB18(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1785[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DifficultyValue;                                   // 0xB20(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        DifficultyValueMin;                                // 0xB24(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        DifficultyValueMax;                                // 0xB28(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        ProximityRadius;                                   // 0xB2C(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        ProximityRadiusUnconsiousScale;                    // 0xB30(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1786[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                CheatClass;                                        // 0xB38(0x8)(Edit, ConstParm, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsOfficialServer;                                 // 0xB40(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsCurrentlySavingWorld;                           // 0xB41(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1788[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsConsoleUnOfficialPCServer;                      // 0xB43(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bServerAllowArkDownload;                           // 0xB44(0x1)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_178A[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bAlwaysNotifyPlayerLeft;                           // 0xB47(0x1)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAlwaysNotifyPlayerJoined;                         // 0xB48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bServerHardcore;                                   // 0xB49(0x1)(ConstParm, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_178B[0x33];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bEnableCryoSicknessPVE;                            // 0xB7D(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_178D[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CryopodNerfDamageMult;                             // 0xB80(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        CryopodNerfDuration;                               // 0xB84(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableMeshBitingProtection;                       // 0xB88(0x1)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1791[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CryopodNerfIncomingDamageMultPercent;              // 0xB8C(0x4)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1792[0x48];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        ResourcesRespawnPeriodMultiplier;                  // 0xBD8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        KickIdlePlayersPeriod;                             // 0xBDC(0x4)(Edit, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        MateBoostEffectMultiplier;                         // 0xBE0(0x4)(ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        AutoSavePeriodMinutes;                             // 0xBE4(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        XPMultiplier;                                      // 0xBE8(0x4)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	class FName                                  ActiveEvent;                                       // 0xBEC(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        TribeNameChangeCooldown;                           // 0xBF4(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        PlatformSaddleBuildAreaBoundsMultiplier;           // 0xBF8(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bAlwaysAllowStructurePickup;                       // 0xBFC(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1799[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        StructurePickupTimeAfterPlacement;                 // 0xC00(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        StructurePickupHoldDuration;                       // 0xC04(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bAllowHideDamageSourceFromLogs;                    // 0xC08(0x1)(ConstParm, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_179B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        KillXPMultiplier;                                  // 0xC0C(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        HarvestXPMultiplier;                               // 0xC10(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        CraftXPMultiplier;                                 // 0xC14(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        GenericXPMultiplier;                               // 0xC18(0x4)(ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        SpecialXPMultiplier;                               // 0xC1C(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        AlphaKillXPMultiplier;                             // 0xC20(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        CaveKillXPMultiplier;                              // 0xC24(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        WildKillXPMultiplier;                              // 0xC28(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        BossKillXPMultiplier;                              // 0xC2C(0x4)(BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        TamedKillXPMultiplier;                             // 0xC30(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        UnclaimedKillXPMultiplier;                         // 0xC34(0x4)(Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        ExplorerNoteXPMultiplier;                          // 0xC38(0x4)(Edit, ConstParm, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_17A5[0x84];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UPrimalPlayerData*>             PlayerDatas;                                       // 0xCC0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17A6[0xE];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bForceRespawnDinos;                                // 0xCDE(0x1)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17A7[0x29];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnCharacterPossessedByPlayer;                      // 0xD08(0x10)(ConstParm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnCharacterUnpossessedByPlayer;                    // 0xD18(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnShooterCharacterSpawned;                         // 0xD28(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnShooterCharacterDied;                            // 0xD38(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnMissionTriggerBeginOverlap;                      // 0xD48(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig)
	FMulticastInlineDelegateProperty_            OnMissionTriggerEndOverlap;                        // 0xD58(0x10)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig)
	float                                        TamedDinoDamageMultiplier;                         // 0xD68(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoDamageMultiplier;                              // 0xD6C(0x4)(Edit, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        PlayerDamageMultiplier;                            // 0xD70(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        StructureDamageMultiplier;                         // 0xD74(0x4)(BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        PlayerResistanceMultiplier;                        // 0xD78(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        DinoResistanceMultiplier;                          // 0xD7C(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        TamedDinoResistanceMultiplier;                     // 0xD80(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        StructureResistanceMultiplier;                     // 0xD84(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bJoinInProgressGamesAsSpectator;                   // 0xD88(0x1)(Edit, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17B0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TamingSpeedMultiplier;                             // 0xD8C(0x4)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        HarvestAmountMultiplier;                           // 0xD90(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        HarvestHealthMultiplier;                           // 0xD94(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        PlayerCharacterWaterDrainMultiplier;               // 0xD98(0x4)(Edit, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        PlayerCharacterFoodDrainMultiplier;                // 0xD9C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        DinoCharacterFoodDrainMultiplier;                  // 0xDA0(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        RaidDinoCharacterFoodDrainMultiplier;              // 0xDA4(0x4)(ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        PlayerCharacterStaminaDrainMultiplier;             // 0xDA8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        DinoCharacterStaminaDrainMultiplier;               // 0xDAC(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        PlayerCharacterHealthRecoveryMultiplier;           // 0xDB0(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        DinoCharacterHealthRecoveryMultiplier;             // 0xDB4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        CarnivoreNaturalTargetingRangeMultiplier;          // 0xDB8(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        CarnivorePlayerAggroMultiplier;                    // 0xDBC(0x4)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        HerbivoreNaturalTargetingRangeMultiplier;          // 0xDC0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        HerbivorePlayerAggroMultiplier;                    // 0xDC4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         AIForceTargetPlayers;                              // 0xDC8(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         AIForceOverlapCheck;                               // 0xDC9(0x1)(Edit, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17B5[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bDisableSaveLoad;                                  // 0xDD0(0x1)(EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableXP;                                        // 0xDD1(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableDynamicMusic;                              // 0xDD2(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17B6[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FLevelExperienceRamp>          LevelExperienceRampOverrides;                      // 0xDD8(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                OverridePlayerLevelEngramPoints;                   // 0xDE8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                ExcludeItemIndices;                                // 0xDF8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FEngramEntryOverride>          OverrideEngramEntries;                             // 0xE08(0x10)(Edit, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FEngramEntryOverride>          OverrideNamedEngramEntries;                        // 0xE18(0x10)(ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FEngramEntryAutoUnlock>        EngramEntryAutoUnlocks;                            // 0xE28(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        PreventDinoTameClassNames;                         // 0xE38(0x10)(ExportObject, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassMultiplier>              DinoClassStaminaMultipliers;                       // 0xE48(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassMultiplier>              TamedDinoClassStaminaMultipliers;                  // 0xE58(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassMultiplier>              DinoClassSpeedMultipliers;                         // 0xE68(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassMultiplier>              TamedDinoClassSpeedMultipliers;                    // 0xE78(0x10)(BlueprintVisible, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDinoSpawnWeightMultiplier>    DinoSpawnWeightMultipliers;                        // 0xE88(0x10)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassMultiplier>              DinoClassResistanceMultipliers;                    // 0xE98(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassMultiplier>              TamedDinoClassResistanceMultipliers;               // 0xEA8(0x10)(Edit, ExportObject, Net, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassMultiplier>              DinoClassDamageMultipliers;                        // 0xEB8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassMultiplier>              TamedDinoClassDamageMultipliers;                   // 0xEC8(0x10)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassMultiplier>              HarvestResourceItemAmountClassMultipliers;         // 0xED8(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassNameReplacement>         NPCReplacements;                                   // 0xEE8(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        PvPZoneStructureDamageMultiplier;                  // 0xEF8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bOnlyAllowSpecifiedEngrams;                        // 0xEFC(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17BE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        OverrideMaxExperiencePointsPlayer;                 // 0xF00(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	int32                                        OverrideMaxExperiencePointsDino;                   // 0xF04(0x4)(BlueprintVisible, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        GlobalSpoilingTimeMultiplier;                      // 0xF08(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        GlobalItemDecompositionTimeMultiplier;             // 0xF0C(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        GlobalCorpseDecompositionTimeMultiplier;           // 0xF10(0x4)(ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        MaxFallSpeedMultiplier;                            // 0xF14(0x4)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAutoPvETimer;                                     // 0xF18(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bAutoPvEUseSystemTime;                             // 0xF19(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_17C3[0xA];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AutoPvEStartTimeSeconds;                           // 0xF24(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        AutoPvEStopTimeSeconds;                            // 0xF28(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_17C5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AHibernationManager*                   HibernationManager;                                // 0xF30(0x8)(Edit, BlueprintReadOnly, ReturnParm, Transient, GlobalConfig)
	int32                                        TributeItemExpirationSeconds;                      // 0xF38(0x4)(ConstParm, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        TributeDinoExpirationSeconds;                      // 0xF3C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        TributeCharacterExpirationSeconds;                 // 0xF40(0x4)(Edit, Net, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17C7[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxTributeItems;                                   // 0xF4C(0x4)(ExportObject, BlueprintReadOnly, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxTributeDinos;                                   // 0xF50(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxTributeCharacters;                              // 0xF54(0x4)(BlueprintVisible, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIncreasePvPRespawnInterval;                       // 0xF58(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_17CA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        IncreasePvPRespawnIntervalCheckPeriod;             // 0xF5C(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        IncreasePvPRespawnIntervalMultiplier;              // 0xF60(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        IncreasePvPRespawnIntervalBaseAmount;              // 0xF64(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        ResourceNoReplenishRadiusStructures;               // 0xF68(0x4)(Edit, ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        ResourceNoReplenishRadiusPlayers;                  // 0xF6C(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        CropGrowthSpeedMultiplier;                         // 0xF70(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        LayEggIntervalMultiplier;                          // 0xF74(0x4)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        PoopIntervalMultiplier;                            // 0xF78(0x4)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        CropDecaySpeedMultiplier;                          // 0xF7C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bAllowChatFromDeadNonAdmins;                       // 0xF80(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowDisablingSpectator;                          // 0xF81(0x1)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPvEDisableFriendlyFire;                           // 0xF82(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFlyerPlatformAllowUnalignedDinoBasing;            // 0xF83(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bAllowUnclaimDinos;                                // 0xF84(0x1)(ExportObject, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17CF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxPerTribePlatformSaddleStructureLimit;           // 0xF88(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxPlatformSaddleStructureLimit;                   // 0xF8C(0x4)(ConstParm, EditFixedSize, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxDinoBaseLevel;                                  // 0xF90(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxNumberOfPlayersInTribe;                         // 0xF94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        TribeSlotReuseCooldown;                            // 0xF98(0x4)(ExportObject, Net, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	float                                        MatingIntervalMultiplier;                          // 0xF9C(0x4)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        EggHatchSpeedMultiplier;                           // 0xFA0(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        BabyMatureSpeedMultiplier;                         // 0xFA4(0x4)(Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        BabyFoodConsumptionSpeedMultiplier;                // 0xFA8(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_17D7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PerLevelStatsMultiplier_Player[0xC];               // 0xFB0(0x30)(Edit, ExportObject, Net, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsMultiplier_DinoTamed[0xC];            // 0xFE0(0x30)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsMultiplier_DinoTamed_Add[0xC];        // 0x1010(0x30)(Edit, ConstParm, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsMultiplier_DinoTamed_Affinity[0xC];   // 0x1040(0x30)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsMultiplier_DinoWild[0xC];             // 0x1070(0x30)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        MutagenLevelBoost[0xC];                            // 0x10A0(0x30)(ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        MutagenLevelBoost_Bred[0xC];                       // 0x10D0(0x30)(ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        ItemStatClamps[0x8];                               // 0x1100(0x20)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxGateFrameOnSaddles;                             // 0x1120(0x4)(ConstParm, BlueprintReadOnly, Net, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxHexagonsPerCharacter;                           // 0x1124(0x4)(Edit, BlueprintVisible, Net, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCustomGameModeAllowSpectatorJoinAfterMatchStart;  // 0x1128(0x1)(BlueprintVisible, ExportObject, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17E1[0x1107];                                  // Fixing Size After Last Property  > TateDumper <
	bool                                         bGameplayLogEnabled;                               // 0x2230(0x1)(Edit, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bServerGameLogEnabled;                             // 0x2231(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17E4[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                BonusSupplyCrateItemClass;                         // 0x2238(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	float                                        BonusSupplyCrateItemGiveInterval;                  // 0x2240(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	float                                        StructureDamageRepairCooldown;                     // 0x2244(0x4)(ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        CustomRecipeEffectivenessMultiplier;               // 0x2248(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        CustomRecipeSkillMultiplier;                       // 0x224C(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	class FString                                BonusSupplyCrateItemString;                        // 0x2250(0x10)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         MaxDifficulty;                                     // 0x2260(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bPvEAllowTribeWar;                                 // 0x2261(0x1)(Edit, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bPvEAllowTribeWarCancel;                           // 0x2262(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bAllowCustomRecipes;                               // 0x2263(0x1)(Edit, ConstParm, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bPassiveDefensesDamageRiderlessDinos;              // 0x2264(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_17EA[0xB];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bEnableDeathTeamSpectator;                         // 0x2270(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTribeStoreCharacterConfiguration;                 // 0x2271(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17EC[0xF6];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxTribeLogs;                                      // 0x2368(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17ED[0x1C];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bDisableFriendlyFire;                              // 0x2388(0x1)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bAllowInactiveTribes;                              // 0x2389(0x1)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceMapPlayerLocation;                           // 0x238A(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17EF[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DinoHarvestingDamageMultiplier;                    // 0x238C(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        PlayerHarvestingDamageMultiplier;                  // 0x2390(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        DinoTurretDamageMultiplier;                        // 0x2394(0x4)(Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bDisableLootCrates;                                // 0x2398(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_17F2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ExtinctionEventTimeInterval;                       // 0x239C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17F3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       NextExtinctionEventUTC;                            // 0x23A4(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17F5[0x1C];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bUseCharacterTracker;                              // 0x23C4(0x1)(Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowFloatingDamageText;                           // 0x23C5(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17F8[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        SavedGameModeVersion;                              // 0x23C8(0x4)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17F9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bAllowTekSuitPowersInGenesis;                      // 0x23D0(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17FA[0x47];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FItemCraftingCostOverride>     OverrideItemCraftingCosts;                         // 0x2418(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FConfigItemCraftingCostOverride> ConfigOverrideItemCraftingCosts;                   // 0x2428(0x10)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FConfigMaxItemQuantityOverride> ConfigOverrideItemMaxQuantity;                     // 0x2438(0x10)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17FC[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FConfigSupplyCrateItemsOverride> ConfigOverrideSupplyCrateItems;                    // 0x2498(0x10)(ExportObject, Net, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FConfigNPCSpawnEntriesContainer> ConfigOverrideNPCSpawnEntriesContainer;            // 0x24A8(0x10)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FConfigNPCSpawnEntriesContainer> ConfigAddNPCSpawnEntriesContainer;                 // 0x24B8(0x10)(ConstParm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FConfigNPCSpawnEntriesContainer> ConfigSubtractNPCSpawnEntriesContainer;            // 0x24C8(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyImprintingStatScaleMultiplier;                 // 0x24D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        BabyCuddleIntervalMultiplier;                      // 0x24DC(0x4)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        BabyImprintAmountMultiplier;                       // 0x24E0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyCuddleGracePeriodMultiplier;                   // 0x24E4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        BabyCuddleLoseImprintQualitySpeedMultiplier;       // 0x24E8(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        HairGrowthSpeedMultiplier;                         // 0x24EC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoHairGrowthSpeedMultiplier;                     // 0x24F0(0x4)(ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventDiseases;                                  // 0x24F4(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNonPermanentDiseases;                             // 0x24F5(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1805[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class UAllClustersInventory*                 AllClustersInventory;                              // 0x24F8(0x8)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, GlobalConfig)
	int32                                        SaveForceRespawnDinosVersion;                      // 0x2500(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1807[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint64                                       ServerID;                                          // 0x2508(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1808[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                SupportedSpawnRegions;                             // 0x2568(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bServerUseDinoList;                                // 0x2578(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1809[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxAllowedRespawnInterval;                         // 0x257C(0x4)(ExportObject, Net, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseDinoLevelUpAnimations;                         // 0x2580(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableDinoTaming;                                // 0x2581(0x1)(ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bDisableDinoRiding;                                // 0x2582(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_180E[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        SaveGameCustomVersion;                             // 0x2588(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_180F[0x894];                                   // Fixing Size After Last Property  > TateDumper <
	bool                                         bFailedWaterDinoSpawnLogEnabled;                   // 0x2E20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1810[0x88F];                                   // Fixing Size After Last Property  > TateDumper <
	float                                        PlayerBaseStatMultipliers[0xC];                    // 0x36B0(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	int32                                        NPCActiveCountTamed;                               // 0x36E0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        NPCActiveCount;                                    // 0x36E4(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	int32                                        NPCCount;                                          // 0x36E8(0x4)(ConstParm, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	float                                        RTSModeNumSelectableDinosScale;                    // 0x36EC(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	float                                        RTSMaxRangeFromPlayerCharacterScale;               // 0x36F0(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	float                                        RTSProximityToEnemyStructureScale;                 // 0x36F4(0x4)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	float                                        MatingSpeedMultiplier;                             // 0x36F8(0x4)(BlueprintVisible, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	float                                        FastDecayInterval;                                 // 0x36FC(0x4)(OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseSingleplayerSettings;                          // 0x3700(0x1)(Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bDisableGenesisMissions;                           // 0x3701(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableStructurePlacementCollision;               // 0x3702(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bForceUseInventoryAppends;                         // 0x3703(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCrafting;                          // 0x3704(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCraftingForDinos;                  // 0x3705(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCraftingForPlayers;                // 0x3706(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCraftingForStructures;             // 0x3707(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WirelessCraftingRangeOverride;                     // 0x3708(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SupplyCrateLootQualityMultiplier;                  // 0x370C(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        FishingLootQualityMultiplier;                      // 0x3710(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        ItemStackSizeMultiplier;                           // 0x3714(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        CraftingSkillBonusMultiplier;                      // 0x3718(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bAllowPlatformSaddleMultiFloors;                   // 0x371C(0x1)(Edit, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bAllowUnlimitedRespecs;                            // 0x371D(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_181A[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FuelConsumptionIntervalMultiplier;                 // 0x3720(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	int32                                        DestroyTamesOverLevelClamp;                        // 0x3724(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxAlliancesPerTribe;                              // 0x3728(0x4)(ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxTribesPerAlliance;                              // 0x372C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableDinoDecayClaiming;                         // 0x3730(0x1)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableNonTribePinAccess;                         // 0x3731(0x1)(Edit, ExportObject, Net, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseTameLimitForStructuresOnly;                    // 0x3732(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bLimitTurretsInRange;                              // 0x3733(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LimitTurretsRange;                                 // 0x3734(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        LimitTurretsNum;                                   // 0x3738(0x4)(ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHardLimitTurretsInRange;                          // 0x373C(0x1)(Edit, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_181F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        LimitGeneratorsNum;                                // 0x3740(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LimitGeneratorsRange;                              // 0x3744(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        CropPlotStackLimit;                                // 0x3748(0x4)(Edit, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisablePhotoMode;                                 // 0x374C(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bDisableTekLegsBoost;                              // 0x374D(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseOnLoadClampItemQualityRating;                  // 0x374E(0x1)(ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableCryopodEnemyCheck;                         // 0x374F(0x1)(ConstParm, ExportObject, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowCryoFridgeOnSaddle;                          // 0x3750(0x1)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableCryopodFridgeRequirement;                  // 0x3751(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1822[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OnLoadItemQualityRatingClamp;                      // 0x3754(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        PhotoModeRangeLimit;                               // 0x3758(0x4)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bAutoUnlockAllEngrams;                             // 0x375C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1823[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ServerLastForceRespawnWildDinosTime;               // 0x3760(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	class FString                                UseStructurePreventionVolumeTagString;             // 0x3768(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseTemperatureMultiplier;                         // 0x3778(0x4)(Edit, ExportObject, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceAllowAllStructures;                          // 0x377C(0x1)(Edit, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceAllowAscensionItemDownloads;                 // 0x377D(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowCreativeMode;                                 // 0x377E(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_1825[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LimitNonPlayerDroppedItemsRange;                   // 0x3780(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        LimitNonPlayerDroppedItemsCount;                   // 0x3784(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalPoweredBatteryDurabilityDecreasePerSecond;   // 0x3788(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        SingleplayerSettingsCorpseLifespanMultiplier;      // 0x378C(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        UseCorpseLifeSpanMultiplier;                       // 0x3790(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        TimePeriodToHideDisconnectedPlayers;               // 0x3794(0x4)(Edit, ConstParm, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPPreSpawnedDino;                              // 0x3798(0x1)(ExportObject, BlueprintReadOnly, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1829[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PreventOfflinePvPConnectionInvincibleInterval;     // 0x379C(0x4)(OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedDinoCharacterFoodDrainMultiplier;             // 0x37A0(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        WildDinoCharacterFoodDrainMultiplier;              // 0x37A4(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        WildDinoTorporDrainMultiplier;                     // 0x37A8(0x4)(Edit, ExportObject, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        PassiveTameIntervalMultiplier;                     // 0x37AC(0x4)(Edit, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedDinoTorporDrainMultiplier;                    // 0x37B0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableWeatherFog;                                // 0x37B4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_182C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MeshCheckingRayDistance;                           // 0x37B8(0x4)(ConstParm, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        MeshCheckingSubdivisons;                           // 0x37BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        MeshCheckingPercentageToFail;                      // 0x37C0(0x4)(ConstParm, BlueprintVisible, Parm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreStructuresPreventionVolumes;                // 0x37C4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bGenesisUseStructuresPreventionVolumes;            // 0x37C5(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_182F[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                LiveTuningFileName;                                // 0x37C8(0x10)(ExportObject, Net, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1830[0x31];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bLogChatMessages;                                  // 0x3809(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1831[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ChatLogFlushIntervalSeconds;                       // 0x380C(0x4)(BlueprintReadOnly, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	int32                                        ChatLogFileSplitIntervalSeconds;                   // 0x3810(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditConst, InstancedReference, SubobjectReference)
	int32                                        ChatLogMaxAgeInDays;                               // 0x3814(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1833[0x60];                                    // Fixing Size After Last Property  > TateDumper <
	struct FLeaderboardsContainer                LeaderboardContainer;                              // 0x3878(0x10)(Edit, ExportObject, Net, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1836[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bHasCovertedToStore;                               // 0x38E0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowStoredDatas;                                 // 0x38E1(0x1)(BlueprintVisible, BlueprintReadOnly, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1837[0x17E];                                   // Fixing Size After Last Property  > TateDumper <
	TArray<struct FBuffAddition>                 AdditionalDefaultBuffs;                            // 0x3A60(0x10)(ExportObject, EditConst, InstancedReference, SubobjectReference)
	bool                                         bParseServerToJson;                                // 0x3A70(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_183A[0x7F];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnPreSpawnedDino;                                  // 0x3AF0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnKilled;                                          // 0x3B00(0x10)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnPostLogin;                                       // 0x3B10(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnStartNewPlayer;                                  // 0x3B20(0x10)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnAddNewTribe;                                     // 0x3B30(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnRemoveTribe;                                     // 0x3B40(0x10)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate)
	FMulticastInlineDelegateProperty_            OnRemovePlayerFromTribe;                           // 0x3B50(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnServerChatMessage;                               // 0x3B60(0x10)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnServerDirectMessage;                             // 0x3B70(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnServerNotification;                              // 0x3B80(0x10)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnNotifyDamage;                                    // 0x3B90(0x10)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnSerializeForSaveFile;                            // 0x3BA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1845[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        BaseHexagonRewardMultiplier;                       // 0x3BD0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HexagonRewardMultiplier;                           // 0x3BD4(0x4)(ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HexagonCostMultiplier;                             // 0x3BD8(0x4)(ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableHexagonStore;                              // 0x3BDC(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHexStoreAllowOnlyEngramTradeOption;               // 0x3BDD(0x1)(ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1846[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FClassNameReplacement>         DynamicNPCReplacements;                            // 0x3BE0(0x10)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassNameReplacement>         CollectiveNPCReplacements;                         // 0x3BF0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        PreventTransferForClassNames;                      // 0x3C00(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowSpeedLeveling;                               // 0x3C10(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bAllowFlyerSpeedLeveling;                          // 0x3C11(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bEnableWorldBuffScaling;                           // 0x3C12(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableWorldBuffs;                                // 0x3C13(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnablePlayerMoveThroughSleeping;                  // 0x3C14(0x1)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnablePlayerMoveThroughAlly;                      // 0x3C15(0x1)(ConstParm, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAutoCreateTribes;                                 // 0x3C16(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRiderDinoCollision;                               // 0x3C17(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFreezeTribes;                                     // 0x3C18(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1851[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        WorldBuffScalingEfficacy;                          // 0x3C1C(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseOverrideTimeToRecoverValuesOnPlayerStatusComp; // 0x3C20(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1852[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OverrideTimeToRecoverAfterDepletionStatusValue[0xC]; // 0x3C24(0x30)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideTimeToRecoverAfterDecreaseStatusValue[0xC]; // 0x3C54(0x30)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseOverrideTimeToRecoverValuesOnDinoStatusComp;   // 0x3C84(0x1)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1858[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OverrideDinoTimeToRecoverAfterDepletionStatusValue[0xC]; // 0x3C88(0x30)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideDinoTimeToRecoverAfterDecreaseStatusValue[0xC]; // 0x3CB8(0x30)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseDisabledStatusStates;                          // 0x3CE8(0x1)(Edit, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        DisabledStatusStates[0xE];                         // 0x3CE9(0xE)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_185A[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FCrateTemporaryQualityModifierSet> TemporaryCrateModifiers;                           // 0x3CF8(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FResourceTemporaryAmountModifierSet> TemporaryResourceModifiers;                        // 0x3D08(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        AdjustableMutagenSpawnDelayMultiplier;             // 0x3D18(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableDefaultMapItemSets;                        // 0x3D1C(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         DisableRailgunPVP;                                 // 0x3D1D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_185F[0xA];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          DynamicDisabledWorldBuffs;                         // 0x3D28(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1860[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        RedisTimeoutInMinutes;                             // 0x3D48(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         RestartedDueToRedisTimeout;                        // 0x3D4C(0x1)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1862[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ImprintLimit;                                      // 0x3D50(0x4)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxStructuresToAllowForPickupOverride;             // 0x3D54(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableCustomFoldersInTributeInventories;         // 0x3D58(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableRailgunPVP;                                // 0x3D59(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1867[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinimumTimebetweeninventoryRetrieval;              // 0x3D5C(0x4)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WildFollowerSpawnChanceMultiplier;                 // 0x3D60(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WildFollowerSpawnCountMultiplier;                  // 0x3D64(0x4)(Edit, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableDinoItemBlacklist;                         // 0x3D68(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventHibernationManager;                        // 0x3D69(0x1)(ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSaveFormerTribeOwnerLog;                          // 0x3D6A(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_186B[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DinoArmorDurabilityScale;                          // 0x3D6C(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_186D[0xB0];                                    // Fixing Size After Last Property  > TateDumper <
	class UAntiDupeTransactionLog*               AntiDupeTransactionLog;                            // 0x3E20(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig)
	uint8                                        Pad_186E[0xAC];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bFilterCharacterNames;                             // 0x3ED4(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFilterTribeNames;                                 // 0x3ED5(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFilterChat;                                       // 0x3ED6(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1872[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CurrentChatFilterVersion;                          // 0x3ED8(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        RequestedChatFilterVersion;                        // 0x3EDC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FString                                BadWordListURL;                                    // 0x3EE0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FString                                BadWordWhiteListURL;                               // 0x3EF0(0x10)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FAhoCorasickMatcher                   BadWordMatcher;                                    // 0x3F00(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FAhoCorasickMatcher                   BadWordWhitelistMatcher;                           // 0x3F18(0x18)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableServerDestroyTamesAboveSoftTameLimit;       // 0x3F30(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCheckSoftTameLimitOnTick;                         // 0x3F31(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_187A[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxTamedDinos_SoftTameLimit;                       // 0x3F34(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	int32                                        MaxTamedDinos_SoftTameLimit_CountdownForDeletionDuration; // 0x3F38(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	uint8                                        Pad_187B[0x54];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bDestroyCharacterOnLogoutInLobby : 1;              // Mask: 0x1, PropSize: 0x10x3F90(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventJoiningDuringMatch : 1;                    // Mask: 0x2, PropSize: 0x10x3F90(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1880[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterGameMode* GetDefaultObj();

	struct FTribeData UpdateTribeData();
	class FString TryGetIntOptionIni(int32 Value, bool* ReturnValue);
	class FString TryGetIntOption(class FString* Options, int32 Value, bool* ReturnValue);
	class FString TryGetBoolOptionIni(bool Value, bool* ReturnValue);
	class FString TryGetBoolOption(class FString* Options, bool Value, bool* ReturnValue);
	int32 TriggerLevelCustomEvents(bool* ReturnValue);
	void TimeSinceMissionDeactivated(class UClass* MissionType, float* ReturnValue);
	void StartIntervalUpdatingCachedTeamTameLists(class AShooterPlayerController** RequestingPlayer);
	void SortCurrentlyEvaluatedTameIntoAppropriateCachedTeamTameListForThisCurrentBatch();
	void ShiftAwaitingNEXTBatchOfTeamsToUpdateCachedTeamTameListsToCurrentBatch();
	class FString SetTimeOfDay();
	double SetLastMissionDeactivatedUtcTime(class UClass* MissionType);
	void SetCreatedCachedTeamTameListsOnTribeDataOrPlayerData();
	bool SendServerNotification(const class FString& MessageText, int32 ReceiverTeamId, int32 ReceiverPlayerID);
	class FString SendServerDirectMessage(const class FString& PlayerSteamIDconst, const class FString& MessageText, int32 ReceiverTeamId, int32 ReceiverPlayerID, class FString* PlayerName);
	class FString SendServerChatMessage(const class FString& MessageText, int32 ReceiverTeamId, int32 ReceiverPlayerID);
	void SendChatMessageToTeam(int32* Team, const struct FPrimalChatMessage& Message);
	class AShooterPlayerController* SendChatMessageToPlayer(const struct FPrimalChatMessage& Message);
	void SendChatMessage(const struct FPrimalChatMessage& Message);
	int32 SaveSimpleLogFileOfFormerTribeOwnerIDsAndTheirTimestamps(bool* ReturnValue);
	void RestartServer();
	void RequestUpdateCachedTeamTameList(class AShooterPlayerController** RequestingPlayer);
	void RequestPlayerRecieveKnownCachedTeamTameList(class AShooterPlayerController** RequestingPlayer);
	class AShooterPlayerState* RemovePlayerData();
	void RemoveInactivePlayersAndTribes();
	void ReassertColorization();
	void QueueUpTeamForItsCachedTeamTameListToBeUpdated(class AShooterPlayerController** RequestingPlayer);
	bool PrintToServerGameLog(const class FString& InString);
	void PrintToGameplayLog(const class FString& InString);
	class FString PostAlarmNotificationTribe(const class FString& Message);
	class FString PostAlarmNotificationPlayerID(const class FString& Message);
	class FString PostAlarmNotification(class FString* SteamID, const class FString& Message);
	class AController* OnLogout();
	void OnLandscapeLevelUnloaded();
	void OnLandscapeLevelLoaded();
	void OnFinishedUpdatingCurrentBatchOfCachedTeamTameLists();
	void MovePlayersAwaitingUpdatedCachedTeamTameListToArrayOfPlayersToGetNotifiedAndRecieveUpdatedList();
	void MaxTamedDinos_SoftTameLimit_MarkAllTamesForSoftTameLimit();
	bool LoadTribeData(bool* ReturnValue);
	void LoadedWorld();
	void ListAllPlayers(const class FString& Message);
	void KickPlayerController(class APlayerController** ThePC, const class FString& KickMessage);
	void KickAllPlayersAndReload();
	bool IsTimeSinceMissionDeactivated(class UClass* MissionType, float CheckTimeSince, bool* ReturnValue);
	int32 IsTeamIncludedInNextBatchToProcessTameList(int32* Team, bool* ReturnValue);
	int32 IsTeamCurrentlyUpdatingItsCachedTeamTameList(int32* Team, bool* ReturnValue);
	int32 IsPlayerInNextTeamBatchPlayersAwaitingUpdatedCachedTeamTameList(class AShooterPlayerController** RequestingPlayer, bool* ReturnValue);
	class AShooterPlayerController* IsPlayerControllerAllowedToJoinNoCheck(bool* ReturnValue);
	class AShooterPlayerController* IsPlayerControllerAllowedToExclusiveJoin(bool* ReturnValue);
	int32 IsPlayerAwaitingToRecieveCachedTeamTameListASAP(class AShooterPlayerController** RequestingPlayer, bool* ReturnValue);
	int32 IsPlayerAwaitingNotificationOnceTheirCachedTeamTameListFinishesUpdating(class AShooterPlayerController** RequestingPlayer, bool* ReturnValue);
	int32 IsPlayerArrayOfInAllPlayersAwaitingUpdatedCachedTeamTameLists(class AShooterPlayerController** RequestingPlayer, bool* ReturnValue);
	class AShooterPlayerController* IsPlayerAllowedToCheat(bool* ReturnValue);
	void IsCachedTeamTameListOutOfDate(class AShooterPlayerController** RequestingPlayer, bool* ReturnValue);
	class FString InitOptionString();
	int32 InitOptionInteger();
	float InitOptionFloat();
	bool InitOptionBool();
	void InitGameStateDataSets();
	void IncrementNumDeaths(class FString* PlayerDataID);
	void HitchDetected(struct FSoftObjectPath* ForAsset, float* HitchTime);
	class AShooterCharacter* HandleNewPlayer(class UPrimalPlayerData* PlayerData, bool* bIsFromLogin, bool* ReturnValue);
	int32 GetTribeDataBlueprint(struct FTribeData* ReturnValue);
	class FString GetStringOption(class FString* ReturnValue);
	void GetSessionTimeString(class FString* ReturnValue);
	float GetServerSettingsFloat(bool* ReturnValue);
	bool GetServerName(class FString* ReturnValue);
	void GetPlayerData(class FString* PlayerDataID, class UPrimalPlayerData** ReturnValue);
	class UClass* GetOverlappingDinoCharactersOfTeamAndClass(struct FVector* AtLocation, float* OverlapRange, int32* DinoTeam, bool* bExactClassMatch, bool* bIgnoreClass, TArray<class APrimalDinoCharacter*>* ReturnValue);
	bool GetOrLoadTribeData_ReturnAbandonedResult(bool* ReturnValue);
	struct FTribeData GetOrLoadTribeData(bool* ReturnValue);
	void GetNumDeaths(class FString* PlayerDataID, int32* ReturnValue);
	void GetNumberOfLivePlayersOnTribe(class FString* TribeName, int32* ReturnValue);
	float GetLaunchOptionFloat(bool* ReturnValue);
	void GetLastMissionDeactivatedUtcTime(class UClass* MissionType, double* ReturnValue);
	class FString GetIntOptionIni(int32* ReturnValue);
	class FString GetFloatOptionIni(float* ReturnValue);
	bool GetBoolOptionIni(bool* ReturnValue);
	bool ForceRepopulateFoliageAtPoint();
	float ForceRepopulateAllHarvestElements();
	int32 ForceCreateTribe(class FString* TribeName, int32* ReturnValue);
	void ForceAddPlayerToTribe(class AShooterPlayerState** ForPlayerState, class FString* TribeName, int32* ReturnValue);
	class FString FilterBadWords(bool* bCheckWithoutSpecialChars, bool* ReturnValue);
	void DoMaintenanceRestartWarning();
	void DoMaintenanceRestart();
	class UClass* CountOverlappingDinoCharactersOfTeamAndClass(struct FVector* AtLocation, float* OverlapRange, int32* DinoTeam, bool* bExactClassMatch, bool* bIgnoreClass, int32* ReturnValue);
	void ClearLastMissionDeactivatedTime(class UClass* MissionType);
	class APlayerController* CheckJoinInProgress(bool* bIsFromLogin, bool* ReturnValue);
	void ChatLogAppend(class AShooterPlayerController** SenderController, const struct FPrimalChatMessage& Message);
	void BPPreSpawnedDino(class APrimalDinoCharacter** TheDino);
	class AController* BPIsSpawnpointPreferred(class APlayerStart** SpawnPoint, bool* ReturnValue);
	class AController* BPIsSpawnpointAllowed(class APlayerStart** SpawnPoint, bool* ReturnValue);
	void AreTribesAllied(int32* TribeID1, int32* TribeID2, bool* ReturnValue);
	void AllowTaming(int32* ForTeam, bool* ReturnValue);
	void AllowDamage(class UWorld* ForWorld, int32* TargetingTeam1, int32* TargetingTeam2, bool* bIgnoreDamageIfAllied, bool* ReturnValue);
	void AdminExit(class FString* Verify);
	int32 AddToTribeLog(class FString* NewLog);
	void AddPlayerToNextTeamBatchPlayersAwaitingUpdatedCachedTeamTameList(class AShooterPlayerController** RequestingPlayer, bool* ReturnValue);
	void AddPlayerToBeNotifiedWhenCachedTeamTameListIsUpdated(class AShooterPlayerController** RequestingPlayer);
};

// 0x0 (0x3FA0 - 0x3FA0)
// Class ShooterGame.CustomGameMode
class ACustomGameMode : public AShooterGameMode
{
public:

	static class UClass* StaticClass();
	static class ACustomGameMode* GetDefaultObj();

	class FString SaveIntToConfig();
	class FString SaveFloatToConfig();
	class FString SaveBoolToConfig();
	struct FTribeData OnUpdateTribeData(bool* ReturnValue);
	int32 OnRemoveTribe(bool* ReturnValue);
	class APlayerController* OnPlayerCanRestart(bool* ReturnValue);
	class AController* OnIsUsedSpawnPointStillSupported(class APlayerStart** SpawnPoint, bool* ReturnValue);
	class AController* OnIsSpawnpointAllowed(class APlayerStart** SpawnPoint, bool* ReturnValue);
	void OnInitOptionEvent(class FString* Options, bool* ReturnValue);
	void OnInitGameState(bool* ReturnValue);
	void OnInitGame(const class FString& MapName, class FString* Options, const class FString& ErrorMessage, bool* ReturnValue);
	void OnHandleLeavingMap(bool* ReturnValue);
	void OnDoGameCommand(const class FString& TheCommand, class FString* ReturnValue);
	void OnAllowRenameTribe(class AShooterPlayerState** ForPlayerState, class FString* TribeName, bool* ReturnValue);
	void OnAllowNotifyRemotePlayerDeath(class AShooterCharacter* ForChar, bool* ReturnValue);
	float OnAllowModifyStatusValue(class UPrimalCharacterStatusComponent* ForComp, bool* ReturnValue);
	void OnAllowClearTribe(class AShooterPlayerState** ForPlayerState, bool* ReturnValue);
	void OnAllowAddXP(class UPrimalCharacterStatusComponent* ForComp, bool* ReturnValue);
	void OnAllowAddToTribe(class AShooterPlayerState** ForPlayerState, const struct FTribeData& MyNewTribe, bool* ReturnValue);
	class AActor* OnAdjustDamage(float DefaultDamage, const struct FDamageEvent& DamageEvent, float* ReturnValue);
	TArray<struct FPrimalPlayerCharacterConfigStructReplicated> MakeTribeData(class FString* TribeName, struct FTribeData* ReturnValue);
	class FString KickPlayersWithoutCharacter();
	class APlayerController* KickPlayer();
	class APlayerController* IsInAllowedToCheatList(bool* ReturnValue);
	class FString InitOptionFloatToINI(class FString* Options);
	class FString GetValueFromINI(float* ReturnValue);
	class FString GetIntValueFromINI(int32* ReturnValue);
	class FString GetIniFloatValue(float* ReturnValue);
	class FString GetFloatValueFromINI(float* ReturnValue);
	class FString GetBoolValueFromINI(bool* ReturnValue);
	void CleanUpSotfNotificationManager();
	class FString CheckForCommand(bool* ReturnValue);
	TArray<struct FPrimalPlayerCharacterConfigStructReplicated> BreakTribeData(class FString* TribeName);
	int32 BlueprintRemoveTribe();
};

// 0x148 (0xF98 - 0xE50)
// Class ShooterGame.CustomGameState
class ACustomGameState : public AShooterGameState
{
public:
	class UClass*                                TribeFlagClass;                                    // 0xE50(0x8)(ConstParm, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<class APrimalStructureTribeFlag*>     TribesFlags;                                       // 0xE58(0x10)(Edit, ConstParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSOTFScorePlayerData>          PlayerScoreData;                                   // 0xE68(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1BEF[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSOTFScoreTribeData>           TribeScoreData;                                    // 0xEC8(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1BF0[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bReplicateScoreData : 1;                           // Mask: 0x1, PropSize: 0x10xF28(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseGetColorForTargetingTeam : 1;                  // Mask: 0x2, PropSize: 0x10xF28(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableAutoUploadTribeFlag : 1;                    // Mask: 0x4, PropSize: 0x10xF28(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_F0 : 5;                                     // Fixing Bit-Field Size  > TateDumper <
	bool                                         bEnableAllyRadarData;                              // 0xF29(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1BF3[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AllyRadarUpdateFrequency;                          // 0xF2C(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1BF4[0x68];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ACustomGameState* GetDefaultObj();

	void SpawnBuffAndAttachToCharacter(class UClass** Buff, class APrimalCharacter** PrimalCharacter, float* ExperiencePoints, class APrimalBuff** ReturnValue);
	int32 SetTribeTexture(class UPaintingTexture** NewTexture);
	void SetScoreDataForTribe(int32 ForTargetingTeam, struct FSOTFScoreTribeData* NewScoreData, bool* bReplicateToClients);
	void SetScoreDataForPlayer(int32* LinkedID, struct FSOTFScorePlayerData* NewScoreData, bool* bReplicateToClients);
	class FString SetActionReportItem(class FString* PlayerName, class FString* TribeName);
	int32 RemoveTribeFlag();
	struct FVector ProjectWorldToScreenPosition(class APlayerController** ThePC, struct FVector2D* ReturnValue);
	void OnSetHudEvent();
	void OnRep_TribeScoreData();
	void OnRep_PlayerScoreData();
	void OnOverrideDynamicMusic(class APrimalCharacter* ForCharacter, class USoundBase** ReturnValue);
	class AActor* OnNotifyPlayerDied(class AShooterCharacter** TheShooterChar, class AShooterPlayerController** PrevController, class APawn** InstigatingPawn);
	void OnHasGameModeMatchStarted(bool* ReturnValue);
	class AActor* OnHandleActorEvent(class FName* NameParam, struct FVector* VecParam);
	class AActor* OnForceOccludedFloatingHUD(class AShooterPlayerController* ForPC, bool* ReturnValue);
	float OnExtraShooterCharacterTick(class AShooterCharacter* ForChar);
	class AShooterHUD* OnDrawingHUDNotifications(bool* ReturnValue);
	class AShooterHUD* OnDrawHUD(bool* ReturnValue);
	struct FVector OnDrawExtraPlayerFloatingHUD(class AShooterCharacter** TheShooterChar);
	void OnCheckGameStateIfCanRespawn(class APlayerController* ForPC, bool* ReturnValue);
	void OnAllowTribeManager(class AShooterPlayerController* ForPC, bool* ReturnValue);
	void OnAllowTribeManagement(bool* ReturnValue);
	void OnAllowStartSupplyCrateSpawns(bool* ReturnValue);
	void OnAllowShowPlayerHudUI(class APrimalCharacter** ForPawn, bool* ReturnValue);
	class AShooterPlayerController* OnAllowRemoveItems(class UPrimalInventoryComponent** ForInv, class UPrimalItem** AnItemToTransfer, bool* ReturnValue);
	void OnAllowPopUps(bool* ReturnValue);
	void OnAllowOrbitCamera(class APrimalCharacter* ForCharacter, bool* ReturnValue);
	void OnAllowFastTravel(class APrimalStructureBed** ForBed, class AShooterPlayerController* ForPC, bool* ReturnValue);
	void OnAllowDaytimeTransitionSounds(bool* ReturnValue);
	void OnAllowCreateSurvivor(bool* ReturnValue);
	class FString MakePlayerDeathNotification(const class FString& PlayerDeathStringEnemy, const class FString& PlayerDeathStringAlly, const class FString& PlayerDeathStringYou, const class FString& DeathReason, const TArray<class FString>& DeadPlayerNames, int32* TargetingTeamID, const TArray<struct FPrimalPlayerCharacterConfigStructReplicated>& PlayersData, struct FPlayerDeathNotification* ReturnValue);
	int32 MakeBattleTribeData(class FString* TribeName, struct FBattleTribeData* ReturnValue);
	class FString MakeBattlePlayerData(class FString* PlayerName, struct FBattlePlayerData* ReturnValue);
	class FString KickPlayer(class APlayerController** Controller);
	void IsTribeID(int32 TeamID, bool* ReturnValue);
	void IsAuthorityRole(bool* ReturnValue);
	void HideUIScene(class UClass** SceneClass);
	int32 GetTribeTexture(class UTexture2D** ReturnValue);
	void GetTimeSeconds(double* ReturnValue);
	int32 GetPlayerDatasForTribe(TArray<struct FBattlePlayerData>* AllPlayerDatas, TArray<struct FBattlePlayerData>* ReturnValue);
	void GetPawnName(class APawn* Pawn, class FString* ReturnValue);
	void GetPawnKillerName(class APawn* Pawn, class FString* ReturnValue);
	void GetFilteredAllyRadarTargets(TArray<struct FAllyRadarDatas>* ReturnValue);
	void GetDeathNotificationText(class AShooterCharacter** TheShooterChar, class APawn** InstigatingPawn, const class FString& Killer, class FString* KillerAndTribe, class FString* TheNotificationStringYou, class FString* TheNotificationStringAlly, class FString* TheNotificationStringEnemy);
	void GetCustomActors(class FName* SearchCustomTag, class ACustomActorList** ReturnValue);
	void GetColorForTargetingTeam(int32 ForTargetingTeam, struct FColor* NameColor, struct FColor* PlatformProfileNameColor);
	void GetAllShooterControllers(TArray<class AShooterPlayerController*>* ReturnValue);
	void GetAllShooterCharactersOfTeam(int32* KillerTeam, TArray<class AShooterCharacter*>* ReturnValue);
	void GetAllShooterCharacters(TArray<class AShooterCharacter*>* ReturnValue);
	void GetAllDinoCharactersOfTeam(int32* KillerTeam, TArray<class APrimalDinoCharacter*>* ReturnValue);
	class AShooterHUD* DrawTileOnCanvas(class UTexture** Tex, float X, float Y, float* XL, float* YL, float* U, float* V, float* UL, float* VL, struct FColor* DrawColor);
	void CreateScoreDataForTribe(TArray<int32>* TargetingTeams);
	void CreateScoreDataForPlayers(TArray<int32>* LinkedIDs);
	void CreateDeathNotification(class AShooterCharacter** TheShooterChar, class AShooterPlayerController** PrevController, class APawn** InstigatingPawn, int32 MaxNumberOfRespawns, struct FPlayerDeathNotification* ReturnValue);
	void CreateDamageEvent(struct FDamageEvent* ReturnValue);
	float CheckTimeSince(bool* ReturnValue);
	void BroadcastActorCustomEvent(class AActor** Actor, class FName* EventCustomName, class FString* EventCustomString, class AActor** InstigatorActor);
	TArray<struct FPrimalPlayerCharacterConfigStructReplicated> BreakTribeData(class FString* TribeName);
	class FString BreakPlayerDeathNotification(const class FString& PlayerDeathStringEnemy, const class FString& PlayerDeathStringAlly, const class FString& PlayerDeathStringYou, const class FString& DeathReason, const TArray<class FString>& DeadPlayerNames, int32* TargetingTeamID, const TArray<struct FPrimalPlayerCharacterConfigStructReplicated>& PlayersData);
	int32 BreakBattleTribeData(class FString* TribeName);
	class FString BreakBattlePlayerData(class FString* PlayerName);
	class FString BreakActionReportItem(class FString* PlayerName, class FString* TribeName);
	int32 BPGetTribeFlagRef(bool CreateFlag, class APrimalStructureTribeFlag** ReturnValue);
	void BPGetScoreDataForTribe(int32 ForTargetingTeam, struct FSOTFScoreTribeData* ReturnValue);
	void BPGetScoreDataForPlayer(int32* LinkedID, struct FSOTFScorePlayerData* ReturnValue);
	void BPClientUpdateAllyRadar();
};

// 0x30 (0x548 - 0x518)
// Class ShooterGame.DamageVolumeBase
class ADamageVolumeBase : public AVolume
{
public:
	float                                        DamageAmount;                                      // 0x518(0x4)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        DamageInterval;                                    // 0x51C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DamageType;                                        // 0x520(0x8)(ExportObject, Parm, OutParm, Transient, GlobalConfig)
	TArray<struct FDamageNegatingItem>           DamageNegatingItems;                               // 0x528(0x10)(ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1C0D[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ADamageVolumeBase* GetDefaultObj();

	class AActor* OnEndOverlap(class AActor** Actor);
	class AActor* OnBeginOverlap(class AActor** Actor);
};

// 0x8 (0x550 - 0x548)
// Class ShooterGame.DamageVolumeSwamp
class ADamageVolumeSwamp : public ADamageVolumeBase
{
public:
	uint8                                        Pad_1C14[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ADamageVolumeSwamp* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class ShooterGame.DatabaseShared
class UDatabaseShared : public UObject
{
public:
	uint8                                        bInitialized : 1;                                  // Mask: 0x1, PropSize: 0x10x28(0x1)(BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1C16[0x3F];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDatabaseShared* GetDefaultObj();

};

// 0x10 (0x78 - 0x68)
// Class ShooterGame.Database_LoginData
class UDatabase_LoginData : public UDatabaseShared
{
public:
	uint8                                        Pad_1C1A[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDatabase_LoginData* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class ShooterGame.Database_LoginData_Redis
class UDatabase_LoginData_Redis : public UDatabase_LoginData
{
public:

	static class UClass* StaticClass();
	static class UDatabase_LoginData_Redis* GetDefaultObj();

};

// 0x10 (0x78 - 0x68)
// Class ShooterGame.Database_PubSub_GeneralNotifications
class UDatabase_PubSub_GeneralNotifications : public UDatabaseShared
{
public:
	uint8                                        Pad_1C1E[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDatabase_PubSub_GeneralNotifications* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class ShooterGame.Database_PubSub_GeneralNotifications_Redis
class UDatabase_PubSub_GeneralNotifications_Redis : public UDatabase_PubSub_GeneralNotifications
{
public:

	static class UClass* StaticClass();
	static class UDatabase_PubSub_GeneralNotifications_Redis* GetDefaultObj();

};

// 0xF8 (0x9D0 - 0x8D8)
// Class ShooterGame.DataListEntryButton_CustomOverlay
class UDataListEntryButton_CustomOverlay : public UDataListEntryButton
{
public:
	uint8                                        Pad_1C23[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSlateBrush                           CustomOverlayImage;                                // 0x8E0(0xD0)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    Material;                                          // 0x9B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	uint8                                        bCustomOverlayEnabled : 1;                         // Mask: 0x1, PropSize: 0x10x9B8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_F1 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1C26[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             CustomOverlayScale;                                // 0x9C0(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UDataListEntryButton_CustomOverlay* GetDefaultObj();

};

// 0x10 (0x768 - 0x758)
// Class ShooterGame.DataListEntryButton_DyeResources
class UDataListEntryButton_DyeResources : public UPrimalUI
{
public:
	uint8                                        Pad_1C2C[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataListEntryButton_DyeResources* GetDefaultObj();

};

// 0xF8 (0x850 - 0x758)
// Class ShooterGame.DataListEntryButton_HostSession
class UDataListEntryButton_HostSession : public UBaseSelectableButtonWidget
{
public:
	uint8                                        bIsCustom : 1;                                     // Mask: 0x1, PropSize: 0x10x758(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        bIsProcedural : 1;                                 // Mask: 0x2, PropSize: 0x10x758(0x1)(Edit, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsActivated : 1;                                  // Mask: 0x4, PropSize: 0x10x758(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsMapMod : 1;                                     // Mask: 0x8, PropSize: 0x10x758(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsActiveModListingEntry : 1;                      // Mask: 0x10, PropSize: 0x10x758(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_F2 : 3;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1C38[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DisplayName;                                       // 0x760(0x10)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Transient)
	bool                                         bCenterDisplayName;                                // 0x770(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1C3A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ShortMapName;                                      // 0x778(0x10)(Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FString                                LongMapName;                                       // 0x788(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FString                                ModName;                                           // 0x798(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	class FString                                ModPath;                                           // 0x7A8(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint64                                       ModItemId;                                         // 0x7B8(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSelectOnClicked : 1;                              // Mask: 0x1, PropSize: 0x10x7C0(0x1)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1C3D[0x8F];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataListEntryButton_HostSession* GetDefaultObj();

	void GetHasServerData(bool* ReturnValue);
	void GetHasSaveGame(bool* ReturnValue);
};

// 0x2E8 (0xA40 - 0x758)
// Class ShooterGame.DataListEntryButton_ListSession
class UDataListEntryButton_ListSession : public UBaseSelectableButtonWidget
{
public:
	struct FCustomButtonWidgetStyle              LastJoinedExtendedStyle;                           // 0x758(0x48)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FCustomButtonWidgetStyle              StandardExtendedStyle;                             // 0x7A0(0x48)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FString                                UniqueID;                                          // 0x7E8(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class FString                                GameName;                                          // 0x7F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference)
	class FString                                BuildId;                                           // 0x808(0x10)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FString                                OwnerName;                                         // 0x818(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                MapName;                                           // 0x828(0x10)(BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class FString                                DayTimeStr;                                        // 0x838(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint32                                       NumPlayers;                                        // 0x848(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint32                                       MaxNumPlayers;                                     // 0x84C(0x4)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint64                                       ModId;                                             // 0x850(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, SubobjectReference)
	uint64                                       TotalConversionId;                                 // 0x858(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint64                                       Ping;                                              // 0x860(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                ModLabelString;                                    // 0x868(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHasMods;                                          // 0x878(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHasPassword;                                      // 0x879(0x1)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsFavourite;                                      // 0x87A(0x1)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsPVEServer;                                      // 0x87B(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1C50[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            PasswordTexture;                                   // 0x880(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsOfficialServer;                                 // 0x888(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUsingBattleEye;                                   // 0x889(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowDownloadCharacters;                          // 0x88A(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowDownloadItems;                               // 0x88B(0x1)(BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1C53[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            BattleEyeTexture;                                  // 0x890(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            OfficialServerTexture;                             // 0x898(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PVPServerTexture;                                  // 0x8A0(0x8)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PVEServerTexture;                                  // 0x8A8(0x8)(Edit, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          DisplayStringSelectedColor;                        // 0x8B0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSelectOnClicked : 1;                              // Mask: 0x1, PropSize: 0x10x8C0(0x1)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1C57[0x17F];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataListEntryButton_ListSession* GetDefaultObj();

};

// 0x70 (0x7C8 - 0x758)
// Class ShooterGame.DataListEntryButton_MainMenu
class UDataListEntryButton_MainMenu : public UBaseSelectableButtonWidget
{
public:
	uint8                                        bIsCustom : 1;                                     // Mask: 0x1, PropSize: 0x10x758(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        bIsProcedural : 1;                                 // Mask: 0x2, PropSize: 0x10x758(0x1)(Edit, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_F3 : 6;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1C5A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DisplayName;                                       // 0x760(0x10)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Transient)
	bool                                         bCenterDisplayName;                                // 0x770(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1C5D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                MapName;                                           // 0x778(0x10)(BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class FString                                ModName;                                           // 0x788(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	class FString                                ModPath;                                           // 0x798(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint64                                       ModItemId;                                         // 0x7A8(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSelectOnClicked : 1;                              // Mask: 0x1, PropSize: 0x10x7B0(0x1)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_F6 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1C62[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UCustomButtonWidget*                   ButtonObject;                                      // 0x7B8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTextBlock*                            EntryNameLabel;                                    // 0x7C0(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UDataListEntryButton_MainMenu* GetDefaultObj();

};

// 0xA8 (0x980 - 0x8D8)
// Class ShooterGame.DataListEntryButton_PrimalFolder
class UDataListEntryButton_PrimalFolder : public UDataListEntryButton
{
public:
	struct FVector2D                             ItemNameSpacing;                                   // 0x8D8(0x10)(ConstParm, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsItemSlotButton : 1;                             // Mask: 0x1, PropSize: 0x10x8E8(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSimpleIconOnly : 1;                               // Mask: 0x2, PropSize: 0x10x8E8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_F7 : 6;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1C64[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TextScaleMultiplier;                               // 0x8EC(0x4)(BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseNewRenderingPath;                              // 0x8F0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1C66[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  TextLabelName;                                     // 0x8F4(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1C68[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPrimalFolderIcons                    IconsNormal;                                       // 0x900(0x20)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FPrimalFolderIcons                    IconsSelected;                                     // 0x920(0x20)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FString                                FolderName;                                        // 0x940(0x10)(ConstParm, ExportObject, OutParm, Transient, InstancedReference, SubobjectReference)
	float                                        FolderNameTextClipOffset;                          // 0x950(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        FolderNameTextFontScale;                           // 0x954(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FolderIcon;                                        // 0x958(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	enum class EFolderWidgetType                 FolderType;                                        // 0x960(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1C6C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                FontColor;                                         // 0x964(0x4)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        FolderLevel;                                       // 0x968(0x1)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1C6D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UDataListPanel*                        ParentPanel;                                       // 0x970(0x8)(Edit, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1C6F[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataListEntryButton_PrimalFolder* GetDefaultObj();

};

// 0x8E8 (0x11C0 - 0x8D8)
// Class ShooterGame.DataListEntryButton_PrimalItem
class UDataListEntryButton_PrimalItem : public UDataListEntryButton
{
public:
	struct FVector2D                             DesiredSize;                                       // 0x8D8(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                MiscInfoStringColor;                               // 0x8E8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                ItemNameColor;                                     // 0x8EC(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                ItemCategoryColor;                                 // 0x8F0(0x4)(Edit, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1C7D[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FButtonStyle                          WidgetStyleWhenBroken;                             // 0x900(0x3F0)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FDataListEntryButtonBorderColors      NormalBorderColors;                                // 0xCF0(0x10)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FDataListEntryButtonBorderColors      BrokenBorderColors;                                // 0xD00(0x10)(Edit, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        BarOffsetY;                                        // 0xD10(0x4)(Edit, ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        DurabilityBarBorderThickness;                      // 0xD14(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        DurabilityBarThickness;                            // 0xD18(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                DurabilityBarFgColor;                              // 0xD1C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                DurabilityBarBgColor;                              // 0xD20(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                SpoilingBarFgColor;                                // 0xD24(0x4)(ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                SpoilingBarBgColor;                                // 0xD28(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1C80[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSlateBrush                           WidgetSelectedStyleBrush;                          // 0xD30(0xD0)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             WidgetSelectedStyleBrushSize;                      // 0xE00(0x10)(ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             WidgetSelectedStyleBrushOffset;                    // 0xE10(0x10)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FSlateBrush                           WidgetActiveStyleBrush;                            // 0xE20(0xD0)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FSlateBrush                           WidgetBrokenOverlayStyleBrush;                     // 0xEF0(0xD0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                UnselectedTintColor;                               // 0xFC0(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                TintEngramRequirementsMet;                         // 0xFC4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                TintEngramRequirementsUnmet;                       // 0xFC8(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                TintBlueprintRequirementsMet;                      // 0xFCC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                TintBlueprintRequirementsUnmet;                    // 0xFD0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                TintTekBlueprintRequirementsMet;                   // 0xFD4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                TintTekBlueprintRequirementsUnmet;                 // 0xFD8(0x4)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                TintCompatibleWithDraggedItem;                     // 0xFDC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                CraftRepairIconTint;                               // 0xFE0(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FMargin                               BorderSizePx;                                      // 0xFE4(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1C88[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            EngramBg;                                          // 0xFF8(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            BlueprintBg;                                       // 0x1000(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TekgramBg;                                         // 0x1008(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ItemQualityOverlay;                                // 0x1010(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            SlottedIcon;                                       // 0x1018(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ActiveSlotIcon;                                    // 0x1020(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CraftingIcon;                                      // 0x1028(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RepairingIcon;                                     // 0x1030(0x8)(BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            BrokenIcon;                                        // 0x1038(0x8)(ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             QuantityTxtPosition;                               // 0x1040(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             ArmorDamageTxtPosition;                            // 0x1050(0x10)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             ArmorDamageIconPosition;                           // 0x1060(0x10)(ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ArmorDamageIconScale;                              // 0x1070(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1C8F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             AmmoTxtPosition;                                   // 0x1078(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             WeightTxtPosition;                                 // 0x1088(0x10)(ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             NameTxtPositionPercent;                            // 0x1098(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             NameTxtBoxSizePercent;                             // 0x10A8(0x10)(BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             CategoryTxtPosition;                               // 0x10B8(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             ItemNameSpacing;                                   // 0x10C8(0x10)(ConstParm, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        UseItemCraftQueueIndex;                            // 0x10D8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseRemoteCraftQueue : 1;                          // Mask: 0x1, PropSize: 0x10x10DC(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsItemSlotButton : 1;                             // Mask: 0x2, PropSize: 0x10x10DC(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_FF : 6;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1C93[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TextScaleMultiplier;                               // 0x10E0(0x4)(BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TextArmorDamageSize;                               // 0x10E4(0x4)(Edit, ConstParm, Net, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TextQuantitySize;                                  // 0x10E8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TextAmmoSize;                                      // 0x10EC(0x4)(Edit, ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TextWeightSize;                                    // 0x10F0(0x4)(Edit, ConstParm, ExportObject, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TextNameSize;                                      // 0x10F4(0x4)(BlueprintVisible, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TextCategorySize;                                  // 0x10F8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         EnableTextShadow;                                  // 0x10FC(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         EnableTextGlow;                                    // 0x10FD(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1C99[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TextGlowColor;                                     // 0x1100(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             TextGlowInnerRadius;                               // 0x1110(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             TextGlowOuterRadius;                               // 0x1120(0x10)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UFont*                                 DetailTextFont;                                    // 0x1130(0x8)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ItemIconScale;                                     // 0x1138(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1C9B[0x74];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsUsingExtraCanvasBar;                            // 0x11B0(0x1)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1C9C[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataListEntryButton_PrimalItem* GetDefaultObj();

	bool HandleOnContextMenuIsOpenChanged();
	float GetShowExtraCanvasBar(struct FLinearColor* BarColor);
};

// 0xB8 (0x810 - 0x758)
// Class ShooterGame.DataListEntryEngramList
class UDataListEntryEngramList : public UPrimalUI
{
public:
	class UClass*                                EntryWidgetTemplate;                               // 0x758(0x8)(BlueprintVisible, Parm, OutParm, ReturnParm, Config, InstancedReference, SubobjectReference)
	class FName                                  DataPanelName;                                     // 0x760(0x8)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LevelLabelName;                                    // 0x768(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LevelEnabledEffectName;                            // 0x770(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ElementIconName;                                   // 0x778(0x8)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EngramRowStartName;                                // 0x780(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EngramRowMiddleName;                               // 0x788(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EngramRowEndName;                                  // 0x790(0x8)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextActiveColor;                           // 0x798(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextInactiveColor;                         // 0x7A8(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        WidgetLimit;                                       // 0x7B8(0x4)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1CA3[0x54];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataListEntryEngramList* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.DataListEntryInterface
class IDataListEntryInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IDataListEntryInterface* GetDefaultObj();

};

// 0xC8 (0x3F8 - 0x330)
// Class ShooterGame.DataListEntryWidget
class UDataListEntryWidget : public UPrimalUserWidget
{
public:
	class FName                                  DataListButtonName;                                // 0x330(0x8)(ExportObject, BlueprintReadOnly, Net, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        ExistingButtonExplicitIndexType;                   // 0x338(0x4)(Edit, ConstParm, BlueprintVisible, Net, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TraditionalButtonName;                             // 0x33C(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TraditionalLabelName;                              // 0x344(0x8)(BlueprintReadOnly, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1CC0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            ButtonBackgroundOverride;                          // 0x350(0x8)(Edit, ConstParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FString                                DisplayStringOverride;                             // 0x358(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        PrimalItemButton_UseItemCraftQueueIndex;           // 0x368(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        PrimalItemButton_bUseRemoteCraftQueue : 1;         // Mask: 0x1, PropSize: 0x10x36C(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideButtonShowDisplayStringWhenHasItem : 1;   // Mask: 0x2, PropSize: 0x10x36C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideButtonShowDisplayStringWhenHasItemValue : 1; // Mask: 0x4, PropSize: 0x10x36C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideButtonDisplayStringCenterX : 1;           // Mask: 0x8, PropSize: 0x10x36C(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideButtonDisplayStringCenterXValue : 1;      // Mask: 0x10, PropSize: 0x10x36C(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideButtonDisplayStringCenterY : 1;           // Mask: 0x20, PropSize: 0x10x36C(0x1)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideButtonDisplayStringCenterYValue : 1;      // Mask: 0x40, PropSize: 0x10x36C(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideButtonDisplayStringOffset : 1;            // Mask: 0x80, PropSize: 0x10x36C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1CC6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             OverrideButtonDisplayStringOffsetValue;            // 0x370(0x10)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideButtonDisplayStringScale : 1;             // Mask: 0x1, PropSize: 0x10x380(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideButtonDisplayStringFontSize : 1;          // Mask: 0x2, PropSize: 0x10x380(0x1)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseEngramToolTips : 1;                            // Mask: 0x4, PropSize: 0x10x380(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_107 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1CCA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OverrideButtonDisplayStringFontSizeValue;          // 0x384(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             OverrideButtonDisplayStringScaleValue;             // 0x388(0x10)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            OverrideButtonSelectedIcon;                        // 0x398(0x8)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bBoundToDragging;                                  // 0x3A0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         CanBeHighlightedWhenEmpty;                         // 0x3A1(0x1)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1CCE[0x56];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataListEntryWidget* GetDefaultObj();

	void OnDraggedClickedEventObject(class UWidget** DraggeddWidget);
	void InitializeMeDefaults();
	float GetShowExtraCanvasBar(struct FLinearColor* BarColor);
	void GetDataListButton(class UDataListEntryButton** ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.DataListInterface
class IDataListInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IDataListInterface* GetDefaultObj();

};

// 0x208 (0xFA0 - 0xD98)
// Class ShooterGame.DataListPanel
class UDataListPanel : public UScrollBox
{
public:
	class UClass*                                EntryWidgetTemplate;                               // 0xD98(0x8)(BlueprintVisible, Parm, OutParm, ReturnParm, Config, InstancedReference, SubobjectReference)
	class UClass*                                EntryListTemplate;                                 // 0xDA0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                NullEntryWidgetTemplate;                           // 0xDA8(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PaddingEntryWidgetTemplate;                        // 0xDB0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                FolderWidgetTemplate;                              // 0xDB8(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                GenericWidgetTemplate;                             // 0xDC0(0x8)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        CustomFolders;                                     // 0xDC8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FolderIcon;                                        // 0xDD8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                FolderColor;                                       // 0xDE0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1CD9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            BackFolderIcon;                                    // 0xDE8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                BackFolderColor;                                   // 0xDF0(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1CDA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            CustomFolderIcon;                                  // 0xDF8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                CustomFolderColor;                                 // 0xE00(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupportsCustomFolders : 1;                        // Mask: 0x1, PropSize: 0x10xE04(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowMultiLevelCustomFolders : 1;                 // Mask: 0x2, PropSize: 0x10xE04(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsePaddingTemplate : 1;                           // Mask: 0x4, PropSize: 0x10xE04(0x1)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseForEngramList : 1;                             // Mask: 0x8, PropSize: 0x10xE04(0x1)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceRefreshDataListWidgetAdjacents : 1;          // Mask: 0x10, PropSize: 0x10xE04(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_10A : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1CDC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bBringHoveredItemsToTop;                           // 0xE08(0x1)(ConstParm, Net, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableSupportCustomFolders;                       // 0xE09(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceDragging;                                    // 0xE0A(0x1)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceEntryDisplayString;                          // 0xE0B(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceEntryClickWhenNoData;                        // 0xE0C(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseExistingButtons;                               // 0xE0D(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseExistingButtonExplicitEntryIndexTypeMapping;   // 0xE0E(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSelectEntriesOnHighlight;                         // 0xE0F(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        MinimalItemCount;                                  // 0xE10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSupplyAdjacentsToChildren;                        // 0xE14(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCanBeSelectedWhenEmpty;                           // 0xE15(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1CE4[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        FilledRowsBeforeEnablingScrolling;                 // 0xE18(0x4)(ExportObject, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1CE6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UDataListEntryWidget*>          EntryWidgets;                                      // 0xE20(0x10)(Edit, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1CE8[0xC0];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                CustomFolderBlueprint;                             // 0xEF0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlySkins;                                        // 0xEF8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsSkinSelectorMode;                               // 0xEF9(0x1)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIncludeSkins;                                     // 0xEFA(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCreateFolders;                                    // 0xEFB(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	int8                                         FolderLevel;                                       // 0xEFC(0x1)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1CE9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                CustomFolderFilter;                                // 0xF00(0x10)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	int8                                         SortType;                                          // 0xF10(0x1)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1CEA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                NameFilter;                                        // 0xF18(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1CEB[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        MyDataListType;                                    // 0xF50(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1CEC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UDataListEntryWidget*>          CurrentCustomFolders;                              // 0xF58(0x10)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class UDataListEntryWidget*                  BackWidget;                                        // 0xF68(0x8)(ConstParm, BlueprintVisible, Net, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1CED[0x30];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataListPanel* GetDefaultObj();

	void PreemptiveRequestLoadAllEntries(bool* ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.DataListProviderInterface
class IDataListProviderInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IDataListProviderInterface* GetDefaultObj();

};

// 0x90 (0x3C0 - 0x330)
// Class ShooterGame.DataListValueGeneric
class UDataListValueGeneric : public UPrimalUserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnValueChanged;                                    // 0x330(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnTextCommitted;                                   // 0x340(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig)
	class FText                                  OptionSelectedText;                                // 0x350(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class FText>                          OptionsValues;                                     // 0x368(0x10)(Edit, BlueprintReadOnly, Net, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowOverrideValue;                                // 0x378(0x1)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1D34[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FText                                  OverridedOptionSelectedText;                       // 0x380(0x18)(ExportObject, BlueprintReadOnly, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          Color;                                             // 0x398(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm)
	struct FVector2D                             ColorPickerValue;                                  // 0x3A8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1D35[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataListValueGeneric* GetDefaultObj();

	struct FVector2D UpdateColorPicker();
	void SetParameterValue(const class FString& Value, bool* bPreventCallParent);
	void SetOverridedParameterValue(class FText Value, bool* bPreventRecall);
	void SetOverridedFloatValue(float Value);
	void SetIsSelectedBP(bool* Selected);
	void SetFloatValue(float Value);
	void SetBoolValue(bool Value);
	void OnOverridedParameterValue(const class FString& Value, bool* bPreventCallParent);
	void IsExpanded(bool* ReturnValue);
	void HasSlider(class USlider** ReturnValue);
	void HasExpandedSlider(class USlider** ReturnValue);
	float HandleOnValueChanged();
	class FText HandleOnOverrideValueChanged(enum class ETextCommit CommitMethod);
	void GetOverridedFloatValue(float* ReturnValue);
	void GetIsSelectedBP(bool* ReturnValue);
	void GetFloatValue(float* ReturnValue);
	void GetBoolValue(bool* ReturnValue);
	void GetAllValueWidgets(TArray<class UWidget*>* ReturnValue);
	int32 CycleDataValues(class UWidget** CurrentHighlighted, class UWidget** ReturnValue);
	void CloseSlider();
};

// 0x30 (0x4F8 - 0x4C8)
// Class ShooterGame.DayCycleAmbientSound
class ADayCycleAmbientSound : public AActor
{
public:
	class UAudioComponent*                       AudioComponentDay;                                 // 0x4C8(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       AudioComponentNight;                               // 0x4D0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DayTimeSoundMorningFadeInStart;                    // 0x4D8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DayTimeSoundMorningFadeInEnd;                      // 0x4DC(0x4)(Net, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DayTimeSoundEveningFadeOutStart;                   // 0x4E0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DayTimeSoundEveningFadeOutEnd;                     // 0x4E4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsAlwaysAudible : 1;                              // Mask: 0x1, PropSize: 0x10x4E8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowConcurrentWithPostProcessSound : 1;          // Mask: 0x2, PropSize: 0x10x4E8(0x1)(Edit, ConstParm, Net, EditFixedSize, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyAudibleWhenRaining : 1;                       // Mask: 0x4, PropSize: 0x10x4E8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBlueprintAudibleWhenRainingEnabled : 1;           // Mask: 0x8, PropSize: 0x10x4E8(0x1)(Edit, ConstParm, EditFixedSize, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1D43[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ADayCycleAmbientSound* GetDefaultObj();

};

// 0x180 (0x648 - 0x4C8)
// Class ShooterGame.DayCycleManager
class ADayCycleManager : public AInfo
{
public:
	uint8                                        Pad_1DA0[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CurrentTime;                                       // 0x4D0(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TrueSkyTime;                                       // 0x4D4(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DA1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        TheDayNumberToMakeSerilizationWork;                // 0x4DC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalTrueSkyBrightness;                           // 0x4E0(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DA3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               GlobalTrueSkyColorMultiplier;                      // 0x4E8(0x18)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalIBLCaptureBrightness;                        // 0x500(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalBakeAndStreamIBLMultiplier;                  // 0x504(0x4)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalGroundColorMultiplier;                       // 0x508(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalSkyColorMultiplier;                          // 0x50C(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SM4SkyLightMult;                                   // 0x510(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SM4DirLightMult;                                   // 0x514(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               AtmosphericFogMultiplier;                          // 0x518(0x18)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SkyIBLIntensityMultiplier;                         // 0x530(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseTemperature;                                   // 0x534(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseWind;                                          // 0x538(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        RainAmount;                                        // 0x53C(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SnowAmount;                                        // 0x540(0x4)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SkyWeatherSequenceBlend_Normal;                    // 0x544(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SkyWeatherSequenceBlend_Hot;                       // 0x548(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SkyWeatherSequenceBlend_Cold;                      // 0x54C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SkyWeatherSequenceBlend_Rainy;                     // 0x550(0x4)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SkyWeatherSequenceBlend_Fog;                       // 0x554(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsRaining;                                        // 0x558(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bLastReplicatedIsRaining;                          // 0x559(0x1)(Edit, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bLastReplicatedIsSnowing;                          // 0x55A(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DA8[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            Sound_TransitionToMorning;                         // 0x560(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_TransitionToMidDay;                          // 0x568(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_TransitionToNight;                           // 0x570(0x8)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        Sound_TransitionToMorningTime;                     // 0x578(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        Sound_TransitionToNightTime;                       // 0x57C(0x4)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        Sound_TransitionToMidDayTime;                      // 0x580(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DayTimeStart;                                      // 0x584(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DayTimeEnd;                                        // 0x588(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DayTimeLengthMultiplier;                           // 0x58C(0x4)(BlueprintVisible, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class ALevelSequenceActor*>           NewLightingSequence;                               // 0x590(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        ActiveLightingSequence;                            // 0x5A0(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DAD[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bCheckForStructureActivation;                      // 0x5AC(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUsesWind;                                         // 0x5AD(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCheckForWeaponFiring;                             // 0x5AE(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPOverrideItemAutoDecreaseDurability;          // 0x5AF(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHideSupplyCrates;                                 // 0x5B0(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DB0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        PreventBuffClassesInDayCycleLevel;                 // 0x5B8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnStartDaytime;                                    // 0x5C8(0x10)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnStartNighttime;                                  // 0x5D8(0x10)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnDayChange;                                       // 0x5E8(0x10)(Edit, ConstParm, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnHazardChange;                                    // 0x5F8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        GenesisTradableOptions;                            // 0x608(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                HexagonVFXActorClass;                              // 0x618(0x8)(BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DB4[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        GivePlayersBuffsOnSpawn;                           // 0x628(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSoftObjectPath>               GivePlayersBuffAssetsOnSpawn;                      // 0x638(0x10)(ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ADayCycleManager* GetDefaultObj();

	void ShooterCharacterSpawned(class AShooterCharacter* TheShooterCharacter);
	void ShooterCharacterPossessed(class AShooterCharacter* TheShooterCharacter);
	int32 SetTimeOfDay();
	void IsRainingAtLocation(struct FVector* Location, bool* ReturnValue);
	void IsDaytime(bool* ReturnValue);
	void GetWindAtLocation(struct FVector* AtLocation, class APrimalCharacter** ForPrimalCharacter, float* ReturnValue);
	class ADayCycleAmbientSound* GetWeatherModifiedAmbientSoundMultiplier(float* ReturnValue);
	void GetWaterLineStartZ(struct FVector* AtLocation, float* ReturnValue);
	void GetTemperatureAtLocation(struct FVector* AtLocation, class APrimalCharacter** ForPrimalCharacter, float* ReturnValue);
	void GetPreventBuffClassesInDayCycleLevel(TArray<class UClass*>* ReturnValue);
	void GetDeepWaterStartZ(struct FVector* AtLocation, float* ReturnValue);
	bool GetDayNumberString(class FString* ReturnValue);
	struct FVector2D BPPostDrawSpawnMap(class AShooterPlayerController* ForPC);
	class UPrimalItem* BPOverrideItemAutoDecreaseDurability(bool* ReturnValue);
	class AActor* BPOverrideGameStateMatineePlayRate(float* InPlayRate, float* ReturnValue);
	class FName BPOnDCMCheat(float Value);
	void BPGetAdditionalMapMarkers(class AShooterPlayerController* ForPC, TArray<struct FPrimalMapMarkerEntryData>* ReturnValue);
	class UClass* BPAllowSpawningCrate(bool* ReturnValue);
	class ABiomeZoneVolume* BPAdjustTemperature(struct FVector* AtLocation, class APrimalCharacter** ForPrimalCharacter, float* ReturnValue);
	class AShooterWeapon* AttemptWeaponFiring();
	class AActor* AllowWeaponFiring(bool* ReturnValue);
	class APrimalStructure* AllowStructureActivation(bool* ReturnValue);
	float AdjustStructureItemInsulation(class AShooterCharacter* ForCharacter, float* ReturnValue);
};

// 0xB0 (0xD8 - 0x28)
// Class ShooterGame.DeferredMovementContext
class UDeferredMovementContext : public UObject
{
public:
	uint8                                        Pad_1DBB[0x70];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<TWeakObjectPtr<class UPrimalCharacterMovement>> DeferredComponents;                                // 0x98(0x10)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FDeferredMovementTick                 TickFunction;                                      // 0xA8(0x30)(BlueprintReadOnly, OutParm, ZeroConstructor, EditConst)

	static class UClass* StaticClass();
	static class UDeferredMovementContext* GetDefaultObj();

};

// 0x8 (0x4D0 - 0x4C8)
// Class ShooterGame.DestructibleActor
class ADestructibleActor : public ADestructibleBaseActor
{
public:
	class USceneComponent*                       ActorRootComponent;                                // 0x4C8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ADestructibleActor* GetDefaultObj();

	class UStaticMesh* SetFadingStaticMesh();
	class USkeletalMesh* SetFadingSkeletalMesh();
	void GetFadingMeshComponent(class UMeshComponent** ReturnValue);
};

// 0x18 (0x4E8 - 0x4D0)
// Class ShooterGame.DestroyedMeshActor
class ADestroyedMeshActor : public ADestructibleActor
{
public:
	float                                        TimeToSetNoCollision;                              // 0x4D0(0x4)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NoCollisionProfileName;                            // 0x4D4(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DefaultCollisionProfileName;                       // 0x4DC(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DBE[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ADestroyedMeshActor* GetDefaultObj();

	void SetNoCollisionProfile();
};

// 0x20 (0x778 - 0x758)
// Class ShooterGame.DinoAncestryEntryWidget
class UDinoAncestryEntryWidget : public UPrimalUI
{
public:
	uint8                                        Pad_1DBF[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDinoAncestryEntryWidget* GetDefaultObj();

};

// 0x198 (0x8F0 - 0x758)
// Class ShooterGame.DinoListButtonWidget
class UDinoListButtonWidget : public UBaseSelectableButtonWidget
{
public:
	class FName                                  ContextMenuAnchorName;                             // 0x758(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DinoStatusLabelName;                               // 0x760(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExpirationLabelName;                               // 0x768(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExpirationLabelParentName;                         // 0x770(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSelectOnClicked : 1;                              // Mask: 0x1, PropSize: 0x10x778(0x1)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_11C : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1DD1[0x167];                                   // Fixing Size After Last Property  > TateDumper <
	class UMenuAnchor*                           ContextMenuAnchor;                                 // 0x8E0(0x8)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DD2[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDinoListButtonWidget* GetDefaultObj();

	class FString SetDinoExpiration();
	class FString SetButtonString();
	void OnGetContextMenuContent(class UWidget** ReturnValue);
	bool InitializeWithClick();
	bool ForceSetSelected();
};

// 0x88 (0x3B8 - 0x330)
// Class ShooterGame.ToolTipWidget
class UToolTipWidget : public UPrimalUserWidget
{
public:
	class FString                                ToolTipLabelName;                                  // 0x330(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        WidgetWidth;                                       // 0x340(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        WidgetHeight;                                      // 0x344(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoOverlayFade : 1;                                // Mask: 0x1, PropSize: 0x10x348(0x1)(Edit, ConstParm, BlueprintVisible, Net, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_11D : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1DD9[0x17];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bUseBPInitToolTip;                                 // 0x360(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPUpdateToolTip;                               // 0x361(0x1)(ConstParm, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DDA[0x56];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UToolTipWidget* GetDefaultObj();

	float BPUpdateToolTip();
	class UObject* BPInitToolTip(class AShooterPlayerController* HUDOwner, const class FString& ToolTipString);
};

// 0x0 (0x3B8 - 0x3B8)
// Class ShooterGame.TooltipSmartLayoutWidget
class UTooltipSmartLayoutWidget : public UToolTipWidget
{
public:

	static class UClass* StaticClass();
	static class UTooltipSmartLayoutWidget* GetDefaultObj();

};

// 0x1C8 (0x580 - 0x3B8)
// Class ShooterGame.DinoListItemTooltip
class UDinoListItemTooltip : public UTooltipSmartLayoutWidget
{
public:
	class FName                                  FnameTitleBar_NameLabel;                           // 0x3B8(0x8)(Edit, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FnameTitleBar_LevelLabel;                          // 0x3C0(0x8)(BlueprintVisible, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FnameInfo_ImageName;                               // 0x3C8(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          FnameInfo_LabelNames;                              // 0x3D0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          FnameInfo_GroupNames;                              // 0x3E0(0x10)(Edit, ConstParm, Net, EditFixedSize, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        Info_GroupFreq;                                    // 0x3F0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DDD[0x17C];                                   // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            EnabledDinoTexture;                                // 0x570(0x8)(Edit, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    EnabledDinoMaterial;                               // 0x578(0x8)(ConstParm, BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UDinoListItemTooltip* GetDefaultObj();

};

// 0x120 (0x150 - 0x30)
// Class ShooterGame.DinoSetupDataAsset
class UDinoSetupDataAsset : public UDataAsset
{
public:
	struct FDinoSetup                            DinoSetup;                                         // 0x30(0x120)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config)

	static class UClass* StaticClass();
	static class UDinoSetupDataAsset* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class ShooterGame.Object_WithWorldContext
class UObject_WithWorldContext : public UObject
{
public:
	uint8                                        Pad_1DE2[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UObject_WithWorldContext* GetDefaultObj();

	void SetWorldContext(class UObject* NewWorldContext);
	void GetWorldContextObject(class UObject** ReturnValue);
};

// 0x20 (0x50 - 0x30)
// Class ShooterGame.DinoTrackFilterOption
class UDinoTrackFilterOption : public UObject_WithWorldContext
{
public:
	class FString                                FilterDisplayName;                                 // 0x30(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FString                                OverwrittenAdditionalSearchInputDisplayName;       // 0x40(0x10)(Edit, ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UDinoTrackFilterOption* GetDefaultObj();

	void GetSearchActorListType(int32* ReturnValue);
	void GetOverwrittenAdditionalSearchInputDisplayName(class FString* ReturnValue);
	void GetFilterDisplayName(class FString* ReturnValue);
	void GetActorsToSearchThrough(TArray<class AActor*>* ReturnValue);
};

// 0x0 (0x4D8 - 0x4D8)
// Class ShooterGame.DirectionalAmbientLight
class ADirectionalAmbientLight : public ALight
{
public:

	static class UClass* StaticClass();
	static class ADirectionalAmbientLight* GetDefaultObj();

};

// 0x0 (0x4D8 - 0x4D8)
// Class ShooterGame.DirectionalInjectedLight
class ADirectionalInjectedLight : public ALight
{
public:

	static class UClass* StaticClass();
	static class ADirectionalInjectedLight* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.DraggableObjectInterface
class IDraggableObjectInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IDraggableObjectInterface* GetDefaultObj();

};

// 0x20 (0x7B0 - 0x790)
// Class ShooterGame.DraggedDecoratorWidget
class UDraggedDecoratorWidget : public UCustomCanvasWidget
{
public:
	class UMaterialInterface*                    DraggedMaterial;                                   // 0x790(0x8)(OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DraggedTexture;                                    // 0x798(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DEB[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDraggedDecoratorWidget* GetDefaultObj();

};

// 0x3D8 (0x8A0 - 0x4C8)
// Class ShooterGame.DroppedItem
class ADroppedItem : public AActor
{
public:
	uint8                                        Pad_1DF4[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	struct FItemNetInfo                          MyItemInfo;                                        // 0x4D8(0x1C8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UPrimalItem*                           MyItem;                                            // 0x6A0(0x8)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bApplyImpulseOnSpawn : 1;                          // Mask: 0x1, PropSize: 0x10x6A8(0x1)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyOnStasis : 1;                              // Mask: 0x2, PropSize: 0x10x6A8(0x1)(Edit, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCollisionTrace : 1;                            // Mask: 0x4, PropSize: 0x10x6A8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventPickup : 1;                                // Mask: 0x8, PropSize: 0x10x6A8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyOutOfWater : 1;                            // Mask: 0x10, PropSize: 0x10x6A8(0x1)(Edit, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseClientDroppedItemPhysics : 1;                  // Mask: 0x20, PropSize: 0x10x6A8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsUnderwater : 1;                                 // Mask: 0x40, PropSize: 0x10x6A8(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNotifyPreviousOwnerOfPickup : 1;                  // Mask: 0x80, PropSize: 0x10x6A8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAssignedToTribePickupOnly : 1;                    // Mask: 0x1, PropSize: 0x10x6A9(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_11F : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1DF7[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        AssignedToTribeID;                                 // 0x6AC(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLowQuality : 1;                                   // Mask: 0x1, PropSize: 0x10x6B0(0x1)(EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_120 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1DF8[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ImpulseMagnitude;                                  // 0x6B4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseImpulseOffsetRanges;                           // 0x6B8(0x1)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DF9[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ImpulseOffsetRanges;                               // 0x6C0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ForceSleepTimer;                                   // 0x6D8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DFA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               DroppedItemScale;                                  // 0x6E0(0x18)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             OverlayTooltipPadding;                             // 0x6F8(0x10)(Edit, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             OverlayTooltipScale;                               // 0x708(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CenterLocationOffset;                              // 0x718(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                HUDOverlayToolTipWidget;                           // 0x730(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                HUDOverlayToolTipWidgetOnlyAction;                 // 0x738(0x8)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FString                                DroppedByName;                                     // 0x740(0x10)(BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint64                                       DroppedByPlayerID;                                 // 0x750(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	double                                       DroppedItemDestructionTime;                        // 0x758(0x8)(BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               DroppedItemInterpTarget;                           // 0x760(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bClientDisablePhysics;                             // 0x778(0x1)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DFC[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UStaticMesh*                           NetDroppedMeshOverride;                            // 0x780(0x8)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    NetDroppedMeshMaterialOverride;                    // 0x788(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               NetDroppedMeshOverrideScale3D;                     // 0x790(0x18)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               DroppedItemVelocity;                               // 0x7A8(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DroppedItemAccelerationGravity;                    // 0x7C0(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DroppedItemMaxFallSpeed;                           // 0x7C4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DFD[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       SpawnDropSoundTime;                                // 0x7E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DFE[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsPreventDroppedItemPhysics;                      // 0x800(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E00[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AActor>                 DroppedByActor;                                    // 0x804(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E02[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalCharacter*                      BasedTransformCharacter;                           // 0x810(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               BasedTransformLocation;                            // 0x818(0x18)(Edit, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               BasedTransformVelocity;                            // 0x830(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UStaticMesh*                           UsedMeshAsset;                                     // 0x848(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPDroppedItemImpacted;                         // 0x850(0x1)(Edit, ConstParm, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPSetupDroppedItemVisuals;                     // 0x851(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventDropAttachment;                            // 0x852(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E04[0x2D];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        FreezePhysicsAfterTime;                            // 0x880(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        PickupAllRange;                                    // 0x884(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E05[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bBPOnItemPickedUp : 1;                             // Mask: 0x1, PropSize: 0x10x890(0x1)(Edit, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_121 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1E06[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            PickupIcon;                                        // 0x898(0x8)(Edit, ConstParm, Net, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ADroppedItem* GetDefaultObj();

	void ResetLifeSpan(float* NewLifeSpan);
	void ReplicateMovement();
	float KeepPhysicsActiveForDuration();
	class APlayerController* IsAllowedToPickupItem(bool* ReturnValue);
	void FreezePhysics();
	void ForceSleep();
	void BPSetupDroppedItemVisuals();
	void BPOnItemPickedUp(class APlayerController** ByPC, class UPrimalItem** InventoryItem);
	void BPDroppedItemImpacted(struct FHitResult* ImpactHitInfo);
};

// 0x30 (0x8D0 - 0x8A0)
// Class ShooterGame.DroppedItemEgg
class ADroppedItemEgg : public ADroppedItem
{
public:
	class UClass*                                SpawnDinoEmitter;                                  // 0x8A0(0x8)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        IndoorsHypoThermalInsulation;                      // 0x8A8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        IndoorsHyperThermalInsulation;                     // 0x8AC(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        EggThermalInsulationTemperatureMultiplier;         // 0x8B0(0x4)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsEggTooHot : 1;                                  // Mask: 0x1, PropSize: 0x10x8B4(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsEggTooCold : 1;                                 // Mask: 0x2, PropSize: 0x10x8B4(0x1)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_122 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1E09[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class ABiomeZoneVolume*                      MyBiomeZone;                                       // 0x8B8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E0A[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ADroppedItemEgg* GetDefaultObj();

	void NetSpawnDinoEmitter();
};

// 0x0 (0x8A0 - 0x8A0)
// Class ShooterGame.DroppedItemLowQuality
class ADroppedItemLowQuality : public ADroppedItem
{
public:

	static class UClass* StaticClass();
	static class ADroppedItemLowQuality* GetDefaultObj();

};

// 0x10 (0x8B0 - 0x8A0)
// Class ShooterGame.DroppedItemMission
class ADroppedItemMission : public ADroppedItem
{
public:
	uint8                                        bPickupOnlyAllowMissionPlayers : 1;                // Mask: 0x1, PropSize: 0x10x8A0(0x1)(Edit, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowHUDMissionInfo : 1;                           // Mask: 0x2, PropSize: 0x10x8A0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_123 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1E0E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AMissionType*                          OwnerMission;                                      // 0x8A8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ADroppedItemMission* GetDefaultObj();

	void GetOwnerMission(class AMissionType** ReturnValue);
};

// 0x20 (0x8C0 - 0x8A0)
// Class ShooterGame.DroppedItemTorch
class ADroppedItemTorch : public ADroppedItemLowQuality
{
public:
	float                                        LifeTimeMeter;                                     // 0x8A0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        PassiveDurabilityCostPerInterval;                  // 0x8A4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        PassiveDurabilityCostInterval;                     // 0x8A8(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E12[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastDurabilityConsumptionTime;                     // 0x8B0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         FireIsOn;                                          // 0x8B8(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E13[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ADroppedItemTorch* GetDefaultObj();

	void OnRep_FireIsOn();
	void GetFlameColorIndex(int32* ReturnValue);
};

// 0x30 (0x360 - 0x330)
// Class ShooterGame.DyeItemSelector
class UDyeItemSelector : public UPrimalUserWidget
{
public:
	uint8                                        Pad_1E1A[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class FName                                  DyeDataListName;                                   // 0x340(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DyeSearchBoxName;                                  // 0x348(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E1B[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bAllowPaintingWithoutResources;                    // 0x358(0x1)(ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E1C[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDyeItemSelector* GetDefaultObj();

	void UpdateDyeSelector();
	void InitDyeSelector(class UPrimalUI* PrimalUI);
	class FText HandleOnSearchTextChanged();
	void GetDataListPanel(class UDataListPanel** ReturnValue);
};

// 0x48 (0x7A0 - 0x758)
// Class ShooterGame.DyeRegionButtonWidget
class UDyeRegionButtonWidget : public UPrimalUI
{
public:
	uint8                                        bSelectOnClicked : 1;                              // Mask: 0x1, PropSize: 0x10x758(0x1)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_124 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1E1D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          DefaultBackgroundColor;                            // 0x75C(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FLinearColor                          DefaultPreviewColor;                               // 0x76C(0x10)(Edit, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E1E[0x24];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDyeRegionButtonWidget* GetDefaultObj();

};

// 0x70 (0x558 - 0x4E8)
// Class ShooterGame.FadingDestructibleActor
class AFadingDestructibleActor : public ADestroyedMeshActor
{
public:
	uint8                                        bFadeOut : 1;                                      // Mask: 0x1, PropSize: 0x10x4E8(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bRotationalFall : 1;                               // Mask: 0x2, PropSize: 0x10x4E8(0x1)(Edit, ConstParm, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontUseRotationalFall : 1;                        // Mask: 0x4, PropSize: 0x10x4E8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSetupForFalling : 1;                         // Mask: 0x8, PropSize: 0x10x4E8(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_125 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1E2B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Fall_RotAccel;                                     // 0x4EC(0x4)(Edit, ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        Fall_RotAccelRate;                                 // 0x4F0(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E2C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Fall_Direction_Right;                              // 0x4F8(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        Fall_Spin_Rand;                                    // 0x510(0x4)(ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        Fall_SpinVelocity;                                 // 0x514(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        Fall_SpinAccel;                                    // 0x518(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        Fall_SpinAccelRate;                                // 0x51C(0x4)(ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        Fall_RotVelocity;                                  // 0x520(0x4)(Edit, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        FadeOutDelayTime;                                  // 0x524(0x4)(ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        FadeOutTime;                                       // 0x528(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsDoingDrop;                                      // 0x52C(0x1)(Edit, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E2D[0x23];                                    // Fixing Size After Last Property  > TateDumper <
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x550(0x8)(Edit, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)

	static class UClass* StaticClass();
	static class AFadingDestructibleActor* GetDefaultObj();

	void SetupFade();
	bool BPSetupForFalling(class UStaticMesh* InMesh, const struct FVector& HitDirection, float* Damage, float TotalHealth);
};

// 0x0 (0x68 - 0x68)
// Class ShooterGame.FallDamageType
class UFallDamageType : public UPrimalDamageType
{
public:

	static class UClass* StaticClass();
	static class UFallDamageType* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class ShooterGame.FixSourceTreeCommandlet
class UFixSourceTreeCommandlet : public UCommandlet
{
public:

	static class UClass* StaticClass();
	static class UFixSourceTreeCommandlet* GetDefaultObj();

};

// 0x0 (0x4C8 - 0x4C8)
// Class ShooterGame.FixupSplineActor
class AFixupSplineActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class AFixupSplineActor* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.FlockingBehavior
class UFlockingBehavior : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFlockingBehavior* GetDefaultObj();

	TArray<class UParticleSystemComponent*> UpdateFlockComponentLocations_ParticleBoids();
	TArray<class UStaticMeshComponent*> UpdateFlockComponentLocations();
	class USceneComponent* UpdateBoidComponentLocation();
	int32 TickPersistentFlockData(bool* bDrawDebug);
	struct FTransform SetAvoidanceAreaTransform();
	struct FTransform SetAvoidanceAreaArrayTransform();
	TArray<int32> MakeIndexArray();
	struct FVector IsPointInsideAvoidanceArea(bool* ReturnValue);
	struct FVector IsPointInsideAnyAvoidanceArea(bool* ReturnValue);
	float InterpVectorArrayToSphere(float* Radius);
	float InterpVectorArrayToRandom(float* MinRadius, float* MaxRadius);
	float InterpVectorArrayToGrid(struct FRotator* Rotation);
	float InterpVectorArrayToCircle(struct FRotator* Rotation, float* Radius);
	float InterpVectorArray(struct FRotator* Rotation);
	float InterpBoidArrayToSphere(struct FTransform* WorldTransform, float* Radius);
	float InterpBoidArrayToRandom(struct FTransform* WorldTransform, float* MinRadius, float* MaxRadius);
	float InterpBoidArrayToGrid(struct FTransform* WorldTransform, struct FRotator* Rotation);
	float InterpBoidArrayToCircle(struct FTransform* WorldTransform, float* Radius);
	float InterpBoidArray(struct FTransform* WorldTransform, struct FRotator* Rotation);
	bool GetFlockRadius(float* ReturnValue);
	TArray<int32> GetFlockMembersOfType();
	bool GetFlockCentroid(struct FVector* ReturnValue);
	struct FVector GetClosestSurfacePointOnAvoidanceArea(struct FVector* ReturnValue);
	struct FVector GetAvoidanceDirection(struct FVector* ReturnValue);
	struct FAvoidanceArea GetAvoidanceAreaWorldLocation(struct FVector* ReturnValue);
	float FlockTickSphereFormation(struct FTransform* WorldTransform, float* Radius);
	float FlockTickLeaders(struct FTransform* ParentTransform);
	int32 FlockTickGridFormation(struct FTransform* WorldTransform);
	struct FBoidBehavior FlockTickFollowersAndFreeAgents();
	float FlockTickCircleFormation(struct FTransform* WorldTransform);
	struct FVector2D FlockSetMaxSpeedAndForce();
	struct FVector2D FlockCreate(struct FTransform* WorldTransform);
	float DrawDebugAvoidanceArea();
	struct FBoidBehavior BoidTick();
	TArray<struct FBoid> BoidStopTargeting();
	struct FVector BoidSetTarget();
	TArray<struct FBoid> BoidSetAlive(bool* bIsAlive);
	bool BoidMoveTo(float* InterpSpeed);
	struct FAvoidanceArea AddAvoidanceAreaToFlockData();
};

// 0xA8 (0xD0 - 0x28)
// Class ShooterGame.FogOfWar
class UFogOfWar : public UObject
{
public:
	class FString                                MapName;                                           // 0x28(0x10)(BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class UTexture2D*                            Texture;                                           // 0x38(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst)
	uint8                                        bVisible : 1;                                      // Mask: 0x1, PropSize: 0x10x40(0x1)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_134 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1EDC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        InterpolationSpeed;                                // 0x44(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        SizeX;                                             // 0x48(0x4)(Edit, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference)
	int32                                        SizeY;                                             // 0x4C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        LatitudeOrigin;                                    // 0x50(0x4)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LatitudeScale;                                     // 0x54(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LongitudeOrigin;                                   // 0x58(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LongitudeScale;                                    // 0x5C(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1EDE[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            brushTexture;                                      // 0x68(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference)
	TArray<uint8>                                VisibilityBuffer;                                  // 0x70(0x10)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<uint8>                                BrushTextureData;                                  // 0x80(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1EE1[0x40];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UFogOfWar* GetDefaultObj();

	void UpdateTexture();
	float Update(int32 X, int32 Y);
};

// 0x38 (0x368 - 0x330)
// Class ShooterGame.GamepadButtonLegendWidget
class UGamepadButtonLegendWidget : public UPrimalUserWidget
{
public:
	class FText                                  ButtonDescription;                                 // 0x330(0x18)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ButtonIcon;                                        // 0x348(0x8)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ButtonIconImageName;                               // 0x350(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1EE6[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UGamepadButtonLegendWidget* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class ShooterGame.GenericDataListEntry
class UGenericDataListEntry : public UObject
{
public:
	uint8                                        Pad_1EEA[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	class FString                                Description;                                       // 0x50(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, DuplicateTransient)
	int32                                        CustomData;                                        // 0x60(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1EED[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                CustomString;                                      // 0x68(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EntryIcon;                                         // 0x78(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    EntryMaterial;                                     // 0x80(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsEnabled;                                        // 0x88(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, EditConst)
	uint8                                        Pad_1EF1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ExplicitEntryIndexType;                            // 0x8C(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UGenericDataListEntry* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class ShooterGame.GlobalBoneModifiers
class UGlobalBoneModifiers : public UObject
{
public:
	class FString                                Description;                                       // 0x28(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, DuplicateTransient)
	TArray<struct FBoneModifierNamed>            BoneModifiers;                                     // 0x38(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UGlobalBoneModifiers* GetDefaultObj();

};

// 0x30 (0x510 - 0x4E0)
// Class ShooterGame.HazardTrigger
class AHazardTrigger : public ABaseBoxTrigger
{
public:
	struct FVector                               Bounds;                                            // 0x4E0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsActive;                                         // 0x4F8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1EFD[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastActivationTime;                                // 0x500(0x8)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bConformToTerrain;                                 // 0x508(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1EFE[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AHazardTrigger* GetDefaultObj();

	void OnDeactivated();
	void OnCharacterExit(class APrimalCharacter** Character);
	void OnCharacterEnter(class APrimalCharacter** Character);
	void OnActivated();
	bool FindFloor(const struct FVector& TestLocation, bool* ReturnValue);
	void Deactivate();
	bool ClientActivation();
	void CanActivate(bool* ReturnValue);
	void Activate();
};

// 0xE8 (0x5F8 - 0x510)
// Class ShooterGame.HazardTrigger_Slide
class AHazardTrigger_Slide : public AHazardTrigger
{
public:
	class UAudioComponent*                       SoundToPlay;                                       // 0x510(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	TArray<class USplineComponent*>              Splines;                                           // 0x518(0x10)(ConstParm, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class UParticleSystem*>               SlideFX;                                           // 0x528(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        FinalEmitter;                                      // 0x538(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        WarningEmitter;                                    // 0x548(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ImpactEmitter;                                     // 0x558(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, Transient, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            SlideSound;                                        // 0x568(0x8)(Net, EditFixedSize, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        StructureDamage;                                   // 0x570(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F03[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                StructureDamageType;                               // 0x578(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SplineSeparation;                                  // 0x580(0x4)(Edit, ConstParm, EditFixedSize, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        MinTimeBetweenActivations;                         // 0x584(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SlideSpeed;                                        // 0x588(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        WaveWidth;                                         // 0x58C(0x4)(Edit, ExportObject, Net, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        Impulse;                                           // 0x590(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, EditConst, SubobjectReference)
	float                                        MinWarningInterval;                                // 0x594(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxWarningInterval;                                // 0x598(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ActivationChance;                                  // 0x59C(0x4)(BlueprintVisible, ExportObject, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ActivationIncrement;                               // 0x5A0(0x4)(Edit, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        MinProjectileInterval;                             // 0x5A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxProjectileInterval;                             // 0x5A8(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ImpulseVelocityLimit;                              // 0x5AC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ProjectileClass;                                   // 0x5B0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        WarningTimer;                                      // 0x5B8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentActivationChance;                           // 0x5BC(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ProjectileTimer;                                   // 0x5C0(0x4)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F06[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSlideData>                    SlideComponents;                                   // 0x5C8(0x10)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       SlidePositions;                                    // 0x5D8(0x10)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F07[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AHazardTrigger_Slide* GetDefaultObj();

	void SpawnWarningFX();
	struct FVector SpawnProjectile(struct FVector* Location);
	void RebuildSplines();
};

// 0x48 (0x70 - 0x28)
// Class ShooterGame.HexagonTradableOption
class UHexagonTradableOption : public UObject
{
public:
	class UClass*                                ItemClass;                                         // 0x28(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Transient, InstancedReference, SubobjectReference)
	class FString                                OverrideName;                                      // 0x30(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        Quantity;                                          // 0x40(0x4)(Edit, Net, EditFixedSize, Transient, InstancedReference, SubobjectReference)
	int32                                        ItemCost;                                          // 0x44(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideTradeAction : 1;                          // Mask: 0x1, PropSize: 0x10x48(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAllowedToBePurchased : 1;                    // Mask: 0x2, PropSize: 0x10x48(0x1)(Edit, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetItemCost : 1;                             // Mask: 0x4, PropSize: 0x10x48(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsEngramTradeOption : 1;                          // Mask: 0x8, PropSize: 0x10x48(0x1)(BlueprintVisible, ExportObject, Net, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_136 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1F11[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                OverrideDescription;                               // 0x50(0x10)(Edit, Net, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        OverwrittenRecievedItemCount;                      // 0x60(0x4)(ConstParm, BlueprintReadOnly, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxItemPurchaseTimes;                              // 0x64(0x4)(Edit, ConstParm, BlueprintVisible, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F12[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UHexagonTradableOption* GetDefaultObj();

	void GetItemCost(class AShooterPlayerController** PlayerController, int32* ReturnValue);
	void BPOverrideTradeAction(class AShooterPlayerController** PlayerController, bool* ReturnValue);
	void BPGetItemCost(class AShooterPlayerController** PlayerController, int32* ReturnValue);
	void BPAllowedToBePurchased(class AShooterPlayerController** PlayerController, bool* ReturnValue);
	void AllowedToBePurchased(class AShooterPlayerController** PlayerController, bool* ReturnValue);
};

// 0x0 (0x4C8 - 0x4C8)
// Class ShooterGame.HexagonVFXActor
class AHexagonVFXActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class AHexagonVFXActor* GetDefaultObj();

	float SetVolume();
	void HoverThenAttract();
	void BeginMovingDirectlyToActor();
};

// 0x258 (0x720 - 0x4C8)
// Class ShooterGame.HibernationManager
class AHibernationManager : public AActor
{
public:
	uint8                                        Pad_1F14[0x258];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AHibernationManager* GetDefaultObj();

};

// 0x58 (0x520 - 0x4C8)
// Class ShooterGame.HordeCrateManager
class AHordeCrateManager : public AActor
{
public:
	bool                                         bIsEnabled;                                        // 0x4C8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, EditConst)
	bool                                         bUseBPForceStartHorde;                             // 0x4C9(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F21[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinDelayBeforeInitialEvent;                        // 0x4CC(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDelayBeforeInitialEvent;                        // 0x4D0(0x4)(EditFixedSize, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        MinEventCheckInterval;                             // 0x4D4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxEventCheckInterval;                             // 0x4D8(0x4)(ExportObject, Net, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        MinDistanceFromOtherEvent;                         // 0x4DC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHordeCrateDifficultyLevel>    CrateDifficultyLevels;                             // 0x4E0(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHordeCrateDifficultyLevel>    ElementNodeDifficultyLevels;                       // 0x4F0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        ActiveSpawnZones;                                  // 0x500(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHordeCrateEvent>              ActiveEvents;                                      // 0x510(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Transient, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AHordeCrateManager* GetDefaultObj();

	class UClass* ForceStartHorde(class AActor* SpawnNetwork, int32 DifficultyIndex);
	class UClass* BPForceStartHorde(class AActor* SpawnNetwork, int32 DifficultyIndex);
};

// 0x58 (0x930 - 0x8D8)
// Class ShooterGame.HostSessionEntryButton
class UHostSessionEntryButton : public UDataListEntryButton
{
public:
	uint8                                        bIsCustom : 1;                                     // Mask: 0x1, PropSize: 0x10x8D8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        bIsProcedural : 1;                                 // Mask: 0x2, PropSize: 0x10x8D8(0x1)(Edit, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_137 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1F23[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DisplayName;                                       // 0x8E0(0x10)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Transient)
	bool                                         bCenterDisplayName;                                // 0x8F0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F24[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                MapName;                                           // 0x8F8(0x10)(BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class FString                                ModName;                                           // 0x908(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	class FString                                ModPath;                                           // 0x918(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint64                                       ModItemId;                                         // 0x928(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UHostSessionEntryButton* GetDefaultObj();

};

// 0x410 (0xB68 - 0x758)
// Class ShooterGame.HUDActiveMissionWidget
class UHUDActiveMissionWidget : public UPrimalUI
{
public:
	uint8                                        Pad_1F2D[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          ActiveMissionVisibilityWidgetNames;                // 0x760(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionNameTextBlockName;                          // 0x770(0x8)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionDifficultyTextBlockName;                    // 0x778(0x8)(ConstParm, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionDescriptionTextBlockName;                   // 0x780(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ObjectiveTimeValueTextBlockName;                   // 0x788(0x8)(Net, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ObjectiveTimeLabelTextBlockName;                   // 0x790(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ObjectiveTimePanelName;                            // 0x798(0x8)(Edit, ConstParm, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ObjectiveTimeProgressBarName;                      // 0x7A0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionDifficultyPanelName;                        // 0x7A8(0x8)(ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PhaseRequirementContainerName;                     // 0x7B0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          MissionTimeRemainingDefaultTextColor;              // 0x7B8(0x10)(Edit, ConstParm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          MissionStatTrackerVisibilityWidgetNames;           // 0x7C8(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionStatTrackerContainerName;                   // 0x7D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PhaseRequirementWidgetClass;                       // 0x7E0(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PhaseBackgroundBorderWidgetName;                   // 0x7E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PhaseRichTextBlockName;                            // 0x7F0(0x8)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PhaseDescriptionBlockName;                         // 0x7F8(0x8)(Edit, ConstParm, Net, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PhaseDescriptionPrefixBlockName;                   // 0x800(0x8)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PhaseDescriptionSuffixBlockName;                   // 0x808(0x8)(Edit, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PhaseValueContainerName;                           // 0x810(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PhaseValueTextBlockName;                           // 0x818(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PhaseValueSlashTextBlockName;                      // 0x820(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PhaseMaxValueTextBlockName;                        // 0x828(0x8)(ConstParm, ExportObject, EditFixedSize, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PhaseProgressContainerName;                        // 0x830(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PhaseProgressBarName;                              // 0x838(0x8)(Edit, BlueprintReadOnly, Net, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          PhaseNormalBackgroundColor;                        // 0x840(0x10)(Edit, ConstParm, Net, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          PhaseCompleteBackgroundColor;                      // 0x850(0x10)(BlueprintVisible, BlueprintReadOnly, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionAlertFlyoutContainerName;                   // 0x860(0x8)(Edit, ConstParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionAlertEntryContainerName;                    // 0x868(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionAlertTitleTextBlockName;                    // 0x870(0x8)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionAlertBorderName;                            // 0x878(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TopMissionAlertFlyoutContainerName;                // 0x880(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TopMissionAlertEntryContainerName;                 // 0x888(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TopMissionAlertTitleTextBlockName;                 // 0x890(0x8)(Edit, Net, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TopMissionAlertBorderName;                         // 0x898(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          MissionAlertColor_Negative;                        // 0x8A0(0x10)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          MissionAlertColor_Neutral;                         // 0x8B0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          MissionAlertColor_Positive;                        // 0x8C0(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                AlertEntryWidgetClass;                             // 0x8D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        AlertFlyoutAnimationDuration;                      // 0x8D8(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class ESimpleCurve                      AlertFlyoutCurve;                                  // 0x8DC(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F2F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             AlertOffscreenTransform;                           // 0x8E0(0x10)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             TopAlertOffscreenTransform;                        // 0x8F0(0x10)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            DefaultPositiveMissionAlertSound;                  // 0x900(0x8)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            DefaultNeutralMissionAlertSound;                   // 0x908(0x8)(ExportObject, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            DefaultNegativeMissionAlertSound;                  // 0x910(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AlertEntryIconContainerName;                       // 0x918(0x8)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AlertEntryIconName;                                // 0x920(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AlertCountTextBlockName;                           // 0x928(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AlertContentTextBlockName;                         // 0x930(0x8)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RacePanelName;                                     // 0x938(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RacePositionTextBlockName;                         // 0x940(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RaceMaxPositionTextBlockName;                      // 0x948(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionTimeValueTextBlockName;                     // 0x950(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  BestRaceTimeName;                                  // 0x958(0x8)(Edit, BlueprintVisible, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          ObjectiveTimeRemainingProgressBarColor;            // 0x960(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          LowObjectiveTimeRemainingProgressBarColor;         // 0x970(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          PhaseReqTextColor_Negative;                        // 0x980(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          PhaseReqTextColor_Neutral;                         // 0x990(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          PhaseReqTextColor_Positive;                        // 0x9A0(0x10)(Edit, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          PhaseReqProgressColor_Negative;                    // 0x9B0(0x10)(Edit, Net, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          PhaseReqProgressColor_Neutral;                     // 0x9C0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          PhaseReqProgressColor_Positive;                    // 0x9D0(0x10)(Edit, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        OpacityForSlashAndMaxValueText;                    // 0x9E0(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F32[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                WorldBuffEffectListEntry_WidgetType;               // 0x9E8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F33[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UTextBlock*                            BestRaceTimeTextBlock;                             // 0x9F8(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F34[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxWorldBuffsDisplayedAtOnce;                      // 0xA0C(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F35[0x120];                                   // Fixing Size After Last Property  > TateDumper <
	class AMissionType*                          ActiveMission;                                     // 0xB30(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class APrimalBuff_MissionData*               MissionData;                                       // 0xB38(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UUserWidget*                           ActiveMissionWidget;                               // 0xB40(0x8)(Edit, ExportObject, Net, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UCanvasPanel*                          CustomStatusCanvas;                                // 0xB48(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F37[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UHUDActiveMissionWidget* GetDefaultObj();

	void ShowMissionAlert(enum class EMissionAlertType* AlertType, class FString* AlertTitle, TArray<struct FMissionAlertEntry>* NewEntries, bool* bInstant, bool* bFlyoutFromTop);
	void SetRacePositionText(class FText* PositionText);
	void SetRacePanelVisibility(enum class ESlateVisibility* NewVisibility);
	void IsMissionAlertVisible(bool* bIsTop, bool* ReturnValue);
	void HideMissionAlert(bool* bInstant, bool* bHideTop);
	void HaveActiveMission(bool* ReturnValue);
	void GetActiveMissionWidget(class APlayerController** PlayerController, class UHUDActiveMissionWidget** ReturnValue);
};

// 0xC8 (0x820 - 0x758)
// Class ShooterGame.HUDCustomStatusWidget
class UHUDCustomStatusWidget : public UPrimalUI
{
public:
	uint8                                        Pad_1F9D[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  CanvasPanelName;                                   // 0x760(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TextWidgetClass;                                   // 0x768(0x8)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TitleWidgetTextBlockName;                          // 0x770(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TextWidgetTextBlockName;                           // 0x778(0x8)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CustomTextContainerName;                           // 0x780(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ProgressWidgetClass;                               // 0x788(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ProgressWidgetProgressName;                        // 0x790(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ImageWidgetClass;                                  // 0x798(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ImageBackgroundWidgetName;                         // 0x7A0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  IconWidgetName;                                    // 0x7A8(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UCanvasPanel*                          CustomStatusCanvas;                                // 0x7B0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FA5[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UUserWidget*>                   WidgetRefs;                                        // 0x808(0x10)(Edit, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FA6[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UHUDCustomStatusWidget* GetDefaultObj();

	bool SetUseGamepadIcon();
	bool SetHUDElementVisibility();
	class FString SetHUDElementTitle();
	float SetHUDElementTextScale();
	struct FMargin SetHUDElementTextPadding();
	struct FLinearColor SetHUDElementTextColor();
	enum class ETextJustify SetHUDElementTextAlignment_Title();
	enum class ETextJustify SetHUDElementTextAlignment_Label();
	struct FVector2D SetHUDElementSize();
	struct FVector2D SetHUDElementScale();
	struct FLinearColor SetHUDElementProgressColor();
	struct FVector2D SetHUDElementProgressBarScale();
	struct FMargin SetHUDElementProgressBarPadding();
	float SetHUDElementProgress();
	struct FHUDElement SetHUDElementLocation(struct FVector2D* NewLocation);
	bool SetHUDElementLabelNumeric(int32* MinFractionalDigits, int32* MaxFractionalDigits);
	class FString SetHUDElementLabel();
	bool SetHUDElementImage();
	struct FVector2D SetHUDElementIconScale();
	float SetHUDElementIconRotation();
	struct FMargin SetHUDElementIconPadding();
	struct FLinearColor SetHUDElementIconColor();
	struct FLinearColor SetHUDElementBackgroundImageColor();
	struct FAnchors SetHUDElementAnchor();
	struct FHUDElement IsHUDElementVisible(bool* ReturnValue);
	void GetHUDElementRootWidget(class APlayerController** PlayerController, class UHUDCustomStatusWidget** ReturnValue);
};

// 0xE0 (0x410 - 0x330)
// Class ShooterGame.HUDElementBarWidget
class UHUDElementBarWidget : public UPrimalUserWidget
{
public:
	uint8                                        Pad_1FAF[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                HatClass;                                          // 0x338(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ShirtClass;                                        // 0x340(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                GlovesClass;                                       // 0x348(0x8)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PantsClass;                                        // 0x350(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                bootsClass;                                        // 0x358(0x8)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ShoulderCannonClass;                               // 0x360(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HelmetBarName;                                     // 0x368(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ShirtBarName;                                      // 0x370(0x8)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  GlovesBarName;                                     // 0x378(0x8)(Edit, ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PantsBarName;                                      // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  BootsBarName;                                      // 0x388(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  BoostIconName;                                     // 0x390(0x8)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ShoulderCannonBarName;                             // 0x398(0x8)(Edit, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        IconsBottomOffset;                                 // 0x3A0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        IconSeparation;                                    // 0x3A4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bBoostIconHidden;                                  // 0x3A8(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FB2[0x4F];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        HelmetMaxAmmo;                                     // 0x3F8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ShirtMaxAmmo;                                      // 0x3FC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        GlovesMaxAmmo;                                     // 0x400(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        PantsMaxAmmo;                                      // 0x404(0x4)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        bootsMaxAmmo;                                      // 0x408(0x4)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ShoulderMaxAmmo;                                   // 0x40C(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UHUDElementBarWidget* GetDefaultObj();

	void UpdateBoostIconVisibility();
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.HUDInterface
class IHUDInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IHUDInterface* GetDefaultObj();

};

// 0x90 (0x820 - 0x790)
// Class ShooterGame.HUDOVerlayWidget
class UHUDOVerlayWidget : public UCustomCanvasWidget
{
public:
	float                                        NotificationsYOffset;                              // 0x790(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        NotificationsXOffset;                              // 0x794(0x4)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsUnderlay;                                       // 0x798(0x1)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FBA[0x87];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UHUDOVerlayWidget* GetDefaultObj();

};

// 0x28 (0x780 - 0x758)
// Class ShooterGame.HUDPingsContainer
class UHUDPingsContainer : public UPrimalUI
{
public:
	class FName                                  PingContainerCanvasName;                           // 0x758(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PingWidgetClass;                                   // 0x760(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UCanvasPanel*                          PingContainerCanvas;                               // 0x768(0x8)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class UUserWidget*>                   SpawnedPingWidgets;                                // 0x770(0x10)(Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UHUDPingsContainer* GetDefaultObj();

};

// 0xE0 (0x838 - 0x758)
// Class ShooterGame.HUDPingWidget
class UHUDPingWidget : public UPrimalUI
{
public:
	class FName                                  PingPlayerNameTextBlockName;                       // 0x758(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PingRespondingPlayerNameTextBlockName;             // 0x760(0x8)(ConstParm, BlueprintVisible, Net, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PingIconName;                                      // 0x768(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PingSwitcherName;                                  // 0x770(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PingOffScreenArrowName;                            // 0x778(0x8)(ConstParm, ExportObject, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PingOffScreenIconName;                             // 0x780(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PingOffScreenArrowBackgroundName;                  // 0x788(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        WidgetRemoveDuration;                              // 0x790(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FD7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPingData                             WidgetPingData;                                    // 0x798(0x60)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FD8[0x38];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bIsHovered : 1;                                    // Mask: 0x1, PropSize: 0x10x830(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1FD9[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UHUDPingWidget* GetDefaultObj();

	struct FPingData UpdateWidgetPingData(bool* ReturnValue);
	void RemovePingWidget();
	void OnPingWidgetRemoved();
	void OnPingWidgetCreated();
	class AShooterCharacter* OnPingUnhovered();
	class AShooterCharacter* OnPingResponseReceived();
	class AShooterCharacter* OnPingHovered();
	struct FPingData IsPingValid(bool* ReturnValue);
	struct FPingData InitializePingWidget();
	void HasValidPingData(bool* ReturnValue);
	struct FPingData GetPingWorldLocation(struct FVector* ReturnValue);
	void GetPingData(struct FPingData* ReturnValue);
};

// 0x328 (0xA80 - 0x758)
// Class ShooterGame.HUDPointOfInterestWidget
class UHUDPointOfInterestWidget : public UPrimalUI
{
public:
	class FName                                  OuterContainerName;                                // 0x758(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PointTitleTextBlockName;                           // 0x760(0x8)(BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PointDescTextBlockName;                            // 0x768(0x8)(BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PointIconPanelName;                                // 0x770(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PointIconName;                                     // 0x778(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PointSwitcherName;                                 // 0x780(0x8)(ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PointOffScreenArrowName;                           // 0x788(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PointOffScreenIconName;                            // 0x790(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  OnScreenPrimaryPanelName;                          // 0x798(0x8)(ConstParm, Net, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  OffScreenPrimaryPanelName;                         // 0x7A0(0x8)(BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  OnScreenIndicatorImageName;                        // 0x7A8(0x8)(ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  OffScreenIndicatorImageName;                       // 0x7B0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  OnScreenProgressPanelName;                         // 0x7B8(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  OnScreenProgressLabelName;                         // 0x7C0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  OffScreenProgressPanelName;                        // 0x7C8(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  OffScreenProgressLabelName;                        // 0x7D0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        WidgetTitleHiddenIconRenderOffset_Y;               // 0x7D8(0x4)(BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2009[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPointOfInterestData                  WidgetPointOfInterestData;                         // 0x7E0(0x1E0)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FallbackIcon;                                      // 0x9C0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            DefaultLocationAddedSound;                         // 0x9C8(0x8)(Edit, ExportObject, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            DefaultLocationReachedSound;                       // 0x9D0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsPulsing : 1;                                    // Mask: 0x1, PropSize: 0x10x9D8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_138 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_200D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OffScreenWidgetScale;                              // 0x9DC(0x4)(Edit, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_200E[0xA0];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UHUDPointOfInterestWidget* GetDefaultObj();

	void UpdateWidgetPointOfInterestData(const struct FPointOfInterestData& WithPointData, bool* ReturnValue);
	void SetDismissOverlay(bool Visible);
	void IsPointOfInterestValid(const struct FPointOfInterestData& ForPointData, bool* ReturnValue);
	void IsPointOfInterestInitialized(const struct FPointOfInterestData& ForPointData, bool* ReturnValue);
	void InitializePointOfInterestWidget(const struct FPointOfInterestData& FromPointData);
	void HasValidPointOfInterestData(bool* ReturnValue);
	void GetPointOfInterestWorldRotation(const struct FPointOfInterestData& FromPointData, struct FRotator* ReturnValue);
	void GetPointOfInterestWorldLocation(const struct FPointOfInterestData& FromPointData, struct FVector* ReturnValue);
	void GetPointOfInterestTransform(const struct FPointOfInterestData& FromPointData, struct FTransform* ReturnValue);
	void GetPointOfInterestReachedSound(class USoundBase** ReturnValue);
	void GetPointOfInterestData(struct FPointOfInterestData* ReturnValue);
	void GetPointOfInterestCosmeticActorTransform(const struct FPointOfInterestData& FromPointData, struct FTransform* ReturnValue);
	void GetPointOfInterestAddedSound(class USoundBase** ReturnValue);
	void DestroyPointOfInterestWidget();
	class AActor* CanActorViewPointOfInterest(const struct FPointOfInterestData& CanViewPointData, bool* ReturnValue);
};

// 0x48 (0x7A0 - 0x758)
// Class ShooterGame.HUDPointsOfInterestContainer
class UHUDPointsOfInterestContainer : public UPrimalUI
{
public:
	class FName                                  PointContainerCanvasName;                          // 0x758(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PointOfInterestWidgetClass;                        // 0x760(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TamingListEntryTemplate;                           // 0x768(0x8)(Edit, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TrackedDinoListEntryTemplate;                      // 0x770(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UCanvasPanel*                          PointContainerCanvas;                              // 0x778(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class UUserWidget*>                   SpawnedPointWidgets;                               // 0x780(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTrackedDinoListEntryWidget*           TamingPOITooltip;                                  // 0x790(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTrackedDinoListEntryWidget*           TrackedDinoPOITooltip;                             // 0x798(0x8)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UHUDPointsOfInterestContainer* GetDefaultObj();

};

// 0x160 (0x490 - 0x330)
// Class ShooterGame.HUDStatusBarsWidget
class UHUDStatusBarsWidget : public UPrimalUserWidget
{
public:
	uint8                                        Pad_201B[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                HealthBarName;                                     // 0x338(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FString                                StaminaBarName;                                    // 0x348(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FString                                OxygenBarName;                                     // 0x358(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FString                                FoodBarName;                                       // 0x368(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FString                                WaterBarName;                                      // 0x378(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FString                                WeightBarName;                                     // 0x388(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FString                                TorpidityBarName;                                  // 0x398(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  XPBarName;                                         // 0x3A8(0x8)(ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  IndoorsImageName;                                  // 0x3B0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HarvestableImageName;                              // 0x3B8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CharacterLabelName;                                // 0x3C0(0x8)(ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            UsableHarvestableAllowed;                          // 0x3C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            HarvestableAllowed;                                // 0x3D0(0x8)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            HarvestablePrevented;                              // 0x3D8(0x8)(ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            UsableHarvestablePrevented;                        // 0x3E0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          PoopFoodColor;                                     // 0x3E8(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          RegularFoodColor;                                  // 0x3F8(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_201D[0x88];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UHUDStatusBarsWidget* GetDefaultObj();

};

// 0x710 (0x900 - 0x1F0)
// Class ShooterGame.InputKeyDisplayWidget
class UInputKeyDisplayWidget : public UWidget
{
public:
	struct FTextBlockStyle                       KeyTextStyle;                                      // 0x1F0(0x340)(BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FTextBlockStyle                       SeparatorTextStyle;                                // 0x530(0x340)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             ButtonImageSize;                                   // 0x870(0x10)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FString                                TextPrefix;                                        // 0x880(0x10)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FString                                TextSuffix;                                        // 0x890(0x10)(Edit, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2021[0x60];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInputKeyDisplayWidget* GetDefaultObj();

};

// 0x328 (0xA80 - 0x758)
// Class ShooterGame.InventoryArkCreaturesPanel
class UInventoryArkCreaturesPanel : public UPrimalUI
{
public:
	uint8                                        Pad_2022[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  UploadedCreatureListName;                          // 0x75C(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LocalCreatureListName;                             // 0x764(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  UploadCreatureButtonName;                          // 0x76C(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DownloadCreatureButtonName;                        // 0x774(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2023[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DinoSlotButtonTemplate;                            // 0x780(0x8)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2024[0x2F8];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInventoryArkCreaturesPanel* GetDefaultObj();

	void UploadedDinoSlotButtonSelected(class UWidget* TheWidget);
	void LocalDinoSlotButtonSelected(class UWidget* TheWidget);
};

// 0x80 (0x7D8 - 0x758)
// Class ShooterGame.InventoryDinoAncestryPanel
class UInventoryDinoAncestryPanel : public UPrimalUI
{
public:
	class UClass*                                AncestryEntryWidgetTemplate;                       // 0x758(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2025[0x78];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInventoryDinoAncestryPanel* GetDefaultObj();

};

// 0x0 (0x3B0 - 0x3B0)
// Class ShooterGame.InventoryPanelContainerWidget
class UInventoryPanelContainerWidget : public UBorder
{
public:

	static class UClass* StaticClass();
	static class UInventoryPanelContainerWidget* GetDefaultObj();

};

// 0x2E0 (0xA38 - 0x758)
// Class ShooterGame.InventoryPanelWidget
class UInventoryPanelWidget : public UPrimalUI
{
public:
	class FName                                  TabBgSwitcherName;                                 // 0x758(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  InventoryButtonName;                               // 0x760(0x8)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SkinsButtonName;                                   // 0x768(0x8)(ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CraftingButtonName;                                // 0x770(0x8)(ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CreaturesButtonName;                               // 0x778(0x8)(Edit, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  InventoryEnabledEffectName;                        // 0x780(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SkinsEnabledEffectName;                            // 0x788(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CraftingEnabledEffectName;                         // 0x790(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SearchTextBoxName;                                 // 0x798(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TooltipToggleButtonName;                           // 0x7A0(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SortMenuButtonName;                                // 0x7A8(0x8)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SortMenuAnchorName;                                // 0x7B0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ShowAllButtonName;                                 // 0x7B8(0x8)(BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ShowEngramsButtonName;                             // 0x7C0(0x8)(BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ShowEngramsBoxName;                                // 0x7C8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TransferAllButtonName;                             // 0x7D0(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DropAllButtonName;                                 // 0x7D8(0x8)(BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NewFolderButtonName;                               // 0x7E0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DataListSwitcherName;                              // 0x7E8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  InventoryDataListName;                             // 0x7F0(0x8)(ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SkinDataListName;                                  // 0x7F8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CraftingDataListName;                              // 0x800(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CraftingQueueHeaderBoxName;                        // 0x808(0x8)(EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CraftingQueueItemsBoxName;                         // 0x810(0x8)(ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          CraftQueueItemButtonNames;                         // 0x818(0x10)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HeaderBoxName;                                     // 0x828(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  InventoryTabLabelName;                             // 0x830(0x8)(BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CraftingTabLabelName;                              // 0x838(0x8)(Edit, BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ArkCreaturesPanelName;                             // 0x840(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ClearCraftingQueueButtonName;                      // 0x848(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AutoStackButtonName;                               // 0x850(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ReceivingItemsLabelName;                           // 0x858(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextActiveColor;                           // 0x860(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextInactiveColor;                         // 0x870(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             DefaultWidgetSize;                                 // 0x880(0x10)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        DefaultWidgetWrapNum;                              // 0x890(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_202E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             HandheldWidgetSize;                                // 0x898(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        HandheldWidgetWrapNum;                             // 0x8A8(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2030[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsRemoteInventory;                                // 0x8C0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2031[0x177];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInventoryPanelWidget* GetDefaultObj();

	void UpdateOrderCombo();
	class FText SearchTextChanged();
	enum class ESelectInfo OnOrderTypeSelected();
	void OnGetSortContextMenuContent(class UWidget** ReturnValue);
	void OnGamepadPressSortIcon();
	enum class ESelectInfo OnFilterTypeSelected();
};

// 0x10 (0x768 - 0x758)
// Class ShooterGame.InventoryQuickSlotsPanel
class UInventoryQuickSlotsPanel : public UPrimalUI
{
public:
	uint8                                        Pad_2034[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInventoryQuickSlotsPanel* GetDefaultObj();

};

// 0xE8 (0x840 - 0x758)
// Class ShooterGame.InventoryStatsPanel
class UInventoryStatsPanel : public UPrimalUI
{
public:
	class FName                                  TabBgSwitcherName;                                 // 0x758(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PlayerStatsTabButtonName;                          // 0x760(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RemoteStatsTabButtonName;                          // 0x768(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RemoteStatsTabTextBlockName;                       // 0x770(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PlayerEnabledEffectName;                           // 0x778(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RemoteEnabledEffectName;                           // 0x780(0x8)(ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StatsWidgetSwitcherName;                           // 0x788(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PlayerStatsPanelName;                              // 0x790(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HeaderPanelName;                                   // 0x798(0x8)(Edit, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RootSizeBoxName;                                   // 0x7A0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                CharacterStatsPanelUITemplate;                     // 0x7A8(0x8)(ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                StructureStatsPanelUITemplate;                     // 0x7B0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ObeliskStatsPanelUITemplate;                       // 0x7B8(0x8)(Edit, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextActiveColor;                           // 0x7C0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextInactiveColor;                         // 0x7D0(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_203D[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	class UStatsPanelWidget*                     RemoteStatsPanel;                                  // 0x838(0x8)(EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInventoryStatsPanel* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class ShooterGame.JsonObject
class UJsonObject : public UObject
{
public:
	uint8                                        Pad_210B[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UJsonObject* GetDefaultObj();

	class FString SetVectorField(const class FString& Key, const struct FVector& Value);
	class FString SetVectorArrayField(const class FString& Key, const TArray<struct FVector>& Value);
	class FString SetStructField(const class FString& Key, const struct FPropertyThunkWrapper& Value);
	class FString SetStringField(const class FString& Key, const class FString& Value);
	class FString SetStringArrayField(const class FString& Key, const TArray<class FString>& Value);
	class FString SetRotatorField(const class FString& Key, const struct FRotator& Value);
	class FString SetRotatorArrayField(const class FString& Key, const TArray<struct FRotator>& Value);
	class FString SetNullField(const class FString& Key);
	class FString SetJsonObjectField(const class FString& Key, class UJsonObject** Object);
	class FString SetJsonObjectArrayField(const class FString& Key, const TArray<class UJsonObject*>& Value);
	class FString SetIntField(const class FString& Key, int32 Value);
	class FString SetIntArrayField(const class FString& Key, const TArray<int32>& Value);
	class FString SetFloatField(const class FString& Key, float Value);
	class FString SetFloatArrayField(const class FString& Key, const TArray<float>& Value);
	class FString SetDoubleField(const class FString& Key, double Value);
	class FString SetDoubleArrayField(const class FString& Key, const TArray<double>& Value);
	class FString SetByteField(const class FString& Key, uint8 Value);
	class FString SetByteArrayField(const class FString& Key, const TArray<uint8>& Value);
	class FString SetBoolField(const class FString& Key, bool Value);
	class FString SetBoolArrayField(const class FString& Key, const TArray<bool>& Value);
	void JsonSerialize(class FString* ReturnValue);
	class UObject* JsonDeserialize(class UJsonObject** ReturnValue);
	class FString IsNullField(const class FString& Key, bool* ReturnValue);
	class FString GetVectorField(const class FString& Key, bool* ReturnValue);
	class FString GetVectorArrayField(const class FString& Key, bool* ReturnValue);
	class FString GetStructField(const class FString& Key, bool* ReturnValue);
	class FString GetStringField(const class FString& Key, bool* ReturnValue);
	class FString GetStringArrayField(const class FString& Key, bool* ReturnValue);
	class FString GetRotatorField(const class FString& Key, bool* ReturnValue);
	class FString GetRotatorArrayField(const class FString& Key, bool* ReturnValue);
	class FString GetKeys(const class FString& Key, bool* ReturnValue);
	class FString GetJsonObjectField(const class FString& Key, bool* ReturnValue);
	class FString GetJsonObjectArrayField(const class FString& Key, bool* ReturnValue);
	class FString GetIntField(const class FString& Key, bool* ReturnValue);
	class FString GetIntArrayField(const class FString& Key, bool* ReturnValue);
	class FString GetFloatField(const class FString& Key, bool* ReturnValue);
	class FString GetFloatArrayField(const class FString& Key, bool* ReturnValue);
	class FString GetDoubleField(const class FString& Key, bool* ReturnValue);
	class FString GetDoubleArrayField(const class FString& Key, bool* ReturnValue);
	class FString GetByteField(const class FString& Key, bool* ReturnValue);
	class FString GetByteArrayField(const class FString& Key, bool* ReturnValue);
	class FString GetBoolField(const class FString& Key, bool* ReturnValue);
	class FString GetBoolArrayField(const class FString& Key, bool* ReturnValue);
	class UObject* CreateJsonObject(class UJsonObject** ReturnValue);
	class UJsonObject* CompareJsonValues(bool* ReturnValue);
};

// 0x40 (0x5E0 - 0x5A0)
// Class ShooterGame.KeyInputWidget
class UKeyInputWidget : public UEditableText
{
public:
	uint8                                        Pad_2119[0x40];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UKeyInputWidget* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class ShooterGame.Leaderboard
class ULeaderboard : public UObject
{
public:
	class UClass*                                LeaderboardRowType;                                // 0x28(0x8)(Edit, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLeaderboardDisplayRow                HeaderRow;                                         // 0x30(0x20)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class ELeaderboardColumnName            DefaultOrderByColumn;                              // 0x50(0x1)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class ELeaderboardOrdering              DefaultOrdering;                                   // 0x51(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class ELeaderboardGroupByMode           DefaultGroupByMode;                                // 0x52(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class ELeaderboardColumnName            DefaultGroupByColumn;                              // 0x53(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        DefaultNumRowsToDisplay;                           // 0x54(0x4)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ULeaderboard* GetDefaultObj();

	TArray<struct FLeaderboardRow> GetLeaderboardRows(bool* ReturnValue);
	class FString FormatLeaderboardRows();
	class FString FormatLeaderboardRow();
	class FName CountLeaderboardRows(int32* ReturnValue);
	TArray<struct FLeaderboardRow> BPGetLeaderboardRows();
	struct FLeaderboardRow BPFormatLeaderboardRow(struct FLeaderboardDisplayRow* ReturnValue);
	class AShooterGameMode* BPCountLeaderboardRows(int32* ReturnValue);
	struct FLeaderboardRow BPAddLeaderboardRow(bool* ReturnValue);
	struct FLeaderboardRow AddLeaderboardRow(bool* ReturnValue);
};

// 0xC8 (0x820 - 0x758)
// Class ShooterGame.LeaderboardRowWidget
class ULeaderboardRowWidget : public UPrimalUI
{
public:
	bool                                         bIsHeaderRow;                                      // 0x758(0x1)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2153[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  ColumnContainerWidgetName;                         // 0x75C(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2154[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FLeaderboardColumnDefinition>  Columns;                                           // 0x768(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	struct FLinearColor                          DefaultLeaderboardRowTextColor;                    // 0x778(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          DefaultLeaderboardRowBackgroundColor;              // 0x788(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DefaultLeaderboardRowBackgroundTexture;            // 0x798(0x8)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          PersonalLeaderboardRowTextColor;                   // 0x7A0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          PersonalLeaderboardRowBackgroundColor;             // 0x7B0(0x10)(Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PersonalLeaderboardRowBackgroundTexture;           // 0x7C0(0x8)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          HeaderLeaderboardRowTextColor;                     // 0x7C8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          HeaderLeaderboardRowBackgroundColor;               // 0x7D8(0x10)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            HeaderLeaderboardRowBackgroundTexture;             // 0x7E8(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_215B[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class UHorizontalBox*                        ColumnContainer;                                   // 0x808(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTextBlock*>                    ColumnWidgets;                                     // 0x810(0x10)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ULeaderboardRowWidget* GetDefaultObj();

	bool SetRowContents();
};

// 0x40 (0xF0 - 0xB0)
// Class ShooterGame.MaterialExpressionIsPixelUnderwater
class UMaterialExpressionIsPixelUnderwater : public UMaterialExpression
{
public:
	enum class EMaterialSceneAttributeInputMode  InputMode;                                         // 0xB0(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_215D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FExpressionInput                      Input;                                             // 0xB8(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	struct FVector2D                             ConstInput;                                        // 0xE0(0x10)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionIsPixelUnderwater* GetDefaultObj();

};

// 0x488 (0x538 - 0xB0)
// Class ShooterGame.MaterialExpressionPlatformSwitch
class UMaterialExpressionPlatformSwitch : public UMaterialExpression
{
public:
	struct FExpressionInput                      Default;                                           // 0xB0(0x28)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor)
	struct FExpressionInput                      Inputs[0x1C];                                      // 0xD8(0x460)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionPlatformSwitch* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class ShooterGame.MaterialExpressionWaveWorks
class UMaterialExpressionWaveWorks : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionWaveWorks* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class ShooterGame.MaterialExpressionWaveWorksHeight
class UMaterialExpressionWaveWorksHeight : public UMaterialExpression
{
public:
	struct FExpressionInput                      Position;                                          // 0xB0(0x28)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionWaveWorksHeight* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class ShooterGame.MaterialExpressionWaveWorksDisplacement
class UMaterialExpressionWaveWorksDisplacement : public UMaterialExpression
{
public:
	struct FExpressionInput                      Position;                                          // 0xB0(0x28)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionWaveWorksDisplacement* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class ShooterGame.MaterialExpressionWaveWorksMaxDisplacement
class UMaterialExpressionWaveWorksMaxDisplacement : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionWaveWorksMaxDisplacement* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class ShooterGame.MaterialExpressionWaveWorksShorelineData
class UMaterialExpressionWaveWorksShorelineData : public UMaterialExpression
{
public:
	struct FExpressionInput                      Position;                                          // 0xB0(0x28)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config)
	bool                                         bEnableFiltering;                                  // 0xD8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_216D[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionWaveWorksShorelineData* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class ShooterGame.MaterialExpressionWaveWorksWind
class UMaterialExpressionWaveWorksWind : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionWaveWorksWind* GetDefaultObj();

};

// 0x10 (0x588 - 0x578)
// Class ShooterGame.ShooterMatineeActor
class AShooterMatineeActor : public AMatineeActor
{
public:
	bool                                         bUseMatineeManager;                                // 0x578(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2171[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MatineeManagerPriority;                            // 0x57C(0x4)(Edit, Net, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	class AMatineeActorManager*                  MyMatineeManager;                                  // 0x580(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AShooterMatineeActor* GetDefaultObj();

};

// 0x18 (0x4E0 - 0x4C8)
// Class ShooterGame.MatineeActorManager
class AMatineeActorManager : public AInfo
{
public:
	bool                                         bPriorityToFloatSets;                              // 0x4C8(0x1)(BlueprintVisible, ExportObject, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPriorityToVectorSets;                             // 0x4C9(0x1)(OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2172[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AShooterMatineeActor*>          MatineeActorList;                                  // 0x4D0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AMatineeActorManager* GetDefaultObj();

};

// 0x30 (0x4F8 - 0x4C8)
// Class ShooterGame.MatineeCapture
class AMatineeCapture : public AActor
{
public:
	class AMatineeActor*                         MatineeActor;                                      // 0x4C8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig)
	float                                        CaptureFPS;                                        // 0x4D0(0x4)(Edit, BlueprintReadOnly, Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        ResX;                                              // 0x4D4(0x4)(Edit, ConstParm, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ResY;                                              // 0x4D8(0x4)(Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreviewMatineeTime;                                // 0x4DC(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bBeginCapture;                                     // 0x4E0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCancelCapture;                                    // 0x4E1(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2175[0x16];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AMatineeCapture* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class ShooterGame.MinimapData
class UMinimapData : public UObject
{
public:
	TArray<struct FMapData>                      MinimapData;                                       // 0x28(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig)
	class FString                                GeneralMapName;                                    // 0x38(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMinimapData* GetDefaultObj();

};

// 0x10 (0x768 - 0x758)
// Class ShooterGame.PrimalSubMenuUI
class UPrimalSubMenuUI : public UPrimalUI
{
public:
	uint8                                        Pad_2177[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalSubMenuUI* GetDefaultObj();

};

// 0x0 (0x768 - 0x768)
// Class ShooterGame.MinimapSubMenuUI
class UMinimapSubMenuUI : public UPrimalSubMenuUI
{
public:

	static class UClass* StaticClass();
	static class UMinimapSubMenuUI* GetDefaultObj();

};

// 0xC0 (0x818 - 0x758)
// Class ShooterGame.MissionBiomeCompletionWidget
class UMissionBiomeCompletionWidget : public UBaseSelectableButtonWidget
{
public:
	class UTexture2D*                            ButtonIcon;                                        // 0x758(0x8)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FText                                  SectionName;                                       // 0x760(0x18)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          AllMissionsCompletedColor;                         // 0x778(0x10)(ConstParm, ExportObject, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SectionNameTextColor;                              // 0x788(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          CompletionPercentLabelTextColor;                   // 0x798(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          NumCompletedValueTextColor;                        // 0x7A8(0x10)(Net, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          NumCompletedLabelTextColor;                        // 0x7B8(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          CompletionProgressBarForegroundColor;              // 0x7C8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_217C[0x40];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMissionBiomeCompletionWidget* GetDefaultObj();

};

// 0x1C8 (0x690 - 0x4C8)
// Class ShooterGame.PrimalTargetableActor
class APrimalTargetableActor : public AActor
{
public:
	uint8                                        Pad_21FA[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UParticleSystem*                       HurtFX;                                            // 0x4D8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDamageTypeAdjuster>           DamageTypeAdjusters;                               // 0x4E0(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_21FE[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class AActor>                  DestructionActorTemplate;                          // 0x4F8(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LifeSpanAfterDeath;                                // 0x528(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_21FF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundCue*                             DeathSound;                                        // 0x530(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PassiveDamageHealthReplicationPercentInterval;     // 0x538(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DamageNotifyTeamAggroMultiplier;                   // 0x53C(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DamageNotifyTeamAggroRange;                        // 0x540(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DamageNotifyTeamAggroRangeFalloff;                 // 0x544(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               DestructibleMeshLocationOffset;                    // 0x548(0x18)(Edit, BlueprintVisible, ExportObject, Parm, ReturnParm, Config, InstancedReference, SubobjectReference)
	struct FVector                               DestructibleMeshScaleOverride;                     // 0x560(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, InstancedReference, SubobjectReference)
	struct FRotator                              DestructibleMeshRotationOffset;                    // 0x578(0x18)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        bDestructionActorTemplateServerOnly : 1;           // Mask: 0x1, PropSize: 0x10x590(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyedMeshUseSkeletalMeshComponent : 1;        // Mask: 0x2, PropSize: 0x10x590(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventZeroDamageInstigatorSelfDamage : 1;        // Mask: 0x4, PropSize: 0x10x590(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDead : 1;                                       // Mask: 0x8, PropSize: 0x10x590(0x1)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	uint8                                        bDamageNotifyTeamAggroAI : 1;                      // Mask: 0x10, PropSize: 0x10x590(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_161 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bWithinPreventionVolume : 1;                       // Mask: 0x40, PropSize: 0x10x590(0x1)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowDamageByFriendlyDinos : 1;                   // Mask: 0x80, PropSize: 0x10x590(0x1)(ConstParm, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustDamage : 1;                            // Mask: 0x1, PropSize: 0x10x591(0x1)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceZeroDamageProcessing : 1;                    // Mask: 0x2, PropSize: 0x10x591(0x1)(ConstParm, ExportObject, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceFloatingDamageNumbers : 1;                   // Mask: 0x4, PropSize: 0x10x591(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoAllowRadialDamageWithoutVisiblityTrace : 1;     // Mask: 0x8, PropSize: 0x10x591(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreDestructionEffects : 1;                     // Mask: 0x10, PropSize: 0x10x591(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreDamageRepairCooldown : 1;                   // Mask: 0x20, PropSize: 0x10x591(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseHarvestingComponent : 1;                       // Mask: 0x40, PropSize: 0x10x591(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDied : 1;                                    // Mask: 0x80, PropSize: 0x10x591(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_220E[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DescriptiveName;                                   // 0x598(0x10)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DestroyedMeshActorClass;                           // 0x5A8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	TSoftObjectPtr<class UGeometryCollection>    SoftDestructionGeoCollectionAsset;                 // 0x5B0(0x30)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, InstancedReference, SubobjectReference)
	TArray<struct FDestructionGeoCollectionInfo> MultiSoftDestructionGeoCollectionAssets;           // 0x5E0(0x10)(ConstParm, ExportObject, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ReplicatedHealth;                                  // 0x5F0(0x4)(Edit, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        Health;                                            // 0x5F4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxHealth;                                         // 0x5F8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DestructibleMeshDeathImpulseScale;                 // 0x5FC(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FBoneDamageAdjuster>           BoneDamageAdjusters;                               // 0x600(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2211[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                OverlayToolTipWidget;                              // 0x618(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             OverlayMultiUseTooltipScale;                       // 0x620(0x10)(EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             OverlayMultiUseTooltipPadding;                     // 0x630(0x10)(BlueprintReadOnly, Net, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class UPrimalHarvestingComponent*            MyHarvestingComponent;                             // 0x640(0x8)(BlueprintVisible, Net, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2212[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	enum class EShooterPhysMaterialType          TargetableDamageFXDefaultPhysMaterial;             // 0x658(0x1)(BlueprintReadOnly, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2213[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        BPOverrideDestroyedMeshTextures : 1;               // Mask: 0x1, PropSize: 0x10x65C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_163 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2215[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                StructureSettingsClass;                            // 0x660(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2216[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	class AActor*                                MyDestructionActor;                                // 0x688(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalTargetableActor* GetDefaultObj();

	class AActor* PlayHitEffectRadial(float* DamageTaken, const struct FRadialDamageEvent& DamageEvent, class APawn** PawnInstigator);
	class AActor* PlayHitEffectPoint(float* DamageTaken, const struct FPointDamageEvent& DamageEvent, class APawn** PawnInstigator);
	class AActor* PlayHitEffectGeneric(float* DamageTaken, const struct FDamageEvent& DamageEvent, class APawn** PawnInstigator);
	class AActor* PlayDyingRadial(float* KillingDamage, const struct FRadialDamageEvent& DamageEvent, class APawn** InstigatingPawn);
	class AActor* PlayDyingPoint(float* KillingDamage, const struct FPointDamageEvent& DamageEvent, class APawn** InstigatingPawn);
	class AActor* PlayDyingGeneric(float* KillingDamage, const struct FDamageEvent& DamageEvent, class APawn** InstigatingPawn);
	void OverrideDestroyedMeshTextures(class UMeshComponent* MeshComp);
	void OnRep_ReplicatedHealth();
	void NetUpdatedHealth(int32* NewHealth);
	void IsInvincible(bool* ReturnValue);
	void HarvestingDepleted(class UPrimalHarvestingComponent** FromComponent);
	void GetMaxHealth(float* ReturnValue);
	void GetDescriptiveName(class FString* ReturnValue);
	class AActor* BPSupressImpactEffects(float* DamageTaken, const struct FDamageEvent& DamageEvent, class APawn** PawnInstigator, bool* bIsLocalPath, class UPrimitiveComponent* HitComponent, bool* ReturnValue);
	class AActor* BPHitEffect(float* DamageTaken, const struct FDamageEvent& DamageEvent, class APawn** PawnInstigator, bool* bIsLocalPath, class UPrimitiveComponent* HitComponent, struct FVector* DamageLoc, struct FRotator* HitNormal);
	class AActor* BPDied(float* KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer);
	class AActor* BPAdjustDamage(float* IncomingDamage, struct FDamageEvent* TheDamageEvent, bool* bIsPointDamage, struct FHitResult* PointHitInfo, float* ReturnValue);
};

// 0xA00 (0x1090 - 0x690)
// Class ShooterGame.PrimalStructure
class APrimalStructure : public APrimalTargetableActor
{
public:
	uint8                                        Pad_244D[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             OverlayTooltipPadding;                             // 0x6C0(0x10)(Edit, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             OverlayTooltipScale;                               // 0x6D0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxTooltipPawnSpeed;                               // 0x6E0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_244E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            BuildingIcon;                                      // 0x6E8(0x8)(Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StructureTag;                                      // 0x6F0(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ConsumesPrimalItem;                                // 0x6F8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ScaleFactor;                                       // 0x700(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        StructureSnapTypeFlags;                            // 0x704(0x4)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FIntVector                            ExtraStructureSnapTypeFlags;                       // 0x708(0xC)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2450[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FStructureVariant>             Variants;                                          // 0x718(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, InstancedReference, SubobjectReference)
	class FName                                  CurrentVariantTag;                                 // 0x728(0x8)(ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsFlippable : 1;                                  // Mask: 0x1, PropSize: 0x10x730(0x1)(Edit, ConstParm, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlipByScale : 1;                                  // Mask: 0x2, PropSize: 0x10x730(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlipInvertLocOffset : 1;                          // Mask: 0x4, PropSize: 0x10x730(0x1)(Edit, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsFlipped : 1;                                    // Mask: 0x8, PropSize: 0x10x730(0x1)(Edit, ConstParm, ExportObject, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowInPlaceableList : 1;                          // Mask: 0x10, PropSize: 0x10x730(0x1)(ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsRepairing : 1;                                  // Mask: 0x20, PropSize: 0x10x730(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_17D : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bForceAllowWallAttachments : 1;                    // Mask: 0x80, PropSize: 0x10x730(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPRefreshedStructureColors : 1;                // Mask: 0x1, PropSize: 0x10x731(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsBed : 1;                                        // Mask: 0x2, PropSize: 0x10x731(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsTeleporter : 1;                                 // Mask: 0x4, PropSize: 0x10x731(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDoorframe : 1;                                  // Mask: 0x8, PropSize: 0x10x731(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClientAddPlacedOnFloorStructures : 1;             // Mask: 0x10, PropSize: 0x10x731(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventStasis : 1;                           // Mask: 0x20, PropSize: 0x10x731(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyOnStasis : 1;                              // Mask: 0x40, PropSize: 0x10x731(0x1)(Edit, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTriggerBPStasis : 1;                              // Mask: 0x80, PropSize: 0x10x731(0x1)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPostLoadedFromSaveGame : 1;                  // Mask: 0x1, PropSize: 0x10x732(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPlacementUsesWeaponClipAmmo : 1;                  // Mask: 0x2, PropSize: 0x10x732(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreDyingWhenDemolished : 1;                    // Mask: 0x4, PropSize: 0x10x732(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAbsoluteTakeAnythingAsGround : 1;                 // Mask: 0x8, PropSize: 0x10x732(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisablePlacementOnDynamicsFoliageAndDoors : 1;    // Mask: 0x10, PropSize: 0x10x732(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSeatedDisableCollisionCheck : 1;                  // Mask: 0x20, PropSize: 0x10x732(0x1)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPIsAllowedToBuildEx : 1;                      // Mask: 0x40, PropSize: 0x10x732(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPHandleStructureEnabled : 1;                  // Mask: 0x80, PropSize: 0x10x732(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePlacingOnVerticalGround : 1;                 // Mask: 0x1, PropSize: 0x10x733(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPlacementShouldNotBeHorizontal : 1;               // Mask: 0x2, PropSize: 0x10x733(0x1)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRequiresGroundedPlacement : 1;                    // Mask: 0x4, PropSize: 0x10x733(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowPlacingOnOtherTeamStructuresPvPOnly : 1;     // Mask: 0x8, PropSize: 0x10x733(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceUseSkeletalMeshComponent : 1;                // Mask: 0x10, PropSize: 0x10x733(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        UseBPOverrideTargetLocation : 1;                   // Mask: 0x20, PropSize: 0x10x733(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideFoundationSupportDistance : 1;            // Mask: 0x40, PropSize: 0x10x733(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_17E : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        PlacementOffsetForVerticalGround;                  // 0x734(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDisableFootSound : 1;                        // Mask: 0x1, PropSize: 0x10x738(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTraceThruEncroachmentPoints : 1;                  // Mask: 0x2, PropSize: 0x10x738(0x1)(Edit, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bUseMeshOverlapInsteadOfEncroachmentPoints : 1;    // Mask: 0x4, PropSize: 0x10x738(0x1)(Edit, ConstParm, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDidSpawnEffects : 1;                              // Mask: 0x8, PropSize: 0x10x738(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDinoPlacementDistanceIncrease : 1;         // Mask: 0x10, PropSize: 0x10x738(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPendingRemoval : 1;                               // Mask: 0x20, PropSize: 0x10x738(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWasAttachedToPawn : 1;                            // Mask: 0x40, PropSize: 0x10x738(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontOverrideCollisionProfile : 1;                 // Mask: 0x80, PropSize: 0x10x738(0x1)(Edit, ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAdvancedRotationPlacement : 1;                 // Mask: 0x1, PropSize: 0x10x739(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_17F : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bRootFoundationLimitBuildArea : 1;                 // Mask: 0x20, PropSize: 0x10x739(0x1)(Edit, ConstParm, Net, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCenterOffscreenFloatingHUDWidgets : 1;            // Mask: 0x40, PropSize: 0x10x739(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_180 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_245B[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PlacementInitialTracePointOffsetForVerticalGround; // 0x73C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        StructuresAllowedToBeVerticalGround;               // 0x740(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TraceDistanceFromActorToWallVerticalGround;        // 0x750(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_245D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          AllowSnapRotationForTags;                          // 0x758(0x10)(Edit, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          ForceAllowSnapRotationForTags;                     // 0x768(0x10)(Edit, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               FlipByScaleDirection;                              // 0x778(0x18)(ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PlacementCollisionAdjustmentBuffer;                // 0x790(0x18)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PlacementYawOffset;                                // 0x7A8(0x4)(ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PlacementYawOffsetIncrement;                       // 0x7AC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PlacementHitLocOffset;                             // 0x7B0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PlacementEncroachmentCheckOffset;                  // 0x7C8(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PlacementEncroachmentBoxExtent;                    // 0x7E0(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PlacementTraceScale;                               // 0x7F8(0x18)(Edit, ConstParm, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               SnapAlternatePlacementTraceScale;                  // 0x810(0x18)(ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               WorldGeoCheckExtraBoxExtent;                       // 0x828(0x18)(Edit, ConstParm, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              PlacementRotOffset;                                // 0x840(0x18)(Edit, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              PlacementTraceRotOffset;                           // 0x858(0x18)(BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              SnappingRotationOffset;                            // 0x870(0x18)(OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowAttachToPawn : 1;                            // Mask: 0x1, PropSize: 0x10x888(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowAttachToSaddle : 1;                          // Mask: 0x2, PropSize: 0x10x888(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPlacementTraceIgnorePawns : 1;                    // Mask: 0x4, PropSize: 0x10x888(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRequireFreePrimarySnappedStructure : 1;           // Mask: 0x8, PropSize: 0x10x888(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowMultiplePrimarySnappedStructures : 1;        // Mask: 0x10, PropSize: 0x10x888(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyAllowPlacementInWater : 1;                    // Mask: 0x20, PropSize: 0x10x888(0x1)(ExportObject, Net, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePlacingOnGround : 1;                         // Mask: 0x40, PropSize: 0x10x888(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTakeAnythingAsGround : 1;                         // Mask: 0x80, PropSize: 0x10x888(0x1)(BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsFoundation : 1;                                 // Mask: 0x1, PropSize: 0x10x889(0x1)(ExportObject, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceCheckNearbyEnemyFoundation : 1;              // Mask: 0x2, PropSize: 0x10x889(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsFloor : 1;                                      // Mask: 0x4, PropSize: 0x10x889(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceFloorCollisionGroup : 1;                     // Mask: 0x8, PropSize: 0x10x889(0x1)(BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsWall : 1;                                       // Mask: 0x10, PropSize: 0x10x889(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisallowPreventCropsBiomes : 1;                   // Mask: 0x20, PropSize: 0x10x889(0x1)(BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanBeRepaired : 1;                                // Mask: 0x40, PropSize: 0x10x889(0x1)(ExportObject, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReturnDamageOnHitFromPawn : 1;                    // Mask: 0x80, PropSize: 0x10x889(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventStasis : 1;                                // Mask: 0x1, PropSize: 0x10x88A(0x1)(ConstParm, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowUseFromRidingDino : 1;                       // Mask: 0x2, PropSize: 0x10x88A(0x1)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsFenceFoundation : 1;                            // Mask: 0x4, PropSize: 0x10x88A(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseFenceFoundation : 1;                           // Mask: 0x8, PropSize: 0x10x88A(0x1)(BlueprintReadOnly, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseOnlyBlockSelfTraceChannel : 1;                 // Mask: 0x10, PropSize: 0x10x88A(0x1)(DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWasPlacementSnapped : 1;                          // Mask: 0x20, PropSize: 0x10x88A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsCoreStructure : 1;                              // Mask: 0x40, PropSize: 0x10x88A(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeprecateStructure : 1;                           // Mask: 0x80, PropSize: 0x10x88A(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRequiresToBeInsideZoneVolume : 1;                 // Mask: 0x1, PropSize: 0x10x88B(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowLoadBearing : 1;                             // Mask: 0x2, PropSize: 0x10x88B(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsEnvironmentStructure : 1;                       // Mask: 0x4, PropSize: 0x10x88B(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_181 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPOnVariantSwitch : 1;                         // Mask: 0x80, PropSize: 0x10x88B(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_246A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RepairCheckInterval;                               // 0x890(0x4)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PlacementFloorCheckZExtentUp;                      // 0x894(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RepairPercentPerInterval;                          // 0x898(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DecayDestructionPeriod;                            // 0x89C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        PreventPlacingOnFloorClasses;                      // 0x8A0(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AllowPlacingOnFloorClasses;                        // 0x8B0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  MyStaticMesh;                                      // 0x8C0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  CosmeticVariantStaticMesh;                         // 0x8C8(0x8)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class USceneComponent*                       MyRootTransform;                                   // 0x8D0(0x8)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGroundRequiresPlacementOnStructures : 1;          // Mask: 0x1, PropSize: 0x10x8D8(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRequiresPlacementOnStructureFloors : 1;           // Mask: 0x2, PropSize: 0x10x8D8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisablePlacementOnStructureFloors : 1;            // Mask: 0x4, PropSize: 0x10x8D8(0x1)(ExportObject, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyStructureIfFloorDestroyed : 1;             // Mask: 0x8, PropSize: 0x10x8D8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsePlacementCollisionCheck : 1;                   // Mask: 0x10, PropSize: 0x10x8D8(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseLenientWorldGeoObstructionCheck : 1;           // Mask: 0x20, PropSize: 0x10x8D8(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRequiresSnapping : 1;                             // Mask: 0x40, PropSize: 0x10x8D8(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSnappingRequiresNearbyFoundation : 1;             // Mask: 0x80, PropSize: 0x10x8D8(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowSnapRotation : 1;                            // Mask: 0x1, PropSize: 0x10x8D9(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAllowSnapRotationForStructure : 1;           // Mask: 0x2, PropSize: 0x10x8D9(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceHideObstructedSnaps : 1;                     // Mask: 0x4, PropSize: 0x10x8D9(0x1)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontCheckSnapsForObstruction : 1;                 // Mask: 0x8, PropSize: 0x10x8D9(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPlacementChooseRotation : 1;                      // Mask: 0x10, PropSize: 0x10x8D9(0x1)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPlacementIgnoreChooseRotation : 1;                // Mask: 0x20, PropSize: 0x10x8D9(0x1)(Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPlacementAdjustHeight : 1;                        // Mask: 0x40, PropSize: 0x10x8D9(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSnapFromPlacementOverrideEvenWhenNotSnapped : 1; // Mask: 0x80, PropSize: 0x10x8D9(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideSnapTargetAllowSnapPoint : 1;        // Mask: 0x1, PropSize: 0x10x8DA(0x1)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRequiresPlacingOnWall : 1;                        // Mask: 0x2, PropSize: 0x10x8DA(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSnapRequiresPlacementOnGround : 1;                // Mask: 0x4, PropSize: 0x10x8DA(0x1)(Edit, ConstParm, ExportObject, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowSnapOntoSameLocation : 1;                    // Mask: 0x8, PropSize: 0x10x8DA(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyFoundationIfSnappedToFoundation : 1;          // Mask: 0x10, PropSize: 0x10x8DA(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFoundationRequiresGroundTrace : 1;                // Mask: 0x20, PropSize: 0x10x8DA(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPlacingOnGroundRequiresNoStructure : 1;           // Mask: 0x40, PropSize: 0x10x8DA(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTakeGroundNormal : 1;                             // Mask: 0x80, PropSize: 0x10x8DA(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTakeGroundNormalDirectly : 1;                     // Mask: 0x1, PropSize: 0x10x8DB(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFinalPlacementDontAdjustForMaxRange : 1;          // Mask: 0x2, PropSize: 0x10x8DB(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowStructureColors : 1;                         // Mask: 0x4, PropSize: 0x10x8DB(0x1)(BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDebug : 1;                                        // Mask: 0x8, PropSize: 0x10x8DB(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        bUseFadeInEffect : 1;                              // Mask: 0x10, PropSize: 0x10x8DB(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsingStructureColors : 1;                         // Mask: 0x20, PropSize: 0x10x8DB(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDefaultVariant : 1;                        // Mask: 0x40, PropSize: 0x10x8DB(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCarriedByDino : 1;                                // Mask: 0x80, PropSize: 0x10x8DB(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowPickingUpStructureAfterPlacement : 1;        // Mask: 0x1, PropSize: 0x10x8DC(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisablePickingUpStructureAfterPlacementOnTryMultiUse : 1; // Mask: 0x2, PropSize: 0x10x8DC(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBlueprintAnimNotifyCustomEvent : 1;            // Mask: 0x4, PropSize: 0x10x8DC(0x1)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_182 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_247D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        TraceIgnoreStructuresWithTypeFlags;                // 0x8E0(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_247F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          EncroachmentCheckIgnoreStructureTypeTags;          // 0x8E8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesHealth : 1;                                   // Mask: 0x1, PropSize: 0x10x8F8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreSnappedToOtherFloorStructures : 1;          // Mask: 0x2, PropSize: 0x10x8F8(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnforceStructureLinkExactRotation : 1;            // Mask: 0x4, PropSize: 0x10x8F8(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceSnappedStructureToGround : 1;                // Mask: 0x8, PropSize: 0x10x8F8(0x1)(ConstParm, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceBlockIK : 1;                                 // Mask: 0x10, PropSize: 0x10x8F8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bStationaryStructure : 1;                          // Mask: 0x20, PropSize: 0x10x8F8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnorePawns : 1;                                  // Mask: 0x40, PropSize: 0x10x8F8(0x1)(ExportObject, Net, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePushTroughWallCheck : 1;                     // Mask: 0x80, PropSize: 0x10x8F8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanDemolish : 1;                                  // Mask: 0x1, PropSize: 0x10x8F9(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowPlacingOnOtherTeamStructures : 1;            // Mask: 0x2, PropSize: 0x10x8F9(0x1)(Edit, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventPlacementInWater : 1;                      // Mask: 0x4, PropSize: 0x10x8F9(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowInRegularStructurePreventionZones : 1;       // Mask: 0x8, PropSize: 0x10x8F9(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontSetStructureCollisionChannels : 1;            // Mask: 0x10, PropSize: 0x10x8F9(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePreventEnemyStructuresNearby : 1;            // Mask: 0x20, PropSize: 0x10x8F9(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowEnemyDemolish : 1;                           // Mask: 0x40, PropSize: 0x10x8F9(0x1)(BlueprintReadOnly, Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontActuallySnapJustPlacement : 1;                // Mask: 0x80, PropSize: 0x10x8F9(0x1)(Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreMaxStructuresInRange : 1;                   // Mask: 0x1, PropSize: 0x10x8FA(0x1)(Edit, BlueprintReadOnly, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPaintingUseSkeletalMesh : 1;                      // Mask: 0x2, PropSize: 0x10x8FA(0x1)(BlueprintVisible, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesPaintingComponent : 1;                        // Mask: 0x4, PropSize: 0x10x8FA(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanBuildUpon : 1;                                 // Mask: 0x8, PropSize: 0x10x8FA(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasResetDecayTime : 1;                            // Mask: 0x10, PropSize: 0x10x8FA(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowInPreventionVolumes : 1;                // Mask: 0x20, PropSize: 0x10x8FA(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoForceCreateDynamicMaterials : 1;                // Mask: 0x40, PropSize: 0x10x8FA(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetInfoFromConsumedItemForPlacedStructure : 1; // Mask: 0x80, PropSize: 0x10x8FA(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bImmuneToAutoDemolish : 1;                         // Mask: 0x1, PropSize: 0x10x8FB(0x1)(Edit, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreMaxStructuresInSmallRadius : 1;             // Mask: 0x2, PropSize: 0x10x8FB(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAdjustPlacementIfCollide : 1;                     // Mask: 0x4, PropSize: 0x10x8FB(0x1)(Edit, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlignToSaddleWhenPlacing : 1;                     // Mask: 0x8, PropSize: 0x10x8FB(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowTargetingByCorruptDinos : 1;                 // Mask: 0x10, PropSize: 0x10x8FB(0x1)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPTreatAsFoundationForSnappedStructure : 1;    // Mask: 0x20, PropSize: 0x10x8FB(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnStructurePickup : 1;                       // Mask: 0x40, PropSize: 0x10x8FB(0x1)(EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPerInstanceSnapPoints : 1;                        // Mask: 0x80, PropSize: 0x10x8FB(0x1)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSnapToWaterSurface : 1;                           // Mask: 0x1, PropSize: 0x10x8FC(0x1)(Edit, ExportObject, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPUpdatedHealth : 1;                           // Mask: 0x2, PropSize: 0x10x8FC(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_183 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2488[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPOverrideDescriptiveName : 1;                 // Mask: 0x1, PropSize: 0x10x900(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideDescriptiveNameForPreview : 1;       // Mask: 0x2, PropSize: 0x10x900(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventCreationOfDynamicMaterials : 1;            // Mask: 0x4, PropSize: 0x10x900(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_184 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_248A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FPrimalStructureSnapPoint>     SnapPoints;                                        // 0x908(0x10)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        bTraceCheckOnlyUseStructuresWithTypeFlags;         // 0x918(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        AllowStructureColorSets[0x6];                      // 0x91C(0x6)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_248C[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               WaterVolumeCheckPointOffset;                       // 0x928(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WaterPlacementMinimumWaterHeight;                  // 0x940(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PlacementMaxZDelta;                                // 0x944(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PlacementChooseRotationMaxRangeOverride;           // 0x948(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PlacementAdjustHeightLimitUp;                      // 0x94C(0x4)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PlacementAdjustHeightLimitDown;                    // 0x950(0x4)(Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PlacementMaxRange;                                 // 0x954(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxSnapLocRange;                                   // 0x958(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SnapOverlapCheckRadius;                            // 0x95C(0x4)(Edit, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaximumFoundationSupport2DBuildDistance;           // 0x960(0x4)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        AdditionalFoundationSupportDistanceForLinkedStructures; // 0x964(0x4)(BlueprintReadOnly, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PlacementFloorCheckZExtent;                        // 0x968(0x4)(ConstParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LastHealthPercentage;                              // 0x96C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              TakeGroundNormalRotationOffset;                    // 0x970(0x18)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DemolishGiveItemCraftingResourcePercentage;        // 0x988(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyOnStasisUnlessPrevented : 1;               // Mask: 0x1, PropSize: 0x10x98C(0x1)(EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_185 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2493[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class APrimalStructure>        AllowReplacementByStructureClassType;              // 0x990(0x30)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalStructure>        PreventReplacementOfStructureClassType;            // 0x9C0(0x30)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> PreventReplacementOfStructureClassTypes;           // 0x9F0(0x10)(BlueprintVisible, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ReplacementCheckOffset;                            // 0xA00(0x18)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaximumHeightAboveWorldGround;                     // 0xA18(0x4)(ExportObject, Net, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaximumHeightUnderWorldMaxKillZ;                   // 0xA1C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              PreviewCameraRotation;                             // 0xA20(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PreviewCameraPivotOffset;                          // 0xA38(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PreviewCameraDistanceScaleFactor;                  // 0xA50(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PreviewCameraDefaultZoomMultiplier;                // 0xA54(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PreviewCameraMaxZoomMultiplier;                    // 0xA58(0x4)(Edit, ConstParm, ExportObject, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreviewApplyColorToChildComponents : 1;           // Mask: 0x1, PropSize: 0x10xA5C(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_186 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2496[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnDamageAmount;                                // 0xA60(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        StructureRangeTypeFlag;                            // 0xA64(0x4)(ConstParm, Net, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          StructureRangeTags;                                // 0xA68(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        LimitMaxStructuresInRangeTypeFlag;                 // 0xA78(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnDamageImpulse;                               // 0xA7C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ReturnDamageType;                                  // 0xA80(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ReturnDamageExcludeIncomingTypes;                  // 0xA88(0x10)(Edit, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ReturnDamageOnlyForIncomingTypes;                  // 0xA98(0x10)(BlueprintReadOnly, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        OwningPlayerID;                                    // 0xAA8(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        OriginalPlacerPlayerID;                            // 0xAAC(0x4)(BlueprintVisible, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                OwningPlayerName;                                  // 0xAB0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class FString                                OriginalPlacedTimeStamp;                           // 0xAC0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       LastInAllyRangeTime;                               // 0xAD0(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       LastInAllyRangeTimeSerialized;                     // 0xAD8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       PickupAllowedBeforeNetworkTime;                    // 0xAE0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DecayDestructionPeriodMultiplier;                  // 0xAE8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_249E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPrimalStructureSnapPointOverride     PreviewSnapOverride;                               // 0xAF0(0x88)(BlueprintReadOnly, Net, Config, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalDinoCharacter>   SaddleDino;                                        // 0xB78(0x8)(ConstParm, ExportObject, Net, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class APrimalDinoCharacter*>          LatchedDinos;                                      // 0xB80(0x10)(Edit, ConstParm, Net, Config, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    PreviewMaterial;                                   // 0xB90(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    PreviewMaterialMasked;                             // 0xB98(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UMaterialInstanceDynamic*>      PreviewMaterialInstances;                          // 0xBA0(0x10)(ConstParm, ExportObject, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PreviewMaterialColorParamName;                     // 0xBB0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class APrimalStructure*>              LinkedStructures;                                  // 0xBB8(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<uint32>                               LinkedStructuresID;                                // 0xBC8(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class APrimalStructure*>              StructuresPlacedOnFloor;                           // 0xBD8(0x10)(ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> SnapToStructureTypesToExclude;                     // 0xBE8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> SnapFromStructureTypesToExclude;                   // 0xBF8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	TArray<class FName>                          SnapToStructureTagsToExclude;                      // 0xC08(0x10)(Parm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	TArray<class FName>                          SnapFromStructureTagsToExclude;                    // 0xC18(0x10)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	class APrimalStructure*                      PlacedOnFloorStructure;                            // 0xC28(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class APrimalStructure*                      PrimarySnappedStructureChild;                      // 0xC30(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class APrimalStructure*                      PrimarySnappedStructureParent;                     // 0xC38(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                OwnerName;                                         // 0xC40(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int16                                        StructureColors[0x6];                              // 0xC50(0xC)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_24A4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APawn*                                 AttachedTo;                                        // 0xC60(0x8)(Edit, ConstParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint32                                       StructureID;                                       // 0xC68(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint32                                       AttachedToDinoID1;                                 // 0xC6C(0x4)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> OnlyAllowStructureClassesToAttach;                 // 0xC70(0x10)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> OnlyAllowStructureClassesFromAttach;               // 0xC80(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_24A6[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    StructureIconMaterial;                             // 0xCC0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               AdvancedRotationPlacementOffset;                   // 0xCC8(0x18)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SpawnEmitter;                                      // 0xCE0(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DestructionEmitter;                                // 0xCE8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               SpawnEmitterLocationOffset;                        // 0xCF0(0x18)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              SpawnEmitterRotationOffset;                        // 0xD08(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PickupGivesItem;                                   // 0xD20(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ExcludeInStructuresRadius;                         // 0xD28(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_24A8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        ExcludeInStructuresRadiusClasses;                  // 0xD30(0x10)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          ExcludeInStructuresRadiusTags;                     // 0xD40(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_24AC[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class UStructurePaintingComponent*           PaintingComponent;                                 // 0xD68(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	TArray<class FString>                        PreventBuildStructureReasonStringOverrides;        // 0xD70(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               FloatingHudLocTextOffset;                          // 0xD80(0x18)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        UsablePriority;                                    // 0xD98(0x4)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_24AD[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ForceLimitStructuresInRange;                       // 0xDA8(0x4)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventAttachToSaddle : 1;                        // Mask: 0x1, PropSize: 0x10xDAC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePersonalStructureOwnership : 1;              // Mask: 0x2, PropSize: 0x10xDAC(0x1)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideAllowStructureAccess : 1;               // Mask: 0x4, PropSize: 0x10xDAC(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverideDemolish : 1;                            // Mask: 0x8, PropSize: 0x10xDAC(0x1)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnDemolish : 1;                              // Mask: 0x10, PropSize: 0x10xDAC(0x1)(Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideAllowSnappingWith : 1;                  // Mask: 0x20, PropSize: 0x10xDAC(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideAllowSnappingWithButAlsoCallSuper : 1;  // Mask: 0x40, PropSize: 0x10xDAC(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnLinkedStructureDestroyed : 1;              // Mask: 0x80, PropSize: 0x10xDAC(0x1)(Edit, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseTribeGroupStructureRank : 1;                   // Mask: 0x1, PropSize: 0x10xDAD(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceBlockStationaryTraces : 1;                   // Mask: 0x2, PropSize: 0x10xDAD(0x1)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAttachToStaticMeshSocket : 1;                     // Mask: 0x4, PropSize: 0x10xDAD(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAttachToStaticMeshSocketRotation : 1;             // Mask: 0x8, PropSize: 0x10xDAD(0x1)(Edit, ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceGroundForFoundation : 1;                     // Mask: 0x10, PropSize: 0x10xDAD(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideSnappedToTransform : 1;                 // Mask: 0x20, PropSize: 0x10xDAD(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideSnappedFromTransform : 1;               // Mask: 0x40, PropSize: 0x10xDAD(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverridePlacementRotation : 1;                  // Mask: 0x80, PropSize: 0x10xDAD(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableStructureOnElectricStorm : 1;              // Mask: 0x1, PropSize: 0x10xDAE(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNoCollision : 1;                                  // Mask: 0x2, PropSize: 0x10xDAE(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_187 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsPreviewStructure : 1;                           // Mask: 0x8, PropSize: 0x10xDAE(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bStructureUseAltCollisionChannel : 1;              // Mask: 0x10, PropSize: 0x10xDAE(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDemolishJustDestroy : 1;                          // Mask: 0x20, PropSize: 0x10xDAE(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHighPriorityDemolish : 1;                         // Mask: 0x40, PropSize: 0x10xDAE(0x1)(ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableSnapStructure : 1;                         // Mask: 0x80, PropSize: 0x10xDAE(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTriggerBPUnstasis : 1;                            // Mask: 0x1, PropSize: 0x10xDAF(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBlueprintDrawHUD : 1;                             // Mask: 0x2, PropSize: 0x10xDAF(0x1)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBlueprintDrawPreviewHUD : 1;                      // Mask: 0x4, PropSize: 0x10xDAF(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesWorldSpaceMaterial : 1;                       // Mask: 0x8, PropSize: 0x10xDAF(0x1)(ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceIgnoreStationaryObjectTrace : 1;             // Mask: 0x10, PropSize: 0x10xDAF(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowNearSupplyCrateSpawns : 1;              // Mask: 0x20, PropSize: 0x10xDAF(0x1)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPPostSetStructureCollisionChannels : 1;          // Mask: 0x40, PropSize: 0x10xDAF(0x1)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPickupGiveItemRequiresAccess : 1;                 // Mask: 0x80, PropSize: 0x10xDAF(0x1)(ConstParm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAllowPickupGiveItem : 1;                     // Mask: 0x1, PropSize: 0x10xDB0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventAttachedChildStructures : 1;               // Mask: 0x2, PropSize: 0x10xDB0(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_188 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_24B3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        PlacementMaterialForwardDirIndex;                  // 0xDB4(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventPreviewIfWeaponPlaced : 1;                 // Mask: 0x1, PropSize: 0x10xDB8(0x1)(ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bStructuresInRangeTypeFlagUseAltCollisionChannel : 1; // Mask: 0x2, PropSize: 0x10xDB8(0x1)(Edit, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_189 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIgnoredByTargeting : 1;                           // Mask: 0x8, PropSize: 0x10xDB8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_18A : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_24B6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ForcePreventPlacingInOfflineRaidStructuresRadius;  // 0xDBC(0x4)(Edit, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AttachToStaticMeshSocketNameBase;                  // 0xDC0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               AttachToStaticMeshSocketMinScaleDefault;           // 0xDC8(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TMap<class FName, struct FVector>            AttachToStaticMeshSocketMinScaleOverrides;         // 0xDE0(0x50)(Edit, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                StructureHarvestingComponent;                      // 0xE30(0x8)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UPrimalHarvestingComponent*            MyStructureHarvestingComponent;                    // 0xE38(0x8)(ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_24B7[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ItemsUseAlternateActorClassAttachment;             // 0xE50(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        UnstasisAutoDestroyAfterTime;                      // 0xE58(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        TribeGroupStructureRank;                           // 0xE5C(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_24B9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        PreventSaddleDinoClasses;                          // 0xE60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AllowSaddleDinoClasses;                            // 0xE70(0x10)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PlaceOnWallUseStaticMeshTag;                       // 0xE80(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalStructure>        SnapStructureClass;                                // 0xE88(0x30)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DemolishActivationTime;                            // 0xEB8(0x4)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_24BC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               GroundEncroachmentCheckLocationOffset;             // 0xEC0(0x18)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        StructureMinAllowedVersion;                        // 0xED8(0x4)(ConstParm, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        SavedStructureMinAllowedVersion;                   // 0xEDC(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideEnemyFoundationPreventionRadius;           // 0xEE0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        OverridePVPEnemyFoundationPreventionRadius;        // 0xEE4(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ExpandEnemyFoundationPreventionRadius;             // 0xEE8(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        BedID;                                             // 0xEEC(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ForceAllowWallAttachmentClasses;                   // 0xEF0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LimitMaxStructuresInRangeRadius;                   // 0xF00(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_24C6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        FastDecayLinkedStructureClasses;                   // 0xF08(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PlacementMaxZAbovePlayerHeight;                    // 0xF18(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_24C8[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class USceneComponent*>               OverrideTargetComponents;                          // 0xF28(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideApproachRadius;                            // 0xF38(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_24C9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AMissionType*                          OwnerMission;                                      // 0xF40(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPCheckItemRequiementsToBuild : 1;                // Mask: 0x1, PropSize: 0x10xF48(0x1)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_18B : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_24CA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FItemNetID                            PlaceUsingItemID;                                  // 0xF4C(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_24CB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          CustomDataModifiedOnStructurePickup;               // 0xF58(0x10)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetAggroDinoOnDamageSettings : 1;            // Mask: 0x1, PropSize: 0x10xF68(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_18C : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bCanAttachToExosuit : 1;                           // Mask: 0x4, PropSize: 0x10xF68(0x1)(Edit, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanBeStoredByExosuit : 1;                         // Mask: 0x8, PropSize: 0x10xF68(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bStructureIgnoreDying : 1;                         // Mask: 0x10, PropSize: 0x10xF68(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClientReceivedStructuresPlacedOnFloor : 1;        // Mask: 0x20, PropSize: 0x10xF68(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasAnyStructuresPlacedOnFloor : 1;                // Mask: 0x40, PropSize: 0x10xF68(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventCharacterBasing : 1;                  // Mask: 0x80, PropSize: 0x10xF68(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontSetDynamicObstacle : 1;                       // Mask: 0x1, PropSize: 0x10xF69(0x1)(Edit, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontSetDamageParameters : 1;                      // Mask: 0x2, PropSize: 0x10xF69(0x1)(BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBedUsesDefaultDestination : 1;                    // Mask: 0x4, PropSize: 0x10xF69(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRegisterSkeletalMeshesOnDedicatedServer : 1; // Mask: 0x8, PropSize: 0x10xF69(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseInfiniteStaticMeshDrawDistance : 1;            // Mask: 0x10, PropSize: 0x10xF69(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_18D : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsStructureSkin : 1;                              // Mask: 0x40, PropSize: 0x10xF69(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_18E : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_24D6[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                StructureSkinClass;                                // 0xF70(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFloorDontHideGrass : 1;                           // Mask: 0x1, PropSize: 0x10xF78(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceHideGrass : 1;                               // Mask: 0x2, PropSize: 0x10xF78(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_18F : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_24D9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FloorHideGrassTraceToGroundDistanceNonFoundation;  // 0xF7C(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               HideGrassExtentsOverride;                          // 0xF80(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               HideGrassExtentsOffset;                            // 0xF98(0x18)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNotifyOnBlockListUpdate;                          // 0xFB0(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_24DA[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            RenameIcon;                                        // 0xFC0(0x8)(Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PickupIcon;                                        // 0xFC8(0x8)(Edit, ConstParm, Net, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DemolishIcon;                                      // 0xFD0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RepairIcon;                                        // 0xFD8(0x8)(Edit, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig)
	class UTexture2D*                            CantRepairIcon;                                    // 0xFE0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ColorizeIcon;                                      // 0xFE8(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            OpenContainerIcon;                                 // 0xFF0(0x8)(Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ClaimIcon;                                         // 0xFF8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            UseSoapIcon;                                       // 0x1000(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ShowRangeIcon;                                     // 0x1008(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            HideRangeIcon;                                     // 0x1010(0x8)(Edit, ConstParm, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            LockIcon;                                          // 0x1018(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            UnlockIcon;                                        // 0x1020(0x8)(ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            SetPinCodeIcon;                                    // 0x1028(0x8)(BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ClearPinCodeIcon;                                  // 0x1030(0x8)(Edit, ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnterPinCodeIcon;                                  // 0x1038(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            SetPinCodeInRangeIcon;                             // 0x1040(0x8)(ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableAdminOnlyAccess;                             // 0x1048(0x8)(ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableAdminOnlyAccess;                            // 0x1050(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TribeRankSettingsIcon;                             // 0x1058(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    TribeActivationRankSelectionIcons;                 // 0x1060(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            VariantsFolderIcon;                                // 0x1070(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DefaultVariantIcon;                                // 0x1078(0x8)(ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RemoveSkinIcon;                                    // 0x1080(0x8)(EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasWindSourceComponentsToInteractWithVolumetricDispatcher : 1; // Mask: 0x1, PropSize: 0x10x1088(0x1)(ConstParm, Net, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_24E3[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructure* GetDefaultObj();

	void UpdateTribeGroupStructureRank(uint8 NewRank);
	void UpdateStructureMesh();
	void UpdateStencilValuesWithStenilDepth(enum class EStencilAlliance InAlliance);
	void UpdateStencilValues();
	bool UpdatedHealth();
	float TickPlacingStructure(class APrimalStructurePlacer* PlacerActor, bool* ReturnValue);
	struct FBPNetExecParams StructureSkinHandleCommand();
	void StartRepair();
	void SpawnZiplineActors(class APrimalStructure* ZiplineAnchor0, class APrimalStructure* ZiplineAnchor1);
	void SnapsAreOptional(bool* ReturnValue);
	void SetZiplineStructurePointers(class APrimalStructure* Structure0, class APrimalStructure* Structure1);
	void SetVariant(class FName VariantTag, bool bForceSet, bool* ReturnValue);
	void SetupDynamicMeshMaterials(class UMeshComponent* MeshComp);
	class UClass* SetStructureSkin(bool* ReturnValue);
	int32 SetStructureColorValue(int32 SetVal);
	void SetStaticMobility();
	void SetPreventSaving(bool bPrevent);
	class APrimalDinoCharacter* SetNetworkParentDino();
	bool SetHarvestingActive(bool bOverrideBaseHealth, float BaseHarvestHealthMult, bool bAssignToTribe, int32 AssignedToTribeID);
	void SetEnabledPrimarySnappedStructureParent(bool* bEnabled);
	void SetEnabled(bool* bEnabled);
	void SetDynamicMobility();
	void SetDefaultDestinationStructure(class APrimalStructure* DestinationStructure, class AShooterPlayerController* ForPC);
	void SetContainerActive(bool bNewActive);
	float SetBoundsScale();
	void SetBedEnabled(bool* bEnabled);
	void SetAllowedStructureColorRegions(const TArray<int32>& AllowedRegions);
	bool RefreshStructurePlacement(struct FVector* AtLocation, const struct FRotator& AtRotation, class FName BoneName, bool* ReturnValue);
	void RefreshStructureColors(class UMeshComponent* ForceRefreshComponent);
	void PreviewCulledStructures(const TArray<class APrimalStructure*>& InOutStructuresOnFloor, TArray<class APrimalStructure*>* ReturnValue);
	void PrepareAsPlacementPreview();
	void PickupStructureAndDependingLinkedStructures(class APlayerController* ForPC, bool IsFirstPickup);
	class AShooterPlayerController* PickupStructure(class UPrimalItem** ReturnValue);
	void OverrideOwner(class AActor* NewOwner, bool ForceOnlyRelevantToOwner);
	void OnStructurePlacementRefreshed();
	class UClass* OnRep_StructureSkinClass();
	void OnRep_StructureColors();
	void OnRep_CurrentVariantTag();
	class APrimalStructure* NonPlayerFinalStructurePlacement();
	class FString NetUpdateTeamAndOwnerName();
	class FString NetUpdateOriginalOwnerNameAndID();
	void NetSpawnCoreStructureDeathActor();
	bool NetSetIgnoreDestructionEffects();
	void NetResetClientReceivedStructuersPlacedOnFloors();
	void NetDoSpawnEffects();
	double MultiSetPickupAllowedBeforeNetworkTime();
	class FName MultiRefreshVariantSettings();
	bool MultiRefreshStructureSkin();
	void MultiAddStructuresPlacedOnFloor(class APrimalStructure** Structure);
	class APrimalStructure* LinkStructure();
	class APrimalStructure* IsValidStructureSkinTarget(bool* ReturnValue);
	class AActor* IsValidStructureForCryopodDeployment(struct FVector* Location, bool* ReturnValue);
	int32 IsValidSnapPointTo(bool* ReturnValue);
	int32 IsValidSnapPointFrom(bool* ReturnValue);
	void IsValidForSnappingFrom(class APrimalStructure** OtherStructure, bool* ReturnValue);
	void IsRepairAllowed(bool* ReturnValue);
	float IsPointObstructedByWorldGeometry(class UWorld* ForWorld, bool* ReturnValue);
	struct FVector IsPointNearSupplyCrateSpawn(class UWorld** TheWorld, bool* ReturnValue);
	void IsPinLocked(bool* ReturnValue);
	void IsOnlyLinkedToFastDecayStructures(bool* ReturnValue);
	void IsLinkedToWaterOrPowerSource(bool* ReturnValue);
	void IsAllowedToDemolish(class AShooterPlayerController* ForPC, bool* ReturnValue);
	bool IsAllowedToBuild(struct FVector* AtLocation, const struct FRotator& AtRotation, int32* ReturnValue);
	void GetTooltipStructureInfoBP(class AShooterPlayerController* PlayerOwner, TArray<struct FTooltipTextInfo>* ReturnValue);
	void GetTooltipStructureInfo(class AShooterPlayerController* PlayerOwner, TArray<struct FTooltipTextInfo>* ReturnValue);
	class APrimalStructure* GetStructureSkinDestroyedMeshes(TArray<struct FDestructionGeoCollectionInfo>* ReturnValue);
	class APrimalStructure* GetStructuresInRange(class UWorld** TheWorld, struct FVector* AtLocation);
	void GetStructureMeshAndTransform(class FName VariantTag, struct FTransform* MeshTransform, class UStaticMesh** ReturnValue);
	int32 GetStructureColorValue(int32* ReturnValue);
	int32 GetStructureColor(struct FLinearColor* ReturnValue);
	int32 GetSnapPointName(class FName* ReturnValue);
	void GetPinCode(int32* ReturnValue);
	void GetPhysMaterialOverride(class UPhysicalMaterial** ReturnValue);
	void GetPaintingTexture(class UPaintingTexture** ReturnValue);
	void GetPaintingStaticMesh(class UStaticMeshComponent** ReturnValue);
	class APrimalDinoCharacter* GetNumStructuresInRangeStructureTypeFlag(class UWorld** TheWorld, struct FVector* AtLocation, int32* ForTeam, int32* ReturnValue);
	TArray<class APrimalStructure*> GetNearbyStructuresOfClass(struct FVector* Location);
	void GetFoundationTop(struct FVector* ReturnValue);
	void GetDefaultVariant(struct FStructureVariant* ReturnValue);
	void GetDefaultDestinationID(int32* ReturnValue);
	void GetDayCycleManager(class ADayCycleManager** ReturnValue);
	float GetClosestStructureToPoint(class UWorld* ForWorld, class APrimalStructure** ReturnValue);
	void GetBedID(int32* ReturnValue);
	void GetBedFilterClass(class UClass** ReturnValue);
	void GetAttachedToShip(class APrimalStructure** ReturnValue);
	void GetAllowedStructureColorRegions(TArray<int32>* ReturnValue);
	void GetAdditionalComponentsForDyePreview(TArray<class UStaticMeshComponent*>* ReturnValue);
	void ForceReplicateLinkedStructures();
	struct FPlacementData FinalStructurePlacement(struct FVector* AtLocation, const struct FRotator& AtRotation, class FName BoneName, bool* ReturnValue);
	void DisableStructurePickup();
	void DestroyStructuresPlacedOnFloor();
	bool DemolishStructureAndDependingLinkedStructures(class APlayerController* ForPC);
	class AActor* Demolish(class APlayerController* ForPC);
	void DelayedDisableSnapParent();
	class UMeshComponent* CreateDynamicMaterials();
	TArray<uint32> ClientUpdateLinkedStructures();
	void ClearStructureLinks(class APlayerController* ForPC);
	void ClearCustomColors();
	class UStaticMesh* ChangeStructureStaticMesh(class UStaticMeshComponent* MeshComp);
	void CanPickupStructureFromRecentPlacement(bool* ReturnValue);
	void CanBeStoredByExosuit(class AShooterPlayerController* ForPC, bool* ReturnValue);
	void CanAttachToExosuit(class AShooterPlayerController* ForPC, bool* ReturnValue);
	class AShooterHUD* CallDrawHUD();
	class AShooterHUD* CallDrawFloatingHUD();
	void BPUseCountStructureInRange(bool* ReturnValue);
	bool BPUpdatedHealth();
	void BPUnstasis();
	void BPTriggerStasisEvent();
	struct FPlacementData BPTreatAsFoundationForSnappedStructure(class APrimalStructure** OtherStructure, bool* ReturnValue);
	void BPStructurePreGetMultiUseEntries(class APlayerController* ForPC);
	void BPRefreshedStructureColors();
	class APrimalStructure* BPPreventUsingAsFloorForStructure(bool* ReturnValue);
	void BPPreventStasis(bool* ReturnValue);
	class APrimalStructure* BPPreventSpawnForPlayer(bool* ReturnValue);
	struct FHitResult BPPreventPlacingStructureOntoMe(bool* ReturnValue);
	struct FPlacementData BPPreventPlacingOnFloorStructure(class APrimalStructure** FloorStructure, bool* ReturnValue);
	class FName BPPreventPlacementOnPawn(class APrimalCharacter* ForCharacter, bool* ReturnValue);
	class UPrimitiveComponent* BPPreventCharacterBasing(class AActor* OtherActor, bool* ReturnValue);
	void BPPostSetStructureCollisionChannels();
	void BPPostLoadedFromSaveGame();
	class AActor* BPPlayDying(float* KillingDamage, const struct FDamageEvent& DamageEvent, class APawn** InstigatingPawn);
	void BPPlacedStructure(class APlayerController* ForPC);
	struct FVector BPOverrideTargetLocation(struct FVector* ReturnValue);
	int32 BPOverrideSnapTargetAllowSnapPoint(class APrimalStructure** OtherStructure, bool* ReturnValue);
	int32 BPOverrideSnappedToTransform(struct FVector* OutLocation, struct FRotator* OutRotation, bool* ReturnValue);
	int32 BPOverrideSnappedFromTransform(struct FVector* OutLocation, struct FRotator* OutRotation, bool* ReturnValue);
	struct FRotator BPOverridePlacementRotation(struct FRotator* ReturnValue);
	void BPOverrideDescriptiveNameForPreview(class FString* ReturnValue);
	void BPOverrideDescriptiveName(class FString* ReturnValue);
	void BPOverrideDemolish(class AShooterPlayerController* ForPC, bool* ReturnValue);
	int32 BPOverrideCantBuildReasonString(class FString* ReturnValue);
	bool BPOverrideAllowStructureAccess(class AShooterPlayerController* ForPC, bool* ReturnValue);
	int32 BPOverrideAllowSnapPoint(class APrimalStructure** OtherStructure, bool* ReturnValue);
	class FName BPOnVariantSwitch();
	bool BPOnStructurePickup(class APlayerController** PlayerController);
	class APrimalStructure* BPOnLinkedStructureDestroyed();
	class AActor* BPOnDemolish(class APlayerController* ForPC);
	class APrimalStructure* BPNotifyAmmoBoxReloadedStructure();
	bool BPNetRefreshStructureColors();
	bool BPIsAllowedToBuildEx(int32* ReturnValue);
	int32 BPIsAllowedToBuild(int32* ReturnValue);
	struct FVector BPImpactEffect(bool* ReturnValue);
	void BPHandleStructureEnabled(bool* bEnabled);
	class APrimalStructure* BPHandleBedFastTravel(class AShooterPlayerController* ForPC, bool* ReturnValue);
	void BPGetStructureID(class APrimalStructure** PrimalStructure, int32* ReturnValue);
	class UClass* BPGetSnapToPlacementMeshOverride(const struct FVector& PreviewLocOffset, const struct FRotator& PreviewRotOffset, const struct FVector& PreviewScaleOffset);
	void BPGetSnapPoints(TArray<struct FPrimalStructureSnapPoint>* ReturnValue);
	class UClass* BPGetSnapFromPlacementMeshOverride(const struct FVector& PreviewLocOffset, const struct FRotator& PreviewRotOffset, const struct FVector& PreviewScaleOffset);
	class UPrimalItem* BPGetInfoFromConsumedItemForPlacedStructure();
	int32 BPGetFromID(class APrimalStructure** ReturnValue);
	void BPGetAmmoBoxReloadPercent(float* ReturnValue);
	class UClass* BPGetAllLinkedStructures();
	float BPGetAggroDinoOnDamageSettings();
	struct FVector BPForceConsideredEnemyFoundation(bool* ReturnValue);
	bool BPDefaultProcessEditText(class AShooterPlayerController* ForPC);
	class UPrimalItem* BPCheckItemRequiementsToBuild(int32* ReturnValue);
	void BPBlockListUpdated();
	void BPBeginPreview();
	void BPApplyCustomDurabilityOnPickup(class UPrimalItem** PickedUp);
	void BPAllowSwitchToVariant(class FName VariantTag, bool* ReturnValue);
	class FName BPAllowSnapRotationForStructure(class APrimalStructure** OtherStructure, bool* ReturnValue);
	void BPAllowSnappingWith(class APrimalStructure** OtherStructure, class APlayerController* ForPC, bool* ReturnValue);
	void BPAllowPickupGiveItem(class APlayerController* ForPC, bool* ReturnValue);
	class UStructurePaintingComponent* BP_OnPaintingComponentInitialized();
	float BlueprintDrawPreviewHUD();
	float BlueprintDrawHUD();
	class UAnimNotify* BlueprintAnimNotifyCustomEvent(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);
	class UPrimalItem* ApplyPrimalItemSettingsToStructure();
	void AllowStructureAccess(class APlayerController* ForPC, bool* ReturnValue);
	void AllowSnappingWith(class APrimalStructure** OtherStructure, class APlayerController* ForPC, bool* ReturnValue);
	void AllowShowUserGeneratedText(bool* ReturnValue);
};

// 0x460 (0x14F0 - 0x1090)
// Class ShooterGame.PrimalStructureItemContainer
class APrimalStructureItemContainer : public APrimalStructure
{
public:
	class UPrimalInventoryComponent*             MyInventoryComponent;                              // 0x1090(0x8)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        bAdjustDamageAsPlayerWithEquipment : 1;            // Mask: 0x1, PropSize: 0x10x1098(0x1)(BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCollisionCompsForFloatingDPS : 1;              // Mask: 0x2, PropSize: 0x10x1098(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyConsumeDurabilityOnEquipmentForEnemies : 1;   // Mask: 0x4, PropSize: 0x10x1098(0x1)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoActivateContainer : 1;                        // Mask: 0x8, PropSize: 0x10x1098(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanToggleActivation : 1;                          // Mask: 0x10, PropSize: 0x10x1098(0x1)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoActivateWhenFueled : 1;                       // Mask: 0x20, PropSize: 0x10x1098(0x1)(BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowCustomName : 1;                              // Mask: 0x40, PropSize: 0x10x1098(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bContainerActivated : 1;                           // Mask: 0x80, PropSize: 0x10x1098(0x1)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyUseSpoilingMultipliersIfActivated : 1;        // Mask: 0x1, PropSize: 0x10x1099(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCraftingSubstractConnectedWater : 1;              // Mask: 0x2, PropSize: 0x10x1099(0x1)(Edit, ConstParm, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceNoPinLocking : 1;                            // Mask: 0x4, PropSize: 0x10x1099(0x1)(Edit, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bServerBPNotifyInventoryItemChanges : 1;           // Mask: 0x8, PropSize: 0x10x1099(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClientBPNotifyInventoryItemChanges : 1;           // Mask: 0x10, PropSize: 0x10x1099(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisplayActivationOnInventoryUI : 1;               // Mask: 0x20, PropSize: 0x10x1099(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetFuelConsumptionMultiplier : 1;            // Mask: 0x40, PropSize: 0x10x1099(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventToggleActivation : 1;                      // Mask: 0x80, PropSize: 0x10x1099(0x1)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bServerBPNotifyInventoryItemChangesUseQuantity : 1; // Mask: 0x1, PropSize: 0x10x109A(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bStartedUnderwater : 1;                            // Mask: 0x2, PropSize: 0x10x109A(0x1)(Edit, ExportObject, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheckStartedUnderwater : 1;                       // Mask: 0x4, PropSize: 0x10x109A(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisplayActivationOnInventoryUISecondary : 1;      // Mask: 0x8, PropSize: 0x10x109A(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisplayActivationOnInventoryUITertiary : 1;       // Mask: 0x10, PropSize: 0x10x109A(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFuelAllowActivationWhenNoPower : 1;               // Mask: 0x20, PropSize: 0x10x109A(0x1)(Edit, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPoweredAllowBattery : 1;                          // Mask: 0x40, PropSize: 0x10x109A(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPoweredUsingBattery : 1;                          // Mask: 0x80, PropSize: 0x10x109A(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPoweredHasBattery : 1;                            // Mask: 0x1, PropSize: 0x10x109B(0x1)(Edit, Net, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPoweredAllowSolar : 1;                            // Mask: 0x2, PropSize: 0x10x109B(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPoweredUsingSolar : 1;                            // Mask: 0x4, PropSize: 0x10x109B(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseColorRegionForEmitterColor : 1;                // Mask: 0x8, PropSize: 0x10x109B(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_19B : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        SolarRefreshIntervalMin;                           // 0x109C(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SolarRefreshIntervalMax;                           // 0x10A0(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SolarRefreshInterval;                              // 0x10A4(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       LastSolarRefreshTime;                              // 0x10A8(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                BatteryClassOverride;                              // 0x10B0(0x8)(ConstParm, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        PoweredOverrideCounter;                            // 0x10B8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        UseBPApplyPinCode : 1;                             // Mask: 0x1, PropSize: 0x10x10BC(0x1)(BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_19C : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_25D1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UMaterialInterface*>            ActivateMaterials;                                 // 0x10C0(0x10)(ConstParm, Net, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UMaterialInterface*>            InActivateMaterials;                               // 0x10D0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FItemToDisplayInStructureTooltip> ItemsToDisplayInStructureTooltip;                  // 0x10E0(0x10)(ConstParm, BlueprintVisible, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UChildActorComponent*                  MyChildEmitterSpawnable;                           // 0x10F0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsLocked : 1;                                     // Mask: 0x1, PropSize: 0x10x10F8(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsPinLocked : 1;                                  // Mask: 0x2, PropSize: 0x10x10F8(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasFuel : 1;                                      // Mask: 0x4, PropSize: 0x10x10F8(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsUnderwater : 1;                                 // Mask: 0x8, PropSize: 0x10x10F8(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_19D : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_25D6[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                BoxName;                                           // 0x1100(0x10)(ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxBoxNameLength;                                  // 0x1110(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableActivationUnderwater : 1;                  // Mask: 0x1, PropSize: 0x10x1114(0x1)(BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePreventAutoActivateWhenConnectedToWater : 1; // Mask: 0x2, PropSize: 0x10x1114(0x1)(ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupportsLocking : 1;                              // Mask: 0x4, PropSize: 0x10x1114(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupportsPinLocking : 1;                           // Mask: 0x8, PropSize: 0x10x1114(0x1)(BlueprintVisible, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDropInventoryOnDestruction : 1;                   // Mask: 0x10, PropSize: 0x10x1114(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyWhenAllItemsRemoved : 1;                   // Mask: 0x20, PropSize: 0x10x1114(0x1)(ConstParm, BlueprintVisible, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDrinkingWater : 1;                                // Mask: 0x40, PropSize: 0x10x1114(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPoweredWaterSourceWhenActive : 1;                 // Mask: 0x80, PropSize: 0x10x1114(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bActiveRequiresPower : 1;                          // Mask: 0x1, PropSize: 0x10x1115(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsPowerJunction : 1;                              // Mask: 0x2, PropSize: 0x10x1115(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHidePowerJunctionConnection : 1;                  // Mask: 0x4, PropSize: 0x10x1115(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoActivateIfPowered : 1;                        // Mask: 0x8, PropSize: 0x10x1115(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLastToggleActivated : 1;                          // Mask: 0x10, PropSize: 0x10x1115(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupportsPinActivation : 1;                        // Mask: 0x20, PropSize: 0x10x1115(0x1)(ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsPowered : 1;                                    // Mask: 0x40, PropSize: 0x10x1115(0x1)(ConstParm, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyAllowTeamActivation : 1;                      // Mask: 0x80, PropSize: 0x10x1115(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReplicateItemFuelClass : 1;                       // Mask: 0x1, PropSize: 0x10x1116(0x1)(ExportObject, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseOpenSceneAction : 1;                           // Mask: 0x2, PropSize: 0x10x1116(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_19E : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPActivated : 1;                               // Mask: 0x8, PropSize: 0x10x1116(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanBeActivated : 1;                          // Mask: 0x10, PropSize: 0x10x1116(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanBeActivatedByPlayer : 1;                  // Mask: 0x20, PropSize: 0x10x1116(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOnContainerActiveHealthDecrease : 1;            // Mask: 0x40, PropSize: 0x10x1116(0x1)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPIsValidWaterSourceForPipe : 1;                  // Mask: 0x80, PropSize: 0x10x1116(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowAutoActivateWhenNoPower : 1;                 // Mask: 0x1, PropSize: 0x10x1117(0x1)(Edit, ExportObject, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoActivateWhenNoPower : 1;                      // Mask: 0x2, PropSize: 0x10x1117(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventUsingAsWirelessCraftingSource : 1;         // Mask: 0x4, PropSize: 0x10x1117(0x1)(ExportObject, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_19F : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        InsulationRange;                                   // 0x1118(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HyperThermiaInsulation;                            // 0x111C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HypoThermiaInsulation;                             // 0x1120(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ContainerActiveDecreaseHealthSpeed;                // 0x1124(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FuelConsumptionIntervalsMultiplier;                // 0x1128(0x4)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DropInventoryOnDestructionLifespan;                // 0x112C(0x4)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                ActivateContainerString;                           // 0x1130(0x10)(BlueprintVisible, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ActivateContainerIcon;                             // 0x1140(0x8)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                DeactivateContainerString;                         // 0x1148(0x10)(ConstParm, ExportObject, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DeactivateContainerIcon;                           // 0x1158(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ContainerActiveHealthDecreaseDamageTypePassive;    // 0x1160(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ActiveRequiresFuelItems;                           // 0x1168(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                FuelItemsConsumeInterval;                          // 0x1178(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        FuelItemsConsumedGiveItems;                        // 0x1188(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       NetDestructionTime;                                // 0x1198(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint32                                       CurrentPinCode;                                    // 0x11A0(0x4)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_25F5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       CurrentFuelTimeCache;                              // 0x11A8(0x8)(Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       LastCheckedFuelTime;                               // 0x11B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        LinkedPowerJunctionStructureID;                    // 0x11B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        CurrentItemCount;                                  // 0x11BC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        BlacklistedItemCount;                              // 0x11C0(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxItemCount;                                      // 0x11C4(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        EmitterColorRegionIndex;                           // 0x11C8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalStructure>       LinkedPowerJunctionStructure;                      // 0x11CC(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_25F8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                NextConsumeFuelGiveItemType;                       // 0x11D8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_25F9[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastActiveStateChangeTime;                         // 0x11E8(0x8)(Edit, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_25FA[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPrimalMapMarkerEntryData             MapMarkerLocationInfo;                             // 0x11F8(0x28)(Edit, BlueprintVisible, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_25FB[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BasedCharacterDamageInterval;                      // 0x1228(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BasedCharacterDamageAmount;                        // 0x122C(0x4)(ExportObject, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                BasedCharacterDamageType;                          // 0x1230(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                EngramRequirementClassOverride;                    // 0x1238(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                LinkedBlueprintSpawnActorPoint;                    // 0x1240(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalStructureItemContainer> PoweredNearbyStructureTemplate;                    // 0x1248(0x30)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PoweredNearbyStructureRange;                       // 0x1278(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2600[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UParticleSystem*                       JunctionLinkParticleTemplate;                      // 0x1280(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                UISceneTemplate;                                   // 0x1288(0x8)(BlueprintVisible, Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                OpenSceneActionName;                               // 0x1290(0x10)(Edit, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            OpenSceneActionIcon;                               // 0x12A0(0x8)(ConstParm, BlueprintVisible, ExportObject, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                DisabledOpenSceneActionName;                       // 0x12A8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisabledOpenSceneActionIcon;                       // 0x12B8(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                RequiresItemForOpenSceneAction;                    // 0x12C0(0x8)(Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRequiresItemExactClass : 1;                       // Mask: 0x1, PropSize: 0x10x12C8(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyWhenAllItemsRemovedExceptDefaults : 1;     // Mask: 0x2, PropSize: 0x10x12C8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInventoryForcePreventRemoteAddItems : 1;          // Mask: 0x4, PropSize: 0x10x12C8(0x1)(ConstParm, ExportObject, Net, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInventoryForcePreventItemAppends : 1;             // Mask: 0x8, PropSize: 0x10x12C8(0x1)(ExportObject, BlueprintReadOnly, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1A3 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseDeathCacheCharacterID : 1;                     // Mask: 0x20, PropSize: 0x10x12C8(0x1)(ConstParm, ExportObject, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideAutoActivateToggle : 1;                       // Mask: 0x40, PropSize: 0x10x12C8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCooldownOnTransferAll : 1;                     // Mask: 0x80, PropSize: 0x10x12C8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAmmoContainerBuff : 1;                         // Mask: 0x1, PropSize: 0x10x12C9(0x1)(Edit, ConstParm, Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1A4 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2604[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       DeathCacheCreationTime;                            // 0x12D0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2605[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class UParticleSystemComponent*              JunctionLinkCableParticle;                         // 0x12F0(0x8)(Edit, ExportObject, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               JunctionCableBeamOffsetStart;                      // 0x12F8(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               JunctionCableBeamOffsetEnd;                        // 0x1310(0x18)(BlueprintVisible, ExportObject, Net, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ContainerActivatedSound;                           // 0x1328(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ContainerDeactivatedSound;                         // 0x1330(0x8)(Edit, BlueprintReadOnly, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DemolishInventoryDepositClass;                     // 0x1338(0x8)(Edit, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                FuelItemTrueClass;                                 // 0x1340(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ReplicatedFuelItemClass;                           // 0x1348(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentFuelQuantity;                               // 0x1350(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDrawFuelRemaining : 1;                            // Mask: 0x1, PropSize: 0x10x1354(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1A5 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_260B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DrawFuelRemainingOffset;                           // 0x1358(0x4)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeCooldownRequestFuelRemaining;                  // 0x135C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	int16                                        ReplicatedFuelItemColorIndex;                      // 0x1360(0x2)(ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_260F[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UFXSystemAsset*                        DefaultParticleTemplate;                           // 0x1368(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          DefaultParticleLightColor;                         // 0x1370(0x10)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            DefaultAudioTemplate;                              // 0x1380(0x8)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        OverrideParticleTemplateItemClasses;               // 0x1388(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UFXSystemAsset*>                OverrideParticleTemplates;                         // 0x1398(0x10)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         AllowOverrideParticleLightColor;                   // 0x13A8(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHideUnusedParticleTypesOnRefreshActiveEffects;    // 0x13A9(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2615[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FLinearColor>                  OverrideParticleLightColor;                        // 0x13B0(0x10)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class USoundBase*>                    OverrideAudioTemplates;                            // 0x13C0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxActivationDistance;                             // 0x13D0(0x4)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2616[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                BoxNamePrefaceString;                              // 0x13D8(0x10)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        TribeGroupInventoryRank;                           // 0x13E8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetQuantityOfItemWithoutCheckingInventory : 1; // Mask: 0x1, PropSize: 0x10x13E9(0x1)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSetPlayerConstructor : 1;                    // Mask: 0x2, PropSize: 0x10x13E9(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReplicateLastActivatedTime : 1;                   // Mask: 0x4, PropSize: 0x10x13E9(0x1)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsAmmoContainer : 1;                              // Mask: 0x8, PropSize: 0x10x13E9(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bServerBPNotifyInventoryItemChangesUseSwapped : 1; // Mask: 0x10, PropSize: 0x10x13E9(0x1)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPNotifyRemoteViewerChange : 1;                   // Mask: 0x20, PropSize: 0x10x13E9(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1A8 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2618[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<float>                                FuelConsumeDecreaseDurabilityAmounts;              // 0x13F0(0x10)(Edit, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RandomFuelUpdateTimeMin;                           // 0x1400(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RandomFuelUpdateTimeMax;                           // 0x1404(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       LastDeactivatedTime;                               // 0x1408(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       LastActivatedTime;                                 // 0x1410(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ValidCraftingResourceMaxDurability;                // 0x1418(0x4)(EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ActivationCooldownTime;                            // 0x141C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint64                                       DeathCacheCharacterID;                             // 0x1420(0x8)(ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              LocalCorpseEmitter;                                // 0x1428(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SinglePlayerFuelConsumptionIntervalsMultiplier;    // 0x1430(0x4)(ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PoweredBatteryDurabilityToDecreasePerSecond;       // 0x1434(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DropInventoryDepositTraceDistance;                 // 0x1438(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_261C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TMap<class FName, struct FPrimalWirelessReferences> WirelessExchangeRefs;                              // 0x1440(0x50)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TWeakObjectPtr<class AShooterPlayerController>> ValidatedByPinCodePlayerControllers;               // 0x1490(0x10)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_261D[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseMeshOriginForInventoryAccessTrace : 1;         // Mask: 0x1, PropSize: 0x10x14A8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1AA : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_261E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                ActivatedIconColor;                                // 0x14AC(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                DeactivatedIconColor;                              // 0x14B0(0x4)(Edit, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_261F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            EnableUnpoweredAutoActivationIcon;                 // 0x14B8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableUnpoweredAutoActivationIcon;                // 0x14C0(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableAutoCraftIcon;                               // 0x14C8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableAutoCraftIcon;                              // 0x14D0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            AllowWirelessCraftingIcon;                         // 0x14D8(0x8)(Edit, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PreventWirelessCraftingIcon;                       // 0x14E0(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DrinkWaterIcon;                                    // 0x14E8(0x8)(ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureItemContainer* GetDefaultObj();

	void VerifyPinCode(int32* PinCode, bool* ReturnValue);
	void UpdateWirelessExchanges();
	void UpdateTribeGroupInventoryRank(uint8 NewRank);
	void UpdateSolarPower();
	void UpdateContainerActiveHealthDecrease();
	void TryActivation();
	int32 SetPoweredOverrideCounter();
	void RemoveWirelessConnections();
	void RemovePowerJunctionLinkParticle();
	void RefreshWatered();
	void RefreshPowerJunctionLink();
	class APrimalStructureItemContainer* RefreshPowered();
	void RefreshInventoryItemCounts();
	void OnContainerRenamed();
	void NetUpdateLocation(struct FVector* NewLocation);
	void NetUpdateBoxName(const class FString& NewName);
	int16 NetSetContainerActive();
	void NetRefreshActiveEffects();
	void MovePowerJunctionLink();
	class APrimalDinoCharacter* IsValidForDinoFeedingContainer(bool* ReturnValue);
	void IsValidatedPinCodePlayerController(class APlayerController* ForPC, bool* ReturnValue);
	void IsPlayerControllerInPinCodeValidationList(class APlayerController** PlayerController, bool* ReturnValue);
	class APrimalStructureItemContainer* HasSamePinCode(bool* ReturnValue);
	void GetTimeFuelRemaining(float* ReturnValue);
	TArray<class UMaterialInterface*> GetSkinMaterialsForActivation(bool* ReturnValue);
	void GetOverrideParticleLightColor(struct FLinearColor* ReturnValue);
	class UPrimalWirelessExchangeData* GetNearbyWirelessStructures(TMap<class APrimalStructureItemContainer*, class UPrimalWirelessExchangeData*>* ReturnValue);
	void GetDeathCacheCharacterID(int32* ReturnValue);
	void EnableActive();
	void CanBeActivated(bool* ReturnValue);
	class APlayerController* BPSetPlayerConstructor();
	void BPRename(const class FString& NewName);
	void BPPreGetMultiUseEntries(class APlayerController* ForPC);
	void BPOnContainerActiveHealthDecrease();
	bool BPNotifyRemoteViewerChange();
	void BPNotifyPowerChanged();
	bool BPNotifyInventoryItemChange();
	class APrimalStructureWaterPipe* BPIsValidWaterSourceForPipe(bool* ReturnValue);
	bool BPIncrementItemCountQty(int32* Qty, int32* ReturnValue);
	bool BPGetQuantityOfItemWithoutCheckingInventory(int32* ReturnValue);
	bool BPGetItemCountQty(int32* ReturnValue);
	void BPGetFuelConsumptionMultiplier(float* ReturnValue);
	enum class EPrimalEquipmentType BPGetCollisionCompInstanceInfo(struct FHitResult* HitInfo, bool* bSuccess, class FName BoneName);
	TArray<class APrimalStructureItemContainer*> BPDisplayWirelessSupplyLinks();
	void BPContainerDeactivated();
	void BPContainerActivated();
	class AShooterPlayerController* BPCanBeActivatedByPlayer(bool* ReturnValue);
	void BPCanBeActivated(bool* ReturnValue);
	void BPApplyPinCode(class AShooterPlayerController* ForPC, int32* AppledPinCode, bool* bIsSetting, int32* TheCustomIndex, bool* ReturnValue);
	bool ApplyActivationMaterialsToComponent(class UMeshComponent* MeshComp, bool* ReturnValue);
	void AllowToggleActivation(class AShooterPlayerController* ForPC, bool* ReturnValue);
	float AdjustNetDestructionTime(bool* ReturnValue);
	void AddToValidatedByPinCodePlayerControllers(class AShooterPlayerController* ForPC, int32* ReturnValue);
	class APrimalStructure* AddPowerJunctionLinkParticle();
};

// 0xC0 (0x15B0 - 0x14F0)
// Class ShooterGame.MissionDispatcher
class AMissionDispatcher : public APrimalStructureItemContainer
{
public:
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x14F0(0x8)(Edit, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class UParticleSystemComponent*              ParticleSystemComponent;                           // 0x14F8(0x8)(Edit, ConstParm, BlueprintVisible, Net, GlobalConfig)
	class UPrimalInventoryComponent*             TheInventoryComponent;                             // 0x1500(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        MissionActors;                                     // 0x1508(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        MissionTypes;                                      // 0x1518(0x10)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        AutoStartMissionTypesIndex;                        // 0x1528(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EMissionDispatcherTriggerMode     MissionDispatcherTriggerMode;                      // 0x152C(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_266D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          AdditionalMissionTriggerKeys;                      // 0x1530(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowConcurrentMissions : 1;                      // Mask: 0x1, PropSize: 0x10x1540(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowJoinMissionInProgress : 1;                   // Mask: 0x2, PropSize: 0x10x1540(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceStartMission : 1;                            // Mask: 0x4, PropSize: 0x10x1540(0x1)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanSpawnMission : 1;                         // Mask: 0x8, PropSize: 0x10x1540(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetMissionStartLocation : 1;                 // Mask: 0x10, PropSize: 0x10x1540(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnMissionStarted : 1;                        // Mask: 0x20, PropSize: 0x10x1540(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPActivateMissionActors : 1;                   // Mask: 0x40, PropSize: 0x10x1540(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDeactivateMissionActors : 1;                 // Mask: 0x80, PropSize: 0x10x1540(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnRunningMissionDeactivated : 1;             // Mask: 0x1, PropSize: 0x10x1541(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideMultiUseMissionList : 1;             // Mask: 0x2, PropSize: 0x10x1541(0x1)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bParticleSystemActiveOnlyWhenMissionNotRunning : 1; // Mask: 0x4, PropSize: 0x10x1541(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseMissionMetaTags : 1;                           // Mask: 0x8, PropSize: 0x10x1541(0x1)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1AD : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_266F[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class AMissionType*                          RunningMission;                                    // 0x1548(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDistanceAllowToStartMission;                    // 0x1550(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2670[0x5C];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AMissionDispatcher* GetDefaultObj();

	class FString StartMission(class AMissionType** ReturnValue);
	void OnRunningMissionDeactivated(class AMissionType** Mission);
	void MultiSetParticleSystemActive(bool* bIsActive);
	void MultiDeactivateMissionActors();
	void MultiActivateMissionActors();
	class AShooterCharacter* IsValidDispatcherForMissionType(bool* ReturnValue);
	bool GetFallbackSeed(int32* ReturnValue);
	void GenerateFallbackSeeds();
	class UClass* ClearFallbackSeeds();
	class AShooterCharacter* BPOverrideMultiUseMissionList(class APlayerController* ForPC, TArray<class UClass*>* ReturnValue);
	void BPOnRunningMissionDeactivated(class AMissionType** Mission);
	class AShooterCharacter* BPOnMissionStarted();
	class AShooterCharacter* BPOnMissionFailToStart();
	class AShooterCharacter* BPGetMissionStartLocation(struct FVector* ReturnValue);
	void BPDeactivateMissionActors();
	class AShooterCharacter* BPCanSpawnMission(bool* ReturnValue);
	void BPActivateMissionActors();
	int32 AddFallbackSeed();
};

// 0x10 (0x4D8 - 0x4C8)
// Class ShooterGame.MissionDispatcherPoint
class AMissionDispatcherPoint : public AActor
{
public:
	TArray<class FName>                          MissionTags;                                       // 0x4C8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AMissionDispatcherPoint* GetDefaultObj();

};

// 0x58 (0x410 - 0x3B8)
// Class ShooterGame.MissionDispatcherToolTipWidget
class UMissionDispatcherToolTipWidget : public UToolTipWidget
{
public:
	class FString                                MissionNameLabelName;                              // 0x3B8(0x10)(Edit, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                TitleLabelName;                                    // 0x3C8(0x10)(Edit, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                MissionStatusLabelName;                            // 0x3D8(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_267B[0x28];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMissionDispatcherToolTipWidget* GetDefaultObj();

};

// 0x20 (0x778 - 0x758)
// Class ShooterGame.MissionListEntryWidget
class UMissionListEntryWidget : public UBaseSelectableButtonWidget
{
public:
	class FString                                ItemLabelName;                                     // 0x758(0x10)(BlueprintVisible, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_267E[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMissionListEntryWidget* GetDefaultObj();

};

// 0x88 (0xB0 - 0x28)
// Class ShooterGame.MissionMetaTagInfo
class UMissionMetaTagInfo : public UObject
{
public:
	struct FMetaTagIDInfo                        MetaTagInfo[0xB];                                  // 0x28(0x84)(BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2680[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMissionMetaTagInfo* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.MissionModuleBase
class UMissionModuleBase : public UObject
{
public:

	static class UClass* StaticClass();
	static class UMissionModuleBase* GetDefaultObj();

	void BPGetTargetingDesire(class APrimalDinoCharacter* MissionDino, class AActor* ForTarget, float ForTargetingDesireValue, float* ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.MissionModuleInterface
class IMissionModuleInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IMissionModuleInterface* GetDefaultObj();

	void RunMissionModule(class UClass* ModuleClass, class UNewMissionModuleBase** ReturnValue);
};

// 0x28 (0x358 - 0x330)
// Class ShooterGame.MissionObjectiveEntryWidget
class UMissionObjectiveEntryWidget : public UPrimalUserWidget
{
public:
	class FString                                ItemLabelName;                                     // 0x330(0x10)(BlueprintVisible, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2692[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMissionObjectiveEntryWidget* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.MissionPrerequisite
class UMissionPrerequisite : public UObject
{
public:

	static class UClass* StaticClass();
	static class UMissionPrerequisite* GetDefaultObj();

	void IsSatisfied(class APlayerController** Controller, class AShooterCharacter* PlayerPawn, class APrimalBuff_MissionData* PlayerMissionData, class FString* OutReason, bool* ReturnValue);
};

// 0x20 (0x350 - 0x330)
// Class ShooterGame.MissionRequirementEntryWidget
class UMissionRequirementEntryWidget : public UPrimalUserWidget
{
public:
	class FString                                DisplayText;                                       // 0x330(0x10)(ExportObject, BlueprintReadOnly, InstancedReference, SubobjectReference)
	class FName                                  CustomTag;                                         // 0x340(0x8)(Edit, ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_269E[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMissionRequirementEntryWidget* GetDefaultObj();

	class FString SetDisplayText();
	class FName SetCustomTag();
	void Initialize(bool* ReturnValue);
};

// 0x0 (0x4C8 - 0x4C8)
// Class ShooterGame.PrimalPointNote
class APrimalPointNote : public ANote
{
public:

	static class UClass* StaticClass();
	static class APrimalPointNote* GetDefaultObj();

};

// 0x50 (0x518 - 0x4C8)
// Class ShooterGame.MissionServerSidePoint
class AMissionServerSidePoint : public APrimalPointNote
{
public:
	class FName                                  TriggerKey;                                        // 0x4C8(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	int32                                        TriggerOrder;                                      // 0x4D0(0x4)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        CustomDataInt;                                     // 0x4D4(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	float                                        CustomDataFloat;                                   // 0x4D8(0x4)(Edit, ExportObject, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_26A4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<float>                                CustomDataFloatArray;                              // 0x4E0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CustomDataVector;                                  // 0x4F0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                CustomDataString;                                  // 0x508(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AMissionServerSidePoint* GetDefaultObj();

	void SetTriggerKey(class FName NewTriggerKey);
};

// 0x8 (0x4D0 - 0x4C8)
// Class ShooterGame.SplineActor
class ASplineActor : public AActor
{
public:
	class USplineComponent*                      SplineComponent;                                   // 0x4C8(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnInstance, GlobalConfig)

	static class UClass* StaticClass();
	static class ASplineActor* GetDefaultObj();

};

// 0x60 (0x530 - 0x4D0)
// Class ShooterGame.MissionSpline
class AMissionSpline : public ASplineActor
{
public:
	bool                                         bValidateSpline;                                   // 0x4D0(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_26B9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SplineValidationMinTotalLength;                    // 0x4D4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 SplineValidationChannel;                           // 0x4D8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_26BC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        SplineValidationNumTracesPerSplineSegment;         // 0x4DC(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SplineValidationDebugDrawDuration;                 // 0x4E0(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TriggerKey;                                        // 0x4E4(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	int32                                        TriggerOrder;                                      // 0x4EC(0x4)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        CustomDataInt;                                     // 0x4F0(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	float                                        CustomDataFloat;                                   // 0x4F4(0x4)(Edit, ExportObject, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                CustomDataFloatArray;                              // 0x4F8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CustomDataVector;                                  // 0x508(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                CustomDataString;                                  // 0x520(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AMissionSpline* GetDefaultObj();

	float SpawnerUpdate();
	struct FVector FindLocationAndDirectionClosestToWorldLocation(struct FVector* OutLocation, const struct FVector& OutDirection, float OutSplineKey, bool* ReturnValue);
};

// 0x10 (0x340 - 0x330)
// Class ShooterGame.MissionTimerWidget
class UMissionTimerWidget : public UPrimalUserWidget
{
public:
	uint8                                        Pad_26C4[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMissionTimerWidget* GetDefaultObj();

};

// 0x540 (0xA20 - 0x4E0)
// Class ShooterGame.MissionTrigger
class AMissionTrigger : public ABaseBoxTrigger
{
public:
	uint8                                        Pad_26CD[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class FName                                  TriggerKey;                                        // 0x4F0(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	int32                                        TriggerOrder;                                      // 0x4F8(0x4)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        CustomDataInt;                                     // 0x4FC(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	float                                        CustomDataFloat;                                   // 0x500(0x4)(Edit, ExportObject, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_26D0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<float>                                CustomDataFloatArray;                              // 0x508(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CustomDataVector;                                  // 0x518(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                CustomDataString;                                  // 0x530(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FPointOfInterestData                  MyPointOfInterestData;                             // 0x540(0x1E0)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FPointOfInterestCompanionBehavior     MyPointOfInterestCompanionBehavior;                // 0x720(0x300)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AMissionTrigger* GetDefaultObj();

	void IsPointOfInterestValid(bool* ReturnValue);
	void GetMyPointOfInterestData(struct FPointOfInterestData* ReturnValue);
	void GetMyPointOfInterestCompanionBehavior(struct FPointOfInterestCompanionBehavior* ReturnValue);
};

// 0x680 (0xB48 - 0x4C8)
// Class ShooterGame.MissionType
class AMissionType : public AActor
{
public:
	class USceneComponent*                       MissionRoot;                                       // 0x4C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UPrimalInventoryComponent*             MissionInventory;                                  // 0x4D0(0x8)(BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MissionVersion;                                    // 0x4D8(0x4)(BlueprintVisible, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D63[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          PrereqMissionTags;                                 // 0x4E0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          PreventsStargingMissionsOfTags;                    // 0x4F0(0x10)(ConstParm, ExportObject, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          BuffTagsThatPreventMission;                        // 0x500(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        UnlockPrequisites;                                 // 0x510(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        PrereqMissionTypes;                                // 0x520(0x10)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MissionTimeOfDayUnlockTime;                        // 0x530(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MissionTimeOfDayLockTime;                          // 0x534(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EMissionDispatchMode              DispatchMode;                                      // 0x538(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D6D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MissionDispatcherMaxDistance;                      // 0x53C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MissionWildDinoOutgoingDamageScale;                // 0x540(0x4)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MissionWildDinoIncomingDamageScale;                // 0x544(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxPlayerCount;                                    // 0x548(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxDinosPerPlayerAllowedOnMission;                 // 0x54C(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalMissionCooldown;                             // 0x550(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PerPlayerMissionCooldown;                          // 0x554(0x4)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        TargetPlayerLevel;                                 // 0x558(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MinPlayerLevel;                                    // 0x55C(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxPlayerLevel;                                    // 0x560(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupportsMissionTimeOfDayLocking : 1;              // Mask: 0x1, PropSize: 0x10x564(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyAllowMountsOnMission : 1;                     // Mask: 0x2, PropSize: 0x10x564(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTreatPlayerLevelRangeAsHardCap : 1;               // Mask: 0x4, PropSize: 0x10x564(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPStaticIsPlayerEligibleForMission : 1;        // Mask: 0x8, PropSize: 0x10x564(0x1)(ConstParm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoSendMissionCompleteNotification : 1;          // Mask: 0x10, PropSize: 0x10x564(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoSendMissionCompleteAlert : 1;                 // Mask: 0x20, PropSize: 0x10x564(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoRewardLootOnMissionComplete : 1;              // Mask: 0x40, PropSize: 0x10x564(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoRewardXPOnMissionComplete : 1;                // Mask: 0x80, PropSize: 0x10x564(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetExtraLocalMissionIndicators : 1;          // Mask: 0x1, PropSize: 0x10x565(0x1)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMissionPreventsCryoDeploy : 1;                    // Mask: 0x2, PropSize: 0x10x565(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMissionPreventsMekDeploy : 1;                     // Mask: 0x4, PropSize: 0x10x565(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMissionPreventsDinoSpawner : 1;                   // Mask: 0x8, PropSize: 0x10x565(0x1)(Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMissionPreventsFlyers : 1;                        // Mask: 0x10, PropSize: 0x10x565(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMissionPreventsVehicle : 1;                       // Mask: 0x20, PropSize: 0x10x565(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanRideMissionDino : 1;                      // Mask: 0x40, PropSize: 0x10x565(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisabledOnXboxSinglePlayer : 1;                   // Mask: 0x80, PropSize: 0x10x565(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisabledOnPS4SinglePlayer : 1;                    // Mask: 0x1, PropSize: 0x10x566(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1F8 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2D7F[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                MissionDisplayName;                                // 0x568(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                MissionDescription;                                // 0x578(0x10)(Edit, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                MissionSuccessMessage;                             // 0x588(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance)
	struct FLinearColor                          MissionSuccessMessageColor;                        // 0x598(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                MissionFailedMessage;                              // 0x5A8(0x10)(BlueprintVisible, OutParm, ReturnParm, DisableEditOnInstance)
	struct FLinearColor                          MissionFailedMessageColor;                         // 0x5B8(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                MissionAlertTitle;                                 // 0x5C8(0x10)(Edit, ConstParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                MissionInitiatedString;                            // 0x5D8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MissionCompleteAlertDisplayTime;                   // 0x5E8(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D84[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            MissionIcon;                                       // 0x5F0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            CombatMusicOverride;                               // 0x5F8(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FLootTableEntry>               RewardLootTable;                                   // 0x600(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        RewardItemCount;                                   // 0x610(0x4)(ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RewardXPRatio;                                     // 0x614(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        FirstTimeCompletionHexagonRewardBonus;             // 0x618(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        FirstTimeCompletionHexagonRewardOverride;          // 0x61C(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        HexagonsOnCompletion;                              // 0x620(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDivideHexogonsOnCompletion;                       // 0x624(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAutoRewardFromCustomItemSets;                     // 0x625(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRollExtraLootSetsPerPlayer;                       // 0x626(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D8A[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MinimumItemSetGenerationRolls;                     // 0x628(0x4)(ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEqualRewardsToAllParticipants;                    // 0x62C(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D8C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        GenerateItemSetsQualityMultiplierMin;              // 0x630(0x4)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GenerateItemSetsQualityMultiplierMax;              // 0x634(0x4)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinItemSets;                                       // 0x638(0x4)(ConstParm, BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	float                                        MaxItemSets;                                       // 0x63C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	float                                        NumItemSetsPower;                                  // 0x640(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        bSetsRandomWithoutReplacement : 1;                 // Mask: 0x1, PropSize: 0x10x644(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1F9 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2D8F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSupplyCrateItemSet>           CustomItemSets;                                    // 0x648(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCustomMissionsUIRewardsLabelText : 1;          // Mask: 0x1, PropSize: 0x10x658(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1FA : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2D92[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                CustomMissionsUIRewardsLabelText;                  // 0x660(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  InitialMissionPhase;                               // 0x670(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMissionPhase>                 Phases;                                            // 0x678(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMissionPhaseData>             PhaseData;                                         // 0x688(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MissionInventoryTemplate;                          // 0x698(0x8)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                LeaderboardType;                                   // 0x6A0(0x8)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FLeaderboardRow>               DefaultLeaderboardRows;                            // 0x6A8(0x10)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMissionWorldBuffData>         SuccessWorldBuffs;                                 // 0x6B8(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMissionWorldBuffData>         FailureWorldBuffs;                                 // 0x6C8(0x10)(BlueprintVisible, Net, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          DisableTekArmorBuffs;                              // 0x6D8(0x10)(Edit, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysCreateMissionInventory : 1;                 // Mask: 0x1, PropSize: 0x10x6E8(0x1)(Edit, ExportObject, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoUpdateRequirements : 1;                       // Mask: 0x2, PropSize: 0x10x6E8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoUpdateWorldIndicators : 1;                    // Mask: 0x4, PropSize: 0x10x6E8(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsePerPlayerWorldIndicators : 1;                  // Mask: 0x8, PropSize: 0x10x6E8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsePerPlayerPhaseRequirements : 1;                // Mask: 0x10, PropSize: 0x10x6E8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoDeactivateMissionBuff : 1;                    // Mask: 0x20, PropSize: 0x10x6E8(0x1)(Edit, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMissionWeaponsHaveInfiniteAmmo : 1;               // Mask: 0x40, PropSize: 0x10x6E8(0x1)(BlueprintReadOnly, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseDinoEvents : 1;                                // Mask: 0x80, PropSize: 0x10x6E8(0x1)(ExportObject, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyMissionDinosOnDeactivate : 1;              // Mask: 0x1, PropSize: 0x10x6E9(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowHarvestingMissionDinos : 1;                  // Mask: 0x2, PropSize: 0x10x6E9(0x1)(ExportObject, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsePlayerEvents : 1;                              // Mask: 0x4, PropSize: 0x10x6E9(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseInventoryEvents : 1;                           // Mask: 0x8, PropSize: 0x10x6E9(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseTriggerEvents : 1;                             // Mask: 0x10, PropSize: 0x10x6E9(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseStructureEvents : 1;                           // Mask: 0x20, PropSize: 0x10x6E9(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPTryCompletePhase : 1;                        // Mask: 0x40, PropSize: 0x10x6E9(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGenerateMissionRewards : 1;                  // Mask: 0x80, PropSize: 0x10x6E9(0x1)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDebugWorldIndicators : 1;                         // Mask: 0x1, PropSize: 0x10x6EA(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoDeactivateMissionWithNoPlayers : 1;           // Mask: 0x2, PropSize: 0x10x6EA(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoSaveMissionCompleteStatusPerPlayer : 1;       // Mask: 0x4, PropSize: 0x10x6EA(0x1)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRepeatableMission : 1;                            // Mask: 0x8, PropSize: 0x10x6EA(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableLevelUpSoundDuringMission : 1;             // Mask: 0x10, PropSize: 0x10x6EA(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideMissionTimerColor : 1;               // Mask: 0x20, PropSize: 0x10x6EA(0x1)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideMissionIndicatorString : 1;          // Mask: 0x40, PropSize: 0x10x6EA(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceCompleteOnDeactivate : 1;                    // Mask: 0x80, PropSize: 0x10x6EA(0x1)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemovePlayerFromMissionOnDeath : 1;               // Mask: 0x1, PropSize: 0x10x6EB(0x1)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPersistentMission : 1;                            // Mask: 0x2, PropSize: 0x10x6EB(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseMissionTagAsStringIfLookupFails : 1;           // Mask: 0x4, PropSize: 0x10x6EB(0x1)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bScaleMinDistanceToWaypointByRotationRate : 1;     // Mask: 0x8, PropSize: 0x10x6EB(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1FB : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bPreventShowingMissionTime : 1;                    // Mask: 0x20, PropSize: 0x10x6EB(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowNegativeMissionStartNetworkTime : 1;         // Mask: 0x40, PropSize: 0x10x6EB(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowInUI : 1;                                     // Mask: 0x80, PropSize: 0x10x6EB(0x1)(ConstParm, BlueprintReadOnly, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DA3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FTaggedString>                 CustomMissionRequirements;                         // 0x6F0(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSingletonMission : 1;                             // Mask: 0x1, PropSize: 0x10x700(0x1)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1FC : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2DA6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinDistanceToWaypointMultiplier;                   // 0x704(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MissionDebugFlags;                                 // 0x708(0x4)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DA7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          TriggerKeys;                                       // 0x710(0x10)(ConstParm, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MissionMaxDurationSeconds;                         // 0x720(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, InstancedReference, SubobjectReference)
	float                                        MissionDurationConsoleOffsetSeconds;               // 0x724(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EMissionTimerMode                 MissionTimerUIMode;                                // 0x728(0x1)(Edit, BlueprintVisible, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EMissionTimerMode                 MissionDurationUIMode;                             // 0x729(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DAA[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                MissionObjectiveTimeLabelString;                   // 0x730(0x10)(ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LifetimeAfterDeactivated;                          // 0x740(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DAD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FTaggedString>                 MissionStrings;                                    // 0x748(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MissionBuffType;                                   // 0x758(0x8)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bListEntryOnly;                                    // 0x760(0x1)(ConstParm, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseThrottledTick;                                 // 0x761(0x1)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DB1[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTimeRange                            ThrottledTickTimeRange;                            // 0x764(0x8)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseThrottledServerTick;                           // 0x76C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DB2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTimeRange                            ThrottledServerTickTimeRange;                      // 0x770(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseThrottledClientTick;                           // 0x778(0x1)(Edit, ConstParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DB5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTimeRange                            ThrottledClientTickTimeRange;                      // 0x77C(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DB6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterCharacter*                     StartedByCharacter;                                // 0x788(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCharacterAndControllerPair>   PlayersOnMission;                                  // 0x790(0x10)(Edit, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       MissionStartNetworkTime;                           // 0x7A0(0x8)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, InstancedReference, SubobjectReference)
	double                                       PostSetupMissionStartNetworkTime;                  // 0x7A8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EMissionState                     MissionState;                                      // 0x7B0(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DB9[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            CurrentMissionMusic;                               // 0x7B8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class AMissionSpline*>                DinoPathingSplines;                                // 0x7C0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         UseDynamicMissionStrings;                          // 0x7D0(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DBC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PrepAreaRadius;                                    // 0x7D4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PrepDuration;                                      // 0x7D8(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPrepUseTargetingTeamOfStartingPlayer;             // 0x7DC(0x1)(BlueprintVisible, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	enum class ETargetingTeamBehavior            PrepTargetingTeamBehavior;                         // 0x7DD(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DBF[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                PrepAreaEmitter;                                   // 0x7E0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSetPrepAreaEmitterLifespanToPrepDuration;         // 0x7E8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DC3[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UParticleSystem*                       PrepAreaPlayerInclusionParticles;                  // 0x7F0(0x8)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPrepAreaAutoSendNotificationToIncludedPlayers;    // 0x7F8(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DC5[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                PrepAreaNotificationPrefix;                        // 0x800(0x10)(Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            MissionSuccessSound;                               // 0x810(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            MissionFailedSound;                                // 0x818(0x8)(Edit, ConstParm, ExportObject, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          LevelsToLoad;                                      // 0x820(0x10)(BlueprintVisible, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          LevelsToLoadSinglePlayerAndListenServer;           // 0x830(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            MissionPhaseStartedEvent;                          // 0x840(0x10)(ConstParm, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            MissionPhaseEndedEvent;                            // 0x850(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            MissionDeactivatedEvent;                           // 0x860(0x10)(Edit, ExportObject, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            MissionResetTimerEvent;                            // 0x870(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MissionCustomData;                                 // 0x880(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class APrimalDinoCharacter*>          MissionDinos;                                      // 0x888(0x10)(BlueprintVisible, ExportObject, Net, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class APrimalStructure*>              MissionStructures;                                 // 0x898(0x10)(ConstParm, Net, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DD0[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class ADroppedItemMission*>           MissionDroppedItems;                               // 0x8F8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FTeleportedCharacter>          TeleportedCharacters;                              // 0x908(0x10)(BlueprintVisible, ExportObject, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPlayerItems>                  PlayerUsableItems;                                 // 0x918(0x10)(ConstParm, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                MissionDispatcher;                                 // 0x928(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig)
	TArray<class AShooterCharacter*>             PlayersPendingAddToMission;                        // 0x930(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DD4[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class APrimalBuff>             Gen2TeleportBuff;                                  // 0x948(0x30)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DD7[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        MissionPhaseIndex;                                 // 0x998(0x4)(Edit, Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DD8[0xAC];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseGen2TeleportBuff : 1;                          // Mask: 0x1, PropSize: 0x10xA48(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1FD : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHasRunSetup : 1;                                  // Mask: 0x4, PropSize: 0x10xA48(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSuspendedDueToStasis : 1;                         // Mask: 0x8, PropSize: 0x10xA48(0x1)(Edit, ConstParm, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSaveMissionItemData : 1;                          // Mask: 0x10, PropSize: 0x10xA48(0x1)(ExportObject, BlueprintReadOnly, Net, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAbsoluteForcePreventLeavingMission : 1;           // Mask: 0x20, PropSize: 0x10xA48(0x1)(Edit, BlueprintVisible, Net, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasActivatedSuccessFailureWorldBuffs : 1;         // Mask: 0x40, PropSize: 0x10xA48(0x1)(Edit, BlueprintReadOnly, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetMissionTargetingDesire : 1;               // Mask: 0x80, PropSize: 0x10xA48(0x1)(Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideRandomWanderLocation : 1;            // Mask: 0x1, PropSize: 0x10xA49(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowTargetingOtherMissionDinos : 1;              // Mask: 0x2, PropSize: 0x10xA49(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyReverseTeleportOnMissionDeactivation : 1;     // Mask: 0x4, PropSize: 0x10xA49(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesFallbackSeeds : 1;                            // Mask: 0x8, PropSize: 0x10xA49(0x1)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1FE : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2DE2[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                MissionDepositInventoryClass;                      // 0xA50(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       LastThrottledTickEventTime;                        // 0xA58(0x8)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentThrottledTickEventInterval;                 // 0xA60(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DE5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastThrottledServerTickEventTime;                  // 0xA68(0x8)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentThrottledServerTickEventInterval;           // 0xA70(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DE7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastThrottledClientTickEventTime;                  // 0xA78(0x8)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentThrottledClientTickEventInterval;           // 0xA80(0x4)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DE9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastAutoSwitchPhaseTime;                           // 0xA88(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentAutoSwitchPhaseInterval;                    // 0xA90(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DEB[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          SplineSpanwerTriggerKeys;                          // 0xAA0(0x10)(ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  OnFailureKillAllTamesInTileStreamingVolumeCustomTag; // 0xAB0(0x8)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class AMissionSpline*>                SplineSpawners;                                    // 0xAB8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DED[0x60];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        ActivePreventsMissions;                            // 0xB28(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UObject*>                       ExtraReferences;                                   // 0xB38(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AMissionType* GetDefaultObj();

	bool UpdateWorldIndicators();
	bool UpdateRequirements();
	float UpdateMissionPrepArea();
	bool TryCompletePhase(bool* ReturnValue);
	bool TryChangeMissionPhase(class FName* NewPhase, bool* ReturnValue);
	void TotalMaxHealth_Players(const TArray<class AShooterCharacter*>& PlayerArray, float* ReturnValue);
	void TotalMaxHealth_Dinos(TArray<class APrimalDinoCharacter*>* DinoArray, float* ReturnValue);
	void TotalMaxHealth_Characters(TArray<class APrimalCharacter*>* CharacterArray, float* ReturnValue);
	void TotalCurrentHealth_Players(const TArray<class AShooterCharacter*>& PlayerArray, float* ReturnValue);
	void TotalCurrentHealth_Dinos(TArray<class APrimalDinoCharacter*>* DinoArray, float* ReturnValue);
	void TotalCurrentHealth_Characters(TArray<class APrimalCharacter*>* CharacterArray, float* ReturnValue);
	bool TeleportCharacterForMission(class APrimalCharacter** Character, struct FVector* NewLocation, bool* ReturnValue);
	void SuspendMission();
	void StopMissionMusic();
	void StaticOnReplicatedMissionDataUpdated(class APrimalBuff_MissionData** MissionData);
	void StaticOnMissionDataInitialized(class APrimalBuff_MissionData** MissionData);
	class FName StaticGetTaggedString(class UClass* MissionType, class FString* OutString, bool* ReturnValue);
	bool SpawnMissionWeapon(class AShooterWeapon** ReturnValue);
	int32 SpawnMissionStructure(class UClass** StructureType, struct FVector* SpawnLocation, class APrimalStructure** ReturnValue);
	float SpawnMissionItem(class ADroppedItemMission** ReturnValue);
	bool SpawnMissionDinoGroupExtended(struct FVector* SpawnLocation, enum class ESpawnPattern Pattern, float* DebugDrawDuration, float AIRangeMultiplier, TArray<class APrimalDinoCharacter*>* ReturnValue);
	bool SpawnMissionDinoGroup(struct FVector* SpawnLocation, enum class ESpawnPattern Pattern, float* DebugDrawDuration, float AIRangeMultiplier, TArray<class APrimalDinoCharacter*>* ReturnValue);
	bool SpawnMissionDino(struct FVector* SpawnLocation, float* DebugDrawDuration, float AIRangeMultiplier, class APrimalDinoCharacter** ReturnValue);
	bool SpawnMission(class UClass* MissionType, class AShooterCharacter* ForCharacter, struct FVector* Location, class FString* FailureReason, class AActor** MissionDispatcherActor, class AMissionType** ReturnValue);
	float SpawnEmitterForPlayers();
	TArray<struct FMissionWorldIndicator> SortMissionWorldIndicatorArrayByDistance(class APrimalCharacter* ForCharacter, bool bReverseSort);
	struct FVector SetupMissionPrepArea();
	int32 SetSpecificSplineKeyTarget();
	struct FRotator SetReverseTeleportReturnLocation(class APrimalCharacter** Character, struct FVector* NewLocation);
	bool SetPlayerPrepAreaState(class AShooterCharacter* PlayerPawn);
	bool SetPlayerParticleSystemIndicator(class AShooterCharacter* PlayerPawn);
	FDelegateProperty_ SetPhaseStartedDelegate(class FName* PhaseName);
	FDelegateProperty_ SetPhaseEndedDelegate(class FName* PhaseName);
	bool SetPhaseCompleted();
	float SetMissionTimeRemaining();
	class USoundBase* SetMissionMusic();
	float SetMissionDeactivationTimer();
	double SetMissionCompletedStatus(bool* ReturnValue);
	float SetDinoAITargetActor(bool* ReturnValue);
	class AActor* SetDinoAINavigationTargetActor(bool* ReturnValue);
	class AActor* SetDinoAIForcedTargetActor(bool* ReturnValue);
	void ServerRequestToggleWeapon(class AShooterCharacter** Character);
	class USoundBase* SendNotificationToPlayer();
	class USoundBase* SendNotificationToAllPlayers();
	bool SendMissionAlertToPlayer(enum class EMissionAlertType* AlertType, class FString* AlertTitle);
	bool SendMissionAlertToAllPlayers(enum class EMissionAlertType* AlertType, class FString* AlertTitle);
	void ReverseTeleportCharacter(class APrimalCharacter** Character, bool* ReturnValue);
	class APrimalDinoCharacter* ResetSplinePoints();
	void ResetMissionTimer();
	void RemovePlayerUsableItem(class AShooterCharacter** Character, struct FItemNetID* ItemID);
	bool RemovePlayerFromMission(bool* bCompletedSuccessfully);
	bool RemoveItemsFromInventory_Balanced(class UClass* ItemClass, bool* bExactClassMatch, int32* ReturnValue);
	bool RemoveItemsFromInventory(class UClass* ItemClass, bool* bExactClassMatch, int32* ReturnValue);
	class AShooterCharacter* ReAddPlayerFromReconnect();
	void ReactivateSuspendedMission();
	int32 RacePlayerData_SetTargetCheckpoint(int32* PlayerIndex);
	float RacePlayerData_SetCheckpointData(int32* PlayerIndex);
	void RacePlayerData_NumCheckpoints(const TArray<struct FRacePlayerData>& PlayerData, int32* ReturnValue);
	int32 RacePlayerData_Initialize();
	void RacePlayerData_IndexOfController(const TArray<struct FRacePlayerData>& PlayerData, class AShooterPlayerController** Controller, int32* ReturnValue);
	void RacePlayerData_GetTargetCheckpoint(const TArray<struct FRacePlayerData>& PlayerData, int32* PlayerIndex, int32* ReturnValue);
	TArray<class AMissionTrigger*> RacePlayerData_GetPlayerRanking(const TArray<struct FRacePlayerData>& PlayerData, int32* PlayerIndex, int32* ReturnValue);
	float RacePlayerData_GetCheckpointData(const TArray<struct FRacePlayerData>& PlayerData, int32* PlayerIndex);
	TArray<class AMissionTrigger*> RacePlayerData_GetAllPlayerRankings(const TArray<struct FRacePlayerData>& PlayerData);
	TArray<struct FRacePlayerData> RacePlayerData_FixupControllers(bool* ReturnValue);
	int32 RaceClosestPlayerToCheckpoint(const TArray<struct FRacePlayerData>& PlayerData, bool* ReturnValue);
	void PostLoadWorldFixup();
	class USoundBase* PlayMissionMusic();
	TArray<struct FLeaderboardRow> OpenLeaderboardsForPlayer();
	TArray<struct FLeaderboardRow> OpenLeaderboardsForAllPlayers();
	void OnUpdateRequirements(class FName* PhaseName, TArray<struct FMissionPhaseRequirement>* NewRequirements);
	float OnThrottledTick();
	float OnThrottledServerTick();
	float OnThrottledClientTick();
	void OnRep_MissionState();
	void OnRep_MissionPhaseIndex();
	void OnPlayerSpawned(class AShooterCharacter* PlayerPawn);
	class FName OnMissionTriggerEndOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	class FName OnMissionTriggerBeginOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnMissionPhaseStarted(class FName* OldPhase, class FName* NewPhase);
	void OnMissionPhaseEnded(class FName* OldPhase, class FName* NewPhase);
	int32 OnInventoryItemRemoved();
	int32 OnInventoryItemAdded(bool* bEquippedItem);
	void NumLivingPlayers(const TArray<class AShooterCharacter*>& PlayerArray, int32* ReturnValue);
	void NumLivingDinos(TArray<class APrimalDinoCharacter*>* DinoArray, int32* ReturnValue);
	void NumLivingCharacters(TArray<class APrimalCharacter*>* CharacterArray, int32* ReturnValue);
	void NonStaticGetPhaseRequirementDescription(struct FMissionPhaseRequirement* Req, class FString* ReturnValue);
	void MultiResetMissionTimer(double* NewMissionStartNetworkTime);
	void MultiMissionStateChange(enum class EMissionState* NewState);
	class FName MultiMissionPhaseStarted();
	class FName MultiMissionPhaseEnded();
	void MissionFindPathAsync(class UObject* WorldContext, struct FVector* PathStart, struct FVector* PathEnd, class AActor** PathfindingContext, class UClass** FilterClass, int32* ReturnValue);
	class APrimalDinoCharacter* MissionAI_SetReversPathForDino(bool* ShouldReverseAtEnd);
	class APrimalDinoCharacter* MissionAI_SetForcePathSplineForDino(class USplineComponent* Path);
	enum class ECollisionChannel MissionAI_IsAtPathDestination(struct FVector* TargetOffset, float* DebugDrawDuration, bool* ReturnValue);
	class APrimalDinoCharacter* MissionAI_GetTarget(class AActor** ReturnValue);
	void MissionAI_GetMissionFromController(class AActor** ControllerActor, enum class EBoolExecResult* OutResult, class AMissionType** Mission, class APrimalDinoCharacter** DinoPawn, class APrimalDinoAIController** DinoController);
	class APrimalDinoCharacter* MissionAI_FindPathToTarget(struct FVector* NextTargetLocation, bool* ReturnValue);
	class UPrimalItem* ItemToAlertEntry(struct FMissionAlertEntry* ReturnValue);
	class AShooterCharacter* IsPlayerOnMission(bool* ReturnValue);
	class FString IsPlayerEligibleForMission(class UClass* MissionType, class APlayerController** Controller, bool* ReturnValue);
	void IsPhaseNameValid(class FName* Name, bool* ReturnValue);
	void IsPhaseComplete(class FName* PhaseName, bool* ReturnValue);
	void IsMissionComplete(class AShooterCharacter* ForCharacter, class AShooterPlayerController** ForController, bool* ReturnValue);
	class UObject* IsMetaDataMissionType(class UClass* MissionType, bool* ReturnValue);
	void IsFriendlyWithAnyTargetingTeam(class APrimalCharacter** Character, TArray<int32>* TargetingTeams, bool* ReturnValue);
	void IsFriendlyWithAllTargetingTeams(class APrimalCharacter** Character, TArray<int32>* TargetingTeams, bool* ReturnValue);
	void IsActive(bool* ReturnValue);
	void HasPlayerCompletedMissionByTag(class FName* MissionTagName, class AShooterCharacter** Character, int32* VersionCompleted, double* UtcTimeCompleted, bool* ReturnValue);
	void HasPlayerCompletedMission(class UClass* MissionType, class AShooterCharacter** Character, int32* VersionCompleted, double* UtcTimeCompleted, bool* ReturnValue);
	class AShooterCharacter* GivePlayerXP(float* XPAmount);
	class AShooterCharacter* GivePlayerLoot(TArray<struct FLootTableEntry>* LootTable, TArray<class UPrimalItem*>* ReturnValue);
	void GetTargetingTeamsOfAllPlayersOnMission(TArray<int32>* OutTargetingTeams);
	class FName GetTaggedString(class FString* OutString, bool* ReturnValue);
	void GetReverseTeleportReturnLocation(class APrimalCharacter** Character, struct FVector* ReverseTeleportLocation, struct FRotator* ReverseTeleportRotation, bool* ReturnValue);
	void GetRemainingTime(float* ReturnValue);
	class UObject* GetRealMissionTagFromMetaData(class UClass* MissionType, class FName* ReturnValue);
	void GetPlayerUsableItems(class AShooterCharacter** Character, TArray<struct FItemNetID>* OutItemIDs);
	class AShooterCharacter* GetPhaseRequirements(class FName* PhaseName, TArray<struct FMissionPhaseRequirement>* Requirements);
	void GetPhaseRequirementProgress(struct FMissionPhaseRequirement* Req, float* ReturnValue);
	class UClass* GetPhaseRequirementDescription(struct FMissionPhaseRequirement* Req, class FString* ReturnValue);
	void GetPhaseDisplayText(class FString* ReturnValue);
	void GetPerPlayerWorldIndicators(class AShooterPlayerController** Controller, class AShooterCharacter** Character, const TArray<struct FMissionWorldIndicator>& WorldIndicators);
	class UObject* GetNearbyStructures(TArray<class APrimalStructure*>* OutStructures, class UClass** StructureType, bool* bExactTypeMatch, struct FVector* Location, float* Radius);
	class UObject* GetNearbyPlayersEligibleForMission(const TArray<class AShooterCharacter*>& OutCharacters, class UClass* MissionType, struct FVector* Location, float* Radius, bool bSortByDistanceToLocation, bool bRespectMissionMaxPlayerCount, int32* InTargetingTeam, enum class ETargetingTeamBehavior TargetingTeamBehavior);
	class UObject* GetNearbyPlayersAndTamedDinos(const TArray<class APrimalCharacter*>& OutCharacters, struct FVector* Location, float* Radius, int32 OnlyFriendlyWithTargetingTeam);
	class UObject* GetNearbyPlayers(const TArray<class AShooterCharacter*>& OutCharacters, struct FVector* Location, float* Radius, int32 OnlyFriendlyWithTargetingTeam);
	class AShooterCharacter* GetNearbyMissionDispatchers(class UClass* ForMissionType, const struct FVector& SearchOrigin, const TArray<class AMissionDispatcher*>& OutDispatchers, float* Radius, bool bSortByDistance, bool bRequireMissionInDisaptcher);
	class UObject* GetNearbyDinos(const TArray<class APrimalDinoCharacter*>& OutCharacters, struct FVector* Location, float* Radius, bool bIncludeTamed, bool bIncludeWild, int32 OnlyFriendlyWithTargetingTeam);
	class UObject* GetNearbyCharacters(const TArray<class APrimalCharacter*>& OutCharacters, struct FVector* Location, float* Radius);
	void GetMissionWorldIndicatorWorldLocation(const struct FMissionWorldIndicator& WorldIndicator, class APrimalCharacter* ForCharacter, struct FVector* ReturnValue);
	void GetMissionWorldIndicatorIcon(const struct FMissionWorldIndicator& WorldIndicator, class UTexture2D** ReturnValue);
	void GetMissionWorldIndicatorDescription(class UClass* FromMissionType, const struct FMissionWorldIndicator& WorldIndicator, class FString* ReturnValue);
	void GetMissionTagForMission(class UClass* MissionType, class FName* ReturnValue);
	void GetMissionTag(class FName* ReturnValue);
	void GetMissionLeaderboardRows(const TArray<struct FLeaderboardRow>& OutRows, bool* ReturnValue);
	void GetMissionDurationInSeconds(class UClass* MissionType, float* ReturnValue);
	class FName GetMissionDurationFromTag(class AShooterCharacter** Character, class FString* ReturnValue);
	void GetMissionDisplayName(class APlayerController** ShootCont, class FString* ReturnValue);
	void GetMissionDataForCharacter(class AShooterCharacter** Character, bool bCreateIfMissing, class APrimalBuff_MissionData** ReturnValue);
	void GetMissionClassName(class FName* ReturnValue);
	void GetMissionBuff(class AShooterCharacter** Character, class APrimalBuff** ReturnValue);
	class FName GetIntFromMissionType(class AShooterCharacter* PlayerPawn, int32* ReturnValue);
	class UObject* GetDispatcherPointLocation(class UClass* ForMissionType, struct FVector* ReturnValue);
	class UWorld* GetDifficultyString(const class FString& DiffString, const struct FLinearColor& DiffColor, bool* ReturnValue);
	void GetCurrentWorldIndicators(const TArray<struct FMissionWorldIndicator>& WorldIndicators);
	class APrimalDinoCharacter* GetCurrentSplineKeyTarget(int32* ReturnValue);
	void GetCurrentMissionPhaseName(class FName* ReturnValue);
	void GetCurrentMissionPhaseIndex(int32* ReturnValue);
	void GetAllPlayersOnMission(const TArray<class AShooterCharacter*>& OutCharacters);
	void GetAllPlayerControllersOnMission(const TArray<class AShooterPlayerController*>& OutControllers);
	void GetAllPlayerControllersInvolvedInMission(const TArray<class AShooterPlayerController*>& OutPlayerControllers);
	void GetAllPlayerCharactersInvolvedInMission(const TArray<class AShooterCharacter*>& OutPlayerCharacters);
	class FName GetAllMissionTriggersWithKey(const TArray<class AMissionTrigger*>& OutTriggerActors, bool bSortByTriggerOrder, bool bReverseSort);
	void GetAllMissionTriggerKeys(TArray<class FName>* ReturnValue);
	class FName GetAllMissionSplinesWithKey(const TArray<class AMissionSpline*>& OutSplineActors, bool bSortByTriggerOrder, bool bReverseSort);
	class FName GetAllMissionServerSidePointsWithKey(const TArray<class AMissionServerSidePoint*>& OutServerSidePointActors, bool bSortByTriggerOrder, bool bReverseSort, bool bExcludeMissionBounds);
	void GeneratePhaseRequirements(class FName* PhaseName, TArray<struct FMissionPhaseRequirement>* Requirements);
	void GeneratePerPlayerPhaseRequirements(class AShooterPlayerController** Controller, class AShooterCharacter** Character, class FName* PhaseName, TArray<struct FMissionPhaseRequirement>* Requirements);
	class FName FindMissionsMatchingTag(const TArray<class UClass*>& Missions);
	class FName FindClosestSplineActorWithTriggerKey(class AMissionSpline** ReturnValue);
	struct FVector FindClosestSplineActor(const TArray<class AMissionSpline*>& Splines, class AMissionSpline** ReturnValue);
	struct FVector FindClosestPathingSpline(class USplineComponent** ReturnValue);
	void FinalizeMissionPrep(bool bForceAdd, int32* ReturnValue);
	void DeactivateMission();
	void CountMissionLeaderboardRows(int32* ReturnValue);
	bool CountInventoryItemsFromAllPlayersInMission(int32* ReturnValue);
	bool CountInventoryItems(class APrimalCharacter** Character, int32* ReturnValue);
	void ClearReverseTeleportReturnLocation(class APrimalCharacter** Character, bool* ReturnValue);
	class APrimalDinoCharacter* ClearDinoAINavigationTargetActor(bool* ReturnValue);
	class APrimalDinoCharacter* ClearDinoAIForcedTargetActor(bool* ReturnValue);
	void CleanupInvalidPlayers(bool RemoveIfInvalid);
	void CanStartPhase(class FName* PhaseName, bool* ReturnValue);
	void CanStartMission(class UClass* MissionType, class APlayerController** Controller, class FString* ClientFailureReason, class AActor** OutMissionDispatcher, bool* ReturnValue);
	int32 CalcXPRatio(enum class ELevelExperienceRampType* RampType, float Ratio, float* ReturnValue);
	class AShooterCharacter* CalculateMissionExperienceForPlayer(float* ReturnValue);
	void BPTryCompletePhase(class FName* PhaseName, bool* ReturnValue);
	void BPStaticIsPlayerEligibleForMission(class APlayerController** Controller, class AShooterCharacter* PlayerPawn, class APrimalBuff_MissionData* PlayerMissionData, class FString* OutReason, bool* ReturnValue);
	void BPStaticCanStartMission(class APlayerController** Controller, class AShooterCharacter* PlayerPawn, class APrimalBuff_MissionData* PlayerMissionData, class FString* ClientFailureReason, class AActor** OutSelectedMissionDispatcher, bool* ReturnValue);
	void BPPhaseNameToIndex(class FName* Name, bool* bIndexIsValid, int32* ReturnValue);
	class APrimalDinoCharacter* BPOverrideRandomWanderLocation(struct FVector* InVec, struct FVector* OutVec, bool* ReturnValue);
	void BPOverrideMissionTimerColor(class AShooterPlayerController** ShooterContr, const struct FLinearColor& DefaultColor, struct FLinearColor* CurrentColor, struct FLinearColor* TimerOverrideColor, bool* ReturnValue);
	class FString BPOverrideMissionIndicatorString(class AShooterCharacter* ForCharacter, struct FMissionWorldIndicator* Indicator, class FString* ReturnValue);
	void BPOnReceivedMissionPathFindingResult(int32* ID, class UNavigationPath* Path, uint8* Result);
	class AShooterCharacter* BPOnPlayerRemovedFromMission(class AShooterPlayerController** Controller, bool* bFromMissionCompleteEvent, bool* bLastPhaseSuccess);
	class AShooterCharacter* BPOnPlayerAddedToMission(class AShooterPlayerController** Controller);
	class AMissionTrigger* BPOnMissionTriggerEndOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	class AMissionTrigger* BPOnMissionTriggerBeginOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BPOnMissionTimedOut();
	void BPOnMissionSuspended();
	class AActor* BPOnMissionStructureDestroyed(class APrimalStructure** Structure, float* KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer);
	class AActor* BPOnMissionStructureDamage(class APrimalStructure** Structure, float* Damage, const struct FDamageEvent& DamageEvent);
	void BPOnMissionServerSetup();
	class AShooterCharacter* BPOnMissionPlayerRespawned(class AShooterPlayerController** Controller);
	int32 BPOnMissionPlayerRemovedInventoryItem();
	class AActor* BPOnMissionPlayerDied(class AShooterPlayerController** Controller, float* KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer);
	int32 BPOnMissionPlayerAddedInventoryItem(bool* bEquippedItem);
	void BPOnMissionDroppedItemPickedUp(class ADroppedItemMission* DroppedItem, class APlayerController** ByPC, class UPrimalItem** InventoryItem);
	class AActor* BPOnMissionDinoDied(float* KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer);
	class AActor* BPOnMissionDinoDamage(float* Damage, const struct FDamageEvent& DamageEvent);
	void BPOnMissionDeactivated();
	class AShooterCharacter* BPOnMissionComplete(class AShooterPlayerController** ForController, bool* bLastPhaseSuccess, float* XPRewarded, TArray<class UPrimalItem*>* ItemsRewarded);
	bool BPOnMissionCheat(float Value);
	void BPOnMissionActivated();
	void BPIsPhaseComplete(class FName* PhaseName, bool* ReturnValue);
	void BPGetPhaseDisplayText(class FName* PhaseName, class FString* ReturnValue);
	void BPGetMissionTimerText(class AShooterPlayerController** ShootCont, class FString* ReturnValue);
	void BPGetMissionTargetingDesire(class APrimalDinoCharacter* MissionDino, class AActor* ForTarget, float ForTargetingDesireValue, float* ReturnValue);
	void BPGetMissionDurationText(class AShooterPlayerController** ShootCont, class FString* ReturnValue);
	void BPGetMetaTagsAsInts(TArray<int32>* OutTagIds);
	void BPGetExtraLocalMissionIndicators(class APlayerController** Controller, class AShooterCharacter* PlayerPawn, TArray<struct FMissionWorldIndicator>* IndicatorsIn, TArray<struct FMissionWorldIndicator>* IndicatorsOut);
	struct FCharacterAndControllerPair BPGenerateMissionRewards(bool* bCompletedSuccessfully, float* XPReward, TArray<class UPrimalItem*>* GeneratedItems);
	class APrimalDinoCharacter* BPCanRideMissionDino(class AShooterCharacter** Character, bool* ReturnValue);
	void BPAllowTimeout(bool* ReturnValue);
	void BPAllowPlayerToLeaveMission(class AShooterCharacter* PlayerPawn, bool* ReturnValue);
	void AllowMissionCreation(class AShooterCharacter* ForCharacter, struct FVector* Location, class AActor** MissionDispatcherActor, class FString* FailureReason, bool* ReturnValue);
	class UPrimalItem* AddPlayerUsableItem(class AShooterCharacter** Character);
	class AShooterCharacter* AddPlayerToMission(bool bForceAdd, bool* ReturnValue);
	struct FVector AddPlayersInRadiusToMission(float* Radius, int32* MaxPlayersToAdd, bool* bPrioritizeByDistanceToWorldLocation, int32* InTargetingTeam, enum class ETargetingTeamBehavior TargetingTeamBehavior, bool bForceAdd, int32* ReturnValue);
	class FString AddMissionLeaderboardRow(class AShooterPlayerController** Controller, double* NetworkTime, bool* ReturnValue);
};

// 0x90 (0xBD8 - 0xB48)
// Class ShooterGame.MissionType_ModularMissionBase
class AMissionType_ModularMissionBase : public AMissionType
{
public:
	uint8                                        Pad_2E87[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        Modules;                                           // 0xB50(0x10)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, GlobalConfig, SubobjectReference)
	float                                        DelayBeforeInitalModule;                           // 0xB60(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MissionTimeRemainingAfterEscapePhase;              // 0xB64(0x4)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class AShooterProjectile*>            MissionProjectiles;                                // 0xB68(0x10)(ConstParm, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        MissionCompleted : 1;                              // Mask: 0x1, PropSize: 0x10xB78(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        CurrentModuleCompleted : 1;                        // Mask: 0x2, PropSize: 0x10xB78(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_204 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2E8A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CurrModule;                                        // 0xB7C(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CurrRequirementsTitle;                             // 0xB80(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UNewMissionModuleBase*                 CurrentModule;                                     // 0xB88(0x8)(Edit, ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       CurrentModuleStartTime;                            // 0xB90(0x8)(Edit, ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentModuleTimeLimit;                            // 0xB98(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumDeadMissionDinos;                               // 0xB9C(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumDestroyedMissionStructures;                     // 0xBA0(0x4)(Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E8B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        SpawnedForModuleActors;                            // 0xBA8(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMissionWorldIndicator>        SpecialWorldIndicators;                            // 0xBB8(0x10)(ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UNewMissionModuleBase*>         AdditionalModules;                                 // 0xBC8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AMissionType_ModularMissionBase* GetDefaultObj();

	struct FTransform SpawnActorForMissionModule(bool bSpawnEvenIfColliding, class AActor** ReturnValue);
	void SetupMissionModules();
	void RemoveSpecialWorldIndicator(const struct FMissionWorldIndicator& IndicatorToRemove);
	void RemoveAllSpecialWorldIndicators();
	void RegisterProjectile(class AShooterProjectile* TheProjectile);
	void MultiMissionSpawnCosmetic(class USoundBase* SoundTemplate, class UParticleSystem* ParticleTemplate, const struct FTransform& TheTransform, float OverrideTimeDilation);
	void MultiFireProjectiles(class UClass* ProjectileClass, struct FVector* Location, const struct FVector& Velocity, const TArray<class AActor*>& SubprojectileTargets, class AActor* FiringActor);
	void MultiDeactivateWarmerColderHUD();
	void MultiActivateWarmerColderHUD(struct FHUDElement* Background, struct FHUDElement* Icon, float MinAlpha, float MaxAlpha, float AlphaPower, const struct FLinearColor& RightColor, const struct FLinearColor& WrongColor, bool bClearLocationsFirst, TArray<struct FVector>* Locations);
	void MissionSpawnCosmetic(class USoundBase* SoundTemplate, class UParticleSystem* ParticleTemplate, const struct FTransform& TheTransform, float OverrideTimeDilation);
	void FireProjectiles(class UClass* ProjectileClass, struct FVector* Location, const struct FVector& Velocity, const TArray<class AActor*>& SubprojectileTargets, class AActor* FiringActor, class AShooterProjectile** ReturnValue);
	void ExecuteNextMissionModule();
	void DeactivateWarmerColderHUD();
	void CreateLeaderboardEntry(class AShooterPlayerController* ForPC);
	void BPOnMissionProjectileExpoloded(class AShooterProjectile* TheProjectile);
	void AddSpecialWorldIndicator(const struct FMissionWorldIndicator& IndicatorToAdd);
	void ActivateWarmerColderHUD(struct FHUDElement* Background, struct FHUDElement* Icon, float MinAlpha, float MaxAlpha, float AlphaPower, const struct FLinearColor& RightColor, const struct FLinearColor& WrongColor, bool bClearLocationsFirst, TArray<struct FVector>* Locations);
};

// 0x330 (0x360 - 0x30)
// Class ShooterGame.ModDataAsset
class UModDataAsset : public UDataAsset
{
public:
	class FString                                ModName;                                           // 0x30(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	class FString                                ModDescription;                                    // 0x40(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ModIcon;                                           // 0x50(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultGameMode;                                   // 0x58(0x8)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, SubobjectReference)
	TArray<class UClass*>                        AdditionalEngramBlueprintClasses;                  // 0x60(0x10)(Edit, BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        RemoveEngramBlueprintClasses;                      // 0x70(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> AdditionalStructuresToPlace;                       // 0x80(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassAddition>                AdditionalStructureEngrams;                        // 0x90(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                AdditionalEggWeightsToSpawn;                       // 0xA0(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AdditionalEggItemsToSpawn;                         // 0xB0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                FertilizedAdditionalEggWeightsToSpawn;             // 0xC0(0x10)(ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        FertilizedAdditionalEggItemsToSpawn;               // 0xD0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FExtraEggItem>                 AdditionalExtraEggItems;                           // 0xE0(0x10)(ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AdditionalDinoEntries;                             // 0xF0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class AActor>                  OverridePhotoModeClass;                            // 0x100(0x30)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventPhotoMode;                                 // 0x130(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E90[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftObjectPtr<class UMaterialInterface>> AdditionalBuffPostProcessEffects;                  // 0x138(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AdditionalTradableOptions;                         // 0x148(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FInvalidReferenceRedirector>   AdditionalInvalidReferenceRedirects;               // 0x158(0x10)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FWorldDefaultItemSet>          AdditionalDefaultMapItemSets;                      // 0x168(0x10)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_NPC;                                         // 0x178(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_SupplyCrates;                                // 0x188(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FActiveEventSupplyCrateWeight> Remap_ActiveEventSupplyCrates;                     // 0x198(0x10)(Edit, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_ResourceComponents;                          // 0x1A8(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_NPCSpawnEntries;                             // 0x1B8(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_Engrams;                                     // 0x1C8(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_Items;                                       // 0x1D8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FNPCSpawnEntriesContainerAdditions> TheNPCSpawnEntriesContainerAdditions;              // 0x1E8(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FAvailableMission>             AvailableMissions;                                 // 0x1F8(0x10)(EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWantsToRunMissions;                               // 0x208(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E97[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDinoBabySetup>                DinoBabySetups;                                    // 0x210(0x10)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDinoBabySetup>                DinoGestationSetups;                               // 0x220(0x10)(ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FUnlockableEmoteEntry>         UnlockableEmotes;                                  // 0x230(0x10)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FEmoteGroup>                   EmoteGroups;                                       // 0x240(0x10)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UAnimMontage>>   AdditionalAnimationsPreventInput;                  // 0x250(0x10)(Edit, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FColorDefinition>              ColorDefinitions;                                  // 0x260(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemappingWeight>         GlobalNPCRandomSpawnClassWeights;                  // 0x270(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHairStyleDefinition>          AdditionalHeadHairStyleDefinitions;                // 0x280(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHairStyleDefinition>          AdditionalFacialHairStyleDefinitions;              // 0x290(0x10)(ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ServerExtraWorldSingletonActorClasses;             // 0x2A0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FBuffAddition>                 AdditionalDefaultBuffs;                            // 0x2B0(0x10)(ExportObject, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FObjectCorrelation>            AdditionalHumanMaleAnimSequenceOverrides;          // 0x2C0(0x10)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FObjectCorrelation>            AdditionalHumanFemaleAnimSequenceOverrides;        // 0x2D0(0x10)(Edit, ConstParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FObjectCorrelation>            AdditionalHumanMaleAnimMontagesOverrides;          // 0x2E0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FObjectCorrelation>            AdditionalHumanFemaleAnimMontagesOverrides;        // 0x2F0(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FStructureToBuildAddition>     AdditionalStructuresToBuild;                       // 0x300(0x10)(Edit, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FStructureVariantAddition>     AdditionalStructureVariants;                       // 0x310(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UObject*>                       ExtraResources;                                    // 0x320(0x10)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UObject>>         ExtraResourcesSoft;                                // 0x330(0x10)(ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceServerUseDinoList;                           // 0x340(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceEnablePhysicsSimulation;                     // 0x341(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E9F[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        AdditionalWorldBuffDefinitions;                    // 0x348(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        OverrideServerPhysXSubsteps;                       // 0x358(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EA0[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UModDataAsset* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class ShooterGame.MountedDLCManager
class UMountedDLCManager : public UObject
{
public:
	TArray<struct FMountedDLCInfo>               MountedDLCs;                                       // 0x28(0x10)(Edit, ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMountedDLCMapInfo>            MountedDLCMaps;                                    // 0x38(0x10)(Edit, ConstParm, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EA5[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMountedDLCManager* GetDefaultObj();

};

// 0x40 (0x370 - 0x330)
// Class ShooterGame.MultiUseActionWidget
class UMultiUseActionWidget : public UPrimalUserWidget
{
public:
	uint8                                        Pad_2EAB[0x40];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMultiUseActionWidget* GetDefaultObj();

	void Update();
	class UObject* Init();
};

// 0x38 (0x3F0 - 0x3B8)
// Class ShooterGame.MultiUseTooltip
class UMultiUseTooltip : public UToolTipWidget
{
public:
	uint8                                        Pad_2EB0[0x38];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMultiUseTooltip* GetDefaultObj();

};

// 0x80 (0xA8 - 0x28)
// Class ShooterGame.NewMissionModuleBase
class UNewMissionModuleBase : public UObject
{
public:
	uint8                                        DebugLifetime : 1;                                 // Mask: 0x1, PropSize: 0x10x28(0x1)(EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        IsSubModule : 1;                                   // Mask: 0x2, PropSize: 0x10x28(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        RequiresUpateMissionPrepAreaByMission : 1;         // Mask: 0x4, PropSize: 0x10x28(0x1)(Edit, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        DeactivateMissionOnModuleLimitPassed : 1;          // Mask: 0x8, PropSize: 0x10x28(0x1)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_20B : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2EF1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ModuleTimeLimit;                                   // 0x2C(0x4)(Edit, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FStruct_MissionModule_Travel          TravelStruct;                                      // 0x30(0x38)(ConstParm, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        SubmodulesToRunAtStart;                            // 0x68(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        SubmodulesToRunOnComplete;                         // 0x78(0x10)(ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class AMissionType_ModularMissionBase*       MyOuter;                                           // 0x88(0x8)(Edit, ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class AMissionServerSidePoint*>       ModuleNavPoints;                                   // 0x90(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ModuleEndedBefore : 1;                             // Mask: 0x1, PropSize: 0x10xA0(0x1)(BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        CurrentlyDelayed : 1;                              // Mask: 0x2, PropSize: 0x10xA0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EF2[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UNewMissionModuleBase* GetDefaultObj();

	void TriggerHandleMissionModuleBegin();
	class AMissionType_ModularMissionBase* SetOuter(int32* ReturnValue);
	void RunSubModulesOnComplete();
	void RunSubModulesAtStart();
	class AActor* OnOuterDestroyed();
	class AMissionTrigger* HandleMissionTriggerOverlapEnd(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, int32* ReturnValue);
	class AMissionTrigger* HandleMissionTriggerOverlapBegin(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, int32* ReturnValue);
	class AActor* HandleMissionStructureDestroyed(class APrimalStructure** Structure, float* KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, int32* ReturnValue);
	class AActor* HandleMissionStructureDamaged(class APrimalStructure** Structure, float* KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, int32* ReturnValue);
	class AShooterProjectile* HandleMissionProjectileExploded(int32* ReturnValue);
	int32 HandleMissionPlayerRemovedInventoryItem(int32* ReturnValue);
	int32 HandleMissionPlayerAddedInventoryItem(bool* bEquippedItem, int32* ReturnValue);
	void HandleMissionModuleEnd(int32* ReturnValue);
	void HandleMissionModuleBegin(int32* ReturnValue);
	void HandleMissionGetPerPlayerIndicators(class AShooterCharacter** Character, TArray<struct FMissionWorldIndicator>* ReturnValue);
	class UPrimalItem* HandleMissionDroppedItemPickedUp(class ADroppedItemMission* DroppedItem, int32* ReturnValue);
	class AActor* HandleMissionDinoDied(float* KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, int32* ReturnValue);
	class AActor* HandleMissionDinoDamaged(float* Damage, const struct FDamageEvent& DamageEvent, int32* ReturnValue);
	class AActor* HandleLastMissionStructureDestroyed(class APrimalStructure** Structure, float* KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, int32* ReturnValue);
	class AShooterProjectile* HandleLastMissionProjectileExploded(int32* ReturnValue);
	class AActor* HandleLastMissionDinoDied(float* KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, int32* ReturnValue);
	void GetWorld(class UWorld** ReturnValue);
	void GetModuleRequirementsTitle(class FString* ReturnValue);
	void GetModuleRequirementsMessage(TArray<struct FMissionPhaseRequirement>* ReturnValue);
	void BPGetTargetingDesire(class APrimalDinoCharacter* MissionDino, class AActor* ForTarget, float ForTargetingDesireValue, float* ReturnValue);
};

// 0x0 (0x758 - 0x758)
// Class ShooterGame.NewOptionsButtonWidget
class UNewOptionsButtonWidget : public UBaseSelectableButtonWidget
{
public:

	static class UClass* StaticClass();
	static class UNewOptionsButtonWidget* GetDefaultObj();

};

// 0x0 (0xB8 - 0xB8)
// Class ShooterGame.NinjaLiveBaseComponent
class UNinjaLiveBaseComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UNinjaLiveBaseComponent* GetDefaultObj();

	int32 ScaleResolutionForSettings(int32* ReturnValue);
	void IsFluidSimEnabled(bool* ReturnValue);
};

// 0x28 (0x50 - 0x28)
// Class ShooterGame.NPCSpawnEntriesContainer
class UNPCSpawnEntriesContainer : public UObject
{
public:
	TArray<struct FNPCSpawnEntry>                NPCSpawnEntries;                                   // 0x28(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, Config, InstancedReference, SubobjectReference)
	TArray<struct FNPCSpawnLimit>                NPCSpawnLimits;                                    // 0x38(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, Config, InstancedReference, SubobjectReference)
	float                                        MaxDesiredNumEnemiesMultiplier;                    // 0x48(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EFC[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UNPCSpawnEntriesContainer* GetDefaultObj();

};

// 0x218 (0x6E0 - 0x4C8)
// Class ShooterGame.NPCZoneManager
class ANPCZoneManager : public AInfo
{
public:
	TArray<class ANPCZoneVolume*>                LinkedZoneVolumes;                                 // 0x4C8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FLinkedZoneSpawnVolumeEntry>   LinkedZoneSpawnVolumeEntries;                      // 0x4D8(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        DefaultZoneSpawnVolumeFloors;                      // 0x4E8(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        DefaultZoneSpawnVolumeIgnoreCeilings;              // 0x4F8(0x10)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          DefaultZoneSpawnVolumeFloorTags;                   // 0x508(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          DefaultZoneSpawnVolumeIgnoreCeilingTags;           // 0x518(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class UNPCSpawnEntriesContainer> NPCSpawnEntriesContainerObject;                    // 0x528(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnabled;                                          // 0x558(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Transient, EditConst, GlobalConfig)
	bool                                         bHasCompletedSetup;                                // 0x559(0x1)(Edit, BlueprintVisible, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceInEditor;                                    // 0x55A(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNeverSpawnInWater;                                // 0x55B(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlySpawnInWater;                                 // 0x55C(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F02[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          OnlyAllowSpawningOnActorTags;                      // 0x560(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowExtentTest;                                  // 0x570(0x1)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F03[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MinDesiredNumberOfNPC;                             // 0x574(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SP_MinDesiredNumberOfNPC;                          // 0x578(0x4)(ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F04[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DesiredNumberOfNPCMultiplier;                      // 0x580(0x4)(Edit, ExportObject, Net, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TheSpawnPointMinimumFloorNormal;                   // 0x584(0x4)(ExportObject, BlueprintReadOnly, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TheNewNewEditorNumberOfNPCMultiplier;              // 0x588(0x4)(Edit, BlueprintVisible, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        KillOffOverweightNPCStasisTime;                    // 0x58C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TheMaximumWorldTimeForFullIncrease;                // 0x590(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TheMinimumPlayerDistanceFromSpawnPoint;            // 0x594(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TheIncreaseNPCInterval;                            // 0x598(0x4)(Edit, ConstParm, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SP_TheIncreaseNPCInterval;                         // 0x59C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TheIncreaseNPCIntervalMax;                         // 0x5A0(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TheDecreaseNPCInterval;                            // 0x5A4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NPCAIRangeMultiplier;                              // 0x5A8(0x4)(BlueprintReadOnly, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NPCAIAggroNotifyNeighborsRangeMultiplier;          // 0x5AC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNPCDontWander;                                    // 0x5B0(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNPCWildIgnoreWild;                                // 0x5B1(0x1)(Edit, ExportObject, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNPCNoKillXP;                                      // 0x5B2(0x1)(ConstParm, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNPCPreventSaving;                                 // 0x5B3(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceUntameable;                                  // 0x5B4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForcePreventHibernation;                          // 0x5B5(0x1)(ConstParm, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUsesManualSpawning;                               // 0x5B6(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDedicatedServerForceManualSpawningOnLayerLoadedDinos; // 0x5B7(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreVolumeEcompassingCheck;                     // 0x5B8(0x1)(Edit, ConstParm, ExportObject, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSpawnAllNPCEntries;                               // 0x5B9(0x1)(DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyUseInSingleplayer;                            // 0x5BA(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyUseInDedicatedServer;                         // 0x5BB(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        NPCWanderRadiusMultiplier;                         // 0x5BC(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxNumberSpawnZoneRandomPointChecks;               // 0x5C0(0x4)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        TheNPCFullIncreaseMaximumIterations;               // 0x5C4(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TheMinimumTamedDinoDistanceFromSpawnPoint;         // 0x5C8(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TheMinimumStructureDistanceFromSpawnPoint;         // 0x5CC(0x4)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        NPCLerpToMaxRandomBaseLevel;                       // 0x5D0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ManualSpawningNPCLerpToMaxRandomBaseLevel;         // 0x5D4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaximumNumberNearbyCoreStructures;                 // 0x5D8(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        AbsoluteMaximumNumberNearbyCoreStructures;         // 0x5DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAutoKillUseGlobalStasisArray;                     // 0x5E0(0x1)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseSpawnBlockingCheck;                            // 0x5E1(0x1)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTraceForSpawnPoints;                              // 0x5E2(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseSpawnOverlapCheck;                             // 0x5E3(0x1)(ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSpawnRequiresTraceDownThroughCeiling;             // 0x5E4(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F0E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SpawnPointRequiresTraceUpToCeilingDistance;        // 0x5E8(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F0F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class ANPCZoneVolume*                        HardLimitWildDinosToVolume;                        // 0x5F0(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTraceForSpawnAgainstWater;                        // 0x5F8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNPCForcePreventExitingWater;                      // 0x5F9(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F10[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bUseSpawnPointOverrideRotation;                    // 0x5FB(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F11[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AVolume*                               NPCLimitTargetsToVolume;                           // 0x600(0x8)(BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        NPCLevelMultiplier;                                // 0x608(0x4)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        ForceOverrideNPCBaseLevel;                         // 0x60C(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        IncreaseNPCIntervalMultiplier;                     // 0x610(0x4)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDirectlyLinkDinoCount;                            // 0x614(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F12[0x13];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FNPCSpawnLimit>                NPCSpawnLimits;                                    // 0x628(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, Config, InstancedReference, SubobjectReference)
	int32                                        UseDesiredNumberOfNPC;                             // 0x638(0x4)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F13[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       FirstUpdateTime;                                   // 0x640(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumNPCSpawned;                                     // 0x648(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumSpawnFailures;                                  // 0x64C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       LastIncreaseNPCTime;                               // 0x650(0x8)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       LastDecreaseNPCTime;                               // 0x658(0x8)(Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DirectLinkDinoCount;                               // 0x660(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsCaveManager;                                    // 0x664(0x1)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F18[0x17];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        CloseStructureDistanceFromSpawnPoint;              // 0x67C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        SpawnPointOverrides;                               // 0x680(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class APrimalDinoCharacter*>          DirectLinkedDinos;                                 // 0x690(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NonDedicatedFreezeWildDinoPhysicsIfLayerUnloaded;  // 0x6A0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SubLevelWaterCheckUseTagOverride;                  // 0x6A8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseHighestPriorityPhysicsWaterVolume;             // 0x6B0(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForcedInNoDinos;                                  // 0x6B1(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreSingleplayerSpawnRangeCheck;                // 0x6B2(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F1A[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinimumManualSpawnInterval;                        // 0x6B4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       LastManuallySpawnedTime;                           // 0x6B8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreNPCRandomClassReplacements;                 // 0x6C0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowSpawnPointOverridesNonDedicatedLevelUnloadedFreezing; // 0x6C1(0x1)(Edit, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F1B[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        TheNPCDynamicIncreaseMaximumIterations;            // 0x6C4(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                WeightedChancesToSpawnWildChildrenOnCreatureSpawnMultipliers; // 0x6C8(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F1D[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ANPCZoneManager* GetDefaultObj();

	int32 StaticSpawnNPCs(class UObject* WorldContext, const struct FRotator& AtRotation, TArray<class APrimalDinoCharacter*>* ReturnValue);
	void DestroyAllLinkedDinos();
	bool CheckIncreaseNPC();
};

// 0x0 (0x518 - 0x518)
// Class ShooterGame.NPCZoneSpawnVolume
class ANPCZoneSpawnVolume : public AVolume
{
public:

	static class UClass* StaticClass();
	static class ANPCZoneSpawnVolume* GetDefaultObj();

};

// 0x60 (0x578 - 0x518)
// Class ShooterGame.NPCZoneVolume
class ANPCZoneVolume : public AVolume
{
public:
	uint8                                        Pad_2F1E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bOnlyCountWaterDinos : 1;                          // Mask: 0x1, PropSize: 0x10x520(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyCountLandDinos : 1;                           // Mask: 0x2, PropSize: 0x10x520(0x1)(BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoHigherQualityLedgeDetection : 1;                // Mask: 0x4, PropSize: 0x10x520(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCountTamedDinos : 1;                              // Mask: 0x8, PropSize: 0x10x520(0x1)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_20E : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2F1F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> OnlyCountDinoClasses;                              // 0x528(0x10)(Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> IgnoreDinoClasses;                                 // 0x538(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHibernationCountInfo>         HibernatedEntities;                                // 0x548(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HibernatedCountWeights;                            // 0x558(0x4)(ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F20[0x1C];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ANPCZoneVolume* GetDefaultObj();

	class AActor* OnEndOverlap(class AActor** Actor);
	class AActor* OnBeginOverlap(class AActor** Actor);
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.ObjectSerializer
class UObjectSerializer : public UObject
{
public:

	static class UClass* StaticClass();
	static class UObjectSerializer* GetDefaultObj();

};

// 0x1F8 (0x6C0 - 0x4C8)
// Class ShooterGame.OceanDinoManager
class AOceanDinoManager : public AActor
{
public:
	float                                        ViewerNumDinosGatherRadius;                        // 0x4C8(0x4)(ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ViewerDinoSpawnRadiusMin;                          // 0x4CC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ViewerDinoSpawnRadiusMax;                          // 0x4D0(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ViewerDinoSpawnViewOffsetMin;                      // 0x4D4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ViewerDinoSpawnViewOffsetMax;                      // 0x4D8(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F23[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FOceanDinoDepthEntry>          OceanDinoDepthEntries;                             // 0x4E0(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxValidSpawnPointAttempts;                        // 0x4F0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxNumViewersToUpdatePerFrame;                     // 0x4F4(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ViewerNumDinosTargetMinPlayers;                    // 0x4F8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ViewerNumDinosTargetMaxPlayers;                    // 0x4FC(0x4)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RaftMinViewerSpeed;                                // 0x500(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F24[0x54];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        NumDinosMinPlayers;                                // 0x558(0x4)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NumDinosMaxPlayers;                                // 0x55C(0x4)(ExportObject, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                KilledOceanDinoAreaDeathBuff;                      // 0x560(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          OceanVolumeTags;                                   // 0x568(0x10)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F25[0x140];                                   // Fixing Size After Last Property  > TateDumper <
	float                                        MinViewerDeltaDistanceToRefreshOceanSpawns;        // 0x6B8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F26[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AOceanDinoManager* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class ShooterGame.ParticleModuleWaveWorksBase
class UParticleModuleWaveWorksBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleWaveWorksBase* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class ShooterGame.ParticleModuleWindForce
class UParticleModuleWindForce : public UParticleModuleWaveWorksBase
{
public:
	float                                        MaxWindSpeedScale;                                 // 0x30(0x4)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WindForceScale;                                    // 0x34(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleWindForce* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class ShooterGame.ParticleModuleWaveHatDetector
class UParticleModuleWaveHatDetector : public UParticleModuleWaveWorksBase
{
public:
	float                                        MaxDetectorWaitTime;                               // 0x30(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FoamWaveHatsThreshold;                             // 0x34(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WaveVelocityScale;                                 // 0x38(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F27[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleWaveHatDetector* GetDefaultObj();

};

// 0x1C8 (0xAA0 - 0x8D8)
// Class ShooterGame.OnlineSessionEntryButton
class UOnlineSessionEntryButton : public UDataListEntryButton
{
public:
	class FString                                GameName;                                          // 0x8D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference)
	class FString                                BuildId;                                           // 0x8E8(0x10)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FString                                OwnerName;                                         // 0x8F8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                MapName;                                           // 0x908(0x10)(BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class FString                                DayTimeStr;                                        // 0x918(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint32                                       NumPlayers;                                        // 0x928(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint32                                       MaxNumPlayers;                                     // 0x92C(0x4)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint64                                       ModId;                                             // 0x930(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, SubobjectReference)
	uint64                                       TotalConversionId;                                 // 0x938(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint64                                       Ping;                                              // 0x940(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bHasPassword;                                      // 0x948(0x1)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsFavourite;                                      // 0x949(0x1)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsPVEServer;                                      // 0x94A(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F2B[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            PasswordTexture;                                   // 0x950(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsOfficialServer;                                 // 0x958(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUsingBattleEye;                                   // 0x959(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowDownloadCharacters;                          // 0x95A(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowDownloadItems;                               // 0x95B(0x1)(BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F2D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            BattleEyeTexture;                                  // 0x960(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            OfficialServerTexture;                             // 0x968(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PVPServerTexture;                                  // 0x970(0x8)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PVEServerTexture;                                  // 0x978(0x8)(Edit, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          DisplayStringSelectedColor;                        // 0x980(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F2E[0x110];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UOnlineSessionEntryButton* GetDefaultObj();

};

// 0xB8 (0xE0 - 0x28)
// Class ShooterGame.PaintingCache
class UPaintingCache : public UObject
{
public:
	uint8                                        Pad_2F36[0x88];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UPaintingTexture*>              PaintingTextures;                                  // 0xB0(0x10)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F37[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPaintingCache* GetDefaultObj();

	class FString ForceCacheLocalPaintingTemplatesToDisk(class FString* PaintingClass, class UPaintingTexture** PaintingTexture, bool* OverrideExisting, bool* ReturnValue);
};

// 0x70 (0x128 - 0xB8)
// Class ShooterGame.PaintingStreamingComponent
class UPaintingStreamingComponent : public UActorComponent
{
public:
	uint8                                        Pad_2F46[0x70];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPaintingStreamingComponent* GetDefaultObj();

	class UStructurePaintingComponent* ServerSendNextChunk();
	class UStructurePaintingComponent* ServerRequestPaintingStream();
	class UStructurePaintingComponent* ServerCancelPaintingStream();
	void ForceRefreshStructurePainting(class UStructurePaintingComponent** Structure);
	TArray<uint8> ClientRecieveChunk();
	class UStructurePaintingComponent* ClientEndStreamingJob();
	class UStructurePaintingComponent* ClientCancelSteamingJob();
	class UStructurePaintingComponent* ClientBeginStreamingJob(int32* Revision);
};

// 0x40 (0x68 - 0x28)
// Class ShooterGame.PaintingTexture
class UPaintingTexture : public UObject
{
public:
	uint32                                       Revision;                                          // 0x28(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F49[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            Texture;                                           // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst)
	uint8                                        Pad_2F4A[0x30];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPaintingTexture* GetDefaultObj();

};

// 0x80 (0x3B0 - 0x330)
// Class ShooterGame.PanelBuffTypeUI
class UPanelBuffTypeUI : public UPrimalUserWidget
{
public:
	uint8                                        Pad_2F4B[0x80];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPanelBuffTypeUI* GetDefaultObj();

};

// 0x188 (0x8E0 - 0x758)
// Class ShooterGame.PlayerHUDUI
class UPlayerHUDUI : public UPrimalUI
{
public:
	class FString                                SlotItemsDataListName;                             // 0x758(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PrimaryStatusBarsWidgetName;                       // 0x768(0x8)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SecondaryStatusBarsWidgetName;                     // 0x770(0x8)(Net, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CraftQueueItemButtonName;                          // 0x778(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExtraProgressBarName;                              // 0x780(0x8)(ExportObject, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                SlotItemsDataListParentPanelName;                  // 0x788(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CompassBarWidgetName;                              // 0x798(0x8)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ElementBarWidgetName;                              // 0x7A0(0x8)(Edit, Net, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHUDRichTextOverlayData>       RichTextOverlayData;                               // 0x7A8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalRichTextBlock*>          RichTextBlocks;                                    // 0x7B8(0x10)(ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         UsingFastInventory;                                // 0x7C8(0x1)(BlueprintVisible, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F4C[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        UseItemKeybindingsArray;                           // 0x7D0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F4D[0xB8];                                    // Fixing Size After Last Property  > TateDumper <
	class UProgressBarWidget*                    ExtraProgressBar;                                  // 0x898(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F4E[0x40];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPlayerHUDUI* GetDefaultObj();

	void UpdatedKeybindingBP();
	bool OnFastInventoryChangedBP();
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.PointOfInterestCompanionInterface
class IPointOfInterestCompanionInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPointOfInterestCompanionInterface* GetDefaultObj();

	void GetPointCompanionBehaviorData(struct FPointOfInterestCompanionBehavior* ReturnValue);
};

// 0x0 (0x4C8 - 0x4C8)
// Class ShooterGame.PointOfInterestCosmeticActor_Base
class APointOfInterestCosmeticActor_Base : public AActor
{
public:

	static class UClass* StaticClass();
	static class APointOfInterestCosmeticActor_Base* GetDefaultObj();

};

// 0x1F8 (0x6C0 - 0x4C8)
// Class ShooterGame.PointOfInterestCosmeticActor
class APointOfInterestCosmeticActor : public APointOfInterestCosmeticActor_Base
{
public:
	class USceneComponent*                       CosmeticRootComp;                                  // 0x4C8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              CosmeticParticlesComp;                             // 0x4D0(0x8)(Edit, ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F55[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPointOfInterestData                  MyPointOfInterestData;                             // 0x4E0(0x1E0)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APointOfInterestCosmeticActor* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.PointOfInterestInterface
class IPointOfInterestInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPointOfInterestInterface* GetDefaultObj();

	class AActor* ViewPoint();
	class AActor* UnviewPoint();
	bool SetPointTagUniqueState();
	void GetPointOfInterestData(struct FPointOfInterestData* ReturnValue);
	void GetPointCustomData(class UClass** ReturnValue);
	class AActor* CanBeViewed(bool* ReturnValue);
};

// 0x8 (0x4E8 - 0x4E0)
// Class ShooterGame.PointOfInterestManagerList
class APointOfInterestManagerList : public ACustomActorList
{
public:
	uint8                                        bRefreshPointsArray : 1;                           // Mask: 0x1, PropSize: 0x10x4E0(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F71[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APointOfInterestManagerList* GetDefaultObj();

	void ScanForAllValidPointsOfInterest();
	void ReConstructPointsInList();
	void PopulatePointsActorList();
	class AActor* ManualAddPointOfInterestActor(bool* ReturnValue);
	class AActor* CheckListForTagCollisions(bool* ReturnValue);
};

// 0xF8 (0x120 - 0x28)
// Class ShooterGame.PreviewImage
class UPreviewImage : public UObject
{
public:
	uint8                                        Pad_2F74[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FOV;                                               // 0x30(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, GlobalConfig)
	uint8                                        Pad_2F76[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTextureRenderTarget2D*                RenderTarget;                                      // 0x38(0x8)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FVector                               MeshScale;                                         // 0x40(0x18)(BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LightBrightness;                                   // 0x58(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F79[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              LightRotation;                                     // 0x60(0x18)(Edit, ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              MeshRotation;                                      // 0x78(0x18)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CameraLocation;                                    // 0x90(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              CameraRotation;                                    // 0xA8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	enum class ESkyLightSourceType               AmbientSourceType;                                 // 0xC0(0x1)(ConstParm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F7D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UTextureCube*                          AmbientCubemap;                                    // 0xC8(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                AmbientLightColor;                                 // 0xD0(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AmbientBrightness;                                 // 0xD4(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UWorld*                                GameWorld;                                         // 0xD8(0x8)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class USceneComponent*>               PreviewComponents;                                 // 0xE0(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UMeshComponent*                        PreviewMesh;                                       // 0xF0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst)
	class UWorld*                                PreviewWorld;                                      // 0xF8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USceneCaptureComponent2D*              CaptureComponent;                                  // 0x100(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UDirectionalLightComponent*            DirctionalLight;                                   // 0x108(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USkyLightComponent*                    SkyLight;                                          // 0x110(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, EditConst)
	class ULineBatchComponent*                   LineBatcher;                                       // 0x118(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPreviewImage* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class ShooterGame.PrimalAIState
class UPrimalAIState : public UObject
{
public:
	class APrimalDinoCharacter*                  Pawn;                                              // 0x28(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	class FName                                  AnimationCustomName;                               // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalAIState*>                ChildStates;                                       // 0x38(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimalAIState*                        ParentState;                                       // 0x48(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        IsInAnimationState : 1;                            // Mask: 0x1, PropSize: 0x10x50(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        IsInAttackState : 1;                               // Mask: 0x2, PropSize: 0x10x50(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShouldResetInLosingTarget : 1;                    // Mask: 0x4, PropSize: 0x10x50(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPCanUseState : 1;                                // Mask: 0x8, PropSize: 0x10x50(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSkipIntervalCheck : 1;                       // Mask: 0x10, PropSize: 0x10x50(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSkipRangeCheck : 1;                          // Mask: 0x20, PropSize: 0x10x50(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_211 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	bool                                         bUseBPCanAttack;                                   // 0x51(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPOverrideAttackWeight;                        // 0x52(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F9F[0x5];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalAIState* GetDefaultObj();

	enum class ENetRole TickAnimationStateEvent();
	enum class ENetRole TickAnimationState();
	enum class ENetRole StartAnimationStateEvent();
	enum class ENetRole StartAnimationState();
	void ShouldSkipRangeCheckEvent(bool* ReturnValue);
	void ShouldSkipIntervalCheckEvent(bool* ReturnValue);
	void SetLastAttackTime();
	void SetInAnimationStateActive(bool Value);
	float OnTickEvent();
	float OnTick();
	void OnEndEvent();
	void OnEnd();
	class UPrimalAIState* OnChildStateEndedEvent();
	void OnCanUseStateEvent(bool* ReturnValue);
	class UPrimalAIState* OnBeginEvent();
	class UPrimalAIState* OnBegin();
	void GetDebugInfoString(class FString* ReturnValue);
	enum class ENetRole EndAnimationStateEvent();
	enum class ENetRole EndAnimationState();
	void CanUseState(bool* ReturnValue);
	class AActor* BPOverrideAttackWeight(float Distance, float* ReturnValue);
	void BPIsChildState(bool* ReturnValue);
	void BPGetDebugInfoString(class FString* ReturnValue);
	class AActor* BPCanAttack(float Distance, bool* ReturnValue);
};

// 0x60 (0xB8 - 0x58)
// Class ShooterGame.PrimalAIStateDinoRangedState
class UPrimalAIStateDinoRangedState : public UPrimalAIState
{
public:
	float                                        AccuracyWeight;                                    // 0x58(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ClampAngle;                                        // 0x5C(0x4)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig)
	struct FVector                               WorldGeometryTargetLocOffset;                      // 0x60(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CharacterTargetLocOffset;                          // 0x78(0x18)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bScaleProjDamageByDinoDamage : 1;                  // Mask: 0x1, PropSize: 0x10x90(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGetTargetDirection : 1;                           // Mask: 0x2, PropSize: 0x10x90(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAimSocket : 1;                                 // Mask: 0x4, PropSize: 0x10x90(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_212 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseRangedSockets : 1;                             // Mask: 0x10, PropSize: 0x10x90(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPRangedAttack : 1;                            // Mask: 0x20, PropSize: 0x10x90(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPRangedAttackOnBegin : 1;                     // Mask: 0x40, PropSize: 0x10x90(0x1)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLeadTarget : 1;                                   // Mask: 0x80, PropSize: 0x10x90(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FB0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  AimSocket;                                         // 0x94(0x8)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FB1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          RangedSockets;                                     // 0xA0(0x10)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SpreadOffset;                                      // 0xB0(0x4)(Edit, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FB2[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalAIStateDinoRangedState* GetDefaultObj();

	float PreventAttackForTime();
	float OffsetVectorRandomlyReturnsAltered(struct FVector* ReturnValue);
	struct FVector GetZGravityOffset(float* ReturnValue);
	struct FVector FindDirectionToLeadTarget(struct FVector* ReturnValue);
	struct FVector ClampProjectileVectorInForwardDirection(class FName* RangedSocket, struct FVector* ReturnValue);
	void BPRangedAttackOnBegin(struct FVector* TargetLocation, struct FVector* TargetVelocity);
	void BPRangedAttack(struct FVector* TargetLocation, struct FVector* TargetVelocity);
};

// 0x20 (0xD8 - 0xB8)
// Class ShooterGame.PrimalAIStateBotRangedState
class UPrimalAIStateBotRangedState : public UPrimalAIStateDinoRangedState
{
public:
	bool                                         bDrawDebug;                                        // 0xB8(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2FB5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ChanceBotWillAimDirectlyAtPlayer;                  // 0xBC(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ChanceBotWillAimDirectlyAtDino;                    // 0xC0(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ChanceBotWillCompletelyMissPlayer;                 // 0xC4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ChanceBotWillCompletelyMissDino;                   // 0xC8(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConeHalfAngle;                                     // 0xCC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ConeHalfAngleRandRange;                            // 0xD0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPGetSocketLocation;                           // 0xD4(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FB8[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalAIStateBotRangedState* GetDefaultObj();

	void BPGetSocketLocation(struct FVector* ReturnValue);
};

// 0x48 (0xA0 - 0x58)
// Class ShooterGame.PrimalAIStateBPBase
class UPrimalAIStateBPBase : public UPrimalAIState
{
public:
	uint8                                        bCanAttackWhileFlying : 1;                         // Mask: 0x1, PropSize: 0x10x58(0x1)(Edit, ConstParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClearAttackStateOnEnd : 1;                        // Mask: 0x2, PropSize: 0x10x58(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnClearAttackState : 1;                      // Mask: 0x4, PropSize: 0x10x58(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_215 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsMeleeAttack : 1;                                // Mask: 0x10, PropSize: 0x10x58(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseTickEvent : 1;                                 // Mask: 0x20, PropSize: 0x10x58(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_216 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2FD0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinTickEventTime;                                  // 0x5C(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxTickEventTime;                                  // 0x60(0x4)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseTickAnimationStateEvent : 1;                   // Mask: 0x1, PropSize: 0x10x64(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPShouldEndAttack : 1;                         // Mask: 0x2, PropSize: 0x10x64(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnAnimNotifyCustomEvent : 1;                 // Mask: 0x4, PropSize: 0x10x64(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEndStateWhenAttackAnimCompletes : 1;              // Mask: 0x8, PropSize: 0x10x64(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnAttackStart : 1;                           // Mask: 0x10, PropSize: 0x10x64(0x1)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnAttackEnd : 1;                             // Mask: 0x20, PropSize: 0x10x64(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnAttackTick : 1;                            // Mask: 0x40, PropSize: 0x10x64(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_217 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2FD1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinAttackTickTime;                                 // 0x68(0x4)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxAttackTickTime;                                 // 0x6C(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FD2[0x30];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalAIStateBPBase* GetDefaultObj();

	struct FRotator SpawnAndFireProjectile(class UClass* ProjectileClass, bool* ReturnValue);
	float SetLastAttackTimeToNow();
	bool IsTimeSinceStateBegin(float CheckTimeSince, bool* ReturnValue);
	void GetTimeSinceStateBegin(float* ReturnValue);
	void GetStateBeginTime(double* ReturnValue);
	float GetLastAttackTimeAndInterval(double LastAttackTime);
	void FinishState();
	class UClass* DealMeleeDamageDirect(float* DamageImpulse, bool* bUseBlueprintAdjustOutputDamage, bool* bInstantlyHarvestCorpse);
	struct FHitResult DealMeleeDamage(class AActor** Actor);
	void BPShouldEndAttack(bool* ReturnValue);
	void BPOnClearAttackState();
	float BPOnAttackTick();
	int32 BPOnAttackStart();
	int32 BPOnAttackEnd();
	class FName BPOnAnimNotifyCustomEvent(class UAnimSequenceBase* Animation, enum class ENetRole Role);
};

// 0x80 (0xD8 - 0x58)
// Class ShooterGame.PrimalAIStateDinoMeleeState
class UPrimalAIStateDinoMeleeState : public UPrimalAIState
{
public:
	class UClass*                                SpawnProjectileClass;                              // 0x58(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SpawnProjectileInterval;                           // 0x60(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SpawnProjectileSocket;                             // 0x64(0x8)(Edit, ConstParm, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanAttackWhileFlying : 1;                         // Mask: 0x1, PropSize: 0x10x6C(0x1)(Edit, ConstParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClearAttackStateOnEnd : 1;                        // Mask: 0x2, PropSize: 0x10x6C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoSecondarySwingTrace : 1;                        // Mask: 0x4, PropSize: 0x10x6C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_218 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bDontActuallyDealDamage : 1;                       // Mask: 0x20, PropSize: 0x10x6C(0x1)(ConstParm, ExportObject, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnHitActor : 1;                              // Mask: 0x40, PropSize: 0x10x6C(0x1)(Edit, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetSocketLocation : 1;                       // Mask: 0x80, PropSize: 0x10x6C(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FD3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class UObject>>         SecondarySwingRadiusTargetClasses;                 // 0x70(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SecondarySwingRadius;                              // 0x80(0x4)(BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FD4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SecondarySwingLocOffset;                           // 0x88(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FD5[0x38];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalAIStateDinoMeleeState* GetDefaultObj();

	void BPOnHitActor(const struct FHitResult& HitResult);
	class FName BPGetSocketLocation(const struct FVector& SocketLocation);
};

// 0x8 (0xE0 - 0xD8)
// Class ShooterGame.PrimalAIStateDinoFlyerGrab
class UPrimalAIStateDinoFlyerGrab : public UPrimalAIStateDinoMeleeState
{
public:
	class APrimalCharacter*                      FirstHit;                                          // 0xD8(0x8)(Edit, ConstParm, BlueprintVisible, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalAIStateDinoFlyerGrab* GetDefaultObj();

};

// 0x8 (0xE0 - 0xD8)
// Class ShooterGame.PrimalAIStateDinoGrabAndReleaseState
class UPrimalAIStateDinoGrabAndReleaseState : public UPrimalAIStateDinoMeleeState
{
public:
	class APrimalCharacter*                      FirstHit;                                          // 0xD8(0x8)(Edit, ConstParm, BlueprintVisible, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalAIStateDinoGrabAndReleaseState* GetDefaultObj();

};

// 0x98 (0xF0 - 0x58)
// Class ShooterGame.PrimalAIStateDinoSpiderMinions
class UPrimalAIStateDinoSpiderMinions : public UPrimalAIState
{
public:
	class UClass*                                MinionCharacterTypeClass;                          // 0x58(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        MinionCharacterTypeClasses;                        // 0x60(0x10)(BlueprintVisible, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                MinionCharacterTypeClassesWeights;                 // 0x70(0x10)(ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        MinionMaxCount;                                    // 0x80(0x1)(ConstParm, ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FD7[0x17];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SpawnRandomOffset;                                 // 0x98(0x18)(OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               SpawnFixedOffset;                                  // 0xB0(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EggSocket;                                         // 0xC8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFirstBatch;                                       // 0xD0(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventMinionTaming;                              // 0xD1(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventMinionSaving;                              // 0xD2(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FD8[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BatchMinionCoolDown;                               // 0xD4(0x4)(Edit, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastBatchTime;                                     // 0xD8(0x8)(Edit, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BatchCount;                                        // 0xE0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        AbsoluteMaxMinions;                                // 0xE1(0x1)(Edit, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        RemainingMinionBatchCount;                         // 0xE2(0x1)(Edit, ConstParm, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FD9[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        OverrideMinionBaseLevel;                           // 0xE4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumMinionsToSpawn;                                 // 0xE8(0x4)(BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FDA[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalAIStateDinoSpiderMinions* GetDefaultObj();

};

// 0x18 (0x70 - 0x58)
// Class ShooterGame.PrimalAIStateDinoSpiderRangedAcidState
class UPrimalAIStateDinoSpiderRangedAcidState : public UPrimalAIState
{
public:
	class FName                                  SprayStartSocket;                                  // 0x58(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeBetweenProjectile;                             // 0x60(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bScaleProjDamageByDinoDamage;                      // 0x64(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAimAtTarget;                                      // 0x65(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FDC[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       NextSprayTime;                                     // 0x68(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalAIStateDinoSpiderRangedAcidState* GetDefaultObj();

};

// 0x30 (0xE8 - 0xB8)
// Class ShooterGame.PrimalAIStateDinoSpiderRangedWebState
class UPrimalAIStateDinoSpiderRangedWebState : public UPrimalAIStateDinoRangedState
{
public:
	class FName                                  SprayStartSocket;                                  // 0xB8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SprayEndSocket;                                    // 0xC0(0x8)(Edit, ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClampDirection : 1;                               // Mask: 0x1, PropSize: 0x10xC8(0x1)(ConstParm, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_219 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2FDD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TimeBetweenProjectile;                             // 0xCC(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LeadTime;                                          // 0xD0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FDE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       NextSprayTime;                                     // 0xD8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SpreadOffsetPitch;                                 // 0xE0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumberOfProjectilesMultiplier;                     // 0xE4(0x4)(Edit, ConstParm, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalAIStateDinoSpiderRangedWebState* GetDefaultObj();

};

// 0x8 (0xC0 - 0xB8)
// Class ShooterGame.PrimalAIStateDinoSpineyLizardTailRangeState
class UPrimalAIStateDinoSpineyLizardTailRangeState : public UPrimalAIStateDinoRangedState
{
public:
	uint8                                        Pad_2FDF[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalAIStateDinoSpineyLizardTailRangeState* GetDefaultObj();

};

// 0xB8 (0x400 - 0x348)
// Class ShooterGame.PrimalAnimInstance
class UPrimalAnimInstance : public UAnimInstance
{
public:
	class APrimalCharacter*                      MyPrimalCharOwner;                                 // 0x348(0x8)(Edit, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimalCharacterMovement*              MyPrimalMovementComp;                              // 0x350(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentDeltaTime;                                  // 0x358(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FED[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               CurrentOwnerVelocity;                              // 0x360(0x18)(ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CurrentOwnerAcceleration;                          // 0x378(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CurrentMeshVelocity;                               // 0x390(0x18)(ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentMeshSpeed;                                  // 0x3A8(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FEE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               CurrentMeshAcceleration;                           // 0x3B0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PreviousMeshLocation;                              // 0x3C8(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PreviousMeshVelocity;                              // 0x3E0(0x18)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCheatDisableIK;                                   // 0x3F8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableAnimationGroundConforming : 1;              // Mask: 0x1, PropSize: 0x10x3F9(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FF1[0x6];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalAnimInstance* GetDefaultObj();

	void RefreshCachedTraversalVars();
	class AActor* PlayHitEffect(float* DamageTaken, struct FVector* HitLocation, struct FRotator* HitNormal, struct FVector* HitVelocity, class FName* ImpactedBoneName, const struct FDamageEvent& DamageEvent, class APawn** PawnInstigator, bool* bHitKilledDino, bool* UsesImpulse, struct FVector* CalculatedHitImpulse, TSoftObjectPtr<class AShooterProjectile>* ProjectileRef);
	void OnSuddenStop(struct FVector* PrevVelocity, class APawn** PawnInstigator);
	void GenerateDebugText(class FString* Result);
};

// 0x188 (0x1C0 - 0x38)
// Class ShooterGame.PrimalAssets
class UPrimalAssets : public UPrimalAssetsBase
{
public:
	uint8                                        Pad_2FF5[0x138];                                   // Fixing Size After Last Property  > TateDumper <
	TMap<class UObject*, struct FAssetRetainer>  RetainedObjects;                                   // 0x170(0x50)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalAssets* GetDefaultObj();

	void ClassAssetResolve(TSoftClassPtr<class UObject> Ptr, class UClass** ReturnValue);
	void ClassAssetRequest(TSoftClassPtr<class UObject> Ptr, class UClass** ReturnValue);
	void AssetResolve(TSoftObjectPtr<class UObject> Ptr, class UObject** ReturnValue);
	void AssetRequest(TSoftObjectPtr<class UObject> Ptr, class UObject** ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.PrimalAutocastFunctions
class UPrimalAutocastFunctions : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPrimalAutocastFunctions* GetDefaultObj();

	void ToCompOwner(class UActorComponent* InComponent, class AActor** ReturnValue);
	void PrimalPawnToPrimalCharacter(class APrimalPawn* InPawn, class APrimalCharacter** ReturnValue);
	void PrimalGameModeToShooterGameMode(class APrimalGameMode* InGameMode, class AShooterGameMode** ReturnValue);
	void PrimalGameInstanceToShooterGameInstance(class UPrimalGameInstance* InInstance, class UShooterGameInstance** ReturnValue);
	void PrimalDamageToShooterDamage(class UPrimalDamageType* InDamage, class UShooterDamageType** ReturnValue);
	class APrimalPlayerController* PPCToSPC(class AShooterPlayerController** ReturnValue);
	class APrimalDinoAIController* PFCFromDinoAIController(class UPrimalPathFollowingComponent** ReturnValue);
	class AAIController* PFCFromAIController(class UPrimalPathFollowingComponent** ReturnValue);
	class APlayerController* PCToSPC(class AShooterPlayerController** ReturnValue);
	class APlayerController* PCToPPC(class APrimalPlayerController** ReturnValue);
	void PawnToPrimalPawn(class APawn* InPawn, class APrimalPawn** ReturnValue);
	void PawnToPrimalCharacter(class APawn* InPawn, class APrimalCharacter** ReturnValue);
	void LocalPlayerToShooterLocalPlayer(class ULocalPlayer* InPlayer, class UShooterLocalPlayer** ReturnValue);
	void HUDToShooterHUD(class AHUD* InHUD, class AShooterHUD** ReturnValue);
	void GameStateToShooterGameState(class AGameState* InGameState, class AShooterGameState** ReturnValue);
	void GameStateBaseToShooterGameState(class AGameStateBase* InGameState, class AShooterGameState** ReturnValue);
	void GameStateBaseToGameState(class AGameStateBase* InGameState, class AGameState** ReturnValue);
	void GameModeToShooterGameMode(class AGameMode* InGameMode, class AShooterGameMode** ReturnValue);
	void GameModeToPrimalGameMode(class AGameMode* InGameMode, class APrimalGameMode** ReturnValue);
	void GameModeBaseToShooterGameMode(class AGameModeBase* InGameMode, class AShooterGameMode** ReturnValue);
	void GameModeBaseToPrimalGameMode(class AGameModeBase* InGameMode, class APrimalGameMode** ReturnValue);
	void GameInstanceToShooterGameInstance(class UGameInstance* InInstance, class UShooterGameInstance** ReturnValue);
	void GameInstanceToPrimalGameInstance(class UGameInstance* InInstance, class UPrimalGameInstance** ReturnValue);
	void FloatToDouble(double Value, double* ReturnValue);
	void DoubleToFloat(double Value, double* ReturnValue);
	void DamageToShooterDamage(class UDamageType* InDamage, class UShooterDamageType** ReturnValue);
	void DamageToPrimalDamage(class UDamageType* InDamage, class UPrimalDamageType** ReturnValue);
	class AController* ControllertoPrimalController(class APrimalController** ReturnValue);
	void CharacterToPrimalCharacter(class ACharacter* InCharacter, class APrimalCharacter** ReturnValue);
	void CharacterMovementToPCM(class UCharacterMovementComponent* InMovement, class UPrimalCharacterMovement** ReturnValue);
	class AAIController* AIControllerToDinoAIController(class APrimalDinoAIController** ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.PrimalBlueprintFunctions
class UPrimalBlueprintFunctions : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPrimalBlueprintFunctions* GetDefaultObj();

	bool SetCastFarShadow(class UPrimitiveComponent** Component);
	bool K2_SetTimerForNextTickDelegate(struct FTimerHandle* ReturnValue);
	bool K2_SetTimerForNextTick(class UObject** Object, struct FTimerHandle* ReturnValue);
	class UObject* GetInjectedLightDirection(class ADirectionalLight* ForLight, struct FRotator* ReturnValue);
	void GetBehaviorTree(class UBTNode* NodeOwner, class UBehaviorTreeComponent** ReturnValue);
	void ForceNotifyBlackboardValue(class UBTNode* NodeOwner, const struct FBlackboardKeySelector& Key);
	void ConvertTransformToRelative(struct FTransform* WorldTransform, struct FTransform* LocalTransform, struct FTransform* ReturnValue);
	void ControllerEvent_GetUserIndex(const struct FControllerEvent& Input, int32* ReturnValue);
	void ControllerEvent_GetEffectingButton(const struct FControllerEvent& Input, struct FKey* ReturnValue);
	void ControllerEvent_GetAnalogValue(const struct FControllerEvent& Input, float* ReturnValue);
};

// 0x440 (0xA40 - 0x600)
// Class ShooterGame.PrimalDinoAIController
class APrimalDinoAIController : public AAIController
{
public:
	uint8                                        Pad_3078[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DieIfLeftWaterWanderMinimumWaterHeightMultiplier;  // 0x608(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DieIfLeftWaterReachedRadiusDistanceCheckMultiplier; // 0x60C(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DieIfLeftWaterTargetUnsubmergedTimeout;            // 0x610(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LandDinoMaxWaterTargetDepthCapsuleMultiplier;      // 0x614(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraCorpseTargetingRange;                         // 0x618(0x4)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FleeFromAttackCoolDownTime;                        // 0x61C(0x4)(ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FleeFromAttackTimeLimit;                           // 0x620(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ForceFleeUnderHealthPercentage;                    // 0x624(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFleeOnCriticalHealth;                             // 0x628(0x1)(Edit, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3079[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DieIfLeftWaterTargetingRequiresFreeDepth;          // 0x62C(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DieIfLeftWaterWanderRequiresCapsuleMultiFreeDepth; // 0x630(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_307A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastBlockadeCheckTime;                             // 0x638(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastMovingAroundBlockadeTime;                      // 0x640(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MovingAroundBlockadeDirection;                     // 0x648(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_307B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               MovingAroundBlockadePoint;                         // 0x650(0x18)(Edit, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LastBlockadeWidth;                                 // 0x668(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_307C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LastBlockadeHitNormal;                             // 0x670(0x18)(Edit, ConstParm, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LastBlockadeHitLocation;                           // 0x688(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               StartMovingAroundBlockadeLocation;                 // 0x6A0(0x18)(BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                LastMovingAroundBlockadeActor;                     // 0x6B8(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcedAggro : 1;                                  // Mask: 0x1, PropSize: 0x10x6C0(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_221 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_307D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ForceTargetActor;                                  // 0x6C8(0x8)(BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeferredTickMode : 1;                             // Mask: 0x1, PropSize: 0x10x6D0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_222 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_307E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                Target;                                            // 0x6D8(0x8)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	float                                        AttackDestinationOffset;                           // 0x6E0(0x4)(Edit, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseOverlapTargetCheck;                            // 0x6E4(0x1)(Edit, Net, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNotifyNeighborsWithoutDamage;                     // 0x6E5(0x1)(Edit, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPShouldNotifyNeighbor;                        // 0x6E6(0x1)(Edit, ConstParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPShouldNotifyAnyNeighbor;                     // 0x6E7(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRequireAbsoluteDamageForNeighborNotification;     // 0x6E8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_307F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AboveDeltaZAttackRange;                            // 0x6EC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BelowDeltaZAttackRange;                            // 0x6F0(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WildAboveDeltaZTargetingRange;                     // 0x6F4(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WildBelowDeltaZTargetingRange;                     // 0x6F8(0x4)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWildUseDeltaZTargetingForFlyerPawnOrBigDino;      // 0x6FC(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3080[0x13];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bDontWander;                                       // 0x710(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyOverlapTargetCorpsesUnlessHasTarget;          // 0x711(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3081[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        NaturalTargetingRange;                             // 0x714(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedTargetingRange;                               // 0x718(0x4)(Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedCorpseFoodTargetingRange;                     // 0x71C(0x4)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WanderRandomDistanceAmount;                        // 0x720(0x4)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FlyingWanderFixedDistanceAmount;                   // 0x724(0x4)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FlyingWanderRandomDistanceAmount;                  // 0x728(0x4)(Net, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxFlyingTargetDeltaZ;                             // 0x72C(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WanderFlyingZScaler;                               // 0x730(0x4)(Edit, ExportObject, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WanderFlyingClampZHeightAboveGround;               // 0x734(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WanderFlyingMinZHeightAboveGround;                 // 0x738(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WanderFixedDistanceAmount;                         // 0x73C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseAggro;                                         // 0x740(0x1)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3082[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinAggroValue;                                     // 0x744(0x4)(ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AggroToAddUponRemovingTarget;                      // 0x748(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AggroToAddUponAcquiringTarget;                     // 0x74C(0x4)(Edit, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AggroFactorDecreaseSpeed;                          // 0x750(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AggroFactorDecreaseGracePeriod;                    // 0x754(0x4)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AggroFactorDamagePercentageMultiplier;             // 0x758(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AggroNotifyNeighborsMultiplier;                    // 0x75C(0x4)(ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AggroNotifyNeighborsRange;                         // 0x760(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AggroNotifyNeighborsRangeFalloff;                  // 0x764(0x4)(Edit, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TargetingDistanceReductionFactorLinear;            // 0x768(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TargetingDistanceReductionFactorExponent;          // 0x76C(0x4)(Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BeyondTargetingRangeAggroAddition;                 // 0x770(0x4)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AggroFactorDesirabilityMultiplier;                 // 0x774(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AttackRange;                                       // 0x778(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        AttackInterval;                                    // 0x77C(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        AttackRotationRangeDegrees;                        // 0x780(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        AttackRotationGroundSpeedMultiplier;               // 0x784(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        RangeTargetWildDinosMultiplier;                    // 0x788(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3084[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              AttackRotationRate;                                // 0x790(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	bool                                         bFocusOnTargetDuringAttack;                        // 0x7A8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3085[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               FlyingMoveTowardsTargetOffset;                     // 0x7B0(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CombatFlyingMoveTowardsTargetOffset;               // 0x7C8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               FlyingTargetFocalPositionOffset;                   // 0x7E0(0x18)(ConstParm, ExportObject, Net, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FlyingReachedDestinationThresholdOffset;           // 0x7F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SeekingIntervalCheckToFly;                         // 0x7FC(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SeekingPercentChanceToFly;                         // 0x800(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SeekingIntervalCheckToLand;                        // 0x804(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SeekingPercentChanceToLand;                        // 0x808(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinimumWanderGroundNormalZ;                        // 0x80C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FollowStoppingDistance;                            // 0x810(0x4)(Edit, ConstParm, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CorpseAttackDestinationMultiplier;                 // 0x814(0x4)(Edit, BlueprintReadOnly, Net, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseOverlapTargetCheckTraces;                      // 0x818(0x1)(ConstParm, Net, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseAlternateMovePoint;                            // 0x819(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTotallyIgnoreWaterTargets;                        // 0x81A(0x1)(ExportObject, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWaterDinoAllowUnsubmergedTargets;                 // 0x81B(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3087[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LastCheckAttackRangePawnLocation;                  // 0x820(0x18)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LastCheckAttackRangeClosestPoint;                  // 0x838(0x18)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LastCheckAttackRangeTargetLocation;                // 0x850(0x18)(ConstParm, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                LastCheckAttackRangeTarget;                        // 0x868(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         HasAttackPriority;                                 // 0x870(0x1)(Edit, ExportObject, Net, OutParm, ReturnParm, DisableEditOnInstance)
	uint8                                        Pad_3088[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<float>                                TamedAITargetingRangeMultipliers;                  // 0x878(0x10)(Edit, ConstParm, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MateBoostAggroNotifyNeighborsMultiplier;           // 0x888(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3089[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UBehaviorTree*                         BehaviourTree;                                     // 0x890(0x8)(ConstParm, BlueprintVisible, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UBehaviorTree*                         HasEnemyTree;                                      // 0x898(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UBehaviorTree*                         BabyHasEnemyTree;                                  // 0x8A0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UBehaviorTree*                         ForcedAggroHasEnemyTree;                           // 0x8A8(0x8)(Edit, ExportObject, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UBehaviorTree*                         NoEnemyTree;                                       // 0x8B0(0x8)(ConstParm, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UBehaviorTree*                         FleeFromAttackTree;                                // 0x8B8(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UBehaviorTree*                         TamedNoEnemyTree;                                  // 0x8C0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UBehaviorTree*                         MissionTree;                                       // 0x8C8(0x8)(ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> AggroNotifyNeighborsClasses;                       // 0x8D0(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreMoveAroundBlockade : 1;                     // Mask: 0x1, PropSize: 0x10x8E0(0x1)(Edit, ConstParm, ExportObject, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlyingUseMoveAroundBlockade : 1;                  // Mask: 0x2, PropSize: 0x10x8E0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseGeometryInsteadOfStationObjForFreeDepthTest : 1; // Mask: 0x4, PropSize: 0x10x8E0(0x1)(Edit, ConstParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNotifyBPTargetSet : 1;                            // Mask: 0x8, PropSize: 0x10x8E0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSetupFindTarget : 1;                         // Mask: 0x10, PropSize: 0x10x8E0(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNotAllowedToFindTargets : 1;                      // Mask: 0x20, PropSize: 0x10x8E0(0x1)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowForceFleeToSameTargetingTeam : 1;            // Mask: 0x40, PropSize: 0x10x8E0(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPUpdateBestTarget : 1;                        // Mask: 0x80, PropSize: 0x10x8E0(0x1)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_308B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MoveAroundBlockadeAdditionalWidth;                 // 0x8E4(0x4)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MoveAroundObjectMaxVelocity;                       // 0x8E8(0x4)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ForcedAggroTimeCounter;                            // 0x8EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedMaxFollowDistance;                            // 0x8F0(0x4)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTargetChanged : 1;                                // Mask: 0x1, PropSize: 0x10x8F4(0x1)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAttackForcesRunning : 1;                          // Mask: 0x2, PropSize: 0x10x8F4(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseFlyingTargetOffsets : 1;                       // Mask: 0x4, PropSize: 0x10x8F4(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRidingDinoTargetPlayer : 1;                       // Mask: 0x8, PropSize: 0x10x8F4(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRidingPlayerTargetDino : 1;                       // Mask: 0x10, PropSize: 0x10x8F4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreWaterOrAmphibiousTargets : 1;               // Mask: 0x20, PropSize: 0x10x8F4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPTargetingDesire : 1;                         // Mask: 0x40, PropSize: 0x10x8F4(0x1)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableForceFlee : 1;                             // Mask: 0x80, PropSize: 0x10x8F4(0x1)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCombatMoveTowardsTargetOffset : 1;             // Mask: 0x1, PropSize: 0x10x8F5(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideIgnoredByWildDino : 1;               // Mask: 0x2, PropSize: 0x10x8F5(0x1)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanUseAttackStateOnTargetChange : 1;              // Mask: 0x4, PropSize: 0x10x8F5(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_223 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bForceOnlyTargetingPlayerOrTamed : 1;              // Mask: 0x10, PropSize: 0x10x8F5(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceTargetingAllStructures : 1;                  // Mask: 0x20, PropSize: 0x10x8F5(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceTargetDinoRider : 1;                         // Mask: 0x40, PropSize: 0x10x8F5(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlyerAllowWaterTargeting : 1;                     // Mask: 0x80, PropSize: 0x10x8F5(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPForceTargetDinoRider : 1;                    // Mask: 0x1, PropSize: 0x10x8F6(0x1)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysStartledWhenAggroedByNeighbor : 1;          // Mask: 0x2, PropSize: 0x10x8F6(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceOnlyTargetingPlayers : 1;                    // Mask: 0x4, PropSize: 0x10x8F6(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsMissionDino : 1;                                // Mask: 0x8, PropSize: 0x10x8F6(0x1)(Edit, ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseImprovedAggroFalloffBehavior : 1;              // Mask: 0x10, PropSize: 0x10x8F6(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_224 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3093[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BaseStructureTargetingDesire;                      // 0x8F8(0x4)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LandDinoMaxFlyerTargetDeltaZ;                      // 0x8FC(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NaturalMaxDepthZ;                                  // 0x900(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AActor>                 ForcedAttackTarget;                                // 0x904(0x8)(Edit, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ForcedAttackEnemyTeam;                             // 0x90C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastForcedAttackEnemyTeamTime;                     // 0x910(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3094[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        ForcedFleeDuration;                                // 0x92C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinAttackIntervalForFleeing;                       // 0x930(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinAttackIntervalForFleeing_Water;                 // 0x934(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinLocChangeIntervalForFleeing;                    // 0x938(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PercentageTorporForFleeing;                        // 0x93C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DamagedForceAggroInterval;                         // 0x940(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3095[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ForceAggroUntilTime;                               // 0x948(0x8)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastExecutedAttackTime;                            // 0x950(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastForcedFleeTime;                                // 0x958(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastFleeLocCheckTime;                              // 0x960(0x8)(ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3096[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        NumAlliesToAttack;                                 // 0x980(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FindLandingPositionZOffset;                        // 0x984(0x4)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedFollowAcceptanceRadiusOffset;                 // 0x988(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedFollowAcceptanceHeightOffset;                 // 0x98C(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AIFlightMaxLandingZDistance;                       // 0x990(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_309A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ForcedMoveToUntilTime;                             // 0x998(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_309C[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBP_TamedOverrideHorizontalLandingRange : 1;    // Mask: 0x1, PropSize: 0x10x9A8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlyerWanderDefaultToOrigin : 1;                   // Mask: 0x2, PropSize: 0x10x9A8(0x1)(ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheckBuffTargetingDesireOverride : 1;             // Mask: 0x4, PropSize: 0x10x9A8(0x1)(BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowSwimWanderingForLandDinos : 1;               // Mask: 0x8, PropSize: 0x10x9A8(0x1)(Edit, ConstParm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUse_BPOverrideLandingLocation : 1;                // Mask: 0x10, PropSize: 0x10x9A8(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_226 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_309E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class AActor>>          WildTargetingDesireMultiplierClasses;              // 0x9B0(0x10)(Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                WildTargetingDesireMultiplierValues;               // 0x9C0(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AActor>>          TamedTargetingDesireMultiplierClasses;             // 0x9D0(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                TamedTargetingDesireMultiplierValues;              // 0x9E0(0x10)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSet<TWeakObjectPtr<class AActor>>           IgnoredTargets;                                    // 0x9F0(0x50)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalDinoAIController* GetDefaultObj();

	void WantsAttackPriority(bool* ReturnValue);
	void UpdateMoveFocus();
	void UpdateAggro();
	class FString StopBrainComponent();
	float StaticGetRandomWanderDestination(const struct FVector& LocOverride, float RandomOffsetMultiplier, bool bUseRandomNegativeXDir, bool bOrientRandOffsetByRotation, const struct FRotator& OrientRandOffsetByRotation, struct FVector* ReturnValue);
	void ShouldForceRunWhenAttacking(bool* ReturnValue);
	bool SetTarget();
	void SetHasAttackPriority(bool Value);
	void SetAttackRotationRate();
	void SetAttackGroundSpeed();
	class FString ResumeBrainComponent();
	void RestartBrainComponent();
	void ResetRotationUseAcceleration();
	void ResetRotationRate();
	void ResetGroundSpeed();
	void ResetAccelerationFollowsRotation();
	void RecoverMovement();
	void RebootBrainComponent();
	void PlayStartledAnim();
	class FString PauseBrainComponent();
	void OrderedToLand(bool* ReturnValue);
	void OnLosingTargetEvent();
	bool IsWithinAttackRangeAndCalculateBestAttack(class AActor** Other, bool* ReturnValue);
	bool IsWithinAttackRange(class AActor** Other, bool* ReturnValue);
	void IsLogicPaused(bool* ReturnValue);
	void IsForceTargetDinoRider(class AShooterCharacter** PlayerTarget, bool* ReturnValue);
	struct FVector GetWanderAroundActorDestination(struct FVector* ReturnValue);
	void GetTarget(class AActor** ReturnValue);
	void GetRandomWanderDestination(const struct FVector& LocOverride, float RandomOffsetMultiplier, bool bUseRandomNegativeXDir, bool bOrientRandOffsetByRotation, const struct FRotator& OrientRandOffsetByRotation, struct FVector* ReturnValue);
	void GetMinAttackRange(float* ReturnValue);
	void GetLandingLocation(struct FVector* ReturnValue);
	void GetHasAttackPriority(bool* ReturnValue);
	void GetCurrentAttackIndex(uint8* ReturnValue);
	void GetControllerPawn(class APawn** ReturnValue);
	void GetControlledDino(class APrimalDinoCharacter** ReturnValue);
	struct FOverlapResult GetClosestTree(class UStaticMeshComponent** ReturnValue);
	void GetAttackRotationRate(struct FRotator* ReturnValue);
	void GetAttackRotationRangeDegrees(float* ReturnValue);
	void GetAttackRotationGroundSpeedMultiplier(float* ReturnValue);
	void GetAttackRange(float* ReturnValue);
	void GetAttackInterval(float* ReturnValue);
	void GetAggroNotifyNeighborsRange(float* ReturnValue);
	double GetAggroEntry(bool* ReturnValue);
	void GetAggroEntriesCount(int32* ReturnValue);
	int32 GetAggroEntriesAttackerAtIndex(class AActor** ReturnValue);
	class AActor* GetAggroDesirability(float* ReturnValue);
	void FindTarget(bool bDontSet, class AActor** ReturnValue);
	void FindNewTarget(bool bDontSet, class AActor** ReturnValue);
	void ClearAggroEntries();
	void ChangedAITarget();
	void CanLand(bool* ReturnValue);
	bool CalculateAndSetWonderingAIStateEvent(bool* ReturnValue);
	bool CalculateAndSetWonderingAIState(bool* ReturnValue);
	bool BPUpdateBestTarget(class AActor** ReturnValue);
	class APrimalDinoCharacter* BPShouldNotifyNeighbor(bool* ReturnValue);
	class APrimalDinoCharacter* BPShouldNotifyAnyNeighbor(bool* ReturnValue);
	void BPSetupFindTarget();
	float BPOverrideLandingLocation(struct FVector* ReturnValue);
	void BPOverrideIgnoredByWildDino(class AActor** WildDinoToIgnore, bool* ReturnValue);
	void BPOnFleeEvent();
	void BPNotifyTargetSet();
	void BPGetTargetingDesire(class AActor* ForTarget, float ForTargetingDesireValue, float* ReturnValue);
	void BPForceTargetDinoRider(class AShooterCharacter** PlayerTarget, bool* ReturnValue);
	void BP_TamedOverrideHorizontalLandingRange(struct FVector2D* ReturnValue);
	void AvoidOutOfWater();
	void AvoidGenericToPoint(struct FVector* TargetDestination);
	void AddToAggro(class AActor* Attacker, float* DamagePercent, bool* bNotifyNeighbors, bool* SetValue, bool* bIsFromDamage, bool* SkipTeamCheck);
};

// 0x28 (0xA68 - 0xA40)
// Class ShooterGame.PrimalBotAIController
class APrimalBotAIController : public APrimalDinoAIController
{
public:
	float                                        DinoSearchRadius;                                  // 0xA40(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_30AE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AAIAttackCoordinator*                  AttackCoordinator;                                 // 0xA48(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                RiddenDinoControllerClass;                         // 0xA50(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalDinoCharacter>   ClaimedDino;                                       // 0xA58(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnInstance)
	uint8                                        Pad_30AF[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalBotAIController* GetDefaultObj();

	void UpdateDinoClaim();
	void TimeSinceGivenAttackPriority(float* ReturnValue);
	class AAIAttackCoordinator* SetAttackCoordinator();
	void ReleaseClaimOnDino();
	void IsTooFarToAttack(bool* ReturnValue);
	void IsTooCloseToAttack(bool* ReturnValue);
	class APrimalBotCharacter* InitializeBlackboardValues();
	class APrimalDinoCharacter* ClaimDino(bool* ReturnValue);
};

// 0x1250 (0x1B10 - 0x8C0)
// Class ShooterGame.PrimalCharacter
class APrimalCharacter : public ACharacter
{
public:
	uint8                                        Pad_33F5[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        ProneEyeHeight;                                    // 0x8D8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraMaxAccelerationModifier;                      // 0x8DC(0x4)(OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraFrictionModifier;                             // 0x8E0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_33F9[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector                               OldLocation;                                       // 0x8F8(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FRotator                              OldRotation;                                       // 0x910(0x18)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EffectorInterpSpeed;                               // 0x928(0x4)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HalfLegLength;                                     // 0x92C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TwoLeggedVirtualPointDistFactor;                   // 0x930(0x4)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FullIKDistance;                                    // 0x934(0x4)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IKAfterFallingTime;                                // 0x938(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SimpleIkRate;                                      // 0x93C(0x4)(BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               GroundCheckExtent;                                 // 0x940(0x18)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastForceAimedCharactersTime;                      // 0x958(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FluidInteractionScalar;                            // 0x960(0x4)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_33FB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          JumpAnim;                                          // 0x968(0x8)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          LandedAnim;                                        // 0x970(0x8)(Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          HurtAnim;                                          // 0x978(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          HurtAnim_Flying;                                   // 0x980(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          HurtAnim_Sleeping;                                 // 0x988(0x8)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          PinnedAnim;                                        // 0x990(0x8)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       HurtFX;                                            // 0x998(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            HurtSound;                                         // 0x9A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RootBodyBoneName;                                  // 0x9A8(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FDecalData                            HurtDecalData;                                     // 0x9B0(0x20)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               SavedBaseWorldLocation;                            // 0x9D0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_33FC[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsVoiceTalking;                                   // 0xA00(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_33FD[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                TribeName;                                         // 0xA08(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        WaterSubmergedDepthThreshold;                      // 0xA18(0x4)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ProneWaterSubmergedDepthThreshold;                 // 0xA1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EMovementMode                     SubmergedWaterMovementMode;                        // 0xA20(0x1)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EMovementMode                     UnSubmergedWaterMovementMode;                      // 0xA21(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_33FF[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UToolTipWidget*                        CustomTooltipWidget;                               // 0xA28(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDamageTypeAdjuster>           DamageTypeAdjusters;                               // 0xA30(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SnapshotScale;                                     // 0xA40(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3401[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FPrimalSnapshotPose>           SnapshotPoses;                                     // 0xA48(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PoopItemClass;                                     // 0xA58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TaxidermySkinClass;                                // 0xA60(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DragBoneName;                                      // 0xA68(0x8)(BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DragSocketName;                                    // 0xA70(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDragDistance;                                   // 0xA78(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDragDistanceTimeout;                            // 0xA7C(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          BonesToIngoreWhileDragged;                         // 0xA80(0x10)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DefaultTPVZoom;                                    // 0xA90(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxTPVZoom;                                        // 0xA94(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinTPVZoom;                                        // 0xA98(0x4)(Edit, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PreviewCameraMaxZoomMultiplier;                    // 0xA9C(0x4)(Edit, ConstParm, ExportObject, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PreviewCameraDefaultZoomMultiplier;                // 0xAA0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PreviewCameraDistanceScaleFactor;                  // 0xAA4(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            StartDraggedSound;                                 // 0xAA8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            EndDraggedSound;                                   // 0xAB0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      DraggedCharacter;                                  // 0xAB8(0x8)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      DraggingCharacter;                                 // 0xAC0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3403[0x78];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       ForceUnfreezeSkeletalDynamicsUntilTime;            // 0xB40(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StasisConsumerRangeMultiplier;                     // 0xB48(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsProne : 1;                                      // Mask: 0x1, PropSize: 0x10xB4C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bCanEverProne : 1;                                 // Mask: 0x2, PropSize: 0x10xB4C(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBlueprintJumpInputEvents : 1;                  // Mask: 0x4, PropSize: 0x10xB4C(0x1)(BlueprintVisible, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseDeferredMovement : 1;                          // Mask: 0x8, PropSize: 0x10xB4C(0x1)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideAccessInventoryInput : 1;            // Mask: 0x10, PropSize: 0x10xB4C(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableCameraShakeOnNotifyHit : 1;                // Mask: 0x20, PropSize: 0x10xB4C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasBuffPreSerializeForInstigator : 1;             // Mask: 0x40, PropSize: 0x10xB4C(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsSleeping : 1;                                   // Mask: 0x80, PropSize: 0x10xB4C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        bWantsToRun : 1;                                   // Mask: 0x1, PropSize: 0x10xB4D(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bActiveRunToggle : 1;                              // Mask: 0x2, PropSize: 0x10xB4D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLocalIsDragging : 1;                              // Mask: 0x4, PropSize: 0x10xB4D(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsBeingDragged : 1;                               // Mask: 0x8, PropSize: 0x10xB4D(0x1)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableSpawnDefaultController : 1;                // Mask: 0x10, PropSize: 0x10xB4D(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDragging : 1;                                   // Mask: 0x20, PropSize: 0x10xB4D(0x1)(BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDraggingWithGrapHook : 1;                       // Mask: 0x40, PropSize: 0x10xB4D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowCapsuleDamageAfterDeath : 1;                 // Mask: 0x80, PropSize: 0x10xB4D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemoteRunning : 1;                                // Mask: 0x1, PropSize: 0x10xB4E(0x1)(Edit, ConstParm, BlueprintVisible, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanRun : 1;                                       // Mask: 0x2, PropSize: 0x10xB4E(0x1)(ConstParm, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseHealthDamageMaterialOverlay : 1;               // Mask: 0x4, PropSize: 0x10xB4E(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsBlinking : 1;                                   // Mask: 0x8, PropSize: 0x10xB4E(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSleepedWaterRagdoll : 1;                          // Mask: 0x10, PropSize: 0x10xB4E(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanBeTorpid : 1;                                  // Mask: 0x20, PropSize: 0x10xB4E(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bDebugIK : 1;                                      // Mask: 0x40, PropSize: 0x10xB4E(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDebugIK_ShowTraceNames : 1;                       // Mask: 0x80, PropSize: 0x10xB4E(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAlwaysUpdateMesh : 1;                        // Mask: 0x1, PropSize: 0x10xB4F(0x1)(Edit, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRagdollIgnoresPawnCapsules : 1;                   // Mask: 0x2, PropSize: 0x10xB4F(0x1)(ConstParm, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsePoopAnimationNotify : 1;                       // Mask: 0x4, PropSize: 0x10xB4F(0x1)(Edit, BlueprintVisible, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsBigDino : 1;                                    // Mask: 0x8, PropSize: 0x10xB4F(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeathUseRagdoll : 1;                              // Mask: 0x10, PropSize: 0x10xB4F(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanBeCarried : 1;                                 // Mask: 0x20, PropSize: 0x10xB4F(0x1)(ConstParm, BlueprintVisible, ExportObject, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanNotifyTeamAggroAI : 1;                    // Mask: 0x40, PropSize: 0x10xB4F(0x1)(ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDamageNotifyTeamAggroAI : 1;                      // Mask: 0x80, PropSize: 0x10xB4F(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OverrideCameraTargetOriginLocation : 1;     // Mask: 0x1, PropSize: 0x10xB50(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetOverrideCameraInterpSpeed : 1;            // Mask: 0x2, PropSize: 0x10xB50(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRecentlyUpdateIk : 1;                             // Mask: 0x4, PropSize: 0x10xB50(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIKEnabled : 1;                                    // Mask: 0x8, PropSize: 0x10xB50(0x1)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsCarried : 1;                                    // Mask: 0x10, PropSize: 0x10xB50(0x1)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsCarriedAsPassenger : 1;                         // Mask: 0x20, PropSize: 0x10xB50(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventFallDamage : 1;                       // Mask: 0x40, PropSize: 0x10xB50(0x1)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyIsDamageCauserOfAddedBuff : 1;         // Mask: 0x80, PropSize: 0x10xB50(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventProjectileAttachment : 1;                  // Mask: 0x1, PropSize: 0x10xB51(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_23E : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3405[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ImmobilizationActor;                               // 0xB58(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceIKOnDedicatedServer : 1;                     // Mask: 0x1, PropSize: 0x10xB60(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreAllImmobilizationTraps : 1;                 // Mask: 0x2, PropSize: 0x10xB60(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceTriggerIgnoredTraps : 1;                     // Mask: 0x4, PropSize: 0x10xB60(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsImmobilized : 1;                                // Mask: 0x8, PropSize: 0x10xB60(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanIgnoreWater : 1;                               // Mask: 0x10, PropSize: 0x10xB60(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDead : 1;                                       // Mask: 0x20, PropSize: 0x10xB60(0x1)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	uint8                                        ReplicateAllBones : 1;                             // Mask: 0x40, PropSize: 0x10xB60(0x1)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        AutoStopReplicationWhenSleeping : 1;               // Mask: 0x80, PropSize: 0x10xB60(0x1)(Edit, ConstParm, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanDrag : 1;                                      // Mask: 0x1, PropSize: 0x10xB61(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanBeDragged : 1;                                 // Mask: 0x2, PropSize: 0x10xB61(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesRunningAnimation : 1;                         // Mask: 0x4, PropSize: 0x10xB61(0x1)(ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceNetDidLand : 1;                              // Mask: 0x8, PropSize: 0x10xB61(0x1)(Edit, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventSimpleIK : 1;                              // Mask: 0x10, PropSize: 0x10xB61(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyAllowRunningWhileFlying : 1;                  // Mask: 0x20, PropSize: 0x10xB61(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOrbitCamera : 1;                                  // Mask: 0x40, PropSize: 0x10xB61(0x1)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_23F : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        BitPad_240 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bDraggedFromExtremitiesOnly : 1;                   // Mask: 0x80, PropSize: 0x10xB62(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableIK : 1;                                     // Mask: 0x1, PropSize: 0x10xB63(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bOnlyPlayPoopAnimWhileWalking : 1;                 // Mask: 0x2, PropSize: 0x10xB63(0x1)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBlueprintAnimNotifyCustomEvent : 1;            // Mask: 0x4, PropSize: 0x10xB63(0x1)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNoDamageImpulse : 1;                              // Mask: 0x8, PropSize: 0x10xB63(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventImmobilization : 1;                        // Mask: 0x10, PropSize: 0x10xB63(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_241 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_340D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_242 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bSleepingUseRagdoll : 1;                           // Mask: 0x2, PropSize: 0x10xB68(0x1)(Edit, ConstParm, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDediForceUnregisterSKMesh : 1;                    // Mask: 0x4, PropSize: 0x10xB68(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReadyToPoop : 1;                                  // Mask: 0x8, PropSize: 0x10xB68(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasDynamicBase : 1;                               // Mask: 0x10, PropSize: 0x10xB68(0x1)(Edit, BlueprintVisible, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_243 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        BitPad_244 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bDieIfLeftWater : 1;                               // Mask: 0x2, PropSize: 0x10xB69(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsAmphibious : 1;                                 // Mask: 0x4, PropSize: 0x10xB69(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bUseAmphibiousTargeting : 1;                       // Mask: 0x8, PropSize: 0x10xB69(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsWaterDino : 1;                                  // Mask: 0x10, PropSize: 0x10xB69(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bIsFlyerDino : 1;                                  // Mask: 0x20, PropSize: 0x10xB69(0x1)(ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreTargetingCarnivores : 1;                    // Mask: 0x40, PropSize: 0x10xB69(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_245 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        BitPad_246 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsPlayingLowHealthAnim : 1;                       // Mask: 0x2, PropSize: 0x10xB6A(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowCharacterPainting : 1;                       // Mask: 0x4, PropSize: 0x10xB6A(0x1)(EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTickStatusComponent : 1;                          // Mask: 0x8, PropSize: 0x10xB6A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_247 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bDontActuallyEmitPoop : 1;                         // Mask: 0x20, PropSize: 0x10xB6A(0x1)(Edit, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPHUDOverideBuffProgressBar : 1;                  // Mask: 0x40, PropSize: 0x10xB6A(0x1)(ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRunningWhileSwimming : 1;                    // Mask: 0x80, PropSize: 0x10xB6A(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyBumpedByPawn : 1;                      // Mask: 0x1, PropSize: 0x10xB6B(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyBumpedPawn : 1;                        // Mask: 0x2, PropSize: 0x10xB6B(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustDamage : 1;                            // Mask: 0x4, PropSize: 0x10xB6B(0x1)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_248 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPTimerServer : 1;                             // Mask: 0x1, PropSize: 0x10xB6C(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPTimerNonDedicated : 1;                       // Mask: 0x2, PropSize: 0x10xB6C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTriggerBPStasis : 1;                              // Mask: 0x4, PropSize: 0x10xB6C(0x1)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSetCharacterMeshseMaterialScalarParamValue : 1; // Mask: 0x8, PropSize: 0x10xB6C(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_249 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3417[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BPTimerServerMin;                                  // 0xB70(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BPTimerServerMax;                                  // 0xB74(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BPTimerNonDedicatedMin;                            // 0xB78(0x4)(Edit, BlueprintVisible, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BPTimerNonDedicatedMax;                            // 0xB7C(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       NextBPTimerServer;                                 // 0xB80(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       NextBPTimerNonDedicated;                           // 0xB88(0x8)(ConstParm, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsMounted : 1;                                    // Mask: 0x1, PropSize: 0x10xB90(0x1)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventTargetingByTurrets : 1;                    // Mask: 0x2, PropSize: 0x10xB90(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDelayFootstepsUnderMinInterval : 1;               // Mask: 0x4, PropSize: 0x10xB90(0x1)(Edit, ConstParm, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSleepingDisableIK : 1;                            // Mask: 0x8, PropSize: 0x10xB90(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRagdollRetainAnimations : 1;                      // Mask: 0x10, PropSize: 0x10xB90(0x1)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAddedAttachments : 1;                        // Mask: 0x20, PropSize: 0x10xB90(0x1)(EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanPlayLandingAnim : 1;                           // Mask: 0x40, PropSize: 0x10xB90(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyHasRunningAnimationWhenWalking : 1;           // Mask: 0x80, PropSize: 0x10xB90(0x1)(ConstParm, Net, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_24A : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bPreventTargetingAndMovement : 1;                  // Mask: 0x2, PropSize: 0x10xB91(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventMovement : 1;                              // Mask: 0x4, PropSize: 0x10xB91(0x1)(ConstParm, ExportObject, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventWaterHopCorrectionVelChange : 1;           // Mask: 0x8, PropSize: 0x10xB91(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_24B : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bBPPreventInputType : 1;                           // Mask: 0x20, PropSize: 0x10xB91(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePreventAllInput : 1;                         // Mask: 0x40, PropSize: 0x10xB91(0x1)(Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventAllBuffs : 1;                              // Mask: 0x80, PropSize: 0x10xB91(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        LastIsInsideVaccumSealedCube : 1;                  // Mask: 0x1, PropSize: 0x10xB92(0x1)(ExportObject, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventJump : 1;                                  // Mask: 0x2, PropSize: 0x10xB92(0x1)(Edit, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventStasis : 1;                           // Mask: 0x4, PropSize: 0x10xB92(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyOnStasis : 1;                              // Mask: 0x8, PropSize: 0x10xB92(0x1)(Edit, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreSerializeSaveGame : 1;                    // Mask: 0x10, PropSize: 0x10xB92(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPostLoadedFromSaveGame : 1;                  // Mask: 0x20, PropSize: 0x10xB92(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseHeavyCombatMusic : 1;                          // Mask: 0x40, PropSize: 0x10xB92(0x1)(ExportObject, Net, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_24C : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bBPModifyAllowedViewHitDir : 1;                    // Mask: 0x1, PropSize: 0x10xB93(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPLimitPlayerRotation : 1;                        // Mask: 0x2, PropSize: 0x10xB93(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPManagedFPVViewLocation : 1;                     // Mask: 0x4, PropSize: 0x10xB93(0x1)(Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPCameraRotationFinal : 1;                        // Mask: 0x8, PropSize: 0x10xB93(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bServerBPNotifyInventoryItemChangesUseQuantity : 1; // Mask: 0x10, PropSize: 0x10xB93(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bServerBPNotifyInventoryItemChanges : 1;           // Mask: 0x20, PropSize: 0x10xB93(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_24D : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_341E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastCausedDamageTime;                              // 0xB98(0x8)(Edit, ExportObject, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                LastDamageCauser;                                  // 0xBA0(0x8)(Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsAtMaxInventoryItems : 1;                        // Mask: 0x1, PropSize: 0x10xBA8(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnStaminaDrained : 1;                        // Mask: 0x2, PropSize: 0x10xBA8(0x1)(ExportObject, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_24E : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPGrabDebugSnapshot : 1;                       // Mask: 0x8, PropSize: 0x10xBA8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsAttachedOtherCharacter : 1;                     // Mask: 0x10, PropSize: 0x10xBA8(0x1)(Edit, BlueprintVisible, ExportObject, Net, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnLethalDamage : 1;                          // Mask: 0x20, PropSize: 0x10xBA8(0x1)(ConstParm, Net, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustTorpidityDamage : 1;                   // Mask: 0x40, PropSize: 0x10xBA8(0x1)(Edit, ConstParm, BlueprintReadOnly, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPForceCameraStyle : 1;                        // Mask: 0x80, PropSize: 0x10xBA8(0x1)(Edit, ConstParm, BlueprintVisible, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPRemovedAsPassenger : 1;                      // Mask: 0x1, PropSize: 0x10xBA9(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableFPV : 1;                                   // Mask: 0x2, PropSize: 0x10xBA9(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bConsumeZoomInput : 1;                             // Mask: 0x4, PropSize: 0x10xBA9(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableIkOnDeath : 1;                             // Mask: 0x8, PropSize: 0x10xBA9(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_24F : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3424[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        ImmobilizationTrapsToIgnore;                       // 0xBB0(0x10)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3425[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class APrimalDinoCharacter>   CarryingDino;                                      // 0xBC8(0x8)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DediOverrideCapsuleCollisionProfileName;           // 0xBD0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DediOverrideMeshCollisionProfileName;              // 0xBD8(0x8)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SnaredFromSocket;                                  // 0xBE0(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DeathDestructionDepositInventoryClass;             // 0xBE8(0x8)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DamageNotifyTeamAggroMultiplier;                   // 0xBF0(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DamageNotifyTeamAggroRange;                        // 0xBF4(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DamageNotifyTeamAggroRangeFalloff;                 // 0xBF8(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ReplicatedCurrentHealth;                           // 0xBFC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReplicatedMaxHealth;                               // 0xC00(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReplicatedCurrentTorpor;                           // 0xC04(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReplicatedMaxTorpor;                               // 0xC08(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3428[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalProjectileGrapplingHook*        LastGrapHookPullingMe;                             // 0xC10(0x8)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_250 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bInRagdoll : 1;                                    // Mask: 0x4, PropSize: 0x10xC18(0x1)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsNPC : 1;                                        // Mask: 0x8, PropSize: 0x10xC18(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_251 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsDraggingWithOffset : 1;                         // Mask: 0x1, PropSize: 0x10xC19(0x1)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDraggedWithOffset : 1;                          // Mask: 0x2, PropSize: 0x10xC19(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventRunningWhileWalking : 1;                   // Mask: 0x4, PropSize: 0x10xC19(0x1)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanLandOnWater : 1;                               // Mask: 0x8, PropSize: 0x10xC19(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustMoveForward : 1;                       // Mask: 0x10, PropSize: 0x10xC19(0x1)(ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustMoveRight : 1;                         // Mask: 0x20, PropSize: 0x10xC19(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetGravity : 1;                              // Mask: 0x40, PropSize: 0x10xC19(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowDamageWhenMounted : 1;                       // Mask: 0x80, PropSize: 0x10xC19(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnAttachmentReplication : 1;                 // Mask: 0x1, PropSize: 0x10xC1A(0x1)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnMovementModeChangedNotify : 1;             // Mask: 0x2, PropSize: 0x10xC1A(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnAnimPlayedNotify : 1;                      // Mask: 0x4, PropSize: 0x10xC1A(0x1)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideCharacterNewFallVelocity : 1;        // Mask: 0x8, PropSize: 0x10xC1A(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_252 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_342B[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPOverrideCharacterSound : 1;                  // Mask: 0x1, PropSize: 0x10xC1C(0x1)(ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bUseBPOverrideCharacterParticle : 1;               // Mask: 0x2, PropSize: 0x10xC1C(0x1)(Edit, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        BitPad_253 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_342D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBP_OnSetRunningEvent : 1;                      // Mask: 0x1, PropSize: 0x10xC20(0x1)(BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceTurretFastTargeting : 1;                     // Mask: 0x2, PropSize: 0x10xC20(0x1)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlyingOrWaterDinoPreventBackwardsRun : 1;         // Mask: 0x4, PropSize: 0x10xC20(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideFlyingVelocity : 1;                  // Mask: 0x8, PropSize: 0x10xC20(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSleepingDisableRagdoll : 1;                       // Mask: 0x10, PropSize: 0x10xC20(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyOnStasisWhenDead : 1;                      // Mask: 0x20, PropSize: 0x10xC20(0x1)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventLiveBlinking : 1;                          // Mask: 0x40, PropSize: 0x10xC20(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_254 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bForceAlwaysUpdateMeshAndCollision : 1;            // Mask: 0x1, PropSize: 0x10xC21(0x1)(ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_255 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3430[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPGetHUDElements : 1;                          // Mask: 0x1, PropSize: 0x10xC24(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventHurtAnim : 1;                              // Mask: 0x2, PropSize: 0x10xC24(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_256 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3431[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterCharacter*                     LastGrapHookPullingOwner;                          // 0xC28(0x8)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanBeBaseForCharacter : 1;                   // Mask: 0x1, PropSize: 0x10xC30(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanBaseOnCharacter : 1;                      // Mask: 0x2, PropSize: 0x10xC30(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnLanded : 1;                                // Mask: 0x4, PropSize: 0x10xC30(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableMoveCollapsing : 1;                         // Mask: 0x8, PropSize: 0x10xC30(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_ForceAllowBuffClasses : 1;                  // Mask: 0x10, PropSize: 0x10xC30(0x1)(ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_257 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3434[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               DragOffset;                                        // 0xC38(0x18)(ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCheckJumpInput : 1;                          // Mask: 0x1, PropSize: 0x10xC50(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideHurtAnim : 1;                        // Mask: 0x2, PropSize: 0x10xC50(0x1)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideDamageCauserHitMarker : 1;           // Mask: 0x4, PropSize: 0x10xC50(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsSkinned : 1;                                    // Mask: 0x8, PropSize: 0x10xC50(0x1)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustImpulseFromDamage : 1;                 // Mask: 0x10, PropSize: 0x10xC50(0x1)(ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustCharacterMovementImpulse : 1;          // Mask: 0x20, PropSize: 0x10xC50(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPModifyFOVInterpSpeed : 1;                    // Mask: 0x40, PropSize: 0x10xC50(0x1)(Edit, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bVerifyBasingForSaddleStructures : 1;              // Mask: 0x80, PropSize: 0x10xC50(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OverrideTerminalVelocity : 1;               // Mask: 0x1, PropSize: 0x10xC51(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_ShouldForceDisableTPVCameraInterpolation : 1; // Mask: 0x2, PropSize: 0x10xC51(0x1)(ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAllowPlayMontage : 1;                        // Mask: 0x4, PropSize: 0x10xC51(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventPerPixelPainting : 1;                      // Mask: 0x8, PropSize: 0x10xC51(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPItemSlotOverrides : 1;                       // Mask: 0x10, PropSize: 0x10xC51(0x1)(OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventMoveUp : 1;                                // Mask: 0x20, PropSize: 0x10xC51(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowDediServerGroundConformInterpolate : 1; // Mask: 0x40, PropSize: 0x10xC51(0x1)(Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_258 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3438[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class USoundBase*>                    CharacterOverrideSoundFrom;                        // 0xC58(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class USoundBase*>                    CharacterOverrideSoundTo;                          // 0xC68(0x10)(Edit, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UParticleSystem*>               CharacterOverrideParticleFrom;                     // 0xC78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UParticleSystem*>               CharacterOverrideParticleTo;                       // 0xC88(0x10)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_343B[0x44];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        DraggedBoneIndex;                                  // 0xCDC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CustomBitFlags;                                    // 0xCE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RunningSpeedModifier;                              // 0xCE4(0x4)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_343C[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          DeathAnim;                                         // 0xCF8(0x8)(BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimationAsset*                       ReplicatedDeathAnim;                               // 0xD00(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftObjectPtr<class UAnimationAsset>        SavedDeathAnim;                                    // 0xD08(0x30)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            DeathSound;                                        // 0xD38(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            RunLoopSound;                                      // 0xD40(0x8)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            RunStopSound;                                      // 0xD48(0x8)(Edit, ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class USoundBase*>                    FootStepSoundsPhysMat;                             // 0xD50(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class USoundBase*>                    LandedSoundsPhysMat;                               // 0xD60(0x10)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVelocityBasedCharacterSoundInfo      VelocityBasedLandedSounds;                         // 0xD70(0x38)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_343D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  MeshRootSocketName;                                // 0xDAC(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_343E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxFallSpeed;                                      // 0xDBC(0x4)(Edit, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FallDamageMultiplier;                              // 0xDC0(0x4)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_343F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAudioComponent*                       RunLoopAC;                                         // 0xDC8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FConstraintInstance                   DraggingConstraint;                                // 0xDD0(0x278)(ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3440[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ServerTargetCarriedYaw;                            // 0x1050(0x4)(ConstParm, BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3441[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            NetDynamicMusicSound;                              // 0x1058(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalDinoCharacter>   MountedDino;                                       // 0x1060(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       MountedDinoTime;                                   // 0x1068(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3442[0x40];                                    // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AActor>                 LastBasedMovementActorRef;                         // 0x10B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GrabWeightThreshold;                               // 0x10B8(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DragWeight;                                        // 0x10BC(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3443[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DescriptiveName;                                   // 0x10C8(0x10)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FVector_NetQuantize>           ReplicatedRagdollPositions;                        // 0x10D8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FRotator_NetQuantize>          ReplicatedRagdollRotations;                        // 0x10E8(0x10)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3444[0x88];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        KillXPBase;                                        // 0x1180(0x4)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3445[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        RagdollReplicationInterval;                        // 0x1198(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3446[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FBoneDamageAdjuster>           BoneDamageAdjusters;                               // 0x11A8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ClientRotationInterpSpeed;                         // 0x11B8(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ClientLocationInterpSpeed;                         // 0x11BC(0x4)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDragMovementSpeed;                              // 0x11C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3447[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              CurrentAimRot;                                     // 0x11C8(0x18)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CurrentRootLoc;                                    // 0x11E0(0x18)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3448[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class UPrimalCharacterStatusComponent*       MyCharacterStatusComponent;                        // 0x1210(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        Pad_3449[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalInventoryComponent*             MyInventoryComponent;                              // 0x1220(0x8)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class UAnimMontage*                          SyncedMontage;                                     // 0x1228(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_344A[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MontageSyncInterval;                               // 0x123C(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastRunningTime;                                   // 0x1240(0x8)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               TPVCameraOffset;                                   // 0x1248(0x18)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               TPVCameraOffsetMultiplier;                         // 0x1260(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TPVCameraHorizontalOffsetFactorMax;                // 0x1278(0x4)(Edit, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TPVCameraHorizontalOffsetFactorMaxClamp;           // 0x127C(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               TPVCameraOrgOffset;                                // 0x1280(0x18)(ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LandedSoundMaxRange;                               // 0x1298(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FallingDamageHealthScaleBase;                      // 0x129C(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FootstepsMaxRange;                                 // 0x12A0(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinTimeBetweenFootsteps;                           // 0x12A4(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_344B[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinTimeBetweenFootstepsRunning;                    // 0x12B0(0x4)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_344C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftObjectPtr<class UAnimMontage>>   AnimationsPreventInput;                            // 0x12B8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DeathHarvestingComponent;                          // 0x12C8(0x8)(BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimalHarvestingComponent*            MyDeathHarvestingComponent;                        // 0x12D0(0x8)(ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_344D[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AController>            LastDamageEventInstigator;                         // 0x1308(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_344E[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	enum class EVisibilityBasedAnimTickOption    PreDragComponentUpdateFlag;                        // 0x1330(0x1)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EShooterPhysMaterialType          TargetableDamageFXDefaultPhysMaterial;             // 0x1331(0x1)(BlueprintReadOnly, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_344F[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          PoopAnimation;                                     // 0x1338(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3450[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       CorpseDestructionTime;                             // 0x1348(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsHost;                                           // 0x1350(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3452[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CorpseLifespan;                                    // 0x1354(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TPVStructurePlacingHeightMultiplier;               // 0x1358(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CorpseFadeAwayTime;                                // 0x135C(0x4)(ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RagdollDeathImpulseScaler;                         // 0x1360(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3454[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            PoopSound;                                         // 0x1368(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseTargetingDesirability;                         // 0x1370(0x4)(ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DeadBaseTargetingDesirability;                     // 0x1374(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              OrbitCamRot;                                       // 0x1378(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OrbitCamZoom;                                      // 0x1390(0x4)(ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OrbitCamZoomStepSize;                              // 0x1394(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OrbitCamMinZoomLevel;                              // 0x1398(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OrbitCamMaxZoomLevel;                              // 0x139C(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3458[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       LastTimeNotInFalling;                              // 0x13C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxCursorHUDDistance;                              // 0x13D0(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AddForwardVelocityOnJump;                          // 0x13D4(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               DeathActorTargetingOffset;                         // 0x13D8(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SocketOverrideTargetingLocation;                   // 0x13F0(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_345A[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       LastTimeSubmerged;                                 // 0x1428(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_345B[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        FootPhysicalSurfaceCheckInterval;                  // 0x1440(0x4)(ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_345C[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class APrimalCharacter>       LastAttackedNearbyPlayer;                          // 0x1458(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastAttackedNearbyPlayerTime;                      // 0x1460(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_345E[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        RagdollImpactDamageVelocityScale;                  // 0x1488(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RagdollImpactDamageMinDecelerationSpeed;           // 0x148C(0x4)(ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StartFallingImpactRagdollTimeInterval;             // 0x1490(0x4)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3460[0x2C];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       LastTimeUpdatedCharacterStatusComponent;           // 0x14C0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastTimeUpdatedCorpseDestructionTime;              // 0x14C8(0x8)(BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3461[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            EnteredSwimmingSound;                              // 0x14E8(0x8)(Edit, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVelocityBasedCharacterSoundInfo      VelocityBasedEnteredSwimmingSounds;                // 0x14F0(0x38)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            EnteredSleepingSound;                              // 0x1528(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            LeftSleepingSound;                                 // 0x1530(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3464[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       LastWalkingTime;                                   // 0x1548(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3465[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        CorpseDraggedDecayRate;                            // 0x1570(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PoopAltItemChance;                                 // 0x1574(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PoopAltItemClass;                                  // 0x1578(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalBuff>>     DefaultBuffs;                                      // 0x1580(0x10)(Edit, ConstParm, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PoopIcon;                                          // 0x1590(0x8)(ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RunningMaxDesiredRotDelta;                         // 0x1598(0x4)(ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CorpseDestructionTimer;                            // 0x159C(0x4)(BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastSkinnedTime;                                   // 0x15A0(0x8)(Edit, ConstParm, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_346A[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnDied;                                            // 0x15B0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnNotifyDamage;                                    // 0x15C0(0x10)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnSleepStateChanged;                               // 0x15D0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            NotifyLevelUp;                                     // 0x15E0(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            NotifyUnstasis;                                    // 0x15F0(0x10)(BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            NotifyStasis;                                      // 0x1600(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_346C[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       LastTimeInSwimming;                                // 0x1630(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_346E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDefaultTextureParamOverride>  DefaultNoItemTextureParamOverrides;                // 0x1640(0x10)(Edit, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_346F[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class UStructurePaintingComponent*           PaintingComponent;                                 // 0x1668(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        ExtraMaxSpeedModifier;                             // 0x1670(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraRotationRateModifier;                         // 0x1674(0x4)(Edit, ConstParm, BlueprintVisible, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedDinoCallOutRange;                             // 0x1678(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3471[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               TargetPathfindingLocationOffset;                   // 0x1688(0x18)(ConstParm, ExportObject, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastTookDamageTime;                                // 0x16A0(0x8)(DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastTookDamageTimeDifferentTeam;                   // 0x16A8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraReceiveDamageMultiplier;                      // 0x16B0(0x4)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraMeleeDamageMultiplier;                        // 0x16B4(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3473[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        DamageTheMeleeDamageCauserPercent;                 // 0x16D0(0x4)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DurabilityDegrateTheMeleeDamageCauserPercent;      // 0x16D4(0x4)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DamageTheMeleeDamageCauserDamageType;              // 0x16D8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        TribeGroupInventoryRank;                           // 0x16E0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3475[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CharacterDamageImpulseMultiplier;                  // 0x16E4(0x4)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3476[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bCanBePushed : 1;                                  // Mask: 0x1, PropSize: 0x10x16F0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanPushOthers : 1;                                // Mask: 0x2, PropSize: 0x10x16F0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsBigPusher : 1;                                  // Mask: 0x4, PropSize: 0x10x16F0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanEverCrouch : 1;                                // Mask: 0x8, PropSize: 0x10x16F0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        BitPad_25A : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_347B[0x1F];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        MaxRagdollDeathVelocityImpulse;                    // 0x1710(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ClientRotationInterpSpeedMultiplierGround;         // 0x1714(0x4)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastIkUpdateTime;                                  // 0x1718(0x8)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlideGravityScaleMultiplier;                       // 0x1720(0x4)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlideMaxCarriedWeight;                             // 0x1724(0x4)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_347D[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  DefaultCameraStyle;                                // 0x1730(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ScaleDeathHarvestHealthyByMaxHealthBase;           // 0x1738(0x4)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3480[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            NotifyInputEvent;                                  // 0x1740(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3481[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        RunMinVelocityRotDot;                              // 0x1760(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3482[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastHitDamageTime;                                 // 0x1768(0x8)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShouldBeInGodMode;                                // 0x1770(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3483[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TWeakObjectPtr<class APrimalCharacter>> SavedBasedCharacters;                              // 0x1778(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3484[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        MeshingTickCounterMultiplier;                      // 0x17D8(0x4)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3488[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class APrimalBuff>>     PreventBuffClasses;                                // 0x17E0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          PreventBuffClassesWithTag;                         // 0x17F0(0x10)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreLowGravityDisorientation : 1;               // Mask: 0x1, PropSize: 0x10x1800(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnMassTeleportEvent : 1;                     // Mask: 0x2, PropSize: 0x10x1800(0x1)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBlueprintAnimNotifyCustomState : 1;            // Mask: 0x4, PropSize: 0x10x1800(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventIKWhenNotWalking : 1;                      // Mask: 0x8, PropSize: 0x10x1800(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreCorpseDecompositionMultipliers : 1;         // Mask: 0x10, PropSize: 0x10x1800(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInterpHealthDamageMaterialOverlayAlpha : 1;       // Mask: 0x20, PropSize: 0x10x1800(0x1)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSuppressPlayerKillNotification : 1;               // Mask: 0x40, PropSize: 0x10x1800(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowCorpseDestructionWithPreventSaving : 1;      // Mask: 0x80, PropSize: 0x10x1800(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventInventoryAccess : 1;                       // Mask: 0x1, PropSize: 0x10x1801(0x1)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseGetOverrideSocket : 1;                         // Mask: 0x2, PropSize: 0x10x1801(0x1)(ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowBPNewDoorInteractionDrawHUD : 1;             // Mask: 0x4, PropSize: 0x10x1801(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bJumpOnRelease : 1;                                // Mask: 0x8, PropSize: 0x10x1801(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowMultiUseByRemoteDino : 1;                    // Mask: 0x10, PropSize: 0x10x1801(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideJumpZModifier : 1;                   // Mask: 0x20, PropSize: 0x10x1801(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseZeroGravityWander : 1;                         // Mask: 0x40, PropSize: 0x10x1801(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventNotifySound : 1;                      // Mask: 0x80, PropSize: 0x10x1801(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_ModifyInputAcceleration : 1;                // Mask: 0x1, PropSize: 0x10x1802(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_ModifySavedMoveAcceleration_PreRep : 1;     // Mask: 0x2, PropSize: 0x10x1802(0x1)(BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_ModifySavedMoveAcceleration_PostRep : 1;    // Mask: 0x4, PropSize: 0x10x1802(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceSimpleTeleportFade : 1;                      // Mask: 0x8, PropSize: 0x10x1802(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetArmorDurabilityDecreaseMultiplier : 1;    // Mask: 0x10, PropSize: 0x10x1802(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPShieldBlock : 1;                             // Mask: 0x20, PropSize: 0x10x1802(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideFromScans : 1;                                // Mask: 0x40, PropSize: 0x10x1802(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideWalkingVelocity : 1;                      // Mask: 0x80, PropSize: 0x10x1802(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bOverrideSwimmingVelocity : 1;                     // Mask: 0x1, PropSize: 0x10x1803(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bOverrideSwimmingAcceleration : 1;                 // Mask: 0x2, PropSize: 0x10x1803(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bOverrideNewFallVelocity : 1;                      // Mask: 0x4, PropSize: 0x10x1803(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bOverrideFlyingVelocity : 1;                       // Mask: 0x8, PropSize: 0x10x1803(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bUsesRootMotion : 1;                               // Mask: 0x10, PropSize: 0x10x1803(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableAnimationGroundConforming : 1;              // Mask: 0x20, PropSize: 0x10x1803(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWasBeingDragged : 1;                              // Mask: 0x40, PropSize: 0x10x1803(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_25B : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_348E[0x1C];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        ControlledInventoryAccessDistanceOffset;           // 0x1820(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_348F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnOrbitCameraViewChange;                           // 0x1828(0x10)(Edit, BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AdditionalMaxUseDistance;                          // 0x1838(0x4)(BlueprintVisible, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AActor>                 TetherActor;                                       // 0x183C(0x8)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        TetherRadius;                                      // 0x1844(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherHeight;                                      // 0x1848(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3491[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPOverridePhysicsImpulses : 1;                 // Mask: 0x1, PropSize: 0x10x184D(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_25C : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3492[0x4A];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bAllowASACamera : 1;                               // Mask: 0x1, PropSize: 0x10x1898(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_25D : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3493[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ASACameraConfigClass;                              // 0x18A0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimalCameraConfig*                   CurrentPrimalCameraConfig;                         // 0x18A8(0x8)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CameraProfileIdOverride;                           // 0x18B0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastStartedSleepingTime;                           // 0x18B8(0x8)(ConstParm, ExportObject, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       ForcePreventCharZInterpUntilTime;                  // 0x18C0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<class FName, class UAnimationAsset*>    DeathAnimations;                                   // 0x18C8(0x50)(Edit, BlueprintVisible, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDediServerAutoUnregisterSkeletalMeshWhenNotRelevant : 1; // Mask: 0x1, PropSize: 0x10x1918(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventUnconsciousMeshBasing : 1;                 // Mask: 0x2, PropSize: 0x10x1918(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseOnCharacterSteppedNotify : 1;                  // Mask: 0x4, PropSize: 0x10x1918(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_25E : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsDoingDraggedInterp : 1;                         // Mask: 0x1, PropSize: 0x10x1919(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCorrectMeshRelativeZOffsetWhileDragged : 1;       // Mask: 0x2, PropSize: 0x10x1919(0x1)(ConstParm, ExportObject, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReturnToCapsuleCenterWhenDroppedInWater : 1;      // Mask: 0x4, PropSize: 0x10x1919(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_25F : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3496[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TSet<class UParticleSystemComponent*>        ParticleSystemsToActivateAfterDragged;             // 0x1920(0x50)(Edit, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSet<class UNiagaraComponent*>               NiagaraSystemsToActivateAfterDragged;              // 0x1970(0x50)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DraggingInterpSpeed;                               // 0x19C0(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DraggingInterpDuration;                            // 0x19C4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EMovementMode                     DraggedMovementMode;                               // 0x19C8(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3497[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                CharacterSavedDynamicBase;                         // 0x19D0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CharacterSavedDynamicBaseBoneName;                 // 0x19D8(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CharacterSavedDynamicBaseRelativeLocation;         // 0x19E0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3498[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FQuat                                 CharacterSavedDynamicBaseRelativeRotation;         // 0x1A00(0x20)(Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3499[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        DragSocketVerticalOffsetAsCapsulePercent;          // 0x1A38(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ETickingGroup                     BeingDraggedMovementComponentTickGroup;            // 0x1A3C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ETickingGroup                     DraggingMovementComponentTickGroup;                // 0x1A3D(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_349A[0x26];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        CharacterLocalControlZInterpSpeed;                 // 0x1A64(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DeathCapsuleRadiusMultiplier;                      // 0x1A68(0x4)(BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DeathCapsuleHalfHeightMultiplier;                  // 0x1A6C(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DeathMeshRelativeZOffsetAsCapsulePercent;          // 0x1A70(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EnvironmentInteractionPlasticityMult;              // 0x1A74(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EnvironmentInteractionPlasticityExponent;          // 0x1A78(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideBlendSpaceSmoothType : 1;                 // Mask: 0x1, PropSize: 0x10x1A7C(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_260 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bNetworkClientsUpdateBasedMovementOnTick : 1;      // Mask: 0x4, PropSize: 0x10x1A7C(0x1)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseArmorDurabilityVFX : 1;                        // Mask: 0x8, PropSize: 0x10x1A7C(0x1)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventStaggeredMovement : 1;                     // Mask: 0x10, PropSize: 0x10x1A7C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPForceUseOldASECamera : 1;                       // Mask: 0x20, PropSize: 0x10x1A7C(0x1)(ConstParm, ExportObject, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesWaterFinLocking : 1;                          // Mask: 0x40, PropSize: 0x10x1A7C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreWeightWhenUsingExtraMaxSpeedModifier : 1;   // Mask: 0x80, PropSize: 0x10x1A7C(0x1)(ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_349E[0xB];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraSystem*                        DamageImpactFXForAttacker;                         // 0x1A88(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DamageImpactFXSizeOverride;                        // 0x1A90(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NonLocationalDamageHurtFXSocket;                   // 0x1A94(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_349F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               NonLocationalDamageHurtFXScaleOverride;            // 0x1AA0(0x18)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       PossessedAtTime;                                   // 0x1AB8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DragBodyIcon;                                      // 0x1AC0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ReleaseBodyIcon;                                   // 0x1AC8(0x8)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            MoveCloserIcon;                                    // 0x1AD0(0x8)(ConstParm, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ColorizeIcon;                                      // 0x1AD8(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TrackingInfoIcon;                                  // 0x1AE0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ToggleTrackingIcon;                                // 0x1AE8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TogglePOIIcon;                                     // 0x1AF0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EquippedArmorDurabilityPercent1;                   // 0x1AF8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EquippedArmorDurabilityPercent2;                   // 0x1AFC(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ArmorDurabilityPercentUpdateInterval;              // 0x1B00(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_34A0[0xC];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalCharacter* GetDefaultObj();

	void ZoomOut();
	void ZoomIn();
	void UseCenteredTPVCamera(bool* ReturnValue);
	void UpdateTickSetting();
	void UpdateSwimmingState();
	void UpdateHasBuffPreSerialize(bool* ReturnValue);
	void UpdateEquippedItemDurabilityVariable(struct FItemNetID* ItemID, float* ItemDurabilityPercentage);
	void UpdateEquippedItemDurabilityMaterials(struct FItemNetID* ItemID, float* ItemDurabilityPercentage);
	void UpdateAllEquippedItemsDurabilityVariables();
	void UpdateAllEquippedItemsDurabilityMaterials();
	bool UnProne();
	void TurnInput(float Val);
	void TurnAtRate(float Val);
	void TryPoop();
	void TryGiveDefaultWeaponReleased();
	void TryGiveDefaultWeapon();
	float TickMovementComponent();
	void TempDampenInputAcceleration();
	class AActor* TakeDamage(float* Damage, const struct FDamageEvent& DamageEvent, float* ReturnValue);
	float StopAnimEx(bool bReplicate, bool bReplicateToOwner);
	class AActor* StaticRemoveCharacterSnapshot();
	class UPrimalItem* StaticGetSnapshotPoseCount(int32* ReturnValue);
	int32 StaticGetSnapshotPose(struct FPrimalSnapshotPose* ReturnValue);
	class UPrimalInventoryComponent* StaticApplyCharacterSnapshotEquipment(class AActor* To);
	int32 StaticApplyCharacterSnapshot(class AActor* To, float* MaxExtent, bool* bCollisionOn);
	void StartForceSkelUpdate(float* ForTime, bool* bForceUpdateMesh, bool* bServerOnly);
	void SleepBodies();
	void ShouldUseSlowInterpToOldCamera(bool* ReturnValue);
	void ShouldUseLongFallCameraPivotZValues(bool* ReturnValue);
	void ShouldUseDurabilityVarForItemType(enum class EPrimalEquipmentType* TheItemType, bool* ReturnValue);
	void ShouldUseDurabilityVar(int32* VarIndex, bool* ReturnValue);
	void ShouldUseAutonomousCorrectionOffset(bool* ReturnValue);
	void ShouldUseASACamera(bool* bCheckShouldSwitchToOld, bool* ReturnValue);
	void ShouldUseArmorDurabilityVFX(bool* ReturnValue);
	void ShouldDisableCameraInterpolation(bool* ReturnValue);
	class APrimalCharacter* ShouldDealDamageTo(bool* bAllowDamageToSelf, bool* bAllowDamageToTribe, bool* bAllowDamageToAlliedTribes, bool* ReturnValue);
	void ShouldASACameraSwitchToOld(bool* bDontCheckForTargeting, bool* ReturnValue);
	void SetSleeping(bool* bSleeping, bool* bUseRagdollLocationOffset, bool* bPreserveSavedAnim);
	class UPrimalInventoryComponent* SetMyInventoryComponent();
	void SetMovementTether(class AActor** InTetherActor, float* Radius, float Height);
	void SetLastCausedDamageTime(double* LastCausedDamageTimeValue);
	void SetEquippedItemDurabilityPercent(struct FItemNetID* ItemID, float* ItemDurabilityPercentage);
	bool SetEnableIK();
	void SetDefaultCameraStyleForController(class APlayerController** APC);
	class FName SetCharacterMeshesMaterialScalarParamValue(float Value);
	void SetCameraProfile(class FName* NewProfileId);
	float SetBoundsScale();
	void ServerTryPoop();
	void ServerSetRunning(bool* bNewRunning);
	void ServerRequestDragTarget(class APrimalCharacter* Target);
	void ServerRequestDrag();
	void ServerGiveDefaultWeapon();
	void ServerDinoOrder(class APrimalDinoCharacter** ADino, enum class EDinoTamedOrder* OrderType, class AActor* Target);
	void ServerCaptureDermis(class APrimalCharacter* Target);
	void ServerCallStayOne(class APrimalDinoCharacter* ForDinoChar);
	void ServerCallStay();
	void ServerCallSetAggressive();
	void ServerCallPassiveFlee();
	void ServerCallPassive();
	void ServerCallNeutral();
	struct FVector ServerCallMoveTo();
	void ServerCallLandFlyerOne(class APrimalDinoCharacter* ForDinoChar);
	void ServerCallFollowOne(class APrimalDinoCharacter* ForDinoChar);
	void ServerCallFollowDistanceCycleOne(class APrimalDinoCharacter* ForDinoChar);
	void ServerCallFollow();
	void ServerCallAttackTargetNew();
	void ServerCallAttackTarget(class AActor* TheTarget);
	void ServerCallAggressive();
	void RequestPoop();
	void RemoveAllJumpDeactivatedBuffs(class APrimalBuff* IgnoredBuff);
	bool Prone();
	class AActor* PreventsTargeting(bool* ReturnValue);
	void PreventInputType(enum class EPrimalCharacterInputType InputType, bool* ReturnValue);
	void PreventInputDoesOffset(bool* ReturnValue);
	void Poop(bool bForcePoop, bool* ReturnValue);
	class AActor* PlayHurtAnim(float* DamageTaken, const struct FDamageEvent& DamageEvent, class APawn** PawnInstigator, bool* bIsLocalPath);
	class AActor* PlayHitEffectRadial(float* DamageTaken, const struct FRadialDamageEvent& DamageEvent, class APawn** PawnInstigator);
	class AActor* PlayHitEffectPoint(float* DamageTaken, const struct FPointDamageEvent& DamageEvent, class APawn** PawnInstigator);
	class AActor* PlayHitEffectGeneric(float* DamageTaken, const struct FDamageEvent& DamageEvent, class APawn** PawnInstigator);
	void PlayerCommand(const class FString& TheCommand, class FString* ReturnValue);
	class AActor* PlayDyingRadial(float* KillingDamage, const struct FRadialDamageEvent& DamageEvent, class APawn** InstigatingPawn);
	class AActor* PlayDyingPoint(float* KillingDamage, const struct FPointDamageEvent& DamageEvent, class APawn** InstigatingPawn);
	class AActor* PlayDyingGeneric(float* KillingDamage, const struct FDamageEvent& DamageEvent, class APawn** InstigatingPawn);
	float PlayAnimEx(float* InPlayRate, bool bReplicate, bool bReplicateToOwner, bool bForceKeepSynced, float* ReturnValue);
	void OverrideCameraTargetOriginLocation(struct FVector* OutOverrideOrigin, class FName* WithCameraStyle);
	void OverrideCameraInterpSpeed(float DefaultTPVCameraSpeedInterpMultiplier, float DefaultTPVOffsetInterpSpeed, float TPVCameraSpeedInterpMultiplier, float* TPVOffsetInterpSpeed);
	void OrbitCamToggle();
	void OrbitCamOn();
	void OrbitCamOff();
	void OnStopRunning();
	void OnStopJump();
	void OnStopFire();
	void OnStopAltFire();
	void OnStartRunning();
	void OnStartJump();
	void OnStartFire();
	void OnStartAltFire();
	void OnRunToggleReleased();
	void OnRunTogglePressed();
	void OnRunToggle();
	void OnRep_RagdollPositions();
	void OnRep_PaintingComponent();
	void OnRep_MountedDino();
	void OnRep_IsSleeping();
	void OnRep_IsProne();
	void OnRep_IsDead();
	void OnRep_EquippedItemDurability();
	void OnRep_DraggedCharacter();
	void OnMassTeleportEvent(enum class EMassTeleportState EventState, class APrimalCharacter* TeleportInitiatedByChar);
	void OnEndDrag();
	void OnDetachedFromCharacter(class APrimalCharacter* ACharacter, int32 OverrideDirection);
	void OnCharacterStepped(struct FVector* PrevLocation, struct FVector* NewLocation);
	int32 OnBeginDrag(bool bWithGrapHook);
	void OnAttachedToCharacter();
	void OnAltFireReleased();
	void OnAltFirePressed();
	void NetUpdateTribeName(const class FString& NewTribeName);
	void NetStopAllAnimMontage();
	class UAnimationAsset* NetSetReplicatedDeathAnim();
	void NetSetMovementModeSimulatedInternal(enum class EMovementMode* NewMovementMode);
	struct FVector NetSetCharacterMovementVelocity(bool bSetNewVelocity, bool bSetNewMovementMode, enum class EMovementMode* NewMovementMode);
	bool NetPlaySoundOnCharacter();
	void NetPlayDeathAnimIfNeeded(bool bOnlyPlayOnClient);
	void NetOnJumped();
	float NetForceUpdateAimedCharacters();
	void NetForceSleepRagdoll();
	void NetDidLand();
	bool NetAddCharacterMovementImpulse(float ImpulseExponent, bool bSetNewMovementMode, enum class EMovementMode* NewMovementMode, bool* bOverrideMaxImpulseZ);
	bool NativeSimulateHair(const TArray<struct FVector>& CurrentPos, const TArray<struct FVector>& LastPos, const TArray<struct FVector>& RestPos, const TArray<struct FVector>& PivotPos, const TArray<float>& RestDistance, const struct FVector& HairSocketLoc, const struct FRotator& HairSocketRot, const struct FVector& ChestSocketLoc, const struct FRotator& ChestSocketRot, float DampingFrontModifier, float DampingBack, float InWater, float HairWetness, float DragForce, float HairScale, float SpringForce, float SpringForceFrontModifier, float SpringForceBack, float GravityForce);
	void NativeOnLanded(const struct FHitResult& Hit);
	void MoveUp(float Val);
	void MoveRight(float Val);
	void MoveForward(float Val);
	float ModifyStasisComponentRadius();
	void LookUpAtRate(float Val);
	void LocalUnpossessed();
	class UClass* LoadPrimalCameraConfig();
	void LivesInWater(bool* ReturnValue);
	class AShooterPlayerController* LevelUpPlayerAddedStat(int32* ReturnValue);
	void IsWithinTether(bool* ReturnValue);
	void IsWildSlow(bool* ReturnValue);
	void IsWatered(bool* ReturnValue);
	void IsValidForCombatMusic(bool* ReturnValue);
	float IsTargetWithinTether(struct FVector* Destination, bool* ReturnValue);
	void IsSwimmingOnWaterSurface(bool* ReturnValue);
	bool IsSubmerged(bool* ReturnValue);
	bool IsSitting(bool* ReturnValue);
	void IsRunning(bool* ReturnValue);
	void IsRider(bool* ReturnValue);
	void IsRagdolled(bool* ReturnValue);
	bool IsProneOrSitting(bool* ReturnValue);
	void IsPrimalCharWalking(bool* ReturnValue);
	void IsPrimalCharSwimming(bool* ReturnValue);
	class APrimalCharacter* IsPrimalCharFriendly(bool* ReturnValue);
	void IsPrimalCharFlying(bool* ReturnValue);
	void IsPrimalCharFalling(bool* ReturnValue);
	void IsOwningClient(bool* ReturnValue);
	void IsOnSeatingStructure(bool* ReturnValue);
	void IsMoving(bool* ReturnValue);
	void IsMovementTethered(bool* ReturnValue);
	class UAnimMontage* IsMontagePlaying(float* TimeFromEndToConsiderFinished, bool* ReturnValue);
	void IsMeshGameplayRelevant(bool* ReturnValue);
	void IsInvincible(bool* ReturnValue);
	void IsInVacuumSealedSpace(bool* ReturnValue);
	enum class EPrimalCharacterStatusState IsInStatusState(bool* ReturnValue);
	bool IsHostileTo(bool* ReturnValue);
	class APrimalCharacter* IsHostileOrAggressiveTo(bool* ReturnValue);
	void IsGameInputAllowed(bool* ReturnValue);
	void IsFirstPerson(bool* ReturnValue);
	void IsDeadOrDying(bool* ReturnValue);
	class AActor* IsDamageOccludedByStructures(bool* ReturnValue);
	void IsCharacterHardAttached(bool* bIgnoreRiding, bool* bIgnoreCarried, bool* ReturnValue);
	void IsBossDino(bool* ReturnValue);
	struct FVector IsBlockedByShield(struct FHitResult* HitInfo, bool bBlockAllPointDamage, bool* ReturnValue);
	void IsBeingDestroyed(bool* ReturnValue);
	bool IsBaseUnresolved(bool* ReturnValue);
	void IsBaby(bool* ReturnValue);
	void IsAttachedToSomething(bool* ReturnValue);
	void IsASACameraEnabled(bool* ReturnValue);
	int32 IsAlliedWithOtherTeam(bool* ReturnValue);
	void IsAlive(bool* ReturnValue);
	bool Immobilize();
	int32 HurtMe();
	void HasValidASACameraConfig(bool* ReturnValue);
	void HasDynamicBase(bool* ReturnValue);
	void HasCryoSickness(bool* ReturnValue);
	TArray<class FName> HasBuffWithCustomTags(bool* ReturnValue);
	class FName HasBuffWithCustomTagConst(bool* ReturnValue);
	class FName HasBuffWithCustomTag(bool* ReturnValue);
	bool HasBuff(class UClass* BuffClass, bool* ReturnValue);
	class APrimalBuff* HasAnyBuffWithDisabledWeaponTag(bool* ReturnValue);
	void GiveKillExperience(bool* ReturnValue);
	void GetVisualVelocity(struct FVector* ReturnValue);
	void GetVelocityBasedSoundIndex(const struct FVelocityBasedCharacterSoundInfo& InStruct, const struct FVector& InVelocity, int32* ReturnValue);
	void GetTransitionToTargetingCameraInterpSpeed(float* ReturnValue);
	enum class EPrimalCameraState GetTransitionToCameraStateInterpTime(float* ReturnValue);
	void GetTPVWeaponCameraOffset(struct FVector* ReturnValue);
	void GetTPVHorizontalCameraOffsetFromSlider(float* ReturnValue);
	void GetTPVHorizontalCameraOffset(float* ReturnValue);
	void GetTPVCameraOffsetMultiplier(struct FVector* ReturnValue);
	bool GetTPVCameraOffset(struct FVector* ReturnValue);
	void GetTooltipCharacterInfoBP(class AShooterPlayerController* PlayerOwner, TArray<struct FTooltipTextInfo>* ReturnValue);
	void GetTooltipCharacterInfo(class AShooterPlayerController* PlayerOwner, TArray<struct FTooltipTextInfo>* ReturnValue);
	void GetTetherObject(class AActor** ReturnValue);
	float GetTetheredVelocity(struct FVector* ReturnValue);
	float GetTetheredDestination(struct FVector* Destination, struct FVector* ReturnValue);
	class FName GetSocketLocation(struct FVector* ReturnValue);
	class FName GetSnapshotComponent(class UActorComponent** ReturnValue);
	void GetShortName(class FString* ReturnValue);
	bool GetRunningSpeedModifier(float* ReturnValue);
	void GetRole(enum class ENetRole* ReturnValue);
	void GetPrimalMovement(class UPrimalCharacterMovement** ReturnValue);
	void GetPrimalCharMovementMode(enum class EMovementMode* ReturnValue);
	class APrimalCharacter* GetPrimalCameraSettings(bool* ReturnValue);
	class APrimalCharacter* GetPrimalCameraParamsFromSettings(bool* ReturnValue);
	class FName GetPrimalCameraParams();
	class FName GetPrimalCameraDesiredPivotRotation(struct FRotator* ReturnValue);
	class FName GetPrimalCameraDesiredPivotOffset(struct FVector* ReturnValue);
	class FName GetPrimalCameraDesiredPivotLocation(struct FVector* ReturnValue);
	float GetPrimalCameraDesiredArmLength(float CurrentCameraArmLength, float* ReturnValue);
	TArray<struct FHitResult> GetPhysMatTypeFromHits(enum class EPhysicalSurface* ReturnValue);
	struct FHitResult GetPhysMatTypeFromHit(enum class EPhysicalSurface* ReturnValue);
	void GetPaintingTexture(class UPaintingTexture** ReturnValue);
	void GetPaintingMesh(class UMeshComponent** ReturnValue);
	class FName GetOverrideSocket(class FName* ReturnValue);
	class UAnimMontage* GetOverridenMontage(class UAnimMontage** ReturnValue);
	class UAnimSequence* GetOverridenAnimSequence(class UAnimSequence** ReturnValue);
	void GetMyBiomeZoneVolume(class ABiomeZoneVolume** ReturnValue);
	void GetMoveAnimRate(float* ReturnValue);
	void GetMaxHealth(float* ReturnValue);
	void GetLocalPlayerIndex(int32* ReturnValue);
	void GetLastRenderTimeWithShadow(double* ReturnValue);
	void GetLastRenderTimeNoShadow(double* ReturnValue);
	void GetLastCausedDamageTime(double* ReturnValue);
	void GetKillXP(float* ReturnValue);
	void GetInterpolatedRotation_NonFlattened(struct FRotator* ReturnValue);
	bool GetInputDirectionVector(struct FVector* ReturnValue);
	void GetImmersionDepth(float* ReturnValue);
	void GetHealthPercentage(float* ReturnValue);
	void GetHealth(float* ReturnValue);
	void GetGrappledBuffClassOverride(class UClass** ReturnValue);
	void GetFXBloodColor(struct FLinearColor* ReturnValue);
	bool GetFPVShadowMeshOffset(struct FVector* ReturnValue);
	bool GetFootPhysicalSurfaceType(bool bForce, enum class EPhysicalSurface* ReturnValue);
	void GetFloatingHUDLocation(struct FVector* ReturnValue);
	void GetFallAcceleration(float* ReturnValue);
	void GetEquippedItemDurabilityPercent(struct FItemNetID* ItemID, float* ReturnValue);
	class APrimalCharacter* GetDragWeight(float* ReturnValue);
	class APrimalCharacter* GetDraggedRotation(struct FRotator* ReturnValue);
	bool GetDraggedRelativeRotation(struct FRotator* ReturnValue);
	void GetDraggedRelativeLocation(struct FVector* ReturnValue);
	class APrimalCharacter* GetDraggedLocation(struct FVector* ReturnValue);
	class FString GetDetailedDescription(TArray<class FString>* ReturnValue);
	void GetDescriptiveName(class FString* ReturnValue);
	void GetDefaultMovementSpeed(float* ReturnValue);
	void GetDebugInfoString(class FString* ReturnValue);
	class AActor* GetDeathAnim(float* KillingDamage, class APawn** InstigatingPawn, class UAnimationAsset** ReturnValue);
	struct FVector GetCustomTooltip(class UClass** ReturnValue);
	class APrimalCharacter* GetCurrentPrimalCameraSettings(bool* ReturnValue);
	void GetCurrentCameraProfileId(class FName* ReturnValue);
	void GetCurrentCameraProfile(struct FPrimalCameraProfile* OutCameraProfile, bool* ReturnValue);
	void GetCurrentCameraModeIndex(int32* ReturnValue);
	float GetCharacterViewLocationAndDirection();
	void GetCharacterStatusComponent(class UPrimalCharacterStatusComponent** ReturnValue);
	TArray<class APrimalCharacter*> GetCharactersGrappledToMe();
	void GetCapsuleTopLocation(struct FVector* ReturnValue);
	void GetCapsuleBottomLocation(struct FVector* ReturnValue);
	class FName GetCameraProfileForId(struct FPrimalCameraProfile* OutCameraProfile, bool* ReturnValue);
	class FName GetBuffWithCustomTag(class APrimalBuff** ReturnValue);
	bool GetBuffStackCount(class UClass* BuffClass, int32* ReturnValue);
	TArray<class APrimalBuff*> GetBuffs();
	void GetBuff(class UClass* BuffClass, class APrimalBuff** ReturnValue);
	void GetBaseStatusValue(enum class EPrimalCharacterStatusValue StatusValueType, float* ReturnValue);
	void GetBaseDragWeight(float* ReturnValue);
	void GetBasedOrSeatingOnDino(class APrimalDinoCharacter** ReturnValue);
	bool GetBasedOnDinoAsActor(class AActor** ReturnValue);
	bool GetBasedOnDino(class APrimalDinoCharacter** ReturnValue);
	void GetBasedMovementComponent(class UPrimitiveComponent** ReturnValue);
	void GetAttachedExplosive(class APrimalStructureExplosive** ReturnValue);
	TArray<class APrimalBuff*> GetAllBuffs();
	bool GetAllAttachedChars(bool* ReturnValue);
	bool GetAimOffsets(struct FRotator* ReturnValue);
	bool GetAimedActor();
	class AActor* GenerateDeathAnim(float* KillingDamage, class APawn** InstigatingPawn);
	class APrimalCharacter* ForceUpdateCharacter();
	bool ForceUpdateAimedCharacters();
	void ForceTickPoseDelta();
	void ForceRefreshBones();
	float ForceMeshRelevant();
	void ForceAddUnderwaterCharacterStatusValues(bool* ReturnValue);
	void FadeOutLoadingMusic();
	bool ExecSetSleeping();
	bool ExecSetPawnSleeping();
	void EndForceSkelUpdate();
	void EndDragCharacter();
	void EnableTurnToFaceRotation(bool* ReturnValue);
	bool EnableIK();
	bool EnableBPTimerServer();
	bool EnableBPTimerNonDedicated();
	void EnableBodiesGravity();
	void EmitPoop();
	void EditorBeginPlay();
	void DoSetRagdollPhysics();
	bool DoFindGoodSpot();
	class APrimalBuff* DoCharacterDetachment();
	class APrimalDinoCharacter* DinoMountOnMe(bool* ReturnValue);
	struct FLinearColor DidTeleport(struct FVector* NewLoc, const struct FRotator& NewRot);
	void DetachFromOtherCharacter(bool EnableMovementAndCollision);
	void DeathHarvestingFadeOut();
	bool DeactivateBuffs();
	class FName CreateSnapshotComponent(class FName* Name, class UActorComponent** ReturnValue);
	void ConsumeProjectileImpact(class AShooterProjectile* TheProjectile, const struct FHitResult& HitResult, bool* ReturnValue);
	float ClientSyncAnimation();
	float ClientStopAnimation();
	struct FRotator_NetQuantize ClientRagdollUpdate();
	bool ClientPlayAnimation();
	struct FVector ClientOrderedMoveTo();
	class AActor* ClientOrderedAttackTarget();
	void ClientNotifyLevelUp();
	void ClientFailedPoop();
	void ClientEndRagdollUpdate();
	void ClientDidPoop();
	void ClearRidingDinoAsPassenger(bool* bFromDino);
	void ClearMovementTether();
	bool ClearMountedDino();
	void ClearControlInputVector();
	void ClearCarryingDino(bool* bFromDino, bool* bCancelAnyCarryBuffs);
	void ClearBasedCharacters();
	void CharacterIsCarriedAsPassenger(bool* ReturnValue);
	void CharacterBuffsPreventFirstPerson(bool* ReturnValue);
	class UPrimalItem* CaptureCharacterSnapshot();
	class APrimalCharacter* CanUseCameraSettings(bool* ReturnValue);
	class APrimalDinoCharacter* CanMountOnMe(bool* ReturnValue);
	bool CanDragCharacter(class APrimalCharacter** Character, bool* ReturnValue);
	class APrimalCharacter* CameraCheckIsRunning(bool* ReturnValue);
	class APrimalCharacter* CameraCheckIsMoving(bool* ReturnValue);
	class AShooterHUD* CallDrawHUD();
	class AShooterHUD* CallDrawFloatingHUD();
	void BuffsPreventInventoryAccess(bool* ReturnValue);
	void BPTriggerStasisEvent();
	void BPTimerServer();
	void BPTimerNonDedicated();
	void BPSuicide();
	class APrimalCharacter* BPSpawnAttackerDamageImpactFX();
	void BPSkipMovementOptimization(bool* ReturnValue);
	void BPShouldLimitRightDirection(bool* ReturnValue);
	void BPShouldLimitForwardDirection(bool* ReturnValue);
	class FName BPSetCharacterMeshesMaterialScalarParamValue(float Value);
	class UPrimalItem* BPRemovedAttachmentsForItem();
	void BPRemovedAsPassenger(class APrimalCharacter** Character);
	class AActor* BPRemoveCharacterSnapshot();
	void BPPreventStasis(bool* ReturnValue);
	class USoundBase* BPPreventNotifySound(bool* ReturnValue);
	void BPPreventInputType(enum class EPrimalCharacterInputType InputType, bool* ReturnValue);
	void BPPreventFirstPerson(bool* ReturnValue);
	void BPPreventFallDamage(const struct FHitResult& HitResult, float* FallDamageAmount, bool* ReturnValue);
	void BPPreSerializeSaveGame();
	void BPPostLoadedFromSaveGame();
	class AActor* BPPlayDying(float* KillingDamage, const struct FDamageEvent& DamageEvent, class APawn** InstigatingPawn);
	void BPOverrideUseItemSlot(int32* ItemSlot);
	void BPOverrideReleaseItemSlot(int32* ItemSlot);
	struct FPrimalCameraParams BPOverridePrimalCameraParams(bool* ReturnValue);
	float BPOverridePhysicsImpulses(class UPrimalCharacterMovement** PrimalCharacterMovement);
	void BPOverrideJumpZModifier(float* InJumpZModifier, float* ReturnValue);
	void BPOverrideInventoryAccessInput(bool* ReturnValue);
	class AActor* BPOverrideHurtAnim(float* DamageTaken, const struct FDamageEvent& DamageEvent, class APawn** PawnInstigator, bool* bIsLocalPath, bool* bIsPointDamage, struct FVector* PointDamageLocation, struct FVector* PointDamageHitNormal, class UAnimMontage** ReturnValue);
	void BPOverrideHeldItemSlot(int32* ItemSlot);
	void BPOverrideFPVViewLocation(class APrimalCharacter** ViewingCharacter, bool* ReturnValue);
	float BPOverrideFlyingVelocity(struct FVector* InitialVelocity, struct FVector* ReturnValue);
	float BPOverrideDamageCauserHitMarker(class AShooterPlayerController** DamageCauserController, bool* bHitFriendlyTarget, float* PreDamageHealth, const struct FDamageEvent& DamageEvent, bool* bIsPointDamage, struct FHitResult* PointDamageHitResult, struct FHitMarkerSettings* ReturnValue);
	void BPOverrideCurrentCameraProfileId(class FName* OutProfileId, bool* ReturnValue);
	void BPOverrideCurrentCameraProfile(struct FPrimalCameraProfile* OutCameraProfile, bool* ReturnValue);
	class USoundBase* BPOverrideCharacterSound(class USoundBase** ReturnValue);
	void BPOverrideCharacterParticle(class UParticleSystem** ParticleIn, class UParticleSystem** ReturnValue);
	float BPOverrideCharacterNewFallVelocity(struct FVector* InitialVelocity, struct FVector* ReturnValue);
	struct FPrimalCameraParams BPOverrideCameraPivotLocationInterpParams(struct FPrimalCameraPivotZInterpOverrides* PivotZInterpOverrides, struct FPrimalCameraInterpParams* LastInterpParamsX, struct FPrimalCameraInterpParams* LastInterpParamsY, struct FPrimalCameraInterpParams* LastInterpParamsZ, struct FPrimalCameraInterpParams* OutInterpParamsX, struct FPrimalCameraInterpParams* OutInterpParamsY, struct FPrimalCameraInterpParams* OutInterpParamsZ, bool* ReturnValue);
	void BPOverrideCameraDesiredPivotRotation(struct FRotator* CurrentCameraPivotRotation, struct FRotator* DesiredCameraPivotRotation, bool* ReturnValue);
	struct FPrimalCameraParams BPOverrideCameraDesiredPivotOffset(struct FVector* DesiredCameraOffset, bool* ReturnValue);
	void BPOverrideCameraDesiredPivotLocation(struct FVector* CurrentCameraPivotLocation, struct FVector* DesiredCameraPivotLocation, bool* ReturnValue);
	struct FPrimalCameraParams BPOverrideCameraArmLengthInterpParams(const struct FPrimalCameraInterpParams& OutInterpParams, bool* ReturnValue);
	struct FPrimalCameraParams BPOverrideCameraArmLength(float CurrentCameraArmLength, float DesiredCameraArmLength, bool* ReturnValue);
	void BPOnStaminaDrained();
	void BPOnMovementModeChangedNotify(enum class EMovementMode PrevMovementMode, uint8 PreviousCustomMode);
	void BPOnMassTeleportEvent(enum class EMassTeleportState EventState, class APrimalCharacter* TeleportInitiatedByChar);
	class AActor* BPOnLethalDamage(float* KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, bool bPreventDeath);
	void BPOnAttachmentReplication(bool* ReturnValue);
	bool BPOnAnimPlayedNotify(float* InPlayRate, bool bReplicate, bool bReplicateToOwner);
	void BPNotifyToggleHUD(bool bHUDHidden);
	void BPNotifyLevelUp(int32 ExtraCharacterLevel);
	bool BPNotifyInventoryItemChange();
	void BPNotifyDroppedItemPickedUp(class ADroppedItem* ItemPickedUp, class APrimalCharacter* PickedUpBy);
	void BPNotifyBumpedPawn(class APrimalCharacter* BumpedPawn);
	void BPNotifyBumpedByPawn(class APrimalCharacter* ByPawn);
	void BPNotifyBPNotifyIsDamageCauserOfAddedBuff(class APrimalBuff** Buff);
	class AShooterHUD* BPNewDoorInteractionDrawHUD(const struct FVector2D& DoorDescriptionLoc);
	void BPNetSetMovementMode(enum class EMovementMode* NewMovementMode);
	struct FVector BPNetSetCharacterMovementVelocity(bool bSetNewVelocity, bool bSetNewMovementMode, enum class EMovementMode* NewMovementMode);
	bool BPNetAddCharacterMovementImpulse(float ImpulseExponent, bool bSetNewMovementMode, enum class EMovementMode* NewMovementMode, bool* bOverrideMaxImpulseZ, bool bApplyToBigPawns);
	void BPModifyViewHitDir(class APrimalCharacter** ViewingCharacter, float InViewHitDir, float* ReturnValue);
	void BPModifyRightDirectionInput(const struct FVector& DirectionInput, struct FVector* ReturnValue);
	void BPModifyFOVInterpSpeed(float FOVInterpSpeedIn, float* ReturnValue);
	void BPModifyFOV(float FOVIn, float* ReturnValue);
	void BPModifyForwardDirectionInput(const struct FVector& DirectionInput, struct FVector* ReturnValue);
	void BPLocalUnpossessed();
	void BPLocalPossessedBy(class APlayerController* ByController);
	void BPLimitPlayerRotation(class APrimalCharacter** ViewingCharacter, const struct FRotator& InViewRotation, struct FRotator* ReturnValue);
	void BPIsConscious(bool* ReturnValue);
	struct FVector BPIsBlockedByShield(struct FHitResult* HitInfo, bool bBlockAllPointDamage, bool* ReturnValue);
	void BPIsBasedOnDynamicActor(bool* ReturnValue);
	void BPHasPlayerController(bool* ReturnValue);
	void BPHandleRightShoulderButton(bool* ReturnValue);
	void BPHandlePoop(bool* ReturnValue);
	void BPHandleLeftShoulderButton(bool* ReturnValue);
	void BPGrabDebugSnapshot(TArray<struct FBlueprintVisualLogEntry>* ReturnValue);
	enum class EPrimalCharacterStatusValue BPGetStatusNameString(class FString* ReturnValue);
	void BPGetOverrideCameraInterpSpeed(float DefaultTPVCameraSpeedInterpolationMultiplier, float DefaultTPVOffsetInterpSpeed, float* TPVCameraSpeedInterpolationMultiplier, float* TPVOffsetInterpSpeed);
	void BPGetIsBuried(bool* ReturnValue);
	void BPGetHUDOverrideBuffProgressBarPercent(float* ReturnValue);
	void BPGetHUDElements(class APlayerController* ForPC, TArray<struct FHUDElement>* OutElements);
	void BPGetGravityZScale(float* ReturnValue);
	void BPGetFPVViewLocation(class APrimalCharacter** ViewingCharacter, struct FVector* ReturnValue);
	void BPGetExtraMeleeDamageModifier(float* ReturnValue);
	void BPGetDebugInfoString(class FString* ReturnValue);
	void BPGetArmorDurabilityDecreaseMultiplier(float* ReturnValue);
	void BPGetApproachRadius(float* ReturnValue);
	void BPGetAddForwardVelocityOnJump(float* ReturnValue);
	void BPForceUseOldASECamera(bool* ReturnValue);
	void BPForceCameraStyle(class APrimalCharacter** ForViewTarget, enum class ECameraStyle* ReturnValue);
	void BPCheckJumpInput(bool* bUseCustomErrorMessage, class FString* ErrorMessageToDisplay);
	void BPCharacterUnsleeped();
	void BPCharacterSleeped();
	void BPCharacterDetach();
	class APrimalDinoCharacter* BPCanNotifyTeamAggroAI(bool* ReturnValue);
	void BPCanBeBaseForCharacter(class APawn* Pawn, bool* ReturnValue);
	void BPCanBaseOnCharacter(class APrimalCharacter** BaseCharacter, bool* ReturnValue);
	void BPCameraRotationFinal(class APrimalCharacter** ViewingCharacter, struct FRotator* InCurrentFinalRot, struct FRotator* ReturnValue);
	void BPCameraBaseOrientation(class APrimalCharacter** ViewingCharacter, struct FRotator* ReturnValue);
	int32 BPApplyCharacterSnapshot(class AActor* To, float* MaxExtent, bool* bCollisionOn);
	class UAnimNotifyState* BPAnimNotifyCustomState_End(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);
	class UAnimNotifyState* BPAnimNotifyCustomState_Begin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);
	void BPAdjustTorpidityDamage(float* DesiredTorpidityDamage, float* HealthDamageAmount, class UClass** DamageType, float* ReturnValue);
	class AActor* BPAdjustImpulseFromDamage(struct FVector* DesiredImpulse, float* DamageTaken, struct FDamageEvent* TheDamageEvent, class APawn** PawnInstigator, bool* bIsPointDamage, struct FHitResult* PointHitInfo, struct FVector* ReturnValue);
	class AActor* BPAdjustDamage(float* IncomingDamage, struct FDamageEvent* TheDamageEvent, bool* bIsPointDamage, struct FHitResult* PointHitInfo, float* ReturnValue);
	bool BPAdjustCharacterMovementImpulse(float* MassScaleImpulseExponent, bool* bOverrideMaxImpulseZ, struct FVector* ReturnValue);
	class UPrimalItem* BPAddedAttachmentsForItem();
	void BP_ShouldDisableCameraInterpolation(bool* ReturnValue);
	void BP_OverrideTerminalVelocity(float* ReturnValue);
	void BP_OverrideCameraTargetOriginLocation(struct FVector* OutOverrideOrigin, class FName* WithCameraStyle);
	void BP_OnZoomOut();
	void BP_OnZoomInOrbitCam();
	void BP_OnZoomIn();
	void BP_OnStartCarried(class APrimalDinoCharacter** ADino);
	void BP_OnSetRunning(bool* bNewIsRunning);
	void BP_OnSetDeath();
	class UStructurePaintingComponent* BP_OnPaintingComponentInitialized();
	void BP_OnJumpReleased();
	void BP_OnJumpPressed();
	void BP_OnEndCarried(bool* bFromDino, bool* bCancelAnyCarryBuffs);
	void BP_OnCameraStyleChangedNotify(class FName* NewCameraStyle, class FName* OldCameraStyle);
	void BP_ModifySavedMoveAcceleration_PreRep(struct FVector* ModifyClientAccel, bool* ReturnValue);
	void BP_ModifySavedMoveAcceleration_PostRep(struct FVector* ModifyServerAccel, bool* ReturnValue);
	void BP_ModifyInputAcceleration(struct FVector* ModifyInputAccel);
	void BP_IsCharacterHardAttached(bool* bIgnoreRiding, bool* bIgnoreCarried, bool* ReturnValue);
	void BP_GetMaxSpeedModifier(float* ReturnValue);
	void BP_ForceAllowAddBuff(class UClass* BuffClass, bool* ReturnValue);
	void BP_AnimationPreventsInput(bool* ReturnValue);
	class UAnimNotify* BlueprintAnimNotifyCustomEvent(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);
	void AttachToOtherCharacter(class APrimalCharacter* CharacterToAttachTo, class FName* InSocketName, bool EnableMovementAndCollision, enum class EAttachLocation AttachLocation);
	struct FVector AttachedToOtherCharacterUpdateWorldLocation();
	void ApplyCustomFallDamage(struct FVector* Location, const struct FVector& Velocity, float FallDamageThreshold);
	class UAnimMontage* AllowPlayMontage(bool* ReturnValue);
};

// 0x18B0 (0x33C0 - 0x1B10)
// Class ShooterGame.PrimalDinoCharacter
class APrimalDinoCharacter : public APrimalCharacter
{
public:
	uint8                                        Pad_3706[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector                               BaseDinoScale;                                     // 0x1B30(0x18)(BlueprintReadOnly, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AActor>                 ForcedMasterTarget;                                // 0x1B48(0x8)(ConstParm, BlueprintVisible, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MountCharacterSocketName;                          // 0x1B50(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalCharacter>       MountCharacter;                                    // 0x1B58(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3708[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               RidingAttackExtraVelocity;                         // 0x1B68(0x18)(Edit, ConstParm, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          StartChargeAnimation;                              // 0x1B80(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UAnimMontage*>                  AttackAnimations;                                  // 0x1B88(0x10)(Net, EditFixedSize, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	TArray<float>                                AttackAnimationWeights;                            // 0x1B98(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	TArray<float>                                AttackAnimationsTimeFromEndToConsiderFinished;     // 0x1BA8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bAttackStopsMovement : 1;                          // Mask: 0x1, PropSize: 0x10x1BB8(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bLocationBasedAttack : 1;                          // Mask: 0x2, PropSize: 0x10x1BB8(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bTamedWanderHarvestAllowUsableHarvestingAsWell : 1; // Mask: 0x4, PropSize: 0x10x1BB8(0x1)(EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPKilledSomethingEvent : 1;                    // Mask: 0x8, PropSize: 0x10x1BB8(0x1)(ConstParm, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDinoResetAffinityOnUnsleep : 1;            // Mask: 0x10, PropSize: 0x10x1BB8(0x1)(Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bKeepInventoryForWakingTame : 1;                   // Mask: 0x20, PropSize: 0x10x1BB8(0x1)(Edit, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_261 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHadLinkedSupplyCrate : 1;                         // Mask: 0x80, PropSize: 0x10x1BB8(0x1)(Edit, BlueprintVisible, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_262 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHiddenForLocalPassenger : 1;                      // Mask: 0x4, PropSize: 0x10x1BB9(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRunCheckCarriedTrace : 1;                         // Mask: 0x8, PropSize: 0x10x1BB9(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        CanElevate : 1;                                    // Mask: 0x10, PropSize: 0x10x1BB9(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_263 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bTamedWanderCorpseHarvesting : 1;                  // Mask: 0x1, PropSize: 0x10x1BBA(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyStructurePlacedNearby : 1;             // Mask: 0x2, PropSize: 0x10x1BBA(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanTargetCorpse : 1;                         // Mask: 0x4, PropSize: 0x10x1BBA(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPShouldForceFlee : 1;                         // Mask: 0x8, PropSize: 0x10x1BBA(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_264 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bForceWanderOverrideNPCZoneManager : 1;            // Mask: 0x20, PropSize: 0x10x1BBA(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeprecateDino : 1;                                // Mask: 0x40, PropSize: 0x10x1BBA(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceFoodItemAutoConsume : 1;                     // Mask: 0x80, PropSize: 0x10x1BBA(0x1)(Edit, BlueprintVisible, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlyerAllowFlyingWithExplosive : 1;                // Mask: 0x1, PropSize: 0x10x1BBB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceUseDediAttackTiming : 1;                     // Mask: 0x2, PropSize: 0x10x1BBB(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePreventExitingWater : 1;                     // Mask: 0x4, PropSize: 0x10x1BBB(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bWakingTameConsumeEntireStack : 1;                 // Mask: 0x8, PropSize: 0x10x1BBB(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_265 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        ColorizationIntensity;                             // 0x1BBC(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowCarryCharacterWithoutRider : 1;              // Mask: 0x1, PropSize: 0x10x1BC0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWildDinoPreventWeight : 1;                        // Mask: 0x2, PropSize: 0x10x1BC0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDebugMeleeAttacks : 1;                            // Mask: 0x4, PropSize: 0x10x1BC0(0x1)(BlueprintVisible, Net, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRetainCarriedCharacterOnDismount : 1;             // Mask: 0x8, PropSize: 0x10x1BC0(0x1)(ConstParm, BlueprintReadOnly, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnTamedProcessOrder : 1;                     // Mask: 0x10, PropSize: 0x10x1BC0(0x1)(BlueprintVisible, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OnTamedOrderReceived : 1;                   // Mask: 0x20, PropSize: 0x10x1BC0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowAttackWithCryoSickness : 1;                  // Mask: 0x40, PropSize: 0x10x1BC0(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanCryo : 1;                                 // Mask: 0x80, PropSize: 0x10x1BC0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWildPreventTeleporting : 1;                       // Mask: 0x1, PropSize: 0x10x1BC1(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPClampMaxHarvestHealth : 1;                   // Mask: 0x2, PropSize: 0x10x1BC1(0x1)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceUseAltAimSocketsForTurrets : 1;              // Mask: 0x4, PropSize: 0x10x1BC1(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPBecameNewBaby : 1;                           // Mask: 0x8, PropSize: 0x10x1BC1(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTryAlwaysApplyCryoSickness : 1;                   // Mask: 0x10, PropSize: 0x10x1BC1(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSetSimulatedInterpRollOverride : 1;          // Mask: 0x20, PropSize: 0x10x1BC1(0x1)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSetInitialAimOffsetTargets : 1;              // Mask: 0x40, PropSize: 0x10x1BC1(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bConsoleIgnoreSafeZonesForCrosshair : 1;           // Mask: 0x80, PropSize: 0x10x1BC1(0x1)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDrawCrosshairWhenHUDIsHidden : 1;            // Mask: 0x1, PropSize: 0x10x1BC2(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanLand : 1;                                 // Mask: 0x2, PropSize: 0x10x1BC2(0x1)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowCheckRefreshDefaultInventoryItems : 1;       // Mask: 0x4, PropSize: 0x10x1BC2(0x1)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsBigBossDinoWithHighPrioritySounds : 1;          // Mask: 0x8, PropSize: 0x10x1BC2(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_266 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_370A[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UMaterialInterface*>            FemaleMaterialOverrides;                           // 0x1BC8(0x10)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCheckCanSpawnFromLocation : 1;               // Mask: 0x1, PropSize: 0x10x1BD8(0x1)(OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_267 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_370C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PaintConsumptionMultiplier;                        // 0x1BDC(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ChargingBlockedStopTimeThreshold;                  // 0x1BE0(0x4)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_370D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          MeleeSwingSockets;                                 // 0x1BE8(0x10)(BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	int32                                        MeleeDamageAmount;                                 // 0x1BF8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        MeleeDamageImpulse;                                // 0x1BFC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        MeleeSwingRadius;                                  // 0x1C00(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_370E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDinoAttackInfo>               AttackInfos;                                       // 0x1C08(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        CurrentAttackIndex;                                // 0x1C18(0x1)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        LastAttackIndex;                                   // 0x1C19(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_370F[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                MeleeDamageType;                                   // 0x1C20(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	class UClass*                                StepActorDamageTypeOverride;                       // 0x1C28(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AttackOffset;                                      // 0x1C30(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        FleeHealthPercentage;                              // 0x1C34(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BreakFleeHealthPercentage;                         // 0x1C38(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3710[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                TamerString;                                       // 0x1C40(0x10)(ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class FString                                TamedName;                                         // 0x1C50(0x10)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHibernationZoneInfo>          HibernatedZoneVolumes;                             // 0x1C60(0x10)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             OverlayTooltipPadding;                             // 0x1C70(0x10)(Edit, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             OverlayTooltipScale;                               // 0x1C80(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                HUDOverlayToolTipWidget;                           // 0x1C90(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MyDinoEntry;                                       // 0x1C98(0x8)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               RiderFPVCameraOffset;                              // 0x1CA0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3711[0x38];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        FinalNPCLevelMultiplier;                           // 0x1CF0(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LandingTraceMaxDistance;                           // 0x1CF4(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FlyingWanderFixedDistanceAmount;                   // 0x1CF8(0x4)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FlyingWanderRandomDistanceAmount;                  // 0x1CFC(0x4)(Net, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AcceptableLandingRadius;                           // 0x1D00(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxLandingTime;                                    // 0x1D04(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GenderSpeedMultipliers[0x2];                       // 0x1D08(0x8)(EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ChargeSpeedMultiplier;                             // 0x1D10(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3712[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          ChargingAnim;                                      // 0x1D18(0x8)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ChargingStaminaPerSecondDrain;                     // 0x1D20(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ChargingStopDotTreshold;                           // 0x1D24(0x4)(BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3713[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AShooterCharacter>      Rider;                                             // 0x1D48(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AShooterCharacter>      PreviousRider;                                     // 0x1D50(0x8)(BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SaddleItemClass;                                   // 0x1D58(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                SaddleSlotNameOverride;                            // 0x1D60(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSaddlePassengerSeatDefinition> NoSaddlePassengerSeats;                            // 0x1D70(0x10)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalCharacter>       CarriedCharacter;                                  // 0x1D80(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3714[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          DinoWithPassengerAnim;                             // 0x1D90(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          DinoWithDinoPassengerAnim;                         // 0x1D98(0x8)(EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TWeakObjectPtr<class APrimalCharacter>> PassengerPerSeat;                                  // 0x1DA0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class APrimalCharacter*>              SavedPassengerPerSeat;                             // 0x1DB0(0x10)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3715[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       LastClientCameraRotationServerUpdate;              // 0x1DD0(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class USceneComponent*>               OverrideTargetComponents;                          // 0x1DD8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WhistleTraceOffset;                                // 0x1DE8(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3716[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        LastPlayedAttackAnimation;                         // 0x1DFC(0x4)(Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        AttackIndexOfPlayedAnimation;                      // 0x1E00(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3717[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDinoBaseLevelWeightEntry>     DinoBaseLevelWeightEntries;                        // 0x1E08(0x10)(Edit, ConstParm, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3718[0x78];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector                               RidingFirstPersonViewLocationOffset;               // 0x1E90(0x18)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsLanding : 1;                                    // Mask: 0x1, PropSize: 0x10x1EA8(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanCharge : 1;                                    // Mask: 0x2, PropSize: 0x10x1EA8(0x1)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCancelInterpolation : 1;                          // Mask: 0x4, PropSize: 0x10x1EA8(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsCharging : 1;                                   // Mask: 0x8, PropSize: 0x10x1EA8(0x1)(ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bChargeDamageStructures : 1;                       // Mask: 0x10, PropSize: 0x10x1EA8(0x1)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReplicatePitchWhileSwimming : 1;                  // Mask: 0x20, PropSize: 0x10x1EA8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsFlying : 1;                                     // Mask: 0x40, PropSize: 0x10x1EA8(0x1)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsWakingTame : 1;                                 // Mask: 0x80, PropSize: 0x10x1EA8(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRiding : 1;                                  // Mask: 0x1, PropSize: 0x10x1EA9(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAutoTame : 1;                                // Mask: 0x2, PropSize: 0x10x1EA9(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRiderJumpTogglesFlight : 1;                       // Mask: 0x4, PropSize: 0x10x1EA9(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasRider : 1;                                     // Mask: 0x8, PropSize: 0x10x1EA9(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowCarryFlyerDinos : 1;                         // Mask: 0x10, PropSize: 0x10x1EA9(0x1)(Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_268 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bFlyerForceNoPitch : 1;                            // Mask: 0x40, PropSize: 0x10x1EA9(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlyerForceLimitPitch : 1;                         // Mask: 0x80, PropSize: 0x10x1EA9(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventStasis : 1;                                // Mask: 0x1, PropSize: 0x10x1EAA(0x1)(ConstParm, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoTameable : 1;                                 // Mask: 0x2, PropSize: 0x10x1EAA(0x1)(ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysSetTamingTeamOnItemAdd : 1;                 // Mask: 0x4, PropSize: 0x10x1EAA(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_269 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bCheatForceTameRide : 1;                           // Mask: 0x10, PropSize: 0x10x1EAA(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsFemale : 1;                                     // Mask: 0x20, PropSize: 0x10x1EAA(0x1)(ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        bRiderUseDirectionalAttackIndex : 1;               // Mask: 0x40, PropSize: 0x10x1EAA(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanBeTamed : 1;                                   // Mask: 0x80, PropSize: 0x10x1EAA(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTargetingIgnoredByWildDinos : 1;                  // Mask: 0x1, PropSize: 0x10x1EAB(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTargetingIgnoreWildDinos : 1;                     // Mask: 0x2, PropSize: 0x10x1EAB(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanMountOnHumans : 1;                             // Mask: 0x4, PropSize: 0x10x1EAB(0x1)(Edit, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIKIgnoreSaddleStructures : 1;                     // Mask: 0x8, PropSize: 0x10x1EAB(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAttackTargetWhenLaunched : 1;                     // Mask: 0x10, PropSize: 0x10x1EAB(0x1)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanOpenLockedDoors : 1;                           // Mask: 0x20, PropSize: 0x10x1EAB(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseColorization : 1;                              // Mask: 0x40, PropSize: 0x10x1EAB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMeleeSwingDamageBlockedByStrutures : 1;           // Mask: 0x80, PropSize: 0x10x1EAB(0x1)(ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyChanceOfTwins;                                 // 0x1EAC(0x4)(ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowTargetingCorpses : 1;                        // Mask: 0x1, PropSize: 0x10x1EB0(0x1)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRiderDontRequireSaddle : 1;                       // Mask: 0x2, PropSize: 0x10x1EB0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowsFishingOnSaddle : 1;                        // Mask: 0x4, PropSize: 0x10x1EB0(0x1)(Edit, ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanBeOrdered : 1;                                 // Mask: 0x8, PropSize: 0x10x1EB0(0x1)(Edit, ConstParm, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverridePlatformStructureLimit : 1;               // Mask: 0x10, PropSize: 0x10x1EB0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMeleeAttackHarvetUsableComponents : 1;            // Mask: 0x20, PropSize: 0x10x1EB0(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUpdateCharsOnMeleeAttackHarvestUsable : 1;        // Mask: 0x40, PropSize: 0x10x1EB0(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPlatformSaddleIgnoreRotDotCheck : 1;              // Mask: 0x80, PropSize: 0x10x1EB0(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseInteprolatedVelocity : 1;                      // Mask: 0x1, PropSize: 0x10x1EB1(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsCarnivore : 1;                                  // Mask: 0x2, PropSize: 0x10x1EB1(0x1)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        bAllowRidingInWater : 1;                           // Mask: 0x4, PropSize: 0x10x1EB1(0x1)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesGender : 1;                                   // Mask: 0x8, PropSize: 0x10x1EB1(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bTargetEverything : 1;                             // Mask: 0x10, PropSize: 0x10x1EB1(0x1)(Edit, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTamedWanderHarvestNonUsableHarvesting : 1;        // Mask: 0x20, PropSize: 0x10x1EB1(0x1)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableTamedWandering : 1;                         // Mask: 0x40, PropSize: 0x10x1EB1(0x1)(Edit, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableTamedMating : 1;                            // Mask: 0x80, PropSize: 0x10x1EB1(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCollectVictimItems : 1;                           // Mask: 0x1, PropSize: 0x10x1EB2(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bServerInitializedDino : 1;                        // Mask: 0x2, PropSize: 0x10x1EB2(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        BitPad_26A : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHasMateBoost : 1;                                 // Mask: 0x8, PropSize: 0x10x1EB2(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_26B : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bTamingHasFood : 1;                                // Mask: 0x20, PropSize: 0x10x1EB2(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontWander : 1;                                   // Mask: 0x40, PropSize: 0x10x1EB2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAnimIsMoving : 1;                                 // Mask: 0x80, PropSize: 0x10x1EB2(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoStepDamage : 1;                                 // Mask: 0x1, PropSize: 0x10x1EB3(0x1)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventBasingWhenUntamed : 1;                     // Mask: 0x2, PropSize: 0x10x1EB3(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAlwaysAllowBasing : 1;                       // Mask: 0x4, PropSize: 0x10x1EB3(0x1)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bChargingRequiresWalking : 1;                      // Mask: 0x8, PropSize: 0x10x1EB3(0x1)(BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseRootLocSwimOffset : 1;                         // Mask: 0x10, PropSize: 0x10x1EB3(0x1)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_26C : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bDisplaySummonedNotification : 1;                  // Mask: 0x40, PropSize: 0x10x1EB3(0x1)(Edit, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisplayKilledNotification : 1;                    // Mask: 0x80, PropSize: 0x10x1EB3(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetAttackWeight : 1;                         // Mask: 0x1, PropSize: 0x10x1EB4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_26D : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_371B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BabyGestationSpeed;                                // 0x1EB8(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bServerForceUpdateDinoGameplayMeshNearPlayer : 1;  // Mask: 0x1, PropSize: 0x10x1EBC(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventAllRiderWeapons : 1;                       // Mask: 0x2, PropSize: 0x10x1EBC(0x1)(Edit, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventAllRiderWeaponsOnReequip : 1;              // Mask: 0x4, PropSize: 0x10x1EBC(0x1)(BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowDeathAutoGrab : 1;                           // Mask: 0x8, PropSize: 0x10x1EBC(0x1)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupportWakingTame : 1;                            // Mask: 0x10, PropSize: 0x10x1EBC(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowAutoUnstasisDestroy : 1;                     // Mask: 0x20, PropSize: 0x10x1EBC(0x1)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDebugBaby : 1;                                    // Mask: 0x40, PropSize: 0x10x1EBC(0x1)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysUpdateAimOffsetInterpolation : 1;           // Mask: 0x80, PropSize: 0x10x1EBC(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        WildAmbientHarvestingAnimationServerTickPose : 1;  // Mask: 0x1, PropSize: 0x10x1EBD(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventSleepingTame : 1;                          // Mask: 0x2, PropSize: 0x10x1EBD(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTamedWanderHarvest : 1;                           // Mask: 0x4, PropSize: 0x10x1EBD(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSimulatedNetLandCheckFloor : 1;                   // Mask: 0x8, PropSize: 0x10x1EBD(0x1)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRefreshedColorization : 1;                        // Mask: 0x10, PropSize: 0x10x1EBD(0x1)(BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_26E : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        BitPad_26F : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bFlyerPreventRiderAutoFly : 1;                     // Mask: 0x8, PropSize: 0x10x1EBE(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowFlyerLandedRider : 1;                        // Mask: 0x10, PropSize: 0x10x1EBE(0x1)(ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventFlyerFlyingRider : 1;                      // Mask: 0x20, PropSize: 0x10x1EBE(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventFlyerCapsuleExpansion : 1;                 // Mask: 0x40, PropSize: 0x10x1EBE(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIncludeCarryWeightOfBasedPawns : 1;               // Mask: 0x80, PropSize: 0x10x1EBE(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceRiderNetworkParent : 1;                      // Mask: 0x1, PropSize: 0x10x1EBF(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePerfectTame : 1;                             // Mask: 0x2, PropSize: 0x10x1EBF(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanHaveBaby : 1;                                  // Mask: 0x4, PropSize: 0x10x1EBF(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBabyGestation : 1;                             // Mask: 0x8, PropSize: 0x10x1EBF(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventUnalignedDinoBasing : 1;                   // Mask: 0x10, PropSize: 0x10x1EBF(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideLevelMusicIfTamed : 1;                    // Mask: 0x20, PropSize: 0x10x1EBF(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReachedMaxStructures : 1;                         // Mask: 0x40, PropSize: 0x10x1EBF(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_270 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        ExtraBabyGestationSpeedMultiplier;                 // 0x1EC0(0x4)(Edit, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupportsSaddleStructures : 1;                     // Mask: 0x1, PropSize: 0x10x1EC4(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBonesHidden : 1;                                  // Mask: 0x2, PropSize: 0x10x1EC4(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_271 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bCanBeRepaired : 1;                                // Mask: 0x8, PropSize: 0x10x1EC4(0x1)(ExportObject, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlyerDontAutoLandOnDismount : 1;                  // Mask: 0x10, PropSize: 0x10x1EC4(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsRepairing : 1;                                  // Mask: 0x20, PropSize: 0x10x1EC4(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        bIsBaby : 1;                                       // Mask: 0x40, PropSize: 0x10x1EC4(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_272 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bCanUnclaimTame : 1;                               // Mask: 0x1, PropSize: 0x10x1EC5(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowWildDinoEquipment : 1;                       // Mask: 0x2, PropSize: 0x10x1EC5(0x1)(ConstParm, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseTamedVisibleComponents : 1;                    // Mask: 0x4, PropSize: 0x10x1EC5(0x1)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowDemolish : 1;                                // Mask: 0x8, PropSize: 0x10x1EC5(0x1)(BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseGang : 1;                                      // Mask: 0x10, PropSize: 0x10x1EC5(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBlueprintDrawFloatingHUD : 1;                     // Mask: 0x20, PropSize: 0x10x1EC5(0x1)(Edit, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEggBoosted : 1;                                   // Mask: 0x40, PropSize: 0x10x1EC5(0x1)(ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPTamedTick : 1;                               // Mask: 0x80, PropSize: 0x10x1EC5(0x1)(Edit, ExportObject, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideWantsToRun : 1;                      // Mask: 0x1, PropSize: 0x10x1EC6(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPlayDying : 1;                               // Mask: 0x2, PropSize: 0x10x1EC6(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupportsPassengerSeats : 1;                       // Mask: 0x4, PropSize: 0x10x1EC6(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAddPassengerSeatMultiUseEntries : 1;              // Mask: 0x8, PropSize: 0x10x1EC6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSaddlePassengerSeatsWhenAvailable : 1;         // Mask: 0x10, PropSize: 0x10x1EC6(0x1)(Edit, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bScaleInsulationByMeleeDamage : 1;                 // Mask: 0x20, PropSize: 0x10x1EC6(0x1)(Edit, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInventoryOnlyAllowCraftingWhenWandering : 1;      // Mask: 0x40, PropSize: 0x10x1EC6(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseWildRandomScale : 1;                           // Mask: 0x80, PropSize: 0x10x1EC6(0x1)(Edit, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHeldJumpSlowFalling : 1;                          // Mask: 0x1, PropSize: 0x10x1EC7(0x1)(ConstParm, BlueprintVisible, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsHeldJumpSlowFalling : 1;                        // Mask: 0x2, PropSize: 0x10x1EC7(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_273 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bTriggerBPUnstasis : 1;                            // Mask: 0x8, PropSize: 0x10x1EC7(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWildProduceEggDynamically : 1;                    // Mask: 0x10, PropSize: 0x10x1EC7(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventWakingTameFeeding : 1;                     // Mask: 0x20, PropSize: 0x10x1EC7(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDisablingTaming : 1;                         // Mask: 0x40, PropSize: 0x10x1EC7(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_274 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        AutoFadeOutAfterTameTime;                          // 0x1EC8(0x4)(Edit, BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlyerAllowRidingInCaves : 1;                      // Mask: 0x1, PropSize: 0x10x1ECC(0x1)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bScaleExtraRunningSpeedModifier : 1;               // Mask: 0x2, PropSize: 0x10x1ECC(0x1)(Edit, ConstParm, BlueprintVisible, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideCrosshairAlpha : 1;                       // Mask: 0x4, PropSize: 0x10x1ECC(0x1)(ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideCrosshairColor : 1;                       // Mask: 0x8, PropSize: 0x10x1ECC(0x1)(Edit, BlueprintVisible, ExportObject, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetCrosshairLocation : 1;                    // Mask: 0x10, PropSize: 0x10x1ECC(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideCrosshairSpread : 1;                      // Mask: 0x20, PropSize: 0x10x1ECC(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCenterOffscreenFloatingHUDWidgets : 1;            // Mask: 0x40, PropSize: 0x10x1ECC(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClampOffscreenFloatingHUDWidgets : 1;             // Mask: 0x80, PropSize: 0x10x1ECC(0x1)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseFixedSpawnLevel : 1;                           // Mask: 0x1, PropSize: 0x10x1ECD(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        bTreatCrouchInputAsAttack : 1;                     // Mask: 0x2, PropSize: 0x10x1ECD(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetRiderUnboardLocation : 1;                 // Mask: 0x4, PropSize: 0x10x1ECD(0x1)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetRiderUnboardDirection : 1;                // Mask: 0x8, PropSize: 0x10x1ECD(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUniqueDino : 1;                                   // Mask: 0x10, PropSize: 0x10x1ECD(0x1)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bModifyBasedCamera : 1;                            // Mask: 0x20, PropSize: 0x10x1ECD(0x1)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnRefreshColorization : 1;                   // Mask: 0x40, PropSize: 0x10x1ECD(0x1)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideAncestorsButton : 1;                          // Mask: 0x80, PropSize: 0x10x1ECD(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OverrideDinoName : 1;                       // Mask: 0x1, PropSize: 0x10x1ECE(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDinoTooltipCustomProgressBar : 1;            // Mask: 0x2, PropSize: 0x10x1ECE(0x1)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDisplayTamedMessage : 1;                     // Mask: 0x4, PropSize: 0x10x1ECE(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideTamingDescriptionLabel : 1;          // Mask: 0x8, PropSize: 0x10x1ECE(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanMountOnCharacter : 1;                     // Mask: 0x10, PropSize: 0x10x1ECE(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsNursingDino : 1;                                // Mask: 0x20, PropSize: 0x10x1ECE(0x1)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsNursing : 1;                                    // Mask: 0x40, PropSize: 0x10x1ECE(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetRiderSocket : 1;                          // Mask: 0x80, PropSize: 0x10x1ECE(0x1)(Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPShowTamingPanel : 1;                         // Mask: 0x1, PropSize: 0x10x1ECF(0x1)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlyerPrioritizeAllyMountToCarry : 1;              // Mask: 0x2, PropSize: 0x10x1ECF(0x1)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideMutationLabels : 1;                  // Mask: 0x4, PropSize: 0x10x1ECF(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventMovementModeChangeForDinoPassengers : 1;   // Mask: 0x8, PropSize: 0x10x1ECF(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventRiderImmobilization : 1;                   // Mask: 0x10, PropSize: 0x10x1ECF(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_275 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	bool                                         HasAlreadySetGender;                               // 0x1ED0(0x1)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_371D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BasedCameraSpeedMultiplier;                        // 0x1ED4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastEggBoostedTime;                                // 0x1ED8(0x8)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WildPercentageChanceOfBaby;                        // 0x1EE0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WildBabyAgeWeight;                                 // 0x1EE4(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyGestationProgress;                             // 0x1EE8(0x4)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FlyerForceLimitPitchMin;                           // 0x1EEC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUntamedUseOverlapEvents;                          // 0x1EF0(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_371F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FlyerForceLimitPitchMax;                           // 0x1EF4(0x4)(Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3720[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BabyChanceOfTriplets;                              // 0x1F00(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyAge;                                           // 0x1F04(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	float                                        MaxPercentOfCapsulHeightAllowedForIK;              // 0x1F08(0x4)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SlopeBiasForMaxCapsulePercent;                     // 0x1F0C(0x4)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FlyingForceRotationRateModifier;                   // 0x1F10(0x4)(Edit, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3721[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          HideBoneNames;                                     // 0x1F18(0x10)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                HideBonesString;                                   // 0x1F28(0x10)(BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               WaterSurfaceExtraJumpVector;                       // 0x1F38(0x18)(Edit, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               FlyerTakeOffAdditionalVelocity;                    // 0x1F50(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OpenDoorDelay;                                     // 0x1F68(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedWanderHarvestInterval;                        // 0x1F6C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedWanderHarvestSearchRange;                     // 0x1F70(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedWanderHarvestCollectRadius;                   // 0x1F74(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               TamedWanderHarvestCollectOffset;                   // 0x1F78(0x18)(Edit, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RootLocSwimOffset;                                 // 0x1F90(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayAnimBelowHealthPercent;                        // 0x1F94(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LeavePlayAnimBelowHealthPercent;                   // 0x1F98(0x4)(Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlatformSaddleMaxStructureBuildDistance2D;         // 0x1F9C(0x4)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          PlayAnimBelowHealth;                               // 0x1FA0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            LowHealthExitSound;                                // 0x1FA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            LowHealthEnterSound;                               // 0x1FB0(0x8)(ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                LowHealthDinoSettings;                             // 0x1FB8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwimOffsetInterpSpeed;                             // 0x1FC0(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3723[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AIRangeMultiplier;                                 // 0x1FC8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        PreventColorizationRegions[0x6];                   // 0x1FCC(0x6)(BlueprintVisible, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        AllowPaintingColorRegions[0x6];                    // 0x1FD2(0x6)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ColorSetIndices[0x6];                              // 0x1FD8(0x6)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        Pad_3724[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  ColorSetNames[0x6];                                // 0x1FE0(0x30)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        ColorSetIntensityMultipliers[0x6];                 // 0x2010(0x18)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalBuff>            ColorOverrideBuff;                                 // 0x2028(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3727[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MeleeAttackStaminaCost;                            // 0x203C(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          WakingTameAnimation;                               // 0x2040(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AActor>                 Target;                                            // 0x2048(0x8)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	TWeakObjectPtr<class AActor>                 TamedFollowTarget;                                 // 0x2050(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	TWeakObjectPtr<class AActor>                 TamedLandTarget;                                   // 0x2058(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PercentChanceFemale;                               // 0x2060(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3728[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        DeathGiveItemClasses;                              // 0x2068(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                DeathGiveItemChanceToBeBlueprint;                  // 0x2078(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DeathGiveItemQualityMin;                           // 0x2088(0x4)(Edit, ExportObject, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DeathGiveItemQualityMax;                           // 0x208C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DeathGiveItemRange;                                // 0x2090(0x4)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3729[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DeathGiveAchievement;                              // 0x2098(0x10)(Edit, ConstParm, BlueprintVisible, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideAreaMusic;                                 // 0x20A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               UnboardLocationOffset;                             // 0x20B0(0x18)(ConstParm, Parm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_372A[0x88];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        RidingNetUpdateFequency;                           // 0x2150(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RiderMaxSpeedModifier;                             // 0x2154(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RiderExtraMaxSpeedModifier;                        // 0x2158(0x4)(Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RiderMaxRunSpeedModifier;                          // 0x215C(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RiderRotationRateModifier;                         // 0x2160(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwimmingRotationRateModifier;                      // 0x2164(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ChargingRotationRateModifier;                      // 0x2168(0x4)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_372C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          EnterFlightAnim;                                   // 0x2170(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ExitFlightAnim;                                    // 0x2178(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          SleepConsumeFoodAnim;                              // 0x2180(0x8)(Edit, ConstParm, ExportObject, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          WakingConsumeFoodAnim;                             // 0x2188(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          FallAsleepAnim;                                    // 0x2190(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          TamedUnsleepAnim;                                  // 0x2198(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          WildUnsleepAnim;                                   // 0x21A0(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          OpenDoorAnim;                                      // 0x21A8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ControlFacePitchInterpSpeed;                       // 0x21B0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedWalkableFloorZ;                               // 0x21B4(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentMovementAnimRate;                           // 0x21B8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MinPlayerLevelForWakingTame;                       // 0x21BC(0x4)(ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_372E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                TamedInventoryComponentTemplate;                   // 0x21C8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeightedObjectList                   DeathInventoryTemplates;                           // 0x21D0(0x20)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DeathInventoryChanceToUse;                         // 0x21F0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WakingTameFeedInterval;                            // 0x21F4(0x4)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3730[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DeathInventoryQualityPerLevelMultiplier;           // 0x2200(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RequiredTameAffinity;                              // 0x2204(0x4)(EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        RequiredTameAffinityPerBaseLevel;                  // 0x2208(0x4)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        TamedAITargetingRange;                             // 0x220C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMeleeSwingDamageBlockedByAllStationaryObjects : 1; // Mask: 0x1, PropSize: 0x10x220D(0x1)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPChargingModifyInputAcceleration : 1;         // Mask: 0x2, PropSize: 0x10x220D(0x1)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnRepIsCharging : 1;                         // Mask: 0x4, PropSize: 0x10x220D(0x1)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventOrderAllowed : 1;                     // Mask: 0x8, PropSize: 0x10x220D(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPassengerDinosUsePassengerAnim : 1;               // Mask: 0x10, PropSize: 0x10x220D(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesPassengerAnimOnDinos : 1;                     // Mask: 0x20, PropSize: 0x10x220D(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideRotationOnCarriedCharacter : 1;           // Mask: 0x40, PropSize: 0x10x220D(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAdvancedCarryRelease : 1;                         // Mask: 0x80, PropSize: 0x10x220D(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceCarriedPlayerToCheckForWalls : 1;            // Mask: 0x1, PropSize: 0x10x220E(0x1)(ExportObject, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClearRiderOnDinoImmobilized : 1;                  // Mask: 0x2, PropSize: 0x10x220E(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPIsBasedOnActor : 1;                          // Mask: 0x4, PropSize: 0x10x220E(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPModifyControlRotation : 1;                   // Mask: 0x8, PropSize: 0x10x220E(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnDinoFiredProjectile : 1;                   // Mask: 0x10, PropSize: 0x10x220E(0x1)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetRidingMultiUseEntries : 1;                // Mask: 0x20, PropSize: 0x10x220E(0x1)(Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_276 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3734[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  PassengerBoneNameOverride;                         // 0x2210(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentTameAffinity;                               // 0x2218(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TameIneffectivenessModifier;                       // 0x221C(0x4)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TameIneffectivenessByAffinity;                     // 0x2220(0x4)(ExportObject, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3735[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bUseBPIsValidUnStasisCaster;                       // 0x2230(0x1)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3736[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FPrimalSaddleStructure>        SaddleStructures;                                  // 0x2240(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxSaddleStructuresHeight;                         // 0x2250(0x4)(ConstParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CalculateStructureHeightFromSaddle;                // 0x2254(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CalculateStructureDistanceFromSaddle;              // 0x2255(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3737[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        SaddlePivotOffset;                                 // 0x2258(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxSaddleStructuresNum;                            // 0x225C(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DinoSettingsClass;                                 // 0x2260(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamingFoodConsumeInterval;                         // 0x2268(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DediForceAttackAnimTime;                           // 0x226C(0x4)(ConstParm, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DediForceStartAttackAfterAnimTime;                 // 0x2270(0x4)(BlueprintReadOnly, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WakingTameFoodIncreaseMultiplier;                  // 0x2274(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        TamingTeamID;                                      // 0x2278(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        OwningPlayerID;                                    // 0x227C(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class FString                                OwningPlayerName;                                  // 0x2280(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class FString                                TamedTimeStamp;                                    // 0x2290(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       TamingLastFoodConsumptionTime;                     // 0x22A0(0x8)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	double                                       LastTameConsumedFoodTime;                          // 0x22A8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint32                                       DinoID1;                                           // 0x22B0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint32                                       DinoID2;                                           // 0x22B4(0x4)(OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        Pad_3738[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        TamedAggressionLevel;                              // 0x22D0(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamingIneffectivenessModifierIncreaseByDamagePercent; // 0x22D4(0x4)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3739[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class APrimalStructureItemContainer_SupplyCrate> LinkedSupplyCrate;                                 // 0x22E0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UntamedPoopTimeMinInterval;                        // 0x22E8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UntamedPoopTimeMaxInterval;                        // 0x22EC(0x4)(Edit, ConstParm, ExportObject, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MeleeHarvestDamageMultiplier;                      // 0x22F0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AllowRidingMaxDistance;                            // 0x22F4(0x4)(BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UntamedPoopTimeCache;                              // 0x22F8(0x4)(Edit, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        Pad_373A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                BaseEggClass;                                      // 0x2300(0x8)(Edit, ExportObject, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        EggItemsToSpawn;                                   // 0x2308(0x10)(OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                EggWeightsToSpawn;                                 // 0x2318(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        FertilizedEggItemsToSpawn;                         // 0x2328(0x10)(ExportObject, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                FertilizedEggWeightsToSpawn;                       // 0x2338(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EggChanceToSpawnUnstasis;                          // 0x2348(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EggIntervalBetweenUnstasisChances;                 // 0x234C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EggRangeMaximumNumberFromSameDinoType;             // 0x2350(0x4)(ConstParm, BlueprintVisible, Net, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        EggMaximumNumberFromSameDinoType;                  // 0x2354(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EggRangeMaximumNumber;                             // 0x2358(0x4)(Edit, ExportObject, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        EggMaximumNumber;                                  // 0x235C(0x4)(Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EggSpawnSocketName;                                // 0x2360(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          EggLayingAnimation;                                // 0x2368(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UntamedWalkingSpeedModifier;                       // 0x2370(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedWalkingSpeedModifier;                         // 0x2374(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UntamedRunningSpeedModifier;                       // 0x2378(0x4)(EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedRunningSpeedModifier;                         // 0x237C(0x4)(ConstParm, BlueprintReadOnly, Net, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                RandomColorSetsMale;                               // 0x2380(0x8)(Edit, ConstParm, BlueprintVisible, Net, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                RandomColorSetsFemale;                             // 0x2388(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SpawnerColorSets;                                  // 0x2390(0x8)(ConstParm, BlueprintReadOnly, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         RiderAnimOverride;                                 // 0x2398(0x8)(ExportObject, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         TurningRightRiderAnimOverride;                     // 0x23A0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         TurningLeftRiderAnimOverride;                      // 0x23A8(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         LatchedRiderAnimOverride;                          // 0x23B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         RiderMoveAnimOverride;                             // 0x23B8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RidingAnimSpeedFactor;                             // 0x23C0(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_373B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          StartRidingAnimOverride;                           // 0x23C8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          StopRidingAnimOverride;                            // 0x23D0(0x8)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TargetingTeamNameOverride;                         // 0x23D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraTamedSpeedMultiplier;                         // 0x23E0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraUnTamedSpeedMultiplier;                       // 0x23E4(0x4)(Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastEggSpawnChanceTime;                            // 0x23E8(0x8)(BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class FName                                  OriginalNPCVolumeName;                             // 0x23F0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OutsideOriginalNPCVolumeStasisDestroyInterval;     // 0x23F8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StasisedDestroyInterval;                           // 0x23FC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedAllowNamingTime;                              // 0x2400(0x4)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MovementSpeedScalingRotationRatePower;             // 0x2404(0x4)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AttackNoStaminaTorpidityMultiplier;                // 0x2408(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DecayDestructionPeriod;                            // 0x240C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       TamedAtTime;                                       // 0x2410(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	double                                       LastInAllyRangeTime;                               // 0x2418(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       LastInAllyRangeSerialized;                         // 0x2420(0x8)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3742[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class APrimalStructure*>              LatchedOnStructures;                               // 0x2438(0x10)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimalDinoSettings*                   MyDinoSettingsCDO;                                 // 0x2448(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3743[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LocInterpolationSnapDistance;                      // 0x2454(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3744[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        HUDScaleMultiplier;                                // 0x2468(0x4)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HUDTextScaleMultiplier;                            // 0x246C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedCorpseLifespan;                               // 0x2470(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MateBoostDamageReceiveMultiplier;                  // 0x2474(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MateBoostDamageGiveMultiplier;                     // 0x2478(0x4)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MateBoostRange;                                    // 0x247C(0x4)(ConstParm, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DinoNameTag;                                       // 0x2480(0x8)(ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              AttackMyTargetForPlayerController;                 // 0x2488(0x8)(BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RidingAttackExtraVelocityDelay;                    // 0x2490(0x4)(Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StepDamageRadialDamageInterval;                    // 0x2494(0x4)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StepDamageRadialDamageExtraRadius;                 // 0x2498(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StepDamageRadialDamageAmountGeneral;               // 0x249C(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StepDamageRadialDamageAmountHarvestable;           // 0x24A0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3746[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                StepHarvestableDamageType;                         // 0x24B0(0x8)(ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StepDamageFootDamageInterval;                      // 0x24B8(0x4)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StepDamageFootDamageRadius;                        // 0x24BC(0x4)(Edit, ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StepDamageFootDamageAmount;                        // 0x24C0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3747[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          StepDamageFootDamageSockets;                       // 0x24C8(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DurationBeforeMovingStuckPawn;                     // 0x24D8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3748[0x24];                                    // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          StartledAnimationRightDefault;                     // 0x2500(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          StartledAnimationLeft;                             // 0x2508(0x8)(ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UAnimMontage*>                  StartledAnimations;                                // 0x2510(0x10)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          FlyingStartledAnimation;                           // 0x2520(0x8)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RandomPlayStartledAnimIntervalMin;                 // 0x2528(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RandomPlayStartledAnimIntervalMax;                 // 0x252C(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StartledAnimationCooldown;                         // 0x2530(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DefaultActivateAttackRangeOffset;                  // 0x2534(0x4)(ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CorpseTargetingMultiplier;                         // 0x2538(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3749[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        CorpseLifespanNonRelevant;                         // 0x2554(0x4)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPUnstasisConsumeFood : 1;                     // Mask: 0x1, PropSize: 0x10x2558(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnDinoStartled : 1;                          // Mask: 0x2, PropSize: 0x10x2558(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemoteDinoConsumesStaminaWhileRunning : 1;        // Mask: 0x4, PropSize: 0x10x2558(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIncrementedZoneManagerDirectLink : 1;             // Mask: 0x8, PropSize: 0x10x2558(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_277 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_374A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class ANPCZoneManager*                       DirectLinkNPCZoneManager;                          // 0x2560(0x8)(OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_374B[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinStaminaForRider;                                // 0x2570(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LoseStaminaWithRiderRate;                          // 0x2574(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FollowingRunDistance;                              // 0x2578(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDinoKillerTransferWeightPercent;                // 0x257C(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NPCZoneVolumeCountWeight;                          // 0x2580(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_374C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               FloatingHUDTextWorldOffset;                        // 0x2588(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_374D[0x78];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                RepairRequirementsItem;                            // 0x2618(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_374E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RepairCheckInterval;                               // 0x2624(0x4)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RepairPercentPerInterval;                          // 0x2628(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_374F[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               RiderCheckTraceOffset;                             // 0x2638(0x18)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               RiderEjectionImpulse;                              // 0x2650(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WakingTameAffinityDecreaseFoodPercentage;          // 0x2668(0x4)(ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WakingTameAllowFeedingFoodPercentage;              // 0x266C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WakingTameFoodAffinityMultiplier;                  // 0x2670(0x4)(ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CheckForWildAmbientHarvestingIntervalMin;          // 0x2674(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CheckForWildAmbientHarvestingIntervalMax;          // 0x2678(0x4)(ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3750[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          WildAmbientHarvestingAnimation;                    // 0x2680(0x8)(ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UAnimMontage*>                  WildAmbientHarvestingAnimations;                   // 0x2688(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        WildAmbientHarvestingComponentClasses;             // 0x2698(0x10)(Edit, ConstParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WildAmbientHarvestingRadius;                       // 0x26A8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3751[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        AbsoluteBaseLevel;                                 // 0x26B0(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3752[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FStatValuePair>                OverrideBaseStatLevelsOnSpawn;                     // 0x26B8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<enum class EPrimalCharacterStatusValue> OverrideStatPriorityOnSpawn;                       // 0x26C8(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TamedHarvestDamageType;                            // 0x26D8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FDinoSaddleStruct                     SaddleStruct;                                      // 0x26E0(0x20)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3753[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                StartChargingShake;                                // 0x2728(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                LightEndChargingShake;                             // 0x2730(0x8)(ConstParm, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                HardEndChargingShake;                              // 0x2738(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ChargeBumpDamage;                                  // 0x2740(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3754[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ChargeBumpDamageType;                              // 0x2748(0x8)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ChargeBumpImpulse;                                 // 0x2750(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinChargeInterval;                                 // 0x2754(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerMountedLaunchFowardSpeed;                    // 0x2758(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerMountedLaunchUpSpeed;                        // 0x275C(0x4)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AttackOnLaunchMaximumTargetDistance;               // 0x2760(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        KeepFlightRemainingTime;                           // 0x2764(0x4)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          MountCharacterAnimation;                           // 0x2768(0x8)(BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          UnmountCharacterAnimation;                         // 0x2770(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          EndChargingAnimation;                              // 0x2778(0x8)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FlyingRunSpeedModifier;                            // 0x2780(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ChargingAnimDelay;                                 // 0x2784(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RiderSocketName;                                   // 0x2788(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ChargingActivationRequiresStamina;                 // 0x2790(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ChargingActivationConsumesStamina;                 // 0x2794(0x4)(ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FlyerHardBreakingOverride;                         // 0x2798(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyScale;                                         // 0x279C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabySpeedMultiplier;                               // 0x27A0(0x4)(Edit, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyPitchMultiplier;                               // 0x27A4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyVolumeMultiplier;                              // 0x27A8(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AActor>                 WanderAroundActor;                                 // 0x27AC(0x8)(Edit, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WanderAroundActorMaxDistance;                      // 0x27B4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3755[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class APrimalStructure*>              SaddledStructures;                                 // 0x27C8(0x10)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             BuffGivenToBasedCharacters;                        // 0x27D8(0x30)(ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3756[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastUpdatedBabyAgeAtTime;                          // 0x2810(0x8)(Edit, ConstParm, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	double                                       LastUpdatedGestationAtTime;                        // 0x2818(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastUpdatedMatingAtTime;                           // 0x2820(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        BabyAgeSpeed;                                      // 0x2828(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraBabyAgeSpeedMultiplier;                       // 0x282C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FemaleMatingRangeAddition;                         // 0x2830(0x4)(BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FemaleMatingTime;                                  // 0x2834(0x4)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       NextAllowedMatingTime;                             // 0x2838(0x8)(BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MatingProgress;                                    // 0x2840(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3758[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastMatingNotificationTime;                        // 0x2848(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class APrimalDinoCharacter*                  MatingWithDino;                                    // 0x2850(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          MatingAnimationMale;                               // 0x2858(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_375C[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        GestationEggNumberOfLevelUpPointsApplied[0xC];     // 0x2870(0xC)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        GestationEggNumberOfMutationsApplied[0xC];         // 0x287C(0xC)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GestationEggTamedIneffectivenessModifier;          // 0x2888(0x4)(Edit, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        GestationEggColorSetIndices[0x6];                  // 0x288C(0x6)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_375D[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        NewFemaleMinTimeBetweenMating;                     // 0x2894(0x4)(ConstParm, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NewFemaleMaxTimeBetweenMating;                     // 0x2898(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_375E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class APrimalBuff>>     DefaultTamedBuffs;                                 // 0x28A0(0x10)(ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3760[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        HyperThermiaInsulation;                            // 0x28E0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HypoThermiaInsulation;                             // 0x28E4(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        InsulationRange;                                   // 0x28E8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GangOverlapRange;                                  // 0x28EC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GangDamageResistance;                              // 0x28F0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GangDamage;                                        // 0x28F4(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxGangCount;                                      // 0x28F8(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        GangCount;                                         // 0x28FC(0x4)(Edit, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3761[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        WildRandomScale;                                   // 0x2928(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HeldJumpSlowFallingGravityZScale;                  // 0x292C(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          SlowFallingAnim;                                   // 0x2930(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SlowFallingStaminaCostPerSecond;                   // 0x2938(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NoRiderRotationModifier;                           // 0x293C(0x4)(Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RiderFPVCameraUseSocketName;                       // 0x2940(0x8)(Edit, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RiderLatchedFPVCameraUseSocketName;                // 0x2948(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PassengerFPVCameraRootSocket;                      // 0x2950(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          FPVRiderBoneNamesToHide;                           // 0x2958(0x10)(Edit, ConstParm, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraRunningSpeedModifier;                         // 0x2968(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ScaleExtraRunningSpeedModifierMin;                 // 0x296C(0x4)(Edit, ConstParm, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ScaleExtraRunningSpeedModifierMax;                 // 0x2970(0x4)(Edit, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ScaleExtraRunningSpeedModifierSpeed;               // 0x2974(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LastHigherScaleExtraRunningSpeedValue;             // 0x2978(0x4)(ConstParm, ExportObject, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3763[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastHigherScaleExtraRunningSpeedTime;              // 0x2980(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSimulateRootMotion : 1;                           // Mask: 0x1, PropSize: 0x10x2988(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideStencilAllianceForTarget : 1;        // Mask: 0x2, PropSize: 0x10x2988(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsScout : 1;                                      // Mask: 0x4, PropSize: 0x10x2988(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableHighQualityAIVolumeLedgeChecking : 1;      // Mask: 0x8, PropSize: 0x10x2988(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoHighQualityLedgeChecking : 1;                   // Mask: 0x10, PropSize: 0x10x2988(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_278 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3764[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RiderMovementSpeedScalingRotationRatePowerMultiplier; // 0x298C(0x4)(BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HighQualityLedgeDetectionExtraTraceDistance;       // 0x2990(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyDoStepDamageWhenRunning : 1;                  // Mask: 0x1, PropSize: 0x10x2994(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_279 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bPreventPlatformSaddleMultiFloors : 1;             // Mask: 0x4, PropSize: 0x10x2994(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventMountedDinoMeshHiding : 1;                 // Mask: 0x8, PropSize: 0x10x2994(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsePlayerMountedCarryingDinoAnimation : 1;        // Mask: 0x10, PropSize: 0x10x2994(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventRotationRateModifier : 1;                  // Mask: 0x20, PropSize: 0x10x2994(0x1)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bStepDamageFoliageOnly : 1;                        // Mask: 0x40, PropSize: 0x10x2994(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventUntamedRun : 1;                            // Mask: 0x80, PropSize: 0x10x2994(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowTogglingPublicSeating : 1;                   // Mask: 0x1, PropSize: 0x10x2995(0x1)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowPublicSeating : 1;                           // Mask: 0x2, PropSize: 0x10x2995(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowWaterSurfaceExtraJump : 1;                   // Mask: 0x4, PropSize: 0x10x2995(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseVelocityForRequestedMoveIfStuck : 1;           // Mask: 0x8, PropSize: 0x10x2995(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDoAttack : 1;                                // Mask: 0x10, PropSize: 0x10x2995(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bStepDamageNonFoliageWithoutRunning : 1;           // Mask: 0x20, PropSize: 0x10x2995(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bStepDamageAllTargetables : 1;                     // Mask: 0x40, PropSize: 0x10x2995(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDamageNonFoliageFeetSocketsOnly : 1;              // Mask: 0x80, PropSize: 0x10x2995(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRiderDontBeBlockedByPawnMesh : 1;                 // Mask: 0x1, PropSize: 0x10x2996(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseExtendedUnstasisCheck : 1;                     // Mask: 0x2, PropSize: 0x10x2996(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_27A : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAllowDinoAutoConsumeInventoryFood : 1;            // Mask: 0x8, PropSize: 0x10x2996(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceNoCharacterStatusComponentTick : 1;          // Mask: 0x10, PropSize: 0x10x2996(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsRaidDino : 1;                                   // Mask: 0x20, PropSize: 0x10x2996(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWildIgnoredByAutoTurrets : 1;                     // Mask: 0x40, PropSize: 0x10x2996(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWildAllowTargetingNeutralStructures : 1;          // Mask: 0x80, PropSize: 0x10x2996(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoStepDamageTamedOnly : 1;                        // Mask: 0x1, PropSize: 0x10x2997(0x1)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bStepDamageNonFoliageTamedOnly : 1;                // Mask: 0x2, PropSize: 0x10x2997(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_27B : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bForceWildDeathInventoryDeposit : 1;               // Mask: 0x8, PropSize: 0x10x2997(0x1)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsCarryingCharacter : 1;                          // Mask: 0x10, PropSize: 0x10x2997(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsCarryingPassenger : 1;                          // Mask: 0x20, PropSize: 0x10x2997(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanTakePassenger : 1;                        // Mask: 0x40, PropSize: 0x10x2997(0x1)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForwardPlatformSaddleStructureDamageToDino : 1;   // Mask: 0x80, PropSize: 0x10x2997(0x1)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ForwardPlatformSaddleStructureDamageToDinoMultiplier; // 0x2998(0x4)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ForwardPlatformSaddleStructurePointDamageToBone;   // 0x299C(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3766[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        LoadDestroyWildDinosUnderVersion;                  // 0x29A8(0x4)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SaveDestroyWildDinosUnderVersion;                  // 0x29AC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AllowWaterSurfaceExtraJumpStaminaCost;             // 0x29B0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3767[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            PlayKillLocalSound;                                // 0x29B8(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3768[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        TribeGroupPetOrderingRank;                         // 0x29E0(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        TribeGroupPetRidingRank;                           // 0x29E1(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        FollowStoppingDistance;                            // 0x29E2(0x1)(Edit, ConstParm, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3769[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ImprinterName;                                     // 0x29E8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	class FString                                ImprinterPlayerUniqueNetId;                        // 0x29F8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyMinCuddleInterval;                             // 0x2A08(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyMaxCuddleInterval;                             // 0x2A0C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyCuddleGracePeriod;                             // 0x2A10(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyCuddleLoseImpringQualityPerSecond;             // 0x2A14(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyCuddleWalkDistance;                            // 0x2A18(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_376A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               BabyCuddleWalkStartingLocation;                    // 0x2A20(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       BabyNextCuddleTime;                                // 0x2A38(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	enum class EBabyCuddleType                   BabyCuddleType;                                    // 0x2A40(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_376B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                BabyCuddleFood;                                    // 0x2A48(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          BabyCuddledAnimation;                              // 0x2A50(0x8)(EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        MyBabyCuddleFoodTypes;                             // 0x2A58(0x10)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RiderMaxImprintingQualityDamageReduction;          // 0x2A68(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RiderMaxImprintingQualityDamageMultiplier;         // 0x2A6C(0x4)(Edit, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyImprintingQualityTotalMaturationTime;          // 0x2A70(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WakingTameMaxDistance;                             // 0x2A74(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeBetweenTamedWakingEatAnimations;               // 0x2A78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_376D[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_27C : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bDontPlayAttackingMusic : 1;                       // Mask: 0x2, PropSize: 0x10x2A88(0x1)(ExportObject, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceIgnoreRagdollHarvesting : 1;                 // Mask: 0x4, PropSize: 0x10x2A88(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPModifyAimOffsetTargetLocation : 1;              // Mask: 0x8, PropSize: 0x10x2A88(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPModifyAimOffsetNoTarget : 1;                    // Mask: 0x10, PropSize: 0x10x2A88(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsVehicle : 1;                                    // Mask: 0x20, PropSize: 0x10x2A88(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        bDisallowPostNetReplication : 1;                   // Mask: 0x40, PropSize: 0x10x2A88(0x1)(ConstParm, ExportObject, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTakingOff : 1;                                    // Mask: 0x80, PropSize: 0x10x2A88(0x1)(BlueprintVisible, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventMating : 1;                                // Mask: 0x1, PropSize: 0x10x2A89(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAttackStopsRotation : 1;                          // Mask: 0x2, PropSize: 0x10x2A89(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bFlyerDinoAllowBackwardsFlight : 1;                // Mask: 0x4, PropSize: 0x10x2A89(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlyerDinoAllowStrafing : 1;                       // Mask: 0x8, PropSize: 0x10x2A89(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreTargetingLiveUnriddenDinos : 1;             // Mask: 0x10, PropSize: 0x10x2A89(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSleepedForceCreateInventory : 1;                  // Mask: 0x20, PropSize: 0x10x2A89(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLocalForceNearbySkelMeshUpdate : 1;               // Mask: 0x40, PropSize: 0x10x2A89(0x1)(Edit, BlueprintVisible, ExportObject, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFlyerDisableEnemyTargetingMaxDeltaZ : 1;          // Mask: 0x80, PropSize: 0x10x2A89(0x1)(ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsBossDino : 1;                                   // Mask: 0x1, PropSize: 0x10x2A8A(0x1)(Edit, ConstParm, BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTamedAIAllowSpecialAttacks : 1;                   // Mask: 0x2, PropSize: 0x10x2A8A(0x1)(BlueprintVisible, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTamedAIToggleSpecialAttacks : 1;                  // Mask: 0x4, PropSize: 0x10x2A8A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_27D : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bRepeatPrimaryAttack : 1;                          // Mask: 0x10, PropSize: 0x10x2A8A(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventUploading : 1;                             // Mask: 0x20, PropSize: 0x10x2A8A(0x1)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventHibernation : 1;                           // Mask: 0x40, PropSize: 0x10x2A8A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRiderMovementLocked : 1;                          // Mask: 0x80, PropSize: 0x10x2A8A(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_27E : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bNeutered : 1;                                     // Mask: 0x2, PropSize: 0x10x2A8B(0x1)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreAllWhistles : 1;                            // Mask: 0x4, PropSize: 0x10x2A8B(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDoHarvestAttack : 1;                         // Mask: 0x8, PropSize: 0x10x2A8B(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPModifyHarvestingQuantity : 1;                // Mask: 0x10, PropSize: 0x10x2A8B(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPModifyHarvestingWeightsArray : 1;            // Mask: 0x20, PropSize: 0x10x2A8B(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_27F : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        StepDamageFootDamageRunningMultiplier;             // 0x2A8C(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPModifyHarvestDamage : 1;                     // Mask: 0x1, PropSize: 0x10x2A90(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideFloatingHUD : 1;                              // Mask: 0x2, PropSize: 0x10x2A90(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_280 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3770[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxRangeForWeaponTriggeredTooltip;                 // 0x2A94(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableHarvesting : 1;                            // Mask: 0x1, PropSize: 0x10x2A98(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDinoPostBeginPlay : 1;                       // Mask: 0x2, PropSize: 0x10x2A98(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_281 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bFlyerDontGainImpulseOnSubmerged : 1;              // Mask: 0x8, PropSize: 0x10x2A98(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanAutodrag : 1;                             // Mask: 0x10, PropSize: 0x10x2A98(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanDragCharacter : 1;                        // Mask: 0x20, PropSize: 0x10x2A98(0x1)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowDraggingWhileFalling : 1;                    // Mask: 0x40, PropSize: 0x10x2A98(0x1)(Edit, ConstParm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSingleplayerFreezePhysicsWhenNoTarget : 1;        // Mask: 0x80, PropSize: 0x10x2A98(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDinoLevelOnDecriptiveName : 1;             // Mask: 0x1, PropSize: 0x10x2A99(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_282 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsCloneDino : 1;                                  // Mask: 0x4, PropSize: 0x10x2A99(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAdvancedAnimLerp : 1;                          // Mask: 0x8, PropSize: 0x10x2A99(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventWanderingUnderWater : 1;                   // Mask: 0x10, PropSize: 0x10x2A99(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWildAllowFollowTamedTarget : 1;                   // Mask: 0x20, PropSize: 0x10x2A99(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowDamageSameTeamAndClass : 1;                  // Mask: 0x40, PropSize: 0x10x2A99(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowsTurretMode : 1;                             // Mask: 0x80, PropSize: 0x10x2A99(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRidingInTurretMode : 1;                      // Mask: 0x1, PropSize: 0x10x2A9A(0x1)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsInTurretMode : 1;                               // Mask: 0x2, PropSize: 0x10x2A9A(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPShouldCancelDoAttack : 1;                    // Mask: 0x4, PropSize: 0x10x2A9A(0x1)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPModifyDesiredRotation : 1;                   // Mask: 0x8, PropSize: 0x10x2A9A(0x1)(Edit, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseLocalSpaceDesiredRotationWithRider : 1;        // Mask: 0x10, PropSize: 0x10x2A9A(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDesiredRotationIsLocalSpace : 1;             // Mask: 0x20, PropSize: 0x10x2A9A(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_283 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPOverrideCameraViewTarget : 1;                // Mask: 0x80, PropSize: 0x10x2A9A(0x1)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsRobot : 1;                                      // Mask: 0x1, PropSize: 0x10x2A9B(0x1)(ConstParm, BlueprintVisible, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_284 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        StepRadialDamageOffset;                            // 0x2A9C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_CustomModifier_RotationRate : 1;            // Mask: 0x1, PropSize: 0x10x2AA0(0x1)(ExportObject, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_CustomModifier_MaxSpeed : 1;                // Mask: 0x2, PropSize: 0x10x2AA0(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OnStartLandingNotify : 1;                   // Mask: 0x4, PropSize: 0x10x2AA0(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_285 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseAttackForceWalkDistanceMultiplier : 1;         // Mask: 0x10, PropSize: 0x10x2AA0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePerFrameTicking : 1;                         // Mask: 0x20, PropSize: 0x10x2AA0(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHadStaticBase : 1;                                // Mask: 0x40, PropSize: 0x10x2AA0(0x1)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        bNoKillXP : 1;                                     // Mask: 0x80, PropSize: 0x10x2AA0(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreAllyLook : 1;                               // Mask: 0x1, PropSize: 0x10x2AA1(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBabyInitiallyUnclaimed : 1;                       // Mask: 0x2, PropSize: 0x10x2AA1(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPForceTurretFastTargeting : 1;                // Mask: 0x4, PropSize: 0x10x2AA1(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_286 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bSuppressWakingTameMessage : 1;                    // Mask: 0x10, PropSize: 0x10x2AA1(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventFlyerLanding : 1;                          // Mask: 0x20, PropSize: 0x10x2AA1(0x1)(BlueprintVisible, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_287 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bDisableCollisionWithDinosWhenFlying : 1;          // Mask: 0x1, PropSize: 0x10x2AA2(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowTrapping : 1;                                // Mask: 0x2, PropSize: 0x10x2AA2(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventWildTrapping : 1;                          // Mask: 0x4, PropSize: 0x10x2AA2(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsTrapTamed : 1;                                  // Mask: 0x8, PropSize: 0x10x2AA2(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreDestroyOnRapidDeath : 1;                    // Mask: 0x10, PropSize: 0x10x2AA2(0x1)(Edit, ExportObject, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventFallingBumpCheck : 1;                      // Mask: 0x20, PropSize: 0x10x2AA2(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDestroyingDino : 1;                             // Mask: 0x40, PropSize: 0x10x2AA2(0x1)(ConstParm, BlueprintReadOnly, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheckBPAllowClaiming : 1;                         // Mask: 0x80, PropSize: 0x10x2AA2(0x1)(ConstParm, BlueprintVisible, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBlueprintExtraBabyScale : 1;                   // Mask: 0x1, PropSize: 0x10x2AA3(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventNeuter : 1;                                // Mask: 0x2, PropSize: 0x10x2AA3(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetDragSocketName : 1;                       // Mask: 0x4, PropSize: 0x10x2AA3(0x1)(ConstParm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetDragSocketDinoName : 1;                   // Mask: 0x8, PropSize: 0x10x2AA3(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetLookOffsetSocketName : 1;                 // Mask: 0x10, PropSize: 0x10x2AA3(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTargetEverythingIncludingSameTeamInPVE : 1;       // Mask: 0x20, PropSize: 0x10x2AA3(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_288 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        ForcePawnBigPushingForTime;                        // 0x2AA4(0x4)(EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceUsePhysicalFootSurfaceTrace : 1;             // Mask: 0x1, PropSize: 0x10x2AA8(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OnPostNetReplication : 1;                   // Mask: 0x2, PropSize: 0x10x2AA8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPassiveFlee : 1;                                  // Mask: 0x4, PropSize: 0x10x2AA8(0x1)(ExportObject, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_289 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bOnlyTargetConscious : 1;                          // Mask: 0x10, PropSize: 0x10x2AA8(0x1)(Edit, BlueprintVisible, ExportObject, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPManagedFPVViewLocationNoRider : 1;              // Mask: 0x20, PropSize: 0x10x2AA8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideSaddleInFPV : 1;                              // Mask: 0x40, PropSize: 0x10x2AA8(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventCloning : 1;                               // Mask: 0x80, PropSize: 0x10x2AA8(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventStasisOnDedi : 1;                          // Mask: 0x1, PropSize: 0x10x2AA9(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysCheckForFloor : 1;                          // Mask: 0x2, PropSize: 0x10x2AA9(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysCheckForFalling : 1;                        // Mask: 0x4, PropSize: 0x10x2AA9(0x1)(ExportObject, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowCarryWaterDinos : 1;                    // Mask: 0x8, PropSize: 0x10x2AA9(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_AllowWalkableSlopeOverride : 1;             // Mask: 0x10, PropSize: 0x10x2AA9(0x1)(ExportObject, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_CanFly : 1;                                 // Mask: 0x20, PropSize: 0x10x2AA9(0x1)(Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OverrideBasedCharactersCameraInterpSpeed : 1; // Mask: 0x40, PropSize: 0x10x2AA9(0x1)(Edit, ConstParm, BlueprintVisible, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideFloatingHUDLocation : 1;             // Mask: 0x80, PropSize: 0x10x2AA9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInterceptPlayerEmotes : 1;                        // Mask: 0x1, PropSize: 0x10x2AAA(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_ShouldPreventBasedCharactersCameraInterpolation : 1; // Mask: 0x2, PropSize: 0x10x2AAA(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRidingIsSeperateUnstasisCaster : 1;               // Mask: 0x4, PropSize: 0x10x2AAA(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsOceanManagerDino : 1;                           // Mask: 0x8, PropSize: 0x10x2AAA(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsSaveProfilingDino : 1;                          // Mask: 0x10, PropSize: 0x10x2AAA(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_28A : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3775[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        WanderRadiusMultiplier;                            // 0x2AAC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        DisableCameraShakes : 1;                           // Mask: 0x1, PropSize: 0x10x2AB0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OverrideCarriedCharacterTransform : 1;      // Mask: 0x2, PropSize: 0x10x2AB0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OnBasedPawnNotifies : 1;                    // Mask: 0x4, PropSize: 0x10x2AB0(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesWaterWalking : 1;                             // Mask: 0x8, PropSize: 0x10x2AB0(0x1)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsMek : 1;                                        // Mask: 0x10, PropSize: 0x10x2AB0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsEnforcer : 1;                                   // Mask: 0x20, PropSize: 0x10x2AB0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsExtinctionTitan : 1;                            // Mask: 0x40, PropSize: 0x10x2AB0(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasInvisiableSaddle : 1;                          // Mask: 0x80, PropSize: 0x10x2AB0(0x1)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseWildDinoMapMultipliers : 1;                    // Mask: 0x1, PropSize: 0x10x2AB1(0x1)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreFlierRidingRestrictions : 1;                // Mask: 0x2, PropSize: 0x10x2AB1(0x1)(BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRotatingUpdatesDinoIK : 1;                        // Mask: 0x4, PropSize: 0x10x2AB1(0x1)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OverrideRiderCameraCollisionSweep : 1;      // Mask: 0x8, PropSize: 0x10x2AB1(0x1)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDrawHealthBar : 1;                                // Mask: 0x10, PropSize: 0x10x2AB1(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_28B : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3778[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        HealthBarMaxDrawDistance;                          // 0x2AB4(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseShoulderMountedLaunch : 1;                     // Mask: 0x1, PropSize: 0x10x2AB8(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsePreciseLaunching : 1;                          // Mask: 0x2, PropSize: 0x10x2AB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_28C : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAllowInvalidTameVersion : 1;                      // Mask: 0x10, PropSize: 0x10x2AB8(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowPvECarry : 1;                           // Mask: 0x20, PropSize: 0x10x2AB8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUnderwaterMating : 1;                             // Mask: 0x40, PropSize: 0x10x2AB8(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBabyPreventExitingWater : 1;                      // Mask: 0x80, PropSize: 0x10x2AB8(0x1)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCheckSeven : 1;                              // Mask: 0x1, PropSize: 0x10x2AB9(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventExportDino : 1;                            // Mask: 0x2, PropSize: 0x10x2AB9(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventPassengerFPV : 1;                          // Mask: 0x4, PropSize: 0x10x2AB9(0x1)(ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_28D : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_377A[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AIDinoForceActiveUntasisingRange;                  // 0x2ABC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WildRunningRotationRateModifier;                   // 0x2AC0(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedRunningRotationRateModifier;                  // 0x2AC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedSwimmingRotationRateModifier;                 // 0x2AC8(0x4)(Edit, ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WildSwimmingRotationRateModifier;                  // 0x2ACC(0x4)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class ANPCZoneVolume>         HardLimitWildDinoToVolume;                         // 0x2AD0(0x8)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AVolume>                WildLimitTargetVolume;                             // 0x2AD8(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RiderFlyingRotationRateModifier;                   // 0x2AE0(0x4)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NoRiderFlyingRotationRateModifier;                 // 0x2AE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AICombatRotationRateModifier;                      // 0x2AE8(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WalkingRotationRateModifier;                       // 0x2AEC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EFilterInterpolationType          MountedBlendFilterSmoothType;                      // 0x2AF0(0x1)(ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EFilterInterpolationType          UnMountedBlendFilterSmoothType;                    // 0x2AF1(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_377C[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SetAttackTargetTraceWidth;                         // 0x2AF8(0x4)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_377D[0x1C];                                    // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          PlayerMountedCarryAnimation;                       // 0x2B18(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnMountStateChanged : 1;                     // Mask: 0x1, PropSize: 0x10x2B20(0x1)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHandleUseButtonPressBP : 1;                       // Mask: 0x2, PropSize: 0x10x2B20(0x1)(Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGlideWhenFalling : 1;                             // Mask: 0x4, PropSize: 0x10x2B20(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGlideWhenMounted : 1;                             // Mask: 0x8, PropSize: 0x10x2B20(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowBackwardsMovement : 1;                  // Mask: 0x10, PropSize: 0x10x2B20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventBackwardsWalking : 1;                      // Mask: 0x20, PropSize: 0x10x2B20(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupplyPlayerMountedCarryAnimation : 1;            // Mask: 0x40, PropSize: 0x10x2B20(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowMountedCarryRunning : 1;                // Mask: 0x80, PropSize: 0x10x2B20(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanLatch : 1;                                     // Mask: 0x1, PropSize: 0x10x2B21(0x1)(ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsLatched : 1;                                    // Mask: 0x2, PropSize: 0x10x2B21(0x1)(ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsLatchedDownward : 1;                            // Mask: 0x4, PropSize: 0x10x2B21(0x1)(ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsLatching : 1;                                   // Mask: 0x8, PropSize: 0x10x2B21(0x1)(Edit, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRotateToFaceLatchingObject : 1;                   // Mask: 0x10, PropSize: 0x10x2B21(0x1)(ConstParm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLimitRiderYawOnLatched : 1;                       // Mask: 0x20, PropSize: 0x10x2B21(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanRideLatched : 1;                               // Mask: 0x40, PropSize: 0x10x2B21(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowMountedWeaponry : 1;                         // Mask: 0x80, PropSize: 0x10x2B21(0x1)(Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bKeepAffinityOnDamageRecievedWakingTame : 1;       // Mask: 0x1, PropSize: 0x10x2B22(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPFedWakingTameEvent : 1;                      // Mask: 0x2, PropSize: 0x10x2B22(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceRiderDrawCrosshair : 1;                      // Mask: 0x4, PropSize: 0x10x2B22(0x1)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDrawHUD : 1;                                 // Mask: 0x8, PropSize: 0x10x2B22(0x1)(Edit, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDrawHUDWithoutRecentlyRendered : 1;          // Mask: 0x10, PropSize: 0x10x2B22(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideFloatingName : 1;                             // Mask: 0x20, PropSize: 0x10x2B22(0x1)(BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanTargetVehicles : 1;                            // Mask: 0x40, PropSize: 0x10x2B22(0x1)(ConstParm, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRidingRequiresTamed : 1;                          // Mask: 0x80, PropSize: 0x10x2B22(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSuppressDeathNotification : 1;                    // Mask: 0x1, PropSize: 0x10x2B23(0x1)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCustomHealthBarColor : 1;                      // Mask: 0x2, PropSize: 0x10x2B23(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseOnUpdateMountedDinoMeshHiding : 1;             // Mask: 0x4, PropSize: 0x10x2B23(0x1)(ConstParm, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPInterceptTurnInputEvents : 1;                // Mask: 0x8, PropSize: 0x10x2B23(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPInterceptMoveInputEvents : 1;                // Mask: 0x10, PropSize: 0x10x2B23(0x1)(ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPInterceptMoveInputEventsEvenIfZero : 1;      // Mask: 0x20, PropSize: 0x10x2B23(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustAttackIndex : 1;                       // Mask: 0x40, PropSize: 0x10x2B23(0x1)(ExportObject, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheckBPAllowCarryCharacter : 1;                   // Mask: 0x80, PropSize: 0x10x2B23(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnEndCharging : 1;                           // Mask: 0x1, PropSize: 0x10x2B24(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyMateBoostChanged : 1;                  // Mask: 0x2, PropSize: 0x10x2B24(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCarriedDinoBabyRescaled : 1;                 // Mask: 0x4, PropSize: 0x10x2B24(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_28E : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3781[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        HealthBarOffsetY;                                  // 0x2B28(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3782[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AMissionType*                          OwnerMission;                                      // 0x2B30(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowBackwardsMovementWithNoRider : 1;       // Mask: 0x1, PropSize: 0x10x2B38(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsCorrupted : 1;                                  // Mask: 0x2, PropSize: 0x10x2B38(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsHordeDino : 1;                                  // Mask: 0x4, PropSize: 0x10x2B38(0x1)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideHealthBarOffset : 1;                    // Mask: 0x8, PropSize: 0x10x2B38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDropWildEggsWithoutMateBoost : 1;                 // Mask: 0x10, PropSize: 0x10x2B38(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsTemporaryMissionDino : 1;                       // Mask: 0x20, PropSize: 0x10x2B38(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePreventInventoryAccess : 1;                  // Mask: 0x40, PropSize: 0x10x2B38(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowWildRunningWithoutTarget : 1;                // Mask: 0x80, PropSize: 0x10x2B38(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsBed : 1;                                        // Mask: 0x1, PropSize: 0x10x2B39(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetTargetingDesirability : 1;                // Mask: 0x2, PropSize: 0x10x2B39(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysAllowStrafing : 1;                          // Mask: 0x4, PropSize: 0x10x2B39(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowTamedTickEggLay : 1;                    // Mask: 0x8, PropSize: 0x10x2B39(0x1)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasBuffPreventingUploading : 1;                   // Mask: 0x10, PropSize: 0x10x2B39(0x1)(Edit, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableHarvestHealthGain : 1;                     // Mask: 0x20, PropSize: 0x10x2B39(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemainLatchedOnClearRider : 1;                    // Mask: 0x40, PropSize: 0x10x2B39(0x1)(Edit, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_28F : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3783[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LimitRiderYawOnLatchedRange;                       // 0x2B3C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LatchingDistanceLimit;                             // 0x2B40(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LatchingInitialYaw;                                // 0x2B44(0x4)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LatchingInitialPitch;                              // 0x2B48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LatchingInterpolatedPitch;                         // 0x2B4C(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LatchedFirstPersonViewAngle;                       // 0x2B50(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LatchingCameraInterpolationSpeed;                  // 0x2B54(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TargetLatchingInitialYaw;                          // 0x2B58(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentStrafeMagnitude;                            // 0x2B5C(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GainStaminaWhenLatchedRate;                        // 0x2B60(0x4)(Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AIAggroNotifyNeighborsClassesRangeScale;           // 0x2B64(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        LastFrameMoveRight;                                // 0x2B68(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        LastFrameMoveLeft;                                 // 0x2B6C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              LastRiderMountedWeaponRotation;                    // 0x2B70(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3784[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        DeathGivesDossierIndex;                            // 0x2B90(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DeathGivesDossierDelay;                            // 0x2B94(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         TameGivesDossier;                                  // 0x2B98(0x1)(ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3785[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator_NetQuantizeSmartPitch        LastMovementDesiredRotation_MountedWeaponry;       // 0x2BA0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SaddleRiderMovementTraceThruSocketName;            // 0x2BB8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwimmingRunSpeedModifier;                          // 0x2BC0(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RidingSwimmingRunSpeedModifier;                    // 0x2BC4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       DinoDownloadedAtTime;                              // 0x2BC8(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                UploadedFromServerName;                            // 0x2BD0(0x10)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class FString                                LatestUploadedFromServerName;                      // 0x2BE0(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                PreviousUploadedFromServerName;                    // 0x2BF0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                TamedOnServerName;                                 // 0x2C00(0x10)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	TArray<struct FDinoAncestorsEntry>           DinoAncestors;                                     // 0x2C10(0x10)(BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDinoAncestorsEntry>           DinoAncestorsMale;                                 // 0x2C20(0x10)(ConstParm, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDinoAncestorsEntry>           NextBabyDinoAncestors;                             // 0x2C30(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDinoAncestorsEntry>           NextBabyDinoAncestorsMale;                         // 0x2C40(0x10)(ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxAllowedRandomMutations;                         // 0x2C50(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        RandomMutationRolls;                               // 0x2C54(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RandomMutationChance;                              // 0x2C58(0x4)(BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RandomMutationGivePoints;                          // 0x2C5C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        RandomMutationsMale;                               // 0x2C60(0x4)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        RandomMutationsFemale;                             // 0x2C64(0x4)(EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        GestationEggRandomMutationsFemale;                 // 0x2C68(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        GestationEggRandomMutationsMale;                   // 0x2C6C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  WakingTameDistanceSocketName;                      // 0x2C70(0x8)(ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        WakingTameConsumeEntireStackMaxQuantity;           // 0x2C78(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AttackPlayerDesirabilityMultiplier;                // 0x2C7C(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3786[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        FlyerAttachedExplosiveSpeedMultiplier;             // 0x2C90(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3787[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDinoExtraDefaultItemList>     DinoExtraDefaultInventoryItems;                    // 0x2C98(0x10)(Edit, ConstParm, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DeathGiveEngramClasses;                            // 0x2CA8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SinglePlayerOutgoingDamageModifier;                // 0x2CB8(0x4)(Edit, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SinglePlayerIncomingDamageModifier;                // 0x2CBC(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3788[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          DinoLevelUpAnimationOverride;                      // 0x2CE8(0x8)(BlueprintVisible, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DamageVictimClassesIgnoreBlockingGeomtryTrace;     // 0x2CF0(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3789[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        CloneBaseElementCost;                              // 0x2D10(0x4)(Edit, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CloneElementCostPerLevel;                          // 0x2D14(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        LastValidTameVersion;                              // 0x2D18(0x4)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SavedLastValidTameVersion;                         // 0x2D1C(0x4)(Edit, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class FName                                  NonDedicatedFreezeDinoPhysicsIfLayerUnloaded;      // 0x2D20(0x8)(ConstParm, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               UnboardLocationTraceOffset;                        // 0x2D28(0x18)(BlueprintVisible, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AttackLineOfSightMeshSocketName;                   // 0x2D40(0x8)(Edit, ConstParm, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AttackForceWalkDistanceMultiplier;                 // 0x2D48(0x4)(Edit, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AttackForceWalkRotationRateMultiplier;             // 0x2D4C(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        OverrideDinoTameSoundIndex;                        // 0x2D50(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_378A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            SwimSound;                                         // 0x2D58(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwimSoundIntervalPerHundredSpeed;                  // 0x2D60(0x4)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_378B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                TamedAIControllerOverride;                         // 0x2D68(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        PersonalTamedDinoCost;                             // 0x2D70(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_378C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       UploadEarliestValidTime;                           // 0x2D78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        StasisAutoDestroyInterval;                         // 0x2D80(0x4)(Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CarryCameraYawOffset;                              // 0x2D84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraDamageMultiplier;                             // 0x2D88(0x4)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraTamedBaseHealthMultiplier;                    // 0x2D8C(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AttackRangeOffset;                                 // 0x2D90(0x4)(Edit, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoExtraIncreasePlayerCollisionActivationDistanceSquared; // 0x2D94(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_378D[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OverrideApproachRadius;                            // 0x2DA4(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedOverrideStasisComponentRadius;                // 0x2DA8(0x4)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_378F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UStaticMesh*                           UniqueDino_MapMarkerMesh;                          // 0x2DB0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                UniqueDino_MapMarkerColor;                         // 0x2DB8(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideDinoMaxExperiencePoints;                   // 0x2DBC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxDinoTameLevels;                                 // 0x2DC0(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        DestroyTamesOverLevelClampOffset;                  // 0x2DC4(0x4)(ConstParm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NursingTroughFoodEffectivenessMultiplier;          // 0x2DC8(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3790[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        ForceAllowFoodAsConsumableList;                    // 0x2DD0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CustomReplicatedData;                              // 0x2DE0(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3791[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnNotifySetRider;                                  // 0x2DE8(0x10)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnNotifyClearRider;                                // 0x2DF8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnSetMountedDino;                                  // 0x2E08(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnClearMountedDino;                                // 0x2E18(0x10)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnNotifyAddPassenger;                              // 0x2E28(0x10)(Edit, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnNotifyClearPassenger;                            // 0x2E38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       NextAllowedBedUseTime;                             // 0x2E48(0x8)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UseBedCooldownTime;                                // 0x2E50(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetOtherActorToIgnore : 1;                   // Mask: 0x1, PropSize: 0x10x2E54(0x1)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_290 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        MutagenApplied : 1;                                // Mask: 0x4, PropSize: 0x10x2E54(0x1)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowWhistleThroughRemoteDino : 1;                // Mask: 0x8, PropSize: 0x10x2E54(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceValidUnstasisCaster : 1;                     // Mask: 0x10, PropSize: 0x10x2E54(0x1)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bControlledDinoPreventsPlayerInventory : 1;        // Mask: 0x20, PropSize: 0x10x2E54(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDinoFPVDisableMotionBlur : 1;                     // Mask: 0x40, PropSize: 0x10x2E54(0x1)(ExportObject, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPaintingUseSaddle : 1;                            // Mask: 0x80, PropSize: 0x10x2E54(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPaintingSupportSkins : 1;                         // Mask: 0x1, PropSize: 0x10x2E55(0x1)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDinoDontOverrideControllerPitch : 1;              // Mask: 0x2, PropSize: 0x10x2E55(0x1)(Edit, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverridePassengerAdditiveAnim : 1;           // Mask: 0x4, PropSize: 0x10x2E55(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReplicatePassengerTPVAim : 1;                     // Mask: 0x8, PropSize: 0x10x2E55(0x1)(Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDisableClientGravitySim : 1;                 // Mask: 0x10, PropSize: 0x10x2E55(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetTargetingDesirabilityForTurrets : 1;      // Mask: 0x20, PropSize: 0x10x2E55(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_291 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3792[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CarriedAsBabyPassengerSizeLimitOverride;           // 0x2E58(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MutagenBaseCost;                                   // 0x2E5C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        PaintTextureResolution;                            // 0x2E60(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          PaintingAllowedUVRanges;                           // 0x2E64(0x10)(BlueprintVisible, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3793[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnFlyerStartLanding;                               // 0x2E80(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnFlyerLanded;                                     // 0x2E90(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnFlyerLandingInterrupted;                         // 0x2EA0(0x10)(Edit, ConstParm, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyDrawFloatingHUDAsLocalPlayerController;       // 0x2EB0(0x1)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHasPlayerController;                              // 0x2EB1(0x1)(Edit, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3794[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UStaticMeshComponent*                  CopyDinoSettingsRangeMesh;                         // 0x2EB8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        GestationGenderOverride;                           // 0x2EC0(0x1)(ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3795[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPOverrideIsSubmergedForWaterTargeting : 1;    // Mask: 0x1, PropSize: 0x10x2ED9(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_292 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3796[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalInventoryComponent*             SecondaryInventoryComponent;                       // 0x2EE0(0x8)(Edit, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowFlyerDinoSubmerging : 1;                     // Mask: 0x1, PropSize: 0x10x2EE8(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventZeroingFlyerPitchWhenSwimming : 1;         // Mask: 0x2, PropSize: 0x10x2EE8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRiderDisableAimOffset : 1;                        // Mask: 0x4, PropSize: 0x10x2EE8(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontForceUpdateRateOptimizations : 1;             // Mask: 0x8, PropSize: 0x10x2EE8(0x1)(Edit, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_293 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	bool                                         bDisabledFromAscension;                            // 0x2EE9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3797[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RiddenStasisRangeMultiplier;                       // 0x2EEC(0x4)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                WildFollowingParentRef;                            // 0x2EF0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        WildFollowerRefs;                                  // 0x2EF8(0x10)(Edit, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FWildFollowerSpawnEntry>       OverwrittenWildFollowingDinoInfos;                 // 0x2F08(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ForcedWildBabyAge;                                 // 0x2F18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsAWildFollowerKnownServerside : 1;               // Mask: 0x1, PropSize: 0x10x2F1C(0x1)(BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        AllowWildBabyTaming : 1;                           // Mask: 0x2, PropSize: 0x10x2F1C(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsParentWildDino : 1;                             // Mask: 0x4, PropSize: 0x10x2F1C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_294 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3798[0xB];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       MaxTamedDinos_SoftTameLimit_MarkedForDeletionTime; // 0x2F28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxTamedDinos_SoftTameLimit_CountdownForDeletionTimeCache; // 0x2F30(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCreatureIsImmuneToServerSoftTameLimitDestruction : 1; // Mask: 0x1, PropSize: 0x10x2F34(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreNPCCountVolumes : 1;                        // Mask: 0x2, PropSize: 0x10x2F34(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisablePathfinding : 1;                           // Mask: 0x4, PropSize: 0x10x2F34(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontOverrideToNavMeshStepHeight : 1;              // Mask: 0x8, PropSize: 0x10x2F34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseDinoLimbWallAvoidance : 1;                     // Mask: 0x10, PropSize: 0x10x2F34(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysUpdateDinoLimbWallAvoidance : 1;            // Mask: 0x20, PropSize: 0x10x2F34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUpdateDinoLimbWallAvoidance : 1;                  // Mask: 0x40, PropSize: 0x10x2F34(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheatPossessed : 1;                               // Mask: 0x80, PropSize: 0x10x2F34(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3799[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               DinoLimbWallAvoidanceLastLocation;                 // 0x2F38(0x18)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              DinoLimbWallAvoidanceLastRotation;                 // 0x2F50(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              DinoLimbWallAvoidanceLastAimRotation;              // 0x2F68(0x18)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimalNavigationInvokerComponent*     NavigationInvokerComponent;                        // 0x2F80(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, GlobalConfig)
	float                                        DieIfLeftWaterSpawnCapsuleDepthMulti;              // 0x2F88(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRestrictNonAlliedCarriedPlayerYaw : 1;            // Mask: 0x1, PropSize: 0x10x2F8C(0x1)(Edit, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_295 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_379B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  RestrictNonAlliedCarriedPlayerYawSocket;           // 0x2F90(0x8)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RideIcon;                                          // 0x2F98(0x8)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DriveIcon;                                         // 0x2FA0(0x8)(Edit, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EquipSaddleToRideIcon;                             // 0x2FA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PassangerSeatsGenericIcon;                         // 0x2FB0(0x8)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnablePublicSeatingIcon;                           // 0x2FB8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisablePublicSeatingIcon;                          // 0x2FC0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FlyingMountsDisabledIcon;                          // 0x2FC8(0x8)(Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RequiresEngramToMountIcon;                         // 0x2FD0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            OptionsIcon;                                       // 0x2FD8(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            BehaviourIcon;                                     // 0x2FE0(0x8)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PickupIcon;                                        // 0x2FE8(0x8)(Edit, ConstParm, Net, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            NeuterIcon;                                        // 0x2FF0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ExportIcon;                                        // 0x2FF8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            AllowSpecialAttacksIcon;                           // 0x3000(0x8)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableSpecialAttacksIcon;                         // 0x3008(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableTurretModeIcon;                              // 0x3010(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableTurretModeIcon;                             // 0x3018(0x8)(Edit, BlueprintVisible, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            HideBoneIcon;                                      // 0x3020(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            UnhideBoneIcon;                                    // 0x3028(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RepairIcon;                                        // 0x3030(0x8)(Edit, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig)
	class UTexture2D*                            CantRepairIcon;                                    // 0x3038(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RenameIcon;                                        // 0x3040(0x8)(Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DemolishIcon;                                      // 0x3048(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ImprintOnIcon;                                     // 0x3050(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            WantsToCuddleIcon;                                 // 0x3058(0x8)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            WantsToGoOnAWalkIcon;                              // 0x3060(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            WantsCareIcon;                                     // 0x3068(0x8)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FeedToComfortIcon;                                 // 0x3070(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FeedToTameIcon;                                    // 0x3078(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PutItemInLastSlotToTameIcon;                       // 0x3080(0x8)(BlueprintReadOnly, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PutTamingFoodInLastSlotToTameIcon;                 // 0x3088(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DoesNotWantToBeTamedIcon;                          // 0x3090(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            NeedLevelToFeedIcon;                               // 0x3098(0x8)(ConstParm, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            WaitUntilHungryIcon;                               // 0x30A0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ClaimIcon;                                         // 0x30A8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            UnclaimIcon;                                       // 0x30B0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            HarvestSettingIcon;                                // 0x30B8(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableResourceHarvestingIcon;                     // 0x30C0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableResourceHarvestingIcon;                      // 0x30C8(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableVictimItemCollectionIcon;                   // 0x30D0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableVictimItemCollectionIcon;                    // 0x30D8(0x8)(ConstParm, ExportObject, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            OrderGroupSettingsIcon;                            // 0x30E0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            AddTameToGroupIcon;                                // 0x30E8(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    AddTameToGroupSelectionIcons;                      // 0x30F0(0x10)(Edit, BlueprintVisible, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RemoveTameFromGroupsIcon;                          // 0x3100(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    RemoveTameFromGroupSelectionIcons;                 // 0x3108(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            AddClassToGroupIcon;                               // 0x3118(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    AddClassToGroupSelectionIcons;                     // 0x3120(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    RemoveClassFromGroupSelectionIcons;                // 0x3130(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            StanceIcon;                                        // 0x3140(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            StancePassiveFleeIcon;                             // 0x3148(0x8)(Edit, ConstParm, BlueprintVisible, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            StancePassiveIcon;                                 // 0x3150(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            StanceNeutralIcon;                                 // 0x3158(0x8)(Edit, ConstParm, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            StanceAggressiveIcon;                              // 0x3160(0x8)(ExportObject, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            StanceAttackTargetIcon;                            // 0x3168(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableAllyLookingIcon;                            // 0x3170(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableAllyLookingIcon;                             // 0x3178(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableIgnoreGroupWhistlesIcon;                     // 0x3180(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableIgnoreGroupWhistlesIcon;                    // 0x3188(0x8)(BlueprintVisible, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableMatingIcon;                                  // 0x3190(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableMatingIcon;                                 // 0x3198(0x8)(Edit, BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableWanderingIcon;                               // 0x31A0(0x8)(ConstParm, BlueprintVisible, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableWanderingIcon;                              // 0x31A8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableFollowingIcon;                               // 0x31B0(0x8)(BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableFollowingIcon;                              // 0x31B8(0x8)(Edit, BlueprintVisible, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ChangeFollowDistanceIcon;                          // 0x31C0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FollowDistanceLowestIcon;                          // 0x31C8(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FollowDistanceLowIcon;                             // 0x31D0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FollowDistanceMediumIcon;                          // 0x31D8(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FollowDistanceHighIcon;                            // 0x31E0(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FollowDistanceHighestIcon;                         // 0x31E8(0x8)(ExportObject, BlueprintReadOnly, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ShowCopySettingsVisualIcon;                        // 0x31F0(0x8)(ConstParm, ExportObject, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            HideCopySettingsVisualIcon;                        // 0x31F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CopySettingsIcon;                                  // 0x3200(0x8)(Edit, ConstParm, BlueprintReadOnly, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CopySettingsInRangeIcon;                           // 0x3208(0x8)(ConstParm, BlueprintVisible, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CopySettingsInRangeWithPinCodeIcon;                // 0x3210(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TargetingOptionsIcon;                              // 0x3218(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TargetingRangeLowestIcon;                          // 0x3220(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TargetingRangeLowIcon;                             // 0x3228(0x8)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TargetingRangeMediumIcon;                          // 0x3230(0x8)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TargetingRangeHighIcon;                            // 0x3238(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TargetingRangeHighestIcon;                         // 0x3240(0x8)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableOnlyTargetConsciousIcon;                     // 0x3248(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableOnlyTargetConsciousIcon;                    // 0x3250(0x8)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TribeRankSettingsIcon;                             // 0x3258(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    TribeOrderRankSelectionIcons;                      // 0x3260(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    TribeRidingRankSelectionIcons;                     // 0x3270(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PathfollowingMaxSpeedModifer;                      // 0x3280(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_379D[0x24];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        DinoArmorDurabilityScalingMultiplier;              // 0x32A8(0x4)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_379E[0x114];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalDinoCharacter* GetDefaultObj();

	uint8 UpdateTribeGroupRanks();
	double UpdateNextAllowedMatingTime();
	void UpdateMateBoost(bool bForce);
	float UpdateImprintingQuality();
	void UpdateImprintingDetailsForController(class AShooterPlayerController* ForPC);
	class FString UpdateImprintingDetails();
	void UpdateHasBuffPreventingUploading(bool* ReturnValue);
	class UClass* UpdateBabyCuddling();
	void UpdateAttackTargets();
	float UntameDino();
	bool UnclaimDino();
	class AActor* TamedProcessOrder(enum class EDinoTamedOrder* OrderType, bool bForce, bool* ReturnValue);
	bool TameDino(class AShooterPlayerController* ForPC);
	bool StopActiveState();
	float StartSurfaceCameraForPassengers();
	bool StartSurfaceCameraForPassenger();
	struct FVector StartLanding();
	class UBehaviorTree* SpawnNewAIController();
	bool SpawnFromDinoDataEx(struct FVector* AtLocation, const struct FRotator& AtRotation, int32* ForTeam, class AShooterPlayerController** TamerController, class APrimalDinoCharacter** ReturnValue);
	bool SpawnFromDinoData(struct FVector* AtLocation, const struct FRotator& AtRotation, int32* ForTeam, class AShooterPlayerController** TamerController, class APrimalDinoCharacter** ReturnValue);
	class AShooterPlayerController* SpawnedPlayerFor(class APawn** ForPawn);
	bool SpawnDino(bool bNPCDontWander, float NPCAIRangeMultiplier, class APrimalDinoCharacter** ReturnValue);
	void ShouldForceFlee(bool* ReturnValue);
	void ShouldEnableIKBasedOn(bool* ReturnValue);
	class APrimalCharacter* ShouldDisableBasedCharactersCameraInterpolation(bool* ReturnValue);
	class AActor* ShouldDealDamage(bool* ReturnValue);
	void ShouldAttackOfPlayedAnimationStopMovement(bool* ReturnValue);
	class APrimalDinoCharacter* SetupAsWildFollowerOfOtherDino(bool* ReturnValue);
	float SetupAsWildBabyOfSingleParent(bool* ReturnValue);
	bool SetTurretModeMovementRestrictions(bool* Enabled);
	void SetTurretMode(bool* Enabled, bool* ReturnValue);
	void SetState(class UPrimalAIState* State);
	float SetStasisComponentRadius();
	void SetRider(class AShooterCharacter* ARider);
	bool SetPreventSaving();
	double SetNextAllowedMatingTime();
	struct FVector SetMovementAccelerationVector();
	double SetLeftDynamicActorBaseTime();
	struct FRotator SetLastMovementDesiredRotation();
	double SetLastAttackTimeForAttack();
	void SetImprintPlayer(class AShooterCharacter* ForChar);
	struct FUnreplicatedEggData SetGestationData();
	bool SetForceDisableClientGravitySim();
	bool SetFlight(bool* bFly, bool* bCancelForceLand);
	int32 SetFCustomTrackedDinoInfoMembersByDinoRef(struct FCustomTrackedActorInfo* ReturnValue);
	uint8 SetCurrentAttackIndex();
	TArray<uint8> SetColorizationData();
	bool SetCharacterStatusTameable();
	float SetBabyAge();
	TArray<float> SetAnimWeightsForAttackAtIndex();
	bool SetAllowedPaintingColorRegion();
	struct FVector ServerUpdateAttackTargets();
	void ServerToggleCharging();
	class AActor* ServerToClientsPlayAttackAnimation(float* InPlayRate);
	void ServerTamedTick();
	void ServerSleepingTick();
	float ServerSetRiderMountedWeaponRotationYawPitch();
	void ServerRequestWaterSurfaceJump();
	void ServerRequestToggleFlight();
	bool ServerRequestBraking();
	int32 ServerRequestAttack();
	void ServerInterruptLanding();
	void ServerFinishedLanding();
	void ServerClearRider(int32* OverrideUnboardDirection);
	float RidingTick();
	void ResetBrainComponent();
	void RequestTerminateEmbryo(class APlayerController* ForPC);
	bool RequestDisplayEmbryoData(class APlayerController* ForPC);
	bool RemovePassenger(class APrimalCharacter* ACharacter);
	class AActor* RemoveFromMeleeSwingHurtList();
	void RemoveDinoReferenceFromLatchingStructure();
	bool RefreshColorization();
	void RefreshBabyScaling();
	void ReassertColorization();
	bool ProcessOrderMoveTo();
	bool ProcessOrderFollowTarget(class AActor* TheTarget);
	bool ProcessOrderAttackTarget(class AActor* TheTarget);
	void PreventShowingDinoTooltip(bool* ReturnValue);
	void PlayWeightedAttackAnimation();
	void PlayHardEndChargingShake();
	void PlayedAnimationHasAttack(bool* ReturnValue);
	struct FVector OverrideRandomWanderLocation(struct FVector* InVec);
	void OverrideFinalWanderLocation(struct FVector* OutVec, bool* ReturnValue);
	class APrimalCharacter* OverrideBasedCharactersCameraInterpSpeed(float DefaultTPVCameraSpeedInterpMultiplier, float DefaultTPVOffsetInterpSpeed, float TPVCameraSpeedInterpMultiplier, float* TPVOffsetInterpSpeed);
	bool OnVoiceTalkingStateChanged();
	void OnUpdateMountedDinoMeshHiding(bool* bShouldBeVisible);
	void OnUncryo(class AShooterPlayerController* ForPC);
	class UPrimalItem* OnSpawnedForItem();
	void OnRep_Saddle();
	void OnRep_Rider();
	void OnRep_PassengerPerSeat();
	void OnRep_CarriedCharacter();
	void OnRep_bIsFlying();
	void OnRep_bIsCharging();
	void OnRep_bBonesHidden();
	void OnCryo(class AShooterPlayerController* ForPC);
	void NotifyClientsEmbryoTerminated();
	int32 NetUpdateDinoOwnerData();
	class FString NetUpdateDinoNameStrings();
	double MultiSetAttachedStructurePickupAllowedBeforeNetworkTime(class APrimalStructure** Structure);
	int32 MulticastUpdateAllColorSets();
	void Multi_OnCryo(class AShooterPlayerController* ForPC);
	void MaxTamedDinos_SoftTameLimit_OnTamedDinoIncreased();
	void MaxTamedDinos_SoftTameLimit_OnTamedDinoDecreased();
	void MaxTamedDinos_SoftTameLimit_IsCreatureAbleToBeMarkedForDestruction(bool* ReturnValue);
	void MaxTamedDinos_SoftTameLimit_DestroyAfterCountdown();
	void LowerDinoBP(float Val);
	void KeepFlightTimer();
	class APrimalDinoCharacter* IsWildFollowingParentValid(bool* ReturnValue);
	void IsWildFollowerOtherwiseValidAndLiving(bool* ReturnValue);
	void IsWakingTame(bool* ReturnValue);
	void IsVoiceTalking(bool* ReturnValue);
	int32 IsPassengerSeatAvailable(bool* ReturnValue);
	void IsMissionDino(bool* ReturnValue);
	void IsInTekShield(bool* ReturnValue);
	void IsInFlyerPreventionVolume(bool* ReturnValue);
	void IsImprintPlayer(class AShooterCharacter* ForChar, bool* ReturnValue);
	void IsFleeing(bool* ReturnValue);
	void IsCurrentlyPlayingAttackAnimation(bool* ReturnValue);
	void IsCurrentAttackStopsMovement(bool* ReturnValue);
	void IsAWildFollowerKnownServerside(bool* ReturnValue);
	void IsAttacking(bool* ReturnValue);
	class UObject* IsAllowedToTransfer(bool* ReturnValue);
	void IsAllowedToMate(bool* ReturnValue);
	void InterruptLatching();
	void InterruptLanding();
	class UAnimMontage* InterceptRiderEmoteAnim(bool* ReturnValue);
	class UAnimMontage* InterceptMountedOnPlayerEmoteAnim(bool* ReturnValue);
	bool ImprintOnPlayerTarget(class AShooterPlayerController* ForPC);
	void HasTarget(bool* ReturnValue);
	void HasSelfBuried(bool* ReturnValue);
	void HasOfflineRider(bool* ReturnValue);
	void HasBuffPreventingFlight(bool* ReturnValue);
	void HasBuffPreventingClearRiderOnDinoImmobilized(bool* ReturnValue);
	class AShooterPlayerController* HandleMountedDinoAction();
	bool GiveSaddleFromString(float* MinRandomQuality, class UPrimalItem** ReturnValue);
	bool GiveSaddle(float* MinRandomQuality, class UPrimalItem** ReturnValue);
	void GiveDeathDossier();
	void GetZoomMinValue(float* ReturnValue);
	void GetZoomMaxValue(float* ReturnValue);
	class AActor* GetWiegthedAttack(float Distance, uint8* ReturnValue);
	int32 GetUsesColorizationRegion(bool* ReturnValue);
	void GetUntamedTargetingTeam(int32* ReturnValue);
	void GetTamedLandTarget(class AActor** ReturnValue);
	void GetTamedFollowTarget(class AActor** ReturnValue);
	void GetStateOfPlayedAnimationAttack(class UPrimalAIState** ReturnValue);
	class FName GetSocketLocationTemp(struct FVector* ReturnValue);
	int32 GetSocketForMeleeTraceForHitBlockers(class FName* ReturnValue);
	void GetSeatIndexForPassenger(class APrimalCharacter** PassengerChar, int32* ReturnValue);
	TArray<class UMeshComponent*> GetSaddleMeshComponents();
	void GetSaddleMeshComponent(class USkeletalMeshComponent** ReturnValue);
	TArray<class UActorComponent*> GetSaddleActorComponents();
	float GetRootYawSpeed(float* ReturnValue);
	void GetPlayerSpawnRotation(struct FRotator* ReturnValue);
	void GetPlayerSpawnLocation(struct FVector* ReturnValue);
	class APrimalCharacter* GetPassengersSeatIndex(int32* ReturnValue);
	TArray<int32> GetPassengersAndSeatIndexes();
	void GetPassengers(TArray<class APrimalCharacter*>* ReturnValue);
	int32 GetPassengerPerSeat(class APrimalCharacter** ReturnValue);
	bool GetNumPassengerSeats(int32* ReturnValue);
	bool GetNumAvailablePassengerSeats(int32* ReturnValue);
	void GetLastStartedTalkingTime(double* ReturnValue);
	void GetLandingLocation(struct FVector* ReturnValue);
	void GetGestationTimeRemaining(float* ReturnValue);
	struct FUnreplicatedEggData GetGestationData();
	void GetForceTickPose(bool* ReturnValue);
	void GetFoodItemEffectivenessMultipliersIndex(class UPrimalItem* FoodItem, int32* ReturnValue);
	void GetFirstValidWildFollowingParentRef(class APrimalDinoCharacter** ReturnValue);
	void GetFirstAffinityFoodItemClass(class UClass** ReturnValue);
	void GetDinoVelocity(struct FVector* ReturnValue);
	void GetDinoTameSound(class USoundBase** ReturnValue);
	void GetDinoPlatformCollisionIgnoreActors(TArray<class AActor*>* ReturnValue);
	void GetDinoLevelUpAnimation(class UAnimMontage** ReturnValue);
	class FString GetDinoIDsAsStrings();
	int32 GetDinoIDs();
	void GetDinoEntryIcon(class UTexture** ReturnValue);
	bool GetDinoDescriptiveName(class FString* ReturnValue);
	void GetDinoDeathTime(float* ReturnValue);
	struct FARKDinoData GetDinoData();
	int32 GetDinoColor(struct FLinearColor* ReturnValue);
	void GetDesiredNavmeshGenerationRadiusName(class FName* ReturnValue);
	void GetCurrentDinoName(class APlayerController* ForPC, class FString* ReturnValue);
	int32 GetCurrentAttackInfo(const struct FDinoAttackInfo& AttackInfo, bool* ReturnValue);
	void GetCurrentAttackIndexForInput(enum class EDinoInputAction Input, int32* ReturnValue);
	void GetCurrentAimOffsetsRotation(struct FRotator* ReturnValue);
	void GetColorSetNamesAsArray(TArray<class FName>* ReturnValue);
	void GetColorSetInidcesAsString(class FString* ReturnValue);
	void GetColorizationData(TArray<uint8>* ReturnValue);
	int32 GetColorForColorizationRegion(struct FLinearColor* ReturnValue);
	int32 GetCanMutateStat(bool* ReturnValue);
	void GetBedFilterClass(class UClass** ReturnValue);
	void GetBabyScale(float* ReturnValue);
	void GetBabyCuddleInterval(float* ReturnValue);
	void GetBabyCuddleFood(class UClass** ReturnValue);
	int32 GetAllowedPaintingColorRegion(bool* ReturnValue);
	bool GetAllAttachedExplosives(TArray<class APrimalStructureExplosive*>* ReturnValue);
	bool GetAimOffsetsTransform(struct FRotator* ReturnValue);
	void GetAIFollowStoppingDistanceOffset(float* ReturnValue);
	void GetAIFollowStoppingDistanceMultiplier(float* ReturnValue);
	void GetAffinityIncreaseForFoodItem(class UPrimalItem* FoodItem, float* ReturnValue);
	void GetActorCenterTraceLocation(struct FVector* ReturnValue);
	void GetActiveState(class UPrimalAIState** ReturnValue);
	int32 ForceUpdateColorSets();
	int32 ForceSetTamedAggressionLevel();
	void ForceClearRider();
	bool FireProjectile(struct FVector_NetQuantizeNormal* ShootDir);
	struct FVector FireMultipleProjectilesEx(class UClass* ProjectileClass, TArray<struct FVector>* Locations, bool* bAddPawnVelocityToProjectile, float* OverrideInitialSpeed);
	TArray<struct FVector> FireMultipleProjectiles(TArray<struct FVector>* Locations, bool* bScaleProjectileDamageByDinoDamage);
	void FedWakingTameDino();
	void EndCharging(bool bForce);
	void ElevateDinoBP(float Val);
	void DoOverrideMountedAirControl(float* AirControlIn, float* ReturnValue);
	void DoNeuter();
	void DoMate(class APrimalDinoCharacter** WithMate);
	void DoesUseHibernation(bool* ReturnValue);
	void DoDeathHarvestingFadeOut();
	int32 DoAttack(bool* bSetCurrentAttack, bool* bInterruptCurrentAttack, bool* ReturnValue);
	void DinoShoulderMountedLaunch(const struct FVector& LaunchDir, class AShooterCharacter** ThrowingCharacter);
	bool DinoFireProjectileEx(class UClass* ProjectileClass, struct FVector_NetQuantizeNormal* ShootDir, bool* bAddDinoVelocityToProjectile, float* OverrideInitialSpeed, float* OverrideMaxSpeed, float* ExtraDirectDamageMultiplier, float* ExtraExplosionDamageMultiplier, bool* SpawnOnOwningClient);
	class AActor* Die(float* KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, bool* ReturnValue);
	void DestroyController();
	int32 CycleAttackWeightsForAttackAtIndex();
	struct FRotator CreateCloneFertilizedEgg(class UClass** DroppedItemTemplateOverride, int32* NumMutationsToAdd, class ADroppedItem** ReturnValue);
	void CreateBabyDino(class APrimalDinoCharacter** ReturnValue);
	void CopySettingsToOtherDino(class APlayerController* ForPC, class APrimalDinoCharacter** FromDino, class APrimalDinoCharacter* OtherDino, int32* SettingTypeUseIndex);
	void CopyPaintingComponentFrom(class APrimalDinoCharacter** Other);
	void ClientStartLanding(struct FVector* LandingLoc);
	void ClientShouldNotifyLanded();
	void ClientInterruptLanding();
	void ClearTamedLandTarget();
	void ClearRider(bool* bFromRider, bool* bCancelForceLand, bool* SpawnDinoDefaultController, int32* OverrideUnboardDirection, bool* bForceEvenIfBuffPreventsClear, bool* bFromUse);
	void ClearPassengers();
	void ClearMountCharacter(bool bFromMountCharacter);
	void ClearCharacterAIMovement();
	void ClearCarriedCharacter(bool FromCarriedCharacter, bool* bCancelAnyCarryBuffs);
	void CheckForTamedFoodConsumption(int32* Steps);
	void CheckDinoDuped(bool UpedDino);
	void CheatAction(class FString* Action);
	void CarryCharacter(class APrimalCharacter* ARider, bool byPassCanCarryCheck, bool* ReturnValue);
	bool CanTakePassenger(class APrimalCharacter* ACharacter, bool* ReturnValue);
	void CanSkipAnimGraph(bool* ReturnValue);
	class APrimalCharacter* CanOrder(bool bBuildingStructures, bool* ReturnValue);
	void CanNurseDino(class APrimalDinoCharacter* OtherDino, bool* ReturnValue);
	void CanMount(class APrimalCharacter* ACharacter, bool* ReturnValue);
	void CanFly(bool* ReturnValue);
	void CanDinoAttackTargetsWithoutRider(bool* ReturnValue);
	void CanCryo(class AShooterPlayerController* ForPC, bool* ReturnValue);
	void CanClearRider(bool* ReturnValue);
	void CancelCurrentAttack(bool bStopCurrentAttackAnim, float AttackAnimBlendOutTime, bool* ReturnValue);
	class APrimalCharacter* CanCarryCharacter(bool* ReturnValue);
	int32 CanAttack(bool* ReturnValue);
	void BSetupDinoTameable();
	void BrakeDinoBP(float Val);
	void BPUntamedConsumeFoodItem(class UPrimalItem* FoodItem);
	void BPUnstasisConsumeFood(float FoodNeeded, float* ReturnValue);
	void BPUnstasis();
	void BPUnsetupDinoTameable();
	void BPTamedConsumeFoodItem(class UPrimalItem* FoodItem);
	void BPStaticCreateBabyDinoNoAncestors(class UWorld** TheWorld, class UClass* EggDinoClassToSpawn, const struct FVector& TheGroundLoc, float ActorRotationYaw, TArray<uint8>* EggColorSetIndices, TArray<uint8>* EggNumberOfLevelUpPointsApplied, const TArray<uint8>& EggMutationsApplied, float* EggTamedIneffectivenessModifier, int32 NotifyTeamOverride, int32* EggRandomMutationsFemale, int32* EggRandomMutationsMale, class APrimalDinoCharacter** ReturnValue);
	void BPStaticCreateBabyDino(class UWorld** TheWorld, class UClass* EggDinoClassToSpawn, const struct FVector& TheGroundLoc, float ActorRotationYaw, TArray<uint8>* EggColorSetIndices, TArray<uint8>* EggNumberOfLevelUpPointsApplied, const TArray<uint8>& EggMutationsApplied, float* EggTamedIneffectivenessModifier, TArray<struct FDinoAncestorsEntry>* EggDinoAncestors, TArray<struct FDinoAncestorsEntry>* EggDinoAncestorsMale, int32 NotifyTeamOverride, int32* EggRandomMutationsFemale, int32* EggRandomMutationsMale, int32* EggGenderOverride, class APrimalDinoCharacter** ReturnValue);
	void BPShowTamingPanel(bool CurrentVisibility, bool* ReturnValue);
	void BPShouldForceFlee(bool* ReturnValue);
	void BPShouldDinoBeTracked(int32 CustomTameSelectionType, int32 DinoGroup, const class FString& CustomTameSearchText, bool* Handled, bool* ReturnValue);
	int32 BPShouldCancelDoAttack(bool* ReturnValue);
	void BPSetupTamed(bool bWasJustTamed);
	void BPSetSimulatedInterpRollOverride(float* ReturnValue);
	void BPSetInitialAimOffsetTargets(const struct FVector& TargetRootLoc, const struct FRotator& TargetAimRot, const struct FVector& OutTargetRootLoc, const struct FRotator& OutTargetAimRot);
	void BPSetForcedAggro(class AActor* TargetableActor, float AggroAmount, float ForcedAggroTime);
	class AShooterPlayerController* BPSentKilledNotification();
	void BPResetClone();
	bool BPPreventSpawnForPlayer(bool* ReturnValue);
	void BPPreventRiding(class AShooterCharacter* ByPawn, bool bDontCheckDistance, bool* ReturnValue);
	bool BPPreventOrderAllowed(enum class EDinoTamedOrder* OrderType, bool bForce, bool* ReturnValue);
	struct FVector BPPrepareForLaunchFromShoulder(const struct FVector& ViewLoc);
	void BPOverrideTamingDescriptionLabel(struct FSlateColor* TextColor, class FString* ReturnValue);
	void BPOverrideStencilAllianceForTarget(class APrimalCharacter** TargetDino, class UPrimitiveComponent** Component, enum class EStencilAlliance* ReturnValue);
	void BPOverridePassengerAdditiveAnim(class APrimalCharacter** ForPassenger, class UAnimSequence** ReturnValue);
	void BPOverrideMutationLabels(bool* Male, class FString* ReturnValue);
	void BPOverrideMoveToOrder(const struct FVector& MoveToLocation, class AShooterCharacter** OrderingPlayer, bool* ReturnValue);
	void BPOverrideIsSubmergedForWaterTargeting(bool* ReturnValue);
	void BPOverrideHealthBarOffset(class APlayerController* ForPC, float* ReturnValue);
	int32 BPOverrideGetAttackAnimationIndex(TArray<class UAnimMontage*>* AnimationArray, int32* ReturnValue);
	void BPOverrideFloatingHUDLocation(struct FVector* ReturnValue);
	struct FRotator BPOverrideCameraViewTarget(class FName* CurrentCameraMode, struct FVector* DesiredCameraLocation, struct FRotator* DesiredCameraRotation, float* DesiredFOV, bool* bOverrideCameraLocation, bool* bOverrideCameraRotation, bool* bOverrideCameraFOV, float* CameraFOV);
	void BPOrderedMoveToLoc(struct FVector* DestLoc);
	bool BPOnTamedProcessOrder(enum class EDinoTamedOrder* OrderType, bool bForce);
	void BPOnStopJump(bool* ReturnValue);
	void BPOnStartJump(bool* ReturnValue);
	void BPOnSetMountedDino();
	void BPOnSetFlight(bool* bFly);
	void BPOnRepIsCharging();
	TArray<struct FLinearColor> BPOnRefreshColorization();
	void BPOnEndCharging();
	void BPOnDinoStartled(class UAnimMontage** StartledAnimPlayed, bool* bFromAIController);
	class AShooterProjectile* BPOnDinoFiredProjectile();
	bool BPOnDinoCheat(float Value);
	void BPOnClearMountedDino();
	void BPNotifyWildHarvestAttack(int32 HarvestIndex);
	void BPNotifyStructurePlacedNearby(class APrimalStructure** NewStructure);
	void BPNotifySetRider(class AShooterCharacter* RiderSetting);
	void BPNotifyNameEditText(class AShooterPlayerController* ForPC);
	void BPNotifyMateBoostChanged();
	void BPNotifyIfPassengerLaunchShoulderMount(class APrimalCharacter** LaunchedCharacter);
	class AShooterCharacter* BPNotifyClearRider();
	int32 BPNotifyClearPassenger(class APrimalCharacter** PassengerChar);
	void BPNotifyClaimed();
	void BPNotifyCarriedDinoBabyAgeIncrement(class APrimalDinoCharacter* AgingCarriedDino, float* PreviousAge, float NewAge);
	void BPNotifyBabyAgeIncrement(float* PreviousAge, float NewAge);
	int32 BPNotifyAddPassenger(class APrimalCharacter** PassengerChar);
	void BPModifyHarvestingWeightsArray(TArray<float>* ResourceWeightsIn, TArray<class UPrimalItem*>* ResourceItems, TArray<float>* ResourceWeightsOut);
	void BPModifyHarvestingQuantity(float* OriginalQuantity, class UClass** ResourceSelected, float* ReturnValue);
	void BPModifyHarvestDamage(class UPrimalHarvestingComponent** HarvestComponent, float InDamage, float* ReturnValue);
	float BPModifyDesiredRotation(struct FRotator* InDesiredRotation, struct FRotator* OutDesiredRotation, bool* ReturnValue);
	void BPModifyControlRotation(struct FRotator* ControlRotation, struct FRotator* OutControlRotation, bool* ReturnValue);
	void BPModifyAimOffsetTargetLocation(struct FVector* AimTargetLocation, struct FVector* ReturnValue);
	void BPModifyAimOffsetNoTarget(const struct FRotator& Aim, struct FRotator* ReturnValue);
	void BPKilledSomethingEvent(class APrimalCharacter* KilledTarget);
	void BPIsValidUnStasisCaster(bool* ReturnValue);
	void BPIsTamed(bool* ReturnValue);
	void BPIsHidden(bool* ReturnValue);
	void BPIsBasedOnActor(class AActor** Other, bool* ReturnValue);
	void BPHasCurrentAttack(bool* ReturnValue);
	void BPHandleUseButtonPress(class AShooterPlayerController* RiderController, bool* ReturnValue);
	void BPHandleOnStopTargeting(bool* ReturnValue);
	void BPHandleOnStopFire(bool* ReturnValue);
	int32 BPHandleControllerInitiatedAttack(bool* ReturnValue);
	void BPGetTargetingDesirability(class AActor* Attacker, float* ReturnValue);
	TArray<struct FMultiUseEntry> BPGetRidingMultiUseEntries(class APlayerController* ForPC, TArray<struct FMultiUseEntry>* ReturnValue);
	void BPGetRiderUnboardLocation(class APrimalCharacter* RidingCharacter, struct FVector* ReturnValue);
	void BPGetRiderUnboardDirection(class APrimalCharacter* RidingCharacter, struct FVector* ReturnValue);
	void BPGetRiderSocket(class FName* ReturnValue);
	class APrimalDinoCharacter* BPGetPassengerDinoAdditionalOffset(struct FVector* ReturnValue);
	void BPGetOtherActorToIgnore(class AActor** ReturnValue);
	void BPGetLookOffsetSocketName(class APrimalCharacter* ForPrimalChar, class FName* ReturnValue);
	void BPGetHealthBarColor(struct FVector* ReturnValue);
	void BPGetDragSocketName(class APrimalCharacter* DraggingChar, class FName* ReturnValue);
	void BPGetDragSocketDinoName(class APrimalDinoCharacter* AGrabbedDino, class FName* ReturnValue);
	void BPGetCustomDinoSetup(struct FDinoSetup* ReturnValue);
	void BPGetCurrentAttackIndex(int32* ReturnValue);
	void BPGetCrosshairSpread(float* ReturnValue);
	void BPGetCrosshairLocation(float CanvasClipX, float CanvasClipY, float OutX, float OutY);
	void BPGetCrosshairColor(struct FLinearColor* ReturnValue);
	void BPGetCrosshairAlpha(float* ReturnValue);
	void BPGetAttackOfPlayedAnimation(const struct FDinoAttackInfo& AttackInfo, bool* ReturnValue);
	void BPForceTurretFastTargeting(bool* ReturnValue);
	void BPForceReachedDestination();
	void BPFedWakingTameEvent(class APlayerController* ForPC);
	void BPExShouldRestrictNonAlliedCarriedPlayerYaw(bool* ReturnValue);
	class AShooterHUD* BPDrawToRiderHUD();
	void BPDoHarvestAttack(int32 HarvestIndex);
	int32 BPDoAttack();
	void BPDisplayTamedMessage(bool* ReturnValue);
	class FString BPDinoTooltipCustomTorpidityProgressBar(bool OverrideTorpidityProgressBarIfActive, bool* ReturnValue);
	class FString BPDinoTooltipCustomTamingProgressBar(bool OverrideTamingProgressBarIfActive, bool* ReturnValue);
	void BPDinoPrepareForARKUploading();
	void BPDinoPostBeginPlay();
	void BPDinoARKDownloadedEnd();
	void BPDinoARKDownloadedBegin();
	class APrimalCharacter* BPDidSetCarriedCharacter();
	class APrimalCharacter* BPDidClearCarriedCharacter();
	void BPDesiredRotationIsLocalSpace(bool* ReturnValue);
	void BPConsumeInventoryFoodItem(class UPrimalItem* FoodItem, bool bConsumeEntireStack, class AShooterCharacter** ReturnValue);
	void BPClampMaxHarvestHealth(float* ReturnValue);
	void BPCheckSeven(bool* ReturnValue);
	void BPCheckCanSpawnFromLocation(const struct FVector& CheckLocation, struct FVector* ReturnValue);
	void BPChargingModifyInputAcceleration(const struct FVector& InputAcceleration, struct FVector* ReturnValue);
	void BPCarriedDinoBabyRescaled(class APrimalDinoCharacter* AgingCarriedDino, float NewAge);
	void BPCanTargetCorpse(bool* ReturnValue);
	void BPCanTame(class AShooterPlayerController* ForPC, bool bIgnoreMaxTamedDinos, bool* ReturnValue);
	bool BPCanTakePassenger(class APrimalCharacter** Character, bool* ReturnValue);
	void BPCanMountOnCharacter(class APrimalCharacter** Character, bool* ReturnValue);
	void BPCanLand(bool* CanLand, bool* ReturnValue);
	void BPCanIgnoreImmobilizationTrap(class UClass* TrapClass, bool bForceTrigger, bool* ReturnValue);
	void BPCanDragCharacter(class APrimalCharacter** Character, bool* ReturnValue);
	void BPCanCryo(class AShooterPlayerController* ForPC, bool* ReturnValue);
	void BPCanAutodrag(class APrimalCharacter* CharacterToDrag, bool* ReturnValue);
	void BPBecomeBaby();
	void BPBecomeAdult();
	void BPBecameNewBaby(class APrimalDinoCharacter* Parent);
	void BPAllowEquippingItemType(enum class EPrimalEquipmentType EquipmentType, bool* ReturnValue);
	class AShooterPlayerController* BPAllowClaiming(bool* ReturnValue);
	void BPAllowCarryCharacter(class APrimalCharacter* CheckCharacter, bool* ReturnValue);
	int32 BPAdjustAttackIndex(int32* ReturnValue);
	class APrimalCharacter* BP_ShouldDisableBasedCharactersCameraInterpolation(bool* ReturnValue);
	void BP_PreventUnmounting(bool* ReturnValue);
	void BP_PreventCarryingByCharacter(class APrimalCharacter* ByCarrier, bool* ReturnValue);
	void BP_PreventCarrying(bool* ReturnValue);
	void BP_OverrideRiderCameraCollisionSweep(const struct FVector& SweepStart, const struct FVector& SweepEnd, struct FHitResult* ReturnValue);
	void BP_OverrideDinoName(const class FString& CurrentDinoName, class APlayerController* ForPC, class FString* ReturnValue);
	void BP_OverrideCarriedCharacterTransform(class APrimalCharacter* ForCarriedChar, bool* ReturnValue);
	class APrimalCharacter* BP_OverrideBasedCharactersCameraInterpSpeed(float DefaultTPVCameraSpeedInterpMultiplier, float DefaultTPVOffsetInterpSpeed, float TPVCameraSpeedInterpMultiplier, float* TPVOffsetInterpSpeed);
	void BP_OnUncryo(class AShooterPlayerController* ForPC);
	bool BP_OnTargetedByTamedOrder();
	bool BP_OnTamedOrderReceived(enum class EDinoTamedOrder* OrderType, bool bForce);
	void BP_OnStartLandingNotify();
	int32 BP_OnStartLandFailed();
	class UPrimalItem* BP_OnRiderChangeWeapons();
	struct FRotator BP_OnPostNetReplication();
	void BP_OnLandingInterruptedNotify();
	void BP_OnCryo(class AShooterPlayerController* ForPC);
	class AActor* BP_OnBasedPawnRemovedNotify();
	class AActor* BP_OnBasedPawnAddedNotify();
	float BP_InterceptTurnInput(bool* ReturnValue);
	float BP_InterceptMoveRight(bool* ReturnValue);
	float BP_InterceptMoveForward(bool* ReturnValue);
	void BP_GetCustomModifier_RotationRate(float* ReturnValue);
	void BP_GetCustomModifier_MaxSpeed(float* ReturnValue);
	class UClass* BP_ForceAllowMountedWeapon(bool* ReturnValue);
	void BP_CanFly(bool* ReturnValue);
	class UPrimitiveComponent* BP_AllowWalkableSlopeOverride(bool* ReturnValue);
	void BlueprintTamedTick();
	class AActor* BlueprintPlayDying(float* KillingDamage, const struct FDamageEvent& DamageEvent, class APawn** InstigatingPawn);
	bool BlueprintOverrideWantsToRun(bool* ReturnValue);
	float BlueprintOverrideHarvestDamageType(class UClass** ReturnValue);
	class AActor* BlueprintGetAttackWeight(float Distance, float* ReturnValue);
	void BlueprintExtraBabyScaling(float* ReturnValue);
	float BlueprintDrawFloatingHUD();
	void BlueprintDestroyActor();
	int32 BlueprintCanRiderAttack(bool* ReturnValue);
	class AActor* BlueprintCanAttack(float Distance, bool* ReturnValue);
	float BlueprintAdjustOutputDamage(float* ReturnValue);
	void BlendSpaceGenerated(class UBlendSpace** BlendSpace);
	void AssertColorNames();
	void AreSpawnerSublevelsLoaded(bool* ReturnValue);
	void ApplyRidingAttackExtraVelocity();
	void ApplyMutagen();
	void AnimNotifyMountedDino();
	void AllowWakingTame(class APlayerController* ForPC, bool* ReturnValue);
	bool AllowMountedWeaponry(bool* ReturnValue);
	class APrimalCharacter* AllowCarryCharacter(bool* ReturnValue);
	class AActor* AddToMeleeSwingHurtList(bool* ReturnValue);
	class UClass* AddSaddleCheat();
	bool AddPassenger(class APrimalCharacter* ACharacter, bool* ReturnValue);
	float AddedImprintingQuality();
	void AddDinoReferenceInLatchingStructure(class APrimalStructure** Structure);
};

// 0xB0 (0x3470 - 0x33C0)
// Class ShooterGame.PrimalBotCharacter
class APrimalBotCharacter : public APrimalDinoCharacter
{
public:
	class USkeletalMesh*                         AlternateSkeletalMesh;                             // 0x33C0(0x8)(ConstParm, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                AlternateAnimBP;                                   // 0x33C8(0x8)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         AlternateDinoRidingAnimation;                      // 0x33D0(0x8)(ConstParm, ExportObject, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         AlternateDinoRidingMoveAnimation;                  // 0x33D8(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         HasMeleeWeapon;                                    // 0x33E0(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_37B1[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> RideableDinoClasses;                               // 0x33E8(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsRiding;                                         // 0x33F8(0x1)(Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_37B3[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimSequence*                         DefaultDinoRidingAnimation;                        // 0x3400(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         DefaultDinoRidingMoveAnimation;                    // 0x3408(0x8)(ConstParm, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         UseAltAimOffsetAnimation;                          // 0x3410(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsStationary;                                     // 0x3411(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_37B4[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class APrimalDinoCharacter>   DinoBeingRidden;                                   // 0x3414(0x8)(BlueprintVisible, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsUsingAlternateMesh;                             // 0x341C(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_37B5[0x53];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalBotCharacter* GetDefaultObj();

	void OnRep_RidingDino();
	void IsUsingAlternateSkelMesh(bool* ReturnValue);
	void GetMinAttackRange(float* ReturnValue);
	void GetMaxAttackRange(float* ReturnValue);
	void GetDinoRidingMoveAnimation(class UAnimSequence** ReturnValue);
	void GetDinoRidingAnimation(class UAnimSequence** ReturnValue);
	class UAnimSequence* GetBotAnimSequenceOverride(class UAnimSequence** ReturnValue);
	void CurrentlyRiddenDino(class APrimalDinoCharacter** ReturnValue);
	void ClearRidingDino();
	class APrimalDinoCharacter* CanRideDino(bool* ReturnValue);
	class APrimalDinoCharacter* AttachToDino();
};

// 0x10 (0xC8 - 0xB8)
// Class ShooterGame.PrimalBotRidingComponent
class UPrimalBotRidingComponent : public UActorComponent
{
public:
	TWeakObjectPtr<class APrimalBotCharacter>    Rider;                                             // 0xB8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalBotCharacter>    Claimer;                                           // 0xC0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalBotRidingComponent* GetDefaultObj();

};

// 0xB8 (0x5D8 - 0x520)
// Class ShooterGame.PrimalEmitterSpawnable
class APrimalEmitterSpawnable : public AEmitter
{
public:
	class USceneComponent*                       RootTransformComp;                                 // 0x520(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       SoundToPlay;                                       // 0x528(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class UClass*                                CameraShake;                                       // 0x530(0x8)(ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	float                                        CameraShakeInnerRadius;                            // 0x538(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CameraShakeOuterRadius;                            // 0x53C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CameraShakeFalloff;                                // 0x540(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CameraShakeScaleMultiplier;                        // 0x544(0x4)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FDecalData                            DecalToSpawn;                                      // 0x548(0x20)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCameraShakeOrientTowardsEpicenter : 1;            // Mask: 0x1, PropSize: 0x10x568(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHighPrioritySound : 1;                            // Mask: 0x2, PropSize: 0x10x568(0x1)(Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShallowEmitterSpawnable : 1;                      // Mask: 0x4, PropSize: 0x10x568(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShallowEmitterDontSpawnOutOfView : 1;             // Mask: 0x8, PropSize: 0x10x568(0x1)(Edit, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowLoopingEmitter : 1;                          // Mask: 0x10, PropSize: 0x10x568(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceNoRotation : 1;                              // Mask: 0x20, PropSize: 0x10x568(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTickSoundInRangePlayback : 1;                     // Mask: 0x40, PropSize: 0x10x568(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWasActivated : 1;                                 // Mask: 0x80, PropSize: 0x10x568(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_296 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHasImpulseDataAvailable : 1;                      // Mask: 0x2, PropSize: 0x10x569(0x1)(ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_297 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_37BF[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ShallowEmitterDontSpawnOutOfViewCheckRadius;       // 0x56C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShallowEmitterOverrideSecondsBeforeInactive;       // 0x570(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ActivateSoundFadeInDuration;                       // 0x574(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DeactivateSoundFadeOutDuration;                    // 0x578(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShallowEmitterSpawnableMaxDistance;                // 0x57C(0x4)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDelayedDeactivation;                              // 0x580(0x1)(Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_37C1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          ColorParameter;                                    // 0x584(0x10)(BlueprintReadOnly, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_37C2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraComponent*                     NiagaraComponent;                                  // 0x598(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst)
	class AActor*                                SpawnedForActor;                                   // 0x5A0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ImpulseData;                                       // 0x5A8(0x18)(BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               HitLocation;                                       // 0x5C0(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalEmitterSpawnable* GetDefaultObj();

	float UpdateEmitter(class AActor* FromActor);
	void ToggleActivation(bool DoActivate);
	void StartDeactivation();
	void StartActivation();
	void SetupEmitter(class AActor* FromActor);
	void SetImpulseData(const struct FDamageEvent& DamageEvent, class APawn** InstigatingPawn);
	void PreActivation();
};

// 0x588 (0xB60 - 0x5D8)
// Class ShooterGame.PrimalBuff
class APrimalBuff : public APrimalEmitterSpawnable
{
public:
	float                                        DeactivationLifespan;                              // 0x5D8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  InstigatorAttachmentSocket;                        // 0x5DC(0x8)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  InstigatorAttachmentSocket_PlayerOverride;         // 0x5E4(0x8)(ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSlowInstigatorFalling : 1;                        // Mask: 0x1, PropSize: 0x10x5EC(0x1)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeactivateOnJump : 1;                             // Mask: 0x2, PropSize: 0x10x5EC(0x1)(BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventJump : 1;                                  // Mask: 0x4, PropSize: 0x10x5EC(0x1)(Edit, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDinoRiding : 1;                            // Mask: 0x8, PropSize: 0x10x5EC(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDinoDismount : 1;                          // Mask: 0x10, PropSize: 0x10x5EC(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_298 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_38BF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPNotifyPreventDismounting : 1;                // Mask: 0x1, PropSize: 0x10x5F0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceShowFloatingName : 1;                        // Mask: 0x2, PropSize: 0x10x5F0(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceHideFloatingName : 1;                        // Mask: 0x4, PropSize: 0x10x5F0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_299 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_38C0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bPreventCarryOrPassenger : 1;                      // Mask: 0x1, PropSize: 0x10x5F4(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeactivated : 1;                                  // Mask: 0x2, PropSize: 0x10x5F4(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesInstigator : 1;                               // Mask: 0x4, PropSize: 0x10x5F4(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFollowTarget : 1;                                 // Mask: 0x8, PropSize: 0x10x5F4(0x1)(ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideRightShoulderOnPlayer : 1;                // Mask: 0x10, PropSize: 0x10x5F4(0x1)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAddCharacterValues : 1;                           // Mask: 0x20, PropSize: 0x10x5F4(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyAddCharacterValuesUnderwater : 1;             // Mask: 0x40, PropSize: 0x10x5F4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableIfCharacterUnderwater : 1;                 // Mask: 0x80, PropSize: 0x10x5F4(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseInstigatorItem : 1;                            // Mask: 0x1, PropSize: 0x10x5F5(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyOnTargetStasis : 1;                        // Mask: 0x2, PropSize: 0x10x5F5(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAoETraceToTargets : 1;                            // Mask: 0x4, PropSize: 0x10x5F5(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAOEOnlyApplyOtherBuffToWildDinos : 1;             // Mask: 0x8, PropSize: 0x10x5F5(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAoEIgnoreDinosTargetingInstigator : 1;            // Mask: 0x10, PropSize: 0x10x5F5(0x1)(Edit, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAoEOnlyOnDinosTargetingInstigator : 1;            // Mask: 0x20, PropSize: 0x10x5F5(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBuffForceNoTick : 1;                              // Mask: 0x40, PropSize: 0x10x5F5(0x1)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBuffForceNoTickDedicated : 1;                     // Mask: 0x80, PropSize: 0x10x5F5(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCustomDepthStencilIgnoreHealth : 1;               // Mask: 0x1, PropSize: 0x10x5F6(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCompleteCustomDepthStencilOverride : 1;           // Mask: 0x2, PropSize: 0x10x5F6(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseActivateSoundFadeInDuration : 1;               // Mask: 0x4, PropSize: 0x10x5F6(0x1)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDinoIgnoreBuffPostprocessEffectWhenRidden : 1;    // Mask: 0x8, PropSize: 0x10x5F6(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPlayerIgnoreBuffPostprocessEffectWhenRidingDino : 1; // Mask: 0x10, PropSize: 0x10x5F6(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemoteForcedFlee : 1;                             // Mask: 0x20, PropSize: 0x10x5F6(0x1)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_29A : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_38C1[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RemoteForcedFleeDuration;                          // 0x5F8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38C2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               AoETraceToTargetsStartOffset;                      // 0x600(0x18)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AActor>                 Target;                                            // 0x618(0x8)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	TWeakObjectPtr<class UPrimalItem>            InstigatorItem;                                    // 0x620(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SlowInstigatorFallingAddZVelocity;                 // 0x628(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SlowInstigatorFallingDampenZVelocity;              // 0x62C(0x4)(Edit, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DeactivateAfterTime;                               // 0x630(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WeaponRecoilMultiplier;                            // 0x634(0x4)(ConstParm, ExportObject, Net, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReceiveDamageMultiplier;                           // 0x638(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MeleeDamageMultiplier;                             // 0x63C(0x4)(Edit, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DepleteInstigatorItemDurabilityPerSecond;          // 0x640(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ValuesToAddPerSecond[0xC];                         // 0x644(0x30)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38C3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FStatusValueModifierDescription       BuffDescription;                                   // 0x678(0x50)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CharacterAdd_DefaultHyperthermicInsulation;        // 0x6C8(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CharacterAdd_DefaultHypothermicInsulation;         // 0x6CC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CharacterMultiplier_ExtraWaterConsumptionMultiplier; // 0x6D0(0x4)(Edit, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CharacterMultiplier_ExtraFoodConsumptionMultiplier; // 0x6D4(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CharacterMultiplier_SubmergedOxygenDecreaseSpeed;  // 0x6D8(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ViewMinExposureMultiplier;                         // 0x6DC(0x4)(Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ViewMaxExposureMultiplier;                         // 0x6E0(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        XPtoAdd;                                           // 0x6E4(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        XPtoAddRate;                                       // 0x6E8(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        DinoColorizationPriority;                          // 0x6EC(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoColorizationInterpSpeed;                       // 0x6F0(0x4)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDinoRefreshColorization : 1;                 // Mask: 0x1, PropSize: 0x10x6F4(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideInventoryWeightMultipliers : 1;           // Mask: 0x2, PropSize: 0x10x6F4(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeactivateAfterAddingXP : 1;                      // Mask: 0x4, PropSize: 0x10x6F4(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_29B : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_38C5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FItemMultiplier>               OverrideInventoryItemClassWeightMultipliers;       // 0x6F8(0x10)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38C6[0x60];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bOnlyActivateSoundForInstigator : 1;               // Mask: 0x1, PropSize: 0x10x768(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAOEBuffCarnosOnly : 1;                            // Mask: 0x2, PropSize: 0x10x768(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCausesCryoSickness : 1;                           // Mask: 0x4, PropSize: 0x10x768(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bModifyMaxSpeed : 1;                               // Mask: 0x8, PropSize: 0x10x768(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisplayHUDProgressBar : 1;                        // Mask: 0x10, PropSize: 0x10x768(0x1)(ExportObject, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceUsePreventTargeting : 1;                     // Mask: 0x20, PropSize: 0x10x768(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceUsePreventTargetingTurret : 1;               // Mask: 0x40, PropSize: 0x10x768(0x1)(Edit, ExportObject, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideWeaponBob : 1;                          // Mask: 0x80, PropSize: 0x10x768(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPModifyPlayerBoneModifiers : 1;               // Mask: 0x1, PropSize: 0x10x769(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDediServerUseBPModifyPlayerBoneModifiers : 1;     // Mask: 0x2, PropSize: 0x10x769(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNonDedicatedPlayerPostAnimUpdate : 1;        // Mask: 0x4, PropSize: 0x10x769(0x1)(Edit, ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPIsCharacterHardAttached : 1;                 // Mask: 0x8, PropSize: 0x10x769(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoCharacterDetachment : 1;                        // Mask: 0x10, PropSize: 0x10x769(0x1)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoCharacterDetachmentIncludeRiding : 1;           // Mask: 0x20, PropSize: 0x10x769(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoCharacterDetachmentIncludeCarrying : 1;         // Mask: 0x40, PropSize: 0x10x769(0x1)(ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPInitializedCharacterAnimScriptInstance : 1;  // Mask: 0x80, PropSize: 0x10x769(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanBeCarried : 1;                            // Mask: 0x1, PropSize: 0x10x76A(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsePostAdjustDamage : 1;                          // Mask: 0x2, PropSize: 0x10x76A(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventFallDamage : 1;                            // Mask: 0x4, PropSize: 0x10x76A(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnInstigatorCapsuleComponentHit : 1;         // Mask: 0x8, PropSize: 0x10x76A(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_29C : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPOverrideCameraViewTarget : 1;                // Mask: 0x20, PropSize: 0x10x76A(0x1)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPForceCameraStyle : 1;                        // Mask: 0x40, PropSize: 0x10x76A(0x1)(Edit, ConstParm, BlueprintVisible, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPIsValidUnstasisActor : 1;                    // Mask: 0x80, PropSize: 0x10x76A(0x1)(ExportObject, Net, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideIsNetRelevantFor : 1;                // Mask: 0x1, PropSize: 0x10x76B(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventClearRiderOnDinoImmobilize : 1;            // Mask: 0x2, PropSize: 0x10x76B(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysShowBuffDescription : 1;                    // Mask: 0x4, PropSize: 0x10x76B(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_29D : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        SubmergedMaxSpeedModifier;                         // 0x76C(0x4)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UnsubmergedMaxSpeedModifier;                       // 0x770(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SubmergedMaxAccelerationModifier;                  // 0x774(0x4)(ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UnsubmergedMaxAccelerationModifier;                // 0x778(0x4)(ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SubmergedRotationRateModifier;                     // 0x77C(0x4)(ExportObject, Net, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UnsubmergedRotationRateModifier;                   // 0x780(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FrictionModifier;                                  // 0x784(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDamagePrimalCharacterStatusValueModifier> CharacterStatusValueModifiers;                     // 0x788(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38C7[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       BuffStartTime;                                     // 0x7A0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38C8[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bForcedOnSpectatorPlayerController;                // 0x7B0(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38C9[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftObjectPtr<class UMaterialInterface>     BuffPostProcessEffect;                             // 0x7B8(0x30)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AActor>>          PreventActorClassesTargeting;                      // 0x7E8(0x10)(Edit, ExportObject, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                PreventActorClassesTargetingRanges;                // 0x7F8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AMissionType*                          RelatedMission;                                    // 0x808(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHasRelatedMission;                                // 0x810(0x1)(Edit, BlueprintVisible, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38CA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bAOEApplyOtherBuffOnPlayers : 1;                   // Mask: 0x1, PropSize: 0x10x814(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAOEApplyOtherBuffOnDinos : 1;                     // Mask: 0x2, PropSize: 0x10x814(0x1)(ExportObject, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAOEApplyOtherBuffIgnoreSameTeam : 1;              // Mask: 0x4, PropSize: 0x10x814(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAOEApplyOtherBuffRequireSameTeam : 1;             // Mask: 0x8, PropSize: 0x10x814(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBuffDrawFloatingHUD : 1;                          // Mask: 0x10, PropSize: 0x10x814(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAddResetsBuffTime : 1;                            // Mask: 0x20, PropSize: 0x10x814(0x1)(BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAoEBuffAllowIfAlreadyBuffed : 1;                  // Mask: 0x40, PropSize: 0x10x814(0x1)(Edit, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNetResetBuffStart : 1;                            // Mask: 0x80, PropSize: 0x10x814(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bImmobilizeTarget : 1;                             // Mask: 0x1, PropSize: 0x10x815(0x1)(Edit, BlueprintVisible, ExportObject, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePlayerProne : 1;                             // Mask: 0x2, PropSize: 0x10x815(0x1)(Edit, ConstParm, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideBuffFromHUD : 1;                              // Mask: 0x4, PropSize: 0x10x815(0x1)(ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideTimerFromHUD : 1;                             // Mask: 0x8, PropSize: 0x10x815(0x1)(BlueprintReadOnly, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPAddMultiUseEntries : 1;                         // Mask: 0x10, PropSize: 0x10x815(0x1)(BlueprintVisible, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsBuffPersistent : 1;                             // Mask: 0x20, PropSize: 0x10x815(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPUseBumpedByPawn : 1;                            // Mask: 0x40, PropSize: 0x10x815(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPUseBumpedPawn : 1;                              // Mask: 0x80, PropSize: 0x10x815(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowBuffWhenInstigatorDead : 1;                  // Mask: 0x1, PropSize: 0x10x816(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNotifyDamage : 1;                                 // Mask: 0x2, PropSize: 0x10x816(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowBuffStasis : 1;                              // Mask: 0x4, PropSize: 0x10x816(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bApplyStatModifierToPlayers : 1;                   // Mask: 0x8, PropSize: 0x10x816(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bApplyStatModifierToDinos : 1;                     // Mask: 0x10, PropSize: 0x10x816(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventOnWildDino : 1;                            // Mask: 0x20, PropSize: 0x10x816(0x1)(Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventOnDino : 1;                                // Mask: 0x40, PropSize: 0x10x816(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventOnPlayer : 1;                              // Mask: 0x80, PropSize: 0x10x816(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventOnBigDino : 1;                             // Mask: 0x1, PropSize: 0x10x817(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventOnBossDino : 1;                            // Mask: 0x2, PropSize: 0x10x817(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventOnRobotDino : 1;                           // Mask: 0x4, PropSize: 0x10x817(0x1)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDisease : 1;                                    // Mask: 0x8, PropSize: 0x10x817(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventAddingOtherBuff : 1;                  // Mask: 0x10, PropSize: 0x10x817(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventRunning : 1;                          // Mask: 0x20, PropSize: 0x10x817(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_29E : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        PreventIfMovementMassGreaterThan;                  // 0x818(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38CB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class APrimalBuff>             AOEOtherBuffToApply;                               // 0x820(0x30)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AOEBuffRange;                                      // 0x850(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CharacterAOEBuffDamage;                            // 0x854(0x4)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CharacterAOEBuffResistance;                        // 0x858(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Maximum2DVelocityForStaminaRecovery;               // 0x85C(0x4)(OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyItemAdded : 1;                         // Mask: 0x1, PropSize: 0x10x860(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyItemQuantityUpdated : 1;               // Mask: 0x2, PropSize: 0x10x860(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyItemRemoved : 1;                       // Mask: 0x4, PropSize: 0x10x860(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAddReactivates : 1;                               // Mask: 0x8, PropSize: 0x10x860(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAoEApplyDamageAllTargetables : 1;                 // Mask: 0x10, PropSize: 0x10x860(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustCharacterMovementImpulse : 1;          // Mask: 0x20, PropSize: 0x10x860(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustImpulseFromDamage : 1;                 // Mask: 0x40, PropSize: 0x10x860(0x1)(ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetHUDElements : 1;                          // Mask: 0x80, PropSize: 0x10x860(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetCameraShakeScalar : 1;                    // Mask: 0x1, PropSize: 0x10x861(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDrawMissionDinoTargetHealthbars : 1;         // Mask: 0x2, PropSize: 0x10x861(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetWaypointsBuff : 1;                        // Mask: 0x4, PropSize: 0x10x861(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_29F : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_38CD[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UMaterialInterface*>            PostprocessBlendablesToExclude;                    // 0x868(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38CE[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class APrimalBuff>             BuffToGiveOnDeactivation;                          // 0x890(0x30)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalBuff>>     BuffClassesToCancelOnActivation;                   // 0x8C0(0x10)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalBuff>>     ActivePreventsBuffClasses;                         // 0x8D0(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalCharacter>> BuffRequiresOwnerClass;                            // 0x8E0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalCharacter>> BuffPreventsOwnerClass;                            // 0x8F0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        XPEarningMultiplier;                               // 0x900(0x4)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPSetupForInstigator;                          // 0x904(0x1)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPDeactivated;                                 // 0x905(0x1)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPOverrideBuffToGiveOnDeactivation;            // 0x906(0x1)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPCustomAllowAddBuff;                          // 0x907(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPInformDamageCauserOfBuffAdded;               // 0x908(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPActivated : 1;                               // Mask: 0x1, PropSize: 0x10x909(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPHandleOnStartFire : 1;                       // Mask: 0x2, PropSize: 0x10x909(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPHandleOnStartAltFire : 1;                    // Mask: 0x4, PropSize: 0x10x909(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPHandleOnStopAltFire : 1;                     // Mask: 0x8, PropSize: 0x10x909(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventFlight : 1;                           // Mask: 0x10, PropSize: 0x10x909(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRequireController : 1;                            // Mask: 0x20, PropSize: 0x10x909(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontPlayInstigatorActiveSoundOnDino : 1;          // Mask: 0x40, PropSize: 0x10x909(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAddExtendBuffTime : 1;                            // Mask: 0x80, PropSize: 0x10x909(0x1)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseTickingDeactivation : 1;                       // Mask: 0x1, PropSize: 0x10x90A(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheckPreventInput : 1;                            // Mask: 0x2, PropSize: 0x10x90A(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPDrawBuffStatusHUD : 1;                          // Mask: 0x4, PropSize: 0x10x90A(0x1)(ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bStatusComponentUsingExtendedHUDText : 1;          // Mask: 0x8, PropSize: 0x10x90A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableStaticPathing : 1;                          // Mask: 0x10, PropSize: 0x10x90A(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHUDFormatTimerAsTimecode : 1;                     // Mask: 0x20, PropSize: 0x10x90A(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2A0 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_38D1[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               StaticPathingDestination;                          // 0x910(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38D2[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPPreventThrowingItem : 1;                     // Mask: 0x1, PropSize: 0x10x930(0x1)(Edit, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventInputDoesOffset : 1;                       // Mask: 0x2, PropSize: 0x10x930(0x1)(BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNotifyExperienceGained : 1;                       // Mask: 0x4, PropSize: 0x10x930(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyTickWhenVisible : 1;                          // Mask: 0x8, PropSize: 0x10x930(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPAdjustStatusValueModification : 1;              // Mask: 0x10, PropSize: 0x10x930(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2A1 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPNotifyOtherBuffActivated : 1;                // Mask: 0x40, PropSize: 0x10x930(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyOtherBuffDeactivated : 1;              // Mask: 0x80, PropSize: 0x10x930(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventFirstPerson : 1;                      // Mask: 0x1, PropSize: 0x10x931(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAddUnderwaterCharacterStatusValues : 1;      // Mask: 0x2, PropSize: 0x10x931(0x1)(ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventInstigatorAttack : 1;                      // Mask: 0x4, PropSize: 0x10x931(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnInstigatorMovementModeChangedNotify : 1;   // Mask: 0x8, PropSize: 0x10x931(0x1)(BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventInstigatorMovementMode : 1;           // Mask: 0x10, PropSize: 0x10x931(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideTalkerCharacter : 1;                 // Mask: 0x20, PropSize: 0x10x931(0x1)(Edit, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBuffHandleInstigatorMultiUseEntries : 1;          // Mask: 0x40, PropSize: 0x10x931(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventInstigatorAttack : 1;                 // Mask: 0x80, PropSize: 0x10x931(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventOnStartJump : 1;                      // Mask: 0x1, PropSize: 0x10x932(0x1)(Edit, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2A2 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_38D3[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        BPNotifyActivationToOtherBuffClasses;              // 0x938(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimalBuffPersistentData*             MyBuffPersistentData;                              // 0x948(0x8)(Edit, ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                BuffPersistentDataClass;                           // 0x950(0x8)(ConstParm, BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMaxStatScaler>                MaxStatScalers;                                    // 0x958(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AActor>                 BuffDamageCauser;                                  // 0x968(0x8)(Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class USoundBase*                            ExtraActivationSoundToPlay;                        // 0x970(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPersistentBuffSurvivesLevelUp;                    // 0x978(0x1)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38D5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AoEApplyDamage;                                    // 0x97C(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AoEApplyDamageInterval;                            // 0x980(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38D6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                AoEApplyDamageType;                                // 0x988(0x8)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             ForceNetworkSpatializationMaxLimitBuffType;        // 0x990(0x30)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ForceNetworkSpatializationMaxLimitBuffTypeFlag;    // 0x9C0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ForceNetworkSpatializationBuffMaxLimitNum;         // 0x9C4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ForceNetworkSpatializationBuffMaxLimitRange;       // 0x9C8(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InsulationRange;                                   // 0x9CC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HyperThermiaInsulation;                            // 0x9D0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HypoThermiaInsulation;                             // 0x9D4(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               AoEBuffLocOffset;                                  // 0x9D8(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AActor>>          AoEClassesToInclude;                               // 0x9F0(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AActor>>          AoEClassesToExclude;                               // 0xA00(0x10)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPExcludeAoEActor;                             // 0xA10(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOverrideBuffDescription;                          // 0xA11(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOverrideBuffType;                                 // 0xA12(0x1)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyTickIfPlayerCharacter;                        // 0xA13(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyTickWhenPossessed;                            // 0xA14(0x1)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDestroyWhenUnpossessed;                           // 0xA15(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38D7[0xA];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OnlyForInstigatorSoundFadeInTime;                  // 0xA20(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBuffTickServer;                                // 0xA24(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBuffTickClient;                                // 0xA25(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38D8[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BuffTickServerMaxTime;                             // 0xA28(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BuffTickServerMinTime;                             // 0xA2C(0x4)(Edit, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BuffTickClientMaxTime;                             // 0xA30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BuffTickClientMinTime;                             // 0xA34(0x4)(Edit, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseRemoteClientTick;                              // 0xA38(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38D9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BuffTickRemoteClientMaxTime;                       // 0xA3C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BuffTickRemoteClientMinTime;                       // 0xA40(0x4)(Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bContinueTickingServerAfterDeactivate;             // 0xA44(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bContinueTickingClientAfterDeactivate;             // 0xA45(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38DA[0x26];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        AddBuffMaxNumStacks;                               // 0xA6C(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            DeactivatedSound;                                  // 0xA70(0x8)(BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDeactivatedSoundOnlyLocal;                        // 0xA78(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableBloom;                                     // 0xA79(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bBPModifyCharacterFOV;                             // 0xA7A(0x1)(ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38DB[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PostProcessInterpSpeedDown;                        // 0xA7C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PostProcessInterpSpeedUp;                          // 0xA80(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TPVCameraSpeedInterpolationMultiplier;             // 0xA84(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsCarryBuff;                                      // 0xA88(0x1)(ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38DC[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FPostProcessMaterialAdjuster>  PostprocessMaterialAdjusters;                      // 0xA90(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideCharacterWalkVelocity : 1;              // Mask: 0x1, PropSize: 0x10xAA0(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideCharacterSwimmingVelocity : 1;          // Mask: 0x2, PropSize: 0x10xAA0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideCharacterNewFallVelocity : 1;           // Mask: 0x4, PropSize: 0x10xAA0(0x1)(ConstParm, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideCharacterFlyingVelocity : 1;            // Mask: 0x8, PropSize: 0x10xAA0(0x1)(BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceOverrideCharacterWalkingVelocity : 1;        // Mask: 0x10, PropSize: 0x10xAA0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceOverrideCharacterSwimmingVelocity : 1;       // Mask: 0x20, PropSize: 0x10xAA0(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceOverrideCharacterFlyingVelocity : 1;         // Mask: 0x40, PropSize: 0x10xAA0(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceOverrideCharacterNewFallVelocity : 1;        // Mask: 0x80, PropSize: 0x10xAA0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideCharacterLanding : 1;                     // Mask: 0x1, PropSize: 0x10xAA1(0x1)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideCharacterMovementInput : 1;               // Mask: 0x2, PropSize: 0x10xAA1(0x1)(EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2A3 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_38DE[0xE];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AOEBuffIntervalMin;                                // 0xAB0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AOEBuffIntervalMax;                                // 0xAB4(0x4)(BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaximumVelocityZForSlowingFall;                    // 0xAB8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38DF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bAllowMultiUseEntriesFromSelf : 1;                 // Mask: 0x1, PropSize: 0x10xAC0(0x1)(BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2A4 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_38E0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPHandleOnStopFire : 1;                        // Mask: 0x1, PropSize: 0x10xAC4(0x1)(OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceCrosshair : 1;                               // Mask: 0x2, PropSize: 0x10xAC4(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventLogoutSleeping : 1;                        // Mask: 0x4, PropSize: 0x10xAC4(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseInterceptInstigatorPlayerEmote : 1;            // Mask: 0x8, PropSize: 0x10xAC4(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTriggerBPStasis : 1;                              // Mask: 0x10, PropSize: 0x10xAC4(0x1)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTriggerBPUnstasis : 1;                            // Mask: 0x20, PropSize: 0x10xAC4(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2A5 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	bool                                         bAddTPVCameraOffset;                               // 0xAC5(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOverrideTPVCameraOffset;                          // 0xAC6(0x1)(Edit, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38E1[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               TPVCameraOffset;                                   // 0xAC8(0x18)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOverrideTPVCameraOffsetMultiplier;                // 0xAE0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38E2[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               TPVCameraOffsetMultiplier;                         // 0xAE8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseCenteredTPVCamera;                             // 0xB00(0x1)(Edit, ConstParm, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBlueprintAnimNotifications;                    // 0xB01(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetGravity : 1;                              // Mask: 0x1, PropSize: 0x10xB02(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnOwnerMassTeleportEvent : 1;                // Mask: 0x2, PropSize: 0x10xB02(0x1)(Edit, ConstParm, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPShouldForceOwnerDedicatedMovementTickPerFrame : 1; // Mask: 0x4, PropSize: 0x10xB02(0x1)(ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2A6 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_38E4[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bAllowOnlyCustomFallDamage : 1;                    // Mask: 0x1, PropSize: 0x10xB04(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2A7 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_38E5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPGetMoveAnimRate : 1;                         // Mask: 0x1, PropSize: 0x10xB08(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideTargetingDesire : 1;                 // Mask: 0x2, PropSize: 0x10xB08(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBuffPreventsApplyingLevelUps : 1;                 // Mask: 0x4, PropSize: 0x10xB08(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBuffPreSerializeForInstigator : 1;                // Mask: 0x8, PropSize: 0x10xB08(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseFinalAdjustDamage : 1;                         // Mask: 0x10, PropSize: 0x10xB08(0x1)(ConstParm, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideWaterJumpVelocity : 1;               // Mask: 0x20, PropSize: 0x10xB08(0x1)(Edit, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2A8 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_38E6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBP_OnOwnerDealtDamage : 1;                     // Mask: 0x1, PropSize: 0x10xB0C(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseGetGravityZScale : 1;                          // Mask: 0x2, PropSize: 0x10xB0C(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_AdjustDamageEx : 1;                         // Mask: 0x4, PropSize: 0x10xB0C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OverrideTerminalVelocity : 1;               // Mask: 0x8, PropSize: 0x10xB0C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBuffOverrideFinalWanderLocation : 1;           // Mask: 0x10, PropSize: 0x10xB0C(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bModifyMaxAcceleration : 1;                        // Mask: 0x20, PropSize: 0x10xB0C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bModifyRotationRate : 1;                           // Mask: 0x40, PropSize: 0x10xB0C(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bModifyFriction : 1;                               // Mask: 0x80, PropSize: 0x10xB0C(0x1)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableFootstepsParticles : 1;                    // Mask: 0x1, PropSize: 0x10xB0D(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowAddingWithoutController : 1;            // Mask: 0x2, PropSize: 0x10xB0D(0x1)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowWhileBuried : 1;                        // Mask: 0x4, PropSize: 0x10xB0D(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBP_OnOwnerTeleported : 1;                      // Mask: 0x8, PropSize: 0x10xB0D(0x1)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustRadialDamage : 1;                      // Mask: 0x10, PropSize: 0x10xB0D(0x1)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseForcedBuffAimOverride : 1;                     // Mask: 0x20, PropSize: 0x10xB0D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventTekArmorBuffs : 1;                    // Mask: 0x40, PropSize: 0x10xB0D(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBuffPreventsInventoryAccess : 1;                  // Mask: 0x80, PropSize: 0x10xB0D(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReactivateWithNewDamageCauser : 1;                // Mask: 0x1, PropSize: 0x10xB0E(0x1)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDinoNameColorOverride : 1;                   // Mask: 0x2, PropSize: 0x10xB0E(0x1)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBuffPreventsCryo : 1;                             // Mask: 0x4, PropSize: 0x10xB0E(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBuffOverrideInventoryAccessInput : 1;          // Mask: 0x8, PropSize: 0x10xB0E(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bListenForInput : 1;                               // Mask: 0x10, PropSize: 0x10xB0E(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInterceptUseAction : 1;                           // Mask: 0x20, PropSize: 0x10xB0E(0x1)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInterceptWeaponToggle : 1;                        // Mask: 0x40, PropSize: 0x10xB0E(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventNotifySound : 1;                      // Mask: 0x80, PropSize: 0x10xB0E(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBuffDrawFloatingHUDRemotePlayers : 1;             // Mask: 0x1, PropSize: 0x10xB0F(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseConsolidatedMultiUseWheel : 1;                 // Mask: 0x2, PropSize: 0x10xB0F(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2A9 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        CharacterMultiplier_DefaultExtraDamageMultiplier;  // 0xB10(0x4)(Edit, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAlwaysAllowBuff : 1;                         // Mask: 0x1, PropSize: 0x10xB14(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceSelfTick : 1;                                // Mask: 0x2, PropSize: 0x10xB14(0x1)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceInstigatorTick : 1;                          // Mask: 0x4, PropSize: 0x10xB14(0x1)(ConstParm, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSkipInstigatorTick : 1;                           // Mask: 0x8, PropSize: 0x10xB14(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2AA : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAllowTurretsToTargetInstigatorIfTraceHitsBuff : 1; // Mask: 0x40, PropSize: 0x10xB14(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsHighRiskMissionBuff : 1;                        // Mask: 0x80, PropSize: 0x10xB14(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38E7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        StaminaDrainMultiplier;                            // 0xB18(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38E8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          DisabledWeaponTags;                                // 0xB20(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPGetCrosshairColor;                           // 0xB30(0x1)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPGetPlayerFootStepSound;                      // 0xB31(0x1)(Edit, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPModifyArmorValue;                            // 0xB32(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowMammalIncubationOptions;                      // 0xB33(0x1)(ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtendBuffTimeOverride;                            // 0xB34(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AdditionalRidingDistance;                          // 0xB38(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38E9[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPPreClaimWildFollower : 1;                    // Mask: 0x1, PropSize: 0x10xB44(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetBuffLevelUpStatOverride : 1;              // Mask: 0x2, PropSize: 0x10xB44(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPBuffKilledSomethingEvent : 1;                // Mask: 0x4, PropSize: 0x10xB44(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2AB : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_38EA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FBuffMPCAdjuster>              MPCAdjusters;                                      // 0xB48(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bBuffHidesNonWeaponHUD;                            // 0xB58(0x1)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNofityMontagePlay : 1;                       // Mask: 0x1, PropSize: 0x10xB59(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnTamedWildDino : 1;                         // Mask: 0x2, PropSize: 0x10xB59(0x1)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38EB[0x6];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalBuff* GetDefaultObj();

	float UpdateStaticPathingDestination(const struct FVector& LocOverride, float RandomOffsetMultiplier, bool OrientRandOffsetByRotation, struct FVector* ReturnValue);
	void UpdateBuffPersistentData();
	bool UpdateBuffLifetime();
	bool StaticAddBuff(class UClass* BuffClass, class APrimalCharacter* ForCharacter, class APrimalBuff** ReturnValue);
	void ShouldUseAutonomousCorrectionOffset(bool* ReturnValue);
	void ShouldForceOwnerDedicatedMovementTickPerFrame(bool* ReturnValue);
	void SetValueToAddPerSecond(enum class EPrimalCharacterStatusValue StatusValueType, float Value);
	void SetupForInstigator();
	bool SetGestationMonitoringTarget(class APrimalDinoCharacter* ForTarget);
	class AActor* SetBuffCauser();
	void ServerRequestRelatedMissionData();
	float ResetServerBuffTick();
	float ResetClientBuffTick();
	void ResetBuffStart(bool* ReturnValue);
	float ReduceBuffTime(bool* ReturnValue);
	void PreventJump(bool* ReturnValue);
	void PreventInstigatorMovementMode(enum class EMovementMode* NewMovementMode, uint8* NewCustomMode, bool* ReturnValue);
	int32 PreventInstigatorAttack(bool* ReturnValue);
	void PreventBlockingWithShield(bool* ReturnValue);
	class AActor* PreventActorTargeting(bool* ReturnValue);
	void OnOwnerTeleported();
	void OnInputEvent(class APrimalCharacter** ForPrimalCharacter, enum class EPrimalCharacterInputType InputType);
	void OnCapsuleHitCallback(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, struct FVector* NormalImpulse, const struct FHitResult& Hit);
	void OnBuffLifetimeUpdated();
	class AActor* NotifyDamage();
	void NotifyBumpedPawn(class APrimalCharacter* BumpedPawn);
	class APrimalCharacter* NotifyBumpedByPawn();
	void NetSyncBuffLifetime();
	void NetResetBuffStart();
	void NetDeactivate();
	float Multi_SyncBuffLifetime();
	void IsOwningClient(bool* ReturnValue);
	class UAnimMontage* InterceptInstigatorPlayerEmoteAnim(bool* ReturnValue);
	void InstigatorDie();
	void HideBuffFromHUD(bool* ReturnValue);
	class FString HandleBuffAnimNotify();
	void GetValueToAddPerSecond(enum class EPrimalCharacterStatusValue StatusValueType, float* ReturnValue);
	void GetUniqueName(class FString* ReturnValue);
	void GetTimeLeft(float* ReturnValue);
	void GetRemainingTime(float* ReturnValue);
	float GetOverrideWaterJumpVelocity(float* ReturnValue);
	void GetInstigatorPlayerController(class APlayerController** ReturnValue);
	void GetHUDProgressBarPercent(float* ReturnValue);
	bool GetForcedBuffAimOverride(struct FRotator* ReturnValue);
	void GetEnabledGestationMonitoringTargets(TArray<class APrimalDinoCharacter*>* ReturnValue);
	void GetDebugInfoString(class FString* ReturnValue);
	void GetDeactivationTime(double* ReturnValue);
	struct FVector GetCustomTooltip(class UClass** ReturnValue);
	void GetBuffType(int32* ReturnValue);
	void GetBuffTickServerDeltaTime(float* ReturnValue);
	void GetBuffTickClientDeltaTime(float* ReturnValue);
	void GetBuffPostprocessMaterial(class UMaterialInstanceDynamic** ReturnValue);
	void GetBuffPostprocessIntensity(float* ReturnValue);
	void GetBuffDescription(struct FStatusValueModifierDescription* ReturnValue);
	float ExtendBuffTime(bool* ReturnValue);
	float DrawBuffFloatingHUD();
	float DoTeleporterHaptics(struct FVector* Location);
	class AShooterCharacter* DinoInstigatorReceivedRider();
	void DinoInstigatorClearedRider();
	bool ClientReceiveRelatedMissionData();
	float BuffTickServer();
	float BuffTickClient();
	class AActor* BuffPostAdjustDamage(float* Damage, struct FHitResult* HitInfo, class UClass** TheDamgeType);
	bool BuffOverrideInventoryAccessInput(bool* ReturnValue);
	void BuffOverrideFinalWanderLocation(struct FVector* OutVec, bool* ReturnValue);
	class AActor* BuffAdjustDamage(float* Damage, struct FHitResult* HitInfo, class UClass** TheDamgeType, float* ReturnValue);
	void BPUnstasis();
	void BPStasis();
	void BPShouldForceOwnerDedicatedMovementTickPerFrame(bool* ReturnValue);
	void BPSetupForInstigator(class AActor* ForInstigator);
	void BPResetBuffStart();
	class AActor* BPReactivateWithDamageCauser(class AActor* ForInstigator);
	class UPrimalItem* BPPreventThrowingItem(bool* ReturnValue);
	void BPPreventTekArmorBuffs(TArray<class FName>* ReturnValue);
	void BPPreventRunning(bool* ReturnValue);
	void BPPreventRidingInstigator(class APrimalCharacter** ForPawn, bool* ReturnValue);
	void BPPreventOnStartJump(bool* ReturnValue);
	class USoundBase* BPPreventNotifySound(bool* ReturnValue);
	void BPPreventInstigatorMovementMode(enum class EMovementMode* NewMovementMode, uint8* NewCustomMode, bool* ReturnValue);
	int32 BPPreventInstigatorAttack(bool* ReturnValue);
	void BPPreventflight(bool* ReturnValue);
	void BPPreventFirstPerson(bool* ReturnValue);
	void BPPreventCharacterStatusValueModifiers(class APrimalCharacter* ForInstigator, bool* ReturnValue);
	struct FVector BPPreventCharacterLanding(const struct FVector& ImpactPoint, bool* ReturnValue);
	class UClass* BPPreventAddingOtherBuff(bool* ReturnValue);
	void BPPreSetupForInstigator(class AActor* ForInstigator);
	bool BPPreSerializeForInstigator();
	void BPPreClaimWildFollower(class AShooterPlayerController** ByPC);
	struct FVector BPOverrideWeaponBob(struct FVector* ReturnValue);
	void BPOverrideTargetingDesire(class AActor* ForTarget, float ForTargetingDesireValue, float* ReturnValue);
	void BPOverrideTalkerCharacter(class APrimalCharacter** ReturnValue);
	class APlayerController* BPOverrideRightShoulderOnPlayer(bool* ReturnValue);
	struct FVector BPOverrideIsNetRelevantFor(class AActor** Viewer, bool* ReturnValue);
	float BPOverrideCharacterNewFallVelocity(struct FVector* InitialVelocity, struct FVector* ReturnValue);
	struct FRotator BPOverrideCameraViewTarget(class FName* CurrentCameraMode, struct FVector* DesiredCameraLocation, struct FRotator* DesiredCameraRotation, float* DesiredFOV, bool* bOverrideCameraLocation, bool* bOverrideCameraRotation, bool* bOverrideCameraFOV, float* CameraFOV);
	void BPOverrideBuffToGiveOnDeactivation(class UClass** ReturnValue);
	class APrimalDinoCharacter* BPOnTamedWildDino();
	class FName BPOnPreventedFiringDisabledWeapon(class AShooterWeapon** Weapon);
	void BPOnOwnerMassTeleportEvent(enum class EMassTeleportState EventState, class APrimalCharacter* TeleportInitiatedByChar);
	void BPOnInstigatorMovementModeChangedNotify(enum class EMovementMode PrevMovementMode, uint8 PreviousCustomMode, enum class EMovementMode* NewMovementMode, uint8* NewCustomMode);
	void BPOnInstigatorCapsuleComponentHit(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, struct FVector* NormalImpulse, const struct FHitResult& Hit);
	void BPOnInputEvent(enum class EPrimalCharacterInputType InputType);
	void BPNotifyPreventDismounting(class APrimalDinoCharacter** FromDino);
	class APrimalBuff* BPNotifyOtherBuffDeactivated();
	class APrimalBuff* BPNotifyOtherBuffActivatedToThisBuffClass();
	class APrimalBuff* BPNotifyOtherBuffActivated();
	class UPrimalItem* BPNotifyItemRemoved();
	int32 BPNotifyItemQuantityUpdated();
	bool BPNotifyItemAdded();
	enum class EXPType BPNotifyExperienceGained();
	void BPNonDedicatedPlayerPostAnimUpdate();
	class UAnimMontage* BPNofityMontagePlay();
	TArray<struct FBoneModifier> BPModifyPlayerBoneModifiers(TArray<struct FBoneModifier>* ReturnValue);
	float BPModifyArmorValue(float* ReturnValue);
	void BPIsValidUnStasisCaster(bool* ReturnValue);
	void BPIsCharacterHardAttached(bool* ReturnValue);
	void BPInterceptWeaponToggle(bool* ReturnValue);
	void BPInterceptUseAction(bool* ReturnValue);
	void BPInstigatorUnpossessed();
	bool BPInstigatorSleeped();
	void BPInstigatorReceivedKillingDamage();
	void BPInstigatorPossessed(class AController* ByController);
	void BPInstigatorLocalPossessed(class AShooterPlayerController* ByController);
	void BPInstigatorDied();
	void BPInitializedCharacterAnimScriptInstance();
	class AActor* BPInformDamageCauserOfBuffAdded(class APrimalCharacter* ForCharacter, bool* ReturnValue);
	void BPHandleOnStopFire(bool bFromGamepad);
	void BPHandleOnStopAltFire(bool bFromGamepad);
	void BPHandleOnStartFire(bool bFromGamepad);
	void BPHandleOnStartAltFire(bool bFromGamepad);
	void BPGetWaypointsBuff(TArray<struct FPointOfInterestData_ForCompanion>* IndicatorsOut);
	void BPGetPlayerFootStepSound(class USoundCue** ReturnValue);
	void BPGetMoveAnimRate(float* ReturnValue);
	void BPGetHUDElements(class APlayerController* ForPC, TArray<struct FHUDElement>* OutElements);
	float BPGetGravityZScale(float* ReturnValue);
	struct FColor BPGetDinoNameColorOverride(struct FColor* ReturnValue);
	void BPGetDebugInfoString(class FString* ReturnValue);
	void BPGetCrosshairColor(struct FColor* ReturnValue);
	void BPGetBabyImprintingSpeedMultiplier(float* ReturnValue);
	int32 BPForceDinoNameTargetingTeamOverride(int32* ReturnValue);
	void BPForceCameraStyle(class APrimalCharacter** ForViewTarget, enum class ECameraStyle* ReturnValue);
	class AController* BPFinalAdjustDamage(float* Damage, struct FHitResult* HitInfo, class AActor** InDamageCauser, class UClass** TheDamgeType, float* ReturnValue);
	class AActor* BPExcludeAoEActor(bool* ReturnValue);
	float BPDrawBuffStatusHUD();
	TArray<struct FLinearColor> BPDinoRefreshColorization();
	void BPDeactivated(class AActor* ForInstigator);
	void BPDeactivate();
	class AActor* BPCustomAllowAddBuff(class APrimalCharacter* ForCharacter, bool* ReturnValue);
	void BPCheckPreventInput(enum class EPrimalCharacterInputType InputType, bool* ReturnValue);
	void BPCharacterDetach();
	void BPCanBeCarried(class APrimalCharacter* ByCarrier, bool* ReturnValue);
	bool BPBypassPreventDinoDismount(bool* bCancelForceLand, bool* SpawnDinoDefaultController, int32* OverrideUnboardDirection, bool* bForceEvenIfBuffPreventsClear, bool* bFromUse, bool* ReturnValue);
	void BPBuffPreventUploading(bool* ReturnValue);
	void BPBuffKilledSomethingEvent(class APrimalCharacter* KilledTarget);
	float BPBPGetCameraShakeScalar(float* ReturnValue);
	class UAnimNotifyState* BPAnimNotifyCustomState_End(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);
	class UAnimNotifyState* BPAnimNotifyCustomState_Begin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);
	class UAnimNotify* BPAnimNotifyCustomEvent(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);
	bool BPAdjustStatusValueModification(float* ReturnValue);
	struct FVector BPAdjustRadialDamage(float* CurrentDamage, const struct FRadialDamageEvent& DamageEvent, float* ReturnValue);
	class AActor* BPAdjustImpulseFromDamage(struct FVector* DesiredImpulse, float* DamageTaken, struct FDamageEvent* TheDamageEvent, class APawn** PawnInstigator, bool* bIsPointDamage, struct FHitResult* PointHitInfo, struct FVector* ReturnValue);
	class AController* BPAdjustDamage_Ex(float* Damage, struct FHitResult* HitInfo, struct FVector* ImpulseDir, class AActor** InDamageCauser, class UClass** TheDamgeType, float* ReturnValue);
	bool BPAdjustCharacterMovementImpulse(float* MassScaleImpulseExponent, bool* bOverrideMaxImpulseZ, struct FVector* ReturnValue);
	void BPActivated(class AActor* ForInstigator);
	void BP_OverrideTerminalVelocity(float* ReturnValue);
	void BP_OverrideMoveRightInput(float* CurrentInput, float* ReturnValue);
	void BP_OverrideMoveForwardInput(float* CurrentInput, float* ReturnValue);
	float BP_OverrideCharacterWalkingVelocity(struct FVector* InitialVelocity, struct FVector* ReturnValue);
	float BP_OverrideCharacterSwimmingVelocity(struct FVector* InitialVelocity, float* FluidFriction, float* NetBuoyancy, struct FVector* ReturnValue);
	float BP_OverrideCharacterFlyingVelocity(struct FVector* InitialVelocity, struct FVector* ReturnValue);
	void BP_OnOwnerTeleported();
	float BP_OnOwnerDealtDamage(class AActor** DamagedActor, const struct FDamageEvent& DamageEvent);
	void BP_OnBuffLifetimeUpdated();
	void BP_ModifyCharacterFOV(float* InFOV, float* ReturnValue);
	float ApplyPhysicsImpulses();
	void AllowPostProcessEffect(bool* ReturnValue);
	class UClass* AddDamageStatusValueModifier(class APrimalCharacter** AddToCharacter);
	void AddBuffLifetime(float* AdditionalLifetime);
};

// 0x20 (0x48 - 0x28)
// Class ShooterGame.PrimalBuffPersistentData
class UPrimalBuffPersistentData : public UObject
{
public:
	bool                                         bPermanentlyPersist;                               // 0x28(0x1)(Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38F5[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ForPrimalBuffClass;                                // 0x30(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ForPrimalBuffClassString;                          // 0x38(0x10)(Edit, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalBuffPersistentData* GetDefaultObj();

};

// 0x20 (0x68 - 0x48)
// Class ShooterGame.PrimalBuffPersistentData_MissionData
class UPrimalBuffPersistentData_MissionData : public UPrimalBuffPersistentData
{
public:
	class AMissionType*                          ActiveMission;                                     // 0x48(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        ActiveMissionIndex;                                // 0x50(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38F7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSerializedMissionData>        MissionData;                                       // 0x58(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalBuffPersistentData_MissionData* GetDefaultObj();

};

// 0x960 (0x14C0 - 0xB60)
// Class ShooterGame.PrimalBuff_Companion
class APrimalBuff_Companion : public APrimalBuff
{
public:
	class USceneComponent*                       CompanionRoot;                                     // 0xB60(0x8)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USkeletalMeshComponentWithSoftRef*     CompanionMeshComp;                                 // 0xB68(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USphereComponent*                      CompanionUseSphereComp;                            // 0xB70(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AShooterCharacter>      MyPlayer;                                          // 0xB78(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AShooterPlayerController> MyPC;                                              // 0xB80(0x8)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDebugCompanion : 1;                               // Mask: 0x1, PropSize: 0x10xB88(0x1)(Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsOrbitingPointOfInterest : 1;                    // Mask: 0x2, PropSize: 0x10xB88(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasReachedPointOrbit : 1;                         // Mask: 0x4, PropSize: 0x10xB88(0x1)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2AC : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3929[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReachPointOrbitWithinDist;                         // 0xB8C(0x4)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReactionDialogVolumeMultiplier;                    // 0xB90(0x4)(ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CompanionViewDot;                                  // 0xB94(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundAttenuation*                     CompanionSoundAttenuation;                         // 0xB98(0x8)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultMissionCompanionReactionData;               // 0xBA0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              CurrentCompanionReactionVFX;                       // 0xBA8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       CurrentCompanionReactionSFX;                       // 0xBB0(0x8)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPointOfInterestData_ForCompanion> CurrentPointsOfInterest;                           // 0xBB8(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECompanionState                   CompanionState_Current;                            // 0xBC8(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECompanionState                   CompanionState_Previous;                           // 0xBC9(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_392A[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FCompanionReactionData>        ReactionStack;                                     // 0xBD0(0x10)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UMaterialInterface*>            DialogueIconOverrideStack;                         // 0xBE0(0x10)(BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                CurrentIDStack;                                    // 0xBF0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CurrentFocusedLocation;                            // 0xC00(0x18)(BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_392B[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPointOfInterestData_ForCompanion     CurrentFocusedPointData;                           // 0xC20(0x4E0)(Edit, ConstParm, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FCompanionEventData                   CurrentEventData;                                  // 0x1100(0x50)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                CurrentEventActor;                                 // 0x1150(0x8)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LastPointTag_StartOrbit;                           // 0x1158(0x8)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LastPointTag_ReachedOrbit;                         // 0x1160(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastPlayedReactionNetworkTime;                     // 0x1168(0x8)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowsHexagonsInInventory : 1;                     // Mask: 0x1, PropSize: 0x10x1170(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableDebugReactions : 1;                         // Mask: 0x2, PropSize: 0x10x1170(0x1)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2AD : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_392C[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FCompanionReactionData                PreviouslyPlayedReaction;                          // 0x1178(0xB0)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontPlayEnglishLinesAsLocalizationFallback : 1;   // Mask: 0x1, PropSize: 0x10x1228(0x1)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2AE : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_392D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        FullyTranslatedLanguages;                          // 0x1230(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                HUDOverlayToolTipWidgetExtended;                   // 0x1240(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                ReactionExplorerNotesToUnlock;                     // 0x1248(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_392E[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            AsyncLoadedDialogueAnimTexture;                    // 0x1270(0x8)(Edit, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             AsyncLoadedSoundCue;                               // 0x1278(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundWave*                            AsyncLoadedSoundWave;                              // 0x1280(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AnimTextureParamName;                              // 0x1288(0x8)(ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AnimTextureStartTimeParamName;                     // 0x1290(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AnimTextureDurationParamName;                      // 0x1298(0x8)(Edit, ExportObject, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AnimTextureDurationOffset;                         // 0x12A0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsAwaitingLoadedTexture : 1;                      // Mask: 0x1, PropSize: 0x10x12A4(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasFinishedLoadingTexture : 1;                    // Mask: 0x2, PropSize: 0x10x12A4(0x1)(Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsAwaitingLoadedSoundCue : 1;                     // Mask: 0x4, PropSize: 0x10x12A4(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasFinishedLoadingSoundWave : 1;                  // Mask: 0x8, PropSize: 0x10x12A4(0x1)(Edit, ConstParm, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsAwaitingLoadedSoundWave : 1;                    // Mask: 0x10, PropSize: 0x10x12A4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsAwaitingFallbackSubtitleAudio : 1;              // Mask: 0x20, PropSize: 0x10x12A4(0x1)(BlueprintVisible, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasFinishedLoadingSoundCue : 1;                   // Mask: 0x40, PropSize: 0x10x12A4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bProbablyPlayingReaction : 1;                      // Mask: 0x80, PropSize: 0x10x12A4(0x1)(ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasSomePaddingBeforePlayingReaction : 1;          // Mask: 0x1, PropSize: 0x10x12A5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGoingToTryToSplitSoundCueForLocalization : 1;     // Mask: 0x2, PropSize: 0x10x12A5(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasPlayedDefaultReactionAnimTexture : 1;          // Mask: 0x4, PropSize: 0x10x12A5(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsPlayingFallbackReactionAnimTexture : 1;         // Mask: 0x8, PropSize: 0x10x12A5(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceCompanionHidden : 1;                         // Mask: 0x10, PropSize: 0x10x12A5(0x1)(BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2AF : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_392F[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CurrentReactionSFXIndex;                           // 0x12A8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        PreviousReactionSFXIndex;                          // 0x12AC(0x4)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       CurrentSoundWaveStringAssetReference;              // 0x12B0(0x20)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       CurrentSoundCueStringAssetReference;               // 0x12D0(0x20)(BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       CurrentAnimTextureStringAssetReference;            // 0x12F0(0x20)(ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       FallbackSubtitleAudioString;                       // 0x1310(0x20)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UMaterialInstanceDynamic*>      MeshDynamicMaterials;                              // 0x1330(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    CompanionReactionSubtitleIcon;                     // 0x1340(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       DefaultReactionAnimtexture;                        // 0x1348(0x20)(Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLocalizedSoundWaveAnimTexturePairArrays LocalizedAudioTracks;                              // 0x1368(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsUsingLocalizedAudioTrack;                        // 0x1388(0x1)(Edit, ConstParm, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         DebugBypassVRTeleportRestrictions;                 // 0x1389(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ForcedMonologueCheat;                              // 0x138A(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3931[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class AMissionType>            FinalBossFightEasy;                                // 0x1390(0x30)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class AMissionType>            FinalBossFightMed;                                 // 0x13C0(0x30)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class AMissionType>            FinalBossFightHard;                                // 0x13F0(0x30)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class AMissionType>            FinalBossFightFlowTest;                            // 0x1420(0x30)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AllowedHLNAFocusedSelectedRemoteTargetDistance;    // 0x1450(0x4)(ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3932[0x1C];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnReactionPlayed_Delegate;                         // 0x1470(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnReactionStopped_Delegate;                        // 0x1480(0x10)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnReactionAnimPlayed_Delegate;                     // 0x1490(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnReactionComponentSpawned_VFX_Delegate;           // 0x14A0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnReactionComponentSpawned_SFX_Delegate;           // 0x14B0(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalBuff_Companion* GetDefaultObj();

	float TraceForCompanionBlockersFromPlayer(struct FVector* TraceStart, struct FVector* TraceEnd, bool* ReturnValue);
	float Tick_UpdateCompanionTransform();
	float Tick_UpdateCompanionState();
	float Tick_CompanionSearchForPOIs();
	float Tick_CompanionReactions();
	float Tick_CompanionEvents();
	void StopCompanionReaction();
	float StopCompanionMontage(class UAnimMontage* AnimToStop);
	void StopCompanionEventExternal();
	void StopCompanionEvent();
	struct FCompanionEventData StartCompanionEventExternal();
	struct FCompanionEventData StartCompanionEvent();
	void ShouldOrbitPointOfInterest(const struct FPointOfInterestData_ForCompanion& WithPointData, bool* ReturnValue);
	void SetUpAnimTexture();
	bool SetCompaionHiddenSetting();
	void Server_SetCompanionState(enum class ECompanionState* NewState);
	void RefreshCompanionColorization();
	int32 PlayLinkedCompanionReactionsByExplorerNoteIndex();
	float PlayCompanionMontage(class UAnimMontage** AnimToPlay, float* ReturnValue);
	void OutputAsyncLoadedFiles();
	bool OnSpawnHexagons();
	void OnSpawnedForPlayer();
	void OnRep_CompanionState();
	class FName OnPlayerPlayAnimation();
	void OnPlayerDeath(class APrimalCharacter* DiedCharacter);
	class APrimalBuff_MissionData* OnMyPlayerMissionStarted(class AMissionType** Mission);
	class APrimalBuff_MissionData* OnMyPlayerMissionComplete(class AMissionType** Mission, bool* bSuccess);
	void OnMadeHexagonPurchase();
	class AActor* OnFoundPoI();
	class AActor* OnEndOverlapCompanionEventTrigger();
	void OnCompanionStateChanged();
	int32 OnCompanionReactionStopped();
	int32 OnCompanionReactionPlayed();
	struct FCompanionEventData OnCompanionEventStarted();
	struct FCompanionEventData OnCompanionEventEnded();
	class AActor* OnBeginOverlapCompanionEventTrigger();
	class UPrimalItem* NotifyItemCrafted();
	class UPrimalItem* NotifyItemAddedToCropPlot();
	class UClass* NotifyHasTamedDino();
	void Net_SetCompanionState(enum class ECompanionState* NewState);
	void IsPlayingCompanionReaction(bool* ReturnValue);
	void IsPlayerLookingAtCompanion(bool* ReturnValue);
	void IsPlayerADS(bool* ReturnValue);
	void IsCompanionReadyToMonologue(bool* ReturnValue);
	void IsCompanionAbleToMonologue(bool* ReturnValue);
	struct FPointOfInterestData_ForCompanion HasCompanionReachedPointOrbit(bool* ReturnValue);
	void GetPointCompanionWorldOrbitOrigin(const struct FPointOfInterestData_ForCompanion& ForPointData, struct FVector* ReturnValue);
	void GetMyPlayerHUD(class AShooterHUD** ReturnValue);
	void GetCurrentCompanionReactionData(struct FCompanionReactionData* ReturnValue);
	void GetCurrentCompanionEventData(struct FCompanionEventData* ReturnValue);
	void GetCompanionWorldLocation(struct FVector* ReturnValue);
	struct FVector GetClosestNearbyPointOfInterest(bool* ReturnValue);
	class UWorld* GetAllExplorerNotesInWorld(TArray<class AActor*>* ReturnValue);
	void ForceUnhibernateAtLocation(struct FVector* AtLocation, bool* ReturnValue);
	TArray<class AActor*> ForceHibernateAtLocation(struct FVector* AtLocation, bool* ReturnValue);
	void FocusOnRemoteTarget();
	class AActor* DrawFocusedActorToolTip();
	bool ClientToggleForceMonologue();
	void ClientOutputAsyncLoadedFiles();
	void ClientAllowVRTeleport();
	int32 Client_AddCompanionReaction();
	struct FCompanionEventData CanStartCompanionEvent(bool* ReturnValue);
	class AActor* CanRemotelyFocusOnRemoteActorForTooltip(bool* ReturnValue);
	struct FCompanionReactionData CanPlayEnvironmentalCompanionReaction(bool* ReturnValue);
	struct FCompanionReactionData CanPlayCompanionReaction(bool* ReturnValue);
	bool BPServerside_IsPerMapExplorerNoteUnlocked(int32 ExplorerNoteIndex);
	void AnimateOutHLNASubtitleIcon();
	void AnimateInHLNASubtitleIcon();
	int32 AddCompanionReaction();
};

// 0x298 (0xDF8 - 0xB60)
// Class ShooterGame.PrimalBuff_Grappled
class APrimalBuff_Grappled : public APrimalBuff
{
public:
	TArray<struct FGrappleTether>                CurrentGrappleTethers;                             // 0xB60(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FGrappleTether>                LastSyncedGrappleTethers;                          // 0xB70(0x10)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FReplicatedGrappleTetherData>  ReplicatedGrappleTethers;                          // 0xB80(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      MyOwner;                                           // 0xB90(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      MyOwnerCDO;                                        // 0xB98(0x8)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EGrappleState                     GrappleState_Current;                              // 0xBA0(0x1)(Edit, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EGrappleState                     GrappleState_Previous;                             // 0xBA1(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EGrappleState                     WantsGrappleState;                                 // 0xBA2(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_39A3[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DefaultGrappledBuffClass;                          // 0xBA8(0x8)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             PullingSoundCue;                                   // 0xBB0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             ReleasingSoundCue;                                 // 0xBB8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UStaticMesh*                           GrappleTetherMesh;                                 // 0xBC0(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDetachGrappledChars : 1;                          // Mask: 0x1, PropSize: 0x10xBC8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDebugGrappling : 1;                               // Mask: 0x2, PropSize: 0x10xBC8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDebugGrappling_AgainstSurface : 1;                // Mask: 0x4, PropSize: 0x10xBC8(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowGrappleLogicOnRemoteClients : 1;             // Mask: 0x8, PropSize: 0x10xBC8(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceIdleGrappleState : 1;                        // Mask: 0x10, PropSize: 0x10xBC8(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasGrappleBuffInitialized : 1;                    // Mask: 0x20, PropSize: 0x10xBC8(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsOwnerAgainstSurface : 1;                        // Mask: 0x40, PropSize: 0x10xBC8(0x1)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOwnerMovementAffectedByGrappleTethers : 1;        // Mask: 0x80, PropSize: 0x10xBC8(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLastIsOwnerSubmerged : 1;                         // Mask: 0x1, PropSize: 0x10xBC9(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLastIsOwnerSwinging : 1;                          // Mask: 0x2, PropSize: 0x10xBC9(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasAnyValidTethers : 1;                           // Mask: 0x4, PropSize: 0x10xBC9(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasValidReservedTethers : 1;                      // Mask: 0x8, PropSize: 0x10xBC9(0x1)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBrokeAnyTethersThisFrame : 1;                     // Mask: 0x10, PropSize: 0x10xBC9(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasAnyGrappledChars : 1;                          // Mask: 0x20, PropSize: 0x10xBC9(0x1)(Edit, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasAnyTethersAttachedToDynamicActors : 1;         // Mask: 0x40, PropSize: 0x10xBC9(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDidOverrideVelocityThisFrame : 1;                 // Mask: 0x80, PropSize: 0x10xBC9(0x1)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShouldResetOwnerVars : 1;                         // Mask: 0x1, PropSize: 0x10xBCA(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2B0 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_39A4[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxAllowedGrappleTethers;                          // 0xBCC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ForceFallingWhenDirToTetherAboveUpDot;             // 0xBD0(0x4)(Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ForceFallingWhenAboveVelocityAwayFromAnchor;       // 0xBD4(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ForceFallingBelowTetherToOwnerDeltaZ;              // 0xBD8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReduceFallDamageUnderAngleToAnchor;                // 0xBDC(0x4)(BlueprintVisible, Net, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GrappledFallDamageMult_MIN;                        // 0xBE0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OwnerInput_SwingSpeed;                             // 0xBE4(0x4)(ConstParm, ExportObject, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwingingVelocityDampingRate_Idle;                  // 0xBE8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwingingVelocityDampingRate_Pulling;               // 0xBEC(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             SwingingVelocityDampingRateAxisMults_Pulling;      // 0xBF0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwingingVelocityDampingRate_Releasing;             // 0xC00(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwingingVelocityDampingRate_OwnerInput;            // 0xC04(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherTensionVelocityDampingRate;                  // 0xC08(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GrappleVelocityMAX;                                // 0xC0C(0x4)(BlueprintVisible, ExportObject, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwingingClientPositionErrorOverride_Player;        // 0xC10(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwingingClientPositionErrorOverride_Dino_MovingFlying; // 0xC14(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwingingClientPositionErrorOverride_Dino_Stopped;  // 0xC18(0x4)(Edit, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwingingClientLocationInterpSpeed;                 // 0xC1C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwingingClientRotationInterpSpeed;                 // 0xC20(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SyncGrappleTetherLengthInterval;                   // 0xC24(0x4)(BlueprintVisible, ExportObject, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PullableWeightLimit;                               // 0xC28(0x4)(Edit, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherMaxLength;                                   // 0xC2C(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherMinLength;                                   // 0xC30(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherAutoDetachUnderLength;                       // 0xC34(0x4)(Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherBreakLimit_OwnerPastCurrentLengthDelta;      // 0xC38(0x4)(Edit, ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherBreakLimit_OwnerPastCurrentLengthForTime;    // 0xC3C(0x4)(Edit, BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherBreakLimit_GrappledActorAboveVelocity;       // 0xC40(0x4)(ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherWidth;                                       // 0xC44(0x4)(Edit, ConstParm, BlueprintReadOnly, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastGrappleTetherLengthSyncTime;                   // 0xC48(0x8)(ConstParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               OwnerInput_CurrentSwingingVelocity;                // 0xC50(0x18)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             OwnerInput_CurrentSynced;                          // 0xC68(0x10)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             OwnerInput_LastSynced;                             // 0xC78(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       OwnerInput_LastSyncTime;                           // 0xC88(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OwnerInput_SyncInverval;                           // 0xC90(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_39A7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               DirToAgainstSurface;                               // 0xC98(0x18)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LastDirToAgainstSurface;                           // 0xCB0(0x18)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RequiredDirToSurfaceDotDeltaToUpdate;              // 0xCC8(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_39A8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               AgainstSurfaceNormal;                              // 0xCD0(0x18)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherPullMaxVelocity;                             // 0xCE8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherPullAcceleration;                            // 0xCEC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherPullMaxVelocity_GrappledChar;                // 0xCF0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherPullAcceleration_GrappledChar;               // 0xCF4(0x4)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherReleaseMaxVelocity;                          // 0xCF8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherReleaseMaxVelocity_GrappledChar;             // 0xCFC(0x4)(Edit, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CurrentTetherMoveVelocity;                         // 0xD00(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               AvgParentCharVelocity;                             // 0xD18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ClientSuggestTetherLength_AllowedDelta;            // 0xD30(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ClientSuggestTetherLength_AllowedInterval;         // 0xD34(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       ClientSuggestTetherLength_LastReceivedTime;        // 0xD38(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ValidHitSurface_DistanceFromCapsuleEdge;           // 0xD40(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_39AA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             ValidHitSurface_UpVectorAngleRange;                // 0xD48(0x10)(ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             LastProjectedOwnerInputs;                          // 0xD58(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OwnerCapsuleRadius;                                // 0xD68(0x4)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OwnerCapsuleHalfHeight;                            // 0xD6C(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PreviousOwnerVelocity;                             // 0xD70(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherTensionStrength;                             // 0xD88(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TetherTensionExponent;                             // 0xD8C(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ForceFallingStateImpulse;                          // 0xD90(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_39AB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        ReservedTetherTags;                                // 0xD98(0x10)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                TetherTagOwnerConnectorString;                     // 0xDA8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             GrappledGravityScaleRange;                         // 0xDB8(0x10)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GrappledGravityScaleMult_Idle;                     // 0xDC8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GrappledGravityScaleMult_Pulling;                  // 0xDCC(0x4)(Edit, ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GrappledGravityScaleMult_Releasing;                // 0xDD0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AtTetherLimitBelowDistFromEnd;                     // 0xDD4(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LastGravity;                                       // 0xDD8(0x18)(ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LookingAtAgainstSurfaceAngle;                      // 0xDF0(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        VelocityOverrideMaxDeltaTime;                      // 0xDF4(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalBuff_Grappled* GetDefaultObj();

	float UpdateTethersByState();
	bool UpdateTetherMasterRef(bool* ReturnValue);
	void UpdateOwnerSwingingVelocity();
	struct FVector UpdateOwnerMovementSpeed();
	struct FGrappleTether UpdateGrappleTetherVars();
	void UpdateBrokenTethers();
	TArray<struct FHitResult> UpdateAgainstSurfaceFromHits();
	float Tick_UpdateGrappleTethers();
	float Tick_UpdateAgainstSurface();
	struct FGrappleTether TetherHasValidMasterRef(bool* ReturnValue);
	struct FVector2D SyncOwnerInputs();
	void SyncGrappleTetherLengths();
	float SimulateTetherFriction();
	float SimulateTautTetherForces();
	struct FGrappleTether ShouldUseDynamicTetherTension(bool* ReturnValue);
	float ShouldTetherBreak(class APrimalCharacter* ForChar, bool* ReturnValue);
	void ShouldReturnToIdleGrappleState(bool* ReturnValue);
	void ShouldReplicateOwnerInputs(bool* ReturnValue);
	enum class EGrappleState ShouldOwnerBeAffectedByTether(bool* ReturnValue);
	enum class EMovementMode ShouldForceOwnerIntoFallingState(bool* ReturnValue);
	bool SetupDelegateBindingsForChar(class APrimalCharacter* ForChar);
	int32 SetGrappleTetherLength(bool* ReturnValue);
	float SetGrappleTetherAtIndexLength(int32* AtIndex, bool* ReturnValue);
	enum class EGrappleState SetGrappleState(bool bForceUpdate, bool* ReturnValue);
	struct FVector2D Server_SyncOwnerInputs();
	TArray<float> Server_SuggestTetherLengths();
	float Server_SuggestTetherLength();
	uint8 Server_SetGrappleState(bool bForceUpdate);
	void ResetOwnerVars();
	void ResetOwnerClientPositionErrorTolerance();
	bool RemoveGrappleTether(int32* AtIndex, class APrimalBuff_Grappled** WithMasterBuff, bool* ReturnValue);
	void RefreshAllTetherMasterRefs();
	float ReceiveTetherLengthSuggestion();
	TArray<float> ReceiveTetherLengthsSuggestion();
	void OnRep_ReplicatedGrappleTethers();
	void OnRep_GrappleState();
	class APrimalCharacter* OnReleasedPrimalChar();
	void OnOwnerSleepStateChanged(class APrimalCharacter* ForChar, bool bIsSleeping);
	class APrimalCharacter* OnOwnerDeath();
	void OnOwnerCapsuleHit(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, struct FVector* NormalImpulse, const struct FHitResult& Hit);
	void OnGrappleTethersChanged();
	struct FGrappleTether OnGrappleTetherRemoved();
	int32 OnGrappleTetherBroken();
	struct FGrappleTether OnGrappleTetherAdded();
	bool OnGrappleStateChangedNotify();
	void OnGrappleStateChanged();
	struct FGrappleTether OnGrappledPrimalChar();
	void OnGrappledCharSleepStateChange(class APrimalCharacter* ForChar, bool bIsSleeping);
	class APrimalCharacter* OnGrappledCharDeath();
	void OnAgainstValidSurfaceUpdated();
	void OnAgainstValidSurfaceStateChanged();
	void NetSyncGrappleTethers();
	TArray<float> Multi_SyncGrappleTetherLengths();
	float Multi_SyncGrappleTetherLength();
	float ModifyTetherTensionLerpValue(float* ReturnValue);
	struct FGrappleTether ModifyTetherMoveVelocity();
	float ModifyOverriddenCharVelocity();
	float ModifyGrappledCharVelocity();
	class APrimalBuff_Grappled* MakeGrappleTether(struct FCreateGrappleTetherData* FromData, struct FGrappleTether* ReturnValue);
	struct FHitResult IsValidSurfaceHit(bool* ReturnValue);
	struct FHitResult IsValidGrappleHit(bool* ReturnValue);
	struct FGrappleTether IsTethersMasterGrappleBuff(bool* ReturnValue);
	struct FGrappleTether IsTetherAtMaxLength(bool* ReturnValue);
	struct FGrappleTether IsSwingingTowardsAxisCenter(bool* ReturnValue);
	void IsOwnerLookingAtAgainstSurface(bool* ReturnValue);
	void IsOwnerAgainstValidSurface(bool* ReturnValue);
	float IsOwnerAboveGround(bool* ReturnValue);
	struct FHitResult IsHitWithinGrappleRange(bool* ReturnValue);
	struct FGrappleTether IsGrappleTetherValid(bool* ReturnValue);
	void IsGrappledCharHardAttached(class APrimalCharacter* ForChar, bool* ReturnValue);
	struct FGrappleTether IsCharPastMaxTetherLength(class APrimalCharacter* ForChar, bool* ReturnValue);
	class APrimalBuff_Grappled* InitializeGrappleTether(bool* ReturnValue);
	void InitGrappleBuff();
	float GrappleTick();
	struct FGrappleTether GetTetherMasterRef(bool* ReturnValue);
	struct FGrappleTether GetTetherBreakLimit_OwnerPastCurrentLengthForTime(float* ReturnValue);
	struct FGrappleTether GetTetherBreakLimit_OwnerPastCurrentLengthDelta(float* ReturnValue);
	struct FGrappleTether GetTetherBreakLimit_GrappledActorAboveVelocity(float* ReturnValue);
	struct FGrappleTether GetRequiredTetherLengthForChar(class APrimalCharacter* ForChar, float* ReturnValue);
	void GetReplicatedOwnerInputs(struct FVector2D* ReturnValue);
	class APrimalBuff_Grappled* GetOwnerAppendedTetherTag(class FString* ReturnValue);
	bool GetNumValidTethers(int32* ReturnValue);
	void GetNumReservedTethers(int32* ReturnValue);
	struct FGrappleTether GetMinTetherLength(float* ReturnValue);
	struct FGrappleTether GetMaxTetherLength(float* ReturnValue);
	class AActor* GetInitGrappleAnchorRelativeOffset(struct FVector* ReturnValue);
	struct FGrappleTether GetGrappleVelocityDampingRate(class APrimalCharacter* ForChar, float* ReturnValue);
	class FString GetGrappleTetherRootTag(class FString* ReturnValue);
	struct FGrappleTether GetGrappleTetherReleaseMaxVelocity(float* ReturnValue);
	struct FGrappleTether GetGrappleTetherPullMaxVelocity(float* ReturnValue);
	struct FGrappleTether GetGrappleTetherPullAcceleration(float* ReturnValue);
	class AActor* GetGrappleAnchorWorldLocation(struct FVector* ReturnValue);
	struct FGrappleTether GetCurrentTetherMoveDir(struct FVector* ReturnValue);
	void GetCurrentSwingingAxisValues(struct FVector2D* ReturnValue);
	struct FGrappleTether GetCurrentGrappleState(enum class EGrappleState* ReturnValue);
	struct FGrappleTether GetCharDistanceFromTetherEndRatio(class APrimalCharacter* ForChar, float* ReturnValue);
	struct FGrappleTether GetCharAngleToGrappleTetherEnd(class APrimalCharacter* ForChar, float* ReturnValue);
	bool GetAverageTetherEndLocation(struct FVector* ReturnValue);
	void GetAllCurrentGrapplers(TArray<class APrimalCharacter*>* ReturnValue);
	class AActor* GetActorAttachParentChar(class APrimalCharacter** ReturnValue);
	void EndGrapple();
	class FString DisplayGrappleSystemHudNotification(class AShooterPlayerController* ForPC, class AActor* FromActor, bool* ReturnValue);
	float CustomGrappleTick();
	struct FVector ClampOwnerReleasingVelocity();
	void ClampGrappleVelocity(const struct FVector& ClampVelocity);
	float CheckForTetherBreak();
	struct FGrappleTether CheckForAutoBreakTether(bool* ReturnValue);
	float CanUpdateTetherLength(bool* ReturnValue);
	struct FGrappleTether CanTetherOwnerPullGrappledChar(bool* ReturnValue);
	void CanSyncGrappleTetherLengths(bool* ReturnValue);
	class FString CanReceiveNewGrappleTether(bool* ReturnValue);
	bool CanPullChar(bool* ReturnValue);
	void CanOwnerGrappleSwing(bool* ReturnValue);
	void CanManipulateOwnerVelocity(bool* ReturnValue);
	struct FGrappleTether CanGrappleTetherAffectOwnerMovement(bool* ReturnValue);
	struct FGrappleTether CanCharControlGrappleTether(class APrimalCharacter* ForChar, bool* bAllowSlaveGrappleToControl, bool* ReturnValue);
	void CanChangeGrappleState(uint8* DesiredGrappleState, bool* ReturnValue);
	void CanBeGrappledAgainstSurface(bool* ReturnValue);
	class FString BreakGrappleTether(int32* AtIndex, class APrimalBuff_Grappled** WithMasterBuff, bool* bBreakAllTethersWithTag, bool* ReturnValue);
	void BreakChildTetherOnGrappledChar(struct FGrappleTether* WithTether, bool* ReturnValue);
	void BreakAllTethers();
	void BP_InterceptGrappleLogic(struct FVector* CharVelocity, bool* ReturnValue);
	void AreGrappleTetherTagsEqual(class FString* TagA, class FString* TagB, bool* bOnlyCompareRootTag, bool* ReturnValue);
	float ApplyTetherMoveVelocity(struct FVector* CurrentVelocity);
	float ApplyOwnerSwingingVelocity(struct FVector* CurrentVelocity);
	void AllowGrappleLogic(bool* ReturnValue);
	void AdjustMovementVectorIfAgainstSurface(struct FVector* AdjustVector);
	void AddGrappleTether(struct FCreateGrappleTetherData* FromData, bool* bPreventNetSync, int32* AddAtIndex, int32* ReturnValue);
};

// 0x138 (0xC98 - 0xB60)
// Class ShooterGame.PrimalBuff_MissionData
class APrimalBuff_MissionData : public APrimalBuff
{
public:
	class AMissionType*                          ActiveMission;                                     // 0xB60(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        ActiveMissionIndex;                                // 0xB68(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_39F3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FClientMissionData>            CurrentMissions;                                   // 0xB70(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       MissionIndicatorParticles;                         // 0xB80(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                NonHostPrepAreaNotification;                       // 0xB88(0x10)(BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PendingMission;                                    // 0xB98(0x8)(ExportObject, Net, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnPlayerAddedToMission;                            // 0xBA0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnPlayerRemovedFromMission;                        // 0xBB0(0x10)(ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            MissionClientDataUpdated;                          // 0xBC0(0x10)(Edit, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_39F6[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FClientMissionSubscriptionData> ReplicatedMissionDataSubscriptions;                // 0xC20(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_39F7[0x68];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalBuff_MissionData* GetDefaultObj();

	class FName UnloadLevelsForMissionTag();
	class FName SetMissionData_Vector(class FName Key, const struct FVector& Value);
	class FName SetMissionData_Struct(class FName Key, const struct FPropertyThunkWrapper& Value);
	class FName SetMissionData_String(class FName Key, const class FString& Value);
	class FName SetMissionData_Rotator(class FName Key, const struct FRotator& Value);
	class FName SetMissionData_Int(class FName Key, int32 Value);
	class FName SetMissionData_Float(class FName Key, float Value);
	class FName SetMissionData_Double(class FName Key, double Value);
	class FName SetMissionData_Bool(class FName Key, bool Value);
	void ServerRequestToggleWeapon(class AMissionType** Mission);
	class FName ServerRequestStartMissionWithMissionTag(class AMissionDispatcher** FromDispatcher);
	void ServerRequestStartMission(class UClass* MissionType, class AMissionDispatcher** FromDispatcher);
	void ServerRequestMissionEligibilityCheck(class AMissionDispatcher** DispatcherFilter);
	void ServerRequestEquipMissionItem(class AMissionType** Mission, struct FItemNetID* ItemID);
	void ServerRequestCancelMission();
	void ServerMulticastRequiredProps();
	void ReplicatedMissionDataUpdated();
	void OnRep_MissionIndicatorParticles();
	void OnRep_CurrentMissions();
	void OnRep_ActiveMissionIndex();
	void OnActiveMissionPhaseStarted(class AMissionType** Mission, class FName* OldPhase, class FName* NewPhase);
	void OnActiveMissionPhaseEnded(class AMissionType** Mission, class FName* OldPhase, class FName* NewPhase);
	class FName MultiUpdateMissionData_Int(class FName Key, int32 Value);
	class FName MultiUpdateMissionData_Bool(class FName Key, bool Value);
	float MultiClearParticleIndicator();
	class FName LoadLevelsForMissionTag();
	void IsPlayerEligibleForMission_CheckFromClient(class UClass* MissionType, bool* bOutIsRecentData, struct FClientMissionEligibility* OutEligibilityData, float* MaxTimeConsideredRecent, class AMissionDispatcher** DispatcherFilter, bool* ReturnValue);
	class FName IsMissionTypeActiveWithMissionTag(bool* ReturnValue);
	void IsMissionTypeActive(class UClass* MissionType, bool* bExactClassMatch, bool* ReturnValue);
	void GetWorldIndicatorsForMission(class AMissionType** Mission, const TArray<struct FMissionWorldIndicator>& WorldIndicators, bool* bCompanionOnly, bool* bSortByPriority);
	void GetMissionDebugData(TArray<struct FSerializedMissionData>* OutMissionData);
	struct FVector GetMissionData_Vector(class FName Key, bool* ReturnValue);
	struct FPropertyThunkWrapper GetMissionData_Struct(class FName Key, bool* ReturnValue);
	class FString GetMissionData_String(class FName Key, bool* ReturnValue);
	struct FRotator GetMissionData_Rotator(class FName Key, bool* ReturnValue);
	int32 GetMissionData_Int(class FName Key, bool* ReturnValue);
	float GetMissionData_Float(class FName Key, bool* ReturnValue);
	double GetMissionData_Double(class FName Key, bool* ReturnValue);
	bool GetMissionData_Bool(class FName Key, bool* ReturnValue);
	void GetBiomeMissionTag(struct FVector* Location, class FName* ReturnValue);
	void GetAllCurrentMissions(TArray<class AMissionType*>* OutMissions);
	void GetActiveMission(class AMissionType** ReturnValue);
	class FName ClientUnloadMissionLevels();
	float ClientSpawnEmitter();
	bool ClientSendMissionNotification(class AMissionType** FromMission, class FName* NotificationTag, class USoundBase** MessageSound);
	bool ClientSendMissionAlert(enum class EMissionAlertType* AlertType, class FString* AlertTitle);
	void ClientMissionEvent(class AMissionType** Mission, bool* bMissionStarted, bool* bMissionCompletedSuccessfully);
	void ClientMissionEligibilityResponse(TArray<struct FMissionEligibilityData>* EligibilityData);
	class FName ClientLoadMissionLevels();
	void AutoHideIndicatorParticles();
};

// 0x8 (0x4D0 - 0x4C8)
// Class ShooterGame.PrimalCableActor
class APrimalCableActor : public AActor
{
public:
	class UPrimalCableComponent*                 CableComponent;                                    // 0x4C8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst)

	static class UClass* StaticClass();
	static class APrimalCableActor* GetDefaultObj();

};

// 0x80 (0x7E0 - 0x760)
// Class ShooterGame.PrimalCableComponent
class UPrimalCableComponent : public UArkProceduralMeshComponent
{
public:
	uint8                                        bEndPointIsInWorldSpace : 1;                       // Mask: 0x1, PropSize: 0x10x760(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2B1 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3A07[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FComponentReference                   AttachEndTo;                                       // 0x768(0x28)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               EndLocation;                                       // 0x790(0x18)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CableLength;                                       // 0x7A8(0x4)(Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumSegments;                                       // 0x7AC(0x4)(Edit, ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        SubstepTime;                                       // 0x7B0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        SolverIterations;                                  // 0x7B4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst)
	float                                        MaxParticleSpeed;                                  // 0x7B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CableWidth;                                        // 0x7BC(0x4)(Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumSides;                                          // 0x7C0(0x4)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        TileMaterial;                                      // 0x7C4(0x4)(Edit, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRenderFirstHalfOnly;                              // 0x7C8(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A08[0x17];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalCableComponent* GetDefaultObj();

	struct FVector SpreadOutParticles(const struct FVector& EndPosition);
	void SetAttachEndOverrideComponent(class USceneComponent** Component);
	void MarkRenderDynamicDataDirtyBP();
	struct FVector GetEndPositions();
	int32 GetCableParticle(struct FCableParticle* ReturnValue);
	void GetCableMidPoint(struct FVector* ReturnValue);
	void GetAttachEndOverrideComponent(class USceneComponent** ReturnValue);
};

// 0xE8 (0x110 - 0x28)
// Class ShooterGame.PrimalCameraConfig
class UPrimalCameraConfig : public UObject
{
public:
	class FName                                  DefaultCameraProfileName;                          // 0x28(0x8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TightCameraProfileName;                            // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MidCameraProfileName;                              // 0x38(0x8)(Edit, ConstParm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LooseCameraProfileName;                            // 0x40(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<class FName, struct FPrimalCameraProfile> CameraProfiles;                                    // 0x48(0x50)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<class FName, struct FPrimalCameraProfile> ExtraCameraProfiles;                               // 0x98(0x50)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               TPVWeaponCameraOffset;                             // 0xE8(0x18)(Edit, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TransitionToTargetingCameraInterpSpeed;            // 0x100(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TransitionToASACameraInterpTime;                   // 0x104(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TransitionToOldCameraInterpTime;                   // 0x108(0x4)(Edit, ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A0A[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalCameraConfig* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class ShooterGame.PrimalCameraConfig_WeaponOverride
class UPrimalCameraConfig_WeaponOverride : public UObject
{
public:
	TMap<class FName, struct FPrimalCameraSettingsOverrideGroup> WeaponCameraSettingsOverrides;                     // 0x28(0x50)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalCameraConfig_WeaponOverride* GetDefaultObj();

};

// 0x10 (0xC80 - 0xC70)
// Class ShooterGame.PrimalCameraProbeActor
class APrimalCameraProbeActor : public ACameraActor
{
public:
	bool                                         bActive;                                           // 0xC70(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3A0C[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalCameraProbeActor* GetDefaultObj();

};

// 0x5C8 (0x1540 - 0xF78)
// Class ShooterGame.PrimalCharacterMovement
class UPrimalCharacterMovement : public UCharacterMovementComponent
{
public:
	uint8                                        bAccelerationFollowsRotation : 1;                  // Mask: 0x1, PropSize: 0x10xF78(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bPreventWaterSurfaceHopping : 1;                   // Mask: 0x2, PropSize: 0x10xF78(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheckFallingAITempIgnoreDinoRiderMesh : 1;        // Mask: 0x4, PropSize: 0x10xF78(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2B2 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bForceAccelerationFollowsRotationInSwimming : 1;   // Mask: 0x10, PropSize: 0x10xF78(0x1)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseRotationAcceleration : 1;                      // Mask: 0x20, PropSize: 0x10xF78(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bIgnoreRotationAccelerationWhenSwimming : 1;       // Mask: 0x40, PropSize: 0x10xF78(0x1)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2B3 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseAsyncWalking : 1;                              // Mask: 0x1, PropSize: 0x10xF79(0x1)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowSimulatedTickDistanceSkip : 1;               // Mask: 0x2, PropSize: 0x10xF79(0x1)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowImpactDeflection : 1;                        // Mask: 0x4, PropSize: 0x10xF79(0x1)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableSimulatedMovement : 1;                     // Mask: 0x8, PropSize: 0x10xF79(0x1)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        BitPad_2B4 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bCanSlide : 1;                                     // Mask: 0x20, PropSize: 0x10xF79(0x1)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bAssumeSymmetricalRotation : 1;                    // Mask: 0x40, PropSize: 0x10xF79(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWantsToDodge : 1;                                 // Mask: 0x80, PropSize: 0x10xF79(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bUseWeaponSpeedMultiplierByDirection : 1;          // Mask: 0x1, PropSize: 0x10xF7A(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWantsToProne : 1;                                 // Mask: 0x2, PropSize: 0x10xF7A(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bUseCharacterInterpolationAndStops : 1;            // Mask: 0x4, PropSize: 0x10xF7A(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyForwardsInputAcceleration : 1;                // Mask: 0x8, PropSize: 0x10xF7A(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bOnlyForwardsInputAccelerationWalking : 1;         // Mask: 0x10, PropSize: 0x10xF7A(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2B5 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bPreventExitingWater : 1;                          // Mask: 0x40, PropSize: 0x10xF7A(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        BitPad_2B6 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseWaveLocking : 1;                               // Mask: 0x1, PropSize: 0x10xF7B(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bForcePreventExitingWater : 1;                     // Mask: 0x2, PropSize: 0x10xF7B(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bClippedToWaterSurface : 1;                        // Mask: 0x4, PropSize: 0x10xF7B(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bZeroPitchWhenNoAcceleration : 1;                  // Mask: 0x8, PropSize: 0x10xF7B(0x1)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bRequireAccelerationForUseControllerDesiredRotation : 1; // Mask: 0x10, PropSize: 0x10xF7B(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bForceDontAllowDesiredRotationWhenFalling : 1;     // Mask: 0x20, PropSize: 0x10xF7B(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bReduceBackwardsMovement : 1;                      // Mask: 0x40, PropSize: 0x10xF7B(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bPreventAddingImpulse : 1;                         // Mask: 0x80, PropSize: 0x10xF7B(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bPreventSlidingWhileFalling : 1;                   // Mask: 0x1, PropSize: 0x10xF7C(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bPreventZeroPitchAndRollWhileFalling : 1;          // Mask: 0x2, PropSize: 0x10xF7C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bPreventEnteringWater : 1;                         // Mask: 0x4, PropSize: 0x10xF7C(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bServerCorrectForMovementModeChanges : 1;          // Mask: 0x8, PropSize: 0x10xF7C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        bFallVelocityRecursionGuard : 1;                   // Mask: 0x10, PropSize: 0x10xF7C(0x1)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeferredMoveEveryFrame : 1;                       // Mask: 0x20, PropSize: 0x10xF7C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLastHasRequestedVelocity : 1;                     // Mask: 0x40, PropSize: 0x10xF7C(0x1)(Edit, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2B7 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3A29[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LastForcedNetVelocity;                             // 0xF80(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A2A[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ProneHalfHeight;                                   // 0xFA0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxWalkSpeedProne;                                 // 0xFA4(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoClientPositionErrorToleranceStopped;           // 0xFA8(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DinoClientPositionErrorToleranceMovingFlying;      // 0xFAC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ClientRunningPositionErrorTolerance;               // 0xFB0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerClientPositionErrorToleranceOverride;        // 0xFB4(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        SimulatedTickSkipDistanceSQ;                       // 0xFB8(0x4)(ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A2C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               WantsToDodgeVelocity;                              // 0xFC0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PreventWaterHoppingPlaneOffset;                    // 0xFD8(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A2D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       PreventWaterHopping_LastTimeAtSurface;             // 0xFE0(0x8)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        AccelerationFollowsRotationMinDot;                 // 0xFE8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AccelerationFollowsRotationStopDistance;           // 0xFEC(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RotationAcceleration;                              // 0xFF0(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        RotationBraking;                                   // 0xFF4(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        AngleToStartRotationBraking;                       // 0xFF8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        SwimmingAccelZMultiplier;                          // 0xFFC(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedSwimmingAccelZMultiplier;                     // 0x1000(0x4)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSlipOffLedges;                                    // 0x1004(0x1)(Edit, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A2F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LedgeSlipCapsuleRadiusMultiplier;                  // 0x1008(0x4)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LedgeSlipPushVelocity;                             // 0x100C(0x4)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LedgeSlipVelocityBuildUpMultiplier;                // 0x1010(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BackwardsMaxSpeedMultiplier;                       // 0x1014(0x4)(Edit, ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BackwardsMovementDotThreshold;                     // 0x1018(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WaterDinoSurfacePitchClampCapsuleDistanceMultiplier; // 0x101C(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WaterDinoSurfacePitchClampMaxPitch;                // 0x1020(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LostDeltaTime;                                     // 0x1024(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LastLostDeltaTime;                                 // 0x1028(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WaveLockingMaxZOffset;                             // 0x102C(0x4)(ConstParm, ExportObject, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A33[0x38];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       LastSwimTime;                                      // 0x1068(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeLeftToForceTickEveryFrame;                     // 0x1070(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LandedPreventRequestedMoveInterval;                // 0x1074(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        LandedPreventRequestedMoveMinVelocityMagnitude;    // 0x1078(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A36[0x3C];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       DisableMovementPhysicsUntilTime;                   // 0x10B8(0x8)(ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A37[0x140];                                   // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              CurrentRotationSpeed;                              // 0x1200(0x18)(ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A39[0x328];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalCharacterMovement* GetDefaultObj();

	bool UnProne(bool bForce);
	bool UnCrouch(bool bForce);
	void StopLoggingSavedMoves();
	void StartLoggingSavedMoves();
	bool SetBase(class UPrimitiveComponent** NewBase, class FName BoneName);
	uint8 ServerJumpOutOfWater();
	bool Prone();
	void IsOnWalkableFloor(bool* ReturnValue);
	void IsMovingBackwards(bool* ReturnValue);
	void GetPrimalCharacter(class APrimalCharacter** ReturnValue);
	bool ClearBase();
};

// 0xD8 (0x100 - 0x28)
// Class ShooterGame.PrimalCharacterSetting
class UPrimalCharacterSetting : public UObject
{
public:
	struct FCharacterPreset                      CharacterSetting;                                  // 0x28(0xD8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalCharacterSetting* GetDefaultObj();

};

// 0x1030 (0x10E8 - 0xB8)
// Class ShooterGame.PrimalCharacterStatusComponent
class UPrimalCharacterStatusComponent : public UActorComponent
{
public:
	uint8                                        Pad_3AD8[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxStatusValues[0xC];                              // 0xC0(0x30)(ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseLevelMaxStatusValues[0xC];                     // 0xF0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        NumberOfLevelUpPointsApplied[0xC];                 // 0x120(0xC)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        NumberOfLevelUpPointsAppliedTamed[0xC];            // 0x12C(0xC)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        NumberOfMutationsAppliedTamed[0xC];                // 0x138(0xC)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedIneffectivenessModifier;                      // 0x144(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MovingStaminaRecoveryRateMultiplier;               // 0x148(0x4)(ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RecoveryRateStatusValue[0xC];                      // 0x14C(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeToRecoverAfterDepletionStatusValue[0xC];       // 0x17C(0x30)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeToRecoverAfterDecreaseStatusValue[0xC];        // 0x1AC(0x30)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AmountMaxGainedPerLevelUpValue[0xC];               // 0x1DC(0x30)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AmountMaxGainedPerLevelUpValueTamed[0xC];          // 0x20C(0x30)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        MaxGainedPerLevelUpValueIsPercent[0xC];            // 0x23C(0xC)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        RecoveryRateIsPercent[0xC];                        // 0x248(0xC)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamingMaxStatMultipliers[0xC];                     // 0x254(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamingMaxStatAdditions[0xC];                       // 0x284(0x30)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxLevelUpMultiplier[0xC];                         // 0x2B4(0x30)(ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MutationMultiplier[0xC];                           // 0x2E4(0x30)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedLandDinoSwimSpeedLevelUpEffectiveness;        // 0x314(0x4)(ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamingIneffectivenessMultiplier;                   // 0x318(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoRiderWeightMultiplier;                         // 0x31C(0x4)(Edit, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        CanLevelUpValue[0xC];                              // 0x320(0xC)(Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        DontUseValue[0xC];                                 // 0x32C(0xC)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        SkipWildLevelUpValue[0xC];                         // 0x338(0xC)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3ADF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPrimalCharacterStatusStateThresholds StatusStateThresholds[0xC];                        // 0x348(0x360)(ConstParm, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExperienceAutomaticConsciousIncreaseSpeed;         // 0x6A8(0x4)(BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CheatMaxWeight;                                    // 0x6AC(0x4)(BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CharacterStatusComponentPriority;                  // 0x6B0(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SuffocationHealthPercentDecreaseSpeed;             // 0x6B4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UnsubmergedOxygenIncreaseSpeed;                    // 0x6B8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SubmergedOxygenDecreaseSpeed;                      // 0x6BC(0x4)(Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RunningStaminaConsumptionRate;                     // 0x6C0(0x4)(BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WalkingStaminaConsumptionRate;                     // 0x6C4(0x4)(EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwimmingOrFlyingStaminaConsumptionRate;            // 0x6C8(0x4)(BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        JumpStaminaConsumption;                            // 0x6CC(0x4)(Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WindedSpeedModifier;                               // 0x6D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WindedSpeedModifierSwimmingOrFlying;               // 0x6D4(0x4)(ConstParm, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InjuredSpeedModifier;                              // 0x6D8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HypothermicHealthDecreaseRateBase;                 // 0x6DC(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HypothermicHealthDecreaseRatePerDegree;            // 0x6E0(0x4)(Edit, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HyperthermicHealthDecreaseRateBase;                // 0x6E4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HyperthermicHealthDecreaseRatePerDegree;           // 0x6E8(0x4)(ConstParm, ExportObject, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        XPEarnedPerStaminaConsumed;                        // 0x6EC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        KillXPMultiplierPerCharacterLevel;                 // 0x6F0(0x4)(ConstParm, ExportObject, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanSuffocate : 1;                                 // Mask: 0x1, PropSize: 0x10x6F4(0x1)(ConstParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanSuffocateIfTamed : 1;                          // Mask: 0x2, PropSize: 0x10x6F4(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanGetHungry : 1;                                 // Mask: 0x4, PropSize: 0x10x6F4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseStamina : 1;                                   // Mask: 0x8, PropSize: 0x10x6F4(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWalkingConsumesStamina : 1;                       // Mask: 0x10, PropSize: 0x10x6F4(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRunningConsumesStamina : 1;                       // Mask: 0x20, PropSize: 0x10x6F4(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bConsumeFoodAutomatically : 1;                     // Mask: 0x40, PropSize: 0x10x6F4(0x1)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInfiniteFood : 1;                                 // Mask: 0x80, PropSize: 0x10x6F4(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAddExperienceAutomatically : 1;                   // Mask: 0x1, PropSize: 0x10x6F5(0x1)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bConsumeWaterAutomatically : 1;                    // Mask: 0x2, PropSize: 0x10x6F5(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutomaticallyUpdateTemperature : 1;               // Mask: 0x4, PropSize: 0x10x6F5(0x1)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReplicateGlobalStatusValues : 1;                  // Mask: 0x8, PropSize: 0x10x6F5(0x1)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        bAllowLevelUps : 1;                                // Mask: 0x10, PropSize: 0x10x6F5(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        bInfiniteStats : 1;                                // Mask: 0x20, PropSize: 0x10x6F5(0x1)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowSharingXPWithTribe : 1;                      // Mask: 0x40, PropSize: 0x10x6F5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseStatusSpeedModifiers : 1;                      // Mask: 0x80, PropSize: 0x10x6F5(0x1)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bStatusSpeedModifierOnlyFullOrNone : 1;            // Mask: 0x1, PropSize: 0x10x6F6(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreStatusSpeedModifierIfSwimming : 1;          // Mask: 0x2, PropSize: 0x10x6F6(0x1)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventJump : 1;                                  // Mask: 0x4, PropSize: 0x10x6F6(0x1)(Edit, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInitializedBaseLevelMaxStatusValues : 1;          // Mask: 0x8, PropSize: 0x10x6F6(0x1)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2B8 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bServerFirstInitialized : 1;                       // Mask: 0x20, PropSize: 0x10x6F6(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        bRunningUseDefaultSpeed : 1;                       // Mask: 0x40, PropSize: 0x10x6F6(0x1)(Edit, ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNeverAllowXP : 1;                                 // Mask: 0x80, PropSize: 0x10x6F6(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventTamedStatReplication : 1;                  // Mask: 0x1, PropSize: 0x10x6F7(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustStatusValueModification : 1;           // Mask: 0x2, PropSize: 0x10x6F7(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDefaultSpeed : 1;                            // Mask: 0x4, PropSize: 0x10x6F7(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheatStatus : 1;                                  // Mask: 0x8, PropSize: 0x10x6F7(0x1)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2B9 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHideFoodStatusFromHUD : 1;                        // Mask: 0x20, PropSize: 0x10x6F7(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetStatusNameString : 1;                     // Mask: 0x40, PropSize: 0x10x6F7(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideStaminaStatusFromHUD : 1;                     // Mask: 0x80, PropSize: 0x10x6F7(0x1)(EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontUseSpeedMultipleAsSpeed : 1;                  // Mask: 0x1, PropSize: 0x10x6F8(0x1)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2BA : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3AE9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ShareXPWithTribeRange;                             // 0x6FC(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        BaseCharacterLevel;                                // 0x700(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint16                                       ExtraCharacterLevel;                               // 0x704(0x2)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3AEA[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ExperiencePoints;                                  // 0x708(0x4)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        ReplicatedExperiencePoints;                        // 0x70C(0x4)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ELevelExperienceRampType          LevelExperienceRampType;                           // 0x710(0x1)(Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AEB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxExperiencePoints;                               // 0x714(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseFoodConsumptionRate;                           // 0x718(0x4)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseWaterConsumptionRate;                          // 0x71C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FortitudeTorpidityDecreaseMultiplier;              // 0x720(0x4)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FortitudeTorpidityIncreaseResistance;              // 0x724(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SubmergedWaterIncreaseRate;                        // 0x728(0x4)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CrouchedWaterFoodConsumptionMultiplier;            // 0x72C(0x4)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ProneWaterFoodConsumptionMultiplier;               // 0x730(0x4)(ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StaminaRecoveryDecreaseFoodMultiplier;             // 0x734(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StaminaRecoveryDecreaseWaterMultiplier;            // 0x738(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HealthRecoveryDecreaseFoodMultiplier;              // 0x73C(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyDinoConsumingFoodRateMultiplier;               // 0x740(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoTamedAdultConsumingFoodRateMultiplier;         // 0x744(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyGestationConsumingFoodRateMultiplier;          // 0x748(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyDinoStarvationHealthDecreaseRateMultiplier;    // 0x74C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BabyMaxHealthPercent;                              // 0x750(0x4)(BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CrouchedStaminaConsumptionMultiplier;              // 0x754(0x4)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ProneStaminaConsumptionMultiplier;                 // 0x758(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StarvationHealthConsumptionRate;                   // 0x75C(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DehyrdationHealthConsumptionRate;                  // 0x760(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StaminaConsumptionDecreaseWaterMultiplier;         // 0x764(0x4)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StaminaConsumptionDecreaseFoodMultiplier;          // 0x768(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HypothermiaDecreaseFoodMultiplierBase;             // 0x76C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HypothermiaDecreaseFoodMultiplierPerDegree;        // 0x770(0x4)(ExportObject, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HyperthermiaDecreaseWaterMultiplierBase;           // 0x774(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HyperthermiaDecreaseWaterMultiplierPerDegree;      // 0x778(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HyperthermiaTemperatureThreshold;                  // 0x77C(0x4)(Edit, ConstParm, ExportObject, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HypothermiaTemperatureThreshold;                   // 0x780(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TorporExitPercentThreshold;                        // 0x784(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        KnockedOutTorpidityRecoveryRateMultiplier;         // 0x788(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DehydrationTorpidityMultiplier;                    // 0x78C(0x4)(ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StarvationTorpidityMultuplier;                     // 0x790(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StarvationTorpidityIncreaseRate;                   // 0x794(0x4)(Edit, BlueprintVisible, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DehyrdationTorpidityIncreaseRate;                  // 0x798(0x4)(BlueprintVisible, BlueprintReadOnly, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InjuredTorpidityIncreaseMultiplier;                // 0x79C(0x4)(ConstParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WeightSpeedDecreasePower;                          // 0x7A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WeightJumpDecreasePower;                           // 0x7A4(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PoopItemMinFoodConsumptionInterval;                // 0x7A8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PoopItemMaxFoodConsumptionInterval;                // 0x7AC(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TheMaxTorporIncreasePerBaseLevel;                  // 0x7B0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentStatusValuesReplicationInterval;            // 0x7B4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InsulationHyperthermiaOffsetExponent;              // 0x7B8(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InsulationHyperthermiaOffsetScaler;                // 0x7BC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InsulationHypothermiaOffsetExponent;               // 0x7C0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InsulationHypothermiaOffsetScaler;                 // 0x7C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HypoCharacterInsulationValue;                      // 0x7C8(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HyperCharacterInsulationValue;                     // 0x7CC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PoopItemFoodConsumptionCache;                      // 0x7D0(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LastHypothermalCharacterInsulationValue;           // 0x7D4(0x4)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LastHyperthermalCharacterInsulationValue;          // 0x7D8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EPrimalCharacterStatusValue       MaxStatusValueToAutoUpdate;                        // 0x7DC(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AEE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        GenericXPMultiplier;                               // 0x7E0(0x4)(ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        CraftEarnXPMultiplier;                             // 0x7E4(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinInventoryWeight;                                // 0x7E8(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        KillEarnXPMultiplier;                              // 0x7EC(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GenericEarnXPMultiplier;                           // 0x7F0(0x4)(Edit, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SpecialEarnXPMultiplier;                           // 0x7F4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExplorerNoteEarnXPMultiplier;                      // 0x7F8(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HarvestEarnXPMultiplier;                           // 0x7FC(0x4)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DefaultHyperthermicInsulation;                     // 0x800(0x4)(ExportObject, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DefaultHypothermicInsulation;                      // 0x804(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxTamingEffectivenessBaseLevelMultiplier;         // 0x808(0x4)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AEF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                FoodStatusNameOverride;                            // 0x810(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FoodStatusIconBackgroundOverride;                  // 0x820(0x8)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FoodStatusIconForegroundOverride;                  // 0x828(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPrimalCharacterStatusValueModifier> StatusValueModifiers;                              // 0x830(0x10)(ConstParm, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<uint8>                                StatusValueModifierDescriptionIndices;             // 0x840(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentStatusValues[0xC];                          // 0x850(0x30)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        AdditionalStatusValues[0xC];                       // 0x880(0x30)(ConstParm, ExportObject, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReplicatedCurrentStatusValues[0xC];                // 0x8B0(0x30)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReplicatedGlobalMaxStatusValues[0xC];              // 0x8E0(0x30)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReplicatedBaseLevelMaxStatusValues[0xC];           // 0x910(0x30)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReplicatedGlobalCurrentStatusValues[0xC];          // 0x940(0x30)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int8                                         CurrentStatusStates[0xC];                          // 0x970(0xC)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AF1[0x184];                                   // Fixing Size After Last Property  > TateDumper <
	float                                        StaminaRecoveryExtraResourceDecreaseMultiplier;    // 0xB00(0x4)(Edit, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DehydrationStaminaRecoveryRate;                    // 0xB04(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WaterConsumptionMultiplier;                        // 0xB08(0x4)(Edit, ConstParm, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FoodConsumptionMultiplier;                         // 0xB0C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class USoundBase*>                    EnteredStatusStateSounds;                          // 0xB10(0x10)(ExportObject, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class USoundBase*>                    ExitStatusStateSounds;                             // 0xB20(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraOxygenSpeedStatMultiplier;                    // 0xB30(0x4)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraTamedHealthMultiplier;                        // 0xB34(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WakingTameFoodConsumptionRateMultiplier;           // 0xB38(0x4)(Edit, ExportObject, Net, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwimmingStaminaRecoveryRateMultiplier;             // 0xB3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AF2[0x1C];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        MountedDinoDinoWeightMultiplier;                   // 0xB5C(0x4)(BlueprintVisible, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraWildDinoDamageMultiplier;                     // 0xB60(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraTamedDinoDamageMultiplier;                    // 0xB64(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WeightMultiplierWhenCarriedOrBased;                // 0xB68(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WeightMultiplierForCarriedPassengers;              // 0xB6C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WeightMultiplierForPlatformPassengersInventory;    // 0xB70(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoMaxStatAddMultiplierImprinting[0xC];           // 0xB74(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoImprintingQuality;                             // 0xBA4(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        bForceGainOxygen : 1;                              // Mask: 0x1, PropSize: 0x10xBA8(0x1)(BlueprintVisible, ExportObject, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFreezeStatusValues : 1;                           // Mask: 0x2, PropSize: 0x10xBA8(0x1)(Edit, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2BB : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPModifyMaxLevel : 1;                          // Mask: 0x8, PropSize: 0x10xBA8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNoStaminaRecoveryWhenStarving : 1;                // Mask: 0x10, PropSize: 0x10xBA8(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bApplyingStatusValueModifiers : 1;                 // Mask: 0x20, PropSize: 0x10xBA8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontScaleMeleeDamage : 1;                         // Mask: 0x40, PropSize: 0x10xBA8(0x1)(ConstParm, ExportObject, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2BC : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3AF6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TamedBaseHealthMultiplier;                         // 0xBAC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraBabyDinoConsumingFoodRateMultiplier;          // 0xBB0(0x4)(Edit, ConstParm, BlueprintVisible, Net, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AF7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        StatusValueNameOverrides;                          // 0xBB8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                RegainOxygenDamageType;                            // 0xBC8(0x8)(ConstParm, BlueprintVisible, ExportObject, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceAllowStatusModifierSortingWhenTamed;         // 0xBD0(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AF9[0x517];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalCharacterStatusComponent* GetDefaultObj();

	bool UpdateWeightStat();
	bool UpdatedCurrentStatusValue();
	bool TickStatus();
	bool SetTamed(float TameIneffectivenessModifier);
	int32 SetMutationPoints();
	float SetMaxStatusValue();
	TArray<float> SetLevelUpStatWeightOverrides();
	int32 SetLevelUpPoints();
	int32 SetExtraCharacterLevel();
	TArray<int32> SetCheatLevels();
	int32 SetBaseLevelNoStatChange();
	bool SetBaseLevelCustomized();
	bool SetBaseLevel();
	enum class EPrimalCharacterStatusValue SetAllStatsToMaximumExcluding();
	void SetAllStatsToMaximum();
	void ServerSyncReplicatedValues();
	void ServerForceUpdateMaxStatValues();
	bool RescaleMaxStat(enum class EPrimalCharacterStatusValue LevelUpValueType, float TargetValue);
	void RescaleAllStats();
	class AActor* RemoveStatusValueModifierByInstigator();
	int32 RemoveStatusValueModifierByIndex();
	void OnRep_ReplicatedExperiencePoints();
	void OnRep_GlobalMaxStatusValues();
	void OnRep_GlobalCurrentStatusValues();
	void OnRep_GlobalBaseLevelMaxStatusValues();
	void OnRep_CurrentStatusValues();
	TArray<float> NetSyncMaxStatusValues();
	bool ModifyCurrentStatusValue(float* ReturnValue);
	enum class EPrimalCharacterStatusState IsInStatusState(bool* ReturnValue);
	void IsAtMaxLevel(bool* ReturnValue);
	void IsAtMaxExperience(bool* ReturnValue);
	void HasExperienceForLevelUp(bool* ReturnValue);
	bool GetStatusValueString(class FString* ReturnValue);
	enum class EPrimalCharacterStatusValue GetStatusValueRecoveryRate(float* ReturnValue);
	enum class EPrimalCharacterStatusValue GetStatusNameString(class FString* ReturnValue);
	bool GetStatusMaxValueString(class FString* ReturnValue);
	enum class EPrimalCharacterStatusValue GetRawStatusValueRecoveryRate(float* ReturnValue);
	enum class EPrimalCharacterStatusValue GetMutationPoints(int32* ReturnValue);
	void GetMovementSpeedModifier(float* ReturnValue);
	void GetMeleeDamageModifier(float* ReturnValue);
	void GetMaxLevel(int32* ReturnValue);
	bool GetLevelUpPoints(int32* ReturnValue);
	void GetExtraCharacterLevel(int32* ReturnValue);
	void GetExperienceRequiredForPreviousLevelUp(float* ReturnValue);
	void GetExperienceRequiredForNextLevelUp(float* ReturnValue);
	bool GetDinoStatDistributionAgainstMax(float* ReturnValue);
	float GetDinoFoodConsumptionRateMultiplier();
	void GetDebugString(class FString* ReturnValue);
	void GetCraftingSpeedModifier(float* ReturnValue);
	void GetCharacterLevel(int32* ReturnValue);
	bool GetBaseLevelFromLevelUpPoints(int32* ReturnValue);
	class UPrimalCharacterStatusComponent* CopyPrimalStatusComponentValues();
	int32 ConvertIntToCharacterStatusEnum(enum class EPrimalCharacterStatusValue* ReturnValue);
	TArray<float> ClientSyncMaxStatusValues();
	void ClearAllMutationPoints();
	bool ClearAllLevelUpPoints();
	bool CanLevelUp(enum class EPrimalCharacterStatusValue LevelUpValueType, bool* ReturnValue);
	void CanGainLevel(bool* ReturnValue);
	float BPSetRecoveryRateStatusValue();
	int32 BPModifyMaxLevel(int32* ReturnValue);
	float BPModifyMaxExperiencePoints(float* ReturnValue);
	enum class EPrimalCharacterStatusValue BPGetPercentStatusValue(float* ReturnValue);
	enum class EPrimalCharacterStatusValue BPGetMaxStatusValue(float* ReturnValue);
	enum class EPrimalCharacterStatusValue BPGetCurrentStatusValue(float* ReturnValue);
	float BPDirectSetMaxStatusValue();
	float BPDirectSetCurrentStatusValue();
	bool BPAdjustStatusValueModification(float* ReturnValue);
	class AActor* AddStatusValueModifier(float* Speed);
	enum class EXPType AddExperience();
};

// 0x80 (0x1CB0 - 0x1C30)
// Class ShooterGame.PrimalCinematicActor
class APrimalCinematicActor : public APostProcessVolume
{
public:
	class UTextureRenderTarget2D*                RenderTarget;                                      // 0x1C30(0x8)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	TArray<struct FCinematicMaterial>            CinematicMaterials;                                // 0x1C38(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftObjectPtr<class UBinkMediaPlayer>       Movie;                                             // 0x1C48(0x30)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeOffsetSeconds;                                 // 0x1C78(0x4)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B01[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UBinkMediaPlayer*                      MovieRef;                                          // 0x1C80(0x8)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class ALevelSequenceActor>    FetchedLevelSequence;                              // 0x1C88(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B02[0x11];                                    // Fixing Size After Last Property  > TateDumper <
	enum class ETextureRenderTargetFormat        RenderTargetFormat;                                // 0x1CA1(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance)
	uint8                                        Pad_3B03[0xE];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalCinematicActor* GetDefaultObj();

	void TickInternal();
	void Stop();
	void Play();
};

// 0xFA0 (0xFC8 - 0x28)
// Class ShooterGame.PrimalClimbingSettings
class UPrimalClimbingSettings : public UObject
{
public:
	bool                                         bDebug;                                            // 0x28(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	bool                                         bAllowInputClimbing;                               // 0x29(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowSliding;                                     // 0x2A(0x1)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B04[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ArmSwitchAngle;                                    // 0x2C(0x4)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PreFlinchUnclimbableInterval;                      // 0x30(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PostFlinchUnclimbableInterval;                     // 0x34(0x4)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ClimbingWaitAfterQuakeFall;                        // 0x38(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseExtendedLandTrace;                             // 0x3C(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B07[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RootLocationInterpSpeed;                           // 0x40(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        JumpUpVelocity;                                    // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        JumpForwardVelocity;                               // 0x48(0x4)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        JumpDirectionVelocity;                             // 0x4C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        JumpCameraTransitionDuration;                      // 0x50(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ClimbingWaitForJump;                               // 0x54(0x4)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ForceReleaseOnImpulseForce;                        // 0x58(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FClimbingTypeSettings                 TypeSettings[0x4];                                 // 0x5C(0x70)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AttachAnchoredTraceRadius;                         // 0xCC(0x4)(Edit, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AttachEffectTraceDistanceForward;                  // 0xD0(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AttachEffectTraceDistanceBackward;                 // 0xD4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinAimDirectionDot;                                // 0xD8(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AimDirectionBias;                                  // 0xDC(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TracePlaneInterpolation;                           // 0xE0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HangingTracePlaneInterpolation;                    // 0xE4(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinFloorDirectionDot;                              // 0xE8(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FallingConsumeDurabilityMultiplier;                // 0xEC(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ImpactNormalOffsetAllowanceDot;                    // 0xF0(0x4)(Edit, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MoveTraceDistance;                                 // 0xF4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MoveTraceRadius;                                   // 0xF8(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HangingMinDotUp;                                   // 0xFC(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CeilingDistance;                                   // 0x100(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CeilingTraceRadius;                                // 0x104(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CeilingTraceDistance;                              // 0x108(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinCeilingTraceTime;                               // 0x10C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WallDistance;                                      // 0x110(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WallTraceRadius;                                   // 0x114(0x4)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WallTraceDistance;                                 // 0x118(0x4)(ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinWallTraceTime;                                  // 0x11C(0x4)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GroundMaxDotUp;                                    // 0x120(0x4)(Edit, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinFloorDistance;                                  // 0x124(0x4)(ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FloorTraceRadius;                                  // 0x128(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LandMinFloorSpaceDistance;                         // 0x12C(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LandFloorSpaceTraceRadius;                         // 0x130(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FlipMaxNormalDot;                                  // 0x134(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TurnMaxNormalDot;                                  // 0x138(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B17[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FClimbingTransitionParams             Transitions[0x20];                                 // 0x140(0xE00)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ClimbAnimPlayRateDistanceScale;                    // 0xF40(0x4)(Edit, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinClimbAnimPlayRate;                              // 0xF44(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxClimbAnimPlayRate;                              // 0xF48(0x4)(Edit, ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CameraYawMin;                                      // 0xF4C(0x4)(BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CameraYawMax;                                      // 0xF50(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CameraPitchUp;                                     // 0xF54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CameraPitchDown;                                   // 0xF58(0x4)(BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B19[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               CameraOffsetScale;                                 // 0xF60(0x18)(ConstParm, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HangingCameraPitchUp;                              // 0xF78(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HangingCameraPitchDown;                            // 0xF7C(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               HangingCameraOffsetScale;                          // 0xF80(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwitchToFPVDistance;                               // 0xF98(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwitchToFPVDownDot;                                // 0xF9C(0x4)(Edit, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwitchToFPVTransitionDuration;                     // 0xFA0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SwitchFromFPVTransitionDuration;                   // 0xFA4(0x4)(ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UpAndOverExtendedUp;                               // 0xFA8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UpAndOverExtendedForward;                          // 0xFAC(0x4)(BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HangingFailTraceExtraLength;                       // 0xFB0(0x4)(Edit, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HangingFailMinDotUp;                               // 0xFB4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HangingFailOppositeDirectTraceLength;              // 0xFB8(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HangingFailOppositeDirectTraceRadius;              // 0xFBC(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InvisibleWallTooCloseRadius;                       // 0xFC0(0x4)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B1B[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalClimbingSettings* GetDefaultObj();

};

// 0x240 (0x268 - 0x28)
// Class ShooterGame.PrimalColorSet
class UPrimalColorSet : public UObject
{
public:
	struct FColorSetDefinition                   ColorSetDefinitions[0x6];                          // 0x28(0x240)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalColorSet* GetDefaultObj();

};

// 0x1B0 (0x568 - 0x3B8)
// Class ShooterGame.PrimalCryopodTooltipWidget
class UPrimalCryopodTooltipWidget : public UTooltipSmartLayoutWidget
{
public:
	class UTexture2D*                            FemaleIcon;                                        // 0x3B8(0x8)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            MaleIcon;                                          // 0x3C0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          FemaleColor;                                       // 0x3C8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          MaleColor;                                         // 0x3D8(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                MatingCDString;                                    // 0x3E8(0x10)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B20[0x170];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalCryopodTooltipWidget* GetDefaultObj();

};

// 0x0 (0x558 - 0x558)
// Class ShooterGame.PrimalDestroyedMeshActor
class APrimalDestroyedMeshActor : public AFadingDestructibleActor
{
public:

	static class UClass* StaticClass();
	static class APrimalDestroyedMeshActor* GetDefaultObj();

};

// 0x58 (0x80 - 0x28)
// Class ShooterGame.PrimalDinoEntry
class UPrimalDinoEntry : public UObject
{
public:
	uint8                                        Pad_3B22[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	class FName                                  DinoNameTag;                                       // 0x50(0x8)(ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	class FString                                DinoDescriptiveName;                               // 0x58(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DinoIcon;                                          // 0x68(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    DinoMaterial;                                      // 0x70(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRequiresKill;                                     // 0x78(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B24[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalDinoEntry* GetDefaultObj();

};

// 0x28 (0x1430 - 0x1408)
// Class ShooterGame.PrimalDinoMeshComponent
class UPrimalDinoMeshComponent : public USkeletalMeshComponent
{
public:
	uint8                                        bUpdateBoundsWhenStationary;                       // 0x1408(0x1)(ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B25[0x27];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalDinoMeshComponent* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class ShooterGame.PrimalDinoSettings
class UPrimalDinoSettings : public UObject
{
public:
	TArray<struct FDinoFoodEffectivenessMultipliers> FoodEffectivenessMultipliers;                      // 0x28(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDinoFoodEffectivenessMultipliers> ExtraFoodEffectivenessMultipliers;                 // 0x38(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamingAffinityNoFoodDecreasePercentageSpeed;       // 0x48(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B27[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDamageTypeAdjuster>           BaseDamageTypeAdjusters;                           // 0x50(0x10)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDamageTypeAdjuster>           ExtraDamageTypeAdjusters;                          // 0x60(0x10)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DinoFoodTypeImage;                                 // 0x70(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                DinoFoodTypeName;                                  // 0x78(0x10)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWakingTameDisplayItemName;                        // 0x88(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B29[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalDinoSettings* GetDefaultObj();

};

// 0x0 (0x10E8 - 0x10E8)
// Class ShooterGame.PrimalDinoStatusComponent
class UPrimalDinoStatusComponent : public UPrimalCharacterStatusComponent
{
public:

	static class UClass* StaticClass();
	static class UPrimalDinoStatusComponent* GetDefaultObj();

};

// 0x230 (0x5E8 - 0x3B8)
// Class ShooterGame.PrimalDinoToolTipWidget
class UPrimalDinoToolTipWidget : public UToolTipWidget
{
public:
	class FString                                DinoNameLabelName;                                 // 0x3B8(0x10)(Edit, BlueprintVisible, ExportObject, Net, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                TamedLabelName;                                    // 0x3C8(0x10)(Edit, BlueprintVisible, Net, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                GenderLabelName;                                   // 0x3D8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                InfoLabelName;                                     // 0x3E8(0x10)(BlueprintVisible, BlueprintReadOnly, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                InfoLabel2Name;                                    // 0x3F8(0x10)(BlueprintVisible, ExportObject, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                DinoIconImageName;                                 // 0x408(0x10)(ConstParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DinoUnconsciousPanelName;                          // 0x418(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DinoTamingPanelName;                               // 0x420(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TorpidityProgressBarName;                          // 0x428(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CustomProgressBarName;                             // 0x430(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TamingProgressBarName;                             // 0x438(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HealthBarName;                                     // 0x440(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StaminaBarName;                                    // 0x448(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FoodBarName;                                       // 0x450(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  WeightBarName;                                     // 0x458(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  XPBarName;                                         // 0x460(0x8)(ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TorpidityBarName;                                  // 0x468(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  OxygenBarName;                                     // 0x470(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DamageBarName;                                     // 0x478(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SpeedBarName;                                      // 0x480(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowExtendedInfo;                                 // 0x488(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B2E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          FemaleColor;                                       // 0x48C(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          MaleColor;                                         // 0x49C(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          NoGenderColor;                                     // 0x4AC(0x10)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B30[0x11C];                                   // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            FoodBarDefaultBackground;                          // 0x5D8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            FoodBarDefaultForeground;                          // 0x5E0(0x8)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalDinoToolTipWidget* GetDefaultObj();

};

// 0x268 (0x620 - 0x3B8)
// Class ShooterGame.PrimalEggToolTipWidget
class UPrimalEggToolTipWidget : public UToolTipWidget
{
public:
	struct FLinearColor                          TemperatureColor_Perfect;                          // 0x3B8(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          TemperatureColor_Boosted;                          // 0x3C8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          TemperatureColor_Cool;                             // 0x3D8(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          TemperatureColor_TooCold;                          // 0x3E8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          TemperatureColor_Warm;                             // 0x3F8(0x10)(ConstParm, BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          TemperatureColor_TooHot;                           // 0x408(0x10)(Edit, BlueprintVisible, Net, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          GenderColor_Female;                                // 0x418(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          GenderColor_Male;                                  // 0x428(0x10)(ConstParm, BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          GenderColor_Unknown;                               // 0x438(0x10)(Edit, ConstParm, BlueprintVisible, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GenderIcon_Female;                                 // 0x448(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GenderIcon_Male;                                   // 0x450(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GenderIcon_Unknown;                                // 0x458(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RightColumnWidth;                                  // 0x460(0x4)(Edit, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TemperatureGaugeTotalDegreesToDisplay;             // 0x464(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TemperatureGaugeIndicatorHorizontalOffset;         // 0x468(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B32[0x1B4];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalEggToolTipWidget* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class ShooterGame.PrimalEngramEntry
class UPrimalEngramEntry : public UObject
{
public:
	uint8                                        Pad_3B35[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        RequiredCharacterLevel;                            // 0x50(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        RequiredEngramPoints;                              // 0x54(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGiveBlueprintToPlayerInventory : 1;               // Mask: 0x1, PropSize: 0x10x58(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanBeManuallyUnlocked : 1;                        // Mask: 0x2, PropSize: 0x10x58(0x1)(ConstParm, BlueprintReadOnly, Net, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceIsTekEngram : 1;                             // Mask: 0x4, PropSize: 0x10x58(0x1)(ExportObject, Net, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2BD : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3B36[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                BluePrintEntry;                                    // 0x60(0x8)(Net, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ExtraEngramDescription;                            // 0x68(0x10)(BlueprintVisible, BlueprintReadOnly, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FEngramEntries>                EngramRequirementSets;                             // 0x78(0x10)(ExportObject, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MyEngramIndex;                                     // 0x88(0x4)(OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EEngramGroup                      EngramGroup;                                       // 0x8C(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EEngramCategory                   EngramCategory;                                    // 0x8D(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B38[0x2];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalEngramEntry* GetDefaultObj();

};

// 0x138 (0x600 - 0x4C8)
// Class ShooterGame.PrimalFallingTreeActor
class APrimalFallingTreeActor : public ADestructibleBaseActor
{
public:
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x4C8(0x8)(Edit, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class UAudioComponent*                       AudioComponent;                                    // 0x4D0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
	uint8                                        Pad_3B3B[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            InitialTransform;                                  // 0x4E0(0x60)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bIsFalling : 1;                                    // Mask: 0x1, PropSize: 0x10x540(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAudioComponentForImpactSound : 1;              // Mask: 0x2, PropSize: 0x10x540(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasPlayedImpactSound : 1;                         // Mask: 0x4, PropSize: 0x10x540(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2BE : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3B3D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FallingProgress;                                   // 0x544(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HarvestSpeed;                                      // 0x548(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B40[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               HarvestDirection;                                  // 0x550(0x18)(Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentHarvestAngle;                               // 0x568(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HarvestAngleTarget;                                // 0x56C(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFadeOutLocation : 1;                              // Mask: 0x1, PropSize: 0x10x570(0x1)(ConstParm, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFadeOutMaterial : 1;                              // Mask: 0x2, PropSize: 0x10x570(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2BF : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3B41[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FadeOutDuration;                                   // 0x574(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               FadeOutLocationOffset;                             // 0x578(0x18)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UCurveLinearColor*                     HarvestSwayCurve;                                  // 0x590(0x8)(BlueprintVisible, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            HarvestSound;                                      // 0x598(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            GroundImpactSound;                                 // 0x5A0(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DistanceAlongTreeToSpawnImpactSound;               // 0x5A8(0x4)(Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B43[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UMaterialInstanceDynamic*>      HarvestMIDs;                                       // 0x5B0(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimalWindSourceComponent*            WindSourceComponent;                               // 0x5C0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WindSourceSize;                                    // 0x5C8(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B44[0x34];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalFallingTreeActor* GetDefaultObj();

	float UpdateWindSource();
};

// 0x0 (0x4D0 - 0x4D0)
// Class ShooterGame.PrimalFieldSystemActor
class APrimalFieldSystemActor : public AFieldSystemActor
{
public:

	static class UClass* StaticClass();
	static class APrimalFieldSystemActor* GetDefaultObj();

	void SetActivationType(enum class EFieldActivationType_New NewActivationType);
	void CE_Trigger(const struct FVector& IncomingImpactVector, float DirectionalForceStrengthMultiplier, float RadialForceStrengthMultiplier, float IncomingVelocity);
};

// 0x80 (0x548 - 0x4C8)
// Class ShooterGame.PrimalFoliageSolver
class APrimalFoliageSolver : public AActor
{
public:
	TArray<class UPrimalWindSourceComponent*>    WindSourceComponents;                              // 0x4C8(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FluidRadiusScale;                                  // 0x4D8(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FluidRadiusBias;                                   // 0x4DC(0x4)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseVolumetricDispatcher;                          // 0x4E0(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B63[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MinEvaluationsForOneTimeFoliageInteraction;        // 0x4E4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnabled;                                          // 0x4E8(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Transient, EditConst, GlobalConfig)
	uint8                                        Pad_3B64[0x5F];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalFoliageSolver* GetDefaultObj();

	void UnRegisterWindSource(class UPrimalWindSourceComponent* WindSource);
	void RegisterWindSource(class UPrimalWindSourceComponent* WindSource);
	enum class EInteractionType GetValidSourceCount(int32* ReturnValue);
	enum class EInteractionType GetSourceDataId(class FString* ReturnValue);
	struct FVector4f ApplySimParametersWithValues(const struct FTransform& SourceSpaceTransform, struct FVector* Location, struct FVector* ExtraCapsuleLocation, float InnerSphereRadius, float OuterSphereRadius, float InteractionStrength, float FoliagePlasticity, float WaterBendAmount, const struct FVector3f& DirectionalRadial, enum class EInteractionType InteractionType, const struct FVector4f& ExtraCapsuleVelocity, const struct FVector& OwnerLocation, const struct FVector4f& SrcScale);
	enum class EInteractionType ApplyParametersFromVolumetricDispatch(const struct FTransform& SourceSpaceTransform, const struct FVolumetricDispatch& Dispatch);
	float ApplyParametersFromSource(const struct FTransform& SourceSpaceTransform, class UPrimalWindSourceComponent* WindSource);
	float ApplyParameters();
};

// 0x2F48 (0x2F70 - 0x28)
// Class ShooterGame.PrimalGameData
class UPrimalGameData : public UObject
{
public:
	uint8                                        Pad_3B94[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	class FString                                ModName;                                           // 0x58(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	class FString                                ModDescription;                                    // 0x68(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FPrimalCharacterStatusValueDefinition StatusValueDefinitions[0xC];                       // 0x78(0x180)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FPrimalCharacterStatusStateDefinition StatusStateDefinitions[0xE];                       // 0x1F8(0x4D0)(Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FPrimalItemStatDefinition             ItemStatDefinitions[0x8];                          // 0x6C8(0xC0)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FPrimalItemDefinition                 ItemTypeDefinitions[0x9];                          // 0x788(0x120)(ConstParm, ExportObject, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FPrimalEquipmentDefinition            EquipmentTypeDefinitions[0xC];                     // 0x8A8(0x120)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        MasterItemList;                                    // 0x9C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPrimalItemQuality>            ItemQualityDefinitions;                            // 0x9D8(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        EngramBlueprintClasses;                            // 0x9E8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AdditionalEngramBlueprintClasses;                  // 0x9F8(0x10)(Edit, BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        RemoveEngramBlueprintClasses;                      // 0xA08(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FStatusValueModifierDescription> StatusValueModifierDescriptions;                   // 0xA18(0x10)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        PlayerSpawnRegions;                                // 0xA28(0x10)(ConstParm, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            TutorialDisplaySound;                              // 0xA38(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_StartItemDrag;                               // 0xA40(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_StopItemDrag;                                // 0xA48(0x8)(ConstParm, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PreventGrindingIcon;                               // 0xA50(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundClass*                           ExplorerNoteAudioSoundClass;                       // 0xA58(0x8)(ExportObject, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_CancelPlacingStructure;                      // 0xA60(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ChooseStructureRotation;                     // 0xA68(0x8)(Edit, ExportObject, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_FailPlacingStructure;                        // 0xA70(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ConfirmPlacingStructure;                     // 0xA78(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_StartPlacingStructure;                       // 0xA80(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_CorpseDecompose;                             // 0xA88(0x8)(BlueprintReadOnly, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ApplyLevelUp;                                // 0xA90(0x8)(ConstParm, BlueprintVisible, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ApplyLevelPoint;                             // 0xA98(0x8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_LearnedEngram;                               // 0xAA0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ReconnectToCharacter;                        // 0xAA8(0x8)(Edit, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_DropAllItems;                                // 0xAB0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_TransferAllItemsToRemote;                    // 0xAB8(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_TransferAllItemsFromRemote;                  // 0xAC0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_TransferItemToRemote;                        // 0xAC8(0x8)(ExportObject, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_TransferItemFromRemote;                      // 0xAD0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_AddItemToSlot;                               // 0xAD8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_RemoveItemFromSlot;                          // 0xAE0(0x8)(Edit, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ClearCraftQueue;                             // 0xAE8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_AddToCraftQueue;                             // 0xAF0(0x8)(Edit, ExportObject, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_AddToCraftQueueAlt;                          // 0xAF8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_SetRadioFrequency;                           // 0xB00(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_AddPinToMap;                                 // 0xB08(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_RemovePinFromMap;                            // 0xB10(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ApplyDye;                                    // 0xB18(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ApplyPaint;                                  // 0xB20(0x8)(ExportObject, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_SetTextGeneric;                              // 0xB28(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_SplitItemStack;                              // 0xB30(0x8)(ConstParm, BlueprintReadOnly, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_MergeItemStack;                              // 0xB38(0x8)(Edit, ConstParm, BlueprintVisible, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_InputPinDigit;                               // 0xB40(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_PinValidated;                                // 0xB48(0x8)(ConstParm, BlueprintReadOnly, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_PinRejected;                                 // 0xB50(0x8)(ExportObject, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_TribeWarBegin;                               // 0xB58(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_TribeWarEnd;                                 // 0xB60(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_DropInventoryItem;                           // 0xB68(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_RefillWaterContainer;                        // 0xB70(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FAppIDItem>                    CoreAppIDItems;                                    // 0xB78(0x10)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FAppIDItem>                    AppIDItems;                                        // 0xB88(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalEngramEntry*>            EngramBlueprintEntries;                            // 0xB98(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalDinoEntry*>              DinoEntriesObjects;                                // 0xBA8(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UGenericDataListEntry*>         ExplorerNoteEntriesObjects;                        // 0xBB8(0x10)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UGenericDataListEntry*>         HeadHairStylesEntriesObjects;                      // 0xBC8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UGenericDataListEntry*>         FacialHairStylesEntriesObjects;                    // 0xBD8(0x10)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultMultiUseToolTipWidget;                      // 0xBE8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultToolTipWidget;                              // 0xBF0(0x8)(Edit, ExportObject, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultDinoMinimalTooltipWidget;                   // 0xBF8(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultItemToolTipWidget;                          // 0xC00(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                StarterNoteItem;                                   // 0xC08(0x8)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        PrimaryResources;                                  // 0xC10(0x10)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                GenericDroppedItemTemplate;                        // 0xC20(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    PostProcess_KnockoutBlur;                          // 0xC28(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    AdditionalDeathPostProcessEffect;                  // 0xC30(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UMaterialInterface>> BuffPostProcessEffects;                            // 0xC38(0x10)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UMaterialInterface>> AdditionalBuffPostProcessEffects;                  // 0xC48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FRangedValues>                 EngramPointPurchaseRanges;                         // 0xC58(0x10)(ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                GenericDroppedItemTemplateLowQuality;              // 0xC68(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B97[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            UnknownIcon;                                       // 0xC80(0x8)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    UnknownMaterial;                                   // 0xC88(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            MasterDyeListLUT;                                  // 0xC90(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            WhiteTexture;                                      // 0xC98(0x8)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, DuplicateTransient)
	class UTexture2D*                            BlueprintBackground;                               // 0xCA0(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            BabyCuddleIcon;                                    // 0xCA8(0x8)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config)
	class UTexture2D*                            ParentDinoIcon;                                    // 0xCB0(0x8)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ImprintedRiderIcon;                                // 0xCB8(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            WeaponAccessoryActivatedIcon;                      // 0xCC0(0x8)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EngramBackground;                                  // 0xCC8(0x8)(Edit, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            VoiceChatIcon;                                     // 0xCD0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            VoiceChatMutedIcon;                                // 0xCD8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ItemButtonRecentlySelectedBackground;              // 0xCE0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DinoEntries;                                       // 0xCE8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AdditionalDinoEntries;                             // 0xCF8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalGeneralArmorDegradationMultiplier;           // 0xD08(0x4)(Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalSpecificArmorDegradationMultiplier;          // 0xD0C(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalSpecificArmorRatingMultiplier;               // 0xD10(0x4)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalGeneralArmorRatingMultiplier;                // 0xD14(0x4)(ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EnemyFoundationPreventionRadius;                   // 0xD18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceEnablePhysicsSimulation;                     // 0xD1C(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B99[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FColorDefinition>              ColorDefinitions;                                  // 0xD20(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UObject*>                       ExtraResources;                                    // 0xD30(0x10)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UObject*>                       BaseExtraResources;                                // 0xD40(0x10)(Edit, ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UObject>>         BaseExtraResourcesSoft;                            // 0xD50(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UObject>>         BaseExtraResourcesContainersSoft;                  // 0xD60(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            CombatMusicDay;                                    // 0xD70(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            CombatMusicNight;                                  // 0xD78(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            CombatMusicDay_Heavy;                              // 0xD80(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            CombatMusicNight_Heavy;                            // 0xD88(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            LevelUpStingerSound;                               // 0xD90(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            TrackMissionSound;                                 // 0xD98(0x8)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            UntrackMissionSound;                               // 0xDA0(0x8)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FPlayerCharacterGenderDefinition      PlayerCharacterGenderDefinitions[0x2];             // 0xDA8(0x1470)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultGameMode;                                   // 0x2218(0x8)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, SubobjectReference)
	struct FLevelExperienceRamp                  LevelExperienceRamps[0x4];                         // 0x2220(0x40)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLevelExperienceRamp                  SinglePlayerLevelExperienceRamps[0x4];             // 0x2260(0x40)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FNamedTeamDefinition>          NamedTeamDefinitions;                              // 0x22A0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                PlayerLevelEngramPoints;                           // 0x22B0(0x10)(Edit, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                PlayerLevelEngramPointsSP;                         // 0x22C0(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        PreventBuildStructureReasonStrings;                // 0x22D0(0x10)(Edit, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FExplorerNoteAchievement>      ExplorerNoteAchievements;                          // 0x22E0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_NPC;                                         // 0x22F0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_SupplyCrates;                                // 0x2300(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FActiveEventSupplyCrateWeight> Remap_ActiveEventSupplyCrates;                     // 0x2310(0x10)(Edit, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_ResourceComponents;                          // 0x2320(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_NPCSpawnEntries;                             // 0x2330(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_Engrams;                                     // 0x2340(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemapping>               Remap_Items;                                       // 0x2350(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassAddition>                AdditionalStructureEngrams;                        // 0x2360(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FBuffAddition>                 AdditionalDefaultBuffs;                            // 0x2370(0x10)(ExportObject, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FAvailableMission>             AvailableMissions;                                 // 0x2380(0x10)(EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ActorToSpawnUponEnemyCoreStructureDeath;           // 0x2390(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> AdditionalStructuresToPlace;                       // 0x2398(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FStructureToBuildAddition>     AdditionalStructuresToBuild;                       // 0x23A8(0x10)(Edit, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FStructureVariantAddition>     AdditionalStructureVariants;                       // 0x23B8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        MasterDyeList;                                     // 0x23C8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B9C[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        EnemyCoreStructureDeathActorRadiusBuildCheck;      // 0x23E8(0x4)(OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B9D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DeathDestructionDepositInventoryClass;             // 0x23F0(0x8)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            MateBoostIcon;                                     // 0x23F8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            SoftTameLimitCryoIcon;                             // 0x2400(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EggBoostIcon;                                      // 0x2408(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            MatingIcon;                                        // 0x2410(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            NearFeedIcon;                                      // 0x2418(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            BuffedIcon;                                        // 0x2420(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TethererdIcon;                                     // 0x2428(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                FooterTemplate;                                    // 0x2430(0x8)(ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TribeXPSharePercent;                               // 0x2438(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        OverrideServerPhysXSubsteps;                       // 0x243C(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideServerPhysXSubstepsDeltaTime;              // 0x2440(0x4)(BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bInitialized;                                      // 0x2444(0x1)(BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3B9E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FPlayerDynamicMaterialFloat>   DefaultDynamicMaterialByteFloats;                  // 0x2448(0x10)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPlayerDynamicMaterialVector>  DefaultDynamicMaterialByteVectors;                 // 0x2458(0x10)(Edit, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPlayerDynamicMaterialColors>  DefaultDynamicMaterialByteColors;                  // 0x2468(0x10)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B9F[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            Sound_TamedDinos[0x3];                             // 0x24C8(0x18)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ItemStartCrafting;                           // 0x24E0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ItemFinishCrafting;                          // 0x24E8(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ItemStartRepairing;                          // 0x24F0(0x8)(EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ItemFinishRepairing;                         // 0x24F8(0x8)(ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                NotifClass;                                        // 0x2500(0x8)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                StructureDefaultOverlayToolTipWidget;              // 0x2508(0x8)(Edit, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MeleeHitColorizeStructuresUI;                      // 0x2510(0x8)(ConstParm, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinPaintDurationConsumption;                       // 0x2518(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxPaintDurationConsumption;                       // 0x251C(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinDinoRadiusForPaintConsumption;                  // 0x2520(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDinoRadiusForPaintConsumption;                  // 0x2524(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDinoBabySetup>                DinoBabySetups;                                    // 0x2528(0x10)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDinoBabySetup>                DinoGestationSetups;                               // 0x2538(0x10)(ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SoapItemTemplate;                                  // 0x2548(0x8)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            NameTagWildcardAdmin;                              // 0x2550(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            NameTagServerAdmin;                                // 0x2558(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            NameTagTribeAdmin;                                 // 0x2560(0x8)(ConstParm, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    BadgeGroupsNameTag;                                // 0x2568(0x10)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CrossPlayGeneric;                                  // 0x2578(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CrossPlaySteam;                                    // 0x2580(0x8)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CrossPlayPS5;                                      // 0x2588(0x8)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CrossPlayXSX;                                      // 0x2590(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        AchievementIDs;                                    // 0x2598(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BA1[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<float>                                AdditionalEggWeightsToSpawn;                       // 0x25F8(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AdditionalEggItemsToSpawn;                         // 0x2608(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                FertilizedAdditionalEggWeightsToSpawn;             // 0x2618(0x10)(ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        FertilizedAdditionalEggItemsToSpawn;               // 0x2628(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemAchievementsName;                              // 0x2638(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ItemAchievementsList;                              // 0x2648(0x10)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        GlobalCuddleFoodList;                              // 0x2658(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMultiAchievement>             MultiAchievements;                                 // 0x2668(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            DinoIncrementedImprintingSound;                    // 0x2678(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            HitMarkerCharacterSound;                           // 0x2680(0x8)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            HitMarkerStructureSound;                           // 0x2688(0x8)(BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialParameterCollection*          FOVScaleMaterialParamCollection;                   // 0x2690(0x8)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FNPCSpawnEntriesContainerAdditions> CoreNPCSpawnEntriesContainerAdditions;             // 0x2698(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FNPCSpawnEntriesContainerAdditions> TheNPCSpawnEntriesContainerAdditions;              // 0x26A8(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    PostProcess_ColorLUT;                              // 0x26B8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultStructureSettings;                          // 0x26C0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_DossierUnlocked;                             // 0x26C8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_ItemUseOnItem;                               // 0x26D0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_RemoveItemSkin;                              // 0x26D8(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_RemoveClipAmmo;                              // 0x26E0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FExplorerNoteEntry>            ExplorerNoteEntries;                               // 0x26E8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExplorerNoteXPGain;                                // 0x26F8(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BA7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                ExplorerNoteIntroIDs;                              // 0x2700(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            BuffTypeBackgrounds[0x3];                          // 0x2710(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            BuffTypeForegrounds[0x3];                          // 0x2728(0x18)(BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             ExplorerNoteXPBuff;                                // 0x2740(0x30)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             SpecialExplorerNoteXPBuff;                         // 0x2770(0x30)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PerMapExplorerNoteLockedIcon;                      // 0x27A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TamedDinoUnlockedIcon;                             // 0x27A8(0x8)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TamedDinoLockedIcon;                               // 0x27B0(0x8)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FUnlockableEmoteEntry>         UnlockableEmotes;                                  // 0x27B8(0x10)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FEmoteGroup>                   EmoteGroups;                                       // 0x27C8(0x10)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UAnimMontage>>   AdditionalAnimationsPreventInput;                  // 0x27D8(0x10)(Edit, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRemappingWeight>         GlobalNPCRandomSpawnClassWeights;                  // 0x27E8(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DinoOrderIcon;                                     // 0x27F8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DinoMinimalIcon;                                   // 0x2800(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PlayerMinimalIcon;                                 // 0x2808(0x8)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalEmitterSpawnable> DinoOrderEffect_MoveTo;                            // 0x2810(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalEmitterSpawnable> DinoOrderEffect_AttackTarget;                      // 0x2840(0x30)(BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FObjectCorrelation>            AdditionalHumanMaleAnimSequenceOverrides;          // 0x2870(0x10)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FObjectCorrelation>            AdditionalHumanFemaleAnimSequenceOverrides;        // 0x2880(0x10)(Edit, ConstParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FObjectCorrelation>            AdditionalHumanMaleAnimMontagesOverrides;          // 0x2890(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FObjectCorrelation>            AdditionalHumanFemaleAnimMontagesOverrides;        // 0x28A0(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FOverrideAnimBlueprintEntry>   AdditionalHumanMaleOverrideAnimBlueprints;         // 0x28B0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FOverrideAnimBlueprintEntry>   AdditionalHumanFemaleOverrideAnimBlueprints;       // 0x28C0(0x10)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ServerExtraWorldSingletonActorClasses;             // 0x28D0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceServerUseDinoList;                           // 0x28E0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BAA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        ExtraStackedGameDataClasses;                       // 0x28E8(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHairStyleDefinition>          HeadHairStyleDefinitions;                          // 0x28F8(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHairStyleDefinition>          FacialHairStyleDefinitions;                        // 0x2908(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHairStyleDefinition>          EyebrowsDefinitions;                               // 0x2918(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint32                                       PlayerMeshMaterialIndex;                           // 0x2928(0x4)(Edit, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EyebrowMaskParamName;                              // 0x292C(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HairMaskParamName;                                 // 0x2934(0x8)(BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FacialHairMaskParamName;                           // 0x293C(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BAB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHairStyleDefinition                  EyelashesDefinitions;                              // 0x2948(0xB8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHairStyleDefinition>          AdditionalHeadHairStyleDefinitions;                // 0x2A00(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHairStyleDefinition>          AdditionalFacialHairStyleDefinitions;              // 0x2A10(0x10)(ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            GenericWaterPostprocessAmbientSound;               // 0x2A20(0x8)(Edit, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                OverridePlayerDataClass;                           // 0x2A28(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          AllDinosAchievementNameTags;                       // 0x2A30(0x10)(Edit, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            GenericArrowPickedUpSound;                         // 0x2A40(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            AimMagnetismIcon;                                  // 0x2A48(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            UnlockIcon;                                        // 0x2A50(0x8)(ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                WheelFolderColor;                                  // 0x2A58(0x4)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                WheelBackColor;                                    // 0x2A5C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       CorpseLocatorEffect;                               // 0x2A60(0x8)(ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            MaxInventoryIcon;                                  // 0x2A68(0x8)(Edit, ExportObject, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ItemSkinIcon;                                      // 0x2A70(0x8)(ConstParm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<enum class ECollisionChannel>         SkeletalPhysCustomBodyAdditionalIgnores;           // 0x2A78(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ActionWheelClickSound;                             // 0x2A88(0x8)(Edit, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ActionWheelSelectSound;                            // 0x2A90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ActionWheelProgressSound;                          // 0x2A98(0x8)(ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ActionWheelProgressCompleteSound;                  // 0x2AA0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_GenericBoardPassenger;                       // 0x2AA8(0x8)(ExportObject, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_GenericUnboardPassenger;                     // 0x2AB0(0x8)(ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            Sound_CraftingTabToggle;                           // 0x2AB8(0x8)(Edit, ConstParm, ExportObject, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       LockedToSeatingStructureParticle;                  // 0x2AC0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                GenericBatteryItemClass;                           // 0x2AC8(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BAE[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class UPrimalItem>>     GenesisSeasonPassItems;                            // 0x2B20(0x10)(Edit, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultStructureDestroyedMeshActorClass;           // 0x2B30(0x8)(BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DefaultTradableOptions;                            // 0x2B38(0x10)(EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        CoreTradableOptions;                               // 0x2B48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AdditionalTradableOptions;                         // 0x2B58(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalBuff>>     AlwaysAllowBuffClasses;                            // 0x2B68(0x10)(Edit, ExportObject, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FGrinderItemReplacer>          GrinderReplacements;                               // 0x2B78(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FInvalidReferenceRedirector>   InvalidReferenceRedirects;                         // 0x2B88(0x10)(BlueprintReadOnly, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FInvalidReferenceRedirector>   AdditionalInvalidReferenceRedirects;               // 0x2B98(0x10)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWantsToRunMissions;                               // 0x2BA8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BB4[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                CoreWorldBuffDefinitions;                          // 0x2BB0(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, DuplicateTransient)
	TArray<class UClass*>                        AdditionalWorldBuffDefinitions;                    // 0x2BB8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UPrimalWorldBuffData*                  WorldBuffData;                                     // 0x2BC8(0x8)(ExportObject, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          PointOfInterest_IndicatorColor_Default;            // 0x2BD0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          PointOfInterest_IndicatorColor_ObjectiveComplete;  // 0x2BE0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          PointOfInterest_ProgressBarColor_TamingAffinity;   // 0x2BF0(0x10)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PointOfInterest_Icon_TamingInProgress;             // 0x2C00(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PointOfInterest_Icon_TamingComplete;               // 0x2C08(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PointOfInterest_Icon_Player;                       // 0x2C10(0x8)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                GlobalUIDataClass_PS5;                             // 0x2C18(0x8)(Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                GlobalUIDataClass_XSX;                             // 0x2C20(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                GlobalUIDataClass;                                 // 0x2C28(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FWorldDefaultItemSet>          DefaultMapItemSets;                                // 0x2C30(0x10)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FWorldDefaultItemSet>          AdditionalDefaultMapItemSets;                      // 0x2C40(0x10)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class AActor>                  PhotoModeClass;                                    // 0x2C50(0x30)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class AActor>                  OverridePhotoModeClass;                            // 0x2C80(0x30)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FExtraEggItem>                 ExtraEggItems;                                     // 0x2CB0(0x10)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FExtraEggItem>                 AdditionalExtraEggItems;                           // 0x2CC0(0x10)(ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UStaticMesh*                           CopySettingsVisualIndicatorMesh;                   // 0x2CD0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    CopySettingsVisualIndicatorMaterial;               // 0x2CD8(0x8)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSlateColor>                   SubtitleColors;                                    // 0x2CE0(0x10)(BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                HUDOverlayGestationTooltip;                        // 0x2CF0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> ProfilingDinos;                                    // 0x2CF8(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ProfilingStructures;                               // 0x2D08(0x10)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UShooterHaptics*                       Haptics;                                           // 0x2D18(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCryopodPersistantBuffs>       CryopodPersistantBuffsMap;                         // 0x2D20(0x10)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FConfigSupplyCrateItemsOverride> CoreOverrideSupplyCrateItems;                      // 0x2D30(0x10)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            PreRespawnUISound;                                 // 0x2D40(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            PostRespawnUISound;                                // 0x2D48(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BB7[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSubtitleStringMap>            BookendSubtitles;                                  // 0x2D60(0x10)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UObject>>        DLCStructsAndEnums;                                // 0x2D70(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDinoAbilities>                AbilityDescriptions;                               // 0x2D80(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BBA[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        DinoTrackFilterOptions;                            // 0x2DE0(0x10)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        CustomDinoTrackFilterOptions;                      // 0x2DF0(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UModDataAsset*                         AdditionalModDataAsset;                            // 0x2E00(0x8)(ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPlayerConfigVoiceCollectionInfo> PlayerConfigVoiceCollectionOptions;                // 0x2E08(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPlayerConfigVoiceCollectionInfo> CustomPlayerConfigVoiceCollectionOptions;          // 0x2E18(0x10)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPlayerBoneBodyPreset>         BodyBonePresetOptions;                             // 0x2E28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPlayerBoneBodyPreset>         CustomBodyBonePresetOptions;                       // 0x2E38(0x10)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ExperienceIcon;                                    // 0x2E48(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class UObject>                 CDOLiveUpdatesDataClass;                           // 0x2E50(0x30)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                VolumetricDispatcherClass;                         // 0x2E80(0x8)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultDestructionInstanceActorWithGeoCollection;  // 0x2E88(0x8)(ConstParm, ExportObject, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class UDamageType>             CheatDestroyFoliageDamageType;                     // 0x2E90(0x30)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultFieldSystemActorClass;                      // 0x2EC0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultWaterNavArea;                               // 0x2EC8(0x8)(Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultStructureNavArea;                           // 0x2ED0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UDataTable*                            ItemSpawnBlacklistDataTable;                       // 0x2ED8(0x8)(BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventPhotoMode;                                 // 0x2EE0(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BBF[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class APrimalBuff>             CarriedNotifyBuff;                                 // 0x2EE8(0x30)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftObjectPtr<class UPrimalWordFilter>      MainNameWordList;                                  // 0x2F18(0x30)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ModIcon;                                           // 0x2F48(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        RadialSelecterNumDivisionsOverride;                // 0x2F50(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideCorpseLifespanFixed;                       // 0x2F54(0x4)(BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventCharacterCreationSpawnMap : 1;             // Mask: 0x1, PropSize: 0x10x2F58(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventCharacterCreationHeightSlider : 1;         // Mask: 0x2, PropSize: 0x10x2F58(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2C0 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3BC0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DinoCountGameModeMultiply;                         // 0x2F5C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsSOTFGameMode : 1;                               // Mask: 0x1, PropSize: 0x10x2F60(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseDisablePaintingsUserSetting : 1;               // Mask: 0x2, PropSize: 0x10x2F60(0x1)(ConstParm, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceInfiniteWeight : 1;                          // Mask: 0x4, PropSize: 0x10x2F60(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAbilityDescriptions : 1;                       // Mask: 0x8, PropSize: 0x10x2F60(0x1)(ConstParm, ExportObject, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDinoConsumeRunningStaminaWithPC : 1;              // Mask: 0x10, PropSize: 0x10x2F60(0x1)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableFoodConsumption : 1;                       // Mask: 0x20, PropSize: 0x10x2F60(0x1)(BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreSwimmingStaminaRecoveryRate : 1;            // Mask: 0x40, PropSize: 0x10x2F60(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCameraPPAllowNonShooterChar : 1;                  // Mask: 0x80, PropSize: 0x10x2F60(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableHarvesting : 1;                            // Mask: 0x1, PropSize: 0x10x2F61(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRunningWhileCrafting : 1;                    // Mask: 0x2, PropSize: 0x10x2F61(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDinoCheckControlledByPlayerBuff : 1;              // Mask: 0x4, PropSize: 0x10x2F61(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRidingEquipsDefaultWeapon : 1;                    // Mask: 0x8, PropSize: 0x10x2F61(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableFogOfWar : 1;                              // Mask: 0x10, PropSize: 0x10x2F61(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowForceAttackUnconsciousTarget : 1;            // Mask: 0x20, PropSize: 0x10x2F61(0x1)(Edit, ConstParm, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bStopAttackingUnconsciousTarget : 1;               // Mask: 0x40, PropSize: 0x10x2F61(0x1)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableTamedDinoStasis : 1;                       // Mask: 0x80, PropSize: 0x10x2F61(0x1)(Edit, BlueprintVisible, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOfficialServerAllowDinoPossesion : 1;             // Mask: 0x1, PropSize: 0x10x2F62(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceStepDamageOnlyFoliage : 1;                   // Mask: 0x2, PropSize: 0x10x2F62(0x1)(BlueprintVisible, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableWakingTame : 1;                            // Mask: 0x4, PropSize: 0x10x2F62(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontForceFPVForPCViewTarget : 1;                  // Mask: 0x8, PropSize: 0x10x2F62(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideRepairOnDinoToolTip : 1;                      // Mask: 0x10, PropSize: 0x10x2F62(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableMUEntriesForSOTF : 1;                      // Mask: 0x20, PropSize: 0x10x2F62(0x1)(Edit, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableTribeManager : 1;                          // Mask: 0x40, PropSize: 0x10x2F62(0x1)(ConstParm, BlueprintVisible, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowJumpingWhileCrafting : 1;                    // Mask: 0x80, PropSize: 0x10x2F62(0x1)(ExportObject, BlueprintReadOnly, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDinoKillVictimItemCollection : 1;          // Mask: 0x1, PropSize: 0x10x2F63(0x1)(Edit, BlueprintVisible, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSOTFInputHandling : 1;                         // Mask: 0x2, PropSize: 0x10x2F63(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSOTFHUDHandling : 1;                           // Mask: 0x4, PropSize: 0x10x2F63(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableItemAddedRemovedNotifications : 1;         // Mask: 0x8, PropSize: 0x10x2F63(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableCharacterGetCustomTooltip : 1;              // Mask: 0x10, PropSize: 0x10x2F63(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyAllowGlobalChatInLobby : 1;                   // Mask: 0x20, PropSize: 0x10x2F63(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableUnderMeshChecks : 1;                       // Mask: 0x40, PropSize: 0x10x2F63(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSameTeamAlwaysRelevant : 1;                       // Mask: 0x80, PropSize: 0x10x2F63(0x1)(Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSOTFFloatingDamage : 1;                        // Mask: 0x1, PropSize: 0x10x2F64(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableCanMoveThroughActor : 1;                    // Mask: 0x2, PropSize: 0x10x2F64(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableDefaultWeaponEquipOnEmptySlot : 1;         // Mask: 0x4, PropSize: 0x10x2F64(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableWildDinoInventoryDrop : 1;                 // Mask: 0x8, PropSize: 0x10x2F64(0x1)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableWildBabySpawns : 1;                        // Mask: 0x10, PropSize: 0x10x2F64(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2C1 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3BC2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        GlobalHarvestHealthMultiplierOverride;             // 0x2F68(0x4)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BC3[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalGameData* GetDefaultObj();

	float TickedWorld(class UWorld** TheWorld);
	void LocalIsPerMapExplorerNoteUnlocked(int32 ExplorerNoteIndex, bool* ReturnValue);
	void LocalIsGlobalExplorerNoteUnlocked(int32 ExplorerNoteIndex, bool* ReturnValue);
	void LoadedWorld(class UWorld** TheWorld);
	void GetXPMax(enum class ELevelExperienceRampType* LevelType, float* ReturnValue);
	int32 GetStatusStateDefinitions(struct FPrimalCharacterStatusStateDefinition* ReturnValue);
	struct FInvalidReferenceRedirector GetRedirectedClassFromRedirector(class UClass** ReturnValue);
	class UObject* GetRedirectedClass(const class FString& Key, class UClass** ReturnValue);
	void GetNonBPDinoAncestorsFromBP(TArray<struct FDinoAncestorsEntryBlueprint>* BPEntries, TArray<struct FDinoAncestorsEntry>* ReturnValue);
	void GetLevelXP(enum class ELevelExperienceRampType* LevelType, int32* ForLevel, float* ReturnValue);
	void GetLevelMax(enum class ELevelExperienceRampType* LevelType, int32* ReturnValue);
	void GetLevelExperienceRamp(enum class ELevelExperienceRampType* LevelType, struct FLevelExperienceRamp* ReturnValue);
	void GetIndexDynamicMatBytesByName(class FName* Name, int32* ReturnValue);
	void GetGenericCombatMusic(class APrimalCharacter* ForCharacter, class APrimalCharacter** ForEnemy, class USoundBase** ReturnValue);
	void GetExplorerNoteDescription(int32 ExplorerNoteIndex, class FString* ReturnValue);
	class UClass* GetDinoEntry(class UClass** ReturnValue);
	void GetColorForDefinition(int32* DefinitionIndex, struct FLinearColor* ReturnValue);
	int32 GetBuffsForBitmask(TArray<class UClass*>* ReturnValue);
	void GetBPDinoAncestorsFromNonBP(TArray<struct FDinoAncestorsEntry>* NonBPEntries, TArray<struct FDinoAncestorsEntryBlueprint>* ReturnValue);
	void GetBitmaskForBuffs(TArray<class APrimalBuff*>* ActiveBuffs, int32* ReturnValue);
	void GetAllAbilitiesForDino(class FName* DinoTag, TArray<struct FDinoAbilityInfo>* AbilityInfos, bool* ReturnValue);
	void GetAbilityForInputAction(class FName* DinoTag, class FName InputAction, struct FDinoAbilityInfo* AbilityInfo, bool* ReturnValue);
	void BPMergeModGameData(class UPrimalGameData** AnotherGameData);
	void BPInitializeGameData();
	float BPGetItemQualityIndex(int32* ReturnValue);
	void BPGetGlobalUIData(bool bIsPsOrXbUi, class UPrimalGlobalUIData** ReturnValue);
	void BPGetGameData(class UPrimalGameData** ReturnValue);
	class FString ArkChangeUIPlatform();
};

// 0x360 (0x390 - 0x30)
// Class ShooterGame.PrimalGameSettingsData
class UPrimalGameSettingsData : public UPrimaryDataAsset
{
public:
	bool                                         IsBaseBP;                                          // 0x30(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BC4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DifficultyOffset;                                  // 0x34(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        NewMaxStructuresInRange;                           // 0x38(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        DayCycleSpeedScale;                                // 0x3C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        DayTimeSpeedScale;                                 // 0x40(0x4)(BlueprintVisible, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        NightTimeSpeedScale;                               // 0x44(0x4)(ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         OverrideStartTime;                                 // 0x48(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	uint8                                        Pad_3BC5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        StartTimeHour;                                     // 0x4C(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        DinoDamageMultiplier;                              // 0x50(0x4)(Edit, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        PlayerDamageMultiplier;                            // 0x54(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        StructureDamageMultiplier;                         // 0x58(0x4)(BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        PlayerResistanceMultiplier;                        // 0x5C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        DinoResistanceMultiplier;                          // 0x60(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        StructureResistanceMultiplier;                     // 0x64(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        XPMultiplier;                                      // 0x68(0x4)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        ListenServerTetherDistanceMultiplier;              // 0x6C(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        HarvestAmountMultiplier;                           // 0x70(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        TamingSpeedMultiplier;                             // 0x74(0x4)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        PlayerCharacterWaterDrainMultiplier;               // 0x78(0x4)(Edit, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        PlayerCharacterFoodDrainMultiplier;                // 0x7C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        DinoCharacterFoodDrainMultiplier;                  // 0x80(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        PlayerCharacterStaminaDrainMultiplier;             // 0x84(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        DinoCharacterStaminaDrainMultiplier;               // 0x88(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        PlayerCharacterHealthRecoveryMultiplier;           // 0x8C(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        DinoCharacterHealthRecoveryMultiplier;             // 0x90(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        DinoCountMultiplier;                               // 0x94(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        HarvestHealthMultiplier;                           // 0x98(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        PvEStructureDecayPeriodMultiplier;                 // 0x9C(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        ResourcesRespawnPeriodMultiplier;                  // 0xA0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_Health;                     // 0xA4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_Stamina;                    // 0xA8(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_Torpidity;                  // 0xAC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_Oxygen;                     // 0xB0(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_Food;                       // 0xB4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_Water;                      // 0xB8(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_Temperature;                // 0xBC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_Weight;                     // 0xC0(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_Damage;                     // 0xC4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_Speed;                      // 0xC8(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamed_TemperatureFortitude;       // 0xCC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_Health;                  // 0xD0(0x4)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_Stamina;                 // 0xD4(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_Torpidity;               // 0xD8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_Oxygen;                  // 0xDC(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_Food;                    // 0xE0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_Water;                   // 0xE4(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_Temperature;             // 0xE8(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_Weight;                  // 0xEC(0x4)(ExportObject, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_Damage;                  // 0xF0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_Speed;                   // 0xF4(0x4)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAdd_TemperatureFortitude;    // 0xF8(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_Health;                  // 0xFC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_Stamina;                 // 0x100(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_Torpidity;               // 0x104(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_Oxygen;                  // 0x108(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_Food;                    // 0x10C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_Water;                   // 0x110(0x4)(ConstParm, BlueprintVisible, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_Temperature;             // 0x114(0x4)(ConstParm, BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_Weight;                  // 0x118(0x4)(Edit, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_Damage;                  // 0x11C(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_Speed;                   // 0x120(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoTamedAff_TemperatureFortitude;    // 0x124(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_Health;                      // 0x128(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_Stamina;                     // 0x12C(0x4)(ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_Torpidity;                   // 0x130(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_Oxygen;                      // 0x134(0x4)(ExportObject, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_Food;                        // 0x138(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_Water;                       // 0x13C(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_Temperature;                 // 0x140(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_Weight;                      // 0x144(0x4)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_Damage;                      // 0x148(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_Speed;                       // 0x14C(0x4)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsDinoWild_TemperatureFortitude;        // 0x150(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_Health;                        // 0x154(0x4)(ExportObject, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_Stamina;                       // 0x158(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_Torpidity;                     // 0x15C(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_Oxygen;                        // 0x160(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_Food;                          // 0x164(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_Water;                         // 0x168(0x4)(EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_Temperature;                   // 0x16C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_Weight;                        // 0x170(0x4)(Edit, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_Damage;                        // 0x174(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_Speed;                         // 0x178(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerLevelStatsPlayer_TemperatureFortitude;          // 0x17C(0x4)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalSpoilingTimeMultiplier;                      // 0x180(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        GlobalItemDecompositionTimeMultiplier;             // 0x184(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        GlobalCorpseDecompositionTimeMultiplier;           // 0x188(0x4)(ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        PvPZoneStructureDamageMultiplier;                  // 0x18C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        StructureDamageRepairCooldown;                     // 0x190(0x4)(ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        IncreasePvPRespawnIntervalCheckPeriod;             // 0x194(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        IncreasePvPRespawnIntervalMultiplier;              // 0x198(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        IncreasePvPRespawnIntervalBaseAmount;              // 0x19C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        ResourceNoReplenishRadiusPlayers;                  // 0x1A0(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        ResourceNoReplenishRadiusStructures;               // 0x1A4(0x4)(Edit, ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        CropGrowthSpeedMultiplier;                         // 0x1A8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        LayEggIntervalMultiplier;                          // 0x1AC(0x4)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        PoopIntervalMultiplier;                            // 0x1B0(0x4)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        CropDecaySpeedMultiplier;                          // 0x1B4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        MatingIntervalMultiplier;                          // 0x1B8(0x4)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        EggHatchSpeedMultiplier;                           // 0x1BC(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        BabyMatureSpeedMultiplier;                         // 0x1C0(0x4)(Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        BabyFoodConsumptionSpeedMultiplier;                // 0x1C4(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        DinoTurretDamageMultiplier;                        // 0x1C8(0x4)(Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        DinoHarvestingDamageMultiplier;                    // 0x1CC(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        PlayerHarvestingDamageMultiplier;                  // 0x1D0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        CustomRecipeEffectivenessMultiplier;               // 0x1D4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        CustomRecipeSkillMultiplier;                       // 0x1D8(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        AutoPvEStartTimeSeconds;                           // 0x1DC(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        AutoPvEStopTimeSeconds;                            // 0x1E0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        PvEDinoDecayPeriodMultiplier;                      // 0x1E4(0x4)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        StructurePreventResourceRadiusMultiplier;          // 0x1E8(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        BabyImprintingStatScaleMultiplier;                 // 0x1EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        BabyCuddleIntervalMultiplier;                      // 0x1F0(0x4)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        BabyCuddleGracePeriodMultiplier;                   // 0x1F4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        BabyCuddleLoseImprintQualitySpeedMultiplier;       // 0x1F8(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        KillXPMultiplier;                                  // 0x1FC(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        HarvestXPMultiplier;                               // 0x200(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        CraftXPMultiplier;                                 // 0x204(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        GenericXPMultiplier;                               // 0x208(0x4)(ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        SpecialXPMultiplier;                               // 0x20C(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        ExplorerNoteXPMultiplier;                          // 0x210(0x4)(Edit, ConstParm, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        BossKillXPMultiplier;                              // 0x214(0x4)(BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        AlphaKillXPMultiplier;                             // 0x218(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        WildKillXPMultiplier;                              // 0x21C(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        CaveKillXPMultiplier;                              // 0x220(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        TamedKillXPMultiplier;                             // 0x224(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        UnclaimedKillXPMultiplier;                         // 0x228(0x4)(Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        RaidDinoCharacterFoodDrainMultiplier;              // 0x22C(0x4)(ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        PhotoModeRangeLimit;                               // 0x230(0x4)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        SupplyCrateLootQualityMultiplier;                  // 0x234(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        CraftingSkillBonusMultiplier;                      // 0x238(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        FishingLootQualityMultiplier;                      // 0x23C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        FuelConsumptionIntervalMultiplier;                 // 0x240(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	float                                        PreventOfflinePvPInterval;                         // 0x244(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        PerPlatformMaxStructuresMultiplier;                // 0x248(0x4)(ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        WirelessCraftingRangeOverride;                     // 0x24C(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         GlobalVoiceChat;                                   // 0x250(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         ProximityChat;                                     // 0x251(0x1)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         NoTributeDownloads;                                // 0x252(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         AllowThirdPersonPlayer;                            // 0x253(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         AlwaysNotifyPlayerLeft;                            // 0x254(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         DontAlwaysNotifyPlayerJoined;                      // 0x255(0x1)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         ServerHardcore;                                    // 0x256(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         ServerPVE;                                         // 0x257(0x1)(ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         ServerCrosshair;                                   // 0x258(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         ServerForceNoHUD;                                  // 0x259(0x1)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         ShowMapPlayerLocation;                             // 0x25A(0x1)(Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         EnablePvPGamma;                                    // 0x25B(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         DisableStructureDecayPvE;                          // 0x25C(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         AllowFlyerCarryPvE;                                // 0x25D(0x1)(Edit, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bIncreasePvPRespawnInterval;                       // 0x25E(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bAutoPvETimer;                                     // 0x25F(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bAutoPvEUseSystemTime;                             // 0x260(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bDisableFriendlyFire;                              // 0x261(0x1)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bFlyerPlatformAllowUnalignedDinoBasing;            // 0x262(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bDisableLootCrates;                                // 0x263(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bAllowCustomRecipes;                               // 0x264(0x1)(Edit, ConstParm, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bPassiveDefensesDamageRiderlessDinos;              // 0x265(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bPvEAllowTribeWar;                                 // 0x266(0x1)(Edit, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bPvEAllowTribeWarCancel;                           // 0x267(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         MaxDifficulty;                                     // 0x268(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bUseSingleplayerSettings;                          // 0x269(0x1)(Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bUseCorpseLocator;                                 // 0x26A(0x1)(Edit, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bDisableStructurePlacementCollision;               // 0x26B(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bAllowPlatformSaddleMultiFloors;                   // 0x26C(0x1)(Edit, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bAllowUnlimitedRespecs;                            // 0x26D(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bDisableDinoTaming;                                // 0x26E(0x1)(ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bDisableDinoRiding;                                // 0x26F(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bShowCreativeMode;                                 // 0x270(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bAllowSpeedLeveling;                               // 0x271(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bAllowFlyerSpeedLeveling;                          // 0x272(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         AllowHideDamageSourceFromLogs;                     // 0x273(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         RandomSupplyCratePoints;                           // 0x274(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         DisableWeatherFog;                                 // 0x275(0x1)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bHardLimitTurretsInRange;                          // 0x276(0x1)(Edit, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         OnlyAllowSpecifiedEngrams;                         // 0x277(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         PreventDownloadSurvivors;                          // 0x278(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         PreventDownloadItems;                              // 0x279(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         PreventDownloadDinos;                              // 0x27A(0x1)(ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         DisablePvEGamma;                                   // 0x27B(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         DisableDinoDecayPvE;                               // 0x27C(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         AdminLogging;                                      // 0x27D(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         AllowCaveBuildingPvE;                              // 0x27E(0x1)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         ForceAllowCaveFlyers;                              // 0x27F(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         PreventOfflinePvP;                                 // 0x280(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         PvPDinoDecay;                                      // 0x281(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         OverrideStructurePlatformPrevention;               // 0x282(0x1)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         AllowAnyoneBabyImprintCuddle;                      // 0x283(0x1)(BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         DisableImprintDinoBuff;                            // 0x284(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         ShowFloatingDamageText;                            // 0x285(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         PreventDiseases;                                   // 0x286(0x1)(ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         NonPermanentDiseases;                              // 0x287(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         EnableExtraStructurePreventionVolumes;             // 0x288(0x1)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         PreventTribeAlliances;                             // 0x289(0x1)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         AllowRaidDinoFeeding;                              // 0x28A(0x1)(ConstParm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bDisableWirelessCrafting;                          // 0x28B(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCraftingForDinos;                  // 0x28C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCraftingForPlayers;                // 0x28D(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableWirelessCraftingForStructures;             // 0x28E(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BD4[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        OverrideMaxExperiencePointsPlayer;                 // 0x290(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	int32                                        OverrideMaxExperiencePointsDino;                   // 0x294(0x4)(BlueprintVisible, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	int32                                        MaxNumberOfPlayersInTribe;                         // 0x298(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bDisablePhotoMode;                                 // 0x29C(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_3BD5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TMap<class FString, float>                   DefaultFloatMap;                                   // 0x2A0(0x50)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<class FString, int32>                   DefaultIntMap;                                     // 0x2F0(0x50)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<class FString, bool>                    DefaultBoolMap;                                    // 0x340(0x50)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalGameSettingsData* GetDefaultObj();

};

// 0x380 (0x3A8 - 0x28)
// Class ShooterGame.PrimalGlobals
class UPrimalGlobals : public UObject
{
public:
	class UPrimalGameData*                       PrimalGameData;                                    // 0x28(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig)
	class UPrimalGameData*                       PrimalGameDataOverride;                            // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultReplicationGraph;                           // 0x38(0x8)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class UPrimalGameData>         PrimalGameDataAsset;                               // 0x40(0x30)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UObject>>         PrimalGameDataAssetExtended;                       // 0x70(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimalAssets*                         Assets;                                            // 0x80(0x8)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, SubobjectReference)
	class UClass*                                RagdollKinematicActorClass;                        // 0x88(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultHarvestTreeClass;                           // 0x90(0x8)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultHarvestBushClass;                           // 0x98(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                GlobalGenericConfirmationDialog;                   // 0xA0(0x8)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UObject*>                       ExtraResources;                                    // 0xA8(0x10)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowSingleplayer;                                // 0xB8(0x1)(BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowNonDedicatedHost;                            // 0xB9(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BDF[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        UIOnlyShowMapFileNames;                            // 0xC0(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        UIOnlyShowModIDs;                                  // 0xD0(0x10)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTotalConversionShowUnofficialServers;             // 0xE0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BE0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                CreditString;                                      // 0xE8(0x10)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          AlphaMissionColor;                                 // 0xF8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          BetaMissionColor;                                  // 0x108(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          GammaMissionColor;                                 // 0x118(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          MissionCompleteMultiUseWheelTextColor;             // 0x128(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UFont*                                 BigFont_Offline;                                   // 0x138(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UFont*                                 NormalFont_Offline;                                // 0x140(0x8)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UFont*                                 SmallFont_Offline;                                 // 0x148(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UFont>>          OfflineFontArray;                                  // 0x150(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SpawnMenuUITemplate;                               // 0x160(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                CustomOverlayClass;                                // 0x168(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class USoundClass*>                   CoreSoundClasses;                                  // 0x170(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundClass*                           PS5GamepadSoundClass;                              // 0x180(0x8)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundClass*                           PS5GamepadHandsSoundClass;                         // 0x188(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundSubmix*                          PS5GamepadSubmix;                                  // 0x190(0x8)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, DuplicateTransient)
	class UMaterialInterface*                    DefaultRenderTargetMaterial;                       // 0x198(0x8)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTriggerEffectLibrary*                 TriggerEffectLibrary;                              // 0x1A0(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig)
	uint8                                        Pad_3BE1[0x110];                                   // Fixing Size After Last Property  > TateDumper <
	class UMaterialInstanceConstant*             VertexViz;                                         // 0x2B8(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FOpenColorIODisplayConfiguration      DefaultOpenColorIODisplayConfiguration;            // 0x2C0(0xA0)(Edit, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FCachedDBAccessor                     CachedDBs;                                         // 0x360(0x40)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BE2[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalGlobals* GetDefaultObj();

	double Subtract_DoubleDouble(double* ReturnValue);
	void OnConfirmationDialogClosed(bool* bAccept);
	class UAudioComponent* IsAudibleSimple(struct FVector* Location, bool* ReturnValue);
	class UWorld* GetShooterPlayerCameraManager(class AShooterPlayerCameraManager** ReturnValue);
	class UWorld* GetDayCycleManager(class ADayCycleManager** ReturnValue);
	class UWorld* FlushLevelStreamingOnNextCameraUpdate();
	void FinishedLoadingGameMedia();
	double EqualEqual_DoubleDouble(bool* ReturnValue);
	float Conv_FloatToDouble(double* ReturnValue);
	double Conv_DoubleToFloat(float* ReturnValue);
};

// 0x0 (0x80 - 0x80)
// Class ShooterGame.PrimalExportAssetRegistryCommandlet
class UPrimalExportAssetRegistryCommandlet : public UCommandlet
{
public:

	static class UClass* StaticClass();
	static class UPrimalExportAssetRegistryCommandlet* GetDefaultObj();

};

// 0x100 (0x128 - 0x28)
// Class ShooterGame.PrimalGlobalUIData
class UPrimalGlobalUIData : public UObject
{
public:
	struct FLinearColor                          StatusColorGood;                                   // 0x28(0x10)(Edit, ConstParm, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          StatusColorWarning;                                // 0x38(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          StatusColorBad;                                    // 0x48(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RightMouseButtonIcon;                              // 0x58(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            LeftMouseButtonIcon;                               // 0x60(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GamepadLeftBumper;                                 // 0x68(0x8)(Edit, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GamepadRightBumper;                                // 0x70(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            LeftTriggerIcon;                                   // 0x78(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RightTriggerIcon;                                  // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GamepadFaceButtonBottom;                           // 0x88(0x8)(ExportObject, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GamepadFaceButtonTop;                              // 0x90(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GamepadFaceButtonLeft;                             // 0x98(0x8)(Edit, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GamepadFaceButtonRight;                            // 0xA0(0x8)(Edit, BlueprintVisible, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DPadUpIcon;                                        // 0xA8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DPadGenericIcon;                                   // 0xB0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DPadDownIcon;                                      // 0xB8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DPadLeftIcon;                                      // 0xC0(0x8)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DPadRightIcon;                                     // 0xC8(0x8)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            RightThumbstickIcon;                               // 0xD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            LeftThumbstickIcon;                                // 0xD8(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            SpecialLeftIcon;                                   // 0xE0(0x8)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            SpecialRightIcon;                                  // 0xE8(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            MutagenIcon;                                       // 0xF0(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            DinoDot;                                           // 0xF8(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MutagenGoodToGreatThreshold;                       // 0x100(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          MutagenGoodColor;                                  // 0x104(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          MutagenGreatColor;                                 // 0x114(0x10)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BE4[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalGlobalUIData* GetDefaultObj();

	bool GetIconForKeyName(class UTexture2D** ReturnValue);
};

// 0x158 (0x210 - 0xB8)
// Class ShooterGame.PrimalHarvestingComponent
class UPrimalHarvestingComponent : public UActorComponent
{
public:
	uint8                                        Pad_3BE8[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FHarvestResourceEntry>         HarvestResourceEntries;                            // 0xD0(0x10)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FHarvestResourceEntry>         BaseHarvestResourceEntries;                        // 0xE0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDamageHarvestingEntry>        HarvestDamageTypeEntries;                          // 0xF0(0x10)(ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxHarvestHealth;                                  // 0x100(0x4)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BE9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        HarvestHealthGiveResourceInterval;                 // 0x108(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentHarvestHealth;                              // 0x10C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	bool                                         bIsUnharvestable;                                  // 0x110(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BEA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bSetOwnerHealthToHarvestHealth : 1;                // Mask: 0x1, PropSize: 0x10x114(0x1)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsableHarvesting : 1;                             // Mask: 0x2, PropSize: 0x10x114(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowForcedRepopulation : 1;                      // Mask: 0x4, PropSize: 0x10x114(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowHarvestHealthScaling : 1;                    // Mask: 0x8, PropSize: 0x10x114(0x1)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsableAllowHarvestHealthScaling : 1;              // Mask: 0x10, PropSize: 0x10x114(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNonBlockingUsableHarvesting : 1;                  // Mask: 0x20, PropSize: 0x10x114(0x1)(Edit, ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClampResourceHarvestDamage : 1;                   // Mask: 0x40, PropSize: 0x10x114(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDefaultHarvestingComponent : 1;                 // Mask: 0x80, PropSize: 0x10x114(0x1)(BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsSingleUnitHarvest : 1;                          // Mask: 0x1, PropSize: 0x10x115(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAssignedToTribeHarvestOnly : 1;                   // Mask: 0x2, PropSize: 0x10x115(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPRecieveComponentDamage : 1;                  // Mask: 0x4, PropSize: 0x10x115(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnforceSingleInstantHarvest : 1;                  // Mask: 0x8, PropSize: 0x10x115(0x1)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2C2 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3BEB[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        AssignedToTribeID;                                 // 0x118(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BEC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            HarvestDestructionSound;                           // 0x120(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UseHarvestDamageAmount;                            // 0x128(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BED[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                UseHarvestDamageType;                              // 0x130(0x8)(ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                DescriptiveName;                                   // 0x138(0x10)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                UseHarvestString;                                  // 0x148(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UsableHarvestSphereRadius;                         // 0x158(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldReplenish;                                   // 0x15C(0x1)(ExportObject, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BEE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinPlayerDistanceReplenishing;                     // 0x160(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinStructureDistanceReplenishing;                  // 0x164(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinNonCoreStructureDistanceReplenishing;           // 0x168(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseMinTimeAfterDepletionReplenishing;             // 0x16C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseMaxTimeAfterDepletionReplenishing;             // 0x170(0x4)(ConstParm, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExhaustedDepletionTimeInterval;                    // 0x174(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExhaustedDepletionPower;                           // 0x178(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExhaustedDepletionEffectScale;                     // 0x17C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReduceExhaustedDepletionSpeed;                     // 0x180(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AutoReplenishInterval;                             // 0x184(0x4)(Edit, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AutoReplenishPercent;                              // 0x188(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DamageInstigatorAmount;                            // 0x18C(0x4)(ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        GiveItemEntriesMin;                                // 0x190(0x4)(EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        GiveItemEntriesMax;                                // 0x194(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TamedDinoHarvestGiveHealthMultiplier;              // 0x198(0x4)(Edit, ConstParm, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BEF[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnItemHarvested;                                   // 0x1B0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoHarvestGiveHealthAmount;                       // 0x1C0(0x4)(Edit, ConstParm, ExportObject, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoHarvestGiveHealthSpeed;                        // 0x1C4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        DinoHarvestGiveHealthDescriptionIndex;             // 0x1C8(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumOfPerInstanceCustomDataValues;                  // 0x1CC(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BF0[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        ForceAllowMeleeHarvestingOverrides;                // 0x1D8(0x10)(ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HarvestingPriority;                                // 0x1E8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BF1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FComponentAttachmentEntry>     AdditionalComponentAttachments;                    // 0x1F0(0x10)(BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FComponentAttachmentEntry>     AdditionalComponentAttachmentsDedicated;           // 0x200(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalHarvestingComponent* GetDefaultObj();

	class AActor* BPRecieveComponentDamage(float* Damage, const struct FDamageEvent& DamageEvent);
	class UClass* BPCustomHarvestResource(class UPrimalInventoryComponent* InvComp, int32 NumToGive, class AActor* ToActor, int32* ReturnValue);
};

// 0x5B8 (0x670 - 0xB8)
// Class ShooterGame.PrimalInventoryComponent
class UPrimalInventoryComponent : public UActorComponent
{
public:
	uint8                                        Pad_3D2A[0x40];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class AShooterPlayerController*>      RemoteViewingInventoryPlayerControllers;           // 0xF8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalItem*>                   InventoryItems;                                    // 0x108(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalItem*>                   EquippedItems;                                     // 0x118(0x10)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	TArray<class UPrimalItem*>                   ItemSlots;                                         // 0x128(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalItem*>                   ArkTributeItems;                                   // 0x138(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalItem*>                   AllDyeColorItems;                                  // 0x148(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FItemCraftQueueEntry>          ItemCraftQueueEntries;                             // 0x158(0x10)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        OverrideInventoryDefaultTab;                       // 0x168(0x4)(Edit, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInitializedMe : 1;                                // Mask: 0x1, PropSize: 0x10x16C(0x1)(EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        bReceivingEquippedItems : 1;                       // Mask: 0x2, PropSize: 0x10x16C(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReceivingInventoryItems : 1;                      // Mask: 0x4, PropSize: 0x10x16C(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReceivingArkInventoryItems : 1;                   // Mask: 0x8, PropSize: 0x10x16C(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFreeCraftingMode : 1;                             // Mask: 0x10, PropSize: 0x10x16C(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanEquipItems : 1;                                // Mask: 0x20, PropSize: 0x10x16C(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanUseWeaponAsEquipment : 1;                      // Mask: 0x40, PropSize: 0x10x16C(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanInventoryItems : 1;                            // Mask: 0x80, PropSize: 0x10x16C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bConsumeCraftingRepairingRequirementsOnStart : 1;  // Mask: 0x1, PropSize: 0x10x16D(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRemoteCrafting : 1;                          // Mask: 0x2, PropSize: 0x10x16D(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowDeactivatedCrafting : 1;                     // Mask: 0x4, PropSize: 0x10x16D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventAutoDecreaseDurability : 1;                // Mask: 0x8, PropSize: 0x10x16D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRemoteRepairing : 1;                         // Mask: 0x10, PropSize: 0x10x16D(0x1)(Edit, ConstParm, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowItemStacking : 1;                            // Mask: 0x20, PropSize: 0x10x16D(0x1)(Edit, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCraftQueue : 1;                                // Mask: 0x40, PropSize: 0x10x16D(0x1)(Edit, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowHiddenRemoteInventoryItems : 1;               // Mask: 0x80, PropSize: 0x10x16D(0x1)(OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceInventoryBlueprints : 1;                     // Mask: 0x1, PropSize: 0x10x16E(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceInventoryNonRemovable : 1;                   // Mask: 0x2, PropSize: 0x10x16E(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideDefaultInventoryItemsFromDisplay : 1;         // Mask: 0x4, PropSize: 0x10x16E(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDataListPadMaxInventoryItems : 1;                 // Mask: 0x8, PropSize: 0x10x16E(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAddMaxInventoryItemsToDefaultItems : 1;           // Mask: 0x10, PropSize: 0x10x16E(0x1)(BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheckForAutoCraftBlueprints : 1;                  // Mask: 0x20, PropSize: 0x10x16E(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsTributeInventory : 1;                           // Mask: 0x40, PropSize: 0x10x16E(0x1)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipmentMustRequireExplicitOwnerClass : 1;       // Mask: 0x80, PropSize: 0x10x16E(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipmentPlayerForceRequireExplicitOwnerClass : 1; // Mask: 0x1, PropSize: 0x10x16F(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipmentForceIgnoreExplicitOwnerClass : 1;       // Mask: 0x2, PropSize: 0x10x16F(0x1)(BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPInventoryRefresh : 1;                        // Mask: 0x4, PropSize: 0x10x16F(0x1)(BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPInitializeInventory : 1;                     // Mask: 0x8, PropSize: 0x10x16F(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAllowAddInventoryItem : 1;                   // Mask: 0x10, PropSize: 0x10x16F(0x1)(Edit, ConstParm, BlueprintVisible, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2C3 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	TArray<enum class EPrimalEquipmentType>      EquippableItemTypes;                               // 0x170(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideSaddleFromInventoryDisplay : 1;               // Mask: 0x1, PropSize: 0x10x180(0x1)(Edit, ConstParm, ExportObject, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCraftingEnabled : 1;                              // Mask: 0x2, PropSize: 0x10x180(0x1)(ConstParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRepairingEnabled : 1;                             // Mask: 0x4, PropSize: 0x10x180(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReplicateComponent : 1;                           // Mask: 0x8, PropSize: 0x10x180(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyOneCraftQueueItem : 1;                        // Mask: 0x10, PropSize: 0x10x180(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemoteInventoryOnlyAllowTribe : 1;                // Mask: 0x20, PropSize: 0x10x180(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideCraftingMinDurabilityRequirement : 1;     // Mask: 0x40, PropSize: 0x10x180(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemoteInventoryAllowRemoveItems : 1;              // Mask: 0x80, PropSize: 0x10x180(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemoteInventoryAllowAddItems : 1;                 // Mask: 0x1, PropSize: 0x10x181(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRemoteInventory : 1;                         // Mask: 0x2, PropSize: 0x10x181(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCheatInventory : 1;                            // Mask: 0x4, PropSize: 0x10x181(0x1)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowAddingToArkTribute : 1;                      // Mask: 0x8, PropSize: 0x10x181(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemoteInventoryOnlyAllowSelf : 1;                 // Mask: 0x10, PropSize: 0x10x181(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMaxInventoryWeightUseCharacterStatus : 1;         // Mask: 0x20, PropSize: 0x10x181(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDropInventoryDeposit : 1;                  // Mask: 0x40, PropSize: 0x10x181(0x1)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowItemDefaultFolders : 1;                       // Mask: 0x80, PropSize: 0x10x181(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableDropAllItems : 1;                          // Mask: 0x1, PropSize: 0x10x182(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreMaxInventoryItems : 1;                      // Mask: 0x2, PropSize: 0x10x182(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2C4 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3D32[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CraftingItemSpeed;                                 // 0x184(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FItemMultiplier>               ItemSpoilingTimeMultipliers;                       // 0x188(0x10)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsSecondaryInventory : 1;                         // Mask: 0x1, PropSize: 0x10x198(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemoteOnlyAllowBlueprintsOrItemClasses : 1;       // Mask: 0x2, PropSize: 0x10x198(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2C5 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bPreventInventoryViewTrace : 1;                    // Mask: 0x10, PropSize: 0x10x198(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSpawnActorOnTopOfStructure : 1;                   // Mask: 0x20, PropSize: 0x10x198(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDropPhysicalInventoryDeposit : 1;                 // Mask: 0x40, PropSize: 0x10x198(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseExtendedCharacterCraftingFunctionality : 1;    // Mask: 0x80, PropSize: 0x10x198(0x1)(ConstParm, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceGenerateItemSets : 1;                        // Mask: 0x1, PropSize: 0x10x199(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPHandleAccessInventory : 1;                      // Mask: 0x2, PropSize: 0x10x199(0x1)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGivesAchievementItems : 1;                        // Mask: 0x4, PropSize: 0x10x199(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPAllowUseInInventory : 1;                        // Mask: 0x8, PropSize: 0x10x199(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPRemoteInventoryAllowRemoveItems : 1;            // Mask: 0x10, PropSize: 0x10x199(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPRemoteInventoryGetMaxVisibleSlots : 1;       // Mask: 0x20, PropSize: 0x10x199(0x1)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetExtraItemDisplay : 1;                     // Mask: 0x40, PropSize: 0x10x199(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPNotifyItemAdded : 1;                            // Mask: 0x80, PropSize: 0x10x199(0x1)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPNotifyItemRemoved : 1;                          // Mask: 0x1, PropSize: 0x10x19A(0x1)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPNotifyItemQuantityUpdated : 1;                  // Mask: 0x2, PropSize: 0x10x19A(0x1)(ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideItemMinimumUseInterval : 1;             // Mask: 0x4, PropSize: 0x10x19A(0x1)(ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPForceCustomRemoteInventoryAllowAddItems : 1;    // Mask: 0x8, PropSize: 0x10x19A(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPForceCustomRemoteInventoryAllowRemoveItems : 1; // Mask: 0x10, PropSize: 0x10x19A(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceInventoryNotifyCraftingFinished : 1;         // Mask: 0x20, PropSize: 0x10x19A(0x1)(BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowWorldSettingsInventoryComponentAppends : 1;  // Mask: 0x40, PropSize: 0x10x19A(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventCraftingResourceConsumption : 1;           // Mask: 0x80, PropSize: 0x10x19A(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideInventoryDepositClassDontForceDrop : 1;   // Mask: 0x1, PropSize: 0x10x19B(0x1)(Edit, ConstParm, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPIsCraftingAllowed : 1;                       // Mask: 0x2, PropSize: 0x10x19B(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPRemoteInventoryAllowCrafting : 1;            // Mask: 0x4, PropSize: 0x10x19B(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNotifyAddedOnClientReceive : 1;                   // Mask: 0x8, PropSize: 0x10x19B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsTaxidermyBase : 1;                              // Mask: 0x10, PropSize: 0x10x19B(0x1)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeferCheckForAutoCraftBlueprintsOnInventoryChange : 1; // Mask: 0x20, PropSize: 0x10x19B(0x1)(ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowQuickSlotPanel : 1;                           // Mask: 0x40, PropSize: 0x10x19B(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2C6 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3D33[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UGenericDataListEntry*                 ExtraItemDisplay;                                  // 0x1A0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxInventoryItems;                                 // 0x1A8(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxInventoryWeight;                                // 0x1AC(0x4)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        AbsoluteMaxVanityItems;                            // 0x1B0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumVanityItems;                                    // 0x1B4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        TribeGroupInventoryRank;                           // 0x1B8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D34[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NumSlots;                                          // 0x1BC(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxItemCraftQueueEntries;                          // 0x1C0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D35[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                RemoteInventoryDescriptionString;                  // 0x1C8(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                EngramRequirementClassOverride;                    // 0x1D8(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        RemoteAddItemOnlyAllowItemClasses;                 // 0x1E0(0x10)(Edit, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        RemoteAddItemPreventItemClasses;                   // 0x1F0(0x10)(BlueprintReadOnly, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FEventItem>                    EventItems;                                        // 0x200(0x10)(ConstParm, ExportObject, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DefaultInventoryItems;                             // 0x210(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DefaultInventoryItems2;                            // 0x220(0x10)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DefaultInventoryItems3;                            // 0x230(0x10)(ConstParm, BlueprintVisible, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DefaultInventoryItems4;                            // 0x240(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UObject>>        DefaultInventoryItemsClasses;                      // 0x250(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UObject>>         DefaultInventoryItemsClassesNew;                   // 0x260(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        DefaultInventoryItemsRandomCustomStrings;          // 0x270(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                DefaultInventoryItemsRandomCustomStringsWeights;   // 0x280(0x10)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        CheatInventoryItems;                               // 0x290(0x10)(Edit, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DefaultEquippedItems;                              // 0x2A0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DefaultEquippedItemSkins;                          // 0x2B0(0x10)(Edit, ExportObject, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DefaultSlotItems;                                  // 0x2C0(0x10)(ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FItemSpawnActorClassOverride>  ItemSpawnActorClassOverrides;                      // 0x2D0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        OnlyAllowCraftingItemClasses;                      // 0x2E0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<uint8>                                DefaultEngrams;                                    // 0x2F0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<uint8>                                DefaultEngrams2;                                   // 0x300(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<uint8>                                DefaultEngrams3;                                   // 0x310(0x10)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<uint8>                                DefaultEngrams4;                                   // 0x320(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                DefaultInventoryQualities;                         // 0x330(0x10)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                DefaultInventoryQuantities;                        // 0x340(0x10)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                InventoryNameOverride;                             // 0x350(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        MaxRemoteInventoryViewingDistance;                 // 0x360(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ActiveInventoryRefreshInterval;                    // 0x364(0x4)(Edit, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        StartingAbsoluteMaxInventoryItems;                 // 0x368(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        AbsoluteMaxInventoryItems;                         // 0x36C(0x4)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SlotMaxMagicNumber;                                // 0x370(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CurrentSlotMaxMagicNumber;                         // 0x374(0x4)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastInventoryRefreshTime;                          // 0x378(0x8)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class UClass*                                DroppedItemTemplateOverride;                       // 0x380(0x8)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ForceAllowItemStackings;                           // 0x388(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              DropItemRotationOffset;                            // 0x398(0x18)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FItemCraftingConsumptionReplenishment> ItemCraftingConsumptionReplenishments;             // 0x3B0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxItemCooldownTimeClear;                          // 0x3C0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D3A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FItemMultiplier>               MaxItemTemplateQuantities;                         // 0x3C8(0x10)(Edit, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ItemCraftingSoundOverride;                         // 0x3D8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FActorClassAttachmentInfo>     WeaponAsEquipmentAttachmentInfos;                  // 0x3E0(0x10)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalItem*>                   CraftingItems;                                     // 0x3F0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        DisplayDefaultItemInventoryCount;                  // 0x400(0x4)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D3C[0x2C];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       LastRefreshCheckItemTime;                          // 0x430(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D3D[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        MinItemSets;                                       // 0x44C(0x4)(ConstParm, BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	float                                        MaxItemSets;                                       // 0x450(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	float                                        NumItemSetsPower;                                  // 0x454(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        bSetsRandomWithoutReplacement : 1;                 // Mask: 0x1, PropSize: 0x10x458(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowAllUseInInventory : 1;                  // Mask: 0x2, PropSize: 0x10x458(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPIsValidCraftingResource : 1;                 // Mask: 0x4, PropSize: 0x10x458(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseParentStructureIsValidCraftingResource : 1;    // Mask: 0x8, PropSize: 0x10x458(0x1)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSetCraftingEnabledCheckForAutoCraftBlueprints : 1; // Mask: 0x10, PropSize: 0x10x458(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPRemoteInventoryAllowViewing : 1;             // Mask: 0x20, PropSize: 0x10x458(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllDefaultInventoryIsEngrams : 1;                 // Mask: 0x40, PropSize: 0x10x458(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanGrindItems : 1;                           // Mask: 0x80, PropSize: 0x10x458(0x1)(ConstParm, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGrinderCanGrindAll : 1;                           // Mask: 0x1, PropSize: 0x10x459(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2C7 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3D3F[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSupplyCrateItemSet>           ItemSets;                                          // 0x460(0x10)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	TArray<struct FSupplyCrateItemSet>           AdditionalItemSets;                                // 0x470(0x10)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ItemSetsOverride;                                  // 0x480(0x8)(BlueprintVisible, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                SetQuantityWeights;                                // 0x488(0x10)(ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                SetQuantityValues;                                 // 0x498(0x10)(BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ItemRemovedBySound;                                // 0x4A8(0x8)(ConstParm, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            OpenInventorySound;                                // 0x4B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            CloseInventorySound;                               // 0x4B8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxInventoryAccessDistance;                        // 0x4C0(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D40[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FServerCustomFolder>           CustomFolderItems;                                 // 0x4C8(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D41[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class UPrimalInventoryComponent>> ForceAllowCraftingForInventoryComponents;          // 0x4E8(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FItemMultiplier>               ItemClassWeightMultipliers;                        // 0x4F8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GenerateItemSetsQualityMultiplierMin;              // 0x508(0x4)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GenerateItemSetsQualityMultiplierMax;              // 0x50C(0x4)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DefaultCraftingRequirementsMultiplier;             // 0x510(0x4)(ConstParm, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        DefaultCraftingQuantityMultiplier;                 // 0x514(0x4)(BlueprintReadOnly, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ActionWheelAccessInventoryPriority;                // 0x518(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SavedForceDefaultInventoryRefreshVersion;          // 0x51C(0x4)(Edit, ExportObject, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ForceDefaultInventoryRefreshVersion;               // 0x520(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D43[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        TamedDinoForceConsiderFoodTypes;                   // 0x528(0x10)(Edit, BlueprintVisible, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D44[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            OverrideCraftingFinishedSound;                     // 0x548(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D45[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector                               GroundDropTraceLocationOffset;                     // 0x568(0x18)(Edit, BlueprintVisible, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnInventoryItemAdded;                              // 0x580(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig)
	FMulticastInlineDelegateProperty_            OnInventoryItemRemoved;                            // 0x590(0x10)(ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig)
	uint8                                        bHideTributeUploadDinosPanel : 1;                  // Mask: 0x1, PropSize: 0x10x5A0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreDLCEquipRestrictions : 1;                   // Mask: 0x2, PropSize: 0x10x5A0(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreEngramEquipRestrictions : 1;                // Mask: 0x4, PropSize: 0x10x5A0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnTransferAll : 1;                           // Mask: 0x8, PropSize: 0x10x5A0(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableTransferEquipmentOnTransferAll : 1;        // Mask: 0x10, PropSize: 0x10x5A0(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseItemQuantityUpdateEvents : 1;                  // Mask: 0x20, PropSize: 0x10x5A0(0x1)(Edit, ExportObject, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2C8 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3D46[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FOverrideMultiuseButtonStyle>  MultiUseButtonStyleOverrides;                      // 0x5A8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseCustomSorting;                                 // 0x5B8(0x1)(BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceAllowCustomFolders;                          // 0x5B9(0x1)(Edit, ConstParm, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D48[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastCraftRequestTime;                              // 0x5C0(0x8)(ExportObject, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        FreeCraftingModeQuantityValue;                     // 0x5C8(0x4)(ExportObject, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowHiddenDefaultInventoryItemsDuringCrafting : 1; // Mask: 0x1, PropSize: 0x10x5CC(0x1)(BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseItemCountInsteadOfInventory : 1;               // Mask: 0x2, PropSize: 0x10x5CC(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideSlotCountFromHud : 1;                         // Mask: 0x4, PropSize: 0x10x5CC(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNotNearWirelessCrafting : 1;                      // Mask: 0x8, PropSize: 0x10x5CC(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2C9 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3D49[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LastWirelessCraftingCheckLoc;                      // 0x5D0(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalWirelessExchangeData*>   WirelessExchanges;                                 // 0x5E8(0x10)(Edit, BlueprintVisible, ExportObject, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D4A[0x60];                                    // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            AccessInventoryIcon;                               // 0x658(0x8)(ConstParm, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    TribeInventoryAccessRankSelectionIcons;            // 0x660(0x10)(ConstParm, BlueprintVisible, ExportObject, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalInventoryComponent* GetDefaultObj();

	void UpdateTribeGroupInventoryRank(uint8 NewRank);
	void UpdateSlotMagicNumber();
	class UPrimalItem* UpdateNetWeaponClipAmmo(int32 Ammo);
	int32 TransferItemToInventory();
	bool TransferAllItemsToInventoryWithFilter(const TArray<class UClass*>& IgnoreItemClasses);
	class UPrimalInventoryComponent* TransferAllItemsToInventory();
	bool TransferAllItemsOfClassToInventory();
	bool TransferAllItemsOfClassesToInventory();
	void StopAllCraftingRepairing();
	float StaticDropNewItemWithInfo(class ADroppedItem** ReturnValue);
	float StaticDropNewItem(class ADroppedItem** ReturnValue);
	struct FItemNetID SetNextItemSpoilingID();
	struct FItemNetID SetNextItemConsumptionID();
	bool SetFreeCraftingMode();
	bool SetCraftingEnabled();
	int32 ServerSplitItemStack(struct FItemNetID* ItemID);
	class FName ServerSelectedCustomItemAction(struct FItemNetID* ItemID, class AShooterPlayerController* ForPC);
	bool ServerRequestItems(class AShooterPlayerController* ForPC);
	float ServerRepairItem(struct FItemNetID* ItemID, class AShooterPlayerController** ByPC);
	void ServerRemoveItemFromSlot(struct FItemNetID* ItemID);
	void ServerMergeItemStack(struct FItemNetID* ItemID);
	TArray<struct FCraftingResourceRequirement> ServerMakeRecipeItem();
	struct FItemNetID ServerForceMergeItemStack();
	void ServerCraftItem(struct FItemNetID* ItemID, class AShooterPlayerController** ByPC);
	bool ServerAddItemToSlot(struct FItemNetID* ItemID);
	bool RemoveItem(struct FItemNetID* ItemID, bool* ReturnValue);
	float RemoteInventoryAllowViewing(bool* ReturnValue);
	bool RemoteInventoryAllowRepairingItems(bool* ReturnValue);
	bool RemoteInventoryAllowCraftingItems(bool* ReturnValue);
	class UPrimalItem* OverrideUseItem(bool* ReturnValue);
	class UPrimalItem* NotifyClientsDurabilityChange();
	void MulticastUpdateNearbyWirelessCrafting();
	void MulticastForceUpdateWirelessResources();
	void IsRepairingAllowed(bool* ReturnValue);
	void IsOnCraftRequestCooldown(bool* ReturnValue);
	void IsLocalToPlayer(class AShooterPlayerController* ForPC, bool* ReturnValue);
	void IsLocal(bool* ReturnValue);
	class UPrimalItem* IsCraftingAllowed(bool* ReturnValue);
	void IsAtMaxInventoryItems(bool* ReturnValue);
	void IsAllowedInventoryAccess(class APlayerController* ForPC, bool* ReturnValue);
	class USoundBase* InventoryViewersStopLocalSound();
	class USoundBase* InventoryViewersPlayLocalSound(bool bAttach);
	void InventoryRefresh();
	class UPrimalItem* InventoryCustomSortPredicate(bool* ReturnValue);
	TArray<class UPrimalItem*> InventoryCustomFilter();
	void InitializeInventory();
	TArray<struct FCraftingResourceRequirement> HasResources(bool* ReturnValue);
	bool HasItemsEquipped(bool* ReturnValue);
	enum class EPrimalItemStat GetTotalEquippedItemStat(float* ReturnValue);
	void GetNumVanityItems(int32* ReturnValue);
	void GetNumNonVanityItems(int32* ReturnValue);
	bool GetNumItems(int32* ReturnValue);
	bool GetMaxInventoryItems(int32* ReturnValue);
	void GetLastItemSlotIndex(int32* ReturnValue);
	bool GetItemTemplateQuantity(int32* ReturnValue);
	void GetInventoryUpdatedFrame(int32* ReturnValue);
	int32 GetGrinderSettings();
	void GetForceShowCraftablesInventoryTab(bool* ReturnValue);
	enum class EPrimalEquipmentType GetEquippedItemOfType(class UPrimalItem** ReturnValue);
	void GetEquippedItemOfClass(class UClass* ItemClass, class UPrimalItem** ReturnValue);
	void GetEquippedArmorRating(enum class EPrimalEquipmentType EquipmentType, float* ReturnValue);
	bool GetEmptySlotCount(int32* ReturnValue);
	bool GetCapacityForItem(class UClass* ItemClass, int32* ReturnValue);
	bool GetAbsoluteMaxInventoryItems(int32* ReturnValue);
	bool GenerateCustomCrateItems(TArray<class UPrimalItem*>* GeneratedItems, bool* ReturnValue);
	float GenerateCrateItems(bool* ReturnValue);
	bool FindAllItemsOfType(TArray<class UPrimalItem*>* ReturnValue);
	int32 EjectItem(struct FItemNetID* ItemID, class ADroppedItem** ReturnValue);
	TArray<struct FCraftingResourceRequirement> ConsumeResources(bool* ReturnValue);
	float ConsumeArmorDurability();
	bool ClientUpdateFreeCraftingMode();
	void ClientOnArkTributeItemsAdded();
	enum class EPrimalItemMessage ClientItemMessageNotification(struct FItemNetID* ItemID);
	bool ClearCraftQueue();
	class UPrimalItem* CheckFullInventoryConditionForItem(bool* ReturnValue);
	void CheckForAutoCraftBlueprints();
	class AShooterPlayerController* CanGrindItems(bool* ReturnValue);
	class UPrimalItem* CanGrindItem(bool* ReturnValue);
	class UPrimalItem* CanEquipItem(bool* ReturnValue);
	void BPRequestedInventoryItems(class AShooterPlayerController* ForPC);
	bool BPRemoteInventoryGetMaxVisibleSlots(int32* ReturnValue);
	class AShooterPlayerController* BPRemoteInventoryAllowViewing(bool* ReturnValue);
	class AShooterPlayerController* BPRemoteInventoryAllowRemoveItems(class UPrimalItem** AnItemToTransfer, bool* ReturnValue);
	class AShooterPlayerController* BPRemoteInventoryAllowCrafting(bool* ReturnValue);
	class AShooterPlayerController* BPRemoteInventoryAllowAddItems(bool* ReturnValue);
	int32 BPRemoteInventoryAllowAddItem_SpecificQuantity(bool* ReturnValue);
	class UPrimalItem* BPRemoteInventoryAllowAddItem(bool* ReturnValue);
	void BPPreventEquipItemType(enum class EPrimalEquipmentType EquipmentType, bool* ReturnValue);
	class UPrimalItem* BPPreventEquipItem(bool* ReturnValue);
	void BPPreInitDefaultInventory();
	void BPPostInitDefaultInventory();
	class UPrimalItem* BPOverrideItemMinimumUseInterval(float* ReturnValue);
	class UPrimalInventoryComponent* BPOnTransferAll();
	class UPrimalItem* BPNotifyItemRemoved();
	int32 BPNotifyItemQuantityUpdated();
	bool BPNotifyItemAdded();
	class UPrimalItem* BPIsValidCraftingResource(bool* ReturnValue);
	class UPrimalItem* BPIsCraftingAllowed(bool* ReturnValue);
	void BPInventoryRefresh();
	void BPInitializeInventory();
	bool BPIncrementItemTemplateQuantity(int32* ReturnValue);
	bool BPGetItemOfTemplate(class UPrimalItem** ReturnValue);
	class UMaterialInterface* BPGetExtraItemDisplay();
	void BPFindItemWithID(int32* ItemID1, int32* ItemID2, class UPrimalItem** ReturnValue);
	int32 BPDropInventoryDeposit(bool* bOverrideDepositLocation, struct FVector* DepositLocationOverride);
	int32 BPDropForceLocationInventoryDeposit(struct FVector* DepositLocationOverride, int32* DeadPlayerID, class APrimalStructureItemContainer** ReturnValue);
	bool BPCustomRemoteInventoryAllowRemoveItems(class UPrimalItem** AnItemToTransfer, int32* RequestedQuantity, bool* ReturnValue);
	bool BPCustomRemoteInventoryAllowAddItems(bool* ReturnValue);
	double BPCreateDropItemInventoryEmpty(class UClass** OverrideInventoryDepositClass, class APrimalStructureItemContainer** CopyStructureValues, class AActor** GroundIgnoreActor, int32* DeadPlayerID, float* DropInventoryOnGroundTraceDistance, bool* bOverrideDepositLocation, struct FVector* DepositLocationOverride, class APrimalStructureItemContainer** ReturnValue);
	void BPCraftingFinishedNotification(class UPrimalItem** ItemToBeCrafted);
	class UPrimalItem* BPAllowUseInInventory(bool* bIsRemoteInventory, class AShooterPlayerController** ByPC, bool* ReturnValue);
	class UPrimalItem* BPAllowAddInventoryItem(int32* RequestedQuantity, bool* bOnlyAddAll, bool* ReturnValue);
	void BPAccessedInventory(class AShooterPlayerController* ForPC);
	class UPrimalItem* AllowAddInventoryItem_OnlyAddAll(bool* ReturnValue);
	class UPrimalItem* AllowAddInventoryItem_MaxQuantity(int32* RequestedQuantityIn, int32* RequestedQuantityOut, bool* ReturnValue);
	class UPrimalItem* AllowAddInventoryItem_AnyQuantity(bool* ReturnValue);
	bool AddItemObjectEx(bool* bAddToSlot, bool* bShowHUDNotification, bool* bDontRecalcSpoilingTime, bool* bForceIncompleteStacking, class AShooterCharacter** OwnerPlayer, bool* bClampStats, class UPrimalItem** InsertAfterItem, bool* bInsertAtItemInstead, class UPrimalItem** ReturnValue);
	class UPrimalItem* AddItemObject(class UPrimalItem** ReturnValue);
};

// 0x0 (0x670 - 0x670)
// Class ShooterGame.PrimalInventoryComponent_Static
class UPrimalInventoryComponent_Static : public UPrimalInventoryComponent
{
public:

	static class UClass* StaticClass();
	static class UPrimalInventoryComponent_Static* GetDefaultObj();

};

// 0x68 (0x1470 - 0x1408)
// Class ShooterGame.SkeletalMeshComponentWithSoftRef
class USkeletalMeshComponentWithSoftRef : public USkeletalMeshComponent
{
public:
	TSoftObjectPtr<class USkeletalMesh>          MeshRef;                                           // 0x1408(0x30)(ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class UAnimInstance>           AnimClassRef;                                      // 0x1438(0x30)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D56[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USkeletalMeshComponentWithSoftRef* GetDefaultObj();

};

// 0x38 (0x7A0 - 0x768)
// Class ShooterGame.StaticMeshComponentWithSoftRef
class UStaticMeshComponentWithSoftRef : public UStaticMeshComponent
{
public:
	TSoftObjectPtr<class UStaticMesh>            MeshRef;                                           // 0x768(0x30)(ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D59[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStaticMeshComponentWithSoftRef* GetDefaultObj();

};

// 0x38 (0xA20 - 0x9E8)
// Class ShooterGame.ParticleSystemComponentWithSoftRef
class UParticleSystemComponentWithSoftRef : public UParticleSystemComponent
{
public:
	TSoftObjectPtr<class UParticleSystem>        TemplateRef;                                       // 0x9E8(0x30)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D5C[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleSystemComponentWithSoftRef* GetDefaultObj();

};

// 0xE88 (0xEB0 - 0x28)
// Class ShooterGame.PrimalItem
class UPrimalItem : public UObject
{
public:
	uint8                                        Pad_3E51[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bCanBuildStructures : 1;                           // Mask: 0x1, PropSize: 0x10x58(0x1)(ConstParm, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowEquppingItem : 1;                            // Mask: 0x2, PropSize: 0x10x58(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventEquipOnTaxidermyBase : 1;                  // Mask: 0x4, PropSize: 0x10x58(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowInventoryItem : 1;                           // Mask: 0x8, PropSize: 0x10x58(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsRepairing : 1;                                  // Mask: 0x10, PropSize: 0x10x58(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        bEquippedItem : 1;                                 // Mask: 0x20, PropSize: 0x10x58(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        bCanSlot : 1;                                      // Mask: 0x40, PropSize: 0x10x58(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseItemColors : 1;                                // Mask: 0x80, PropSize: 0x10x58(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        bShowTooltipColors : 1;                            // Mask: 0x1, PropSize: 0x10x59(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPInitItemColors : 1;                          // Mask: 0x2, PropSize: 0x10x59(0x1)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRefreshOnDyeUsed : 1;                             // Mask: 0x4, PropSize: 0x10x59(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPostAddBuffToGiveOwnerCharacter : 1;         // Mask: 0x8, PropSize: 0x10x59(0x1)(ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDediAttachments : 1;                         // Mask: 0x10, PropSize: 0x10x59(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowCustomColors : 1;                            // Mask: 0x20, PropSize: 0x10x59(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowRemovalWhenDead : 1;                    // Mask: 0x40, PropSize: 0x10x59(0x1)(ConstParm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoCraftBlueprint : 1;                           // Mask: 0x80, PropSize: 0x10x59(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideFromInventoryDisplay : 1;                     // Mask: 0x1, PropSize: 0x10x5A(0x1)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        bUseItemStats : 1;                                 // Mask: 0x2, PropSize: 0x10x5A(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSpawnActorWhenRiding : 1;                      // Mask: 0x4, PropSize: 0x10x5A(0x1)(ConstParm, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSpawnActor : 1;                                // Mask: 0x8, PropSize: 0x10x5A(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowDefaultCharacterAttachment : 1;              // Mask: 0x10, PropSize: 0x10x5A(0x1)(Edit, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseItemDurability : 1;                            // Mask: 0x20, PropSize: 0x10x5A(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNewWeaponAutoFillClipAmmo : 1;                    // Mask: 0x40, PropSize: 0x10x5A(0x1)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyBrokenItem : 1;                            // Mask: 0x80, PropSize: 0x10x5A(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsMisssionItem : 1;                               // Mask: 0x1, PropSize: 0x10x5B(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bThrowOnHotKeyUse : 1;                             // Mask: 0x2, PropSize: 0x10x5B(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsBlueprint : 1;                                  // Mask: 0x4, PropSize: 0x10x5B(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        bCanBeBlueprint : 1;                               // Mask: 0x8, PropSize: 0x10x5B(0x1)(Edit, ConstParm, ExportObject, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventUpload : 1;                                // Mask: 0x10, PropSize: 0x10x5B(0x1)(Edit, ConstParm, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsEngram : 1;                                     // Mask: 0x20, PropSize: 0x10x5B(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        bIsCustomRecipe : 1;                               // Mask: 0x40, PropSize: 0x10x5B(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        bIsFoodRecipe : 1;                                 // Mask: 0x80, PropSize: 0x10x5B(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        bTekItem : 1;                                      // Mask: 0x1, PropSize: 0x10x5C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowUseInInventory : 1;                          // Mask: 0x2, PropSize: 0x10x5C(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRemoteUseInInventory : 1;                    // Mask: 0x4, PropSize: 0x10x5C(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBlueprintEquippedNotifications : 1;            // Mask: 0x8, PropSize: 0x10x5C(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseInWaterRestoreDurability : 1;                  // Mask: 0x10, PropSize: 0x10x5C(0x1)(BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bValidCraftingResource : 1;                        // Mask: 0x20, PropSize: 0x10x5C(0x1)(ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSetupHUDIconMaterial : 1;                    // Mask: 0x40, PropSize: 0x10x5C(0x1)(ConstParm, ExportObject, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipRequiresDLC_ScorchedEarth : 1;               // Mask: 0x80, PropSize: 0x10x5C(0x1)(Edit, ExportObject, BlueprintReadOnly, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipRequiresDLC_Aberration : 1;                  // Mask: 0x1, PropSize: 0x10x5D(0x1)(ConstParm, ExportObject, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipRequiresDLC_Extinction : 1;                  // Mask: 0x2, PropSize: 0x10x5D(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipRequiresDLC_Genesis : 1;                     // Mask: 0x4, PropSize: 0x10x5D(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDurabilityRequirementIgnoredInWater : 1;          // Mask: 0x8, PropSize: 0x10x5D(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRepair : 1;                                  // Mask: 0x10, PropSize: 0x10x5D(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCustomBrokenIcon : 1;                             // Mask: 0x20, PropSize: 0x10x5D(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRemovalFromInventory : 1;                    // Mask: 0x40, PropSize: 0x10x5D(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        bFromSteamInventory : 1;                           // Mask: 0x80, PropSize: 0x10x5D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        bIsFromAllClustersInventory : 1;                   // Mask: 0x1, PropSize: 0x10x5E(0x1)(Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        bConsumeItemOnUse : 1;                             // Mask: 0x2, PropSize: 0x10x5E(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnItemConsumed : 1;                          // Mask: 0x4, PropSize: 0x10x5E(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bConfirmBeforeUsing : 1;                           // Mask: 0x8, PropSize: 0x10x5E(0x1)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyCanUseInWater : 1;                            // Mask: 0x10, PropSize: 0x10x5E(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanUseSwimming : 1;                               // Mask: 0x20, PropSize: 0x10x5E(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDescriptionOnlyItem : 1;                        // Mask: 0x40, PropSize: 0x10x5E(0x1)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRestoreDurabilityWhenColorized : 1;               // Mask: 0x80, PropSize: 0x10x5E(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAppendPrimaryColorToName : 1;                     // Mask: 0x1, PropSize: 0x10x5F(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseScaleStatEffectivenessByDurability : 1;        // Mask: 0x2, PropSize: 0x10x5F(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesCreationTime : 1;                             // Mask: 0x4, PropSize: 0x10x5F(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowUseWhileRiding : 1;                          // Mask: 0x8, PropSize: 0x10x5F(0x1)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventCraftingResourceAtFullDurability : 1;      // Mask: 0x10, PropSize: 0x10x5F(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGiveItemWhenUsedCopyItemStats : 1;                // Mask: 0x20, PropSize: 0x10x5F(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideFromRemoteInventoryDisplay : 1;               // Mask: 0x40, PropSize: 0x10x5F(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoDecreaseDurabilityOverTime : 1;               // Mask: 0x80, PropSize: 0x10x5F(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDragOntoOtherItemIfSameCustomData : 1;     // Mask: 0x1, PropSize: 0x10x60(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseOnItemWeaponRemoveClipAmmo : 1;                // Mask: 0x2, PropSize: 0x10x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseOnItemSetIndexAsDestinationItemCustomData : 1; // Mask: 0x4, PropSize: 0x10x60(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupportDragOntoOtherItem : 1;                     // Mask: 0x8, PropSize: 0x10x60(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsItemSkin : 1;                                   // Mask: 0x10, PropSize: 0x10x60(0x1)(ExportObject, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventOnSkinTab : 1;                             // Mask: 0x20, PropSize: 0x10x60(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontResetAttachmentIfNotUpdatingItem : 1;         // Mask: 0x40, PropSize: 0x10x60(0x1)(ConstParm, ExportObject, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bItemSkinIgnoreSkinIcon : 1;                       // Mask: 0x80, PropSize: 0x10x60(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPickupEggAlertsDinos : 1;                         // Mask: 0x1, PropSize: 0x10x61(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEggSpoilsWhenFertilized : 1;                      // Mask: 0x2, PropSize: 0x10x61(0x1)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideCustomDescription : 1;                        // Mask: 0x4, PropSize: 0x10x61(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCopyCustomDescriptionIntoSpoiledItem : 1;         // Mask: 0x8, PropSize: 0x10x61(0x1)(BlueprintVisible, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCopyDurabilityIntoSpoiledItem : 1;                // Mask: 0x10, PropSize: 0x10x61(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCraftedRequestCustomItemDescription : 1;          // Mask: 0x20, PropSize: 0x10x61(0x1)(Edit, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowCustomItemDescription : 1;              // Mask: 0x40, PropSize: 0x10x61(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2CA : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        BitPad_2CB : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPPreventUseOntoItem : 1;                      // Mask: 0x8, PropSize: 0x10x62(0x1)(Edit, ConstParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSkinDisableWhenSubmerged : 1;                     // Mask: 0x10, PropSize: 0x10x62(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsAbstractItem : 1;                               // Mask: 0x20, PropSize: 0x10x62(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventItemSkins : 1;                             // Mask: 0x40, PropSize: 0x10x62(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyCanUseInFalling : 1;                          // Mask: 0x80, PropSize: 0x10x62(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDropDestruction : 1;                         // Mask: 0x1, PropSize: 0x10x63(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanBeArkTributeItem : 1;                          // Mask: 0x2, PropSize: 0x10x63(0x1)(EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowInvalidItemVersion : 1;                      // Mask: 0x4, PropSize: 0x10x63(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSpawnActorRelativeLoc : 1;                     // Mask: 0x8, PropSize: 0x10x63(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSpawnActorTakeOwnerRotation : 1;               // Mask: 0x10, PropSize: 0x10x63(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseEquippedItemBlueprintTick : 1;                 // Mask: 0x20, PropSize: 0x10x63(0x1)(BlueprintVisible, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseEquippedItemNativeTick : 1;                    // Mask: 0x40, PropSize: 0x10x63(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSpawnActorOnWaterOnly : 1;                        // Mask: 0x80, PropSize: 0x10x63(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoTameSpawnedActor : 1;                         // Mask: 0x1, PropSize: 0x10x64(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowItemRatingAsPercent : 1;                      // Mask: 0x2, PropSize: 0x10x64(0x1)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventArmorDurabiltyConsumption : 1;             // Mask: 0x4, PropSize: 0x10x64(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsEgg : 1;                                        // Mask: 0x8, PropSize: 0x10x64(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsCookingIngredient : 1;                          // Mask: 0x10, PropSize: 0x10x64(0x1)(BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDragClearDyedItem : 1;                            // Mask: 0x20, PropSize: 0x10x64(0x1)(ConstParm, BlueprintVisible, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeprecateItem : 1;                                // Mask: 0x40, PropSize: 0x10x64(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2CC : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bItemSkinKeepOriginalWeaponTemplate : 1;           // Mask: 0x1, PropSize: 0x10x65(0x1)(Edit, ConstParm, ExportObject, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bItemSkinKeepOriginalIcon : 1;                     // Mask: 0x2, PropSize: 0x10x65(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bItemSkinReceiveOwnerEquippedBlueprintEvents : 1;  // Mask: 0x4, PropSize: 0x10x65(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bItemSkinReceiveOwnerEquippedBlueprintTick : 1;    // Mask: 0x8, PropSize: 0x10x65(0x1)(BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bItemSkinAllowEquipping : 1;                       // Mask: 0x10, PropSize: 0x10x65(0x1)(Edit, ConstParm, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDisplayInInventory : 1;                      // Mask: 0x20, PropSize: 0x10x65(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDroppedItemAllowDinoPickup : 1;                   // Mask: 0x40, PropSize: 0x10x65(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCraftDontActuallyGiveItem : 1;                    // Mask: 0x80, PropSize: 0x10x65(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventUseWhenSleeping : 1;                       // Mask: 0x1, PropSize: 0x10x66(0x1)(BlueprintVisible, ExportObject, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideRepairingRequirements : 1;                // Mask: 0x2, PropSize: 0x10x66(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bScaleOverridenRepairingRequirements : 1;          // Mask: 0x4, PropSize: 0x10x66(0x1)(Edit, ExportObject, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceUseItemAddCharacterStatsOnDinos : 1;         // Mask: 0x8, PropSize: 0x10x66(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyEquipWhenUnconscious : 1;                     // Mask: 0x10, PropSize: 0x10x66(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePreventConsumableWhileHandcuffed : 1;        // Mask: 0x20, PropSize: 0x10x66(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideExactClassCraftingRequirement : 1;        // Mask: 0x40, PropSize: 0x10x66(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventConsumeItemOnDrag : 1;                     // Mask: 0x80, PropSize: 0x10x66(0x1)(Edit, BlueprintReadOnly, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowGrinding : 1;                           // Mask: 0x1, PropSize: 0x10x67(0x1)(ConstParm, BlueprintVisible, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePreventGrinding : 1;                         // Mask: 0x2, PropSize: 0x10x67(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        bDeprecateBlueprint : 1;                           // Mask: 0x4, PropSize: 0x10x67(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDinoAutoConsume : 1;                       // Mask: 0x8, PropSize: 0x10x67(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDinoAutoHealingItem : 1;                        // Mask: 0x10, PropSize: 0x10x67(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPAllowRemoteAddToInventory : 1;                  // Mask: 0x20, PropSize: 0x10x67(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPAllowRemoteRemoveFromInventory : 1;             // Mask: 0x40, PropSize: 0x10x67(0x1)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipmentHatHideItemHeadHair : 1;                 // Mask: 0x80, PropSize: 0x10x67(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipmentHatHideItemFacialHair : 1;               // Mask: 0x1, PropSize: 0x10x68(0x1)(Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipmentForceHairHiding : 1;                     // Mask: 0x2, PropSize: 0x10x68(0x1)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowRemoveFromSteamInventory : 1;                // Mask: 0x4, PropSize: 0x10x68(0x1)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPInventoryNotifyCraftingFinished : 1;            // Mask: 0x8, PropSize: 0x10x68(0x1)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheckBPAllowCrafting : 1;                         // Mask: 0x10, PropSize: 0x10x68(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAllowAddToInventory : 1;                     // Mask: 0x20, PropSize: 0x10x68(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventItemBlueprint : 1;                         // Mask: 0x40, PropSize: 0x10x68(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventUseByDinos : 1;                            // Mask: 0x80, PropSize: 0x10x68(0x1)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventUseByHumans : 1;                           // Mask: 0x1, PropSize: 0x10x69(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPCanUse : 1;                                     // Mask: 0x2, PropSize: 0x10x69(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowOverrideItemAutoDecreaseDurability : 1;      // Mask: 0x4, PropSize: 0x10x69(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCopyItemDurabilityFromCraftingResource : 1;       // Mask: 0x8, PropSize: 0x10x69(0x1)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsInitialItem : 1;                                // Mask: 0x10, PropSize: 0x10x69(0x1)(Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        bPickupEggForceAggro : 1;                          // Mask: 0x20, PropSize: 0x10x69(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClearSkinOnInventoryRemoval : 1;                  // Mask: 0x40, PropSize: 0x10x69(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCustomAutoDecreaseDurabilityPerInterval : 1; // Mask: 0x80, PropSize: 0x10x69(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCustomInventoryWidgetText : 1;               // Mask: 0x1, PropSize: 0x10x6A(0x1)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCustomInventoryWidgetTextColor : 1;          // Mask: 0x2, PropSize: 0x10x6A(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCustomInventoryWidgetTextForBlueprint : 1;   // Mask: 0x4, PropSize: 0x10x6A(0x1)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSkinnedBPCustomInventoryWidgetText : 1;        // Mask: 0x8, PropSize: 0x10x6A(0x1)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCustomDurabilityText : 1;                    // Mask: 0x10, PropSize: 0x10x6A(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCustomDurabilityTextColor : 1;               // Mask: 0x20, PropSize: 0x10x6A(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPInitFromItemNetInfo : 1;                     // Mask: 0x40, PropSize: 0x10x6A(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPInitializeItem : 1;                          // Mask: 0x80, PropSize: 0x10x6A(0x1)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetItemNetInfo : 1;                          // Mask: 0x1, PropSize: 0x10x6B(0x1)(Edit, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bItemSkinKeepOriginalItemName : 1;                 // Mask: 0x2, PropSize: 0x10x6B(0x1)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventUploadingWeaponClipAmmo : 1;               // Mask: 0x4, PropSize: 0x10x6B(0x1)(Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventNativeItemBroken : 1;                      // Mask: 0x8, PropSize: 0x10x6B(0x1)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bResourcePreventGivingFromDemolition : 1;          // Mask: 0x10, PropSize: 0x10x6B(0x1)(ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNameForceNoStatQualityRank : 1;                   // Mask: 0x20, PropSize: 0x10x6B(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysLearnedEngram : 1;                          // Mask: 0x40, PropSize: 0x10x6B(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreMinimumUseIntervalForDinoAutoEatingFood : 1; // Mask: 0x80, PropSize: 0x10x6B(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUnappliedItemSkinIgnoreItemAttachments : 1;       // Mask: 0x1, PropSize: 0x10x6C(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideMoreOptionsIfNonRemovable : 1;                // Mask: 0x2, PropSize: 0x10x6C(0x1)(Edit, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetItemDescription : 1;                      // Mask: 0x4, PropSize: 0x10x6C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCrafted : 1;                                 // Mask: 0x8, PropSize: 0x10x6C(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetItemName : 1;                             // Mask: 0x10, PropSize: 0x10x6C(0x1)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventUseAtTameLimit : 1;                        // Mask: 0x20, PropSize: 0x10x6C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDivideTimeToCraftByGlobalCropGrowthSpeed : 1;     // Mask: 0x40, PropSize: 0x10x6C(0x1)(ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventCheatGive : 1;                             // Mask: 0x80, PropSize: 0x10x6C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsingRequiresStandingOnSolidGround : 1;           // Mask: 0x1, PropSize: 0x10x6D(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAddedAttachments : 1;                        // Mask: 0x2, PropSize: 0x10x6D(0x1)(EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPConsumeProjectileImpact : 1;                 // Mask: 0x4, PropSize: 0x10x6D(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideProjectileType : 1;                  // Mask: 0x8, PropSize: 0x10x6D(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnUpdatedItemContextMenu : 1;                // Mask: 0x10, PropSize: 0x10x6D(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsableWithTekGrenadeLauncher : 1;                 // Mask: 0x20, PropSize: 0x10x6D(0x1)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyDropped : 1;                           // Mask: 0x40, PropSize: 0x10x6D(0x1)(Edit, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bThrowUsesSecondaryActionDrop : 1;                 // Mask: 0x80, PropSize: 0x10x6D(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetItemIcon : 1;                             // Mask: 0x1, PropSize: 0x10x6E(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSlottedTick : 1;                               // Mask: 0x2, PropSize: 0x10x6E(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPDrawItemIcon : 1;                            // Mask: 0x4, PropSize: 0x10x6E(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPForceAllowRemoteAddToInventory : 1;          // Mask: 0x8, PropSize: 0x10x6E(0x1)(Edit, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSkinAddWeightToSkinnedItem : 1;                   // Mask: 0x10, PropSize: 0x10x6E(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPIsValidForCrafting : 1;                      // Mask: 0x20, PropSize: 0x10x6E(0x1)(Edit, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideCraftingConsumption : 1;             // Mask: 0x40, PropSize: 0x10x6E(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMergeCustomDataFromCraftingResources : 1;         // Mask: 0x80, PropSize: 0x10x6E(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreDrawingItemButtonIcon : 1;                  // Mask: 0x1, PropSize: 0x10x6F(0x1)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCensoredItemSkin : 1;                             // Mask: 0x2, PropSize: 0x10x6F(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetItemDurabilityPercentage : 1;             // Mask: 0x4, PropSize: 0x10x6F(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPEquippedItemOnXPEarning : 1;                 // Mask: 0x8, PropSize: 0x10x6F(0x1)(BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysTriggerTributeDownloaded : 1;               // Mask: 0x10, PropSize: 0x10x6F(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeferWeaponBeginPlayToAssociatedItemSetTime : 1;  // Mask: 0x20, PropSize: 0x10x6F(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventRemovingClipAmmo : 1;                      // Mask: 0x40, PropSize: 0x10x6F(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCustomBrokenOverlayIcon : 1;                      // Mask: 0x80, PropSize: 0x10x6F(0x1)(ConstParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetMaxAmmo : 1;                              // Mask: 0x1, PropSize: 0x10x70(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPNotifyItemRefreshed : 1;                     // Mask: 0x2, PropSize: 0x10x70(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceNoLearnedEngramRequirement : 1;              // Mask: 0x4, PropSize: 0x10x70(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowUseIgnoreMovementMode : 1;                   // Mask: 0x8, PropSize: 0x10x70(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2CD : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3E60[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftObjectPtr<class USkeletalMesh>          CostumeDinoSaddleOverrideMesh;                     // 0x78(0x30)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftObjectPtr<class USkeletalMesh>          CostumeDinoSaddleOverrideTorchMesh;                // 0xA8(0x30)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoAutoHealingThresholdPercent;                   // 0xD8(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DinoAutoHealingUseTimeInterval;                    // 0xDC(0x4)(ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ArkTributeVersion;                                 // 0xE0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E62[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class AActor>>          EquipRequiresExplicitOwnerClasses;                 // 0xE8(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          EquipRequiresExplicitOwnerTags;                    // 0xF8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             BuffToGiveOwnerWhenEquipped;                       // 0x108(0x30)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                BuffToGiveOwnerWhenEquipped_BlueprintPath;         // 0x138(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E64[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       ExpirationTimeUTC;                                 // 0x14C(0x4)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	int32                                        BlueprintAllowMaxCraftings;                        // 0x150(0x4)(Edit, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E65[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                AbstractItemCraftingDescription;                   // 0x158(0x10)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ItemSkinUseOnItemClasses;                          // 0x168(0x10)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AllowClassesToBeUsedAsParentSkin;                  // 0x178(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ItemSkinPreventOnItemClasses;                      // 0x188(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ItemBrokenSound;                                   // 0x198(0x8)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             UseItemSound;                                      // 0x1A0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            EquipSound;                                        // 0x1A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            UnEquipSound;                                      // 0x1B0(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            UsedOnOtherItemSound;                              // 0x1B8(0x8)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            RemovedFromOtherItemSound;                         // 0x1C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RandomChanceToBeBlueprint;                         // 0x1C8(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E68[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FActorClassAttachmentInfo>     ActorClassAttachmentInfos;                         // 0x1D0(0x10)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E69[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FItemAttachmentInfo>           ItemSkinAddItemAttachments;                        // 0x1F8(0x10)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EPrimalItemType                   MyItemType;                                        // 0x208(0x1)(Edit, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EPrimalConsumableType             MyConsumableType;                                  // 0x209(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EPrimalEquipmentType              MyEquipmentType;                                   // 0x20A(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E6A[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ExtraItemCategoryFlags;                            // 0x20C(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ItemIconScale;                                     // 0x210(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E6C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               BlockingShieldFPVTranslation;                      // 0x218(0x18)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              BlockingShieldFPVRotation;                         // 0x230(0x18)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShieldBlockDamagePercentage;                       // 0x248(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShieldDamageToDurabilityRatio;                     // 0x24C(0x4)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          PlayAnimationOnUse;                                // 0x250(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHideDuringEquipAnimation;                         // 0x258(0x1)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E6D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          ShowAnimationMale;                                 // 0x260(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ShowAnimationFemale;                               // 0x268(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          HideAnimationMale;                                 // 0x270(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          HideAnimationFemale;                               // 0x278(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CraftingMinLevelRequirement;                       // 0x280(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CraftingCooldownInterval;                          // 0x284(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class AActor>                  CraftingActorToSpawn;                              // 0x288(0x30)(ConstParm, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            BlueprintBackgroundOverrideTexture;                // 0x2B8(0x8)(BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                CraftItemButtonStringOverride;                     // 0x2C0(0x10)(Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class AActor>                  UseSpawnActorClass;                                // 0x2D0(0x30)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               UseSpawnActorLocOffset;                            // 0x300(0x18)(ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SlotIndex;                                         // 0x318(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x31C(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        ItemCustomData;                                    // 0x324(0x4)(ConstParm, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ItemCustomClass;                                   // 0x328(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	int32                                        ItemSkinTemplateIndex;                             // 0x330(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E70[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ItemSkinTemplate;                                  // 0x338(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        ItemRating;                                        // 0x340(0x4)(Edit, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint16                                       CraftQueue;                                        // 0x344(0x2)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3E72[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CraftingSkill;                                     // 0x348(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3E73[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                CustomItemName;                                    // 0x350(0x10)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class FString                                CustomItemDescription;                             // 0x360(0x10)(ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	TArray<struct FColor>                        CustomColors;                                      // 0x370(0x10)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCraftingResourceRequirement>  CustomResourceRequirements;                        // 0x380(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	double                                       NextCraftCompletionTime;                           // 0x390(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	TWeakObjectPtr<class UPrimalInventoryComponent> OwnerInventory;                                    // 0x398(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        ItemQualityIndex;                                  // 0x3A0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3E75[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                SupportDragOntoItemClass;                          // 0x3A8(0x8)(Edit, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        SupportDragOntoItemClasses;                        // 0x3B0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AShooterWeapon>>  SkinWeaponTemplates;                               // 0x3C0(0x10)(BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        SupportAmmoItemForWeaponSkin;                      // 0x3D0(0x10)(Edit, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AShooterWeapon>>  SkinWeaponTemplatesForAmmo;                        // 0x3E0(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class AShooterWeapon>          AmmoSupportDragOntoWeaponItemWeaponTemplate;       // 0x3F0(0x30)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AShooterWeapon>>  AmmoSupportDragOntoWeaponItemWeaponTemplates;      // 0x420(0x10)(Edit, BlueprintVisible, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FUseItemAddCharacterStatusValue> UseItemAddCharacterStatusValues;                   // 0x430(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Ingredient_WeightIncreasePerQuantity;              // 0x440(0x4)(Edit, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Ingredient_FoodIncreasePerQuantity;                // 0x444(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Ingredient_HealthIncreasePerQuantity;              // 0x448(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Ingredient_WaterIncreasePerQuantity;               // 0x44C(0x4)(Edit, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Ingredient_StaminaIncreasePerQuantity;             // 0x450(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventOnFullEquippedSuitHUD : 1;                 // Mask: 0x1, PropSize: 0x10x454(0x1)(Edit, BlueprintVisible, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2CE : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3E78[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DescriptiveNameBase;                               // 0x458(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemDescription;                                   // 0x468(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                DurabilityStringShort;                             // 0x478(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                DurabilityString;                                  // 0x488(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                CustomRepairText;                                  // 0x498(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DroppedItemLifeSpanOverride;                       // 0x4A8(0x4)(BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E7A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               DroppedItemCenterLocationOffsetOverride;           // 0x4B0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftObjectPtr<class UStaticMesh>            DroppedMeshOverride;                               // 0x4C8(0x30)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    DroppedMeshMaterialOverride;                       // 0x4F8(0x8)(Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               DroppedMeshOverrideScale3D;                        // 0x500(0x18)(ConstParm, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SpoilingItem;                                      // 0x518(0x8)(Edit, ConstParm, ExportObject, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AActor>>          UseRequiresOwnerActorClasses;                      // 0x520(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PreservingItemClass;                               // 0x530(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PreservingItemSpoilingTimeMultiplier;              // 0x538(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SpoilingTime;                                      // 0x53C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CraftingConsumesDurability;                        // 0x540(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RepairResourceRequirementMultiplier;               // 0x544(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseItemWeight;                                    // 0x548(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DurabilityIncreaseMultiplier;                      // 0x54C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NewItemDurabilityOverride;                         // 0x550(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DurabilityDecreaseMultiplier;                      // 0x554(0x4)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UseDecreaseDurability;                             // 0x558(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AutoDurabilityDecreaseInterval;                    // 0x55C(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AutoDecreaseMinDurability;                         // 0x560(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AutoDecreaseDurabilityAmountPerInterval;           // 0x564(0x4)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UseDecreaseDurabilityMin;                          // 0x568(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UseMinDurabilityRequirement;                       // 0x56C(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ResourceRarity;                                    // 0x570(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BlueprintTimeToCraft;                              // 0x574(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinBlueprintTimeToCraft;                           // 0x578(0x4)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BlueprintWeight;                                   // 0x57C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinimumUseInterval;                                // 0x580(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeForFullRepair;                                 // 0x584(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseCraftingXP;                                    // 0x588(0x4)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseRepairingXP;                                   // 0x58C(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCraftingResourceRequirement>  BaseCraftingResourceRequirements;                  // 0x590(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Transient, InstancedReference, SubobjectReference)
	TArray<struct FCraftingResourceRequirement>  OverrideRepairingRequirements;                     // 0x5A0(0x10)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemStatInfo                         ItemStatInfos[0x8];                                // 0x5B0(0x120)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint16                                       ItemStatValues[0x8];                               // 0x6D0(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	int32                                        WeaponClipAmmo;                                    // 0x6E0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        WeaponFrequency;                                   // 0x6E4(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastTimeToShowInfo;                                // 0x6E8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ItemVersion;                                       // 0x6F0(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3E7D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ItemDurability;                                    // 0x6F4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        MinItemDurability;                                 // 0x6F8(0x4)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SavedDurability;                                   // 0x6FC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class AShooterWeapon>          WeaponTemplate;                                    // 0x700(0x30)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            BrokenIcon;                                        // 0x730(0x8)(ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CustomBrokenOverlayIcon;                           // 0x738(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ItemIcon;                                          // 0x740(0x8)(Edit, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            AlternateItemIconBelowDurability;                  // 0x748(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AlternateItemIconBelowDurabilityValue;             // 0x750(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DurabilityNotifyThresholdValue;                    // 0x754(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    ItemIconMaterialParent;                            // 0x758(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int16                                        ItemColorID[0x6];                                  // 0x760(0xC)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	int16                                        PreSkinItemColorID[0x6];                           // 0x76C(0xC)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        bUseItemColor[0x6];                                // 0x778(0x6)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E7E[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                RandomColorSet;                                    // 0x780(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              ItemIconMaterial;                                  // 0x788(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              HUDIconMaterial;                                   // 0x790(0x8)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ItemQuantity;                                      // 0x798(0x4)(ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	int32                                        MaxItemQuantity;                                   // 0x79C(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Transient, InstancedReference, SubobjectReference)
	TArray<enum class EPrimalEquipmentType>      EquippedHideOtherEquipmentAttachTypes;             // 0x7A0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<uint64>                               SteamItemUserIDs;                                  // 0x7B0(0x10)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalStructure>        StructureToBuild;                                  // 0x7C0(0x30)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> StructuresToBuild;                                 // 0x7F0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> CachedStructuresToBuild;                           // 0x800(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        StructureToBuildIndex;                             // 0x810(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E7F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                GiveItemWhenUsed;                                  // 0x818(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalInventoryComponent>> CraftingRequiresInventoryComponent;                // 0x820(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class ADroppedItem>            DroppedItemTemplateOverride;                       // 0x830(0x30)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class ADroppedItem>            DroppedItemTemplateForSecondryAction;              // 0x860(0x30)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             BuffToGiveOwnerCharacter;                          // 0x890(0x30)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              PreviewCameraRotation;                             // 0x8C0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PreviewCameraPivotOffset;                          // 0x8D8(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PreviewCameraDistanceScaleFactor;                  // 0x8F0(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PreviewCameraDefaultZoomMultiplier;                // 0x8F4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PreviewCameraMaxZoomMultiplier;                    // 0x8F8(0x4)(Edit, ConstParm, ExportObject, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bItemIsUsable;                                     // 0x8FC(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E80[0x43];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       CreationTime;                                      // 0x940(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	double                                       LastAutoDurabilityDecreaseTime;                    // 0x948(0x8)(ConstParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	double                                       LastUseTime;                                       // 0x950(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E81[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxCustomItemDescriptionLength;                    // 0x960(0x4)(ExportObject, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        TempSlotIndex;                                     // 0x964(0x4)(Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        LastSlotIndex;                                     // 0x968(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AShooterWeapon>         AssociatedWeapon;                                  // 0x96C(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E83[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalItem*                           MyItemSkin;                                        // 0x978(0x8)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimalItem*                           SkinnedOntoItem;                                   // 0x980(0x8)(Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     WheelItemsAmmo;                                    // 0x988(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AShooterCharacter>      LastOwnerPlayer;                                   // 0x998(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	TArray<struct FCropItemPhaseData>            CropPhasesData;                                    // 0x9A0(0x10)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CropGrowingFertilizerConsumptionRate;              // 0x9B0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CropMaxFruitFertilizerConsumptionRate;             // 0x9B4(0x4)(Edit, ExportObject, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CropGrowingWaterConsumptionRate;                   // 0x9B8(0x4)(ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CropMaxFruitWaterConsumptionRate;                  // 0x9BC(0x4)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CropMaxFruits;                                     // 0x9C0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CropNoFertilizerOrWaterCacheReductionRate;         // 0x9C4(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FertilizerEffectivenessMultiplier;                 // 0x9C8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EggAlertDinosAggroAmount;                          // 0x9CC(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EggAlertDinosAggroRadius;                          // 0x9D0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E84[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          EggAlertDinosAggroTags;                            // 0x9D8(0x10)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EggAlertDinosForcedAggroTime;                      // 0x9E8(0x4)(ConstParm, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EggMaximumDistanceFromOriginalDropToAlertDinos;    // 0x9EC(0x4)(ConstParm, ExportObject, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                BrokenGiveItemClass;                               // 0x9F0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ClearColorDurabilityThreshold;                     // 0x9F8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E85[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ItemClassToUseAsInitialCustomData;                 // 0xA00(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               OriginalItemDropLocation;                          // 0xA08(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	struct FLinearColor                          DurabilityBarColorForeground;                      // 0xA20(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          DurabilityBarColorBackground;                      // 0xA30(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                OverrideCooldownTimeItemClass;                     // 0xA40(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinDurabilityForCraftingResource;                  // 0xA48(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ResourceRequirementIncreaseRatingPower;            // 0xA4C(0x4)(ConstParm, ExportObject, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ResourceRequirementRatingScale;                    // 0xA50(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ResourceRequirementRatingIncreasePercentage;       // 0xA54(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       NextSpoilingTime;                                  // 0xA58(0x8)(ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	double                                       LastSpoilingTime;                                  // 0xA60(0x8)(Edit, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	TArray<class FString>                        DefaultFolderPaths;                                // 0xA68(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemRatingString;                                  // 0xA78(0x10)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DefaultWeaponMeshName;                             // 0xA88(0x8)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E86[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                EngramRequirementItemClassOverride;                // 0xA98(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E87[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            ExtraThrowItemSound;                               // 0xAB0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventNotificationItemCombatMode;                // 0xAB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceNotificationItemCombatMode;                  // 0xAB9(0x1)(BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E88[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SpawnOnWaterEncroachmentBoxExtent;                 // 0xAC0(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AActor>>          OnlyUsableOnSpecificClasses;                       // 0xAD8(0x10)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSaddlePassengerSeatDefinition> SaddlePassengerSeats;                              // 0xAE8(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SaddleOverrideRiderSocketName;                     // 0xAF8(0x8)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalDinoCharacter>    EggDinoClassToSpawn;                               // 0xB00(0x30)(Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        EggNumberOfLevelUpPointsApplied[0xC];              // 0xB30(0xC)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        EggNumberMutationsApplied[0xC];                    // 0xB3C(0xC)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        EggTamedIneffectivenessModifier;                   // 0xB48(0x4)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        EggColorSetIndices[0x6];                           // 0xB4C(0x6)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3E89[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        EggGenderOverride;                                 // 0xB54(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        EggLoseDurabilityPerSecond;                        // 0xB58(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ExtraEggLoseDurabilityPerSecondMultiplier;         // 0xB5C(0x4)(BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EggMinTemperature;                                 // 0xB60(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EggMaxTemperature;                                 // 0xB64(0x4)(BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EggDroppedInvalidTempLoseItemRatingSpeed;          // 0xB68(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E8A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            ShieldHitSound;                                    // 0xB70(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RecipeCraftingSkillScale;                          // 0xB78(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CustomItemID;                                      // 0xB7C(0x4)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        AddDinoTargetingRange;                             // 0xB80(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DamageTorpidityArmorRating;                        // 0xB84(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IndirectTorpidityArmorRating;                      // 0xB88(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E8B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class APrimalEmitterSpawnable> UseParticleEffect;                                 // 0xB90(0x30)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  UseParticleEffectSocketName;                       // 0xBC0(0x8)(BlueprintVisible, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UseGiveDinoTameAffinityPercent;                    // 0xBC8(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E8C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        CraftingAdditionalItemsToGive;                     // 0xBD0(0x10)(BlueprintVisible, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        LastValidItemVersion;                              // 0xBE0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalTameAffinityMultiplier;                      // 0xBE4(0x4)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CraftingGiveItemCount;                             // 0xBE8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CraftingGivesItemQuantityOverride;                 // 0xBEC(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            UseItemOnItemSound;                                // 0xBF0(0x8)(ConstParm, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  UseUnlocksEmoteName;                               // 0xBF8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E8D[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDinoAncestorsEntry>           EggDinoAncestors;                                  // 0xC08(0x10)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	TArray<struct FDinoAncestorsEntry>           EggDinoAncestorsMale;                              // 0xC18(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	int32                                        EggRandomMutationsFemale;                          // 0xC28(0x4)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	int32                                        EggRandomMutationsMale;                            // 0xC2C(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	TArray<class UClass*>                        EquippingRequiresEngrams;                          // 0xC30(0x10)(ConstParm, ExportObject, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCustomItemData>               CustomItemDatas;                                   // 0xC40(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class FString                                OverrideUseString;                                 // 0xC50(0x10)(Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SendToClientClassOverride;                         // 0xC60(0x8)(ConstParm, BlueprintReadOnly, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                CrafterCharacterName;                              // 0xC68(0x10)(BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class FString                                CrafterTribeName;                                  // 0xC78(0x10)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        CraftedSkillBonus;                                 // 0xC88(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        CraftingSkillQualityMultiplierMin;                 // 0xC8C(0x4)(ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CraftingSkillQualityMultiplierMax;                 // 0xC90(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SinglePlayerCraftingSpeedMultiplier;               // 0xC94(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NoLevelEngramSortingPriority;                      // 0xC98(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CustomFlags;                                       // 0xC9C(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CustomTag;                                         // 0xCA0(0x8)(Edit, ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        EquippedReduceDurabilityInterval;                  // 0xCA8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E8E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastEquippedReduceDurabilityTime;                  // 0xCB0(0x8)(Edit, ConstParm, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EquippedReduceDurabilityPerInterval;               // 0xCB8(0x4)(BlueprintReadOnly, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ItemStatClampsMultiplier;                          // 0xCBC(0x4)(Edit, ExportObject, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        MaxDurabiltiyOverride;                             // 0xCC0(0x4)(BlueprintVisible, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E8F[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        NextRepairPercentage;                              // 0xCD8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E90[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UStaticMesh*                           NetDroppedMeshOverride;                            // 0xCE0(0x8)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    NetDroppedMeshMaterialOverride;                    // 0xCE8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               NetDroppedMeshOverrideScale3D;                     // 0xCF0(0x18)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNonBlockingShield : 1;                            // Mask: 0x1, PropSize: 0x10xD08(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNetInfoFromClient : 1;                            // Mask: 0x2, PropSize: 0x10xD08(0x1)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_2CF : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bDisableItemUITooltip : 1;                         // Mask: 0x8, PropSize: 0x10xD08(0x1)(Edit, ConstParm, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventDepositDropping : 1;                       // Mask: 0x10, PropSize: 0x10xD08(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowSkinColorization : 1;                   // Mask: 0x20, PropSize: 0x10xD08(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEquipAddTekExtendedInfo : 1;                      // Mask: 0x40, PropSize: 0x10xD08(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowCraftingWithStarterAmmo : 1;                 // Mask: 0x80, PropSize: 0x10xD08(0x1)(ConstParm, ExportObject, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E93[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSlateBrush                           WidgetCustomBrokenOverlayStyleBrush;               // 0xD10(0xD0)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                CustomBrokenBorderColor;                           // 0xDE0(0x4)(ConstParm, ExportObject, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E94[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftObjectPtr<class USkeletalMesh>          DyePreviewMeshOverrideSK;                          // 0xDE8(0x30)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftObjectPtr<class UStaticMesh>            DyePreviewMeshOverrideSM;                          // 0xE18(0x30)(BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            AccessoryActivatedIconOverride;                    // 0xE48(0x8)(Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                CustomItemTooltipOverride;                         // 0xE50(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBlueprintAnimNotifications;                    // 0xE58(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPPreventUpload;                               // 0xE59(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E95[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  EquippingCosmeticRequiresUnlockedEmoteName;        // 0xE5C(0x8)(Edit, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CustomInventoryWidgetTextVerticalOffset;           // 0xE64(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseCustomContextMenuOptions;                      // 0xE68(0x1)(Edit, BlueprintVisible, ExportObject, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E96[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          TopLevelCustomContextMenuOptions;                  // 0xE70(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCustomContextSubmenu>         CustomContextSubMenus;                             // 0xE80(0x10)(BlueprintReadOnly, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCustomContextMenuData>        CustomContextOptionData;                           // 0xE90(0x10)(Edit, ConstParm, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventModifyArmorValue;                          // 0xEA0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBPOnLocalUse;                                  // 0xEA1(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E97[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       AssociatedDinoID1;                                 // 0xEA4(0x4)(Edit, ConstParm, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint32                                       AssociatedDinoID2;                                 // 0xEA8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideInheritedStatWeight : 1;             // Mask: 0x1, PropSize: 0x10xEAC(0x1)(Edit, ConstParm, BlueprintVisible, Net, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSkinDroppedItemTemplateForSecondryAction : 1;  // Mask: 0x2, PropSize: 0x10xEAC(0x1)(BlueprintReadOnly, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E98[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalItem* GetDefaultObj();

	int32 UseItemOntoItem(bool* ReturnValue);
	void Use(bool bOverridePlayerInput);
	bool UpdatedItem();
	bool UnequipWeapon();
	bool StaticGetItemNameAndIcon(class AShooterPlayerController* ForPC, bool* ReturnValue);
	void StaticGetDinoColorSetIndexForItemColorIDFromDyeList(int32* ID, int32* ReturnValue);
	void StaticGetDinoColorSetIndexForItemColorID(int32* ID, int32* ReturnValue);
	void StaticGetColorForItemColorIDFromDyeList(int32* ID, struct FLinearColor* ReturnValue);
	void StaticGetColorForItemColorID(int32* ID, struct FLinearColor* ReturnValue);
	float SlottedTick();
	float SkinEquippedBlueprintTick();
	struct FUnreplicatedEggData SetUnreplicatedEggData();
	bool SetQuantity();
	int32 SetItemStatValues(int32 Val);
	int32 SetItemStatInfo(const struct FItemStatInfo& Val);
	TArray<int32> SetItemColors();
	struct FCustomItemData SetCustomItemData();
	int32 SetCustomColorParams();
	class APrimalDinoCharacter* SetAssociatedDinoID();
	void ServerUpdatedWeaponClipAmmo();
	bool ServerSendItemExecCommandToPlayer();
	bool ServerSendItemExecCommandToEveryone();
	void ServerRemoveWeaponAccessoryOnly();
	void ServerRemoveItemSkinOnly();
	void ServerRemoveItemSkin();
	class FName SelectedCustomContextMenuItem(class AShooterPlayerController* ForPC);
	float RepairItem();
	void RemoveWeaponAccessory();
	bool RemoveFromSlot(bool bForce);
	bool RemovedSkinFromItem();
	class FName RemoveCustomItemData();
	bool RemoveClipAmmo();
	bool RefreshAttachments();
	float RecalcSpoilingTime(class UPrimalInventoryComponent* ForComp);
	float OverrideItemRating();
	int32 OverrideCrouchingSound(bool* bIsProne, class USoundBase** ReturnValue);
	class AShooterPlayerController* NotifyEditText();
	TArray<struct FCustomItemData> MergeCustomItemDatas(TArray<struct FCustomItemData>* ReturnValue);
	bool MeetRepairingRequirements(bool* ReturnValue);
	TArray<struct FCraftingResourceRequirement> MakeRepairingRequirementsString(class FString* ReturnValue);
	void LocalUseStartHoldBP(class AShooterPlayerController* ForPC);
	void LocalUseStartHold(class AShooterPlayerController* ForPC);
	void LocalUseItemReleaseBP(class AShooterPlayerController* ForPC);
	void LocalUseItemRelease(class AShooterPlayerController* ForPC);
	void LocalUseAfterHoldBP(class AShooterPlayerController* ForPC);
	void LocalUseAfterHold(class AShooterPlayerController* ForPC);
	void LocalUse(class AShooterPlayerController* ForPC);
	void IsValidForCrafting(bool* ReturnValue);
	void IsUsableConsumable(bool* ReturnValue);
	void IsOwnerInWater(bool* ReturnValue);
	void IsOwnerInNoPainWater(bool* ReturnValue);
	class FName IsCustomContextMenuItemEnabled(bool* ReturnValue);
	void IsCooldownReadyForUse(bool* ReturnValue);
	void IsBroken(bool* ReturnValue);
	float InitNewItem(float* MinRandomQuality);
	class UWorld* InitializeItem(bool bForceReInit);
	bool IncrementItemQuantity(int32* ReturnValue);
	class FName HasCustomItemData(bool* ReturnValue);
	void HasBuffToGiveOwnerWhenEquipped(bool* ReturnValue);
	struct FVector HandleShieldDamageBlocking(const struct FDamageEvent& DamageEvent, float* ReturnValue);
	void GetWeaponTemplateMeleeDamageType(class UClass** ReturnValue);
	void GetWeaponTemplateMeleeDamageAmount(float* ReturnValue);
	void GetWeaponTemplateHarvestDamageType(class UClass** ReturnValue);
	void GetWeaponTemplateHarvestDamageMultiplier(float* ReturnValue);
	void GetWeaponTemplateDurabilityToConsumePerMeleeHit(float* ReturnValue);
	void GetWeaponClipAmmo(int32* ReturnValue);
	enum class EPrimalCharacterStatusValue GetUseItemAddCharacterStatusValue(float* ReturnValue);
	struct FUnreplicatedEggData GetUnreplicatedEggData();
	void GetSpoilingTime(float* ReturnValue);
	class APlayerController* GetRepairingRequirementsString(class FString* ReturnValue);
	void GetRemainingCooldownTime(float* ReturnValue);
	class UClass* GetProjectileType(class UClass** ReturnValue);
	void GetOwnerPlayer(class AShooterCharacter** ReturnValue);
	void GetOwnerActor(class AActor** ReturnValue);
	class UObject* GetMaxItemQuantity(int32* ReturnValue);
	class AShooterPlayerController* GetMaximumAdditionalCrafting(class UPrimalInventoryComponent* ForComp, int32* ReturnValue);
	void GetMaxDurability(float* ReturnValue);
	bool GetItemWeight(float* ReturnValue);
	int32 GetItemStatValues(int32* ReturnValue);
	enum class EPrimalItemStat GetItemStatString(class FString* ReturnValue);
	enum class EPrimalItemStat GetItemStatModifier(float* ReturnValue);
	int32 GetItemStatInfo(struct FItemStatInfo* ReturnValue);
	void GetItemShortName(class FString* ReturnValue);
	bool GetItemNetInfo(struct FItemNetInfo* ReturnValue);
	void GetItemDyeColors(TArray<struct FLinearColor>* ReturnValue);
	struct FLinearColor GetItemCustomColor(bool* ReturnValue);
	int32 GetItemColorIDFromDyeItemIDFromDyeList(int32* ReturnValue);
	int32 GetItemColorIDFromDyeItemID(int32* ReturnValue);
	int32 GetItemColorID(int32* ReturnValue);
	TArray<uint8> GetItemBytes();
	void GetInventoryIconDisplayText(class FString* ReturnValue);
	void GetInitializeItemOwnerInventory(class UPrimalInventoryComponent** ReturnValue);
	void GetHUDIconMaterial(class UMaterialInterface** ReturnValue);
	void GetEngramRequirementLevel(int32* ReturnValue);
	float GetEggHatchTimeRemaining(class UWorld** TheWorld, float* ReturnValue);
	void GetDurabilityPercentage(float* ReturnValue);
	struct FCustomItemData GetCustomItemData(bool* ReturnValue);
	void GetCryopodDeploymentRange(float* ReturnValue);
	int32 GetCraftingResourceRequirement(int32* ReturnValue);
	float GetCraftingRequirements(TArray<struct FCraftingResourceRequirement>* ReturnValue);
	class AActor* GetComponentToAttach(class UActorComponent** ReturnValue);
	bool GetBuffToGiveOwnerWhenEquipped(class UClass** ReturnValue);
	void GetAttachedComponentsNum(int32* ReturnValue);
	class AActor* GetAttachedComponent(class UActorComponent** ReturnValue);
	int32 GetAssociatedDinoID();
	void GetAllStructuresToBuild(TArray<TSoftClassPtr<class APrimalStructure>>* ReturnValue);
	bool GetActualEquipmentType(enum class EPrimalEquipmentType* ReturnValue);
	void FinishRepairing();
	float EquippedBlueprintTick();
	int32 DoesItemUseColorRegion(bool* ReturnValue);
	struct FItemNetInfo CreateItemFromNetInfo(class UPrimalItem** ReturnValue);
	TArray<uint8> CreateFromBytes(class UPrimalItem** ReturnValue);
	bool Crafted();
	bool CraftBlueprint();
	void ClientUpdatedWeaponClipAmmo();
	void ClearAssociatedDinoID();
	class UPrimalInventoryComponent* ClampStats();
	class UPrimalInventoryComponent* ClampItemRating();
	void CheckForInventoryDupes(bool* ReturnValue);
	class UPrimalItem* CanUseWithItemSource(bool* ReturnValue);
	class UPrimalItem* CanUseWithItemDestination(bool* ReturnValue);
	bool CanUse(bool* ReturnValue);
	void CanSpoil(bool* ReturnValue);
	void CanShowNotificationItem(bool* ReturnValue);
	bool CanRepair(bool* ReturnValue);
	bool CanFullyCraft(bool* ReturnValue);
	void CanEquipWeapon(bool* ReturnValue);
	void CanDrop(bool* ReturnValue);
	void CanCraft(bool* ReturnValue);
	int32 BPUsedOntoItem();
	class UObject* BPTributeItemUploaded();
	class UObject* BPTributeItemDownloaded();
	class UPrimalItem* BPSupportUseOntoItem(bool* ReturnValue);
	class FName BPShouldHideTopLevelCustomContextMenuOption(bool* ReturnValue);
	int32 BPSetWeaponClipAmmo();
	class UMaterialInstanceDynamic* BPSetupHUDIconMaterial();
	void BPServerVerifyStructurePlacementData();
	struct FBPNetExecParams BPServerHandleItemNetExecCommand(class AShooterPlayerController* ForPC);
	class FString BPProcessEditText(class AShooterPlayerController* ForPC, bool* ReturnValue);
	void BPPreventWeaponEquip(bool* ReturnValue);
	class UPrimalItem* BPPreventUseOntoItem(bool* ReturnValue);
	void BPPreventUpload(bool* ReturnValue);
	void BPPreventNewColorization(bool* ReturnValue);
	class UPrimalInventoryComponent* BPPreventEquip(bool* ReturnValue);
	void BPPreUseItem();
	class UWorld* BPPreInitializeItem();
	class UWorld* BPPostInitializeItem();
	class APrimalCharacter* BPPostAddBuffToGiveOwnerCharacter(class APrimalBuff** Buff);
	void BPOverrideProjectileType(class UClass** ReturnValue);
	float BPOverrideInheritedStatWeight();
	float BPOverrideEquippedDurabilityPercentage();
	int32 BPOverrideCraftingConsumption();
	void BPOnUpdatedItemContextMenu();
	void BPOnLocalUse(class AShooterCharacter* ForCharacter);
	int32 BPOnItemConsumed();
	void BPNotifyItemRefreshed();
	bool BPNotifyDropped();
	void BPMatchesItemID(int32* ItemID1, int32* ItemID2, bool* ReturnValue);
	int32 BPMakeItemID(struct FItemNetID* ReturnValue);
	void BPItemBroken();
	void BPItemBelowDurabilityThreshold();
	void BPIsValidForCrafting(bool* ReturnValue);
	TArray<int32> BPInitItemColors();
	void BPInitIconMaterial();
	void BPInitFromItemNetInfo();
	void BPGetSkinnedCustomInventoryWidgetText(class FString* ReturnValue);
	void BPGetMaxAmmo(int32* ReturnValue);
	int32 BPGetItemStatRandomValue(int32* ReturnValue);
	int32 BPGetItemStatModifier(float* ReturnValue);
	void BPGetItemNetInfo();
	class FString BPGetItemName(class AShooterPlayerController* ForPC, class FString* ReturnValue);
	void BPGetItemID(int32* ItemID1, int32* ItemID2);
	void BPGetItemIcon(class AShooterPlayerController* ForPC, class UTexture2D** ReturnValue);
	void BPGetItemDurabilityPercentage(float* ReturnValue);
	bool BPGetItemDescription(class AShooterPlayerController* ForPC, class FString* ReturnValue);
	class APrimalStructure* BPGetFuelParticleSystemOverride(class UParticleSystem** ReturnValue);
	class APrimalStructure* BPGetFuelAudioOverride(class USoundBase** ReturnValue);
	void BPGetCustomInventoryWidgetTextColor(struct FColor* ReturnValue);
	void BPGetCustomInventoryWidgetText(class FString* ReturnValue);
	void BPGetCustomIconMaterialParent(class UMaterialInterface** ReturnValue);
	void BPGetCustomDurabilityTextColor(struct FColor* ReturnValue);
	void BPGetCustomDurabilityText(class FString* ReturnValue);
	void BPGetCustomAutoDecreaseDurabilityPerInterval(float* ReturnValue);
	class UPrimalInventoryComponent* BPForceAllowRemoteAddToInventory(bool* ReturnValue);
	enum class EXPType BPEquippedItemOnXPEarning(class APrimalCharacter* ForChar);
	struct FLinearColor BPDrawItemIcon();
	void BPCrafted();
	void BPConsumeProjectileImpact(class AShooterProjectile* TheProjectile, const struct FHitResult& HitResult, bool* ReturnValue);
	struct FBPNetExecParams BPClientHandleItemNetExecCommand(class AShooterPlayerController* ForPC);
	bool BPCanUse(bool* ReturnValue);
	class UPrimalInventoryComponent* BPCanAddToInventory(bool* ReturnValue);
	int32 BPBreakItemID();
	class UAnimNotifyState* BPAnimNotifyCustomState_End(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);
	class UAnimNotifyState* BPAnimNotifyCustomState_Begin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);
	class UAnimNotify* BPAnimNotifyCustomEvent(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);
	bool BPAllowRemoteRemoveFromInventory(class UPrimalInventoryComponent* InvComp, class AShooterPlayerController** ByPC, bool* ReturnValue);
	bool BPAllowRemoteAddToInventory(class UPrimalInventoryComponent* InvComp, class AShooterPlayerController** ByPC, bool* ReturnValue);
	void BPAllowCrafting(class AShooterPlayerController* ForPC, class FString* ReturnValue);
	void BPAddedAttachments();
	void BlueprintUsed();
	void BlueprintUnequipped();
	class AController* BlueprintOwnerPosssessed();
	bool BlueprintEquipped();
	bool ApplyingSkinOntoItem();
	class UMeshComponent* ApplyColorsToMesh();
	class APrimalStructure* ApplyColorsFromStructure();
	bool AllowRemoteAddToInventory(class UPrimalInventoryComponent* InvComp, class AShooterPlayerController** ByPC, bool* ReturnValue);
	class UPrimalInventoryComponent* AllowEquipItem(bool* ReturnValue);
	bool AddToSlot(bool bForce);
	bool AddNewItem(float* MinRandomQuality, bool ClampStats, class UPrimalItem** ReturnValue);
	float AddItemDurability();
};

// 0x220 (0x5D8 - 0x3B8)
// Class ShooterGame.PrimalItemInventoryToolTipWidget
class UPrimalItemInventoryToolTipWidget : public UTooltipSmartLayoutWidget
{
public:
	class FName                                  FnameMainInfo_Switcher;                            // 0x3B8(0x8)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FnameMainInfo_Full_Icon;                           // 0x3C0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FnameMainInfo_Full_DescriptionLabel;               // 0x3C8(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FnameMainInfo_DescOnly_DescriptionLabel;           // 0x3D0(0x8)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          FnameGeneral_LabelNames;                           // 0x3D8(0x10)(Edit, ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          FnameGeneral_GroupNames;                           // 0x3E8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        General_GroupFreq;                                 // 0x3F8(0x4)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EA5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          FnameStat_LabelNames;                              // 0x400(0x10)(Edit, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          FnameStat_GroupNames;                              // 0x410(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Stat_GroupFreq;                                    // 0x420(0x4)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FnameCraftPanel;                                   // 0x424(0x8)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FnameCraftTitleLabel;                              // 0x42C(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EA6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          FnameCraft_RequirementLabels;                      // 0x438(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          FnameCraft_RequirementIcons;                       // 0x448(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          FnameCraft_GroupNames;                             // 0x458(0x10)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Craft_GroupFreq;                                   // 0x468(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSlateColor                           Craft_RequirementsMet;                             // 0x46C(0x14)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSlateColor                           Craft_RequirementsUnmet;                           // 0x480(0x14)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSlateColor                           NormalTextColor;                                   // 0x494(0x14)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSlateColor                           NormalSecondTextColor;                             // 0x4A8(0x14)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSlateColor                           NormalGeneralTextColor;                            // 0x4BC(0x14)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EngramBg;                                          // 0x4D0(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            BlueprintBg;                                       // 0x4D8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TekgramBg;                                         // 0x4E0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ItemQualityOverlay;                                // 0x4E8(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EA7[0xE8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalItemInventoryToolTipWidget* GetDefaultObj();

};

// 0x270 (0x628 - 0x3B8)
// Class ShooterGame.PrimalItemToolTipWidget
class UPrimalItemToolTipWidget : public UToolTipWidget
{
public:
	class FString                                ItemNameLabelName;                                 // 0x3B8(0x10)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemQuantityLabelName;                             // 0x3C8(0x10)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemDescriptionLabelName;                          // 0x3D8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemTypeLabelName;                                 // 0x3E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemSubTypeLabelName;                              // 0x3F8(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemIconImageName;                                 // 0x408(0x10)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemWeightLabelName;                               // 0x418(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemStatsLabelName;                                // 0x428(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemDurabilityLabelName;                           // 0x438(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemQualityImageName;                              // 0x448(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ItemSubtypePanelName;                              // 0x458(0x10)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemStatsPanelName;                                // 0x468(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemCraftingPanelName;                             // 0x470(0x8)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemCraftingRequirementsLabelName;                 // 0x478(0x8)(OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemCraftingTitleLabelName;                        // 0x480(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemCraftingQueueLabelName;                        // 0x488(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemCraftingProgressBarName;                       // 0x490(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ItemCraftRepairInvReqLabelName;                    // 0x498(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SpoilIntoItemPanelName;                            // 0x4A0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SpoilIntoItemNameLabelName;                        // 0x4A8(0x8)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SpoilIntoItemTimeLabelName;                        // 0x4B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SpoilIntoItemIconName;                             // 0x4B8(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            EngramBg;                                          // 0x4C0(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            BlueprintBg;                                       // 0x4C8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TekgramBg;                                         // 0x4D0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ItemQualityOverlay;                                // 0x4D8(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EA9[0x148];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalItemToolTipWidget* GetDefaultObj();

};

// 0x0 (0xEB0 - 0xEB0)
// Class ShooterGame.PrimalItem_CruiseMissile
class UPrimalItem_CruiseMissile : public UPrimalItem
{
public:

	static class UClass* StaticClass();
	static class UPrimalItem_CruiseMissile* GetDefaultObj();

};

// 0x20 (0xED0 - 0xEB0)
// Class ShooterGame.PrimalItem_Dye
class UPrimalItem_Dye : public UPrimalItem
{
public:
	struct FLinearColor                          DyeColor;                                          // 0xEB0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	class UClass*                                DyeUISceneTemplate;                                // 0xEC0(0x8)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EAB[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalItem_Dye* GetDefaultObj();

};

// 0x10 (0xEC0 - 0xEB0)
// Class ShooterGame.PrimalItem_Radio
class UPrimalItem_Radio : public UPrimalItem
{
public:
	uint8                                        bAllowVoice : 1;                                   // Mask: 0x1, PropSize: 0x10xEB0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2D0 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3EAC[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            SetFrequencySound;                                 // 0xEB8(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalItem_Radio* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.LandscapeUtils
class ULandscapeUtils : public UObject
{
public:

	static class UClass* StaticClass();
	static class ULandscapeUtils* GetDefaultObj();

};

// 0x278 (0x2A0 - 0x28)
// Class ShooterGame.PrimalLocalProfile
class UPrimalLocalProfile : public UObject
{
public:
	uint8                                        Pad_3EB1[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FEngramCustomFolder>           CustomFolders;                                     // 0x48(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        UnlockedDinoEntries;                               // 0x58(0x10)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPrimalMapMarkerEntryData>     MapMarkers;                                        // 0x68(0x10)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
	TArray<int32>                                DisplayedTutorials;                                // 0x78(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FArkInventoryData                     MyArkData;                                         // 0x88(0x30)(ConstParm, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<uint64>                               SpectatorSavedIds;                                 // 0xB8(0x10)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       SpectatorPositions;                                // 0xC8(0x10)(Edit, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FRotator>                      SpectatorRotations;                                // 0xD8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        FavoriteServersNames;                              // 0xE8(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        RecentlyJoinedServersNames;                        // 0xF8(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        UnlockedAchievements;                              // 0x108(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AchievementItemsCollectedList;                     // 0x118(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        UnlockedAchievementsList;                          // 0x128(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<uint32>                               GlobalExplorerNoteUnlocks;                         // 0x138(0x10)(BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          TamedDinoTags;                                     // 0x148(0x10)(ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FFogOfWarInfoStruct>           PerMapFogOfWars;                                   // 0x158(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMapMarkerPerMapInfo>          MapMarkersPerMaps;                                 // 0x168(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<class FName, struct FPhotoModeMotionControlTrackInfo> PhotoModeMotionControlTracks;                      // 0x178(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MapMarkersColorSliderPercent;                      // 0x1C8(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstThatchCraft;             // 0x1CC(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstJumpPadCraft;            // 0x1CD(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstOceanPlatformCraft;      // 0x1CE(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstPressurePlateCraft;      // 0x1CF(0x1)(BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstFishingNetCraft;         // 0x1D0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstMiningDrillCraft;        // 0x1D1(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstShoulderCannonCraft;     // 0x1D2(0x1)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstTekGrenadeLauncherCraft; // 0x1D3(0x1)(ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstTekCruiseMissileCraft;   // 0x1D4(0x1)(Edit, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstLaserTripWireCraft;      // 0x1D5(0x1)(ConstParm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstTekClawsCraft;           // 0x1D6(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstHoverSkiffCraft;         // 0x1D7(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstShapeshifterTransform;   // 0x1D8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstShapeshifterRevert;      // 0x1D9(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstShapeshifterBloodlust;   // 0x1DA(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstExoSuit;                 // 0x1DB(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstTekBow;                  // 0x1DC(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstTekPistol;               // 0x1DD(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstTekCropPlot;             // 0x1DE(0x1)(BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstHoversail;               // 0x1DF(0x1)(Edit, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstPlantSpeciesR;           // 0x1E0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToGen2BossBattleAvailable;      // 0x1E1(0x1)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstGen2ExplorerNoteFound;   // 0x1E2(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CompanionHasReactedToFirstGen2DispatcherEncountered; // 0x1E3(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumRespawns;                                       // 0x1E4(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EB6[0xB8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalLocalProfile* GetDefaultObj();

	bool SaveProfile();
	TArray<struct FItemNetInfo> OnFinishedLoadingAllClustersItems(bool Success);
	TArray<struct FItemNetID> OnAllClustersItemsRemoved(bool Success);
};

// 0x68 (0x130 - 0xC8)
// Class ShooterGame.PrimalNavigationInvokerComponent
class UPrimalNavigationInvokerComponent : public UNavigationInvokerComponent
{
public:
	TMap<class FName, struct FVector2D>          AlternateGenerationAndRemovalRadii;                // 0xC8(0x50)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DeactivationDelay;                                 // 0x118(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EB8[0x14];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalNavigationInvokerComponent* GetDefaultObj();

};

// 0x0 (0x1538 - 0x1538)
// Class ShooterGame.PrimalNavigationSystem
class UPrimalNavigationSystem : public UNavigationSystemV1
{
public:

	static class UClass* StaticClass();
	static class UPrimalNavigationSystem* GetDefaultObj();

	class AActor* GetNavAreaAtLocation(struct FVector* Location, class UClass** ReturnValue);
};

// 0x0 (0x60 - 0x60)
// Class ShooterGame.PrimalNavigationSystemConfig
class UPrimalNavigationSystemConfig : public UNavigationSystemModuleConfig
{
public:

	static class UClass* StaticClass();
	static class UPrimalNavigationSystemConfig* GetDefaultObj();

};

// 0x20 (0x1E0 - 0x1C0)
// Class ShooterGame.PrimalNavModifierComponent
class UPrimalNavModifierComponent : public UNavModifierComponent
{
public:
	struct FVector                               FailsafeLocation;                                  // 0x1C0(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ENavigationDataResolution         NavMeshResolution;                                 // 0x1D8(0x1)(Edit, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EBC[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalNavModifierComponent* GetDefaultObj();

	struct FVector SetFailsafeExtentAndLocation(struct FVector* InLocation);
	struct FVector GetFailsafeExtentAndLocation(struct FVector* OutLocation);
};

// 0x0 (0x518 - 0x518)
// Class ShooterGame.PrimalNoClimbingVolume
class APrimalNoClimbingVolume : public AVolume
{
public:

	static class UClass* StaticClass();
	static class APrimalNoClimbingVolume* GetDefaultObj();

};

// 0x78 (0x358 - 0x2E0)
// Class ShooterGame.PrimalPathFollowingComponent
class UPrimalPathFollowingComponent : public UPathFollowingComponent
{
public:
	struct FVector                               MoveTowardTargetOffset;                            // 0x2E0(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               TargetFocalPositionOffset;                         // 0x2F8(0x18)(BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReachedDestinationThresholdOffset;                 // 0x310(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MovementGoalHeight;                                // 0x314(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUse3DGoalRadius : 1;                              // Mask: 0x1, PropSize: 0x10x318(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceInputAcceptanceRadius : 1;                   // Mask: 0x2, PropSize: 0x10x318(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDebugPathFollowing : 1;                           // Mask: 0x4, PropSize: 0x10x318(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDeceleratingForTurn : 1;                        // Mask: 0x8, PropSize: 0x10x318(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2D1 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3EBE[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastMoveBlockedTime;                               // 0x320(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LastMoveBlockedLocation;                           // 0x328(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DecelerationDistance;                              // 0x340(0x4)(ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StartAngle;                                        // 0x344(0x4)(BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DecelerationRate;                                  // 0x348(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AccelerationRate;                                  // 0x34C(0x4)(BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AngleToSpeedConst;                                 // 0x350(0x4)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EC0[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalPathFollowingComponent* GetDefaultObj();

};

// 0x0 (0x4C8 - 0x4C8)
// Class ShooterGame.SaveGameActor
class ASaveGameActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class ASaveGameActor* GetDefaultObj();

};

// 0x10 (0x4D8 - 0x4C8)
// Class ShooterGame.PrimalPersistentWorldData
class APrimalPersistentWorldData : public ASaveGameActor
{
public:
	TArray<struct FPlayerDeathReason>            PlayerDeathReasons;                                // 0x4C8(0x10)(ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalPersistentWorldData* GetDefaultObj();

};

// 0x5A0 (0x5C8 - 0x28)
// Class ShooterGame.PrimalPlayerData
class UPrimalPlayerData : public UObject
{
public:
	struct FPrimalPlayerDataStruct               MyData;                                            // 0x28(0x4F8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalBuffPersistentData*>     MyPersistentBuffDatas;                             // 0x520(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3ECA[0x60];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FBossEngramsSoftReferenceMapping> BossEngramReferenceMap;                            // 0x590(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          RedeemedWorldItemSets;                             // 0x5A0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          RedeemedWorldEquipSets;                            // 0x5B0(0x10)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowArkSeasonPassItems;                          // 0x5C0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3ECB[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalPlayerData* GetDefaultObj();

	int32 SetPlayerHexagonCount(bool* ReturnValue);
	int32 SetChibiLevels(class AShooterPlayerController* ForPC);
	void SavePlayerData(class UWorld* ForWorld);
	void LinkedPlayerIDString(class FString* ReturnValue);
	void HasUnlockedAllExplorerNotes(bool* ReturnValue);
	class FName HasGeneralizedAchievementTag(bool* ReturnValue);
	class FName GrantGeneralizedAchievementTag(class AShooterPlayerController* ForPC);
	void GetUniqueNetIdAsString(class FString* ReturnValue);
	void GetUniqueIdString(class FString* ReturnValue);
	bool GetPlayerState(int32* LocalPlayerIndex, class AShooterPlayerState** ReturnValue);
	void GetPlayerHexagonCount(int32* ReturnValue);
	class UWorld* FindCharacterForPlayer(class AShooterCharacter** ReturnValue);
	class FName BPForceDefeatedBoss(int32 DifficultyIndex, class AShooterPlayerController** PlayerController);
	void BPCreatedNewPlayerData();
	class AShooterCharacter* BPApplyToPlayerCharacter(class AShooterPlayerState** ForPlayerState);
	void BPAppliedToPlayerState(class AShooterPlayerState** ForPlayerState);
};

// 0x0 (0x10E8 - 0x10E8)
// Class ShooterGame.PrimalPlayerStatusComponent
class UPrimalPlayerStatusComponent : public UPrimalCharacterStatusComponent
{
public:

	static class UClass* StaticClass();
	static class UPrimalPlayerStatusComponent* GetDefaultObj();

};

// 0x0 (0x4C8 - 0x4C8)
// Class ShooterGame.PrimalPreviewSceneSetup
class APrimalPreviewSceneSetup : public AActor
{
public:

	static class UClass* StaticClass();
	static class APrimalPreviewSceneSetup* GetDefaultObj();

	TArray<class USceneComponent*> NotifySetupPreviewScene(class AShooterPlayerController* ForPC);
	float NotifyPreviewSceneUpdated();
};

// 0x2D0 (0x798 - 0x4C8)
// Class ShooterGame.ShooterProjectile
class AShooterProjectile : public AActor
{
public:
	class UShooterProjectileMovement*            MovementComp;                                      // 0x4C8(0x8)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance)
	bool                                         bFragmentate;                                      // 0x4D0(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EDA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FragmentOriginOffset;                              // 0x4D4(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FragmentConeHalfAngle;                             // 0x4D8(0x4)(Edit, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NumberOfFragmentProjectiles;                       // 0x4DC(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                FragmentProjectileTemplate;                        // 0x4E0(0x8)(BlueprintVisible, Net, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseOwnerProjectileLife;                           // 0x4E8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EDB[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class USphereComponent*                      CollisionComp;                                     // 0x4F0(0x8)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              ParticleComp;                                      // 0x4F8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  StaticMeshComp;                                    // 0x500(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ExplosionEmitter;                                  // 0x508(0x8)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	class UClass*                                ImpactEmitter;                                     // 0x510(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EDC[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bExploded : 1;                                     // Mask: 0x1, PropSize: 0x10x520(0x1)(Edit, ExportObject, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSpawnExplosionTemplateOnClient : 1;               // Mask: 0x2, PropSize: 0x10x520(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bExplodeOnClient : 1;                              // Mask: 0x4, PropSize: 0x10x520(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bExplodeOnImpact : 1;                              // Mask: 0x8, PropSize: 0x10x520(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bExplodeOnLifeTimeEnd : 1;                         // Mask: 0x10, PropSize: 0x10x520(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDestroyOnExplode : 1;                             // Mask: 0x20, PropSize: 0x10x520(0x1)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceUseTickFunction : 1;                         // Mask: 0x40, PropSize: 0x10x520(0x1)(BlueprintVisible, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceIgnoreFriendlyFire : 1;                      // Mask: 0x80, PropSize: 0x10x520(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAttachOnImpact : 1;                               // Mask: 0x1, PropSize: 0x10x521(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSpawnImpactEffectOnHit : 1;                       // Mask: 0x2, PropSize: 0x10x521(0x1)(Edit, Net, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bReplicateImpact : 1;                              // Mask: 0x4, PropSize: 0x10x521(0x1)(ExportObject, BlueprintReadOnly, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bImpactSetRotationToNormal : 1;                    // Mask: 0x8, PropSize: 0x10x521(0x1)(ConstParm, ExportObject, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bNoImpactEmitterOnCharacterHit : 1;                // Mask: 0x10, PropSize: 0x10x521(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bRotateMeshWhileMoving : 1;                        // Mask: 0x20, PropSize: 0x10x521(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bCheckForNonBlockingHitImpactFX : 1;               // Mask: 0x40, PropSize: 0x10x521(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bClientTickWhenInAirAndCheckForNonBlockingHitImpactFX : 1; // Mask: 0x80, PropSize: 0x10x521(0x1)(Edit, EditFixedSize, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bTickedNonBlockingHitImpactFX : 1;                 // Mask: 0x1, PropSize: 0x10x522(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseTraceForBlocking : 1;                          // Mask: 0x2, PropSize: 0x10x522(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHadAttachParent : 1;                              // Mask: 0x4, PropSize: 0x10x522(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2D2 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bStopOnExplode : 1;                                // Mask: 0x10, PropSize: 0x10x522(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseTraceForBlockingStopOnExplode : 1;             // Mask: 0x20, PropSize: 0x10x522(0x1)(Edit, ConstParm, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseMultiTraceForBlocking : 1;                     // Mask: 0x40, PropSize: 0x10x522(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2D3 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bExplodeEffectOnDestroy : 1;                       // Mask: 0x1, PropSize: 0x10x523(0x1)(ExportObject, Net, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bImpactRequiresDinoLineOfSight : 1;                // Mask: 0x2, PropSize: 0x10x523(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bImpactPvEOnlyAlly : 1;                            // Mask: 0x4, PropSize: 0x10x523(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPProjectileBounced : 1;                       // Mask: 0x8, PropSize: 0x10x523(0x1)(Edit, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAttachOnProjectileBounced : 1;                    // Mask: 0x10, PropSize: 0x10x523(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPIgnoreProjectileImpact : 1;                  // Mask: 0x20, PropSize: 0x10x523(0x1)(BlueprintVisible, Net, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIgnoredByTurrets : 1;                             // Mask: 0x40, PropSize: 0x10x523(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bResetHasImpactedOnMultiTraceForBlocking : 1;      // Mask: 0x80, PropSize: 0x10x523(0x1)(Edit, BlueprintVisible, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bNonBlockingVolumeMustBeWater : 1;                 // Mask: 0x1, PropSize: 0x10x524(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2D4 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3EDD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ClientSideCollisionRadius;                         // 0x528(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TraceForBlockingRadius;                            // 0x52C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CustomColorDesaturation;                           // 0x530(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EDE[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              RotateMeshFactor;                                  // 0x548(0x18)(Edit, BlueprintVisible, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ImpactTemplate;                                    // 0x560(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TornOffLifeSpan;                                   // 0x568(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PostExplosionKeepAliveLifeSpan;                    // 0x56C(0x4)(BlueprintVisible, Net, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       ExplosionNetworkTime;                              // 0x570(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        NudgedImpactDistance;                              // 0x578(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIgnoreDirectImpactRadialDamage;                   // 0x57C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bForceNetUpdate;                                   // 0x57D(0x1)(ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EDF[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ForceNetUpdateTimeInterval;                        // 0x580(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AShooterWeapon_Projectile> Weapon;                                            // 0x584(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        ParticleColorIntensity;                            // 0x58C(0x4)(Edit, ConstParm, Net, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ClientFailsafeLifespan;                            // 0x590(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseWeaponColorization : 1;                        // Mask: 0x1, PropSize: 0x10x594(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseCustomColor : 1;                               // Mask: 0x2, PropSize: 0x10x594(0x1)(ConstParm, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDoFullRadialDamage : 1;                           // Mask: 0x4, PropSize: 0x10x594(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bExplodeOnNonBlockingImpact : 1;                   // Mask: 0x8, PropSize: 0x10x594(0x1)(ExportObject, Net, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bRadialDamageIgnoreDamageCauser : 1;               // Mask: 0x10, PropSize: 0x10x594(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMultiTraceCollideAgainstPawns : 1;                // Mask: 0x20, PropSize: 0x10x594(0x1)(Edit, ConstParm, BlueprintVisible, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2D5 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3EE1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FProjectileWeaponData                 WeaponConfig;                                      // 0x598(0x28)(GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bTraceForBlockingDoImpactBackTrace : 1;            // Mask: 0x1, PropSize: 0x10x5C0(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bExplosionOrientUpwards : 1;                       // Mask: 0x2, PropSize: 0x10x5C0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bColorizeStructureOnImpact : 1;                    // Mask: 0x4, PropSize: 0x10x5C0(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClearStructureColorsOnImpact : 1;                 // Mask: 0x8, PropSize: 0x10x5C0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNonBlockingImpactNoExplosionEmitter : 1;          // Mask: 0x10, PropSize: 0x10x5C0(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyOnExplodeNonBlockingImpact : 1;            // Mask: 0x20, PropSize: 0x10x5C0(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontFragmentOnDamage : 1;                         // Mask: 0x40, PropSize: 0x10x5C0(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventReflecting : 1;                            // Mask: 0x80, PropSize: 0x10x5C0(0x1)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPIgnoreRadialDamageVictim : 1;                // Mask: 0x1, PropSize: 0x10x5C1(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoFinalTraceCheckToDirectDamageVictim : 1;        // Mask: 0x2, PropSize: 0x10x5C1(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoFinalTraceCheckFromInstigatorToDirectDamageVictim : 1; // Mask: 0x4, PropSize: 0x10x5C1(0x1)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2D6 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3EE3[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          CustomColor;                                       // 0x5C4(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AActor>                 DamageCauser;                                      // 0x5D4(0x8)(Edit, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bHasImpacted;                                      // 0x5DC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EE4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            ReplicatedHitInfo;                                 // 0x5E0(0xF0)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             ProjectileBounceSound;                             // 0x6D0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EE5[0x38];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ImpactedActors;                                    // 0x710(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LastVelocity;                                      // 0x720(0x18)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EE6[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        IgnoreNonBlockingHitClasses;                       // 0x740(0x10)(Edit, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceIgnoreBlockingHitClasses;                    // 0x750(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseProjectileTraceChannel : 1;                    // Mask: 0x1, PropSize: 0x10x751(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsGlowStick : 1;                                  // Mask: 0x2, PropSize: 0x10x751(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsGlowStickSelf : 1;                              // Mask: 0x4, PropSize: 0x10x751(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseClientHitDetermination : 1;                    // Mask: 0x8, PropSize: 0x10x751(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2D7 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3EE7[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FluidSimSplashStrength;                            // 0x758(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EE8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x760(0x8)(Edit, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LastFoliageTraceCheckLocation;                     // 0x768(0x18)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastFoliageTraceCheckTime;                         // 0x780(0x8)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        HasPerformedAnEnvirnonmentalImpact : 1;            // Mask: 0x1, PropSize: 0x10x788(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2D8 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3EEB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DistanceCutoffForMidairProjectileFoliageTracing;   // 0x78C(0x4)(Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeBetweenMidairProjectileFoliageTraces;          // 0x790(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EEC[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterProjectile* GetDefaultObj();

	void UpdateTargetPhysics();
	void StopProjectileMovement();
	struct FHitResult SpawnImpactEffect();
	class AActor* ShouldNotifyServerOfClientImpact(bool* ReturnValue);
	void RestartProjectileMovement();
	void Reset();
	struct FVector ProjectileBounced();
	struct FHitResult PreventExplosionEmitter(bool* ReturnValue);
	class AActor* OnTouch(class AActor** Actor);
	void OnProjectileStop(const struct FHitResult& HitResult);
	bool OnImpact(const struct FHitResult& HitResult);
	void OnExplode(struct FHitResult* Result);
	void NetUpdateTimer();
	TArray<class AActor*> NetResetTransformAndVelocity(struct FVector* NewLocation);
	struct FRotator NetAttachRootComponentTo(class FName* InSocketName, const struct FVector& RelativeLocation);
	void GetSocketForFinalTraceCheckFromInstigatorToDirectDamageVictim(class FName* ReturnValue);
	void GetProjectileID(int32* ReturnValue);
	struct FVector ExplodeAtLocation(struct FVector* AtLocation);
	struct FHitResult Explode();
	bool DisableAndDestroy();
	void DeactivateProjectileEffects();
	void Colorize();
	struct FRotator ClientOnImpact(const struct FHitResult& HitResult);
	void ClientNetImpactFX(const struct FHitResult& HitResult);
	void ClientNetExplode(const struct FHitResult& HitResult);
	void ClientNetDestroy();
	void ClearHomingTarget();
	TArray<class AShooterProjectile*> BPSpawnedFragments();
	struct FVector BPProjectileBounced();
	struct FVector BPInitVelocity();
	float BPInitializedVelocity(const struct FVector& InVelocity);
	class AActor* BPIgnoreRadialDamageVictim(bool* ReturnValue);
	void BPDestroyLikeDamage();
	void BPDamageScalarApplied(float Scalar);
	bool BPApplyExplosionDamageAndVFX();
	struct FHitResult BP_IgnoreProjectileImpact(bool* ReturnValue);
	void ApplyDamageScalar(float Scalar);
	class AActor* AddMoveIgnoreActor();
};

// 0x28 (0x7C0 - 0x798)
// Class ShooterGame.PrimalProjectileArrow
class APrimalProjectileArrow : public AShooterProjectile
{
public:
	float                                        PickUpRadius;                                      // 0x798(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EF1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                PickupItemClass;                                   // 0x7A0(0x8)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        PickUpQuantity;                                    // 0x7A8(0x4)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PercentChanceToBreakOnImpact;                      // 0x7AC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                PickItemClassApplySkin;                            // 0x7B0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            ArrowPickedUpSound;                                // 0x7B8(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalProjectileArrow* GetDefaultObj();

	void PickUpCheck();
	void PickedUp(class AShooterCharacter* ByCharacter);
};

// 0xD0 (0x890 - 0x7C0)
// Class ShooterGame.PrimalProjectileBoomerang
class APrimalProjectileBoomerang : public APrimalProjectileArrow
{
public:
	uint8                                        Pad_3EF6[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxDistanceToTravel;                               // 0x7C8(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EF7[0xBC];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnFirstPointTravelDistanceMultiplier;          // 0x888(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ReturnSecondPointTravelDistanceMultiplier;         // 0x88C(0x4)(Edit, ConstParm, Net, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalProjectileBoomerang* GetDefaultObj();

};

// 0x0 (0x798 - 0x798)
// Class ShooterGame.PrimalProjectileDilo
class APrimalProjectileDilo : public AShooterProjectile
{
public:

	static class UClass* StaticClass();
	static class APrimalProjectileDilo* GetDefaultObj();

};

// 0x28 (0x7C0 - 0x798)
// Class ShooterGame.PrimalProjectileFlare
class APrimalProjectileFlare : public AShooterProjectile
{
public:
	class UParticleSystemComponent*              SecondParticleComp;                                // 0x798(0x8)(Net, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TimeToActivateSecondParticleComp;                  // 0x7A0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RandomFallingMovementInterval;                     // 0x7A4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RandomFallingMovementStrength;                     // 0x7A8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EF8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            SecondParticleSound;                               // 0x7B0(0x8)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LightColorIntensity;                               // 0x7B8(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EF9[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalProjectileFlare* GetDefaultObj();

};

// 0x58 (0x7F0 - 0x798)
// Class ShooterGame.PrimalProjectileGrapplingHook
class APrimalProjectileGrapplingHook : public AShooterProjectile
{
public:
	struct FVector                               GrapHookEndPointOffset;                            // 0x798(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaximumRopeDistance;                               // 0x7B0(0x4)(ConstParm, ExportObject, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PullingStrength;                                   // 0x7B4(0x4)(Edit, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ReleaseRopeSpeed;                                  // 0x7B8(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxPullMassOverride;                               // 0x7BC(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DetachGrapHookLifespan;                            // 0x7C0(0x4)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EFE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               GrapHookDefaultOffset;                             // 0x7C8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    GrapHookMaterial;                                  // 0x7E0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GrapHookCableWidthOverride;                        // 0x7E8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAllowPullSleeping;                                // 0x7EC(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAllowPullFleeing;                                 // 0x7ED(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EFF[0x2];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalProjectileGrapplingHook* GetDefaultObj();

};

// 0xF0 (0x8B0 - 0x7C0)
// Class ShooterGame.PrimalProjectileNetGun
class APrimalProjectileNetGun : public APrimalProjectileArrow
{
public:
	class USkeletalMeshComponent*                SkeletalMeshComp;                                  // 0x7C0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                BuffToApplyToLightCharacters;                      // 0x7C8(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                BuffToApplyToHeavyCharacters;                      // 0x7D0(0x8)(Edit, ExportObject, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxDinoMassToInmovilize;                           // 0x7D8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F04[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FManagedBoneSetup>             ManagedBones;                                      // 0x7E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OnInpactMaxTraceDistance;                          // 0x7F0(0x4)(ExportObject, Net, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DissolveTime;                                      // 0x7F4(0x4)(Edit, Net, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F05[0xB8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalProjectileNetGun* GetDefaultObj();

	class FName GetManagedBoneRotation(struct FRotator* ReturnValue);
	TArray<struct FRotator> GetManagedBoneLocationsAndRotations(TArray<struct FVector>* Locations);
	class FName GetManagedBoneLocation(struct FVector* ReturnValue);
	void CalculateBonePositions();
};

// 0x0 (0x798 - 0x798)
// Class ShooterGame.PrimalProjectileSpiderAcid
class APrimalProjectileSpiderAcid : public AShooterProjectile
{
public:

	static class UClass* StaticClass();
	static class APrimalProjectileSpiderAcid* GetDefaultObj();

};

// 0x50 (0x3410 - 0x33C0)
// Class ShooterGame.PrimalRaft
class APrimalRaft : public APrimalDinoCharacter
{
public:
	class UTexture2D*                            Icon;                                              // 0x33C0(0x8)(Edit, BlueprintReadOnly, OutParm, Transient, Config, EditConst)
	class UAudioComponent*                       MovingSoundComponent;                              // 0x33C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            MovingSoundCue;                                    // 0x33D0(0x8)(BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                RaftSpawnEffect;                                   // 0x33D8(0x8)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       NetworkCreationTime;                               // 0x33E0(0x8)(OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bRaftAllowCrafting : 1;                            // Mask: 0x1, PropSize: 0x10x33E8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideSwimmingVelocity : 1;                   // Mask: 0x2, PropSize: 0x10x33E8(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideSwimmingAcceleration : 1;               // Mask: 0x4, PropSize: 0x10x33E8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowOverrideUpdatesWhenNoRaftRider : 1;          // Mask: 0x8, PropSize: 0x10x33E8(0x1)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDisableGravityAdjustement : 1;                    // Mask: 0x10, PropSize: 0x10x33E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseTracedSurfaceAdjustment : 1;                   // Mask: 0x20, PropSize: 0x10x33E8(0x1)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bRaftAllowWalkingState : 1;                        // Mask: 0x40, PropSize: 0x10x33E8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowTargetingBasedCharacters : 1;                // Mask: 0x80, PropSize: 0x10x33E8(0x1)(ConstParm, ExportObject, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F0C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SurfaceAdjustmentZInterpSpeed;                     // 0x33EC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F0D[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalRaft* GetDefaultObj();

	void TempDisableForcedVelcoityDirection();
	float BPOverrideSwimmingVelocity(struct FVector* InitialVelocity, float* FluidFriction, float* NetBuoyancy, struct FVector* ReturnValue);
	void BPAllowMovementSound(bool* ReturnValue);
	float BP_OverrideSwimmingAcceleration();
};

// 0x0 (0x7F0 - 0x7F0)
// Class ShooterGame.PrimalRecastNavMesh
class APrimalRecastNavMesh : public ARecastNavMesh
{
public:

	static class UClass* StaticClass();
	static class APrimalRecastNavMesh* GetDefaultObj();

};

// 0x3D0 (0x5C0 - 0x1F0)
// Class ShooterGame.PrimalRichTextBlock
class UPrimalRichTextBlock : public UWidget
{
public:
	class FText                                  Text;                                              // 0x1F0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, EditConst)
	FDelegateProperty_                           TextDelegate;                                      // 0x208(0x10)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	enum class ETextJustify                      Justification;                                     // 0x218(0x1)(BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	bool                                         AutoWrapText;                                      // 0x219(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	uint8                                        Pad_3F13[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        WrapTextAt;                                        // 0x21C(0x4)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	bool                                         CenterVertically;                                  // 0x220(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F14[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FMargin                               Margin;                                            // 0x224(0x10)(Edit, ConstParm, Net, Parm, Config, DisableEditOnInstance)
	float                                        LineHeightPercentage;                              // 0x234(0x4)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	uint8                                        Pad_3F15[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTextBlockStyle                       WidgetStyle;                                       // 0x240(0x340)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	TArray<struct FPrimalTextStyle>              TextStyles;                                        // 0x580(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FPrimalImageStyle>             ImageStyles;                                       // 0x590(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F17[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalRichTextBlock* GetDefaultObj();

	bool SetText();
	void SetString(const class FString& InString);
	void GetText(class FText* ReturnValue);
};

// 0x8 (0xDA0 - 0xD98)
// Class ShooterGame.PrimalScrollBox
class UPrimalScrollBox : public UScrollBox
{
public:
	uint8                                        Pad_3F18[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalScrollBox* GetDefaultObj();

	void GetFirstWidgetWithinVisibleScrollboxFrame(class UWidget** ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.PrimalStaticData
class UPrimalStaticData : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPrimalStaticData* GetDefaultObj();

	class UClass* GetPrimalStaticData(class UPrimalStaticData** ReturnValue);
};

// 0x4E8 (0x510 - 0x28)
// Class ShooterGame.PrimalStaticData_MissionCompanionData
class UPrimalStaticData_MissionCompanionData : public UPrimalStaticData
{
public:
	uint8                                        Pad_3F1A[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPointOfInterestData_ForCompanion     MissionPointOfInterestData;                        // 0x30(0x4E0)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalStaticData_MissionCompanionData* GetDefaultObj();

};

// 0x210 (0x238 - 0x28)
// Class ShooterGame.PrimalStaticData_MissionCompanionReactionData
class UPrimalStaticData_MissionCompanionReactionData : public UPrimalStaticData
{
public:
	struct FCompanionReactionData                ReactionData_MissionStart;                         // 0x28(0xB0)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCompanionReactionData                ReactionData_MissionEnd_Success;                   // 0xD8(0xB0)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCompanionReactionData                ReactionData_MissionEnd_Failure;                   // 0x188(0xB0)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalStaticData_MissionCompanionReactionData* GetDefaultObj();

};

// 0xB8 (0x1148 - 0x1090)
// Class ShooterGame.PrimalStructureBearTrap
class APrimalStructureBearTrap : public APrimalStructure
{
public:
	class USkeletalMeshComponent*                TrapSK;                                            // 0x1090(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class USphereComponent*                      TriggerComponent;                                  // 0x1098(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             TrapTriggerSound;                                  // 0x10A0(0x8)(Edit, ConstParm, Net, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                TrapDamageType;                                    // 0x10A8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TrapMinPawnMass;                                   // 0x10B0(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TrapMaxPawnMass;                                   // 0x10B4(0x4)(Edit, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TrapDamageAmount;                                  // 0x10B8(0x4)(EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PeriodicalTrapDamageTime;                          // 0x10BC(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PeriodicalTrapDamageAmount;                        // 0x10C0(0x4)(Edit, BlueprintVisible, Net, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IgnoreTriggerAfterSpawnTime;                       // 0x10C4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FName>                          IgnoreDinosWithCustomTag;                          // 0x10C8(0x10)(Edit, ExportObject, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FName>                          ForceImmobilizeDinosWithCustomTag;                 // 0x10D8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        HealthDecreasePerSecPlayers;                       // 0x10E8(0x4)(ExportObject, Net, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        HealthDecreasePerSecWild;                          // 0x10EC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bImmuneToNormalDamage;                             // 0x10F0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F20[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalCharacter*                      ImmobilizedCharacter;                              // 0x10F8(0x8)(BlueprintVisible, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int8                                         CurrentTrapState;                                  // 0x1100(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int8                                         ClientPrevTrapState;                               // 0x1101(0x1)(BlueprintReadOnly, Net, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bClosedTrap;                                       // 0x1102(0x1)(Edit, ExportObject, Net, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F21[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        HealthDecreasePerSec;                              // 0x1104(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       DestroyTime;                                       // 0x1108(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DestroyAfterTime;                                  // 0x1110(0x4)(ConstParm, BlueprintVisible, ExportObject, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseOnlyOnNonAllied;                               // 0x1114(0x1)(Edit, ConstParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F22[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        DamagedOnlyBy;                                     // 0x1118(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       NetworkPlacementTime;                              // 0x1128(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       OnDestroyFX;                                       // 0x1130(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bBPUseNotifyImmobilizedCharacterIsDeadOrInConscious : 1; // Mask: 0x1, PropSize: 0x10x1138(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F23[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureBearTrap* GetDefaultObj();

	struct FHitResult TriggerTouched(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep);
	void PeriodicalTrapDamageTimer();
	void OnRep_CurrentTrapState();
	int8 NetGotoTrapState();
	float IsTrapPrepared(bool* ReturnValue);
	void HideAnimatedSK();
	void DecreaseDamageTimer();
	bool BPNotifyImmobilizedCharacterIsDeadOrInConscious(bool* IsDead);
	void BPDie();
};

// 0x118 (0x1608 - 0x14F0)
// Class ShooterGame.PrimalStructureSeating
class APrimalStructureSeating : public APrimalStructureItemContainer
{
public:
	TWeakObjectPtr<class AShooterCharacter>      SeatedCharacter;                                   // 0x14F0(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F38[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AShooterPlayerController> SeatedController;                                  // 0x1500(0x8)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TWeakObjectPtr<class AShooterCharacter>> CharacterPerSeat;                                  // 0x1508(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F39[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        NumSeats;                                          // 0x1528(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F3B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SeatedCharacterLocationOffset;                     // 0x1530(0x18)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              SeatedCharacterRotationOffset;                     // 0x1548(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FSeatingSpot>                  OtherSeatingSpots;                                 // 0x1560(0x10)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAdjustForLegLength : 1;                           // Mask: 0x1, PropSize: 0x10x1570(0x1)(Net, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bRestrictTPVCameraYaw : 1;                         // Mask: 0x2, PropSize: 0x10x1570(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsesPrimaryFire : 1;                              // Mask: 0x4, PropSize: 0x10x1570(0x1)(Edit, ConstParm, ExportObject, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsesAltFire : 1;                                  // Mask: 0x8, PropSize: 0x10x1570(0x1)(BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsesItemSlotKeys : 1;                             // Mask: 0x10, PropSize: 0x10x1570(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreventSeatingWhenHandcuffed : 1;                 // Mask: 0x20, PropSize: 0x10x1570(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowSleepingPlayers : 1;                         // Mask: 0x40, PropSize: 0x10x1570(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bReleaseFindsGroundPlacement : 1;                  // Mask: 0x80, PropSize: 0x10x1570(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowCrouchProneToSit : 1;                        // Mask: 0x1, PropSize: 0x10x1571(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsesTargeting : 1;                                // Mask: 0x2, PropSize: 0x10x1571(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHideLegacyStructureAmmoHUD : 1;                   // Mask: 0x4, PropSize: 0x10x1571(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bTraceToUnboardLocation : 1;                       // Mask: 0x8, PropSize: 0x10x1571(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2D9 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F3F[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TPVCameraYawRange;                                 // 0x1574(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               TPVCameraOffset;                                   // 0x1578(0x18)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               TPVCameraOffsetMultiplier;                         // 0x1590(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UnboardDistance;                                   // 0x15A8(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F40[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                SeatingActionText;                                 // 0x15B0(0x10)(ConstParm, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            SeatingActionIcon;                                 // 0x15C0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             RideSound;                                         // 0x15C8(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             UnrideSound;                                       // 0x15D0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimSequence*                         SeatingAnimOverride;                               // 0x15D8(0x8)(Net, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowAnyTeamToSit : 1;                            // Mask: 0x1, PropSize: 0x10x15E0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowOrbitCam : 1;                                // Mask: 0x2, PropSize: 0x10x15E0(0x1)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, InstancedReference, SubobjectReference)
	uint8                                        bPreventHandcuffLockedSeating : 1;                 // Mask: 0x4, PropSize: 0x10x15E0(0x1)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bJumpOnDetach : 1;                                 // Mask: 0x8, PropSize: 0x10x15E0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2DA : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F41[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        SeatingActionPriority;                             // 0x15E4(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       LastServerUpdateSent;                              // 0x15E8(0x8)(Edit, ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F42[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureSeating* GetDefaultObj();

	class AShooterCharacter* Release();
	void OnRep_SeatedCharacter();
	void OnRep_CharacterPerSeat();
	void GetNearestFreeSpot(class AShooterPlayerController* ForPC, struct FVector* CharacterLocation, int32* ReturnValue);
	int32 Control(bool* bLockedToSeat);
	void ClearSeats();
	void CanSeat(class AShooterPlayerController* ForPC, class AShooterCharacter* ForCharacter, bool bForce, bool* ReturnValue);
	void BPSeatedPlayer(class AShooterCharacter** SeatedChar, int32* AtSeatNumber);
	class AShooterCharacter* BPReleasedPlayer(int32* AtSeatNumber);
	void BPPreventReleaseSeatingStructure(class AShooterCharacter** ForSitter, bool* ReturnValue);
	void BPOnStopTargeting();
	void BPOnStartTargeting();
	void BPHandleSitterPoop(class AShooterCharacter** ForSitter, bool* ReturnValue);
	void BPGetBestSeatNumber(class AShooterPlayerController* ForPC, int32 InBestSeatNumber, int32* ReturnValue);
	void BPAllowSeating(class AShooterPlayerController* ForPC, bool* ReturnValue);
};

// 0x88 (0x1690 - 0x1608)
// Class ShooterGame.PrimalStructureBed
class APrimalStructureBed : public APrimalStructureSeating
{
public:
	uint8                                        bDestroyAfterRespawnUse : 1;                       // Mask: 0x1, PropSize: 0x10x1608(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2DB : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F47[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               PlayerSpawnLocOffset;                              // 0x1610(0x18)(EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              PlayerSpawnRotOffset;                              // 0x1628(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       LinkedPlayerID;                                    // 0x1640(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F48[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                LinkedPlayerName;                                  // 0x1648(0x10)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                BedName;                                           // 0x1658(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	float                                        UseCooldownTime;                                   // 0x1668(0x4)(Edit, ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        UseCooldownRadius;                                 // 0x166C(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AttachedToPlatformStructureEnemySpawnPreventionRadius; // 0x1670(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F49[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            FastTravelIcon;                                    // 0x1678(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       NextAllowedUseTime;                                // 0x1680(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F4A[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureBed* GetDefaultObj();

	class AShooterPlayerController* SpawnedPlayerFor(class APawn** ForPawn);
};

// 0xD0 (0x1160 - 0x1090)
// Class ShooterGame.PrimalStructureDoor
class APrimalStructureDoor : public APrimalStructure
{
public:
	class USceneComponent*                       MyDoorTransform;                                   // 0x1090(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  SecondDoorCosmeticVariantStaticMesh;               // 0x1098(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RotationSpeed;                                     // 0x10A0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F52[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundCue*                             DoorOpenSound;                                     // 0x10A8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             DoorCloseSound;                                    // 0x10B0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       CurrentPinCode;                                    // 0x10B8(0x4)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInvertOpenCloseDirection : 1;                     // Mask: 0x1, PropSize: 0x10x10BC(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSupportsLocking : 1;                              // Mask: 0x2, PropSize: 0x10x10BC(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSecondDoor : 1;                                // Mask: 0x4, PropSize: 0x10x10BC(0x1)(Edit, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSupportsPinLocking : 1;                           // Mask: 0x8, PropSize: 0x10x10BC(0x1)(BlueprintVisible, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsLocked : 1;                                     // Mask: 0x10, PropSize: 0x10x10BC(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsPinLocked : 1;                                  // Mask: 0x20, PropSize: 0x10x10BC(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAdminOnlyAccess : 1;                              // Mask: 0x40, PropSize: 0x10x10BC(0x1)(ExportObject, Net, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bCanBeForcedOpenByDino : 1;                        // Mask: 0x80, PropSize: 0x10x10BC(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreventBasingWhileMoving : 1;                     // Mask: 0x1, PropSize: 0x10x10BD(0x1)(ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceDoorOpenIn : 1;                              // Mask: 0x2, PropSize: 0x10x10BD(0x1)(Edit, BlueprintVisible, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceDoorOpenOut : 1;                             // Mask: 0x4, PropSize: 0x10x10BD(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsDoorMoving : 1;                                 // Mask: 0x8, PropSize: 0x10x10BD(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceStaticMobility : 1;                          // Mask: 0x10, PropSize: 0x10x10BD(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bRotatePitch : 1;                                  // Mask: 0x20, PropSize: 0x10x10BD(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bRotateRoll : 1;                                   // Mask: 0x40, PropSize: 0x10x10BD(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bRotateYaw : 1;                                    // Mask: 0x80, PropSize: 0x10x10BD(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bInitializedRotation : 1;                          // Mask: 0x1, PropSize: 0x10x10BE(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreventDoorInterpolation : 1;                     // Mask: 0x2, PropSize: 0x10x10BE(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGotoDoorState : 1;                           // Mask: 0x4, PropSize: 0x10x10BE(0x1)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideChangeDoorState : 1;                 // Mask: 0x8, PropSize: 0x10x10BE(0x1)(Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2DC : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F55[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bForceNoPinLocking : 1;                            // Mask: 0x1, PropSize: 0x10x10C0(0x1)(Edit, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDoesntAffectDinoNavigationWhileOpen : 1;          // Mask: 0x2, PropSize: 0x10x10C0(0x1)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDoesntUseOpenMode : 1;                            // Mask: 0x4, PropSize: 0x10x10C0(0x1)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2DD : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F56[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CurrentOpenMode;                                   // 0x10C4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxOpenRotDeg;                                     // 0x10C8(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DoorStateChangeIgnoreEncroachmentInterval;         // 0x10CC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int8                                         DoorOpenState;                                     // 0x10D0(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F58[0x17];                                    // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              SecondDoorDefaultRot;                              // 0x10E8(0x18)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CurrentDoorAngle;                                  // 0x1100(0x4)(EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F59[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            UnlockDoorSound;                                   // 0x1108(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            LockDoorSound;                                     // 0x1110(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            LockedSound;                                       // 0x1118(0x8)(ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       LastPinOpenSuccessTime;                            // 0x1120(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F5A[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            OpenIcon;                                          // 0x1130(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            CloseIcon;                                         // 0x1138(0x8)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            OpenModeInAndOutIcon;                              // 0x1140(0x8)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            OpenModeAlwaysInIcon;                              // 0x1148(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            OpenModeAlwaysOutIcon;                             // 0x1150(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F5B[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureDoor* GetDefaultObj();

	void OnRep_DoorOpenState(int8 PrevDoorOpenState);
	void NetGotoDoorState(int8 DoorState);
	class APrimalStructureItemContainer* HasSamePinCode(bool* ReturnValue);
	void GetDoorState(int32* ReturnValue);
	void DelayedGotoDoorStateTimer();
	void CanOpen(class APlayerController* ForPC, bool* ReturnValue);
	void BPSetDoorState(int32 DoorState);
	class APlayerController* BPOverrideChangeDoorState();
	void BPGotoDoorState(int32 NewDoorState);
};

// 0xD0 (0x1160 - 0x1090)
// Class ShooterGame.PrimalStructureElevatorPlatform
class APrimalStructureElevatorPlatform : public APrimalStructure
{
public:
	float                                        MaxCarryWeight;                                    // 0x1090(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Speed;                                             // 0x1094(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        DownSpeed;                                         // 0x1098(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ClientLocationInterpSpeed;                         // 0x109C(0x4)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ClientLocationInterpSpeedDown;                     // 0x10A0(0x4)(ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        UpObstructionTraceLength;                          // 0x10A4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DownObstructionTraceLength;                        // 0x10A8(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TrackTraceLength;                                  // 0x10AC(0x4)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            StartMovingSound;                                  // 0x10B0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            StopMovingSound;                                   // 0x10B8(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DistanceToTravel;                                  // 0x10C0(0x4)(Edit, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F60[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               StartLocation;                                     // 0x10C8(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        bIsActivated : 1;                                  // Mask: 0x1, PropSize: 0x10x10E0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2DE : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUpdateLocation : 1;                               // Mask: 0x4, PropSize: 0x10x10E0(0x1)(Net, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2DF : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F61[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TWeakObjectPtr<class APrimalCharacter>> CarriedActors;                                     // 0x10E8(0x10)(ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EPrimalStructureElevatorState     CurrentState;                                      // 0x10F8(0x1)(Edit, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F62[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TraveledDistance;                                  // 0x10FC(0x4)(ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CurrentLiftedWeight;                               // 0x1100(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseBPElevatorStopped;                             // 0x1104(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F63[0x1B];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        MinHeight;                                         // 0x1120(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxHeight;                                         // 0x1124(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        Height;                                            // 0x1128(0x4)(BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Config, EditConst)
	float                                        ReplicatedZ;                                       // 0x112C(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAddElevatorMultiUseEntries : 1;                   // Mask: 0x1, PropSize: 0x10x1130(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsLocked : 1;                                     // Mask: 0x2, PropSize: 0x10x1130(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsPinLocked : 1;                                  // Mask: 0x4, PropSize: 0x10x1130(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAdminOnlyAccess : 1;                              // Mask: 0x8, PropSize: 0x10x1130(0x1)(ExportObject, Net, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2E0 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F64[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       CurrentPinCode;                                    // 0x1134(0x4)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F65[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            ElevateIcon;                                       // 0x1140(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            DelevateIcon;                                      // 0x1148(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            StopIcon;                                          // 0x1150(0x8)(ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            CallToMeIcon;                                      // 0x1158(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureElevatorPlatform* GetDefaultObj();

	float ServerActivate(class APlayerController* ForPC);
	enum class EPrimalStructureElevatorState PlatformIsActive(bool* ReturnValue);
	void OnRep_bIsActivated();
	class APrimalStructureItemContainer* HasSamePinCode(bool* ReturnValue);
	void HasReachedMaxWeight(bool* ReturnValue);
	void GetTrackHeight(float* ReturnValue);
	void GetCurrentLiftedWeight(float* ReturnValue);
	TArray<class AActor*> GetAllTrackStructures();
	float Deactivate();
	enum class EPrimalStructureElevatorState BPElevatorStopped();
	float Activate(class APlayerController* ForPC);
};

// 0x18 (0x1508 - 0x14F0)
// Class ShooterGame.PrimalStructureElevatorTrack
class APrimalStructureElevatorTrack : public APrimalStructureItemContainer
{
public:
	bool                                         bHasBase;                                          // 0x14F0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F66[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class APrimalStructureElevatorPlatform> ElevatorBase;                                      // 0x14F4(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAddElevatorMultiUseEntries : 1;                   // Mask: 0x1, PropSize: 0x10x14FC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bRequiresPower : 1;                                // Mask: 0x2, PropSize: 0x10x14FC(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2E1 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F67[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TrackTopPoint;                                     // 0x1500(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TrackBottomPoint;                                  // 0x1504(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureElevatorTrack* GetDefaultObj();

	void SetElevatorBase(class APrimalStructureElevatorPlatform** NewBase);
	void MulticastSetElevatorBase(class APrimalStructureElevatorPlatform** NewBase);
	void HasPlatformAttachedToTheTrack(bool* ReturnValue);
	void ClientHasPlatform();
	void BPGetElevatorPlatform(class APrimalStructureElevatorPlatform** ReturnValue);
};

// 0xE0 (0x1170 - 0x1090)
// Class ShooterGame.PrimalStructureExplosive
class APrimalStructureExplosive : public APrimalStructure
{
public:
	uint32                                       ConstructorPlayerDataID;                           // 0x1090(0x4)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F68[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterCharacter*                     ConstructorPawn;                                   // 0x1098(0x8)(ConstParm, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ConstructorTargetingTeam;                          // 0x10A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2E2 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAnimatePlacement : 1;                             // Mask: 0x2, PropSize: 0x10x10A4(0x1)(Edit, ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2E3 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F69[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ExplosiveLocOffset;                                // 0x10A8(0x18)(Edit, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              ExplosiveRotOffset;                                // 0x10C0(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlacementInitialSpeed;                             // 0x10D8(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlacementMaxSpeed;                                 // 0x10DC(0x4)(Edit, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlacementAccel;                                    // 0x10E0(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ExplosionDamage;                                   // 0x10E4(0x4)(BlueprintReadOnly, Net, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        ExplosionRadius;                                   // 0x10E8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        ExplosionImpulse;                                  // 0x10EC(0x4)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, Config, InstancedReference, SubobjectReference)
	class UClass*                                ExplosionDamageType;                               // 0x10F0(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ExplosiveAmmoItemTemplate;                         // 0x10F8(0x8)(EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAlertDinos : 1;                                   // Mask: 0x1, PropSize: 0x10x1100(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2E4 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F6A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AlertDinosRange;                                   // 0x1104(0x4)(BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                PickupItemClass;                                   // 0x1108(0x8)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        PickUpQuantity;                                    // 0x1110(0x4)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F6B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UStaticMeshComponent*                  AnimatedComponent;                                 // 0x1118(0x8)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FluidSimSplashStrength;                            // 0x1120(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F6C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x1128(0x8)(Edit, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F6D[0x40];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureExplosive* GetDefaultObj();

	void NetIgnoreDestructionEvents();
	void ApplyPlacementPreview();
};

// 0x120 (0x1610 - 0x14F0)
// Class ShooterGame.PrimalStructureItemContainer_CropPlot
class APrimalStructureItemContainer_CropPlot : public APrimalStructureItemContainer
{
public:
	class UClass*                                SeedBaseItemTemplate;                              // 0x14F0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                FertilizerBaseItemTemplate;                        // 0x14F8(0x8)(BlueprintVisible, Net, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                WaterNearbyStructureTemplate;                      // 0x1500(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CropRefreshIntervalMin;                            // 0x1508(0x4)(Edit, ExportObject, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CropRefreshIntervalMax;                            // 0x150C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WaterNearbyStructureRange;                         // 0x1510(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxWaterAmount;                                    // 0x1514(0x4)(Edit, ConstParm, BlueprintVisible, Net, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ActiveRainWaterIncreaseSpeed;                      // 0x1518(0x4)(ExportObject, BlueprintReadOnly, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AverageRainWaterIncreaseMultiplier;                // 0x151C(0x4)(ConstParm, BlueprintVisible, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WaterItemAmountMultiplier;                         // 0x1520(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F6F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ExtraCropMeshScale;                                // 0x1528(0x18)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CropRefreshInterval;                               // 0x1540(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CropPhaseFertilizerCache;                          // 0x1544(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CropFruitFertilizerCache;                          // 0x1548(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsesCrop : 1;                                     // Mask: 0x1, PropSize: 0x10x154C(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsWaterTank : 1;                                  // Mask: 0x2, PropSize: 0x10x154C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bGainWaterOverTime : 1;                            // Mask: 0x4, PropSize: 0x10x154C(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAutoFill : 1;                                     // Mask: 0x8, PropSize: 0x10x154C(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDontAddWaterOnInventoryItemUsed : 1;              // Mask: 0x10, PropSize: 0x10x154C(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowOpenToSky : 1;                               // Mask: 0x20, PropSize: 0x10x154C(0x1)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetAdditionalGrowthMultiplier : 1;           // Mask: 0x40, PropSize: 0x10x154C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsFertilized : 1;                                 // Mask: 0x80, PropSize: 0x10x154C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsWatered : 1;                                    // Mask: 0x1, PropSize: 0x10x154D(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsSeeded : 1;                                     // Mask: 0x2, PropSize: 0x10x154D(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHasFruitItems : 1;                                // Mask: 0x4, PropSize: 0x10x154D(0x1)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bCropUsesGreenhouse : 1;                           // Mask: 0x8, PropSize: 0x10x154D(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bShowWaterAmount : 1;                              // Mask: 0x10, PropSize: 0x10x154D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2E5 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class ESeedCropPhase                    CurrentCropPhase;                                  // 0x154E(0x1)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F70[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                PlantedCrop;                                       // 0x1550(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalStructureItemContainer> IrrigationWaterTap;                                // 0x1558(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       LastCropRefreshTime;                               // 0x1560(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F71[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UStaticMeshComponent*>          MyCropMeshes;                                      // 0x1578(0x10)(Edit, ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class APrimalStructure*                      MyCropStructure;                                   // 0x1588(0x8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       CropRefreshTimeCache;                              // 0x1590(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        FertilizerAmount;                                  // 0x1598(0x4)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WaterAmount;                                       // 0x159C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        NumGreenHouseStructures;                           // 0x15A0(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F72[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        WateringItemTemplates;                             // 0x15A8(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FertilizerConsumptionRateMultiplier;               // 0x15B8(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F73[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                WateredOverridesCraftingItemTemplate;              // 0x15C8(0x8)(EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinWateredOverridesCrafting;                       // 0x15D0(0x4)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxGreenHouseStructures;                           // 0x15D4(0x4)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxGreenHouseCropGrowthMultiplier;                 // 0x15D8(0x4)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GainWaterRate;                                     // 0x15DC(0x4)(ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F74[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CropMaxFruitsMultiplier;                           // 0x15E8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F75[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            FertilizerOnIcon;                                  // 0x15F8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            FertilizerOffIcon;                                 // 0x1600(0x8)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            DestroyPlantedCropIcon;                            // 0x1608(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureItemContainer_CropPlot* GetDefaultObj();

	void RemovePlantedCrop();
	void OnRep_WaterAmount();
	class UClass* OnRep_PlantedCrop();
	bool OnRep_HasFruitItems();
	enum class ESeedCropPhase OnRep_CurrentCropPhase();
	void BPGetAdditionalGrowthMultiplier(float* ReturnValue);
	void BPClientUpdateWaterAmount();
	bool AddWater(float* ReturnValue);
};

// 0x30 (0x1640 - 0x1610)
// Class ShooterGame.PrimalStructureItemContainer_CropPlot_VisualItems
class APrimalStructureItemContainer_CropPlot_VisualItems : public APrimalStructureItemContainer_CropPlot
{
public:
	class UStaticMeshComponent*                  MyExtraStaticMesh;                                 // 0x1610(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	class UStaticMesh*                           ExtraStaticMesh_NoItems;                           // 0x1618(0x8)(ConstParm, Net, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	class UStaticMesh*                           ExtraStaticMesh_HasItems;                          // 0x1620(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ItemClassesToCheck;                                // 0x1628(0x10)(Edit, ConstParm, ExportObject, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHasItems : 1;                                     // Mask: 0x1, PropSize: 0x10x1638(0x1)(Edit, BlueprintVisible, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDoItemVisuals : 1;                                // Mask: 0x2, PropSize: 0x10x1638(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F77[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureItemContainer_CropPlot_VisualItems* GetDefaultObj();

	void OnRep_HasItems();
	void BPUpdateItemVisuals();
};

// 0x220 (0x1710 - 0x14F0)
// Class ShooterGame.PrimalStructureItemContainer_SupplyCrate
class APrimalStructureItemContainer_SupplyCrate : public APrimalStructureItemContainer
{
public:
	float                                        MinItemSets;                                       // 0x14F0(0x4)(ConstParm, BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	float                                        MaxItemSets;                                       // 0x14F4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	float                                        NumItemSetsPower;                                  // 0x14F8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	bool                                         bSetsRandomWithoutReplacement;                     // 0x14FC(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F78[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinQualityMultiplier;                              // 0x1500(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        MaxQualityMultiplier;                              // 0x1504(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        AboveOneExtraQualityMultiplier;                    // 0x1508(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F79[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSupplyCrateItemSet>           ItemSets;                                          // 0x1510(0x10)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	class UClass*                                ItemSetsOverride;                                  // 0x1520(0x8)(BlueprintVisible, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSupplyCrateItemSet>           AdditionalItemSets;                                // 0x1528(0x10)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                AdditionalItemSetsOverride;                        // 0x1538(0x8)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        RequiredLevelToAccess;                             // 0x1540(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxLevelToAccess;                                  // 0x1544(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InitialTimeToLoseHealth;                           // 0x1548(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IntervalTimeToLoseHealth;                          // 0x154C(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IntervalPercentHealthToLose;                       // 0x1550(0x4)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F7A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               HUDWorldOffset;                                    // 0x1558(0x18)(ConstParm, Net, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bGeneratedCrateItems : 1;                          // Mask: 0x1, PropSize: 0x10x1570(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsBonusCrate : 1;                                 // Mask: 0x2, PropSize: 0x10x1570(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsQuestCrate : 1;                                 // Mask: 0x4, PropSize: 0x10x1570(0x1)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSpawnCrateOnTopOfStructures : 1;                  // Mask: 0x8, PropSize: 0x10x1570(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bAppliedBuff : 1;                                  // Mask: 0x10, PropSize: 0x10x1570(0x1)(Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2E6 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F7B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class ASupplyCrateSpawningVolume> LinkedToCrateSpawnVolume;                          // 0x1574(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F7C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TWeakObjectPtr<class APrimalDinoCharacter>> LinkedNPCs;                                        // 0x1580(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F7D[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SpawnInInDamageCollisionBoxExtent;                 // 0x15A8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIsUnderWaterCrate;                                // 0x15C0(0x1)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F7E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CrateMovementDuration;                             // 0x15C4(0x4)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class UCurveVector*                          CrateLocationCurve;                                // 0x15C8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class UCurveVector*                          CrateRotationCurve;                                // 0x15D0(0x8)(Edit, BlueprintReadOnly, Net, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ECrateMovementMode                CrateMovementMode;                                 // 0x15D8(0x1)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F7F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             ServerCrateMovementUpdateRateMinMax;               // 0x15E0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             ClientCrateMovementUpdateRateMinMax;               // 0x15F0(0x10)(Edit, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    InvisibleMaterial;                                 // 0x1600(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnableHideSupplyCratesCheck : 1;                  // Mask: 0x1, PropSize: 0x10x1608(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2E7 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F80[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          CrateColorParameter;                               // 0x160C(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F81[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UCurveFloat*                           CrateDissolveCurve;                                // 0x1620(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                CrateSpawnInLocationEffect;                        // 0x1628(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bInventoryAccessOnlyActivated : 1;                 // Mask: 0x1, PropSize: 0x10x1630(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2E8 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F82[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalEmitterSpawnable*               CrateSpawnInLocationEffectRef;                     // 0x1638(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UMeshComponent*                        RenderedCrateMeshComponent;                        // 0x1640(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               FinalCrateLocation;                                // 0x1648(0x18)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              FinalCrateRotation;                                // 0x1660(0x18)(Edit, ConstParm, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               CurrentCrateLocation;                              // 0x1678(0x18)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              CurrentCrateRotation;                              // 0x1690(0x18)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               CurrentCrateRelLocation;                           // 0x16A8(0x18)(Net, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       StartedCrateMovementTime;                          // 0x16C0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       NextCrateMovementUpdateTime;                       // 0x16C8(0x8)(BlueprintVisible, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CurrentCrateCurveTime;                             // 0x16D0(0x4)(ExportObject, BlueprintReadOnly, Net, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CrateStartHeight;                                  // 0x16D4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bFinishedCrateMovement : 1;                        // Mask: 0x1, PropSize: 0x10x16D8(0x1)(Edit, ConstParm, Net, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bWantsOriginalMats : 1;                            // Mask: 0x2, PropSize: 0x10x16D8(0x1)(Edit, ExportObject, BlueprintReadOnly, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsCrateRendered : 1;                              // Mask: 0x4, PropSize: 0x10x16D8(0x1)(BlueprintReadOnly, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSupplyCrateHidden : 1;                            // Mask: 0x8, PropSize: 0x10x16D8(0x1)(ConstParm, BlueprintVisible, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2E9 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F83[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UMaterialInterface*>            OriginalMaterials;                                 // 0x16E0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       NextCheckHideSupplyCratesTime;                     // 0x16F0(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	class UPrimalWindSourceComponent*            WindSourceComponentRef;                            // 0x16F8(0x8)(Net, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CurrentFadeOutTime;                                // 0x1700(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDestroyWindSourceComponentOnLand : 1;             // Mask: 0x1, PropSize: 0x10x1704(0x1)(BlueprintVisible, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2EA : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F84[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            SurvivorLevelUpIcon;                               // 0x1708(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureItemContainer_SupplyCrate* GetDefaultObj();

	void TickFadeOut();
	void StartLosingHealth();
	void SetAppliedBuff(bool* bSet);
	void OnRep_FinishedCrateMovement();
	void LoseHealth();
};

// 0x28 (0x1738 - 0x1710)
// Class ShooterGame.PrimalStructureItemContainer_HordeCrate
class APrimalStructureItemContainer_HordeCrate : public APrimalStructureItemContainer_SupplyCrate
{
public:
	class UMaterialInterface*                    ElementPostProcessMaterial;                        // 0x1710(0x8)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               CrateLoc;                                          // 0x1718(0x18)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       LastGameplayRelevantTime;                          // 0x1730(0x8)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureItemContainer_HordeCrate* GetDefaultObj();

	void SpawnElementNodePostProcess();
};

// 0x30 (0x1520 - 0x14F0)
// Class ShooterGame.PrimalStructureItemContainer_VisualItems
class APrimalStructureItemContainer_VisualItems : public APrimalStructureItemContainer
{
public:
	class UStaticMeshComponent*                  MyExtraStaticMesh;                                 // 0x14F0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	class UStaticMesh*                           ExtraStaticMesh_NoItems;                           // 0x14F8(0x8)(ConstParm, Net, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	class UStaticMesh*                           ExtraStaticMesh_HasItems;                          // 0x1500(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ItemClassesToCheck;                                // 0x1508(0x10)(Edit, ConstParm, ExportObject, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIgnoreBlueprints;                                 // 0x1518(0x1)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreEngrams;                                    // 0x1519(0x1)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHasItems : 1;                                     // Mask: 0x1, PropSize: 0x10x151A(0x1)(Edit, BlueprintVisible, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDoItemVisuals : 1;                                // Mask: 0x2, PropSize: 0x10x151A(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreviousHasItems : 1;                             // Mask: 0x4, PropSize: 0x10x151A(0x1)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F85[0x5];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureItemContainer_VisualItems* GetDefaultObj();

	void UpdateVisuals();
	void OnRep_HasItems();
	void BPUpdateItemVisuals();
};

// 0x10 (0x1500 - 0x14F0)
// Class ShooterGame.PrimalStructureKeypad
class APrimalStructureKeypad : public APrimalStructureItemContainer
{
public:
	float                                        DoorActivationRange;                               // 0x14F0(0x4)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F87[0xC];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureKeypad* GetDefaultObj();

	bool ActivateKeypad(class AShooterPlayerController* ForPC, int32* PinCode, bool* ReturnValue);
};

// 0x70 (0x1100 - 0x1090)
// Class ShooterGame.PrimalStructureLadder
class APrimalStructureLadder : public APrimalStructure
{
public:
	float                                        LadderTopPoint;                                    // 0x1090(0x4)(Edit, ConstParm, ExportObject, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LadderBottomPoint;                                 // 0x1094(0x4)(Edit, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              LadderClimbRotationOffset;                         // 0x1098(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2EB : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bCanRetract : 1;                                   // Mask: 0x8, PropSize: 0x10x10B0(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bCanRetractFromBottom : 1;                         // Mask: 0x10, PropSize: 0x10x10B0(0x1)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsRetracted : 1;                                  // Mask: 0x20, PropSize: 0x10x10B0(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHasLowerLaddersRetracted : 1;                     // Mask: 0x40, PropSize: 0x10x10B0(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowPublicRetraction : 1;                        // Mask: 0x80, PropSize: 0x10x10B0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F8B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            LadderRetractionSound;                             // 0x10B8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            LadderUnretractionSound;                           // 0x10C0(0x8)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            ClimbUpIcon;                                       // 0x10C8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            ClimbDownIcon;                                     // 0x10D0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            JumpIcon;                                          // 0x10D8(0x8)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            ExtendLadderIcon;                                  // 0x10E0(0x8)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            RetractLadderIcon;                                 // 0x10E8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnablePublicRetractionIcon;                        // 0x10F0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisablePublicRetractionIcon;                       // 0x10F8(0x8)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureLadder* GetDefaultObj();

	void UpdateRetraction();
	void EndClimbingLadder(class AShooterCharacter** TheCharacter, bool* bServerClimbOver, struct FVector* ServerClimbOverLoc, bool* bIsFromJump);
	void BP_SetLaddersRetracted(bool* bRetract);
};

// 0x40 (0x1530 - 0x14F0)
// Class ShooterGame.PrimalStructureMovingContainer
class APrimalStructureMovingContainer : public APrimalStructureItemContainer
{
public:
	struct FVector                               FinalLocation;                                     // 0x14F0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ItemBalloonLocation;                               // 0x1508(0x18)(ConstParm, BlueprintReadOnly, Net, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint16                                       ItemLatitude;                                      // 0x1520(0x2)(Edit, ConstParm, ExportObject, Net, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint16                                       ItemLongitude;                                     // 0x1522(0x2)(Edit, ConstParm, Net, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LocationName;                                      // 0x1524(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHasSetLocation;                                   // 0x1528(0x1)(Edit, ConstParm, BlueprintReadOnly, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F8E[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureMovingContainer* GetDefaultObj();

};

// 0x1C0 (0x688 - 0x4C8)
// Class ShooterGame.PrimalStructurePlacer
class APrimalStructurePlacer : public AInfo
{
public:
	uint8                                        Pad_3F91[0x60];                                    // Fixing Size After Last Property  > TateDumper <
	enum class EPrimalStructurePlacerState       CurrentState;                                      // 0x528(0x1)(Edit, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F92[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CurrentPlacingStructureIndex;                      // 0x52C(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class APrimalStructure*                      CurrentPlacingStructure;                           // 0x530(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class APrimalStructure*                      CurrentSnapTarget;                                 // 0x538(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDebugStructures : 1;                              // Mask: 0x1, PropSize: 0x10x540(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceDisplayMissionAreaStructureNoBuildZones : 1; // Mask: 0x2, PropSize: 0x10x540(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2EC : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIgnoreOptionalSnaps : 1;                          // Mask: 0x80, PropSize: 0x10x540(0x1)(Edit, ExportObject, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F93[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class APrimalStructure>> PlaceableStructures;                               // 0x548(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        PlacingAlignmentMode;                              // 0x558(0x4)(ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	int32                                        PlacingRotationMode;                               // 0x55C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RotationAxisName;                                  // 0x560(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RotationSpeed;                                     // 0x568(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AltRotationAxisName;                               // 0x56C(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AltRotationSpeed;                                  // 0x574(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCanvasIcon                           RotationIcon;                                      // 0x578(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RotationIconSize;                                  // 0x590(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RotationIconScale;                                 // 0x594(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PitchAxisName;                                     // 0x598(0x8)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PitchSpeed;                                        // 0x5A0(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AltPitchAxisName;                                  // 0x5A4(0x8)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AltPitchSpeed;                                     // 0x5AC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        YawOffset;                                         // 0x5B0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        YawOffsetIncrement;                                // 0x5B4(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UCurveFloat*                           PreviewMaterialLuminanceCurve;                     // 0x5B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                PressUseString;                                    // 0x5C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                HoldUseString;                                     // 0x5D0(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                KeyUseString;                                      // 0x5E0(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            GamepadButtonUse;                                  // 0x5F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                PressGiveDefaultWeaponString;                      // 0x5F8(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                HoldGiveDefaultWeaponString;                       // 0x608(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                KeyGiveDefaultWeaponString;                        // 0x618(0x10)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            GamepadButtonGiveDefaultWeapon;                    // 0x628(0x8)(Edit, Net, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                KeyReloadString;                                   // 0x630(0x10)(ExportObject, BlueprintReadOnly, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            GamepadReload;                                     // 0x640(0x8)(BlueprintReadOnly, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                NumVariantsString;                                 // 0x648(0x10)(ConstParm, BlueprintVisible, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F94[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class UPrimalItem>            CurrentlyPlacingWithItem;                          // 0x680(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructurePlacer* GetDefaultObj();

	bool SetForceDisplayMissionAreaStructureNoBuildZones();
	bool SetChoosingRotation();
	void IsPlacingActive(bool* ReturnValue);
	void HandleSnapCycleActionTimer();
	void HandleOnUseActionTimer();
	struct FRotator GetLastPlacementProperties();
	class APrimalStructure* DrawStructurePreviewHUD();
};

// 0xB0 (0x11B0 - 0x1100)
// Class ShooterGame.PrimalStructurePortableLadder
class APrimalStructurePortableLadder : public APrimalStructureLadder
{
public:
	float                                        MaximumHeightAllowedForLadder;                     // 0x1100(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F96[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                BottomAnimBlueprint;                               // 0x1118(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                MidAnimBlueprint;                                  // 0x1120(0x8)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          MidRetractedAnimMontageBlueprint;                  // 0x1128(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          BottomRetractedAnimMontageBlueprint;               // 0x1130(0x8)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          MidAnimMontageBlueprint;                           // 0x1138(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          BottomAnimMontageBlueprint;                        // 0x1140(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          MidAnimMontageExtendedBlueprint;                   // 0x1148(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          BottomAnimMontageExtendedBlueprint;                // 0x1150(0x8)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class USkeletalMesh*                         MidSkeletalMesh;                                   // 0x1158(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class USkeletalMesh*                         MyBottomSkeletalMesh;                              // 0x1160(0x8)(BlueprintReadOnly, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class USkeletalMeshComponent*>        MidLadderSkeletalMeshs;                            // 0x1168(0x10)(BlueprintVisible, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                BottomLadderSkeletalMesh;                          // 0x1178(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class USkeletalMeshComponent*>        SkeletalMeshsForAnimation;                         // 0x1180(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F97[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bisDonePlacing : 1;                                // Mask: 0x1, PropSize: 0x10x11A0(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F98[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructurePortableLadder* GetDefaultObj();

	void UpdateLadder();
	bool UpdateBoxCollisionForRetraction();
	void PlaySetupAnimation();
	void BuildLadder();
};

// 0xA8 (0x1138 - 0x1090)
// Class ShooterGame.PrimalStructureSeaMine
class APrimalStructureSeaMine : public APrimalStructure
{
public:
	class USphereComponent*                      TriggerComponent;                                  // 0x1090(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class USphereComponent*                      ExplodingTriggerComponent;                         // 0x1098(0x8)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       ActivatedMineParticleSystem;                       // 0x10A0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ActivatedMineParticleSystemOffset;                 // 0x10A8(0x18)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UMaterialInterface*>            ActivateMaterials;                                 // 0x10C0(0x10)(ConstParm, Net, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ActivatedSound;                                    // 0x10D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SeaMineSpeed;                                      // 0x10D8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SeaMineExplodeTime;                                // 0x10DC(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ExplosionDamage;                                   // 0x10E0(0x4)(BlueprintReadOnly, Net, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        ExplosionRadius;                                   // 0x10E4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        ExplosionImpulse;                                  // 0x10E8(0x4)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F9E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ExplosionDamageType;                               // 0x10F0(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        OwnerTargetingTeam;                                // 0x10F8(0x4)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F9F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class APrimalCharacter*>              TriggerOverlappingCharacters;                      // 0x1100(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bActivatedSeaMine : 1;                             // Mask: 0x1, PropSize: 0x10x1110(0x1)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDisableExplosion : 1;                             // Mask: 0x2, PropSize: 0x10x1110(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2ED : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3FA0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LastKnownTargetLocation;                           // 0x1118(0x18)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      SeaMineTarget;                                     // 0x1130(0x8)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureSeaMine* GetDefaultObj();

	void RefreshSeaMineTarget();
	void OnTriggerEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor** Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	struct FHitResult OnTriggerBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor** Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep);
	void OnRep_SeaMineTarget();
	void OnHit(class AActor** SelfActor, class AActor* OtherActor, struct FVector* NormalImpulse, const struct FHitResult& Hit);
	struct FHitResult OnExplodingTriggerBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor** Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep);
	void Explode();
};

// 0x58 (0x1660 - 0x1608)
// Class ShooterGame.PrimalStructureSeatingMusic
class APrimalStructureSeatingMusic : public APrimalStructureSeating
{
public:
	class UStaticMeshComponent*                  StickMesh1;                                        // 0x1608(0x8)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  StickMesh2;                                        // 0x1610(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  StickMeshAttachPoint1;                             // 0x1618(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  StickMeshAttachPoint2;                             // 0x1620(0x8)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class USoundBase*>                    InstrumentSounds;                                  // 0x1628(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UAnimMontage*>                  InstrumentPawnAnimations;                          // 0x1638(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinimumTimeBetweenPlays;                           // 0x1648(0x4)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FA2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<double>                               LastPlayInstrumentTime;                            // 0x1650(0x10)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureSeatingMusic* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class ShooterGame.PrimalStructureSettings
class UPrimalStructureSettings : public UObject
{
public:
	class FName                                  TierTag;                                           // 0x28(0x8)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FDamageTypeAdjuster>           BaseDamageTypeAdjusters;                           // 0x30(0x10)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDamageTypeAdjuster>           ExtraDamageTypeAdjusters;                          // 0x40(0x10)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DecayDestructionPeriodMultiplier;                  // 0x50(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FA3[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalStructureSettings* GetDefaultObj();

};

// 0x38 (0x10C8 - 0x1090)
// Class ShooterGame.PrimalStructureSign
class APrimalStructureSign : public APrimalStructure
{
public:
	class FString                                SignText;                                          // 0x1090(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SignWidth;                                         // 0x10A0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxNumberofCharacters;                             // 0x10A4(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinFontSize;                                       // 0x10A8(0x4)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DefaultScale;                                      // 0x10AC(0x4)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UTextRenderComponent*                  TextRender;                                        // 0x10B0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            SetSignTextIcon;                                   // 0x10B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FA4[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureSign* GetDefaultObj();

	class FString OnRep_SignText();
};

// 0x20 (0x1180 - 0x1160)
// Class ShooterGame.PrimalStructureSkeletalDoor
class APrimalStructureSkeletalDoor : public APrimalStructureDoor
{
public:
	class USkeletalMeshComponent*                SkeletalDoorComponent;                             // 0x1160(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UShapeComponent*                       DoorCollisionComponent;                            // 0x1168(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UShapeComponent*                       TriggerComponent;                                  // 0x1170(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                BuffToApplyWhenInsideStructure;                    // 0x1178(0x8)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureSkeletalDoor* GetDefaultObj();

	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	struct FHitResult OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep);
	void GetDoorOpenState(int32* ReturnValue);
};

// 0x98 (0x450 - 0x3B8)
// Class ShooterGame.PrimalStructureToolTipWidget
class UPrimalStructureToolTipWidget : public UToolTipWidget
{
public:
	class UClass*                                ItemsToDisplayModuleTemplate;                      // 0x3B8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FA8[0x90];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalStructureToolTipWidget* GetDefaultObj();

};

// 0x8 (0x1098 - 0x1090)
// Class ShooterGame.PrimalStructureTribeFlag
class APrimalStructureTribeFlag : public APrimalStructure
{
public:
	uint32                                       TribeID;                                           // 0x1090(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3FA9[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureTribeFlag* GetDefaultObj();

};

// 0xB0 (0x1220 - 0x1170)
// Class ShooterGame.PrimalStructureTripwire
class APrimalStructureTripwire : public APrimalStructureExplosive
{
public:
	class UParticleSystemComponent*              WireComponent;                                     // 0x1170(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UBoxComponent*                         TriggerComponent;                                  // 0x1178(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              CableRotOffset;                                    // 0x1180(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaximumCableLength;                                // 0x1198(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bOnlyPrimalCharacters : 1;                         // Mask: 0x1, PropSize: 0x10x119C(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreAllies : 1;                                 // Mask: 0x2, PropSize: 0x10x119C(0x1)(Edit, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bNotifyTripChat : 1;                               // Mask: 0x4, PropSize: 0x10x119C(0x1)(ExportObject, Net, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bShowingWireComponent : 1;                         // Mask: 0x8, PropSize: 0x10x119C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceIgnoreAllies : 1;                            // Mask: 0x10, PropSize: 0x10x119C(0x1)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceIgnoreWildDinos : 1;                         // Mask: 0x20, PropSize: 0x10x119C(0x1)(ConstParm, BlueprintVisible, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDoingWireCheck : 1;                               // Mask: 0x40, PropSize: 0x10x119C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUnwiredTrap : 1;                                  // Mask: 0x80, PropSize: 0x10x119C(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowToggleForceIgnoreAllies : 1;                 // Mask: 0x1, PropSize: 0x10x119D(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowToggleForceIgnoreWildDinos : 1;              // Mask: 0x2, PropSize: 0x10x119D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2EE : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3FAB[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            NotifyTripChatSound;                               // 0x11A0(0x8)(ConstParm, ExportObject, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                BoxName;                                           // 0x11A8(0x10)(ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class APrimalStructureTripwire*              ConnectedTo;                                       // 0x11B8(0x8)(Edit, ConstParm, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        OwnerTargetingTeam;                                // 0x11C0(0x4)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FAC[0x2C];                                    // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            RewireIcon;                                        // 0x11F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            UnwireIcon;                                        // 0x11F8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableTripAlliesIcon;                              // 0x1200(0x8)(BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableTripAlliesIcon;                             // 0x1208(0x8)(Net, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            EnableTripWildDinosIcon;                           // 0x1210(0x8)(Edit, ConstParm, BlueprintReadOnly, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            DisableTripWildDinosIcon;                          // 0x1218(0x8)(ConstParm, BlueprintVisible, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureTripwire* GetDefaultObj();

	void WireCheck();
	struct FHitResult TriggerTouched(class UPrimitiveComponent* OverlappedComponent, class AActor** Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep);
	void SetConnectedTo(class APrimalStructureTripwire* InTripwire);
	void OnRep_UnwiredTrap();
	void OnRep_ConnectedTo();
	void NetUpdateBoxName(const class FString& NewName);
	void Multicast_ConnectedTo(class APrimalStructureTripwire* InTripwire);
	void DisconnectMe();
};

// 0x268 (0x1758 - 0x14F0)
// Class ShooterGame.PrimalStructureTurret
class APrimalStructureTurret : public APrimalStructureItemContainer
{
public:
	TWeakObjectPtr<class AActor>                 WeakTarget;                                        // 0x14F0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                AmmoItemTemplate;                                  // 0x14F8(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                MuzzleFlashEmitter;                                // 0x1500(0x8)(ConstParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, DuplicateTransient)
	float                                        FireInterval;                                      // 0x1508(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FB5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastFireTime;                                      // 0x1510(0x8)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	double                                       LastLongReloadStartTime;                           // 0x1518(0x8)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxFireYawDelta;                                   // 0x1520(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxFirePitchDelta;                                 // 0x1524(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               TargetingLocOffset;                                // 0x1528(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TargetingRotationInterpSpeed;                      // 0x1540(0x4)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        NonTargetingRotationInterpSpeed;                   // 0x1544(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TargetingRanges[0x3];                              // 0x1548(0xC)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FB7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               TargetingTraceOffset;                              // 0x1558(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                FireDamageType;                                    // 0x1570(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FireDamageAmount;                                  // 0x1578(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FireDamageImpulse;                                 // 0x157C(0x4)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       TrailFX;                                           // 0x1580(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              TurretAimRotOffset;                                // 0x1588(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               AimTargetLocOffset;                                // 0x15A0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               PlayerProneTargetOffset;                           // 0x15B8(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AimSpread;                                         // 0x15D0(0x4)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseNoWarning : 1;                                 // Mask: 0x1, PropSize: 0x10x15D4(0x1)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseLevelLimitsForTargeting : 1;                   // Mask: 0x2, PropSize: 0x10x15D4(0x1)(Edit, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseInclusionListTargeting : 1;                    // Mask: 0x4, PropSize: 0x10x15D4(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseNoAmmo : 1;                                    // Mask: 0x8, PropSize: 0x10x15D4(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bOnlyUseAmmoOnDamage : 1;                          // Mask: 0x10, PropSize: 0x10x15D4(0x1)(ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHasOmniDirectionalFire : 1;                       // Mask: 0x20, PropSize: 0x10x15D4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bFireProjectiles : 1;                              // Mask: 0x40, PropSize: 0x10x15D4(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bClientFireProjectile : 1;                         // Mask: 0x80, PropSize: 0x10x15D4(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsTargeting : 1;                                  // Mask: 0x1, PropSize: 0x10x15D5(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bInWaterOnlyTargetWater : 1;                       // Mask: 0x2, PropSize: 0x10x15D5(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bTurretIgnoreProjectiles : 1;                      // Mask: 0x4, PropSize: 0x10x15D5(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPTurretPreventsTargeting : 1;                 // Mask: 0x8, PropSize: 0x10x15D5(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAimIgnoreSockets : 1;                             // Mask: 0x10, PropSize: 0x10x15D5(0x1)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bTurretIsDisabledTooManyNearbyTurrets : 1;         // Mask: 0x20, PropSize: 0x10x15D5(0x1)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseAmmoFromNearbyContainer : 1;                   // Mask: 0x40, PropSize: 0x10x15D5(0x1)(ConstParm, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseMaxInventoryForAmmoContainerReload : 1;        // Mask: 0x80, PropSize: 0x10x15D5(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsTargetListInclusion : 1;                        // Mask: 0x1, PropSize: 0x10x15D6(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2EF : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        RangeSetting;                                      // 0x15D7(0x1)(BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        AISetting;                                         // 0x15D8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        WarningSetting;                                    // 0x15D9(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FBA[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MinTargetLevel;                                    // 0x15DC(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxTargetLevel;                                    // 0x15E0(0x4)(BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FBB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        DinoTargetList;                                    // 0x15E8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NumBullets;                                        // 0x15F8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NumBulletsPerShot;                                 // 0x15FC(0x4)(BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        LongAmmoReloadCD;                                  // 0x1600(0x4)(Edit, ConstParm, Net, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxAmmoContainerReloadPercent;                     // 0x1604(0x4)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AlwaysEnableFastTurretTargetingOverVelocity;       // 0x1608(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FBC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ProjectileClass;                                   // 0x1610(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        WarningExpirationTime;                             // 0x1618(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FBD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                WarningEmitterShort;                               // 0x1620(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                WarningEmitterLong;                                // 0x1628(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BatteryIntervalFromActivationBeforeFiring;         // 0x1630(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FBE[0x1C];                                    // Fixing Size After Last Property  > TateDumper <
	class UChildActorComponent*                  MyChildEmitterTargetingEffect;                     // 0x1650(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              DefaultTurretAimRotOffset;                         // 0x1658(0x18)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               MuzzleLocOffset;                                   // 0x1670(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FBF[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MagazineSize;                                      // 0x1690(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RangeToCheckForAmmo;                               // 0x1694(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AmmoBoxReloadCooldown;                             // 0x1698(0x4)(Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FC0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UStaticMeshComponent*                  CopySettingsRangeMesh;                             // 0x16A0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FC1[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            ShowCopySettingsVisualIcon;                        // 0x16B8(0x8)(ConstParm, ExportObject, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            HideCopySettingsVisualIcon;                        // 0x16C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CopySettingsIcon;                                  // 0x16C8(0x8)(Edit, ConstParm, BlueprintReadOnly, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CopySettingsInRangeIcon;                           // 0x16D0(0x8)(ConstParm, BlueprintVisible, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CopySettingsInRangeWithPinCodeIcon;                // 0x16D8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            TargetingOptionsIcon;                              // 0x16E0(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    RangeSettingIcons;                                 // 0x16E8(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    AISettingIcons;                                    // 0x16F8(0x10)(ConstParm, Net, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    WarningSettingIcons;                               // 0x1708(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            InclusionListIcon;                                 // 0x1718(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            ExclusionListIcon;                                 // 0x1720(0x8)(Edit, ConstParm, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            AddCreatureToInclusionListIcon;                    // 0x1728(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            RemoveCreatureFromInclusionListIcon;               // 0x1730(0x8)(Net, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            AddCreatureToExclusionListIcon;                    // 0x1738(0x8)(BlueprintReadOnly, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            RemoveCreatureFromExclusionListIcon;               // 0x1740(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FluidSimSplashStrength;                            // 0x1748(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FC2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x1750(0x8)(Edit, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureTurret* GetDefaultObj();

	void UpdatedTargeting();
	void StartWarning();
	void NetMultiUpdateTarget(class AActor* PNewTarget, double NewLastFireTime);
	void GetTargetAltAimSocket(class APrimalCharacter* ForTarget, class FName* ReturnValue);
	struct FVector ClientsFireProjectile(struct FVector_NetQuantizeNormal* ShootDir);
	void BPTurretPreventsTargeting(class APrimalCharacter* PotentialTarget, bool* ReturnValue);
	void BPCopyCustomSettingsFromTurret(class APrimalStructureTurret* FromTurret, bool* ReturnValue);
};

// 0x208 (0x1810 - 0x1608)
// Class ShooterGame.PrimalStructureTurretBallista
class APrimalStructureTurretBallista : public APrimalStructureSeating
{
public:
	class FName                                  TurretTipBone;                                     // 0x1608(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RiderOverrideSocketName;                           // 0x1610(0x8)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                AmmoItemTemplate;                                  // 0x1618(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AlternateAmmoItemTemplates;                        // 0x1620(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ProjectileClass;                                   // 0x1630(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	class UClass*                                ShootingDamageType;                                // 0x1638(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ShootingDamageAmount;                              // 0x1640(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ShootingDamageImpulse;                             // 0x1644(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       ShootingTrailFX;                                   // 0x1648(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ShootingAimSpread;                                 // 0x1650(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FC3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                MuzzleFlashEmitter;                                // 0x1658(0x8)(ConstParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, DuplicateTransient)
	float                                        ShootingFireInterval;                              // 0x1660(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FC4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastShootingFireTime;                              // 0x1668(0x8)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIsTryingToShoot;                                  // 0x1670(0x1)(ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIsShooting;                                       // 0x1671(0x1)(Edit, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIsTargeting;                                      // 0x1672(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FC5[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        YawViewRotation;                                   // 0x1674(0x4)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OldYawViewRotation;                                // 0x1678(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PitctViewRotation;                                 // 0x167C(0x4)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              RotationInput;                                     // 0x1680(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             FireSound;                                         // 0x1698(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             EmptyFireSound;                                    // 0x16A0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             RotateSoundCue;                                    // 0x16A8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RotateSpeedThreshold;                              // 0x16B0(0x4)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RotateSoundFadeInSpeed;                            // 0x16B4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RotateSoundFadeOutSpeed;                           // 0x16B8(0x4)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RotateSoundMinVolume;                              // 0x16BC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RotateSoundMaxVolume;                              // 0x16C0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TPVCameraPitchMin;                                 // 0x16C4(0x4)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TPVCameraPitchMax;                                 // 0x16C8(0x4)(Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TPVCameraYawMin;                                   // 0x16CC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TPVCameraYawMax;                                   // 0x16D0(0x4)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FC6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          FireBallistaAnimation;                             // 0x16D8(0x8)(ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          EmptyBallistaAnimation;                            // 0x16E0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ReloadBallistaAnimation;                           // 0x16E8(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIsLoaded;                                         // 0x16F0(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FC7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ControllerRiddingYaw;                              // 0x16F4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TurretSkeletalMeshComponentName;                   // 0x16F8(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                MySkeletalMeshComp;                                // 0x1700(0x8)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AttachedModuleComponentName;                       // 0x1708(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                AttachedModuleSkeletalMeshComp;                    // 0x1710(0x8)(BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          AttachedModuleFireAnimation;                       // 0x1718(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          AttachedModuleReloadAnimation;                     // 0x1720(0x8)(Edit, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ProjectileMeshAttachPoint;                         // 0x1728(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ProjectileMeshAttachPointForMeshOnly;              // 0x1730(0x8)(BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ProjectileBoneName;                                // 0x1738(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bClientFireProjectile : 1;                         // Mask: 0x1, PropSize: 0x10x1740(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseInstantDamageShooting : 1;                     // Mask: 0x2, PropSize: 0x10x1740(0x1)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDisableInElectricalStorm : 1;                     // Mask: 0x4, PropSize: 0x10x1740(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBallistaAimOffsetOnCharacter : 1;              // Mask: 0x8, PropSize: 0x10x1740(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsReloading : 1;                                  // Mask: 0x10, PropSize: 0x10x1740(0x1)(ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsFiring : 1;                                     // Mask: 0x20, PropSize: 0x10x1740(0x1)(Net, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2F0 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bQueueReloadingAnimation;                          // 0x1741(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bFireProjectileInvertX : 1;                        // Mask: 0x1, PropSize: 0x10x1742(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bShowProjectileOnlyBasedOnAmmo : 1;                // Mask: 0x2, PropSize: 0x10x1742(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHideProjectileBone : 1;                           // Mask: 0x4, PropSize: 0x10x1742(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanFire : 1;                                 // Mask: 0x8, PropSize: 0x10x1742(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPFiredWeapon : 1;                             // Mask: 0x10, PropSize: 0x10x1742(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHideProjectileBoneOnAttachedModule : 1;           // Mask: 0x20, PropSize: 0x10x1742(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseAmmoFromNearbyContainer : 1;                   // Mask: 0x40, PropSize: 0x10x1742(0x1)(ConstParm, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetDamageMultiplier : 1;                     // Mask: 0x80, PropSize: 0x10x1742(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FC8[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	class UStaticMeshComponent*                  ProjectileMesh;                                    // 0x1748(0x8)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAudioComponent*                       RotateSoundComponent;                              // 0x1750(0x8)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            ProgressBarBackground;                             // 0x1758(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            ProgressBarForeground;                             // 0x1760(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        AmmoCount;                                         // 0x1768(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst)
	uint8                                        Pad_3FC9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                CurrentAmmoItemTemplate;                           // 0x1770(0x8)(Edit, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MagazineSize;                                      // 0x1778(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RangeToCheckForAmmo;                               // 0x177C(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FCA[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class UStaticMesh*                           AmmoItemTemplateMesh;                              // 0x1798(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UStaticMesh*>                   AlternateAmmoItemTemplateMeshes;                   // 0x17A0(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        AlternateAmmoProjectileClasses;                    // 0x17B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        BuffsWhileSeated;                                  // 0x17C0(0x10)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DefaultAmmoReloadAnimSpeed;                        // 0x17D0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FCB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<float>                                AlternateAmmoReloadAnimSpeeds;                     // 0x17D8(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        HealthCostPerShot;                                 // 0x17E8(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinimumHealthPercentToShoot;                       // 0x17EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InstantFireTraceRange;                             // 0x17F0(0x4)(Edit, ExportObject, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         AimFromPlayerView;                                 // 0x17F4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FCC[0xB];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FluidSimSplashStrength;                            // 0x1800(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FCD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x1808(0x8)(Edit, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureTurretBallista* GetDefaultObj();

	void TryFiring(bool* ShouldFire);
	void ServerSwitchAmmoType();
	void ServerSetTargeting(bool* bTargeting);
	void GetCurrentAmmoType(class UClass** ReturnValue);
	void ClientsPlayFireAnim();
	struct FVector ClientsFireProjectile(struct FVector_NetQuantizeNormal* ShootDir);
	void BPGetDamageMultiplier(float* ReturnValue);
	void BPFiredWeapon();
	void BPCanFire(bool* ReturnValue);
};

// 0x80 (0x17D8 - 0x1758)
// Class ShooterGame.PrimalStructureTurretPlant
class APrimalStructureTurretPlant : public APrimalStructureTurret
{
public:
	TArray<class FName>                          PlantMuzzleSockets;                                // 0x1758(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UAnimMontage*>                  PlantAttackAnims;                                  // 0x1768(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlantHealthRecoverPerSec;                          // 0x1778(0x4)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AmountOfFertilizerToUsePerShot;                    // 0x177C(0x4)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        HealthRecoverPerSec;                               // 0x1780(0x4)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FCE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalStructureItemContainer_CropPlot* OwnerCropPlot;                                     // 0x1788(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FCF[0x48];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureTurretPlant* GetDefaultObj();

	void RecoverHealthTimer();
};

// 0x160 (0x1650 - 0x14F0)
// Class ShooterGame.PrimalStructureUnderwaterBase
class APrimalStructureUnderwaterBase : public APrimalStructureItemContainer
{
public:
	uint8                                        bIsFlooded : 1;                                    // Mask: 0x1, PropSize: 0x10x14F0(0x1)(BlueprintVisible, ExportObject, Net, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsFrameHidden : 1;                                // Mask: 0x2, PropSize: 0x10x14F0(0x1)(BlueprintVisible, Net, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2F1 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3FD5[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FPorthole>                     Portholes;                                         // 0x14F8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<int32>                                PortholeState;                                     // 0x1508(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<int32>                                PortholeSaveState;                                 // 0x1518(0x10)(BlueprintVisible, ExportObject, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class APrimalStructureUnderwaterBase*> PortholeLinks;                                     // 0x1528(0x10)(BlueprintVisible, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                FloodedEmitter;                                    // 0x1538(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                UnfloodedEmitter;                                  // 0x1540(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            OpenPortholeSound;                                 // 0x1548(0x8)(Edit, ExportObject, Net, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            ClosePortholeSound;                                // 0x1550(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            FreezePortholeSound;                               // 0x1558(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            UnfreezePortholeSound;                             // 0x1560(0x8)(ExportObject, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<uint32>                               CurrentPinCodes;                                   // 0x1568(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FString>                        PortholeNameOverrides;                             // 0x1578(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FColor>                        PortholeNameIconColorOverrides;                    // 0x1588(0x10)(Edit, ConstParm, Net, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<class APlayerController*, class UPrimitiveComponent*> ClientsViewingPortholes;                           // 0x1598(0x50)(Edit, ConstParm, BlueprintVisible, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FD6[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            DrainCompartmentIcon;                              // 0x15F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            FloodCompartmentIcon;                              // 0x1600(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            DrainAllConnectedIcon;                             // 0x1608(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            FloodAllConnectedIcon;                             // 0x1610(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            OpenIcon;                                          // 0x1618(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            OpenWindowIcon;                                    // 0x1620(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            CloseIcon;                                         // 0x1628(0x8)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            ShowFrameIcon;                                     // 0x1630(0x8)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            HideFrameIcon;                                     // 0x1638(0x8)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            ShowConnectedFramesIcon;                           // 0x1640(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            HideConnectedFramesIcon;                           // 0x1648(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalStructureUnderwaterBase* GetDefaultObj();

	bool UpdateLockState();
	bool UpdateFrameState();
	bool UpdateFloodState();
	int32 SetPortholeState(int32* NewState);
	void OnRep_IsFrameHidden();
	void OnRep_IsFlooded();
	int32 GetLinkedBaseByPortholeIndex(class APrimalStructureUnderwaterBase** ReturnValue);
	void ChangedCompartmentFloodState();
	int32 BPSetPortholeState(int32* NewState);
	int32 AreBasesOpenToEachOther(bool* ReturnValue);
};

// 0x20 (0x10B0 - 0x1090)
// Class ShooterGame.PrimalStructureWaterPipe
class APrimalStructureWaterPipe : public APrimalStructure
{
public:
	uint8                                        bAlwaysHasWater : 1;                               // Mask: 0x1, PropSize: 0x10x1090(0x1)(Edit, ConstParm, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHasWater : 1;                                     // Mask: 0x2, PropSize: 0x10x1090(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsMeshHidden : 1;                                 // Mask: 0x4, PropSize: 0x10x1090(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsWaterPipe : 1;                                  // Mask: 0x8, PropSize: 0x10x1090(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bConnectedToNonPipe : 1;                           // Mask: 0x10, PropSize: 0x10x1090(0x1)(Edit, ConstParm, Net, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnRefreshPipeMaterials : 1;                  // Mask: 0x20, PropSize: 0x10x1090(0x1)(BlueprintVisible, BlueprintReadOnly, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnWaterStateChange : 1;                      // Mask: 0x40, PropSize: 0x10x1090(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bCanHideMesh : 1;                                  // Mask: 0x80, PropSize: 0x10x1090(0x1)(OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FDE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AutoDestroyPeriodWhenUnconnectedToNonPipe;         // 0x1094(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    HasWaterMaterial;                                  // 0x1098(0x8)(Edit, Net, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    NoWaterMaterial;                                   // 0x10A0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        WaterMaterialIndex;                                // 0x10A8(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FDF[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalStructureWaterPipe* GetDefaultObj();

	void SetHasWater(bool bNewHasWater);
	void RefreshWaterState();
	void RefreshHasSourceMaterials();
	void OnRep_IsMeshHidden();
	void OnRep_HasWater(bool bPreviousHasWater);
	void BPOnWaterStateChange(bool bPipeHasWaterOrPower);
	class UMaterialInterface* BPOnRefreshPipeMaterials(bool bPipeHasWaterOrPower);
};

// 0x40 (0x68 - 0x28)
// Class ShooterGame.PrimalSupplyCrateItemSet
class UPrimalSupplyCrateItemSet : public UObject
{
public:
	struct FSupplyCrateItemSet                   ItemSet;                                           // 0x28(0x40)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalSupplyCrateItemSet* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class ShooterGame.PrimalSupplyCrateItemSets
class UPrimalSupplyCrateItemSets : public UObject
{
public:
	TArray<struct FSupplyCrateItemSet>           ItemSets;                                          // 0x28(0x10)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalSupplyCrateItemSets* GetDefaultObj();

};

// 0x1A8 (0x1D0 - 0x28)
// Class ShooterGame.PrimalTribeData
class UPrimalTribeData : public UObject
{
public:
	struct FTribeData                            TribeData;                                         // 0x28(0x1A8)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config)

	static class UClass* StaticClass();
	static class UPrimalTribeData* GetDefaultObj();

};

// 0x10 (0x768 - 0x758)
// Class ShooterGame.PrimalUI_Toast
class UPrimalUI_Toast : public UPrimalUI
{
public:
	int32                                        Counter;                                           // 0x758(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        CounterMax;                                        // 0x75C(0x4)(Edit, ExportObject, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ProgressCounter;                                   // 0x760(0x4)(Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bWillSetCounter;                                   // 0x764(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FE7[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalUI_Toast* GetDefaultObj();

	void SetCounter(int32* NewCounter);
	void OverrideTextValueWithString(class FString* NewText, bool* HideProgressBar);
	void OverrideTextValue(class FText* NewText, bool* HideProgressBar);
	void OverrideCounterStart(int32* Num);
	void IsAtCounterMax(bool* ReturnValue);
	void InitCounter(int32* NewCounterMax, bool* bInWillSetCounter);
	void IncrementCounter();
};

// 0xB80 (0x1048 - 0x4C8)
// Class ShooterGame.ShooterWeapon
class AShooterWeapon : public AActor
{
public:
	uint8                                        Pad_4024[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        EquipTime;                                         // 0x4D0(0x4)(Edit, ConstParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4025[0x1C];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                OverridePawnTPVAnimBlueprint;                      // 0x4F0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          OverrideProneInAnim;                               // 0x4F8(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          OverrideProneOutAnim;                              // 0x500(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          OverrideJumpAnim;                                  // 0x508(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          OverrideLandedAnim;                                // 0x510(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UAnimSequence*>                 OverrideRiderAnimSequenceFrom;                     // 0x518(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UAnimSequence*>                 OverrideRiderAnimSequenceTo;                       // 0x528(0x10)(BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCanvasIcon                           PrimaryIcon;                                       // 0x538(0x18)(Edit, BlueprintVisible, Net, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCanvasIcon                           SecondaryIcon;                                     // 0x550(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCanvasIcon                           PrimaryClipIcon;                                   // 0x568(0x18)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCanvasIcon                           SecondaryClipIcon;                                 // 0x580(0x18)(ConstParm, ExportObject, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ItemDurabilityToConsumePerMeleeHit;                // 0x598(0x4)(Edit, EditFixedSize, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        AmmoIconsCount;                                    // 0x59C(0x4)(ConstParm, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TargetingTooltipCheckRange;                        // 0x5A0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseDinoRangeForTooltip : 1;                       // Mask: 0x1, PropSize: 0x10x5A4(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_302 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_402A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        PrimaryClipIconOffset;                             // 0x5A8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        SecondaryClipIconOffset;                           // 0x5AC(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                TargetingInfoToolTipWidget;                        // 0x5B0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig)
	struct FVector2D                             TargetingInfoTooltipPadding;                       // 0x5B8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             TargetingInfoTooltipScale;                         // 0x5C8(0x10)(Edit, BlueprintReadOnly, Net, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bOnlyPassiveDurabilityWhenAccessoryActive;         // 0x5D8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDisableShooterOnElectricStorm;                    // 0x5D9(0x1)(Edit, ConstParm, ExportObject, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_402C[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  OverrideAttachPoint;                               // 0x5DC(0x8)(OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_402D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               FPVRelativeLocation;                               // 0x5E8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              FPVRelativeRotation;                               // 0x600(0x18)(ConstParm, ExportObject, Net, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               FPVRelativeLocation_Targeting;                     // 0x618(0x18)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              FPVRelativeRotation_Targeting;                     // 0x630(0x18)(ConstParm, ExportObject, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FPVEnterTargetingInterpSpeed;                      // 0x648(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FPVExitTargetingInterpSpeed;                       // 0x64C(0x4)(BlueprintVisible, ExportObject, Net, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        EndDoMeleeSwingTime;                               // 0x650(0x4)(Edit, Net, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_402F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              FPVLookAtMaximumOffset;                            // 0x658(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              FPVLookAtSpeedBase;                                // 0x670(0x18)(Edit, ConstParm, ExportObject, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              FPVLookAtInterpSpeed;                              // 0x688(0x18)(Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              FPVLookAtMaximumOffset_Targeting;                  // 0x6A0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              FPVLookAtSpeedBase_Targeting;                      // 0x6B8(0x18)(Net, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              FPVLookAtInterpSpeed_Targeting;                    // 0x6D0(0x18)(BlueprintReadOnly, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               FPVImmobilizedLocationOffset;                      // 0x6E8(0x18)(Edit, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              FPVImmobilizedRotationOffset;                      // 0x700(0x18)(ConstParm, BlueprintReadOnly, Net, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FPVImmobilizedInterpSpeed;                         // 0x718(0x4)(BlueprintVisible, Net, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIsWeaponPing;                                     // 0x71C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIsWeaponTracker;                                  // 0x71D(0x1)(Edit, ConstParm, BlueprintReadOnly, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bPreventLeftShoulder;                              // 0x71E(0x1)(ExportObject, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bPreventRightShoulder;                             // 0x71F(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4032[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bUseBlueprintAnimNotifications;                    // 0x724(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4033[0xB];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          MeleeSwingSockets;                                 // 0x730(0x10)(BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        AllowMeleeTimeBeforeAnimationEnd;                  // 0x740(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4034[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalItem*                           AssociatedPrimalItem;                              // 0x748(0x8)(Edit, ConstParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class AMissionType*                          AssociatedMission;                                 // 0x750(0x8)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bCanBeUsedAsEquipment;                             // 0x758(0x1)(Edit, Parm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_4035[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FItemNetInfo                          AssociatedItemNetInfo;                             // 0x760(0x1C8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponData                           WeaponConfig;                                      // 0x928(0x2C)(GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4036[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USkeletalMeshComponent*                Mesh3P;                                            // 0x958(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                WeaponAmmoItemTemplate;                            // 0x960(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	class ACameraActor*                          AnimatedCamera;                                    // 0x968(0x8)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4038[0xC0];                                    // Fixing Size After Last Property  > TateDumper <
	class AShooterCharacter*                     MyPawn;                                            // 0xA30(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                Mesh1P;                                            // 0xA38(0x8)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UAudioComponent*                       FireAC;                                            // 0xA40(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MuzzleAttachPoint;                                 // 0xA48(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       MuzzleFX;                                          // 0xA50(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       MuzzleFX_FPV;                                      // 0xA58(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       AltMuzzleFX;                                       // 0xA60(0x8)(Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       AltMuzzleFX_FPV;                                   // 0xA68(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              MuzzlePSC;                                         // 0xA70(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              MuzzlePSCSecondary;                                // 0xA78(0x8)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                FireCameraShake;                                   // 0xA80(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ReloadCameraShake;                                 // 0xA88(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                MeleeCameraShake;                                  // 0xA90(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UForceFeedbackEffect*                  FireForceFeedback;                                 // 0xA98(0x8)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             FireSound;                                         // 0xAA0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             AltFireSound;                                      // 0xAA8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             FireFinishSound;                                   // 0xAB0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             OutOfAmmoSound;                                    // 0xAB8(0x8)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MeleeDamageAmount;                                 // 0xAC0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        TheMeleeSwingRadius;                               // 0xAC4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MeleeDamageImpulse;                                // 0xAC8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_403B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FWeaponAnim                           ReloadAnim;                                        // 0xAD0(0x10)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ProneTPVReloadAnim;                                // 0xAE0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           PartialReloadAnim;                                 // 0xAE8(0x10)(BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ProneTPVPartialReloadAnim;                         // 0xAF8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          WeaponMesh3PReloadAnim;                            // 0xB00(0x8)(ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           HarvestAnim;                                       // 0xB08(0x10)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           WeaponBreakAnim;                                   // 0xB18(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             EquipSound;                                        // 0xB28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           EquipAnim;                                         // 0xB30(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           EquipNoAmmoClipAnim;                               // 0xB40(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           UnequipAnim;                                       // 0xB50(0x10)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           UnequipNoAmmoClipAnim;                             // 0xB60(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          WeaponMesh3PFireAnim;                              // 0xB70(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           FireAnim;                                          // 0xB78(0x10)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           MeleeAnim;                                         // 0xB88(0x10)(EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           MeleeNoAmmoClipAnim;                               // 0xB98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FWeaponAnim>                   MeleeAnimList;                                     // 0xBA8(0x10)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bOnlyUseFirstMeleeAnimWithShield : 1;              // Mask: 0x1, PropSize: 0x10xBB8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceShowCrosshairWhileFiring : 1;                // Mask: 0x2, PropSize: 0x10xBB8(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_305 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_403C[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FWeaponAnim>                   MeleeWithHitAnimList;                              // 0xBC0(0x10)(Edit, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           ShieldHitAnim;                                     // 0xBD0(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FPVMoveOffscreenWhenTurningMaxMoveWeaponSpeed;     // 0xBE0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FPVMoveOffscreenWhenTurningMinMoveWeaponSpeed;     // 0xBE4(0x4)(Edit, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FPVMoveOffscreenWhenTurningMinViewRotSpeed;        // 0xBE8(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FPVMoveOffscreenWhenTurningMaxViewRotSpeed;        // 0xBEC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FPVMoveOffscreenIdleRestoreInterval;               // 0xBF0(0x4)(ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FPVMoveOffscreenIdleRestoreSpeed;                  // 0xBF4(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FPVMoveOffscreenWhenTurningMaxOffset;              // 0xBF8(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_403D[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FWeaponAnim                           TargetingFireAnim;                                 // 0xC08(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowSubmergedFiring : 1;                         // Mask: 0x1, PropSize: 0x10xC18(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_306 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHideFPVMesh : 1;                                  // Mask: 0x40, PropSize: 0x10xC18(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceTargeting : 1;                               // Mask: 0x80, PropSize: 0x10xC18(0x1)(EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bCanAltFire : 1;                                   // Mask: 0x1, PropSize: 0x10xC19(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAltFireDoesMeleeAttack : 1;                       // Mask: 0x2, PropSize: 0x10xC19(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAltFireDoesNotStopFire : 1;                       // Mask: 0x4, PropSize: 0x10xC19(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHideDamageSourceFromLogs : 1;                     // Mask: 0x8, PropSize: 0x10xC19(0x1)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseTargetingFireAnim : 1;                         // Mask: 0x10, PropSize: 0x10xC19(0x1)(Edit, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseTargetingReloadAnim : 1;                       // Mask: 0x20, PropSize: 0x10xC19(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsePartialReloadAnim : 1;                         // Mask: 0x40, PropSize: 0x10xC19(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseEquipNoAmmoClipAnim : 1;                       // Mask: 0x80, PropSize: 0x10xC19(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseUnequipNoAmmoClipAnim : 1;                     // Mask: 0x1, PropSize: 0x10xC1A(0x1)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseMeleeNoAmmoClipAnim : 1;                       // Mask: 0x2, PropSize: 0x10xC1A(0x1)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHideLeftArmFPV : 1;                               // Mask: 0x4, PropSize: 0x10xC1A(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bLoopedMuzzleFX : 1;                               // Mask: 0x8, PropSize: 0x10xC1A(0x1)(ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMeleeHitUseMuzzleFX : 1;                          // Mask: 0x10, PropSize: 0x10xC1A(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsePostUpdateTickForFPVParticles : 1;             // Mask: 0x20, PropSize: 0x10xC1A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bFPVMoveOffscreenWhenTurning : 1;                  // Mask: 0x40, PropSize: 0x10xC1A(0x1)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bReloadAnimForceTickPoseOnServer : 1;              // Mask: 0x80, PropSize: 0x10xC1A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bLoopedFireSound : 1;                              // Mask: 0x1, PropSize: 0x10xC1B(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowTargetingWhileReloading : 1;                 // Mask: 0x2, PropSize: 0x10xC1B(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMeleeHitColorizesStructures : 1;                  // Mask: 0x4, PropSize: 0x10xC1B(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bLoopedFireAnim : 1;                               // Mask: 0x8, PropSize: 0x10xC1B(0x1)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_309 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAutoRefire : 1;                                   // Mask: 0x40, PropSize: 0x10xC1B(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bConsumeAmmoOnUseAmmo : 1;                         // Mask: 0x80, PropSize: 0x10xC1B(0x1)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bTargetUnTargetWithClick : 1;                      // Mask: 0x1, PropSize: 0x10xC1C(0x1)(BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDontActuallyConsumeItemAmmo : 1;                  // Mask: 0x2, PropSize: 0x10xC1C(0x1)(ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bBPUseWeaponCanFire : 1;                           // Mask: 0x4, PropSize: 0x10xC1C(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bBPUseTargetingEvents : 1;                         // Mask: 0x8, PropSize: 0x10xC1C(0x1)(Edit, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_30A : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4042[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_30B : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bWantsToFire : 1;                                  // Mask: 0x2, PropSize: 0x10xC24(0x1)(ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bWantsToAltFire : 1;                               // Mask: 0x4, PropSize: 0x10xC24(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_30C : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseAmmoOnFiring : 1;                              // Mask: 0x1, PropSize: 0x10xC25(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseAmmoServerOnly : 1;                            // Mask: 0x2, PropSize: 0x10xC25(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bListenToAppliedForeces : 1;                       // Mask: 0x4, PropSize: 0x10xC25(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_30D : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4044[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bOverrideAimOffsets : 1;                           // Mask: 0x1, PropSize: 0x10xC28(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsSpyglass : 1;                                   // Mask: 0x2, PropSize: 0x10xC28(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_30E : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4045[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ItemDestructionUnequipWeaponDelay;                 // 0xC2C(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WeaponUnequipDelay;                                // 0xC30(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4046[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FWeaponAnim                           TargetingReloadAnim;                               // 0xC38(0x10)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ProneTPVTargetingReloadAnim;                       // 0xC48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4048[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastFireTime;                                      // 0xC58(0x8)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	int32                                        CurrentAmmo;                                       // 0xC60(0x4)(ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        CurrentAmmoInClip;                                 // 0xC64(0x4)(BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bReplicateCurrentAmmoInClipToNonOwners;            // 0xC68(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseBPAdjustAmmoPerShot;                           // 0xC69(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHasToggleableAccessory : 1;                       // Mask: 0x1, PropSize: 0x10xC6A(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bToggleAccessoryUseAltMuzzleFX : 1;                // Mask: 0x2, PropSize: 0x10xC6A(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bToggleAccessoryUseAltFireSound : 1;               // Mask: 0x4, PropSize: 0x10xC6A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanToggleAccessory : 1;                      // Mask: 0x8, PropSize: 0x10xC6A(0x1)(ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnScoped : 1;                                // Mask: 0x10, PropSize: 0x10xC6A(0x1)(Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsDefaultWeapon : 1;                              // Mask: 0x20, PropSize: 0x10xC6A(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceKeepEquippedWhileInInventory : 1;            // Mask: 0x40, PropSize: 0x10xC6A(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bOnlyAllowUseWhenRidingDino : 1;                   // Mask: 0x80, PropSize: 0x10xC6A(0x1)(Edit, ExportObject, Net, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bPrimaryFireDoesMeleeAttack : 1;                   // Mask: 0x1, PropSize: 0x10xC6B(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMeleeHitCaptureDermis : 1;                        // Mask: 0x2, PropSize: 0x10xC6B(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_30F : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	class FName                                  FPVAccessoryToggleComponent;                       // 0xC6C(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TPVAccessoryToggleComponent;                       // 0xC74(0x8)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsAccessoryActive : 1;                            // Mask: 0x1, PropSize: 0x10xC7C(0x1)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bCanAccessoryBeSetOn : 1;                          // Mask: 0x2, PropSize: 0x10xC7C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bConsumeAmmoItemOnReload : 1;                      // Mask: 0x4, PropSize: 0x10xC7C(0x1)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseAutoReload : 1;                                // Mask: 0x8, PropSize: 0x10xC7C(0x1)(ConstParm, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bWantsToAutoReload : 1;                            // Mask: 0x10, PropSize: 0x10xC7C(0x1)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHasPlayedReload : 1;                              // Mask: 0x20, PropSize: 0x10xC7C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bNetLoopedSimulatingWeaponFire : 1;                // Mask: 0x40, PropSize: 0x10xC7C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_310 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bBPHandleMeleeAttack : 1;                          // Mask: 0x1, PropSize: 0x10xC7D(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPShouldDealDamage : 1;                        // Mask: 0x2, PropSize: 0x10xC7D(0x1)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDoesntUsePrimalItem : 1;                          // Mask: 0x4, PropSize: 0x10xC7D(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseCanAccessoryBeSetOn : 1;                       // Mask: 0x8, PropSize: 0x10xC7D(0x1)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetActorForTargetingTooltip : 1;             // Mask: 0x10, PropSize: 0x10xC7D(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideAimDirection : 1;                    // Mask: 0x20, PropSize: 0x10xC7D(0x1)(BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_311 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_404B[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPIsValidUnstasisActor : 1;                    // Mask: 0x1, PropSize: 0x10xC80(0x1)(ExportObject, Net, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_312 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_404C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TimeToAutoReload;                                  // 0xC84(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            ToggleAccessorySound;                              // 0xC88(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        FiredLastNoAmmoShot;                               // 0xC90(0x4)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_404D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastNotifyShotTime;                                // 0xC98(0x8)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bLoopingSimulateWeaponFire : 1;                    // Mask: 0x1, PropSize: 0x10xCA0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_313 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPCanMeleeAttack : 1;                          // Mask: 0x4, PropSize: 0x10xCA0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_314 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_404E[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                MeleeDamageType;                                   // 0xCB0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bClientTriggersHandleFiring : 1;                   // Mask: 0x1, PropSize: 0x10xCB8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowUseHarvesting : 1;                           // Mask: 0x2, PropSize: 0x10xCB8(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreventItemColors : 1;                            // Mask: 0x4, PropSize: 0x10xCB8(0x1)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetSelectedMeleeAttackAnim : 1;              // Mask: 0x8, PropSize: 0x10xCB8(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPWeaponDealDamage : 1;                        // Mask: 0x10, PropSize: 0x10xCB8(0x1)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_315 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4050[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPOnWeaponAnimPlayedNotify : 1;                // Mask: 0x1, PropSize: 0x10xCBC(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_316 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4051[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               VRTargetingModelOffset;                            // 0xCC0(0x18)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               VRTargetingAimOriginOffset;                        // 0xCD8(0x18)(Edit, ConstParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    ScopeOverlayMI;                                    // 0xCF0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    ScopeCrosshairMI;                                  // 0xCF8(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              ScopeCrosshairMID;                                 // 0xD00(0x8)(ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ScopeCrosshairSize;                                // 0xD08(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ScopeCrosshairColorParameter;                      // 0xD0C(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bColorCrosshairBasedOnTarget : 1;                  // Mask: 0x1, PropSize: 0x10xD14(0x1)(EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowTargeting : 1;                               // Mask: 0x2, PropSize: 0x10xD14(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreTargetingFOV : 1;                           // Mask: 0x4, PropSize: 0x10xD14(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowDropAndPickup : 1;                           // Mask: 0x8, PropSize: 0x10xD14(0x1)(Edit, Net, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowDropAndPickupOnReload : 1;                   // Mask: 0x10, PropSize: 0x10xD14(0x1)(ConstParm, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bApplyAimDriftWhenTargeting : 1;                   // Mask: 0x20, PropSize: 0x10xD14(0x1)(Edit, ConstParm, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseScopeOverlay : 1;                              // Mask: 0x40, PropSize: 0x10xD14(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_317 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4053[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bHideFPVMeshWhileTargeting : 1;                    // Mask: 0x1, PropSize: 0x10xD18(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_318 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4054[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bGamepadRightIsSecondaryAction : 1;                // Mask: 0x1, PropSize: 0x10xD1C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bGamepadLeftIsPrimaryFire : 1;                     // Mask: 0x2, PropSize: 0x10xD1C(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDirectPrimaryFireToAltFire : 1;                   // Mask: 0x4, PropSize: 0x10xD1C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bCanFire : 1;                                      // Mask: 0x8, PropSize: 0x10xD1C(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceTargetingOnDino : 1;                         // Mask: 0x10, PropSize: 0x10xD1C(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDirectTargetingToPrimaryFire : 1;                 // Mask: 0x20, PropSize: 0x10xD1C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDirectTargetingToAltFire : 1;                     // Mask: 0x40, PropSize: 0x10xD1C(0x1)(BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDirectTargetingToSecondaryAction : 1;             // Mask: 0x80, PropSize: 0x10xD1C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDirectAltFireToSeconaryAction : 1;                // Mask: 0x1, PropSize: 0x10xD1D(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreventEquippingUnderwater : 1;                   // Mask: 0x2, PropSize: 0x10xD1D(0x1)(Edit, ConstParm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bUseTPVWeaponMeshMeleeSockets : 1;                 // Mask: 0x4, PropSize: 0x10xD1D(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bTargetingForceTraceFloatingHUD : 1;               // Mask: 0x8, PropSize: 0x10xD1D(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowRunning : 1;                                 // Mask: 0x10, PropSize: 0x10xD1D(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowUseWhileRidingDino : 1;                      // Mask: 0x20, PropSize: 0x10xD1D(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bSupportsOffhandShield : 1;                        // Mask: 0x40, PropSize: 0x10xD1D(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMeleeAttackHarvetUsableComponents : 1;            // Mask: 0x80, PropSize: 0x10xD1D(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowSettingColorizeRegions : 1;                  // Mask: 0x1, PropSize: 0x10xD1E(0x1)(ConstParm, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAttemptToDyeWithMeleeAttack : 1;                  // Mask: 0x2, PropSize: 0x10xD1E(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bOnlyDamagePawns : 1;                              // Mask: 0x4, PropSize: 0x10xD1E(0x1)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseCharacterMeleeDamageModifier : 1;              // Mask: 0x8, PropSize: 0x10xD1E(0x1)(Edit, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bConsumeZoomInOut : 1;                             // Mask: 0x10, PropSize: 0x10xD1E(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bClipScopeInY : 1;                                 // Mask: 0x20, PropSize: 0x10xD1E(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bScopeFullscreen : 1;                              // Mask: 0x40, PropSize: 0x10xD1E(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowRunningWhileFiring : 1;                      // Mask: 0x80, PropSize: 0x10xD1E(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowRunningWhileReloading : 1;                   // Mask: 0x1, PropSize: 0x10xD1F(0x1)(ConstParm, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowRunningWhileMeleeAttacking : 1;              // Mask: 0x2, PropSize: 0x10xD1F(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_319 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        MinItemDurabilityPercentageForShot;                // 0xD20(0x4)(Edit, ConstParm, BlueprintVisible, Net, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bColorizeMuzzleFX : 1;                             // Mask: 0x1, PropSize: 0x10xD24(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_31A : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4057[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OverrideMuzzleFXAlpha;                             // 0xD28(0x4)(Edit, BlueprintReadOnly, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceFirstPersonWhileTargeting : 1;               // Mask: 0x1, PropSize: 0x10xD2C(0x1)(DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPStartEquippedNotify : 1;                     // Mask: 0x2, PropSize: 0x10xD2C(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDirectPrimaryFireToSecondaryAction : 1;           // Mask: 0x4, PropSize: 0x10xD2C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseAlternateAimOffset : 1;                        // Mask: 0x8, PropSize: 0x10xD2C(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_31B : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4059[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OverrideTargetingFOV;                              // 0xD30(0x4)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TargetingDelayTime;                                // 0xD34(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TargetingFOVInterpSpeed;                           // 0xD38(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AimDriftYawAngle;                                  // 0xD3C(0x4)(ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AimDriftPitchAngle;                                // 0xD40(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AimDriftYawFrequency;                              // 0xD44(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AimDriftPitchFrequency;                            // 0xD48(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_405A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          AlternateInventoryEquipAnim;                       // 0xD50(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           OpenInventoryAnim;                                 // 0xD58(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MeleeHitRandomChanceToDestroyItem;                 // 0xD68(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GlobalFireCameraShakeScale;                        // 0xD6C(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DurabilityCostToEquip;                             // 0xD70(0x4)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PassiveDurabilityCostPerInterval;                  // 0xD74(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        PassiveDurabilityCostInterval;                     // 0xD78(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalFireCameraShakeScaleTargeting;               // 0xD7C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MeleeCameraShakeSpeedScale;                        // 0xD80(0x4)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ReloadCameraShakeSpeedScale;                       // 0xD84(0x4)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MeleeConsumesStamina;                              // 0xD88(0x4)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_405C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                MeleeHitTargetCameraShake;                         // 0xD90(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                MeleeHitTargetCameraShakeMobile;                   // 0xD98(0x8)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                MeleeHitColorizeStructuresUI;                      // 0xDA0(0x8)(ConstParm, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HypoThermiaInsulation;                             // 0xDA8(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        HyperThermiaInsulation;                            // 0xDAC(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        InsulationRange;                                   // 0xDB0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_405E[0x24];                                    // Fixing Size After Last Property  > TateDumper <
	class USoundCue*                             TargetingSound;                                    // 0xDD8(0x8)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             UntargetingSound;                                  // 0xDE0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FPVMeleeTraceFXRange;                              // 0xDE8(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4060[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                MeleeAttackUsableHarvestDamageType;                // 0xDF0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        MeleeAttackHarvetUsableComponentsRadius;           // 0xDF8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MeleeAttackUsableHarvestDamageMultiplier;          // 0xDFC(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_4061[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          TPVForcePlayAnim;                                  // 0xE58(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bPreventOpeningInventory;                          // 0xE60(0x1)(Edit, Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAllowUseOnSeatingStructure;                       // 0xE61(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	bool                                         bOnlyUseOnSeatingStructure;                        // 0xE62(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bDurabilityUseWeaponMaterial : 1;                  // Mask: 0x1, PropSize: 0x10xE63(0x1)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bOverrideStandingAnim : 1;                         // Mask: 0x2, PropSize: 0x10xE63(0x1)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseCustomSeatedAnim : 1;                          // Mask: 0x4, PropSize: 0x10xE63(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPForceTPVTargetingAnimation : 1;              // Mask: 0x8, PropSize: 0x10xE63(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForcePreventUseWhileRidingDino : 1;               // Mask: 0x10, PropSize: 0x10xE63(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventSwitchingWeapon : 1;                  // Mask: 0x20, PropSize: 0x10xE63(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanEquip : 1;                                // Mask: 0x40, PropSize: 0x10xE63(0x1)(Edit, Net, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bUseBPRemainEquipped : 1;                          // Mask: 0x80, PropSize: 0x10xE63(0x1)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsInDestruction : 1;                              // Mask: 0x1, PropSize: 0x10xE64(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceReloadOnDestruction : 1;                     // Mask: 0x2, PropSize: 0x10xE64(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPModifyFOV : 1;                               // Mask: 0x4, PropSize: 0x10xE64(0x1)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bServerIgnoreCheckCanFire : 1;                     // Mask: 0x8, PropSize: 0x10xE64(0x1)(ConstParm, Net, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetTPVCameraOffset : 1;                      // Mask: 0x10, PropSize: 0x10xE64(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideRootRotationOffset : 1;              // Mask: 0x20, PropSize: 0x10xE64(0x1)(BlueprintVisible, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSpawnedByMission : 1;                             // Mask: 0x40, PropSize: 0x10xE64(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowFullClipReload : 1;                          // Mask: 0x80, PropSize: 0x10xE64(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowPassengerTPV : 1;                       // Mask: 0x1, PropSize: 0x10xE65(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreventCarriedZoomInOut : 1;                      // Mask: 0x2, PropSize: 0x10xE65(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bInstantAccuracyReset : 1;                         // Mask: 0x4, PropSize: 0x10xE65(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceAlwaysPlayEquipAnim : 1;                     // Mask: 0x8, PropSize: 0x10xE65(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_31C : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4063[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bIgnoreReloadState : 1;                            // Mask: 0x1, PropSize: 0x10xE68(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPostSpawnMuzzleEffect : 1;                   // Mask: 0x2, PropSize: 0x10xE68(0x1)(ConstParm, Net, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_31D : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4064[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPGetCrosshairColor : 1;                       // Mask: 0x1, PropSize: 0x10xE6C(0x1)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnorePlayerReload : 1;                           // Mask: 0x2, PropSize: 0x10xE6C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseAmmoReloadState : 1;                           // Mask: 0x4, PropSize: 0x10xE6C(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_31E : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4065[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_31F : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPOnBurstStarted : 1;                          // Mask: 0x2, PropSize: 0x10xE70(0x1)(Edit, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnBurstFinished : 1;                         // Mask: 0x4, PropSize: 0x10xE70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBurstStartAnim : 1;                            // Mask: 0x8, PropSize: 0x10xE70(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBurstFinishAnim : 1;                           // Mask: 0x10, PropSize: 0x10xE70(0x1)(Net, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSecondaryActionStopsFire : 1;                     // Mask: 0x20, PropSize: 0x10xE70(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseAmmoSupportsAdjustedAmmoPerShot : 1;           // Mask: 0x40, PropSize: 0x10xE70(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsMeleeWeapon : 1;                                // Mask: 0x80, PropSize: 0x10xE70(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseTargetingAimDownSightsExposureAdjustment : 1;  // Mask: 0x1, PropSize: 0x10xE71(0x1)(Net, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAutoDestroyPlayerWeaponWhenSleeping : 1;          // Mask: 0x2, PropSize: 0x10xE71(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceOwnerControllerHighQualityViewerReplication : 1; // Mask: 0x4, PropSize: 0x10xE71(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bTargetingForceOwnerControllerHighQualityViewerReplication : 1; // Mask: 0x8, PropSize: 0x10xE71(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_320 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4067[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bBPDoClientCheckCanFire;                           // 0xE74(0x1)(ExportObject, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bRestrictTPVCameraYaw;                             // 0xE75(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4068[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TPVCameraYawRange;                                 // 0xE78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bFoceSimulatedTick;                                // 0xE7C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bWasLastFireFromGamePad;                           // 0xE7D(0x1)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDisableWeaponCrosshair;                           // 0xE7E(0x1)(BlueprintVisible, Net, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_406A[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class USkeletalMesh*                         DyePreviewMeshOverrideSK;                          // 0xE80(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UStaticMesh*                           DyePreviewMeshOverrideSM;                          // 0xE88(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bBPOverrideAspectRatio;                            // 0xE90(0x1)(ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bBPOverrideFPVMasterPoseComponent;                 // 0xE91(0x1)(ConstParm, BlueprintVisible, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bForceAllowMountedWeaponry;                        // 0xE92(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_406B[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FireCameraShakeSpreadScaleExponent;                // 0xE94(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FireCameraShakeSpreadScaleExponentLessThan;        // 0xE98(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FireCameraShakeSpreadScaleMultiplierLessThan;      // 0xE9C(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FireCameraShakeSpreadScaleMultiplier;              // 0xEA0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseFireCameraShakeScale;                          // 0xEA4(0x1)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bForceTickWithNoController;                        // 0xEA5(0x1)(Edit, ExportObject, BlueprintReadOnly, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_406C[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FInstantWeaponData                    InstantConfig;                                     // 0xEA8(0x30)(Edit, BlueprintReadOnly, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CurrentFiringSpread;                               // 0xED8(0x4)(ConstParm, BlueprintVisible, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_406D[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class APrimalBuff>             ScopedBuff;                                        // 0xEE8(0x30)(ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_406E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimSequence*                         OverrideTPVShieldAnimation;                        // 0xF20(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAllowTargetingDuringMeleeSwing;                   // 0xF28(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAllowDedicatedThirdPersonWeaponMeshTick;          // 0xF29(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_406F[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               FPVMuzzleLocationOffset;                           // 0xF30(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               TPVMuzzleLocationOffset;                           // 0xF48(0x18)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bForceTPV_EquippedWhileRiding;                     // 0xF60(0x1)(ConstParm, Net, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bCutsEnemyGrapplingCable;                          // 0xF61(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4071[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               FPVInventoryReequipOffset;                         // 0xF68(0x18)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDisableGamepadAimAssist;                          // 0xF80(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4072[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AimAssistStrengthWeapon;                           // 0xF84(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4073[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bForceTPVCameraOffset;                             // 0xF94(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         bUseBPSpawnMeleeEffects;                           // 0xF95(0x1)(Net, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4074[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FWeaponAnim                           StartBurstAnim;                                    // 0xF98(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           FinishBurstAnim;                                   // 0xFA8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4075[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        AmmoInClipOnReload;                                // 0xFBC(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EWeaponAmmoReloadState            AmmoReloadState;                                   // 0xFC0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4076[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                WeaponCameraSettingsOverrideClass;                 // 0xFD0(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bFPVScopedTargetingHidesNonWeaponHUD;              // 0xFD8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4077[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        LastSelectedMeleeAnim;                             // 0xFDC(0x4)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bImpactAttachFXUsesPawnMesh : 1;                   // Mask: 0x1, PropSize: 0x10xFE0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_321 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4078[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          MeleeAnimListImpactFXAttachSockets1P;              // 0xFE8(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FName>                          MeleeAnimListImpactFXAttachSockets3P;              // 0xFF8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOverrideMeleeSwingSockets : 1;               // Mask: 0x1, PropSize: 0x10x1008(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_322 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_407A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            RemoveIcon;                                        // 0x1010(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            RemovalOptionsIcon;                                // 0x1018(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            LockToIcon;                                        // 0x1020(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            UnlockFromIcon;                                    // 0x1028(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WeaponDurabilityPercent;                           // 0x1030(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WeaponDurabilityPercentUpdateInterval;             // 0x1034(0x4)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPOnMaxDurability : 1;                         // Mask: 0x1, PropSize: 0x10x1038(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_323 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_407C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FluidSimSplashStrength;                            // 0x103C(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x1040(0x8)(Edit, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AShooterWeapon* GetDefaultObj();

	void UsesAmmo(bool* ReturnValue);
	void UseAmmo(int32 UseAmmoAmountOverride);
	void UpdateDurabilityMaterialParams();
	void UpdateAmmoReloadState();
	void ToggleAccessory();
	void StopWeaponAnimation(const struct FWeaponAnim& Animation, bool bReplicate, bool* bReplicateToInstigator);
	void StopSecondaryActionEvent();
	void StopFire();
	void StopAltFire();
	void StartUnequipEvent();
	void StartUnequip();
	void StartSecondaryActionEvent();
	void StartFire(bool bFromGamepad);
	void StartAltFire();
	void SetAmmoReloadState(enum class EWeaponAmmoReloadState* NewState);
	void SetAmmoInClip(int32 NewAmmo);
	void SetAccessoryEnabled(bool* bEnabled);
	void ServerToggleAccessory();
	void ServerStopSecondaryAction();
	void ServerStopFire();
	void ServerStopAltFire();
	void ServerStartSecondaryAction();
	void ServerStartReload();
	void ServerStartFire();
	void ServerStartAltFire();
	void ServerSetMeleeAnimIndex(int32 SelectedMeleeAnim);
	int32 ServerSetColorizeRegion(bool bValToUse);
	void SelectMeleeAttackAnim(int32 ForceSelectedAnim, struct FWeaponAnim* ReturnValue);
	void ReloadWeapon();
	class USoundCue* PlayWeaponSound(class UAudioComponent** ReturnValue);
	void PlayWeaponBreakAnimation();
	bool PlayWeaponAnimationEx(const struct FWeaponAnim& Animation, float* InPlayRate, bool* bPlayBothFirstAndThirdPerson, bool bReplicate, bool* bReplicateToInstigator, bool* bPauseOnFinish1P, float* ReturnValue);
	bool PlayWeaponAnimation(const struct FWeaponAnim& Animation, bool* bPlayBothFirstAndThirdPerson, bool bReplicate, bool* bReplicateToInstigator, bool* bPauseOnFinish1P, float* ReturnValue);
	void PlayUseHarvestAnimation();
	void OnRep_WeaponDurabilityPercent();
	void OnRep_NetLoopedWeaponFire();
	void OnRep_MyPawn();
	void OnRep_CurrentAmmoInClip();
	void OnRep_AccessoryToggle();
	void OnInstigatorSleepingStateChanged();
	void OnInstigatorPlayDyingEvent();
	void OnDurabilityChanged(float NewDurabilityPercent, bool bForceUpdate);
	void OnAttachedToPawn();
	int32 NetSetLastAttackMontage();
	void LoadPrimalCameraWeaponOverride(class UClass* WeaponCameraOverrideClass);
	void IsPlayingWeaponAnimMontage(const struct FWeaponAnim& WeaponAnimMontage, float* TimeFromEndToConsiderFinished, bool* ReturnValue);
	void IsOwningClient(bool* ReturnValue);
	void IsLocallyOwned(bool* ReturnValue);
	void IsInMeleeAttack(bool* ReturnValue);
	void IsFiring(bool* ReturnValue);
	void IsClimbing(bool* ReturnValue);
	void HasInfiniteAmmo(bool* ReturnValue);
	void GetWeaponMesh(class USkeletalMeshComponent** ReturnValue);
	void GetWeaponDamageMultiplier(float* ReturnValue);
	void GetWeaponCameraSettingsOverride(class UPrimalCameraConfig_WeaponOverride** ReturnValue);
	void GetWeaponAttackPlayRate(float* ReturnValue);
	void GetStandingAnimation(float OutBlendInTime, float OutBlendOutTime, class UAnimSequence** ReturnValue);
	void GetReloadAnim(bool bOnlyCheckRegularReload, struct FWeaponAnim* ReturnValue);
	void GetPawnOwner(class AShooterCharacter** ReturnValue);
	void GetMuzzleLocation(struct FVector* ReturnValue);
	void GetMuzzleDirection(struct FVector* ReturnValue);
	void GetDebugInfoString(class FString* ReturnValue);
	void GetCurrentAmmoInClip(int32* ReturnValue);
	void GetCurrentAmmo(int32* ReturnValue);
	int32 GetColorizeRegionActivated(bool* ReturnValue);
	void GetAmmoReloadState(enum class EWeaponAmmoReloadState* ReturnValue);
	void GetAdjustedAim(struct FVector* ReturnValue);
	void ForceUpdateClientAmmo();
	void ForceTPVTargetingAnimation(bool* ReturnValue);
	void ForcesTPVCameraOffset(bool* ReturnValue);
	void ForceMeshUpdate(bool bIsFirstPerson);
	class FName FindComponentByName(class USceneComponent** ReturnValue);
	void DoMeleeAttack();
	void DoHandleFiring();
	void ConsumeAmmoItem(int32 Quantity);
	void ClientStopSimulatingWeaponFire();
	void ClientStartReload();
	void ClientStartMuzzleFX();
	struct FVector ClientSpawnMeleeEffects(struct FVector* ShootDir);
	void ClientSimulateWeaponFire();
	int32 ClientSetClipAmmo(bool* bOnlyUpdateItem);
	void ClientPlayShieldHitAnim();
	void ClientClearPendingReload();
	void ClearClientReload();
	void CheckItemAssocation();
	void CanReload(bool* ReturnValue);
	void CanMeleeAttack(bool* ReturnValue);
	void CanFire(bool* bForceAllowSubmergedFiring, bool* ReturnValue);
	void BPWeaponZoom(bool* bZoomingIn);
	float BPWeaponDealDamage(struct FVector* ShootDir, class UClass** DamageType, int32* ReturnValue);
	void BPWeaponCanFire(bool* ReturnValue);
	void BPTryFireWeapon(bool* ReturnValue);
	void BPToggleAccessoryFailed();
	void BPToggleAccessory();
	void BPStopMeleeAttack();
	void BPStartEquippedNotify();
	struct FVector BPSpawnMeleeEffects(struct FVector* ShootDir);
	class AActor* BPShouldDealDamage(bool* ReturnValue);
	void BPRequestReload();
	void BPRemainEquipped(bool* ReturnValue);
	void BPPreventSwitchingWeapon(bool* ReturnValue);
	void BPPostSpawnMuzzleEffect(class UParticleSystemComponent** NewMuzzlePSC);
	void BPOverrideRootRotationOffset(struct FRotator* InRootRotation, struct FRotator* ReturnValue);
	void BPOverrideMeleeSwingSocket(class FName* FromSocket, class FName* ReturnValue);
	void BPOverrideFPVMasterPoseComponent(class USkeletalMeshComponent** ReturnValue);
	void BPOverrideAimDirection(struct FVector* DesiredAimDirection, struct FVector* ReturnValue);
	bool BPOnWeaponAnimPlayedNotify(const struct FWeaponAnim& Animation, float* InPlayRate, bool* bPlayBothFirstAndThirdPerson, bool bReplicate, bool* bReplicateToInstigator, bool* bPauseOnFinish1P);
	void BPOnStopTargeting(bool* bFromGamepadLeft);
	void BPOnStartTargeting(bool* bFromGamepadLeft);
	void BPOnScoped();
	void BPOnMaxDurability();
	void BPOnBurstStarted();
	void BPOnBurstFinished();
	void BPModifyFOV(float* InFOV, float* ReturnValue);
	void BPMeleeAttackStarted();
	void BPLostController();
	void BPIsValidUnStasisCaster(bool* ReturnValue);
	void BPHandleMeleeAttack();
	void BPGlobalFireWeapon();
	void BPGetTPVCameraOffset(struct FVector* ReturnValue);
	void BPGetTargetingTooltipInfoLabel(class FText* ReturnValue);
	void BPGetSelectedMeleeAttackAnim(struct FWeaponAnim* ReturnValue);
	void BPGetSeatingAnimation(class UAnimSequence** ReturnValue);
	void BPGetDebugInfoString(class FString* ReturnValue);
	void BPGetCurrentState(enum class EWeaponState* ReturnValue);
	void BPGetCrosshairColor(struct FColor* ReturnValue);
	void BPGetActorForTargetingTooltip(class AActor** ReturnValue);
	void BPForceTPVTargetingAnimation(bool* ReturnValue);
	void BPFireWeapon();
	void BPFiredWeapon();
	void BPEndPlay();
	class AShooterHUD* BPDrawHud();
	void BPConstrainAspectRatio(float* OutAspectRatio, bool* ReturnValue);
	void BPCanToggleAccessory(bool* ReturnValue);
	void BPCanMeleeAttack(bool* ReturnValue);
	void BPCanEquip(class AShooterCharacter* ByCharacter, bool* ReturnValue);
	void BPAppliedPrimalItemToWeapon();
	class UAnimNotifyState* BPAnimNotifyCustomState_End(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);
	class UAnimNotifyState* BPAnimNotifyCustomState_Begin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);
	class UAnimNotify* BPAnimNotifyCustomEvent(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);
	void BPAllowNativeFireWeapon(bool* ReturnValue);
	void BPAdjustAmmoPerShot(int32* ReturnValue);
	void BP_OnReloadNotify();
	void AllowUnequip(bool* ReturnValue);
	void AllowTargeting(bool* ReturnValue);
	void AllowedToFire(bool* bForceAllowSubmergedFiring, bool* ReturnValue);
};

// 0xD8 (0x1120 - 0x1048)
// Class ShooterGame.ShooterWeapon_Projectile
class AShooterWeapon_Projectile : public AShooterWeapon
{
public:
	bool                                         bUseAmmoOnFireProjectile;                          // 0x1048(0x1)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4095[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ProjectileClass;                                   // 0x1050(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	class USoundCue*                             FireProjectileSound;                               // 0x1058(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  ProjectileMesh3P;                                  // 0x1060(0x8)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ProjectileAttachPoint3P;                           // 0x1068(0x8)(Edit, ConstParm, Net, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4097[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bSpawnProjectileOnClient;                          // 0x1074(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseBPSelectProjectileToFire;                      // 0x1075(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4098[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ProjectileSpreadYaw;                               // 0x1078(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ProjectileSpreadPitch;                             // 0x107C(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ServerMaxProjectileAngleError;                     // 0x1080(0x4)(Net, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ServerMaxProjectileOriginError;                    // 0x1084(0x4)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bServerFireProjectileForceUpdateAimActors : 1;     // Mask: 0x1, PropSize: 0x10x1088(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseHideProjectileAnimEvents : 1;                  // Mask: 0x2, PropSize: 0x10x1088(0x1)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_324 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4099[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  Mesh1PProjectileBoneName;                          // 0x108C(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LockOnYScreenPercentage;                           // 0x1094(0x4)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseLockOn;                                        // 0x1098(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_409A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LockOnTime;                                        // 0x109C(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CurrentLockOnTime;                                 // 0x10A0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LockOnMaxTraceDistance;                            // 0x10A4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               LockOnTraceBoxExtent;                              // 0x10A8(0x18)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    ActorLockedMI;                                     // 0x10C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              ActorLockedMID;                                    // 0x10C8(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    ActorInLockedAreaMI;                               // 0x10D0(0x8)(Edit, ExportObject, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              ActorInLockedAreaMID;                              // 0x10D8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bHasLockedTarget;                                  // 0x10E0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_409C[0x3F];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterWeapon_Projectile* GetDefaultObj();

	void SetLockedTarget(class AActor** Actor, bool bIsLocked);
	int32 ServerFireProjectileEx(struct FVector_NetQuantizeNormal* ShootDir, float* Speed, int32 ProjectileID);
	struct FVector ServerFireProjectile(struct FVector_NetQuantizeNormal* ShootDir, int32 ProjectileID);
	void OnUnHideProjectile();
	void OnHideProjectile();
	void Listener_LockOn_Update(bool Reset);
	void Listener_LockOn_Stop();
	int32 GetTrajectoryTarget(float TotalTime, struct FHitResult* ReturnValue);
	int32 ClientsFireProjectileEx(struct FVector_NetQuantizeNormal* ShootDir, float* Speed, int32 ProjectileID);
	struct FVector ClientsFireProjectile(struct FVector_NetQuantizeNormal* ShootDir, int32 ProjectileID);
	void CheckRefireTimer();
	void BPSelectProjectileToFire(class UClass* ProjectileClassOverride, class USoundCue* FireSoundOverride, bool bSpawnOnClient, float* OverrideMaxSpeed);
	class AShooterProjectile* BPOnSpawnedProjectile();
};

// 0x88 (0x11A8 - 0x1120)
// Class ShooterGame.PrimalWeaponBow
class APrimalWeaponBow : public AShooterWeapon_Projectile
{
public:
	float                                        MinimumInitialSpeed;                               // 0x1120(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaximumInitialSpeed;                               // 0x1124(0x4)(ConstParm, ExportObject, Net, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PullingTimeForMaximumSpeed;                        // 0x1128(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DamageFactorForSlowArrows;                         // 0x112C(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DamageFactorForFastArrows;                         // 0x1130(0x4)(Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinimumPullingTimeToFire;                          // 0x1134(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDisablePullingOnCrouch : 1;                       // Mask: 0x1, PropSize: 0x10x1138(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDisablePullingOnProne : 1;                        // Mask: 0x2, PropSize: 0x10x1138(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysPlayTPVPullStringAnim : 1;                  // Mask: 0x4, PropSize: 0x10x1138(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_325 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_409F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                MaxPullCameraShake;                                // 0x1140(0x8)(Edit, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ArrowBoneName;                                     // 0x1148(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           PullStringAnim;                                    // 0x1150(0x10)(Edit, BlueprintReadOnly, Net, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHideWeaponOnLaunch : 1;                           // Mask: 0x1, PropSize: 0x10x1160(0x1)(ConstParm, BlueprintVisible, Net, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseArrowMesh1P : 1;                               // Mask: 0x2, PropSize: 0x10x1160(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHideOriginalArrowBone1P : 1;                      // Mask: 0x4, PropSize: 0x10x1160(0x1)(BlueprintReadOnly, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAttachArrowToWeaponMesh3P : 1;                    // Mask: 0x8, PropSize: 0x10x1160(0x1)(ConstParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bReloadOnEmptyClip : 1;                            // Mask: 0x10, PropSize: 0x10x1160(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_326 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_40A0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  ArrowOnWeaponAttachPoint3P;                        // 0x1164(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40A1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UStaticMeshComponent*                  ArrowMesh3P;                                       // 0x1170(0x8)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ArrowAttachPoint3P;                                // 0x1178(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  ArrowMesh1P;                                       // 0x1180(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ArrowAttachPoint1P;                                // 0x1188(0x8)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPendingPullString : 1;                            // Mask: 0x1, PropSize: 0x10x1190(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bNewPullStringEvent : 1;                           // Mask: 0x2, PropSize: 0x10x1190(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsPullingString : 1;                              // Mask: 0x4, PropSize: 0x10x1190(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsPlayingPullStringAnim : 1;                      // Mask: 0x8, PropSize: 0x10x1190(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDidFireWeapon : 1;                                // Mask: 0x10, PropSize: 0x10x1190(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsLastArrow : 1;                                  // Mask: 0x20, PropSize: 0x10x1190(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDontRequireIdleForReload : 1;                     // Mask: 0x40, PropSize: 0x10x1190(0x1)(Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPCanStartFire : 1;                            // Mask: 0x80, PropSize: 0x10x1190(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceServerCheckPullingTime : 1;                  // Mask: 0x1, PropSize: 0x10x1191(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_327 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_40A3[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PullingTime;                                       // 0x1194(0x4)(Net, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ProjectileSpeed;                                   // 0x1198(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40A4[0xC];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalWeaponBow* GetDefaultObj();

	void UpdateTPVBowAnimation();
	void UnHideArrow();
	void ServerSetPullString(bool* bIsPulling);
	void HideArrow();
	void BPSimulatedResetSetPullingTime();
	void BPCanStartFire(bool* ReturnValue);
};

// 0x8 (0x11B0 - 0x11A8)
// Class ShooterGame.PrimalWeaponBoomerang
class APrimalWeaponBoomerang : public APrimalWeaponBow
{
public:
	float                                        ChanceToBreak;                                     // 0x11A8(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bClientHideBoomerang : 1;                          // Mask: 0x1, PropSize: 0x10x11AC(0x1)(EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40A6[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalWeaponBoomerang* GetDefaultObj();

	void OnRep_ClientHideBoomerang();
};

// 0x8 (0x1050 - 0x1048)
// Class ShooterGame.ShooterWeapon_Melee
class AShooterWeapon_Melee : public AShooterWeapon
{
public:
	bool                                         bUseAltFireOnNormalFire;                           // 0x1048(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40A7[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterWeapon_Melee* GetDefaultObj();

};

// 0xC0 (0x1110 - 0x1050)
// Class ShooterGame.PrimalWeaponElectronicBinoculars
class APrimalWeaponElectronicBinoculars : public AShooterWeapon_Melee
{
public:
	float                                        YPosDistance;                                      // 0x1050(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        XPosDistance;                                      // 0x1054(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CompSize;                                          // 0x1058(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DistanceX;                                         // 0x105C(0x4)(ExportObject, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DistanceY;                                         // 0x1060(0x4)(ConstParm, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DistanceSize;                                      // 0x1064(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                NightVisionBuff;                                   // 0x1068(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USceneComponent*                       AudioListener;                                     // 0x1070(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    ScopeCompassMI;                                    // 0x1078(0x8)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              ScopeCompassMID;                                   // 0x1080(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    LatitudeMI;                                        // 0x1088(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              LatitudeMID;                                       // 0x1090(0x8)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    LongitudeMI;                                       // 0x1098(0x8)(Edit, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              LongitudeMID;                                      // 0x10A0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LatLongInterpSpeed;                                // 0x10A8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40AB[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              CurrentCompassAngle;                               // 0x10B8(0x18)(Edit, ExportObject, Net, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CompassNorthAngle;                                 // 0x10D0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CompassInterpSpeed;                                // 0x10D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LatitudeOrigin;                                    // 0x10D8(0x4)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LatitudeScale;                                     // 0x10DC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LongitudeOrigin;                                   // 0x10E0(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LongitudeScale;                                    // 0x10E4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SoundFadeInSpeed;                                  // 0x10E8(0x4)(BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinTargetingFOV;                                   // 0x10EC(0x4)(Edit, ConstParm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxTargetingFOV;                                   // 0x10F0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40AC[0x16];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bZoomIn;                                           // 0x110A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bZoomOut;                                          // 0x110B(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIsNightVisionOn;                                  // 0x110C(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40AE[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalWeaponElectronicBinoculars* GetDefaultObj();

	bool SetBinocularsTargeting();
	int8 ServerSetActivateNightVision();
	void GetZoomFloat(float* ReturnValue);
	int8 ClientSetActivateNightVision();
};

// 0x2F0 (0x1340 - 0x1050)
// Class ShooterGame.PrimalWeaponGPS
class APrimalWeaponGPS : public AShooterWeapon_Melee
{
public:
	class USkeletalMeshComponent*                CompassMesh1P;                                     // 0x1050(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                CompassMesh3P;                                     // 0x1058(0x8)(ConstParm, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                MapMesh3P;                                         // 0x1060(0x8)(BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UStaticMesh*                           AssetSM_MarkerMesh;                                // 0x1068(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UStaticMesh*                           AssetSM_PlayerMarkerMesh;                          // 0x1070(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UStaticMesh*                           AssetSM_BalloonMarkerMesh;                         // 0x1078(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MarkerMapScaleX;                                   // 0x1080(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MarkerMapScaleY;                                   // 0x1084(0x4)(Edit, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MarkerOffsetZ;                                     // 0x1088(0x4)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40B0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              MarkerRotationMin;                                 // 0x1090(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              MarkerRotationMax;                                 // 0x10A8(0x18)(Edit, BlueprintReadOnly, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxMapMarkers;                                     // 0x10C0(0x4)(Edit, ExportObject, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FColor                                MarkerTextColor;                                   // 0x10C4(0x4)(DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FColor                                PlayerMarkerTextColor;                             // 0x10C8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40B1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UStaticMeshComponent*>          MarkerComponents;                                  // 0x10D0(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40B2[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UStaticMeshComponent*                  PlayerLocationMArkerComponent;                     // 0x10F0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40B4[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UStaticMeshComponent*                  ItemBalloonMarkerComponent;                        // 0x1108(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MapAttachPoint3P;                                  // 0x1110(0x8)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CompassAttachPoint1P;                              // 0x1118(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  GPSBoneName1P;                                     // 0x1120(0x8)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           ZoomInMapAnim;                                     // 0x1128(0x10)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           ZoomInGPSAnim;                                     // 0x1138(0x10)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           ZoomInCompassAnim;                                 // 0x1148(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           ZoomOutMapAnim;                                    // 0x1158(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           ZoomOutGPSAnim;                                    // 0x1168(0x10)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           ZoomOutCompassAnim;                                // 0x1178(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           DisplayMapAnim;                                    // 0x1188(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           DisplayGPSAnim;                                    // 0x1198(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           DisplayCompassAnim;                                // 0x11A8(0x10)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           UnequipMapAnim;                                    // 0x11B8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           UnequipGPSAnim;                                    // 0x11C8(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           UnequipCompassAnim;                                // 0x11D8(0x10)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           UnequipCompassAndMapAnim;                          // 0x11E8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           MeleeMapAnim;                                      // 0x11F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           MeleeGPSAnim;                                      // 0x1208(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           MeleeCompassAnim;                                  // 0x1218(0x10)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           MeleeCompassMapAnim;                               // 0x1228(0x10)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          TPV_MapOnlyIdle;                                   // 0x1238(0x8)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          TPV_GPSOnlyIdle;                                   // 0x1240(0x8)(ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          TPV_MapAndGPSIdle;                                 // 0x1248(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DigitParameterName;                                // 0x1250(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        LatitudeMaterialIndex1;                            // 0x1258(0x4)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        LatitudeMaterialIndex2;                            // 0x125C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        LatitudeMaterialIndex3;                            // 0x1260(0x4)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        LongitudeMaterialIndex1;                           // 0x1264(0x4)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        LongitudeMaterialIndex2;                           // 0x1268(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        LongitudeMaterialIndex3;                           // 0x126C(0x4)(Edit, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MapMaterialIndex;                                  // 0x1270(0x4)(Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LatitudeOrigin;                                    // 0x1274(0x4)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LatitudeScale;                                     // 0x1278(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LongitudeOrigin;                                   // 0x127C(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LongitudeScale;                                    // 0x1280(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        GPSCompassMaterialIndex;                           // 0x1284(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CompassCenterParameterName;                        // 0x1288(0x8)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FogOfWarTextureParameterName;                      // 0x1290(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CompassNorthAngle;                                 // 0x1298(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CompassInterpSpeed;                                // 0x129C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SwingSpeed;                                        // 0x12A0(0x4)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxSwingAngle;                                     // 0x12A4(0x4)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ItemBalloonLocation;                               // 0x12A8(0x18)(ConstParm, BlueprintReadOnly, Net, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bShowMap : 1;                                      // Mask: 0x1, PropSize: 0x10x12C0(0x1)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bShowGPS : 1;                                      // Mask: 0x2, PropSize: 0x10x12C0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseCompassInsteadOfGPS : 1;                       // Mask: 0x4, PropSize: 0x10x12C0(0x1)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bZoomInMap : 1;                                    // Mask: 0x8, PropSize: 0x10x12C0(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bZoomInGPS : 1;                                    // Mask: 0x10, PropSize: 0x10x12C0(0x1)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bWasFirstPerson : 1;                               // Mask: 0x20, PropSize: 0x10x12C0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_328 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_40B9[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              CurrentCompassAngle;                               // 0x12C8(0x18)(Edit, ExportObject, Net, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CurrentSwingAngle;                                 // 0x12E0(0x4)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CurrentSwingFactor;                                // 0x12E4(0x4)(ExportObject, Net, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CurrentSwingTime;                                  // 0x12E8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PreviousPawnYaw;                                   // 0x12EC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              GPSCompassMaterialInstance;                        // 0x12F0(0x8)(ExportObject, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        PreviousLatitudeNumber;                            // 0x12F8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	int32                                        PreviousLongitudeNumber;                           // 0x12FC(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	int32                                        PreviousBalloonLatitudeNumber;                     // 0x1300(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        PreviousBalloonLongitudeNumber;                    // 0x1304(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              LatitudeDigit1_MI;                                 // 0x1308(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              LatitudeDigit2_MI;                                 // 0x1310(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              LatitudeDigit3_MI;                                 // 0x1318(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              LongitudeDigit1_MI;                                // 0x1320(0x8)(EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              LongitudeDigit2_MI;                                // 0x1328(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              LongitudeDigit3_MI;                                // 0x1330(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              Map_MI;                                            // 0x1338(0x8)(ExportObject, Net, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalWeaponGPS* GetDefaultObj();

	void ServerShowNone();
	void ServerShowMapOnly();
	void ServerShowGPSOnly();
	void ServerShowBoth();
	bool ServerSetUseCompassInsteadOfGPS();
	void RefreshUseCompass();
};

// 0x30 (0x1150 - 0x1120)
// Class ShooterGame.PrimalWeaponGrapplingHook
class APrimalWeaponGrapplingHook : public AShooterWeapon_Projectile
{
public:
	bool                                         bDetachGrapHookOnUnequip;                          // 0x1120(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bPreventReeling;                                   // 0x1121(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bPullingRope;                                      // 0x1122(0x1)(ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40BC[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastTimeWithGrapHook;                              // 0x1128(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USceneComponent*                       CableAttach1P;                                     // 0x1130(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USceneComponent*                       CableAttach3P;                                     // 0x1138(0x8)(Edit, ConstParm, ExportObject, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             ReelInSoundCue;                                    // 0x1140(0x8)(Edit, ConstParm, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             ReelOutSoundCue;                                   // 0x1148(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalWeaponGrapplingHook* GetDefaultObj();

};

// 0x88 (0x11A8 - 0x1120)
// Class ShooterGame.PrimalWeaponGrenade
class APrimalWeaponGrenade : public AShooterWeapon_Projectile
{
public:
	struct FWeaponAnim                           PrepareThrowAnim;                                  // 0x1120(0x10)(Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           QuickThrowAnim;                                    // 0x1130(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           OvercookHurtAnim;                                  // 0x1140(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  GrenadeBoneName;                                   // 0x1150(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  GrenadePinBoneName;                                // 0x1158(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxGrenadeLife;                                    // 0x1160(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDontCookGrenade : 1;                              // Mask: 0x1, PropSize: 0x10x1164(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHideGrenadeOnFireProjectile : 1;                  // Mask: 0x2, PropSize: 0x10x1164(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnablePrepareThrowAnim : 1;                       // Mask: 0x4, PropSize: 0x10x1164(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreventCookingWhileProne : 1;                     // Mask: 0x8, PropSize: 0x10x1164(0x1)(Edit, Net, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_329 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	bool                                         bIsThrowingGrenade;                                // 0x1165(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIsCookingGrenade;                                 // 0x1166(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseBlueprintSpeed;                                // 0x1167(0x1)(Edit, ConstParm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bHideSkeletalMesh;                                 // 0x1168(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40BE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CookingTime;                                       // 0x116C(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ProjectileOrigin;                                  // 0x1170(0x18)(Edit, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ProjectileShootDir;                                // 0x1188(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40BF[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsWeapScout;                                      // 0x11A1(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bPlayBothFirstAndThirdPersonOnStartFire;           // 0x11A2(0x1)(Edit, ConstParm, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40C0[0x5];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalWeaponGrenade* GetDefaultObj();

	void UnHidePin();
	void UnHideGrenade();
	void ServerFixScout();
	void HidePin();
	void HideGrenade();
	void BPGetProjectileSpeed(float* ReturnValue);
	void BPFixScout();
};

// 0xE0 (0x34A0 - 0x33C0)
// Class ShooterGame.PrimalWheeledVehicleCharacter
class APrimalWheeledVehicleCharacter : public APrimalDinoCharacter
{
public:
	float                                        RetainPlayerCameraRotationWhileMovingFor;          // 0x33C0(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CameraRotationInterpolationSpeed;                  // 0x33C4(0x4)(Edit, ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UPrimalWheeledVehicleDustType*         DustType;                                          // 0x33C8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              DustPSC[0x4];                                      // 0x33D0(0x20)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UAudioComponent*                       EngineAC;                                          // 0x33F0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UAudioComponent*                       HonkAC;                                            // 0x33F8(0x8)(BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UAudioComponent*                       SkidAC;                                            // 0x3400(0x8)(BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             SkidSound;                                         // 0x3408(0x8)(ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             HonkSound;                                         // 0x3410(0x8)(Net, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             SkidSoundStop;                                     // 0x3418(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             LandingSound;                                      // 0x3420(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             ImpactSound;                                       // 0x3428(0x8)(ConstParm, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SkidFadeoutTime;                                   // 0x3430(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SkidThresholdVelocity;                             // 0x3434(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LongSlipSkidThreshold;                             // 0x3438(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LateralSlipSkidThreshold;                          // 0x343C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SkidDurationRequiredForStopSound;                  // 0x3440(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40C1[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SpringCompressionLandingThreshold;                 // 0x3450(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40C2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UParticleSystem*                       DeathFX;                                           // 0x3458(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        UpForce;                                           // 0x3460(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BackForce;                                         // 0x3464(0x4)(Edit, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bFollowCamera;                                     // 0x3468(0x1)(Edit, Net, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40C3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinimumDamageSpeed;                                // 0x346C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40C4[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector                               CenterTraceLocationOffset;                         // 0x3488(0x18)(Edit, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalWheeledVehicleCharacter* GetDefaultObj();

	void StopHonk();
	void StartHonk();
	bool ServerHonk();
	bool NetHonk();
};

// 0x90 (0xC0 - 0x30)
// Class ShooterGame.PrimalWheeledVehicleDustType
class UPrimalWheeledVehicleDustType : public UDataAsset
{
public:
	class UParticleSystem*                       DefaultFX;                                         // 0x30(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       ConcreteFX;                                        // 0x38(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       DirtFX;                                            // 0x40(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       WaterFX;                                           // 0x48(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       MetalFX;                                           // 0x50(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       WoodFX;                                            // 0x58(0x8)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       GrassFX;                                           // 0x60(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       FleshFX;                                           // 0x68(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       LeavesFX;                                          // 0x70(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       RockFX;                                            // 0x78(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       SandFX;                                            // 0x80(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       SnowFX;                                            // 0x88(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DefaultMinSpeed;                                   // 0x90(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ConcreteMinSpeed;                                  // 0x94(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DirtMinSpeed;                                      // 0x98(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WaterMinSpeed;                                     // 0x9C(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MetalMinSpeed;                                     // 0xA0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WoodMinSpeed;                                      // 0xA4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GrassMinSpeed;                                     // 0xA8(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FleshMinSpeed;                                     // 0xAC(0x4)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LeavesMinSpeed;                                    // 0xB0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RockMinSpeed;                                      // 0xB4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SandMinSpeed;                                      // 0xB8(0x4)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SnowMinSpeed;                                      // 0xBC(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalWheeledVehicleDustType* GetDefaultObj();

};

// 0x190 (0x248 - 0xB8)
// Class ShooterGame.PrimalWindSourceComponent
class UPrimalWindSourceComponent : public UActorComponent
{
public:
	uint8                                        bEnableFluidInteraction : 1;                       // Mask: 0x1, PropSize: 0x10xB8(0x1)(BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, SubobjectReference)
	uint8                                        bEnableBubbleSpawnWhenUnderwaterIfWaterInteractionIsEnabled : 1; // Mask: 0x2, PropSize: 0x10xB8(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnableFoliageInteraction : 1;                     // Mask: 0x4, PropSize: 0x10xB8(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bFluidInteractionWasThrottled : 1;                 // Mask: 0x8, PropSize: 0x10xB8(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bFoliageInteractionWasThrottled : 1;               // Mask: 0x10, PropSize: 0x10xB8(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnableFoliageInteractionOnBabies : 1;             // Mask: 0x20, PropSize: 0x10xB8(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnableFluidEmissionTexture : 1;                   // Mask: 0x40, PropSize: 0x10xB8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnabled : 1;                                      // Mask: 0x80, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Transient, EditConst, GlobalConfig)
	uint8                                        bUseVolumetricDispatcher : 1;                      // Mask: 0x1, PropSize: 0x10xB9(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTriggerConstant : 1;                              // Mask: 0x2, PropSize: 0x10xB9(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bTriggerPeriodically : 1;                          // Mask: 0x4, PropSize: 0x10xB9(0x1)(Edit, ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bTriggerManual : 1;                                // Mask: 0x8, PropSize: 0x10xB9(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseActorVelForStrength : 1;                       // Mask: 0x10, PropSize: 0x10xB9(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseActorVelForDirection : 1;                      // Mask: 0x20, PropSize: 0x10xB9(0x1)(Edit, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPExitedFluidSurface : 1;                      // Mask: 0x40, PropSize: 0x10xB9(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPImpactedFluidSurface : 1;                    // Mask: 0x80, PropSize: 0x10xB9(0x1)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPImpactingFluidSurfaceTick : 1;               // Mask: 0x1, PropSize: 0x10xBA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnableDebug : 1;                                  // Mask: 0x2, PropSize: 0x10xBA(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        SelectThisComponent : 1;                           // Mask: 0x4, PropSize: 0x10xBA(0x1)(ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        SpecialCheck_DetermineInnerSphereImpactsFluid : 1; // Mask: 0x8, PropSize: 0x10xBA(0x1)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bClearedParameters : 1;                            // Mask: 0x10, PropSize: 0x10xBA(0x1)(ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bWasEnabled : 1;                                   // Mask: 0x20, PropSize: 0x10xBA(0x1)(Edit, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_32B : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class EWindSourceMode                   WindSourceMode;                                    // 0xBB(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40DB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               WindSourceRelativeOffset;                          // 0xC0(0x18)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ExtraCapsuleWindSourceRelativeOffset;              // 0xD8(0x18)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RadiusInner;                                       // 0xF0(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RadiusOuter;                                       // 0xF4(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EEffectScope                      EffectScope;                                       // 0xF8(0x1)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40DC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  CharacterAttachmentSocket;                         // 0xFC(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Priority;                                          // 0x104(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	float                                        MinimumFoliageInteractionRadiusForBabies;          // 0x108(0x4)(Edit, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Strength;                                          // 0x10C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        VelStrengthMultiplierXY;                           // 0x110(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        VelStrengthMultiplierZ;                            // 0x114(0x4)(ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlasticityAmount;                                  // 0x118(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlasticityAmountAbsolute;                          // 0x11C(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector3f                             SourceScale;                                       // 0x120(0xC)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OscillationSpeed;                                  // 0x12C(0x4)(ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector3f                             DirectionalRadial;                                 // 0x130(0xC)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BendAmount;                                        // 0x13C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinVelocityThresholdSquared;                       // 0x140(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WindSpeed;                                         // 0x144(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WindHeading;                                       // 0x148(0x4)(EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WindFrequency;                                     // 0x14C(0x4)(ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WindStrength;                                      // 0x150(0x4)(Edit, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TriggerPeriodicInterval;                           // 0x154(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector3f                             CurrentVelocity;                                   // 0x158(0xC)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector3f                             CurrentAcceleration;                               // 0x164(0xC)(Edit, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector3f                             ExtraCapsuleCurrentVelocity;                       // 0x170(0xC)(ConstParm, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector3f                             ExtraCapsuleCurrentAcceleration;                   // 0x17C(0xC)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       LastTriggeredPeriodicTime;                         // 0x188(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       BeginPlayTime;                                     // 0x190(0x8)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               PreviousLocation;                                  // 0x198(0x18)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector3f                             PreviousVelocity;                                  // 0x1B0(0xC)(Edit, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_40DF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ExtraCapsulePreviousLocation;                      // 0x1C0(0x18)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector3f                             ExtraCapsulePreviousVelocity;                      // 0x1D8(0xC)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40E0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UCurveFloat*                           PlasticityCurve;                                   // 0x1E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class APrimalFoliageSolver*                  MyFoliageSolver;                                   // 0x1F0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class AVolumetricDispatcher*                 MyDispatcher;                                      // 0x1F8(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ExtraCapsuleAttachmentSocket;                      // 0x200(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AttachmentSocket;                                  // 0x208(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        CollectionIndex;                                   // 0x210(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40E1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimitiveComponent*                   AttachmentComponent;                               // 0x218(0x8)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint64                                       LastFrameBelowFluidSurface;                        // 0x220(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint64                                       LastFrameAboveFluidSurface;                        // 0x228(0x8)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         SpecialCheck_IsInnerSphereAboveWater;              // 0x230(0x1)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40E2[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	uint64                                       LastFrameAppliedBySolver;                          // 0x238(0x8)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40E3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        BubbleComponentIsActive : 1;                       // Mask: 0x1, PropSize: 0x10x244(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40E4[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalWindSourceComponent* GetDefaultObj();

	void SetAttachment(class UPrimitiveComponent** NewAttachmentComponent, int32* AttachmentCollectionIndex);
	void RefreshAttachment();
	void IsInteractionEnabled(bool* ReturnValue);
	void IsAttachedToPrimalStructure(bool* ReturnValue);
	void IsAttachedToPrimalCharacter(bool* ReturnValue);
	void GetScaledRadiiForFoliageInteraction(class UPrimalWindSourceComponent* WindSource, float* Inner, float Outer);
	void GetCurrentWindSourceLocation(struct FVector* ReturnValue);
	void GetCurrentExtraCapsuleWindSourceLocation(struct FVector* ReturnValue);
	void BPImpactingFluidSurfaceTick(struct FVector* ImpactLocation, float* PenetrationScalar);
	void BPImpactedFluidSurface(struct FVector* ImpactLocation, float* PenetrationScalar);
	void BPHandleCreatingBubbles();
	void BPExitedFluidSurface(struct FVector* ImpactLocation, float* PenetrationScalar);
	void BPDeactivateBubbleComponent();
	class FName AttachWindSourceToMeshComponent(class UMeshComponent* AttachMeshComp);
};

// 0x30 (0x60 - 0x30)
// Class ShooterGame.PrimalWirelessExchangeData
class UPrimalWirelessExchangeData : public UDataAsset
{
public:
	enum class EWirelessTransmissionType         WirelessType;                                      // 0x30(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40E7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  WirelessTag;                                       // 0x34(0x8)(ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40E8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          WirelessTagOverrides;                              // 0x40(0x10)(Edit, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SupplyRange;                                       // 0x50(0x4)(ConstParm, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SupplyLinkRange;                                   // 0x54(0x4)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ConsumeRange;                                      // 0x58(0x4)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShowPlacementPreview;                             // 0x5C(0x1)(ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40E9[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalWirelessExchangeData* GetDefaultObj();

};

// 0x428 (0x468 - 0x40)
// Class ShooterGame.PrimalWordFilter
class UPrimalWordFilter : public UPrimalWordList
{
public:
	uint8                                        Pad_40EF[0x414];                                   // Fixing Size After Last Property  > TateDumper <
	bool                                         WordsNeedSpaces;                                   // 0x454(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         DontCheckLetterRepeats;                            // 0x455(0x1)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40F0[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        CensoredWords;                                     // 0x458(0x10)(Edit, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalWordFilter* GetDefaultObj();

	class FString SanitizeString(bool* ReturnValue);
	class FString HasIllegalWord(bool* ReturnValue);
	bool HasBadParseCharacter(bool* ReturnValue);
};

// 0x8 (0x30 - 0x28)
// Class ShooterGame.PrimalWorldBuffCustomImplement
class UPrimalWorldBuffCustomImplement : public UObject
{
public:
	class FName                                  WorldBuffID;                                       // 0x28(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalWorldBuffCustomImplement* GetDefaultObj();

	void UpdateBuffCustomPersistantData();
	float Tick();
	void PreDeconstruction();
	void PostConstruction();
	void GetWorld(class UWorld** ReturnValue);
	void GetOwner(class UObject** ReturnValue);
	void BuffTimerRefreshed();
	int32 BuffStackIncreased();
	int32 BuffStackDecrease();
};

// 0x28 (0x50 - 0x28)
// Class ShooterGame.PrimalWorldBuffData
class UPrimalWorldBuffData : public UObject
{
public:
	TArray<struct FWorldBuffDefinition>          WorldBuffDefinitions;                              // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UPrimalWorldBuffCustomImplement*> ConstructedWorldBuffImplements;                    // 0x38(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40F7[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalWorldBuffData* GetDefaultObj();

	void UnsuspendWorldBuffs();
	void SuspendWorldBuffs();
	class UObject* RemoveWorldBuff(class FName WorldBuffIdentifier);
	class FName GetWorldBuffSet(TArray<struct FWorldBuffDefinition>* ReturnValue);
	struct FWorldBuffDefinition GetWorldBuffDefinitionByName(class FName WorldBuffIdentifier, bool* ReturnValue);
	void GetWorldBuffData(class UPrimalWorldBuffData** ReturnValue);
	TArray<class FName> CanActivateWorldBuff(class FName WorldBuffIdentifier, bool* ReturnValue);
	class UObject* AddWorldBuff(class FName WorldBuffIdentifier, int32 StacksToGive);
};

// 0x78 (0x540 - 0x4C8)
// Class ShooterGame.PrimalWorldModifier
class APrimalWorldModifier : public AActor
{
public:
	bool                                         bUseMapExclusionListAsExclusiveList;               // 0x4C8(0x1)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40F8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        MapExclusionList;                                  // 0x4D0(0x10)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FName>                          PriorityTags;                                      // 0x4E0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class AInstancedFoliageActor*>        ReskinnedFoliageTrackingList;                      // 0x4F0(0x10)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FFoliageReskinDefinition>      FoliageReskinList;                                 // 0x500(0x10)(Edit, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class AStaticMeshActor*>              ReskinnedLevelStaticMeshTrackingList;              // 0x510(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FSublevelOverrideGroup>        SublevelOverrideGroups;                            // 0x520(0x10)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnFoliageSkinned;                                  // 0x530(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrimalWorldModifier* GetDefaultObj();

	void TrySublevelSwaps();
	struct FSublevelOverrideGroup TryStaticMeshActorReskin();
	class AInstancedFoliageActor* TryFoliageReskin();
	void RescanForMapStaticMeshes();
	void RescanForFoliage();
	void IsAllowedOnCurrentMap(bool* ReturnValue);
	void HasPriority(bool* ReturnValue);
	struct FSublevelOverrideGroup GetCurrentSublevelOverrideGroup();
	void DoRescanForSublevelLoaded();
	class UHierarchicalInstancedStaticMeshComponent* BPSkinFoliage();
	void BPPreFoliageScan();
	void BPPostInitializationHasPriority();
	void BPPostFoliageScan();
};

// 0x8B8 (0x21F8 - 0x1940)
// Class ShooterGame.PrimalWorldSettings
class APrimalWorldSettings : public AARKNXWorldSettings
{
public:
	class UClass*                                GraphClass;                                        // 0x1940(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDisableReplicationGraph;                          // 0x1948(0x1)(ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bMapSupportsMissions;                              // 0x1949(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40FE[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                DefaultCameraPositionActor;                        // 0x1950(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UObject*>                       DynamicResourceRefs;                               // 0x1958(0x10)(BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEditorEnableNPCSpawners;                          // 0x1968(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEditorDoForceDisableNPCSpawners;                  // 0x1969(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bPreventGlobalNonEventSpawnOverrides;              // 0x196A(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEditorForceSpawnCharacterAsFemale;                // 0x196B(0x1)(Edit, EditFixedSize, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PlacingStructureToggleMeshTagVisibility;           // 0x196C(0x8)(BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bForcePreventPhysicsSimulation;                    // 0x1974(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bForceEnablePhysicsSimulation;                     // 0x1975(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bGenerateTerrain;                                  // 0x1976(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bForceSpawnAnimationTest;                          // 0x1977(0x1)(ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bOverrideLongitudeAndLatitude;                     // 0x1978(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4101[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LongitudeScale;                                    // 0x197C(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        RegularWildDinoResistanceVersusTamesMultiplier;    // 0x1980(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RegularWildDinoDamageVersusTamesMultiplier;        // 0x1984(0x4)(ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RegularWildDinoXPMultiplier;                       // 0x1988(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LatitudeScale;                                     // 0x198C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LongitudeOrigin;                                   // 0x1990(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LatitudeOrigin;                                    // 0x1994(0x4)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        MinKillX;                                          // 0x1998(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxKillX;                                          // 0x199C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinKillY;                                          // 0x19A0(0x4)(ConstParm, ExportObject, Net, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxKillY;                                          // 0x19A4(0x4)(Edit, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxKillZ;                                          // 0x19A8(0x4)(Net, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxUnderWorldTraceRangeZ;                          // 0x19AC(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                CurrentMinimapData;                                // 0x19B0(0x8)(Edit, ExportObject, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            OverrideWeaponMapTextureEmpty;                     // 0x19B8(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            OverrideWeaponMapTextureFilled;                    // 0x19C0(0x8)(Edit, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            OverrideUIMapTextureEmpty;                         // 0x19C8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            OverrideUIMapTextureFilled;                        // 0x19D0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            OverrideUIMapTextureSmall;                         // 0x19D8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class AActor*                                LevelBlueprintContainerActor;                      // 0x19E0(0x8)(BlueprintReadOnly, Net, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                PrimalGameDataOverride;                            // 0x19E8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ForceLoadMapName;                                  // 0x19F0(0x10)(Edit, ConstParm, BlueprintVisible, Net, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FString>                        OverridePlayerSpawnRegions;                        // 0x1A00(0x10)(Edit, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<int32>                                OverridePlayerSpawnRegionDifficulties;             // 0x1A10(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<uint8>                                OverridePlayerSpawnRegionsHideInSpawnUI;           // 0x1A20(0x10)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> LevelUseNPCClasses;                                // 0x1A30(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class AMatineeActorManager*                  MatineeManager;                                    // 0x1A40(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4104[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	struct FReverbSettings                       DefaultWaterReverbSettings;                        // 0x1AA0(0x20)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FInteriorSettings                     DefaultWaterAmbientZoneSettings;                   // 0x1AC0(0x24)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4105[0x64];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FClassRemappingWeight>         NPCRandomSpawnClassWeights;                        // 0x1B48(0x10)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	TArray<struct FClassRemappingWeight>         SinglePlayerNPCRandomSpawnClassWeights;            // 0x1B58(0x10)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             SpawnLevelBoundsMax;                               // 0x1B68(0x10)(Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             SpawnLevelBoundsMin;                               // 0x1B78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AutoSpectatorNamesMinZ;                            // 0x1B88(0x4)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseSpawnLevelBounds;                              // 0x1B8C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4107[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        CachedPersistentObjectClasses;                     // 0x1B90(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinosLerpToMaxRandomBaseLevel;                     // 0x1BA0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4109[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                DefaultSpawnPointRandomIndices;                    // 0x1BA8(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          OverrideFirstSpawnAnim;                            // 0x1BB8(0x8)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          OverrideSpawnAnim;                                 // 0x1BC0(0x8)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TheWorldGammaOffset;                               // 0x1BC8(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bWaterDinosUseFlightBlocking;                      // 0x1BCC(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_410A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        GlobalHarvestHealthMultiplier;                     // 0x1BD0(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GlobalHarvestAmountMultiplier;                     // 0x1BD4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bFlyersStructurePreventionDismountingAnywhere;     // 0x1BD8(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bFlyersStructurePreventionDismountingUnderTerrainOnly; // 0x1BD9(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_410C[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OverrideDifficultyMax;                             // 0x1BDC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FItemMultiplier>               GlobalSpoilingTimeMultipliers;                     // 0x1BE0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GlobalStatusAdjustmentRateMultipliersPositive[0xC]; // 0x1BF0(0x30)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	float                                        GlobalStatusAdjustmentRateMultipliersNegative[0xC]; // 0x1C20(0x30)(OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	int32                                        ValidEngramGroupsBitMask;                          // 0x1C50(0x4)(Edit, Net, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_410D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FInventoryComponentDefaultItemsAppend> InventoryComponentAppends;                         // 0x1C58(0x10)(BlueprintReadOnly, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FInventoryComponentDefaultItemsAppend> InventoryComponentAppendsNonDedicated;             // 0x1C68(0x10)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DayCycleSpeedScale;                                // 0x1C78(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        DayTimeSpeedScale;                                 // 0x1C7C(0x4)(BlueprintVisible, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        NightTimeSpeedScale;                               // 0x1C80(0x4)(ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        NegativeHyperthermalInsulationMultiplier;          // 0x1C84(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PositiveHyperthermalInsulationMultiplier;          // 0x1C88(0x4)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        NegativeHypothermalInsulationMultiplier;           // 0x1C8C(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PositiveHypothermalInsulationMultiplier;           // 0x1C90(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_410E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        GlobalCuddleFoodList;                              // 0x1C98(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CarnivoreNaturalTargetingRangeMultiplier;          // 0x1CA8(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        HerbivoreNaturalTargetingRangeMultiplier;          // 0x1CAC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicDay;                            // 0x1CB0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicNight;                          // 0x1CB8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicDay_Heavy;                      // 0x1CC0(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideCombatMusicNight_Heavy;                    // 0x1CC8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            SplitscreenUnderwaterSound;                        // 0x1CD0(0x8)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalHarvestingComponent>> HarvestComponentHealthScaleParents;                // 0x1CD8(0x10)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<float>                                HarvestComponentHealthScaleParentsValue;           // 0x1CE8(0x10)(BlueprintVisible, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalHarvestingComponent>> HarvestComponentHealthScaleExactMatch;             // 0x1CF8(0x10)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<float>                                HarvestComponentHealthScaleExactMatchValue;        // 0x1D08(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            Override_Sound_ReconnectToCharacter;               // 0x1D18(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        RequiresID;                                        // 0x1D20(0x4)(Edit, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIgnoreBiomeWind;                                  // 0x1D24(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4112[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    Override_PostProcess_ColorLUT;                     // 0x1D28(0x8)(ExportObject, Net, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DefaultWaterLineStartZ;                            // 0x1D30(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DefaultDeepWaterStartZ;                            // 0x1D34(0x4)(BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaximumPlayerFlyZ;                                 // 0x1D38(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4114[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftObjectPtr<class UObject>>        ExtraReferences;                                   // 0x1D40(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> AllowDownloadDinoClasses;                          // 0x1D50(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                DefaultBiomeName;                                  // 0x1D60(0x10)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UDeferredMovementContext*              DeferredMovement;                                  // 0x1D70(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> PreventStructureClasses;                           // 0x1D78(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxFallSpeedMultiplier;                            // 0x1D88(0x4)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableStructureObstructedByWorldGeometryCheck;   // 0x1D8C(0x1)(Edit, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bForceEnableTurretLimit;                           // 0x1D8D(0x1)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseMissions;                                      // 0x1D8E(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseMissionsMetaData;                              // 0x1D8F(0x1)(ConstParm, Net, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        LoadForceRespawnDinosVersion;                      // 0x1D90(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FirstSpawnNotTargetableForTime;                    // 0x1D94(0x4)(Edit, ConstParm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIgnoreInMeshCheckingUnderwater;                   // 0x1D98(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAllowRidingFliers;                                // 0x1D99(0x1)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bForceDinoDrawHUD;                                 // 0x1D9A(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDisableFirstPersonRiding;                         // 0x1D9B(0x1)(BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bForceDinoHighQualityAttacks;                      // 0x1D9C(0x1)(Edit, EditFixedSize, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bScaleDinoFloatingHUDByMeshSize;                   // 0x1D9D(0x1)(BlueprintReadOnly, Net, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4116[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ForceCameraTransitionTimeUponPossession;           // 0x1DA0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AdditionalDinoHealthBarOffsetY;                    // 0x1DA4(0x4)(Edit, ConstParm, ExportObject, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AIOverrideNotifyNeighborsRange;                    // 0x1DA8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4117[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SpawnAnimationLocationOffset;                      // 0x1DB0(0x18)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                MissionMultiUseEntryToolTipWidget;                 // 0x1DC8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                MissionDataBuff;                                   // 0x1DD0(0x8)(Edit, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class UClass*                                ActiveEventSpawnActor;                             // 0x1DD8(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FAvailableMission>             AvailableMissions;                                 // 0x1DE0(0x10)(EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMissionMetaData>              AvailableMissionsMetaData;                         // 0x1DF0(0x10)(EditFixedSize, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FMissionMetaData>              NonPlayerFacingMissionsMetaData;                   // 0x1E00(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4118[0x148];                                   // Fixing Size After Last Property  > TateDumper <
	float                                        GlobalDinoCountValue;                              // 0x1F58(0x4)(BlueprintVisible, Net, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4119[0x1C];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        ServerForceReplicateObjectClasses;                 // 0x1F78(0x10)(ConstParm, BlueprintReadOnly, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TSoftClassPtr<class UObject>                 ActiveEventOverrideObjectBlueprint;                // 0x1F88(0x30)(ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<class FName, TSoftClassPtr<class UObject>> EventNameToActiveEventOverrideObject;              // 0x1FB8(0x50)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TSet<class AActor*>                          DeferredTickActors;                                // 0x2008(0x50)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        UnregisteredDeferredTickActors;                    // 0x2058(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UPrimalWorldSettingsEventOverrides*    ActiveEventOverrides;                              // 0x2068(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MetaTagInfoClass;                                  // 0x2070(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnforceSingleBiomeBuff;                           // 0x2078(0x1)(ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bHideMissionSortByDistance;                        // 0x2079(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bPlayPersistentPlayer;                             // 0x207A(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_411B[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SM4DirectionalLightMultiplier;                     // 0x207C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SM4SKyLightMultiplier;                             // 0x2080(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SM5DirectionalLightMultiplier;                     // 0x2084(0x4)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SM5SKyLightMultiplier;                             // 0x2088(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        NoTrueSkySM5DirectionalLightMultiplier;            // 0x208C(0x4)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        NoTrueSkySM5SKyLightMultiplier;                    // 0x2090(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ConsoleSM5DirectionalLightMultiplier;              // 0x2094(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ConsoleSM5SKyLightMultiplier;                      // 0x2098(0x4)(BlueprintReadOnly, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GlobalIBLCaptureBrightness;                        // 0x209C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalBakeAndStreamIBLMultiplier;                  // 0x20A0(0x4)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_411D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               TrueSkyColorMultiplier;                            // 0x20A8(0x18)(BlueprintVisible, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SkyIBLIntensityMultiplier;                         // 0x20C0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        GroundColorMultiplier;                             // 0x20C4(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SkyColorMultiplier;                                // 0x20C8(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_411E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               AtmosphericFogMultiplier;                          // 0x20D0(0x18)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TrueSkyIntensityMultiplier;                        // 0x20E8(0x4)(Net, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GlobalViewDistanceMultiplier;                      // 0x20EC(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GlobalProxyDistanceMultiplier;                     // 0x20F0(0x4)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4120[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                IntroMoviePath;                                    // 0x20F8(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        IntroExplorerNoteID;                               // 0x2108(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4121[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                OutroMoviePath;                                    // 0x2110(0x10)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        OutroExplorerNoteID;                               // 0x2120(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAllowRagdolls;                                    // 0x2124(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4122[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          MainMapDataLayers;                                 // 0x2128(0x10)(Edit, ExportObject, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        GloballyLimitedParticleNum;                        // 0x2138(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4123[0x54];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FAdditionalStaticMeshSockets>  AdditionalFakeStaticMeshSockets;                   // 0x2190(0x10)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TSet<TWeakObjectPtr<class UFXSystemComponent>> DeferredFXActivations;                             // 0x21A0(0x50)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDisableAllASAFluidSim;                            // 0x21F0(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4124[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalWorldSettings* GetDefaultObj();

	void IsAllowedInLevelBounds(const struct FVector& AtLocat, bool* ReturnValue);
	class FName GetMissionMetaData(const struct FMissionMetaData& Value, bool* ReturnValue);
	void GetFoliageAndFluidSimEnabled(bool* ReturnValue);
	class FName GetExtraStaticMeshSocketByName(const struct FFakeStaticMeshSocketData& OutFakeSocketData, bool* ReturnValue);
	void CanSpawnGloballyLimitedParticle(class UNiagaraComponent* ForNiagaraComponent, bool* ReturnValue);
};

// 0x30 (0x58 - 0x28)
// Class ShooterGame.PrimalWorldSettingsEventOverrides
class UPrimalWorldSettingsEventOverrides : public UObject
{
public:
	TArray<struct FClassRemappingWeight>         NPCRandomSpawnClassWeights;                        // 0x28(0x10)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	TArray<struct FClassRemappingWeight>         SinglePlayerNPCRandomSpawnClassWeights;            // 0x38(0x10)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FActiveEventGlobalStatusAdjustments> AdditionalGlobalStatusAdjustmentsDuringEvent;      // 0x48(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimalWorldSettingsEventOverrides* GetDefaultObj();

};

// 0x160 (0x8F0 - 0x790)
// Class ShooterGame.ProgressBarWidget
class UProgressBarWidget : public UCustomCanvasWidget
{
public:
	class UTexture2D*                            ProgressBarBackground;                             // 0x790(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            ProgressBarForeground;                             // 0x798(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CurrentPercent;                                    // 0x7A0(0x4)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          BarForegroundColor;                                // 0x7A4(0x10)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PercentInterpolationSpeed;                         // 0x7B4(0x4)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinValueStartRedFlash;                             // 0x7B8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxValueStartRedFlash;                             // 0x7BC(0x4)(OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinValueStartYellowFlash;                          // 0x7C0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxValueStartYellowFlash;                          // 0x7C4(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          BarFlashColor;                                     // 0x7C8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          BarFlashColorBackground;                           // 0x7D8(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          RedBarFlashColor;                                  // 0x7E8(0x10)(ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          RedBarFlashColorBackground;                        // 0x7F8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          YellowBarFlashColor;                               // 0x808(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          YellowBarFlashColorBackground;                     // 0x818(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BarFlashSpeed;                                     // 0x828(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BarFlashThreshold;                                 // 0x82C(0x4)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BarFlashDuration;                                  // 0x830(0x4)(BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_412D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DisplayString;                                     // 0x838(0x10)(BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FLinearColor                          DisplayStringColor;                                // 0x848(0x10)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UFont*                                 DisplayStringFont;                                 // 0x858(0x8)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             DisplayStringOffset;                               // 0x860(0x10)(Edit, ConstParm, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             DisplayStringScale;                                // 0x870(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisplayStringCenterX : 1;                         // Mask: 0x1, PropSize: 0x10x880(0x1)(Edit, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisplayStringCenterY : 1;                         // Mask: 0x2, PropSize: 0x10x880(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPrintNumbersInDisplayString : 1;                  // Mask: 0x4, PropSize: 0x10x880(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysDrawDisplayString : 1;                      // Mask: 0x8, PropSize: 0x10x880(0x1)(ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDisplayStringNumbersUseFloats : 1;                // Mask: 0x10, PropSize: 0x10x880(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bBarFlashThresholdAbsolute : 1;                    // Mask: 0x20, PropSize: 0x10x880(0x1)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDoBarFlashOnDecrease : 1;                         // Mask: 0x40, PropSize: 0x10x880(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDoBarFlashOnIncrease : 1;                         // Mask: 0x80, PropSize: 0x10x880(0x1)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bInterpolatePercent : 1;                           // Mask: 0x1, PropSize: 0x10x881(0x1)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseDisplayString : 1;                             // Mask: 0x2, PropSize: 0x10x881(0x1)(ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseLinkedCharacterStatus : 1;                     // Mask: 0x4, PropSize: 0x10x881(0x1)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseOutlineDropShadow : 1;                         // Mask: 0x8, PropSize: 0x10x881(0x1)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_336 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class EPrimalCharacterStatusState       LinkedCharacterStatusStateType;                    // 0x882(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EPrimalCharacterStatusValue       LinkedCharacterStatusValueType;                    // 0x883(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseLinkedStatusStateToFlashRed : 1;               // Mask: 0x1, PropSize: 0x10x884(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_338 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4137[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          BarBackgroundColor;                                // 0x888(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4138[0x58];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UProgressBarWidget* GetDefaultObj();

};

// 0xF8 (0x120 - 0x28)
// Class ShooterGame.RadialSelectorHUD
class URadialSelectorHUD : public UObject
{
public:
	int32                                        NumDivisions;                                      // 0x28(0x4)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InnerDistance;                                     // 0x2C(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	float                                        OuterDistance;                                     // 0x30(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	float                                        OuterDistanceScaleCountOffset;                     // 0x34(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BaseUISizeY;                                       // 0x38(0x4)(BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SelectionDistanceOffset;                           // 0x3C(0x4)(Edit, ConstParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CenterImageSizeX;                                  // 0x40(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CenterImageSizeY;                                  // 0x44(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstance*                     MI;                                                // 0x48(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            CenterImage;                                       // 0x50(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	class UTexture2D*                            SegmentTexture;                                    // 0x58(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            SelectedTexture;                                   // 0x60(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstance*                     RadialMaterial;                                    // 0x68(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UFont*                                 TextFont;                                          // 0x70(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        CurrentSelection;                                  // 0x78(0x4)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        SelectedSelection;                                 // 0x7C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        TargetSelection;                                   // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ActivationSelection;                               // 0x84(0x4)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SelectionTime;                                     // 0x88(0x4)(ConstParm, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4143[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<float>                                DivisionAlpha;                                     // 0x90(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FString>                        ActionNames;                                       // 0xA0(0x10)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              Segment_SelectedDynamicMI;                         // 0xB0(0x8)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              Segment_UnselectedDynamicMI;                       // 0xB8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstance*                     AnalogDirectionDynamicMI;                          // 0xC0(0x8)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4145[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        IconDefaultSize;                                   // 0xD0(0x4)(Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IconSizeScaleFactor;                               // 0xD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IconMaxSize;                                       // 0xD8(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDisableTransitionScaling;                         // 0xDC(0x1)(EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bStayOnScreen;                                     // 0xDD(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAllowMovement;                                    // 0xDE(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4148[0x41];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class URadialSelectorHUD* GetDefaultObj();

};

// 0x70 (0x190 - 0x120)
// Class ShooterGame.RadialSelectorHUD_Custom
class URadialSelectorHUD_Custom : public URadialSelectorHUD
{
public:
	uint8                                        Pad_414D[0x68];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        TextScaleCountOffset;                              // 0x188(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_414E[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class URadialSelectorHUD_Custom* GetDefaultObj();

};

// 0x98 (0x1B8 - 0x120)
// Class ShooterGame.RadialSelectorHUD_Inventory
class URadialSelectorHUD_Inventory : public URadialSelectorHUD
{
public:
	class UPrimalInventoryComponent*             PlayerInventory;                                   // 0x120(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_414F[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            ClearTameOrderingGroupIcon;                        // 0x150(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    DinoGroupIconArray;                                // 0x158(0x10)(BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    CommandsBindingsIcons;                             // 0x168(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            StartYellingIcon;                                  // 0x178(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            StopYellingIcon;                                   // 0x180(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            StartTalkingIcon;                                  // 0x188(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            StopTalkingIcon;                                   // 0x190(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            StartWhisperingIcon;                               // 0x198(0x8)(Edit, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            StopWhisperingIcon;                                // 0x1A0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    ChatIcons;                                         // 0x1A8(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class URadialSelectorHUD_Inventory* GetDefaultObj();

};

// 0x48 (0x168 - 0x120)
// Class ShooterGame.RadialSelectorHUD_MultiUse
class URadialSelectorHUD_MultiUse : public URadialSelectorHUD
{
public:
	uint8                                        Pad_4151[0x34];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        TextScaleCountOffset;                              // 0x154(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4152[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class URadialSelectorHUD_MultiUse* GetDefaultObj();

};

// 0xA0 (0x1C0 - 0x120)
// Class ShooterGame.RadialSelectorHUD_PlayerAction
class URadialSelectorHUD_PlayerAction : public URadialSelectorHUD
{
public:
	TArray<enum class EPlayerActionIndex>        ActionBindings;                                    // 0x120(0x10)(Edit, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    ActionBindingsIcons;                               // 0x130(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4153[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bAddUnlockableEmotes;                              // 0x170(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4154[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            ShowHatIcon;                                       // 0x178(0x8)(BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            HideHatIcon;                                       // 0x180(0x8)(Edit, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4156[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TextScaleCountOffset;                              // 0x190(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4157[0x2C];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class URadialSelectorHUD_PlayerAction* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class ShooterGame.RCONServer
class URCONServer : public UObject
{
public:
	uint8                                        Pad_4159[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	class UShooterCheatManager*                  CheatManager;                                      // 0x50(0x8)(Edit, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig)
	uint8                                        Pad_415A[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class URCONServer* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class ShooterGame.ReportServerReplicatedFunctionsCommandlet
class UReportServerReplicatedFunctionsCommandlet : public UCommandlet
{
public:

	static class UClass* StaticClass();
	static class UReportServerReplicatedFunctionsCommandlet* GetDefaultObj();

};

// 0x0 (0x4C8 - 0x4C8)
// Class ShooterGame.SaveGameActorTickable
class ASaveGameActorTickable : public ASaveGameActor
{
public:

	static class UClass* StaticClass();
	static class ASaveGameActorTickable* GetDefaultObj();

};

// 0x48 (0x920 - 0x8D8)
// Class ShooterGame.ServerInfoInfoEntryButton
class UServerInfoInfoEntryButton : public UDataListEntryButton
{
public:
	uint8                                        bIsCustom : 1;                                     // Mask: 0x1, PropSize: 0x10x8D8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_343 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_415B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                InfoName;                                          // 0x8E0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                InfoValue;                                         // 0x8F0(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bCenterDisplayName;                                // 0x900(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_415C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          DisplayStringSelectedColor;                        // 0x904(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        TextClipOffset;                                    // 0x914(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FolderNameTextFontScale;                           // 0x918(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_415E[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UServerInfoInfoEntryButton* GetDefaultObj();

};

// 0x0 (0x298 - 0x298)
// Class ShooterGame.ShooterActorChannel
class UShooterActorChannel : public UActorChannel
{
public:

	static class UClass* StaticClass();
	static class UShooterActorChannel* GetDefaultObj();

};

// 0xE40 (0x2950 - 0x1B10)
// Class ShooterGame.ShooterCharacter
class AShooterCharacter : public APrimalCharacter
{
public:
	uint8                                        Pad_41BD[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UParticleSystemComponent*              ListenServerBoundsPSC;                             // 0x1B18(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41BE[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          SpawnIntroAnim1P;                                  // 0x1B28(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          RespawnIntroAnim1P;                                // 0x1B30(0x8)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ProneInAnim;                                       // 0x1B38(0x8)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ProneOutAnim;                                      // 0x1B40(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          StartRidingAnim;                                   // 0x1B48(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          StopRidingAnim;                                    // 0x1B50(0x8)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          TalkingAnim;                                       // 0x1B58(0x8)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          VoiceTalkingAnim;                                  // 0x1B60(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UAnimMontage>>   EmoteAnims;                                        // 0x1B68(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          FireBallistaAnimation;                             // 0x1B78(0x8)(ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ReloadBallistaAnimation;                           // 0x1B80(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          DraggingCharacterAnim;                             // 0x1B88(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             CheckCancelEmoteBuffClass;                         // 0x1B90(0x30)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41C1[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bWasProne;                                         // 0x1BD8(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIsPreviewCharacter;                               // 0x1BD9(0x1)(ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41C2[0x12];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        WalkBobMagnitude;                                  // 0x1BEC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WalkBobInterpSpeed;                                // 0x1BF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinimumDistanceThresholdToCrouch;                  // 0x1BF4(0x4)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinimumDistanceThresholdToProneFromStanding;       // 0x1BF8(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinimumDistanceThresholdToProneFromCrouch;         // 0x1BFC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TargetingTime;                                     // 0x1C00(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BobMaxMovementSpeed;                               // 0x1C04(0x4)(BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WeaponBobMaxMovementSpeed;                         // 0x1C08(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinRunSpeedThreshold;                              // 0x1C0C(0x4)(Edit, ConstParm, ExportObject, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsTargeting : 1;                                  // Mask: 0x1, PropSize: 0x10x1C10(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsCrafting : 1;                                   // Mask: 0x2, PropSize: 0x10x1C10(0x1)(BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsRiding : 1;                                     // Mask: 0x4, PropSize: 0x10x1C10(0x1)(Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsIndoors : 1;                                    // Mask: 0x8, PropSize: 0x10x1C10(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsClimbing : 1;                                   // Mask: 0x10, PropSize: 0x10x1C10(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsViewingInventory : 1;                           // Mask: 0x20, PropSize: 0x10x1C10(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseAlternateFallBlendspace : 1;                   // Mask: 0x40, PropSize: 0x10x1C10(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsFemale : 1;                                     // Mask: 0x80, PropSize: 0x10x1C10(0x1)(ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        bPlaySpawnAnim : 1;                                // Mask: 0x1, PropSize: 0x10x1C11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPlayFirstSpawnAnim : 1;                           // Mask: 0x2, PropSize: 0x10x1C11(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bNoPhysics : 1;                                    // Mask: 0x4, PropSize: 0x10x1C11(0x1)(BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_354 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bGaveInitialItems : 1;                             // Mask: 0x1, PropSize: 0x10x1C12(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bReceivedGenesisSeasonPassItems : 1;               // Mask: 0x2, PropSize: 0x10x1C12(0x1)(Edit, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_355 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41C6[0x65];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DefaultWeapon;                                     // 0x1C78(0x8)(Edit, Net, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                OverrideDefaultWeapon;                             // 0x1C80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                MapWeapon;                                         // 0x1C88(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                GPSWeapon;                                         // 0x1C90(0x8)(Edit, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                CompassWeapon;                                     // 0x1C98(0x8)(Edit, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41C7[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                PlayerName;                                        // 0x1CA8(0x10)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	TWeakObjectPtr<class APrimalDinoCharacter>   RidingDino;                                        // 0x1CB8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                Mesh1P;                                            // 0x1CC0(0x8)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FName>                          LowerBodyPartRootBones;                            // 0x1CC8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UPhysicsAsset*                         FPVCameraAnimationPhysicsAsset;                    // 0x1CD8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          DropItemAnimation;                                 // 0x1CE0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ThrowItemAnimation;                                // 0x1CE8(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          PickupItemAnimation;                               // 0x1CF0(0x8)(EditFixedSize, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ActivateInventoryAnimation;                        // 0x1CF8(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                SurvivorProfilePreviewMesh;                        // 0x1D00(0x8)(BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              LastDinoAimRotationOffset;                         // 0x1D08(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41CA[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class APrimalProjectileBoomerang*            LastFiredBoomerang;                                // 0x1D38(0x8)(BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class APrimalProjectileGrapplingHook*        LastFiredGrapHook;                                 // 0x1D40(0x8)(ConstParm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UPrimalCableComponent*                 GrapplingHookCable;                                // 0x1D48(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAudioComponent*                       LastGrapHookAC;                                    // 0x1D50(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        _GrapHookCableObjectCount;                         // 0x1D58(0x4)(ConstParm, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41CB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               GrapHookDefaultOffset;                             // 0x1D60(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GrapHookCableWidth;                                // 0x1D78(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41CC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    GrapHookMaterial;                                  // 0x1D80(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LadderJumpVelocity;                                // 0x1D88(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GrapHookPulledRopeDistance;                        // 0x1D8C(0x4)(EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GrapHookSyncTime;                                  // 0x1D90(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bReleasingGrapHook;                                // 0x1D94(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41CD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastTimeDestroyedWeapon;                           // 0x1D98(0x8)(Net, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41CE[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                PlatformProfileName;                               // 0x1DA8(0x10)(BlueprintVisible, BlueprintReadOnly, Config, InstancedReference, SubobjectReference)
	struct FUniqueNetIdRepl                      PlatformProfileID;                                 // 0x1DB8(0x30)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FPlayerStatusStateCharacterSound> CharacterStatusStateSounds;                        // 0x1DE8(0x10)(ExportObject, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAudioComponent*                       CharacterStatusStateSoundComponent;                // 0x1DF8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       LastUncrouchTime;                                  // 0x1E00(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       LastUnproneTime;                                   // 0x1E08(0x8)(BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       LastTimeStartedCrouchOrProneTransition;            // 0x1E10(0x8)(BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41CF[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DefaultTPVAnimBlueprint;                           // 0x1E48(0x8)(Edit, ConstParm, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  WeaponAttachPoint;                                 // 0x1E50(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TargetingSpeedModifier;                            // 0x1E58(0x4)(Edit, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41D0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            LowHealthSound;                                    // 0x1E60(0x8)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            FastTravelSound;                                   // 0x1E68(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          CallFollowAnim;                                    // 0x1E70(0x8)(BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          CallStayAnim;                                      // 0x1E78(0x8)(Edit, BlueprintVisible, ExportObject, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          CallFollowAnimSingle;                              // 0x1E80(0x8)(ConstParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          CallStayAnimSingle;                                // 0x1E88(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          CallMoveToAnim;                                    // 0x1E90(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          CallAttackAnim;                                    // 0x1E98(0x8)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAudioComponent*                       LowHealthWarningPlayer;                            // 0x1EA0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41D1[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        CraftingMovementSpeedModifier;                     // 0x1EC0(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41D2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               WeaponBobMagnitudes;                               // 0x1EC8(0x18)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               WeaponBobPeriods;                                  // 0x1EE0(0x18)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               WeaponBobOffsets;                                  // 0x1EF8(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               WeaponBobMagnitudes_Targeting;                     // 0x1F10(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               WeaponBobPeriods_Targeting;                        // 0x1F28(0x18)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               WeaponBobOffsets_Targeting;                        // 0x1F40(0x18)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WeaponBobMinimumSpeed;                             // 0x1F58(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WeaponBobSpeedBase;                                // 0x1F5C(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WeaponBobSpeedBaseFalling;                         // 0x1F60(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41D3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FItemAttachmentInfo>           DefaultAttachmentInfos;                            // 0x1F68(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            StartCrouchSound;                                  // 0x1F78(0x8)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            EndCrouchSound;                                    // 0x1F80(0x8)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            StartProneSound;                                   // 0x1F88(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            EndProneSound;                                     // 0x1F90(0x8)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                NextInventoryWeapon;                               // 0x1F98(0x8)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FItemNetID                            PreMapWeaponItemNetID;                             // 0x1FA0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FItemNetID                            CurrentWeaponItemID;                               // 0x1FA8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ServerSeatedViewRotationYaw;                       // 0x1FB0(0x4)(OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ServerSeatedViewRotationPitch;                     // 0x1FB4(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class AShooterWeapon*                        CurrentWeapon;                                     // 0x1FB8(0x8)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41D5[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bDrawHealthBar : 1;                                // Mask: 0x1, PropSize: 0x10x1FC8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_357 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41D6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        HealthBarOffsetY;                                  // 0x1FCC(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBPOverrideHealthBarOffset : 1;                    // Mask: 0x1, PropSize: 0x10x1FD0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCustomHealthBarColor : 1;                      // Mask: 0x2, PropSize: 0x10x1FD0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_358 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41D7[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	uint64                                       LinkedPlayerDataID;                                // 0x1FD8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41D8[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AShooterPlayerController> LastValidPlayerController;                         // 0x2008(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          DrinkingAnimation;                                 // 0x2010(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       LastRequestedTribeTime;                            // 0x2018(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        LastRequestedTribeID;                              // 0x2020(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41D9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                LastRequestedTribeName;                            // 0x2028(0x10)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AShooterCharacter>      LastRequestedTribePlayerCharacter;                 // 0x2038(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IndoorsHyperthermiaInsulation;                     // 0x2040(0x4)(Edit, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IndoorsHypothermiaInsulation;                      // 0x2044(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IndoorCheckInterval;                               // 0x2048(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41DA[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FItemNetID                            PreRidingWeaponItemNetID;                          // 0x2058(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FItemNetID                            PreInventoryWeaponItemNetID;                       // 0x2060(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FOverrideAnimBlueprintEntry>   OverrideAnimBlueprints;                            // 0x2068(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimSequence*                         ViewingInventoryAnimation;                         // 0x2078(0x8)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimSequence*                         DefaultDinoRidingAnimation;                        // 0x2080(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         DefaultDinoRidingMoveAnimation;                    // 0x2088(0x8)(ConstParm, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         DefaultSeatingAnimation;                           // 0x2090(0x8)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimSequence*                         DefaultShieldAnimation;                            // 0x2098(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ShieldCoverAnimation;                              // 0x20A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ShieldCoverAnimationForCrouch;                     // 0x20A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDisableLookYaw : 1;                               // Mask: 0x1, PropSize: 0x10x20B0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPlayingShieldCoverAnimation : 1;                  // Mask: 0x2, PropSize: 0x10x20B0(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPlayingShieldCoverAnimationForCrouch : 1;         // Mask: 0x4, PropSize: 0x10x20B0(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bTriggerBPUnstasis : 1;                            // Mask: 0x8, PropSize: 0x10x20B0(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_359 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHatHidden : 1;                                    // Mask: 0x80, PropSize: 0x10x20B0(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_35A : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAllowDPC : 1;                                     // Mask: 0x2, PropSize: 0x10x20B1(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_35B : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsConnected : 1;                                  // Mask: 0x8, PropSize: 0x10x20B1(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_35C : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bLockedToSeatingStructure : 1;                     // Mask: 0x40, PropSize: 0x10x20B1(0x1)(BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreventAllWeapons : 1;                            // Mask: 0x80, PropSize: 0x10x20B1(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceBuffAimOverride : 1;                         // Mask: 0x1, PropSize: 0x10x20B2(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsHidingFPVMesh : 1;                              // Mask: 0x2, PropSize: 0x10x20B2(0x1)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_35D : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41DC[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        EnemyPlayerMaxCursorHUDDistanceProne;              // 0x20B4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        EnemyPlayerMaxCursorHUDDistanceCrouched;           // 0x20B8(0x4)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        EnemyPlayerMaxCursorHUDDistanceStanding;           // 0x20BC(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41DE[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSaddlePassengerSeatDefinition        CurrentPassengerSeatDefinition;                    // 0x20C8(0x110)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UAnimMontage>>   AnimsOverrideFrom;                                 // 0x21D8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UAnimMontage>>   AnimOverrideTo;                                    // 0x21E8(0x10)(ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UAnimSequence>>  AnimSequencesOverrideFrom;                         // 0x21F8(0x10)(BlueprintVisible, Net, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UAnimSequence>>  AnimSequenceOverrideTo;                            // 0x2208(0x10)(ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41DF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          BodyColors[0x4];                                   // 0x221C(0x40)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        FacialHairIndex;                                   // 0x225C(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        HeadHairIndex;                                     // 0x225D(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        EyebrowIndex;                                      // 0x225E(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_41E0[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RawBoneModifiers[0x1A];                            // 0x2260(0x68)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_41E1[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        DynamicMaterialBytes[0x32];                        // 0x22E8(0x32)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        DynamicOverrideHairDyeBytes[0x4];                  // 0x231A(0x4)(Edit, ExportObject, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41E2[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimaryDataAsset*                     Player_Voice_Collection;                           // 0x2320(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LoggedOutTargetingDesirability;                    // 0x2328(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIsRainWatered;                                    // 0x232C(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41E3[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       UniqueNetIdTypeHash;                               // 0x233C(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       SplitscreenMainPlayerUniqueNetIdTypeHash;          // 0x2340(0x4)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41E4[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          SpawnAnim;                                         // 0x2358(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          FirstSpawnAnim;                                    // 0x2360(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          SleepOutAnim;                                      // 0x2368(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41E5[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UPrimalItem*>                   OldItemSlots;                                      // 0x2390(0x10)(ExportObject, Net, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIsFastInventoryActivated;                         // 0x23A0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41E6[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        FastInventoryLastIndex;                            // 0x23B0(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        FastInventoryLastMaxRow;                           // 0x23B4(0x4)(Edit, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        FastInventoryQuantitySlots;                        // 0x23B8(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41E7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                CustomFolderFastInventory;                         // 0x23C0(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41E8[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       SavedLastTimeHadController;                        // 0x23D8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       LastTimeHadController;                             // 0x23E0(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LastTaggedTime;                                    // 0x23E8(0x4)(Edit, ConstParm, EditFixedSize, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LastTaggedTimeExtra;                               // 0x23EC(0x4)(ExportObject, BlueprintReadOnly, Net, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LastTaggedTimeThird;                               // 0x23F0(0x4)(Edit, BlueprintVisible, ExportObject, Net, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ExtraFloatVar;                                     // 0x23F4(0x4)(Edit, BlueprintVisible, Net, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ExtraVectorVar;                                    // 0x23F8(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ExtraExtraVectorVar;                               // 0x2410(0x18)(ConstParm, BlueprintReadOnly, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ExtraNameVar;                                      // 0x2428(0x8)(Edit, ConstParm, ExportObject, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIsOnSeatingStructure;                             // 0x2430(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIsControllingBallista;                            // 0x2431(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseBallistaAimOffset;                             // 0x2432(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41E9[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CurrentControlledBallistaYaw;                      // 0x2434(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIsServerAdmin;                                    // 0x2438(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41EA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class APrimalStructureSeating> SeatingStructure;                                  // 0x243C(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        SeatingStructureSeatNumber;                        // 0x2444(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41EB[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            ThrowCharacterSound;                               // 0x2450(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41EC[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        PlayerBadgeGroup;                                  // 0x2468(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, InstancedReference, SubobjectReference)
	bool                                         bShouldInvertTurnInput;                            // 0x2469(0x1)(ConstParm, Net, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41ED[0x36];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        InventoryDragWeightScale;                          // 0x24A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41EE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          MountedCarryingDinoAnimation;                      // 0x24A8(0x8)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimMontage*                          CuddleAnimation;                                   // 0x24B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41EF[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	class UAnimSequence*                         CharacterAdditiveStandingAnim;                     // 0x2510(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41F0[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class USkeletalMeshComponent*                HeadHairComponent;                                 // 0x2528(0x8)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                FacialHairComponent;                               // 0x2530(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                EyebrowsComponent;                                 // 0x2538(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                EyelashesComponent;                                // 0x2540(0x8)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IntervalForFullHeadHairGrowth;                     // 0x2548(0x4)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IntervalForFullFacialHairGrowth;                   // 0x254C(0x4)(Edit, ConstParm, Net, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PercentOfFullFacialHairGrowth;                     // 0x2550(0x4)(Net, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	float                                        PercentOfFullHeadHairGrowth;                       // 0x2554(0x4)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	struct FLinearColor                          OriginalHairColor;                                 // 0x2558(0x10)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FShooterCharacterPostUpdateTickFunction PostUpdateTick;                                    // 0x2568(0x30)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41F1[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReplicatedWeight;                                  // 0x25A4(0x4)(ExportObject, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41F2[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UParticleSystemComponent*              LocalCorpseEmitter;                                // 0x25B0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       LocalDiedAtTime;                                   // 0x25B8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41F3[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            ProneMoveSound;                                    // 0x25C8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       UploadEarliestValidTime;                           // 0x25D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_41F4[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AController>            SpawnedForController;                              // 0x25E4(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41F5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UParticleSystemComponent*              JunctionLinkCableParticle;                         // 0x25F0(0x8)(Edit, ExportObject, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41F6[0x24];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bPreventWeaponMovementAnims;                       // 0x261C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41F7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class APrimalStructure>       CurrentItemBalloon;                                // 0x2620(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            NotifyWeaponUnequipped;                            // 0x2628(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            NotifyWeaponEquipped;                              // 0x2638(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            NotifyWeaponFired;                                 // 0x2648(0x10)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            NotifyOnWeaponEquip;                               // 0x2658(0x10)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        PlayerHexagonCount;                                // 0x2668(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        DefaultHexagonAmountEarnedOnMissionCompletion;     // 0x266C(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41F8[0x40];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        MeshHeightAdjustment;                              // 0x26B0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BuffExtraDamageMultiplier;                         // 0x26B4(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bNormalizeHeadPosition;                            // 0x26B8(0x1)(Net, EditFixedSize, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41F9[0x17];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnFirstPersonCameraView;                           // 0x26D0(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnThirdPersonCameraView;                           // 0x26E0(0x10)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       ExpectedBaseID;                                    // 0x26F0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41FA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastExpectedBaseTime;                              // 0x26F8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bPreventShowHUDOnSpawnIntroCompletion;             // 0x2700(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41FB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bHideFloatingHUD : 1;                              // Mask: 0x1, PropSize: 0x10x2704(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDrawHUD : 1;                                 // Mask: 0x2, PropSize: 0x10x2704(0x1)(Edit, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceSeatingAnim : 1;                             // Mask: 0x4, PropSize: 0x10x2704(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsPressingRunning : 1;                            // Mask: 0x8, PropSize: 0x10x2704(0x1)(Edit, ConstParm, ExportObject, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAutoDestroyPlayerWeapons : 1;                     // Mask: 0x10, PropSize: 0x10x2704(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_35E : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseDefaultWeaponWhenOpeningInventory : 1;         // Mask: 0x40, PropSize: 0x10x2704(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_35F : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41FC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class APrimalDinoCharacter>   SavedRidingDino;                                   // 0x2708(0x8)(Net, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAudioComponent*                       DialogueSoundComponent;                            // 0x2710(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UMaterialInterface*>            CachedPlayerMaterials;                             // 0x2718(0x10)(ExportObject, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UMaterialInterface*>            CachedAttachmentMaterials;                         // 0x2728(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       CurrentShadowOpactiy;                              // 0x2738(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       FPVShadowThreshold;                                // 0x2740(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       FPVShadowFade;                                     // 0x2748(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimationAsset*                       ReplicatedSleepAnim;                               // 0x2750(0x8)(ConstParm, BlueprintReadOnly, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TSoftObjectPtr<class UAnimationAsset>        SavedSleepAnim;                                    // 0x2758(0x30)(ConstParm, ExportObject, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AimMagnetismStrength;                              // 0x2788(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AimMagnetismOffsetDecaySpeed;                      // 0x278C(0x4)(BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AimMagnetismOffsetMultiplier;                      // 0x2790(0x4)(Edit, Net, EditFixedSize, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41FD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TMap<int32, class AShooterProjectile*>       FiredProjectilesCache;                             // 0x2798(0x50)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41FE[0x44];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        LocallyInterpolatedViewLocationZSpeed;             // 0x282C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41FF[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bNeedsHairOrBodyUpdate : 1;                        // Mask: 0x1, PropSize: 0x10x2838(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_360 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4200[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DefaultPercentOfFullHeadHairGrowth;                // 0x283C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        DefaultHeadHairIndex;                              // 0x2840(0x4)(ConstParm, ExportObject, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DefaultPercentOfFullFacialHairGrowth;              // 0x2844(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        DefaultFacialHairIndex;                            // 0x2848(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSKDynamicMatsHaveBeenRecentlyChangedAndNeedUpdatingOnTheAnimbp : 1; // Mask: 0x1, PropSize: 0x10x284C(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_361 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4201[0xB];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ClearRiderCameraTransitionInterpSpeed;             // 0x2858(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ClearRiderCameraTransitionInterpTime;              // 0x285C(0x4)(Edit, ConstParm, Net, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TPVCameraExtraCollisionZOffset;                    // 0x2860(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4202[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            TribeManagementOptionsIcon;                        // 0x2868(0x8)(Edit, BlueprintVisible, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            RecruitToTribeIcon;                                // 0x2870(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            BanishFromTribeIcon;                               // 0x2878(0x8)(BlueprintReadOnly, Net, EditFixedSize, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            PromoteToAdminIcon;                                // 0x2880(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            AcceptTribeInvitationIcon;                         // 0x2888(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            MergeTribeAcceptInvitationIcon;                    // 0x2890(0x8)(ExportObject, EditFixedSize, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            ViewTribeInfoIcon;                                 // 0x2898(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            TribeInvitationOptionsIcon;                        // 0x28A0(0x8)(BlueprintReadOnly, Net, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            InviteToAllianceIcon;                              // 0x28A8(0x8)(Edit, BlueprintVisible, Net, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            CantInviteToAllianceIcon;                          // 0x28B0(0x8)(ExportObject, BlueprintReadOnly, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            AcceptInviteToAllianceIcon;                        // 0x28B8(0x8)(ConstParm, ExportObject, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            CantAcceptInviteToAllianceIcon;                    // 0x28C0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            DeclareTribeWarIcon;                               // 0x28C8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            AcceptTribeWarIcon;                                // 0x28D0(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            ShowUserPageIcon;                                  // 0x28D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        EquippedArmorDurabilityPercent3;                   // 0x28E0(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        EquippedArmorDurabilityPercent4;                   // 0x28E4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        EquippedArmorDurabilityPercent5;                   // 0x28E8(0x4)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        EquippedArmorDurabilityPercent6;                   // 0x28EC(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4204[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastTimePushed;                                    // 0x28F8(0x8)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4205[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        LastPushedDirection;                               // 0x2920(0x4)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        VisualVelocitySizeWhenPushed;                      // 0x2924(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4206[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        LocalUpdateCharsInRangeInterval;                   // 0x2938(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4207[0x14];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterCharacter* GetDefaultObj();

	void UseAlternateStandingAnim(bool* ReturnValue);
	void UseAltAimOffsetAnim(bool* ReturnValue);
	void UseAdditiveStandingAnim(bool* ReturnValue);
	void UpdateProjectileCache();
	void UpdateExpectedBase();
	void UpdateAutoTurn();
	void UpdateAutoPlayer();
	void UpdateAutoMove();
	void UpdateAutoJump();
	void UpdateAutoFire();
	TArray<struct FAllyRadarDatas> UpdateAllyRadarDatas();
	void TryLaunchMountedDino();
	void TryCutEnemyGrapplingCable();
	void SyncGrapHookDistance(float Distance);
	void StructurePlacementUseAlternateOriginActor(class AActor** ReturnValue);
	bool StartWeaponSwitch();
	float StartCameraTransition();
	void ShowWeapon();
	void SetPreventEquipAllWeapons(bool bPrevent);
	int32 SetPlayerHexagonCount(bool* ReturnValue);
	double SetImplantSuicideCooldownStartTime();
	TSoftObjectPtr<class UMaterialInterface> SetHairOnComponent();
	bool SetFastInventoryMode();
	class APrimalStructure* SetExpectedBase();
	float SetCarriedPitchYaw();
	bool SetCameraMode(bool bForce);
	bool SetAutoPlayer();
	void ServerToClientsPlayFireBallistaAnimation();
	void ServerSwitchMap();
	void ServerSwitchBallistaAmmo();
	void ServerStopFireBallista();
	bool ServerStartSurfaceCameraForPassenger();
	bool ServerSetViewingInventory();
	bool ServerSetTargeting();
	bool ServerSetBallistaTargeting();
	float ServerSetBallistaNewRotation();
	uint8 ServerSeatingStructureAction();
	int32 ServerRequestHexagonTrade(int32 Quantity);
	bool ServerReleaseGrapHookCable();
	class AShooterPlayerController* ServerReceiveTribeInvite();
	struct FVector ServerPrepareMountedDinoForLaunch(const struct FVector& ViewLoc);
	void ServerPlayFireBallistaAnimation();
	int32 ServerNotifyProjectileImpact(const struct FHitResult& HitResult);
	struct FHitResult ServerNotifyBallistaShot(struct FVector_NetQuantizeNormal* ShootDir);
	struct FVector ServerNetEndClimbingLadder();
	void ServerLaunchMountedDino();
	bool ServerForceUpdatedAimedActors();
	struct FVector ServerFireBallistaProjectile(struct FVector_NetQuantizeNormal* ShootDir);
	float ServerDetachGrapHookCable();
	bool ServerClearSwitchingWeapon();
	void ServerCheckDrinkingWater();
	void ResetRootAimRotation();
	void RenamePlayer(const class FString& NewName);
	void RefreshRiderSocket();
	uint8 PlayEmoteAnimation();
	void PlayDrinkingAnimation();
	class AShooterWeapon* OnWeaponUnequipped();
	class AShooterWeapon* OnWeaponEquipped();
	void OnRep_RawBoneModifiers();
	void OnRep_LastPushedDirection();
	void OnRep_HatHidden();
	class AShooterWeapon* OnRep_CurrentWeapon();
	void OnRep_bIsClimbing();
	float NetSimulatedForceUpdateAimedActors();
	int32 NetSetOverrideHeadHairColor();
	int32 NetSetOverrideFacialHairColor();
	int32 NetSetHeadHairPercent();
	int32 NetSetFacialHairPercent();
	int32 NetSetEyebrowStyle();
	void LinkedPlayerIDString(class FString* ReturnValue);
	void LaunchMountedDino();
	void IsWatchingExplorerNote(bool* ReturnValue);
	void IsUsingShield(bool* ReturnValue);
	void IsUsingClimbingPick(bool* ReturnValue);
	void IsTargeting(bool* ReturnValue);
	void IsProjectileInCache(int32 ProjectileID, bool* ReturnValue);
	class UPrimalItem* IsPreInventoryItem(bool* ReturnValue);
	void IsPlayingUpperBodyCallAnimation(bool* ReturnValue);
	void IsPlayingRepawnAnim(bool* ReturnValue);
	void IsPlayingInitialSpawnAnim(bool* ReturnValue);
	void IsOutside(bool* ReturnValue);
	void IsNearTopOfLadder(bool* ReturnValue);
	struct FVector IsIndoorsAtLoc(class UWorld** TheWorld, bool* ReturnValue);
	void IsGrapplingHardAttached(bool* ReturnValue);
	void IsGrapplingAttachedToMe(bool* ReturnValue);
	void IsFiring(bool* ReturnValue);
	void IsCurrentPassengerLimitCameraYaw(bool* ReturnValue);
	void IsCarriedAsPassenger(bool* ReturnValue);
	void IsBlockingWithShield(bool* ReturnValue);
	void HideWeapon();
	class APrimalBuff* HasAnyOtherBuffsUsingConsolidatedMultiUse(bool* ReturnValue);
	class UPrimalItem* GivePrimalItemWeapon();
	int32 GiveHexagonsOnMissionReward(int32* ReturnValue);
	bool GiveHexagons(int32* ReturnValue);
	void GiveDefaultWeaponTimer();
	bool GiveDefaultWeapon();
	void GetWeapon(class AShooterWeapon** ReturnValue);
	void GetTargetingSpeedModifier(float* ReturnValue);
	void GetSpawnedForController(class AShooterPlayerController** ReturnValue);
	void GetSeatingAnimation(class UAnimSequence** ReturnValue);
	void GetRidingDinoAnimSpeedRatio(float* ReturnValue);
	void GetRidingDino(class APrimalDinoCharacter** ReturnValue);
	void GetPlayerHexagonCount(int32* ReturnValue);
	void GetPlayerData(class UPrimalPlayerData** ReturnValue);
	void GetPercentageOfHeadHairGrowth(float* ReturnValue);
	void GetPercentageOfFacialHairGrowth(float* ReturnValue);
	void GetLastAttackTime(double* ReturnValue);
	void GetHeadHairIndex(int32* ReturnValue);
	void GetHeadHairColor(struct FLinearColor* ReturnValue);
	void GetFacialHairIndex(int32* ReturnValue);
	void GetFacialHairColor(struct FLinearColor* ReturnValue);
	void GetEyebrowIndex(int32* ReturnValue);
	void GetDinoRidingMoveAnimation(class UAnimSequence** ReturnValue);
	void GetDinoRidingAnimation(class UAnimSequence** ReturnValue);
	struct FPlayerDynamicMaterialFloat GetCharacterCreatorDynamicMatValue(float* ReturnValue);
	struct FBoneModifierRangeArray GetBoneModifierValue(float* ReturnValue);
	struct FRotator GetBlockingShieldOffsets(bool* ReturnValue);
	void GetAlternateStandingAnim(float OutBlendInTime, float OutBlendOutTime, class UAnimSequence** ReturnValue);
	TArray<struct FBoneModifierRangeArray> GetAllBoneModifierValues(TArray<float>* ReturnValue);
	void GetAdditiveStandingAnimNonAdditive(bool* ReturnValue);
	void GetAdditiveStandingAnim(float OutBlendInTime, float OutBlendOutTime, class UAnimSequence** ReturnValue);
	float GetActualTargetingFOV(float* ReturnValue);
	void GetActiveMission(class AMissionType** ReturnValue);
	void GameStateHandleEvent(class FName* NameParam, struct FVector* VecParam);
	void FinishWeaponSwitch();
	void FindForPlayerController(class AShooterPlayerController** APC, class AShooterCharacter** ReturnValue);
	bool DoForceStreamComponents();
	void DetachGrapHookCable();
	void DetachFromLadder();
	void CycleFastInventoryNext(bool* Next);
	bool CycleFastInventory();
	void ClientWasPushed();
	void ClientUpdatedInventory();
	bool ClientsSpawnHexagonVFX();
	void ClientSetExpectedBase(uint32* BaseID);
	struct FItemNetID ClientReceiveNextWeaponID();
	void ClientPlayHarvestAnim();
	class AShooterCharacter* ClientNotifyTribeRequest();
	void ClientNetEndClimbingLadder();
	class FString ClientInviteToAlliance(uint32 AllianceID, const class FString& AllianceName);
	void ClientClearTribeRequest();
	void ClearSpawnAnim();
	void ClearRidingDino(bool* bFromDino, int32* OverrideUnboardDirection, bool* bForceEvenIfBuffPreventsClear);
	void ClearPreInventoryWeaponItemNetID();
	class UPrimalItem* CanStartWeaponSwitch(bool* ReturnValue);
	void CanEquipWeapons(bool* ReturnValue);
	void CallGameStateHandleEvent(class FName* NameParam, struct FVector* VecParam);
	void BuffsPreventFirstPerson(bool* ReturnValue);
	void BreakGrapple();
	void BPUnstasis();
	void BPUnlockedAllExplorerNotes();
	void BPSetupFirstPersonHandsMesh();
	int32 BPSetPlayerHexagonCount(bool* ReturnValue);
	class USkeletalMeshComponent* BPSetFirstPersonMasterPoseComponent();
	void BPOverrideHealthBarOffset(class APlayerController* ForPC, float* ReturnValue);
	void BPNonDedicatedPostAnimUpdate();
	void BPGetPlayerHexagonCount(int32* ReturnValue);
	void BPGetHealthBarColor(struct FVector* ReturnValue);
	void BPCanImplantSuicide(bool* ReturnValue);
	void AuthPostSpawnInit();
	void AttachToLadder(class USceneComponent* Parent);
	void ApplyBoneModifiers();
	class USkeletalMeshComponent* ApplyBodyColors();
	void AnimUseAimOffset(bool* ReturnValue);
};

// 0x60 (0x15A0 - 0x1540)
// Class ShooterGame.ShooterCharacterMovement
class UShooterCharacterMovement : public UPrimalCharacterMovement
{
public:
	float                                        MaxSpeedMultiplier;                                // 0x1540(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	bool                                         bUseAdditionalLinePenetrationChecks;               // 0x1544(0x1)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_421D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bWaterBaseOnly : 1;                                // Mask: 0x1, PropSize: 0x10x1548(0x1)(ConstParm, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowWaterWalking : 1;                            // Mask: 0x2, PropSize: 0x10x1548(0x1)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_421E[0x57];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterCharacterMovement* GetDefaultObj();

	void UpdateAnalogueInputModifier();
	void SetCurrentAcceleration(struct FVector* NewAcceleration);
	struct FRotator SetClimbingTarget();
	void IsWaterWalking(bool* ReturnValue);
	float BPApplyVelocityBraking(struct FVector* InOutVelocity);
	float BP_PhysicsRotation();
	float BP_PerformMovement();
	void BP_GetAnalogueInputModifier(float* ReturnValue);
};

// 0x10 (0x40 - 0x30)
// Class ShooterGame.ExplorerNoteLocations
class UExplorerNoteLocations : public UDataAsset
{
public:
	TArray<struct FExplorerNoteLocationsPair>    LocationPairs;                                     // 0x30(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UExplorerNoteLocations* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.PrimalCheatManagerExtension
class UPrimalCheatManagerExtension : public UCheatManagerExtension
{
public:

	static class UClass* StaticClass();
	static class UPrimalCheatManagerExtension* GetDefaultObj();

	void JumpToNextExplorerNote();
	void JumpToExplorerNoteByIndex(int32 ExplorerNoteIndex, bool* bOnlyIfUnopened);
	void JTNN();
	void JTEN(int32 ExplorerNoteIndex, bool* bOnlyIfUnopened);
	void GetTargetActor(class AActor** ReturnValue);
	void GetRidingDino(class APrimalDinoCharacter** ReturnValue);
	void GetPlayerCharacter(class AShooterCharacter** ReturnValue);
	void GetAllExplorerNoteActors(TArray<class AActor*>* ReturnValue);
	enum class ECheatActorType GetAllActorsInRadius(float* Radius, TArray<class AActor*>* ReturnValue);
};

// 0x2268 (0x2DA0 - 0xB38)
// Class ShooterGame.ShooterPlayerController
class AShooterPlayerController : public ABasePlayerController
{
public:
	class UPaintingStreamingComponent*           PaintingStreamingComponent;                        // 0xB38(0x8)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig)
	uint8                                        HeldItemSlot[0xA];                                 // 0xB40(0xA)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        UsedItemSlot[0xA];                                 // 0xB4A(0xA)(EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44D7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastRepeatUseConsumableTime[0xA];                  // 0xB58(0x50)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        LastFrameScrollUp;                                 // 0xBA8(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        LastFrameScrollDown;                               // 0xBAC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       HeldItemSlotTime[0xA];                             // 0xBB0(0x50)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       LastUsedItemSlotTimes[0xA];                        // 0xC00(0x50)(Edit, ConstParm, BlueprintVisible, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RespawnSoundDelay;                                 // 0xC50(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44D9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                PauseMenuUITemplate;                               // 0xC58(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44DA[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector                               CurrentPlayerCharacterLocation;                    // 0xC88(0x18)(ConstParm, Net, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44DB[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bPreventControllerAutoUnfreeze : 1;                // Mask: 0x1, PropSize: 0x10xCB8(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bShouldAutoUploadTribeFlag : 1;                    // Mask: 0x2, PropSize: 0x10xCB8(0x1)(BlueprintVisible, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bGamepadHotbarModifierPressed : 1;                 // Mask: 0x4, PropSize: 0x10xCB8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3AD : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_44DC[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalStructurePlacer*                StructurePlacer;                                   // 0xCC8(0x8)(Edit, ConstParm, ExportObject, Net, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44DD[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LastDeathLocation;                                 // 0xCE0(0x18)(Edit, Net, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       LastDeathTime;                                     // 0xCF8(0x8)(Edit, ExportObject, BlueprintReadOnly, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       LastDeathMark;                                     // 0xD00(0x8)(Edit, BlueprintReadOnly, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44DE[0x200];                                   // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class APrimalCharacter>       LastDeathPrimalCharacter;                          // 0xF08(0x8)(BlueprintVisible, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44DF[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bFirstSpecatorCycleSinceDeath;                     // 0xF28(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShowGameModeHUD;                                  // 0xF29(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44E0[0x26];                                    // Fixing Size After Last Property  > TateDumper <
	class USoundCue*                             SelectSlotSound;                                   // 0xF50(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                FogOfWarClass;                                     // 0xF58(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class UFogOfWar*                             FogOfWar;                                          // 0xF60(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig)
	class UPrimalLocalProfile*                   PrimalLocalProfile;                                // 0xF68(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig)
	uint8                                        Pad_44E1[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        CurrentGameModeMaxNumOfRespawns;                   // 0xF90(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44E2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterCharacter*                     LastDiedListenServerHost;                          // 0xF98(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               LastRawInputDir;                                   // 0xFA0(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44E3[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                StructurePlacerClass;                              // 0xFD0(0x8)(ExportObject, Net, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44E4[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxUseDistance;                                    // 0xFE0(0x4)(Net, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxUseCheckRadius;                                 // 0xFE4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<bool>                                 SavedSurvivorProfileSettings;                      // 0xFE8(0x10)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bCachedOnlyShowOnlineTribeMembers;                 // 0xFF8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44E5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        SavedMissionBiomeFilterMask;                       // 0xFFC(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bInitializedMissionUI;                             // 0x1000(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bMissionSortByDistance;                            // 0x1001(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44E8[0x16];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bUsingExtendedInfoMap;                             // 0x1018(0x1)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44E9[0x27];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         IsChangingCameraMode;                              // 0x1040(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44EA[0x17];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bUseOldMiniMap;                                    // 0x1058(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44EB[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FMinimapMark                          CurrentTrackingMark;                               // 0x1060(0x78)(BlueprintVisible, Net, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44EC[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDinoMapMarkerInfo>            MapDinos;                                          // 0x10E0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TWeakObjectPtr<class UPrimalInventoryComponent>> RemoteViewingInventories;                          // 0x10F0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPServerCycleSpectator : 1;                    // Mask: 0x1, PropSize: 0x10x1100(0x1)(BlueprintVisible, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3AE : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_44EE[0x5F];                                    // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AActor>                 FastTravelDroppedInventory;                        // 0x1160(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44F0[0x19];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bPreventCanOpenMap;                                // 0x1181(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44F1[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                PhotoModeMarkerActor;                              // 0x1188(0x8)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44F2[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bIsFirstSpawn : 1;                                 // Mask: 0x1, PropSize: 0x10x1198(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsRespawning : 1;                                 // Mask: 0x2, PropSize: 0x10x1198(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3AF : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_44F4[0x2F];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                SteamInventoryStatusUITemplate;                    // 0x11C8(0x8)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44F6[0xD0];                                    // Fixing Size After Last Property  > TateDumper <
	struct FItemNetID                            LastSteamItemIDToRemove;                           // 0x12A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	struct FItemNetID                            LastSteamItemIDToAdd;                              // 0x12A8(0x8)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44F7[0x220];                                   // Fixing Size After Last Property  > TateDumper <
	int32                                        SpectatorCycleIndex;                               // 0x14D0(0x4)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44F8[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsFastTravelling;                                 // 0x14D5(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bLastSpawnWasFastTravel;                           // 0x14D6(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnableTargetingInput;                             // 0x14D7(0x1)(Edit, ConstParm, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnableFire;                                       // 0x14D8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnableAltFire;                                    // 0x14D9(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44F9[0x1F];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bPreventPaintingStreaming;                         // 0x14F9(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44FA[0xCE];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FServerChatMessage>            ServerMessageQueue;                                // 0x15C8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bReachedTamedDinoLimit;                            // 0x15D8(0x1)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bHasSurvivedOneDay;                                // 0x15D9(0x1)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bHasReachedHighestPeak;                            // 0x15DA(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bHasReachedLowestDepth;                            // 0x15DB(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44FB[0x9C];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bUseCustomCrosshairBP;                             // 0x1678(0x1)(ConstParm, Net, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44FD[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FPointOfInterestData_ForCompanion> WaypointsSOTF;                                     // 0x1680(0x10)(ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44FE[0x78];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<uint8>                                LastDownloadPlayerDataBytes;                       // 0x1708(0x10)(Edit, ConstParm, ExportObject, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_44FF[0x38];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        ViewingWheelCategory;                              // 0x1750(0x4)(ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4500[0x24];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_3B0 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bNotifyPawnBuffsOfDamageEvents : 1;                // Mask: 0x4, PropSize: 0x10x1778(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3B1 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4501[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bForceHideGameplayUI;                              // 0x1781(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4503[0x36];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bPreventDefaultCharacterItems;                     // 0x17B8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4504[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SFXVolumeMultiplier;                               // 0x17BC(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4506[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       LastShowExtendedInfoTime;                          // 0x17E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4507[0xB1];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsOnlyViewingRemoteInventory;                     // 0x1899(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bHasViewOnlyInventoryOpen;                         // 0x189A(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDrawBlackBackground;                              // 0x189B(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4509[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                CreativeModeBuff;                                  // 0x18A0(0x8)(Edit, ConstParm, ExportObject, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PrimalStatsCacheFlushInterval;                     // 0x18A8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_450A[0x38];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        PingCoolDownTime;                                  // 0x18E4(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       LastPingTime;                                      // 0x18E8(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PingTraceDistance;                                 // 0x18F0(0x4)(Edit, Net, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxTeamPingDataOnClient;                           // 0x18F4(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FTeamPingDataForClient>        CurrentClientTeamPings;                            // 0x18F8(0x10)(ExportObject, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FTeamPingDataForClient                TeamPingSettings_GoHere;                           // 0x1908(0x80)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FTeamPingDataForClient                TeamPingSettings_Follow;                           // 0x1988(0x80)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FTeamPingDataForClient                TeamPingSettings_FollowMe;                         // 0x1A08(0x80)(Net, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FTeamPingDataForClient                TeamPingSettings_Attack;                           // 0x1A88(0x80)(Edit, ConstParm, BlueprintReadOnly, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FTeamPingDataForClient                TeamPingSettings_Tame;                             // 0x1B08(0x80)(Edit, ConstParm, BlueprintVisible, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FTeamPingDataForClient                TeamPingSettings_LootIt;                           // 0x1B88(0x80)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FTeamPingDataForClient                TeamPingSettings_Danger;                           // 0x1C08(0x80)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FTeamPingDataForClient                TeamPingSettings_Track;                            // 0x1C88(0x80)(Edit, Net, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FTeamPingDataForClient                TeamPingSettings_RallyPoint;                       // 0x1D08(0x80)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FTeamPingDataForClient                TeamPingSettings_ClearRallyPoint;                  // 0x1D88(0x80)(Edit, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PingNotifyRadius;                                  // 0x1E08(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PingLifetime;                                      // 0x1E0C(0x4)(Edit, BlueprintReadOnly, Net, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PingLifetime_Dying;                                // 0x1E10(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_450E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            PingIcon_Default;                                  // 0x1E18(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            PingIcon_Players;                                  // 0x1E20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            PingIcon_Dinos;                                    // 0x1E28(0x8)(Edit, BlueprintVisible, ExportObject, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            PingIcon_Structures;                               // 0x1E30(0x8)(ConstParm, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FPingData>                     CurrentPings;                                      // 0x1E38(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_450F[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	struct FTeamPingData                         TribeCacheRallyPointData;                          // 0x1E58(0x50)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bTribeCacheHaveRallyPointData;                     // 0x1EA8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4511[0x1D3];                                   // Fixing Size After Last Property  > TateDumper <
	uint8                                        bWantsToPing : 1;                                  // Mask: 0x1, PropSize: 0x10x207C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnablePingSystem : 1;                             // Mask: 0x2, PropSize: 0x10x207C(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreNextToggleInGameMenu : 1;                   // Mask: 0x4, PropSize: 0x10x207C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3B2 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4512[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bDebugPOIs;                                        // 0x2080(0x1)(ExportObject, BlueprintReadOnly, Net, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4513[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        POI_SearchTickInterval_Current;                    // 0x2084(0x4)(ExportObject, Net, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             POI_SearchTickInterval_RandRanges;                 // 0x2088(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        POI_SearchRadius;                                  // 0x2098(0x4)(Edit, BlueprintVisible, ExportObject, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4514[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       POI_LastSearchTickTime;                            // 0x20A0(0x8)(Edit, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UUserWidget*>                   SpawnedPointWidgets;                               // 0x20A8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class APointOfInterestCosmeticActor*> SpawnedPointCosmeticActors;                        // 0x20B8(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FPointOfInterestData_ForCompanion> NearbyPointsOfInterest;                            // 0x20C8(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FMissionWaypointInfo                  MissionWaypoint;                                   // 0x20D8(0x38)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4516[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_3B4 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bWasGamepadHotbarModifierPressed_RightShoulder : 1; // Mask: 0x2, PropSize: 0x10x2124(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3B5 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4518[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnClientReceiveStructuresPlacedOnFloor;            // 0x2128(0x10)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4519[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsInAdvancedCinematicMode;                        // 0x2158(0x1)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_451A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        Gen1ENFixDesyncValue;                              // 0x215C(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FStructHighlightInfo>          HighlightedStructures;                             // 0x2160(0x10)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalStructure>> EnforcementRelevantStructures;                     // 0x2170(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FLinearColor>                  EnforcementColors;                                 // 0x2180(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_451D[0x54];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bEnableSpectatorDetach;                            // 0x21E4(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnableSpectatorCycling;                           // 0x21E5(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_451F[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FUserCosmeticInfo                     UserCosmeticInfo;                                  // 0x21E8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance)
	TMap<int32, class AActor*>                   ActiveWaypoints_Creatures;                         // 0x21F8(0x50)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<int32, class AActor*>                   ActiveWaypoints_Players;                           // 0x2248(0x50)(Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       LastNetworkTimeRequestedFilterCachedTeamTameList;  // 0x2298(0x8)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4521[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FTamingWaypointInfo>           TamingWaypoints;                                   // 0x22A8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4522[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FTrackedActorWaypointInfo>     TrackedActorWaypoints;                             // 0x22D0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FTrackedActorWaypointInfo>     TrackedActorWaypoints_TeammatesOnMap;              // 0x22E0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4523[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CustomActorTracking_DisplayedResultsCount;         // 0x22F4(0x4)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        CustomActorTracking_LastSavedCustomTameSelectionType; // 0x22F8(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        CustomActorTracking_LastSavedDinoGroup;            // 0x22FC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                CustomActorTracking_LastSavedCustomTameSearchText; // 0x2300(0x10)(Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        CustomActorTracking_LastSavedScrollbarIndex;       // 0x2310(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         CustomActorTracking_HasJustChangedSelectionType;   // 0x2314(0x1)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         CustomActorTracking_HasJustChangedDinoGroup;       // 0x2315(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         CustomActorTracking_HasJustChangedSearchText;      // 0x2316(0x1)(ConstParm, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4525[0x29];                                    // Fixing Size After Last Property  > TateDumper <
	TMap<int32, struct FTrackedActorPlusInfoStruct> AllCreaturesWhosInfoIsBeingSentToClientFromServer; // 0x2340(0x50)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<int32, struct FTrackedActorPlusInfoStruct> AllPlayersWhosInfoIsBeingSentToClientFromServer_NotTeammates; // 0x2390(0x50)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<int32, struct FTrackedActorPlusInfoStruct> AllPlayersWhosInfoIsBeingSentToClientFromServer_Teammates; // 0x23E0(0x50)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FCustomTrackedActorInfo>       TrackedActorIDs_TotalForFilter_Ordered;            // 0x2430(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<int32, int32>                           TrackedActorIDs_OrderMap_Players;                  // 0x2440(0x50)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<int32, int32>                           TrackedActorIDs_OrderMap_Creatures;                // 0x2490(0x50)(BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<int32, bool>                            CreaturesAlreadyHandledByTamingAutoAdd;            // 0x24E0(0x50)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       CachedTeamTameListUpdateInterval;                  // 0x2530(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        CustomActorTracking_MaxAllowedFavoritedActors;     // 0x2538(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        CustomActorTracking_MaxAllowedWaypointTrackedActors; // 0x253C(0x4)(ConstParm, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ServerRequestCustomTrackedActorListInterval_WithoutUI; // 0x2540(0x4)(ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ServerRequestCustomTrackedActorListInterval_WithUI; // 0x2544(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ClientTimerCachedTameSelectionType;                // 0x2548(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ClientTimerCachedDinoGroup;                        // 0x254C(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ClientTimerCachedCustomTameSearchText;             // 0x2550(0x10)(ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ClientTimerCachedNewScrollbarIndex;                // 0x2560(0x4)(ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         LatestClientAutoTrackTamesSetting;                 // 0x2564(0x1)(BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4529[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TrackActorPOILocationLerpRateWhenNotInClientRange; // 0x2568(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ActorTrackingPOIAlphaOnScreen;                     // 0x256C(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ActorTrackingPOIScaleOnScreen;                     // 0x2570(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ActorTrackingPOIAlphaOffScreen;                    // 0x2574(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ActorTrackingPOIScaleOffScreen;                    // 0x2578(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DesiredDistanceForActorTrackingPOILoweredTransparency; // 0x257C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             ActorTrackingPOIDistanceToScreenCenterForTransparency; // 0x2580(0x10)(ConstParm, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             POIDistanceToScreenCenterDismiss;                  // 0x2590(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_452A[0xE8];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        DistanceNearDeathWaypointToClearPOI;               // 0x2688(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ClientsideTrackLatestDeathPOI;                     // 0x268C(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_452C[0x43];                                    // Fixing Size After Last Property  > TateDumper <
	class APostProcessVolume*                    LastHighestPriorityPostProcessVolume;              // 0x26D0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FPrimalPlayerDataStruct               MyPlayerDataStruct;                                // 0x26D8(0x4F8)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class AVolumetricDispatcher*                 MyVolumetricDispatcher;                            // 0x2BD0(0x8)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        DebugPingLifetime : 1;                             // Mask: 0x1, PropSize: 0x10x2BD8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnablingSpectator : 1;                            // Mask: 0x2, PropSize: 0x10x2BD8(0x1)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3B6 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_452E[0x1BF];                                   // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPGetExtraWaypointsSOTF : 1;                   // Mask: 0x1, PropSize: 0x10x2D98(0x1)(ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_452F[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterPlayerController* GetDefaultObj();

	void ZoneVolumeReport();
	void WriteVideoReplayBufferToDisk();
	class FString WritePNTScreenshot(class FString* ReturnValue);
	void ViewingAnUploadTerminal(bool* ReturnValue);
	void UseFastInventory();
	class FName UpdateTrackingWaypointMark();
	void UpdateRallyPoinTimer();
	void UpdateCustomActorTrackListEntries_Combined(TArray<struct FTrackedActorPlusInfoStruct>* InfoList, bool* IsInfoFresh, bool* IsPlayer, TArray<struct FCustomTrackedActorInfo>* ReturnValue);
	bool UnlockExplorerNote(int32 ExplorerNoteIndex, bool SavePlayerData);
	class FName UnlockEmote();
	void UndermeshSphere(int32* Radius);
	void TurnOnGmBuffAndTekArmorAndStatFpsAndAlsoStatUnitBecauseThisIsEasierToTypeOnXbox();
	void TurnInput(float Val);
	void TryToForceUploadCharacter();
	void TryCreateTeamPingType(enum class ETeamPingType PingType, bool* ReturnValue);
	void TraceTeamPingType(enum class ETeamPingType PingType, const struct FHitResult& Hit, enum class ETeamPingType ReturnPingType, bool* ReturnValue);
	void ToggleWeaponAccessory();
	void ToggleHud();
	float Tick_UpdatePings();
	float Tick_SearchForPOIs();
	void TestPurchaseEP();
	void TestPhysxPerf(int32 RayCount, float DistanceOfRays);
	void TestNotification();
	class FString TestAlarmNotification(const class FString& Message);
	void TellServerAboutNewAutoTrackSetting_ServerLogic(bool SelectedAutotrack);
	void TellServerAboutNewAutoTrackSetting(bool SelectedAutotrack);
	bool SwitchFastInventory();
	void SwitchChangeCameraMode();
	void StopTrackingItem(class UPrimalItem* ItemReference);
	void StopSpectating();
	void StartWhistleSelection();
	void StartTrackingItem(class UPrimalItem* ItemReference);
	void StartSurfaceCameraForPassenger(float OnSurfaceTargetYaw, float OnSurfaceTargetPitch, float OnSurfaceTargetRoll);
	void StartSurfaceCamera(float OnSurfaceTargetYaw, float OnSurfaceTargetPitch, float OnSurfaceTargetRoll, float OnSurfaceCameraInterpolationSpeed, bool UseSurfaceCameraInterpolation, struct FVector* CameraOffset);
	void StartPlacingStructrue(class UClass* BuildingStructure);
	void StartEmoteSelection();
	void StartArkGamepadFaceButtonTop();
	void StartArkGamepadFaceButtonRight();
	void StartArkGamepadFaceButtonLeft();
	void StartArkGamepadFaceButtonBottom();
	void StartArkGamepadBackButton();
	void SpectatorDetachOrbitCamera();
	float SpawnTestStructures(int32 NumStructures, int32 StructureArrayIndex, int32 NumStructureTypes);
	float SpawnTestDinos(int32 DinoArrayIndex, int32 NumDinoTypes);
	void ShowTribeManagerBP();
	void ShowTribeFlagPainting(bool AutoUploadLastPainting, class APrimalStructureTribeFlag* TribeFlag);
	void ShowMyAdminManager();
	void ShowCustomTrackedDinoListMenu(int32 SpecificCharacterID, bool* IsPlayer, bool IsFavorite, bool IsWaypoint);
	void ShouldSpawnWaterInteraction(bool* ReturnValue);
	void ShouldShowExtendedHUDInfo(bool* ReturnValue);
	void ShouldHideGameplayUI(bool* ReturnValue);
	bool SetVideoReplayEnabled();
	void SetupNewTrackBP();
	void SetReplayVideoQuality(int32 VideoQuality);
	void SetPlayerPos(float X, float Y, float Z);
	int32 SetNumReplaySecondsToStore();
	void SetMultiUseWheelCategory(int32* Category, class APrimalBuff* OptionalBuff, class AActor* OverrideTargetActor);
	void SetMissionWaypointVisible(bool bInIsVisible);
	void SetMissionWaypointInfo(const class FString& InWaypointTitle, const struct FVector& InWaypointDestination, class FName* InWaypointID);
	void SetLastInventoryRetrievalTime();
	bool SetInfiniteStats();
	bool SetGodMode();
	bool SetFCustomTrackedPlayerInfoMembersByPlayerRef(struct FCustomTrackedActorInfo* ReturnValue);
	bool SetFCustomTrackedDinoInfoMembersByDinoRef(class APrimalDinoCharacter** HandledDino, struct FCustomTrackedActorInfo* ReturnValue);
	void SetDoFInterpTime(float* InterpTime);
	int32 SetCustomActorTracking_LastSavedScrollbarIndex();
	void SetCustomActorTracking_LastSavedDinoGroup(int32 DinoGroup);
	void SetCustomActorTracking_LastSavedCustomTameSelectionType(int32 CustomTameSelectionType);
	void SetCustomActorTracking_LastSavedCustomTameSearchText(const class FString& CustomTameSearchText);
	void SetControllerGamepadActive(bool* bIsActive);
	void SetCinematicModeAdvanced(bool bInCinematicMode, bool* bPreventCameraAnimFPV, bool* bSetHUDHidden, bool* bDisableKeymappings, TArray<class FName>* KeyActionNames, bool* bDisableChat);
	bool SetCheatPlayer();
	void SetChangingCameraMode(bool* bSet);
	bool SetAutoPlayer();
	void SetAdminIcon(bool* bAdminIcon);
	void ServerVerifyStructurePlacementItemData(const struct FItemNetID& PlaceUsingItemID);
	class APrimalDinoCharacter* ServerUploadDino();
	class UPrimalInventoryComponent* ServerUploadCurrentCharacterAndItems();
	class UPrimalInventoryComponent* ServerUploadCharaterDataToArk();
	void ServerUpdateCustomActorTrackListEntries_Players(TArray<struct FTrackedActorPlusInfoStruct>* InfoList, bool* IsInfoFresh);
	void ServerUpdateCustomActorTrackListEntries_Creatures(TArray<struct FTrackedActorPlusInfoStruct>* InfoList, bool* IsInfoFresh);
	void ServerUntrackAllActors_ServerLogic();
	void ServerUntrackAllActors();
	void ServerUnlockPerMapExplorerNote(int32 ExplorerNoteIndex, bool* bAvoidBuff, bool SavePlayerData);
	void ServerUnbanPlayer(class FString* PlayerSteamName);
	class UPrimalInventoryComponent* ServerTransferToRemoteInventory(struct FItemNetID* ItemID, bool* bAlsoTryToEqup, int32* RequestedQuantity);
	void ServerTransferredPlayerConfirmationResult(bool* bAccept);
	bool ServerTransferFromRemoteInventory(struct FItemNetID* ItemID, int32* RequestedQuantity, int32* ToSlotIndex);
	class UPrimalInventoryComponent* ServerTransferAllToRemoteInventory(const class FString& CurrentCustomFolderFilter, const class FString& CurrentNameFilter, class FString* CurrentDestinationFolder, bool* bNoFolderView, bool OnlySkins, bool AlsoSkins);
	class UPrimalInventoryComponent* ServerTransferAllFromRemoteInventory(const class FString& CurrentCustomFolderFilter, const class FString& CurrentNameFilter, class FString* CurrentDestinationFolder, bool* bNoFolderView);
	void ServerTogglePOIVisibilityForTrackedPlayerWaypoint_ServerLogic(int32* TrackedPlayerIndex, bool* ShouldMarkActive);
	void ServerTogglePOIVisibilityForTrackedPlayerWaypoint(int32* TrackedPlayerIndex, bool* ShouldMarkActive);
	void ServerTogglePOIVisibilityForTrackedCreatureWaypoint_ServerLogic(int32* TrackedCreatureIndex, bool* ShouldMarkActive);
	void ServerTogglePOIVisibilityForTrackedCreatureWaypoint(int32* TrackedCreatureIndex, bool* ShouldMarkActive);
	void ServerTogglePOIVisibilityForTrackedActorWaypoint_Combined(int32* TrackedActorIndex, bool* ShouldMarkActive, bool* IsPlayer, bool* bDoToggle);
	void ServerSuicide();
	void ServerStopWeaponFire(class AShooterWeapon** Weapon);
	void ServerStopWeaponAltFire(class AShooterWeapon** Weapon);
	void ServerStopSpectating();
	void ServerStayAlive();
	void ServerStartWeaponFire(class AShooterWeapon** Weapon);
	void ServerStartWeaponAltFire(class AShooterWeapon** Weapon);
	uint64 ServerSpectateToPlayerByID();
	void ServerShowMessageOfTheDay();
	void ServerSetVRPlayer(bool* bSetVRPlayer);
	void ServerSetSupressAdminIcon(bool* bSuppress);
	void ServerSetSubscribedApp(int32 AppID, bool* bPreventDefaultItems);
	float ServerSetSlomoRateFromSpectator();
	void ServerSetMessageOfTheDay(const class FString& Message);
	class APrimalStructureMovingContainer* ServerSetItemBalloonLocation(struct FPrimalMapMarkerEntryData* MapMarker);
	class UPrimalInventoryComponent* ServerSetFreeCraftingQuantity(int32 Quantity);
	void ServerSetFavoriteTrackedPlayerViaCharacterIndex_ServerLogic(int32* TrackedPlayerIndex, bool* ShouldFavorite);
	void ServerSetFavoriteTrackedPlayerViaCharacterIndex(int32* TrackedPlayerIndex, bool* ShouldFavorite);
	void ServerSetFavoriteTrackedCreatureViaCharacterIndex_ServerLogic(int32* TrackedPlayerIndex, bool* ShouldFavorite);
	void ServerSetFavoriteTrackedCreatureViaCharacterIndex(int32* TrackedPlayerIndex, bool* ShouldFavorite);
	void ServerSetFavoriteTrackedActorViaCharacterIndex_Combined(int32* TrackedPlayerIndex, bool* ShouldFavorite, bool* IsPlayer);
	void ServerSetDeathWaypointVisible_ServerLogic(int32 DeathLocationIndex);
	void ServerSetDeathWaypointVisible(int32 DeathLocationIndex);
	void ServerSetDeathWaypointInvisible_ServerLogic(int32 DeathLocationIndex);
	void ServerSetDeathWaypointInvisible(int32 DeathLocationIndex);
	void ServerSetActiveWaypointTrackedPlayerViaCharacterIndex_ServerLogic(int32* TrackedPlayerIndex, bool* ShouldMarkActive);
	void ServerSetActiveWaypointTrackedPlayerViaCharacterIndex(int32* TrackedPlayerIndex, bool* ShouldMarkActive);
	void ServerSetActiveWaypointTrackedCreatureViaCharacterIndex_ServerLogic(int32* TrackedCreatureIndex, bool* ShouldMarkActive);
	void ServerSetActiveWaypointTrackedCreatureViaCharacterIndex(int32* TrackedCreatureIndex, bool* ShouldMarkActive);
	void ServerSetActiveWaypointTrackedActorViaCharacterIndex_Combined(int32* TrackedPlayerIndex, bool* ShouldMarkActive, bool* IsPlayer);
	void ServerSendDirectMessage(class FString* PlayerSteamID, const class FString& Message);
	int32 ServerSendChatMessage();
	enum class EPrimalARKTributeDataType ServerSendArkDataPayloadEnd(struct FGuid* ID);
	uint32 ServerSendArkDataPayloadBegin(struct FGuid* ID, class FString* Name);
	TArray<uint8> ServerSendArkDataPayload(struct FGuid* ID);
	class FName ServerSelectedCustomItemAction(struct FItemNetID* ItemID);
	void ServerSaveWorld();
	void ServerRequestUpdateTrackedWaypointsOnly_ServerLogic(bool ClientAutoTrackTamesSetting);
	void ServerRequestUpdateTrackedWaypointsOnly(bool ClientAutoTrackTamesSetting);
	void ServerRequestUpdateTrackedWaypointsAndMapPlayers_ServerLogic(bool ClientAutoTrackTamesSetting);
	void ServerRequestUpdateTrackedWaypointsAndMapPlayers(bool ClientAutoTrackTamesSetting);
	void ServerRequestUpdateActiveMissionTags();
	void ServerRequestTribeLog();
	void ServerRequestTamingInfoList_ServerLogic();
	void ServerRequestTamingInfoList();
	void ServerRequestStructuresPlacedOnFloor(TArray<class APrimalStructure*>* OnStructures);
	class FName ServerRequestShowLeaderboards();
	void ServerRequestSetPin(class UObject* ForTarget, int32* PinValue, bool* bIsSetting, int32* TheCustomIndex);
	void ServerRequestSetDefaultDestination(int32* ForSpawnPointID, int32* SpawnPointID);
	int32 ServerRequestRespawnAtPoint(int32* SpawnPointID);
	class UPrimalInventoryComponent* ServerRequestRemoveWeaponClipAmmo(struct FItemNetID* ItemID);
	class UPrimalInventoryComponent* ServerRequestRemoveWeaponAccessoryOnly(struct FItemNetID* ItemID);
	class UPrimalInventoryComponent* ServerRequestRemoveItemSkinOnly(struct FItemNetID* ItemID);
	class UPrimalInventoryComponent* ServerRequestRemoveItemSkin(struct FItemNetID* ItemID);
	void ServerRequestRemoveDinoFromTamingListByID_ServerLogic(int32* InID1, int32* InID2);
	void ServerRequestRemoveDinoFromTamingListByID(int32* InID1, int32* InID2);
	class UPrimalInventoryComponent* ServerRequestRemoteDropAllItems(const class FString& CurrentCustomFolderFilter, const class FString& CurrentNameFilter);
	void ServerRequestPlaceStructureSkin(class APrimalStructure** StructureToSkin, class UClass** StructureSkinClass);
	bool ServerRequestPlaceStructure(int32* StructureIndex, struct FVector* BuildLocation, const struct FRotator& BuildRotation, const struct FItemNetID& PlaceUsingItemID, bool bIsCheat, int32 WithSnapPointCycle);
	void ServerRequestMyTribeOnlineList();
	enum class EPrimalCharacterStatusValue ServerRequestLevelUp(class UPrimalCharacterStatusComponent* ForStatusComp);
	int32 ServerRequestInventoryUseItemWithItem(struct FItemNetID* ItemID1, struct FItemNetID* ItemID2);
	int32 ServerRequestInventoryUseItemWithActor(struct FItemNetID* ItemID1);
	int32 ServerRequestInventoryUseItemRemoteWithItemLocal(class UPrimalInventoryComponent* Localinv, class UPrimalInventoryComponent* Remoteinv, struct FItemNetID* ItemID1, struct FItemNetID* ItemID2);
	class UPrimalInventoryComponent* ServerRequestInventoryUseItem(struct FItemNetID* ItemID);
	class UPrimalInventoryComponent* ServerRequestInventorySwapItems(struct FItemNetID* ItemID1, struct FItemNetID* ItemID2);
	void ServerRequestFastTravelToPoint(int32 FromSpawnPointID, int32* SpawnPointID);
	void ServerRequestDropAllItems(const class FString& CurrentCustomFolderFilter, const class FString& CurrentNameFilter, bool OnlySkins, bool AlsoSkins);
	int32 ServerRequestDownloadPlayerCharacter(const struct FArkTributePlayerData& DownloadedCharacter, int32* SpawnPointID);
	struct FARKTributeDino ServerRequestDownloadDino();
	class APrimalDinoCharacter* ServerRequestDinoCharStats();
	class APrimalDinoCharacter* ServerRequestDinoAncestors();
	int32 ServerRequestCustomTrackedActorList_ServerLogic(int32 CustomTameSelectionType, int32 DinoGroup, const class FString& CustomTameSearchText, bool ClientAutoTrackTamesSetting);
	int32 ServerRequestCustomTrackedActorList(int32 CustomTameSelectionType, int32 DinoGroup, const class FString& CustomTameSearchText, bool ClientAutoTrackTamesSetting);
	void ServerRequestCreateMissionDataBuff();
	class APrimalStructureItemContainer* ServerRequestContainerFuel();
	class UPrimalInventoryComponent* ServerRequestActorItems(bool bInventoryItems, bool bWithFirstSpawn);
	int32 ServerRepeatMultiUse();
	class UPrimalInventoryComponent* ServerRepairItem(struct FItemNetID* ItemID);
	void ServerRemoveSteamItemSucceeded();
	void ServerRemoveSteamItem(uint32 ItemdDefId);
	bool ServerRemovePawnItem(struct FItemNetID* ItemID);
	void ServerRemovePassenger();
	void ServerRemoveCustomActorTrackListEntries_FromTotalList_TeammatePlayers(TArray<int32>* InfoList, bool* IsInfoFresh);
	void ServerRemoveCustomActorTrackListEntries_FromTotalList_Players(TArray<int32>* InfoList, bool* IsInfoFresh);
	void ServerRemoveCustomActorTrackListEntries_FromTotalList_Creatures(TArray<int32>* InfoList, bool* IsInfoFresh);
	void ServerRemoveAdminPlayer(class FString* PlayerSteamName);
	void ServerReleaseSeatingStructure();
	void ServerRefreshSteamInventory();
	void ServerReceiveCustomActorTrackList_Players(TArray<struct FTrackedActorPlusInfoStruct>* InfoList, bool* IsInfoFresh);
	void ServerReceiveCustomActorTrackList_Creatures(TArray<struct FTrackedActorPlusInfoStruct>* InfoList, bool* IsInfoFresh);
	void ServerReadMessageOFTheDay();
	struct FBPNetExecParams ServerProcessItemNetExecCommandUnreliableBP();
	struct FBPNetExecParams ServerProcessItemNetExecCommandBP();
	void ServerPaint(class UStructurePaintingComponent** Structure, const TArray<struct FPaintItem>& Paints, bool bLastBatch, bool bFromLoadFile, bool ReplicateToClients);
	class UObject* ServerNotifyEditText();
	int32 ServerMultiUse();
	void ServerLoadWorld();
	void ServerLoadUploadedDinos();
	void ServerLoadUploadedCharacters();
	bool ServerLoadArkInventoryItems(const TArray<struct FItemNetInfo>& ArkInventoryItems);
	void ServerListPlayers();
	void ServerKickPlayer(class FString* PlayerSteamName);
	class UPrimalInventoryComponent* ServerInventoryClearCraftQueue();
	class UPrimalInventoryComponent* ServerGrindItemInRemoteInventory(struct FItemNetID* ItemID, bool GrindStack);
	void ServerGlobalCommand(const class FString& Msg);
	bool ServerGiveItem(const struct FSoftObjectPath& ItemString, bool* UseExactQuality, bool* bGiveEngram);
	void ServerGetVersion();
	void ServerGetOriginalHairColor();
	void ServerGetMessageOfTheDay();
	void ServerFixScoutPlayerState();
	class UPrimalInventoryComponent* ServerEquipToRemoteInventory(struct FItemNetID* ItemID);
	void ServerEquipPawnItem(struct FItemNetID* ItemID);
	class UPrimalInventoryComponent* ServerDropFromRemoteInventory(struct FItemNetID* ItemID);
	void ServerDropAllNotReadyForUploadItems();
	void ServerDPC();
	void ServerDownloadTransferredPlayer(int32* SpawnPointID, int32 SpawnPointRegionIndex);
	class FString ServerDisallowPlayerToJoinNoCheck();
	class UPrimalInventoryComponent* ServerDeleteItemFromCustomFolder(const class FString& CFolderName, int32* InventoryCompType, struct FItemNetID* ItemID);
	class UPrimalInventoryComponent* ServerDeleteCustomFolder(const class FString& CFolderName, int32* InventoryCompType);
	TArray<struct FDataSet> ServerDataSetRPC();
	bool ServerCycleSpectator();
	class UPrimalInventoryComponent* ServerCraftItem(struct FItemNetID* ItemID);
	void ServerClearPOIVisibilityForAllActors_ServerLogic();
	void ServerClearPOIVisibilityForAllActors();
	void ServerClearDeathWaypoint_ServerLogic(int32 DeathLocationIndex);
	void ServerClearDeathWaypoint(int32 DeathLocationIndex);
	void ServerCheckUnfreeze();
	void ServerCheckIsValidPlayerToDownload(const struct FArkTributePlayerData& PlayerData);
	void ServerCheckIfWildDinoChildCanBeImprinted_ServerLogic();
	void ServerCheckIfWildDinoChildCanBeImprinted();
	void ServerCharacterUploadWithItems_UploadItem(uint64* PlayerDataID, const struct FItemNetInfo& InvItem);
	void ServerCharacterUploadWithItems_Start(uint64* PlayerDataID, const struct FArkTributePlayerData& PlayerData);
	void ServerCharacterUploadWithItems_FinishAndCreateCharacter(uint64* PlayerDataID);
	void ServerCharacterUploadWithItems_CharaterPayload(uint64* PlayerDataID, const TArray<uint8>& PlayerDataChunk);
	void ServerBanPlayer(class FString* PlayerSteamName);
	class UPrimalInventoryComponent* ServerAutoStackItemIDs(const TArray<struct FItemNetID>& ItemIDs);
	bool ServerAsyncLoadArkInventoryItems(const TArray<struct FItemNetInfo>& ArkInventoryItems);
	class FString ServerAllowPlayerToJoinNoCheck();
	class UPrimalInventoryComponent* ServerAddItemToCustomFolder(const class FString& CFolderName, int32* InventoryCompType, struct FItemNetID* ItemID);
	class UPrimalInventoryComponent* ServerAddItemToArkInventory(struct FItemNetID* ItemID, int32* RequestedQuantity);
	class UPrimalInventoryComponent* ServerAddItemFromArkInventory(struct FItemNetID* ItemID, int32* RequestedQuantity);
	void ServerAddCustomActorTrackListEntries_Players(TArray<struct FTrackedActorPlusInfoStruct>* InfoList, bool* IsInfoFresh);
	void ServerAddCustomActorTrackListEntries_Creatures_ForcePOIVisible(TArray<struct FTrackedActorPlusInfoStruct>* InfoList, bool* IsInfoFresh);
	void ServerAddCustomActorTrackListEntries_Creatures(TArray<struct FTrackedActorPlusInfoStruct>* InfoList, bool* IsInfoFresh);
	void ServerAddAdminPlayer(class FString* PlayerSteamName);
	void ServerAddAchievementID(const class FString& AchievementID, bool bIsOnSpawn);
	class UPrimalInventoryComponent* ServerActorViewRemoteInventory();
	class UPrimalInventoryComponent* ServerActorCloseRemoteInventory();
	void Server_UpdateRallyPointData();
	void Server_SendBlockListFromClient(const TArray<class FString>& BlockedEOSUserIds);
	void Server_SelectAndJoinVoiceChannel(int32 VoiceFilterType);
	struct FReplicatePingData Server_RespondToPing();
	void Server_RequestLastDeathTrackingActorLoc_ServerLogic();
	void Server_RequestLastDeathTrackingActorLoc();
	struct FReplicatePingData Server_Ping();
	class AShooterPlayerController* Server_HandleOnPossessBlockedPlayer();
	void Server_GetPlatformNameFromId(uint32* ID);
	struct FTeamPingData Server_DoTeamPing();
	class FString SendAlarmNotification(class FString* SteamID, const class FString& Message);
	void SCP();
	void SameLinkedId(int64 Value, bool* ReturnValue);
	void RPCStayAlive();
	struct FReplicatePingData RespondToPing();
	void RequestUpdateCachedTeamTameList();
	class FString RequestSpectator();
	class FName RemoveMinimapMark();
	void RemoveItemSucceeded();
	bool RemoveCustomActorTrackListEntries_FromTotalList_Combined(TArray<int32>* InfoList, bool* IsInfoFresh, bool* IsPlayer);
	void RemoteServerCheat(const class FString& Msg);
	void RemoteCheat(const class FString& Msg);
	void ReleasedChangeCameraMode();
	void RefreshDinoTrackInfo();
	void ReceiveCustomActorTrackList_Combined(TArray<struct FTrackedActorPlusInfoStruct>* InfoList, bool* IsInfoFresh, bool* IsPlayer, TArray<struct FCustomTrackedActorInfo>* ReturnValue);
	void QuitToMainMenu();
	void QueryGDKStats();
	int32 PurchaseEngramPoint();
	void PrintColors();
	void PressedChangeCameraMode();
	void PlayHitMarkerStructureAlly();
	void PlayHitMarkerStructure();
	struct FHitMarkerSettings PlayHitMarkerCharacterBP(bool* bHitFriendlyTarget);
	struct FHitMarkerSettings PlayHitMarkerCharacter(bool* bHitFriendlyTarget);
	void PlayerCommand(const class FString& TheCommand, class FString* ReturnValue);
	struct FReplicatePingData PingNearbyPlayers();
	void OnWhistlePress();
	void OnToggleInGameMenu();
	void OnToggleDoFMenu();
	void OnStopTargeting();
	void OnStopFire();
	void OnStartTargeting();
	void OnStartInGameMenu();
	void OnStartFire();
	void OnSpectatorIncreaseBaseSpeedStart();
	void OnSpectatorDecreaseBaseSpeedStart();
	void OnServerRefreshSteamInventoryFinished(bool* bSuccess, uint64* SteamID);
	void OnRefreshSteamInventoryToCheckConsumeFinished(bool* bSuccess, uint64* SteamID);
	void OnRefreshSteamInventoryFinished(bool* bSuccess, uint64* SteamID);
	int32 OnRecievedUpdatedCachedTeamTameList(bool* IsInfoFresh);
	void OnPingUp();
	void OnPingDown();
	void OnLoadArkTributePlayersDataFinished(bool Success, const TArray<struct FArkTributePlayerData>& PlayersData, int32 FailureResponseCode);
	void OnLevelView();
	void OnFirstSaveAfterCharacterDownloadFinished(bool Success);
	void OnEmoteKey2Release();
	void OnEmoteKey2Press();
	void OnEmoteKey1Release();
	void OnEmoteKey1Press();
	void OnDisableSpectator();
	void OnCurrentCharacterAndItemsUploaded(bool Success);
	void OnConsumeItemFinished(bool* bSuccess, uint64* SteamID);
	void OnArkTributeSaved(bool Success);
	TArray<uint64> OnAddItemFinished(bool* bSuccess, uint64* SteamID);
	class FString OnAddedItemsToAllClustersInventory(bool Success, const TArray<int32>& MasterIndexNum);
	int32 NotifyTribeWarStatus();
	float NotifyPawnBuffsOfDamageEvent(class AActor** DamagedActor, const struct FDamageEvent& DamageEvent);
	struct FMinimapMark NewMinimapMark();
	class USceneComponent* NetSpawnFoliageVFXActorAtLocationAndDoFoliageInteraction_Simple(class UClass** AnActorClass, struct FVector_NetQuantize* AtLocation, const struct FRotator_NetQuantize& AtRotation, const struct FVector_NetQuantize& FoliageOrigin_ImpactPoint);
	class USceneComponent* NetSpawnFoliageVFXActorAtLocationAndDoFoliageInteraction(class UClass** AnActorClass, struct FVector_NetQuantize* AtLocation, const struct FRotator_NetQuantize& AtRotation, const struct FVector_NetQuantize& FoliageOrigin_ImpactPoint, const struct FVector_NetQuantize& TraceEndpoint);
	class FName NetSpawnActorAtLocation(class UClass** AnActorClass, struct FVector_NetQuantize* AtLocation, const struct FRotator_NetQuantize& AtRotation);
	class UClass* MobileSpawnTameConsoleAdd(bool* IsBaby);
	bool MobileSpawnTame(bool* IsBaby);
	void MarkDinoListEntryWidgetFavoritePlayer(int32* ID);
	void MarkDinoListEntryWidgetFavoriteCreature(int32* ID);
	void MarkDinoListEntryWidgetFavoriteCombined(int32* ID, bool* IsPlayer);
	void LogChatMessage(const struct FPrimalChatMessage& Message);
	class FName LockEmote();
	void LoadUserCosmeticsInfo();
	void LinkedPlayerIDString(class FString* ReturnValue);
	void LevelView();
	void LeaveMeAlone();
	class FString JoinVoiceLobby();
	class FString JoinVoiceChannel();
	void IsViewingInventoryUI(bool* ReturnValue);
	void IsTribeAdmin(bool* ReturnValue);
	void IsTargetSleeping();
	bool IsSpectator(bool* ReturnValue);
	void IsSOTFIntro(bool* ReturnValue);
	void IsRemoteControlling(bool* ReturnValue);
	struct FVector2D IsPOINearCenterOfScreen(const struct FVector2D& DeadZone, bool* ReturnValue);
	struct FPingData IsPlayerViewingPing(class AShooterPlayerController* ForPC, bool* ReturnValue);
	class UPrimitiveComponent* IsPingedItem(bool* ReturnValue);
	void IsPawnAcknowledged(bool* ReturnValue);
	void IsMinimapOpened(bool* ReturnValue);
	void IsJumpInputPressed(bool* ReturnValue);
	void IsInTribe(bool* ReturnValue);
	class FName IsInputPressed(class FName InputName, bool* ReturnValue);
	void IsHudVisible(bool* ReturnValue);
	void IsGameInputAllowed(bool* ReturnValue);
	void IsFirstLocalPlayerOrLivingLocalPlayer(bool* ReturnValue);
	void IsFirstLocalPlayer(bool* ReturnValue);
	class FName IsEmoteUnlocked(bool* ReturnValue);
	bool IsAtPersonalTameLimit(bool* ReturnValue);
	void IsAltFireInputPressed(bool* ReturnValue);
	struct FReplicatePingData InitPing(bool* ReturnValue);
	class APrimalCharacter* InitCharacterPainting();
	void InfiniteStats();
	enum class EPrimalGDKStat IncrementStat();
	bool HideRiders();
	void HideFPVMesh();
	int32 HavePingDataOfPlayer(bool* ReturnValue);
	void HasGodMode(bool* ReturnValue);
	class FName HasBestScoreForMission(bool* ReturnValue);
	void GlobalCommand(const class FString& Msg);
	int32 GiveSlotItemNum(int32 MasterIndexNum, bool* ReturnValue);
	int32 GiveSlotItem(bool* ReturnValue);
	void GiveColors(int32 Quantity);
	int32 GetTrackedActorCategoryEnumFromInt(enum class ETrackedActorCategory* ReturnValue);
	enum class ETeamPingType GetTeamPingSettingsByType(struct FTeamPingDataForClient* ReturnValue);
	struct FVector GetTamedDinosNearBy();
	void GetSubscribedAppIds(int32* ReturnValue);
	void GetShooterSpectatorPawn(class AShooterSpectatorPawn** ReturnValue);
	void GetShooterHud(class AShooterHUD** ReturnValue);
	bool GetPlayerViewPointNoModifiers();
	void GetPlayerCharacterName(class FString* ReturnValue);
	void GetPlayerCharacterEvenIfDead(class AShooterCharacter** ReturnValue);
	void GetPlayerCharacter(class AShooterCharacter** ReturnValue);
	class AActor* GetPingTitleForActor(class FString* ReturnValue);
	class UPrimitiveComponent* GetPingIconForComponent(class UTexture2D** ReturnValue);
	void GetPersonalTameLimitString(class FString* ReturnValue);
	void GetPawnInventoryComponent(class UPrimalInventoryComponent** ReturnValue);
	void GetNearbyPOIs(TArray<struct FPointOfInterestData_ForCompanion>* ReturnValue);
	void GetMapMarkerPOIs();
	void GetLocalPlayerViewSize(struct FVector2D* ReturnValue);
	void GetLinkedPlayerID(int32* ReturnValue);
	void GetLastInventoryRetrievalTime(double* ReturnValue);
	void GetInventoryUISelectedSkinRemote(class UPrimalItem** ReturnValue);
	void GetInventoryUISelectedSkinLocal(class UPrimalItem** ReturnValue);
	void GetInventoryUISelectedItemRemote(class UPrimalItem** ReturnValue);
	void GetInventoryUISelectedItemLocal(class UPrimalItem** ReturnValue);
	enum class ETrackedActorCategory GetIntFromTrackedActorCategoryEnum(int32* ReturnValue);
	void GetHeldItemSlots(TArray<uint8>* ReturnValue);
	void GetExplorerNoteEntry(int32 ExplorerNoteIndex, struct FExplorerNoteEntry* ReturnValue);
	void GetControllerPlayer(class AShooterCharacter** ReturnValue);
	class FName GetBestScoreForMission(struct FLeaderboardRow* ReturnValue);
	void GetAllMatinees();
	void GetAllCachedTeamTames(TArray<struct FTrackedActorPlusInfoStruct>* ReturnValue);
	TArray<int32> GetAllAimedHarvestActors(bool* ReturnValue);
	void GetActiveMission(class AMissionType** ReturnValue);
	int32 FormatTextWithKeyBindings(bool* bIgnoreMarkup, class FString* ReturnValue);
	void ForceSpectatorCycleBP();
	void FlushPrimalStats();
	void FlushLevelStreaming();
	void FinishInputBlockingTimeout();
	int32 FindGetTrackedActorWaypointIndexID(int32* ReturnValue);
	enum class ETrackedActorCategory FindGetTrackedActorWaypointIndex(int32* ReturnValue);
	int32 FindGetTrackedActorFavoritedIndexID(int32* ReturnValue);
	enum class ETrackedActorCategory FindGetTrackedActorFavoritedIndex(int32* ReturnValue);
	void FinalFlushLevelStreaming();
	void EnvQA();
	bool EnforcementHighlight();
	bool EndWhistleSelectionInput();
	void EndWhistleSelection();
	void EndSurfaceCamera();
	bool EndEmoteSelection();
	void EndArkGamepadFaceButtonTop();
	void EndArkGamepadFaceButtonRight();
	void EndArkGamepadFaceButtonLeft();
	void EndArkGamepadFaceButtonBottom();
	void EndArkGamepadBackButton();
	bool EnableSpectator();
	void EditorReconnect();
	class UCanvas* DrawMultiUsePingEntry(struct FVector2D* CanvasPosition);
	void DrawCrosshairOnScreenBP(struct FVector2D* ReturnValue);
	void DoServerCheckUnfreeze();
	void DoPlayerCommand(const class FString& TheCommand);
	bool DoPingTrace(bool* ReturnValue);
	int32 DoesPlayerOwnPing(bool* ReturnValue);
	void DoCrash();
	void DisableSurfaceCameraInterpolation();
	void DisableEnemyInvisible();
	void DebugStructures();
	bool DebugCheckSeven();
	void CopyWorldBuffStatus();
	void CopyCoordsToClipboard();
	void ConditonalEndGamepadModiferState();
	class UPrimalInventoryComponent* ClientUsedActorItem(struct FItemNetID* ItemID);
	TArray<struct FARKTributeDinoListing> ClientUploadedDinosLoaded();
	TArray<struct FArkTributePlayerDataListing> ClientUploadedCharactersLoaded(bool Success);
	class APrimalDinoCharacter* ClientUploadDino();
	struct FPrimalPlayerDataStruct ClientUpdateMyPlayerDataStruct();
	class UPrimalInventoryComponent* ClientUpdateItemWeaponClipAmmo(struct FItemNetID* ItemID, int32 Ammo);
	class UPrimalInventoryComponent* ClientUpdateItemQuantity(struct FItemNetID* ItemID, int32 ItemQuantity);
	float ClientUpdateItemDurability(struct FItemNetID* ItemID);
	struct FCustomItemData ClientUpdateItemCustomData(struct FItemNetID* ItemID);
	TArray<struct FItemCraftQueueEntry> ClientUpdateInventoryCraftQueue();
	void ClientUpdateCustomActorTrackListEntries_Players(TArray<struct FCustomTrackedActorInfo>* InfoList, bool* IsInfoFresh);
	void ClientUpdateCustomActorTrackListEntries_Creatures(TArray<struct FCustomTrackedActorInfo>* InfoList, bool* IsInfoFresh);
	bool ClientUnlockExplorerNote(int32 ExplorerNoteIndex, bool SavePlayerData);
	void ClientUnlockAchievement(const class FString& AchievementID, bool SavePlayerData);
	uint64 ClientTeleportSpectator(struct FVector* Location);
	class UPrimalInventoryComponent* ClientSwapActorItems(struct FItemNetID* ItemID1, struct FItemNetID* ItemID2);
	class USoundBase* ClientStopLocalSound();
	bool ClientStartSurfaceCameraForPassenger();
	void ClientStartReceivingTribeLog();
	bool ClientStartReceivingActorItems();
	class FString ClientStartActivity();
	void ClientSimpleMarkTrackedActorInfoUpdated();
	void ClientShowTransferredPlayerConfirmationDialog();
	bool ClientShowSpawnUIForTransferringPlayer(class UClass* NewHUDClass);
	float ClientShowSpawnUI();
	class UObject* ClientShowPaintingUI();
	struct FLeaderboardRow ClientShowLeaderboard();
	bool ClientShowCharacterCreationUI();
	void ClientShooterWasKicked(class FText KickReason);
	void ClientSetSpectatorLocation(struct FVector* NewLocation);
	int32 ClientSetPersonalDinoTameCount();
	void ClientSetHUDAndInitUIScenes(class UClass* NewHUDClass);
	struct FRotator ClientSetControlRotation();
	float ClientSetContainerFuel();
	bool ClientSetCanEnableCheats();
	int32 ClientSetArkTributeLimits();
	int32 ClientServerSOTFNotificationCustom(const class FString& MessageText);
	int32 ClientServerSOTFNotification(const class FString& MessageText, bool* bLastPlayer, class FString* TribeName, TArray<class FString>* PlayerNames, const class FString& DeathReason);
	int32 ClientServerNotificationSingle(const class FString& MessageText, int32 MessageTypeID);
	int32 ClientServerNotification(const class FString& MessageText);
	bool ClientServerChatMessage(const class FString& MessageText);
	class FString ClientServerChatDirectMessage(const class FString& MessageText);
	class FString ClientSendVersion();
	bool ClientSendItemNetExecCommandToServer();
	class UPrimalInventoryComponent* ClientSendFolderData(TArray<struct FServerCustomFolder>* ServerCustomFolder);
	enum class EPrimalARKTributeDataType ClientSendArkDataPayloadEnd(struct FGuid* ID, uint64* PlayerDataID);
	uint32 ClientSendArkDataPayloadBegin(struct FGuid* ID, class FString* Name);
	TArray<uint8> ClientSendArkDataPayload(struct FGuid* ID);
	bool ClientRunLocalConsoleCommand();
	void ClientResetRespawningFlag();
	int32 ClientRequestNewTrackInfoFromServer_TimerRestriction(int32 CustomTameSelectionType, int32 DinoGroup, const class FString& CustomTameSearchText);
	int32 ClientRequestNewTrackInfoFromServer(int32 CustomTameSelectionType, int32 DinoGroup, const class FString& CustomTameSearchText);
	void ClientRequestDeathPOIHidden_TimerRestriction();
	TArray<uint64> ClientRemoveItemFromSteamInventory(int32 Quantity);
	struct FItemNetID ClientRemoveItemFromArk();
	void ClientRemoveCustomActorTrackListEntries_FromTotalList_TeammatePlayers(TArray<int32>* InfoList, bool* IsInfoFresh);
	void ClientRemoveCustomActorTrackListEntries_FromTotalList_Players(TArray<int32>* InfoList, bool* IsInfoFresh);
	void ClientRemoveCustomActorTrackListEntries_FromTotalList_Creatures(TArray<int32>* InfoList, bool* IsInfoFresh);
	bool ClientRemoveActorItem(struct FItemNetID* ItemID);
	void ClientRefreshSteamInventoryFinished(bool* bSuccess);
	void ClientReceiveTribeLog(class FString* LogString);
	void ClientReceiveTamingInfoList(TArray<struct FTamingDinoInfo>* InfoList);
	TArray<struct FStructuresOnFloor> ClientReceiveStructuresPlacedOnFloor();
	struct FLinearColor ClientReceiveOriginalHairColor();
	TArray<uint32> ClientReceiveMyTribeOnlineList();
	TArray<float> ClientReceiveDinoCharStats();
	class APrimalDinoCharacter* ClientReceiveDinoAncestors(TArray<struct FDinoAncestorsEntry>* DinoAncestors, TArray<struct FDinoAncestorsEntry>* DinoAncestorsMale, int32* RandomMutationsFemale, int32* RandomMutationsMale);
	void ClientReceiveCustomActorTrackList_Players(TArray<struct FCustomTrackedActorInfo>* InfoList, bool* IsInfoFresh);
	void ClientReceiveCustomActorTrackList_Creatures(TArray<struct FCustomTrackedActorInfo>* InfoList, bool* IsInfoFresh);
	TArray<class FName> ClientReceiveActiveMissionTags();
	int32 ClientProgressAchievementInteger(const class FString& AchievementID, bool SavePlayerData);
	float ClientProgressAchievement(const class FString& AchievementID, bool SavePlayerData);
	struct FBPNetExecParams ClientProcessItemNetExecCommandUnreliableBP();
	struct FBPNetExecParams ClientProcessItemNetExecCommandBP();
	class USoundBase* ClientPlayLocalSound(bool bAttach);
	void ClientPlayerIsValidToDownload(bool* bIsValid, const struct FArkTributePlayerData& PlayerData);
	void ClientOnStartDownloadTransferredPlayerCharacter();
	class FString ClientOnEndDownloadTransferredPlayerCharacter(bool Success, int32 FailureResponseCode);
	void ClientOnDropAllNotReadyForUploadItemsFinished();
	uint64 ClientOnCurrentCharacterAndItemsUploaded();
	class FString ClientOnAddedItemsToAllClustersInventory(bool Success, const TArray<int32>& MasterIndexNum);
	class FName ClientNotifyUnlockHairStyleOrEmote();
	bool ClientNotifyUnlockedEngram(class UClass* ItemClass);
	void ClientNotifyUnlockedAllExplorerNotes();
	float ClientNotifyTribeXP();
	void ClientNotifyTorpidityIncrease();
	class UClass* ClientNotifyTamedDino();
	class UClass* ClientNotifySummonedDino();
	struct FUniqueNetIdRepl ClientNotifyShowProfileRequest();
	class FString ClientNotifyRemotePlayerDeath(class FString* PlayerName);
	class APawn* ClientNotifyPlayerKill(class AActor* PlayerPawn);
	class FString ClientNotifyPlayerDeathReason();
	void ClientNotifyPlayerDeath(class APawn** InstigatingPawn);
	void ClientNotifyPaintFinished(bool* bSuccess);
	void ClientNotifyMessageOfTheDay(const class FString& Message, float* TimeToDisplay);
	void ClientNotifyListenServerOutOfRange();
	int32 ClientNotifyLevelUp(class APrimalCharacter* ForChar);
	void ClientNotifyHitHarvest();
	class UObject* ClientNotifyEditText();
	class APawn* ClientNotifyDinoKill(class APrimalDinoCharacter** InstigatingPawn);
	bool ClientNotifyDinoDeath();
	class UClass* ClientNotifyDefeatedDino();
	void ClientNotifyCantHitHarvest();
	void ClientNotifyCantHarvest();
	void ClientNotifyAdmin();
	bool ClientLoadArkItems();
	struct FItemNetID ClientInsertActorItem();
	class UObject* ClientHUDNotificationTypeParams(int32* MessageType);
	void ClientGetMessageOfTheDay(const class FString& Message);
	bool ClientFinishedReceivingActorItems();
	class UPrimalInventoryComponent* ClientFinishedLoadArkItems();
	void ClientFailedToAddItemFromArkInventory();
	void ClientFailedRemoveSaddle();
	void ClientEndReceivingTribeLog();
	bool ClientEndActivity();
	void ClientDrawUndermeshSphere(int32* Radius);
	bool ClientDrawBrushComponentInGame();
	void ClientDownloadPlayerCharacterRequestFinished(bool Success);
	void ClientDownloadDinoRequestFinished(bool Success);
	int32 ClientDoMultiUse();
	bool ClientDisplayNotificationDialog(const class FString& Message, bool bIsError);
	TArray<struct FDataSet> ClientDataSetRPC();
	void ClientCreateDeathMark(struct FVector* Location);
	void ClientCollectedAchievementItem(class UClass* ItemClass);
	struct FPrimalChatMessage ClientChatMessage();
	bool ClientAddItemToArk();
	class FString ClientAddFolderToInventoryComponent(int32* InventoryCompType);
	float ClientAddFloatingText(struct FVector_NetQuantize* AtLocation, class FString* FloatingTextString, struct FColor* FloatingTextColor, float* TextLifeSpan, struct FVector* TextVelocity, float* MinScale, float* FadeInTime);
	int32 ClientAddFloatingDamageText(struct FVector_NetQuantize* AtLocation, int32 FromTeamID);
	void ClientAddCustomActorTrackListEntries_Players(TArray<struct FCustomTrackedActorInfo>* InfoList, bool* IsInfoFresh);
	void ClientAddCustomActorTrackListEntries_Creatures_ForcePOIVisible(TArray<struct FCustomTrackedActorInfo>* InfoList, bool* IsInfoFresh);
	void ClientAddCustomActorTrackListEntries_Creatures(TArray<struct FCustomTrackedActorInfo>* InfoList, bool* IsInfoFresh);
	class FString ClientAddActorItemToFolder();
	bool ClientAddActorItem();
	bool Client_UpdateRallyPointData(struct FTeamPingData* RallyPointData);
	TArray<uint32> Client_RecieveBlockedUserIdsFromServer();
	class AShooterCharacter* Client_ReceivePingResponse();
	struct FReplicatePingData Client_ReceivePing();
	struct FVector Client_ReceiveLastDeathTrackingActorLoc();
	class ADayCycleManager* Client_ReceiveBuffFromDayCycle();
	void Client_GetPlatformNameFromId(uint32* ID, class FString* PlatformName);
	struct FTeamPingData Client_AddTeamPing();
	class FString CheckRequestSpectator();
	void CheckForPlayerInventory();
	void CheckforOrbiting();
	void CheckCheatsPassword(const class FString& Pass);
	void CheckCanEnableCheats();
	void Cheat(const class FString& Msg);
	float ChangeServerRequestCustomTrackedActorListInterval_WithUI();
	float ChangeServerRequestCustomTrackedActorListInterval_WithoutUI();
	void CCC();
	void CanTeamPing(bool* ReturnValue);
	void CanPingRallyPoint(bool* ReturnValue);
	class AShooterCharacter* CanPingPlayer(bool* ReturnValue);
	bool CanDoPlayerCharacterInput(bool* ReturnValue);
	struct FPointOfInterestData CanDismissPOI(bool* ReturnValue);
	void CallServerRestartPlayer();
	bool BPSetFCustomTrackedPlayerInfoMembersByPlayerRef(struct FCustomTrackedActorInfo* ReturnValue);
	void BPServerRequestUpdateTrackedWaypointsOnly();
	void BPServerRequestUpdateTrackedWaypointsAndMapPlayers();
	int32 BPServerRequestRespawnAtPoint(int32* SpawnPointID);
	int32 BPServerRequestCustomTrackedActorList(int32 CustomTameSelectionType, int32 DinoGroup, const class FString& CustomTameSearchText, bool* Handled);
	bool BPServerRemovePawnItem(struct FItemNetID* ItemID);
	TArray<struct FDataSet> BPServerHandleDataSetRPC();
	bool BPServerCycleSpectator(class AActor** ReturnValue);
	void BPSearchForPOIs(bool* ReturnValue);
	void BPReceivedPlayer(class UPlayer* InPlayer);
	bool BPPreventTurnInput(bool* ReturnValue);
	void BPPreventChangeCamera(bool* ReturnValue);
	void BPOnSpawnPlayerCameraManager();
	int32 BPOnRecievedUpdatedCachedTeamTameList(int32 CustomTameSelectionType, int32 DinoGroup, const class FString& CustomTameSearchText, bool* IsInfoFresh, bool* Handled);
	void BPGetExtraWaypointsSOTF(class APlayerController** Controller, class AShooterCharacter* PlayerPawn, TArray<struct FPointOfInterestData_ForCompanion>* IndicatorsIn, TArray<struct FPointOfInterestData_ForCompanion>* IndicatorsOut);
	void BPDisableSpectator();
	bool BPClientUnlockExplorerNote(int32 ExplorerNoteIndex);
	TArray<struct FDataSet> BPClientHandleDataSetRPC();
	void BPCheckClientPossession(bool* ReturnValue);
	class UClass* BPCheckCanDinoSpawnFromLocation(const struct FVector& CheckLocation, struct FVector* ReturnValue);
	struct FVector BPApplyFoliageHarvestEffectOnHitAndCollect(const struct FVector& FoliageOrigin_ImpactPoint, const struct FVector& TraceEndpoint);
	void BPActivatedMultiUseSelection();
	void BPAcknowledgePossession(class APawn** P);
	void BlueprintGiveLevels(const TArray<int32>& Levels);
	bool BlueprintGiveItem(bool* UseExactQuality, bool* bGiveEngram);
	float AutoCycle();
	void AttemptTransferRedownload();
	void AsyncLoadInventory();
	void AllowTribeGroupPermission(enum class ETribeGroupPermission* TribeGroupPermission, class UObject** OnObject, bool* ReturnValue);
	void AllowedToSpectateAllTeams(bool* ReturnValue);
	void AdminCheat(const class FString& Msg);
	class AShooterPlayerController* AddFloatingDamageText(struct FVector* AtLocation, class AActor** DamagedActor, bool* ReturnValue);
	void AddCustomActorTrackListEntries_Combined(TArray<struct FTrackedActorPlusInfoStruct>* InfoList, bool* IsInfoFresh, bool* IsPlayer, bool* ForcePOIVisible, TArray<struct FCustomTrackedActorInfo>* ReturnValue);
};

// 0x30 (0xB8 - 0x88)
// Class ShooterGame.ShooterCheatManager
class UShooterCheatManager : public UCheatManager
{
public:
	TArray<TSoftClassPtr<class UCheatManagerExtension>> CheatManagerExtentions;                            // 0x88(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_46E2[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsRCONCheatManager;                               // 0xA0(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_46E3[0x17];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterCheatManager* GetDefaultObj();

	void WhatIsMyTarget();
	void VisualizeWorldGeo();
	void VisualizeWorld();
	int32 VisualizeClass();
	void VerifyTransferInventory();
	class FString UnlockEngram();
	class FString UnlockEmote();
	void UnlockAllExplorerNotes();
	void UnlockAchievement(const class FString& AchievementID);
	void UnbanPlayer(class FString* PlayerSteamName);
	void TTC(class FString* DinoID);
	int32 TTAL(const class FString& ActorName);
	int32 TribeStructureAudit();
	int32 TribeMessage(const class FString& Message);
	int32 TribeDinoAudit();
	class FString TransferImprints();
	void TPName(class FString* PlayerName);
	float TPCoords(float Lat, float Z);
	class FString TP();
	void ToggleVolumetricDispatcherDebug();
	void ToggleVolumetricDispatcher();
	void ToggleTracker();
	void ToggleSimulateUnderMemoryPressure();
	void ToggleNavSystem();
	void ToggleLowGravSpin();
	void ToggleLocation();
	void ToggleHud();
	void ToggleGun();
	void ToggleFreezeStatusValues();
	void ToggleFoliageInteraction();
	void ToggleFluidInteraction();
	void ToggleDamageNumbers();
	void ToggleDamageLogging();
	void ToggleClawStepping();
	class FString TOD();
	class FString TimeOfDay();
	void TestSteamRefreshItems();
	void TeleportToPlayerName(class FString* PlayerName);
	int64 TeleportToPlayer();
	int32 TeleportToNearestDino(float X, float Y, float Z);
	void TeleportToCreature(class FString* DinoID);
	void TeleportToActorLocation(const class FString& ActorName);
	int32 TeleportToActiveHorde();
	void TeleportPlayerNameToMe(class FString* PlayerName);
	int64 TeleportPlayerIDToMe();
	void TeleportCreatureToMe(class FString* DinoID);
	void TCTM(class FString* DinoID);
	float TameAOE(float* Radius);
	int32 TakeTribe();
	void TakeAllStructure();
	void TakeAllDino();
	void TacoBell();
	class FString SummonTamed();
	void Suicide();
	void StopLoggingSavedMoves();
	void StartSaveBackup();
	bool StartNearestHorde();
	class FName StartMissionWithMetaData();
	class FName StartMission();
	void StartLoggingSavedMoves();
	void SpoilItem();
	float SPIG(float X, float Y, float Z);
	float SPI(float X, float Y, float Z);
	void SpectateMyTarget();
	float SpawnSetupDino();
	float SpawnExactDino(int64* DinoID);
	void SpawnEgg();
	int32 SpawnDino();
	float SpawnActorTamed();
	float SpawnActorSpreadTamed();
	float SpawnActorSpread();
	float SpawnActorBaby();
	float SpawnActor();
	void SimulateMemoryPressureRestart();
	bool ShowTutorial();
	void ShowMessageOfTheDay();
	void ShowInGameMenu();
	class FString ShowHibernatingDino();
	bool ShowDebugPingLifetime();
	void ShowCheatMenu();
	void ShowAvailableMissionTags();
	void ShowActiveMissions();
	bool SetVideoReplayEnabled();
	void SetUnstasisRadius(float Value);
	class FString SetTimeOfDay();
	float SetTargetPlayerColorVal();
	float SetTargetPlayerBodyVal();
	int32 SetTargetDinoColor();
	float SetTamingEffectivenessModifier();
	void SetStatOnTarget(class FName* StatName, float Value);
	void SetSleepingAOE(float* Radius, bool bIsSleeping);
	bool SetShowAllPlayers();
	void SetPlayerPos(float X, float Y, float Z);
	int16 SetPlayerLevel();
	int32 SetPerfCheck();
	int32 SetNumReplaySecondsToStore();
	float SetNetworkTime();
	void SetMyTargetSleeping(bool bIsSleeping);
	class FString SetMessageOfTheDay(const class FString& Message);
	float SetMaterialParamaterCollectionByNameAndFloatValue();
	bool SetInstantHarvest();
	bool SetInfiniteStats();
	float SetImprintQuality();
	class FString SetImprintedPlayer();
	int32 SetHeadHairstyle();
	float SetHeadHairPercent();
	void SetGraphicsQuality(int32 Val);
	bool SetGodMode();
	bool SetGlobalPause();
	int32 SetFacialHairstyle();
	float SetFacialHairPercent();
	float SetDifficultyValue();
	float SetDebugMeleeAttacks();
	void SetDayCycleSpeed(float* Speed);
	void SetDay(int32 Day);
	int32 SetChatLogMaxAgeInDays();
	class FName SetCameraProfile();
	float SetBabyAgeAOE(float* Radius);
	float SetBabyAge();
	void SetAllAvailableMissionsComplete();
	int32 SetActiveMissionDebugFlags();
	void ServerChatToPlayer(class FString* PlayerName, const class FString& MessageText);
	void ServerChatTo(class FString* SteamID, const class FString& MessageText);
	void ServerChat(const class FString& MessageText);
	void SendDataDogMetric(const class FString& Message);
	bool SDFRide();
	bool SDFBaby();
	bool SDF();
	class FString ScriptCommand();
	void Scatter();
	void SaveWorldDisableTransfer();
	void SaveWorld();
	void SAP();
	int32 RunDinoTest(float* AbilityDelay);
	bool RespawnPlayer();
	void ResetLiveTuningOverloads();
	void ResetLeaderboards();
	void RequestUpdateActiveMissionTags();
	void RequestAimedStructurePlaceTime();
	void RequestAimedDinoTamedTime();
	void ReportSpawnManagers();
	void ReportLeastSpawnManagers();
	void RepairArea(float* Radius);
	int32 RenameTribeID(const class FString& NewName);
	void RenameTribe(class FString* TribeName, const class FString& NewName);
	int32 RenamePlayerId(const class FString& NewName);
	void RenamePlayer(class FString* PlayerName, const class FString& NewName);
	void RemoveWorldBuff(const class FString& WorldBuffIdentifier);
	void RemoveTribeAdmin();
	class FName RemoveDinoTest();
	void RemoveAllWorldBuffs();
	void RegrowFoliage(float* Radius);
	void RefillStats();
	void ReassertColorization();
	float RainMonkeys();
	float RainDinos();
	float RainDanger();
	float RainCritters();
	class FString Psc();
	void PrintDinoStats();
	void PrintActorLocation(const class FString& ActorName);
	void PlayerCommand(const class FString& TheCommand);
	void Pgosweep();
	void PerformGCAndCleanupActors();
	void OpenMap(const class FString& MapName);
	void OnToggleInGameMenu();
	void OneHPTarget();
	int32 OneHPAOE(class FName* Category, float* Radius);
	void OneHP();
	void NextPerfCheck();
	void MoveTargetTo(float X, float Y, float Z);
	class FName Mission(float Value);
	int32 MaxAscend();
	void MakeTribeFounder();
	void MakeTribeAdmin();
	int16 LvlUp();
	void LogStackTrace();
	void LMA();
	void ListPlayers();
	void ListMyTargetBuffs();
	void ListMyBuffs();
	void ListDinos();
	void ListAllPlayerBuffs();
	void ListAllItems();
	void ListActiveHordeEvents();
	int32 LevelUpTarget(class FName* StatName);
	int32 LevelUpAOE(class FName* StatName, float* Radius);
	int32 LevelUp(class FName* StatName);
	bool LessThan(int32 Connections);
	void LeaveMission();
	void LeaveMeAlone();
	void KillSplitscreenPlayer();
	int64 KillPlayer();
	bool KillAOETribe(class FName* Category, float* Radius);
	void KillAOE(class FName* Category, float* Radius);
	void Kill();
	void KickPlayer(class FString* PlayerSteamName);
	int32 JoinTribe();
	float IsUndermesh();
	bool InteractWithFluid(float* Radius, float* Speed);
	void InfiniteWeight();
	void InfiniteStats();
	void InfiniteGod(bool* bSet);
	int32 HurtMyTarget();
	int32 HurtMyAOE(float* Radius);
	int32 HiWarp();
	int32 HideTutorial();
	class FString HibernationReport();
	void HatchEgg();
	int32 GTIPL();
	int32 GTIDPL();
	void GoToFirstMutagenDrop();
	int32 GMSummon();
	int32 GMComp();
	void GMBuff();
	void GlobalObjectCount();
	class FName GiveWeaponSet();
	void GiveToMeAOE(float* Radius);
	void GiveToMe();
	class FName GiveTekEngramsTo();
	void GiveResources();
	int32 GiveMaxLevel();
	bool GiveItemToPlayer();
	void GiveItemSkins(const class FString& EquipmentType);
	class FName GiveItemSet();
	bool GiveItemNumToPlayer(int32 MasterIndexNum);
	bool GiveItemNum(int32 MasterIndexNum);
	bool GiveItem();
	void GiveInfiniteStatsToTarget();
	float GiveExpToTarget(bool* FromTribeShare, bool* bPreventSharingWithTribe);
	float GiveExpToPlayer(bool* FromTribeShare, bool* bPreventSharingWithTribe);
	int32 GiveExplorerNote();
	void GiveEngramsTekOnly();
	void GiveEngrams();
	int32 GiveDinoSet();
	void GiveCreativeModeToTarget();
	int64 GiveCreativeModeToPlayer();
	void GiveCreativeMode();
	void GiveBossItems();
	class FName GiveBossEngrams(int8* Difficulty);
	class FName GiveArmorSet();
	void GiveAllStructure();
	void GiveAllExplorerNotes();
	class FName GFID();
	bool GFI();
	int32 GetTribeIdPlayerList();
	int32 GetTribe();
	int32 GetSteamIDForPlayerID();
	void GetSpoiledEgg(int32* NumMutationsToAdd);
	void GetPlayerIDForSteamID(int32* SteamID);
	void GetNearestAlliedPlayerOrDino();
	void GetGameLog();
	void GetEgg(int32* NumMutationsToAdd);
	void GetChat();
	void GetAllTamesNumber();
	void GetAllStructuresNumber();
	void GetAllNumbers();
	class FString GetAllMyTarget();
	void GetAllItemsNumber();
	void GCMT();
	int64 GCMP();
	void GCM();
	void GameCommand(const class FString& TheCommand);
	void FSM(bool* PreventFinishTheMatch, bool* UseQuetzalBus);
	void ForceUpdateDynamicConfig();
	class FString ForceTribes(const class FString& NewTribeName);
	void ForceTameAOE(float* Radius);
	void ForceTame();
	class FName ForceStartMission();
	void ForceStartMatch(bool* PreventFinishTheMatch, bool* UseQuetzalBus);
	void ForceReturnIsXboxOneBuildOnPC(bool* ReturnValue);
	void ForceReturnIsPS4BuildOnPC(bool* ReturnValue);
	void ForcePoop();
	int32 ForcePlayerToJoinTribeId();
	int64 ForcePlayerToJoinTribe(class FString* TribeName);
	int64 ForcePlayerToJoinTargetTribe();
	void ForceMutagenSpawn();
	void ForceJoinTribe();
	bool ForceGiveBuff();
	bool ForceEnableMeshCheckingOnMe();
	class FString ForceCompleteActiveMission();
	void ForceCheckInMesh();
	void FindMutagenDrops();
	bool FEMCOM();
	bool EnemyInVisible();
	bool EnableSpectator();
	void EnableCheats(const class FString& Pass);
	void EnableAllMating();
	void DupeLastItem();
	void DumpFallbackSeeds();
	void DumpDinoStats();
	void DumpConfig();
	void DumpAssetProperties(class FString* Asset);
	bool DrawDebugBoxForVolumes(float* LineThickness);
	float DrainWater();
	float DrainFood();
	void DragMyTarget();
	void DoTestingThing();
	void DoTame();
	float DoStall();
	void DoRestartLevel();
	void DoHang();
	void DoExit();
	float DoDamagePct();
	void DisallowPlayerToJoinNoCheck(class FString* SteamID);
	void DisableSpectator();
	void DisableAllMating();
	class FName DinoSet(float Value);
	class FName Dino();
	void DetachChar();
	void DestroyWildDinos();
	class FString DestroyWildDinoClasses(bool bExactMatch);
	bool DestroyTribeStructuresLessThan(int32 Connections);
	void DestroyTribeStructures();
	void DestroyTribePlayers();
	int32 DestroyTribeIdStructures();
	int32 DestroyTribeIdPlayers();
	int32 DestroyTribeIdDinos();
	int32 DestroyTribeId();
	void DestroyTribeDinos();
	void DestroyStructures();
	void DestroyMyTarget4();
	void DestroyMyTarget3();
	void DestroyMyTarget2();
	void DestroyMyTarget();
	void DestroyMyPawn();
	void DestroyFoliage(float* Radius, bool* PutFoliageResourcesInInventory);
	void DestroyAOE(class FName* Category, float* Radius);
	void DestroyAllTames();
	void DestroyAllEnemies();
	class FString DestroyActors(bool bExactMatch);
	class FName DefeatBoss(int8* Difficulty);
	int32 DefeatAllBosses();
	void DeepPockets();
	void DebugToggleHLNAMonologue();
	void DebugPathsForTarget();
	void DebugMyTarget();
	void DebugMyDinoTarget();
	void DebugCompanionReactions();
	void DebugCompanionAsyncLoadedFiles();
	void DebugCheckDinoPawnsOctree();
	void DebugAllowVRMissionTeleport();
	void DeactivateMission();
	class FName DCMSet(float Val);
	void CryoMyTarget();
	void CryoAOE(float* Radius);
	void Cryo(class FString* DinoID);
	void CompleteMission();
	void CloneDino();
	void ClearTutorials();
	int32 ClearPlayerInventory(bool* bClearInventory, bool* bClearSlotItems, bool* bClearEquippedItems);
	void ClearMyBuffs();
	void ClearMessageOfTheDay();
	void ClearDinoTest();
	void ClearCryoSickness();
	class FString CheatAction();
	void ChatLogAppend(const class FString& MessageText);
	void CamZoomOut();
	void CamZoomIn();
	void Broadcast(const class FString& MessageText);
	class FString BPCheckDenySpawningInThisMap(bool* ReturnValue);
	class FString BanPlayer(class FString* PlayerSteamName);
	class FString ArkChangeUIPlatform();
	void AreAllSublevelsForDataLayerLoaded(class FString* DataLayerName);
	void AllowPlayerToJoinNoCheck(class FString* SteamID);
	void AddWorldBuff(const class FString& WorldBuffIdentifier);
	void AddTokens(int32 Quantity);
	int32 AddMutations(int32* HowMany);
	class FString AddItemToAllClustersInventory(int32 MasterIndexNum);
	float AddHexagons();
	float AddExperienceToTarget(bool* FromTribeShare, bool* bPreventSharingWithTribe);
	float AddExperience(bool* FromTribeShare, bool* bPreventSharingWithTribe);
	void AddEquipmentDurability(float* Durability);
	int32 AddDinoTest(float* AbilityDelay);
	float AddChibiExpToPlayer();
	float AddChibiExp();
	class FName AddBuffPreventTagToSelf();
};

// 0x100 (0x168 - 0x68)
// Class ShooterGame.ShooterDamageType
class UShooterDamageType : public UPrimalDamageType
{
public:
	class UClass*                                HitTargetableActorImpactEffects;                   // 0x68(0x8)(ExportObject, EditFixedSize, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DamageTorpidityIncreaseMultiplier;                 // 0x70(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_46EA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FCanvasIcon                           KillIcon;                                          // 0x78(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, InstancedReference)
	class UForceFeedbackEffect*                  HitForceFeedback;                                  // 0x90(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UForceFeedbackEffect*                  KilledForceFeedback;                               // 0x98(0x8)(ConstParm, Net, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FDamagePrimalCharacterStatusValueModifier> DamageCharacterStatusValueModifiers;               // 0xA0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsMeleeDamage : 1;                                // Mask: 0x1, PropSize: 0x10xB0(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDontActuallyDealDamage : 1;                       // Mask: 0x2, PropSize: 0x10xB0(0x1)(ConstParm, ExportObject, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventMeleeHarvesting : 1;                       // Mask: 0x4, PropSize: 0x10xB0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHarvestDamageWithNoResourceGrab : 1;              // Mask: 0x8, PropSize: 0x10xB0(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreventMomentumWhenFalling : 1;                   // Mask: 0x10, PropSize: 0x10xB0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bOnlyGiveBuffToPlayerOrTamed : 1;                  // Mask: 0x20, PropSize: 0x10xB0(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDamageProjectiles : 1;                            // Mask: 0x40, PropSize: 0x10xB0(0x1)(Edit, EditFixedSize, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bOnlyGiveBuffToPlayer : 1;                         // Mask: 0x80, PropSize: 0x10xB0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bOnlyGiveBuffToDino : 1;                           // Mask: 0x1, PropSize: 0x10xB1(0x1)(ConstParm, ExportObject, Net, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHasRiderIgnoreDamage : 1;                         // Mask: 0x2, PropSize: 0x10xB1(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowShieldBlockAllPointDamage : 1;               // Mask: 0x4, PropSize: 0x10xB1(0x1)(Edit, BlueprintVisible, ExportObject, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreventDefaultTargetHurtEffect : 1;               // Mask: 0x8, PropSize: 0x10xB1(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDamageInstigator : 1;                             // Mask: 0x10, PropSize: 0x10xB1(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bApplyMomentumToBigPawns : 1;                      // Mask: 0x20, PropSize: 0x10xB1(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAutoDragDeadDino : 1;                             // Mask: 0x40, PropSize: 0x10xB1(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bImpulseResetsDinoVelocity : 1;                    // Mask: 0x80, PropSize: 0x10xB1(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreventHitPawnEffectsFromLocalInstigator : 1;     // Mask: 0x1, PropSize: 0x10xB2(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bRiderIgnoreDamage : 1;                            // Mask: 0x2, PropSize: 0x10xB2(0x1)(Edit, BlueprintVisible, ExportObject, Net, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bNoFriendlyDamage : 1;                             // Mask: 0x4, PropSize: 0x10xB2(0x1)(Edit, ConstParm, Net, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsTurretDamage : 1;                               // Mask: 0x8, PropSize: 0x10xB2(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceGeneralArmorUsage : 1;                       // Mask: 0x10, PropSize: 0x10xB2(0x1)(Edit, BlueprintVisible, ExportObject, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDamageImpulseOnly : 1;                            // Mask: 0x20, PropSize: 0x10xB2(0x1)(Edit, ConstParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreDinoFlyers : 1;                             // Mask: 0x40, PropSize: 0x10xB2(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustDamage : 1;                            // Mask: 0x80, PropSize: 0x10xB2(0x1)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustAggro : 1;                             // Mask: 0x1, PropSize: 0x10xB3(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAdjustHarvestingDamage : 1;                  // Mask: 0x2, PropSize: 0x10xB3(0x1)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDisplayHitMarker : 1;                             // Mask: 0x4, PropSize: 0x10xB3(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHitMarkerPlaySound : 1;                           // Mask: 0x8, PropSize: 0x10xB3(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDinoDamageCauserAllowSameTeam : 1;                // Mask: 0x10, PropSize: 0x10xB3(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bOnlyApplyDamageTorpidityToPlayersAndTames : 1;    // Mask: 0x20, PropSize: 0x10xB3(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDinoOnDinoDamageCauserAllowSameTeam : 1;          // Mask: 0x40, PropSize: 0x10xB3(0x1)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3CB : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        DamageInstigatorPercentage;                        // 0xB4(0x4)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceRespawnCooldown : 1;                         // Mask: 0x1, PropSize: 0x10xB8(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowDamageCorpses : 1;                           // Mask: 0x2, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowFriendlyFire : 1;                       // Mask: 0x4, PropSize: 0x10xB8(0x1)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowPvEDamage : 1;                          // Mask: 0x8, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDestroyOnKill : 1;                                // Mask: 0x10, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreventDinoKillVictimItemCollection : 1;          // Mask: 0x20, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsInstantDamage : 1;                              // Mask: 0x40, PropSize: 0x10xB8(0x1)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreventHurtAnim : 1;                              // Mask: 0x80, PropSize: 0x10xB8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreventHurtSoundAndCameraShake : 1;               // Mask: 0x1, PropSize: 0x10xB9(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3CC : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_46EB[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        UseSpecialDamageInterval;                          // 0xBC(0x4)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WildDinoForcedAggroDuration;                       // 0xC0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_46EC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class APrimalBuff>             BuffToGiveVictimCharacter;                         // 0xC8(0x30)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MassScaleDamageImpulseExponent;                    // 0xF8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_46ED[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class AActor>>          DamageIgnoreActorClasses;                          // 0x100(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AActor>>          DamageOnlyActorClasses;                            // 0x110(0x10)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FOverrideDamageHarvestingEntry> OverrideDamageHarvestEntries;                      // 0x120(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                InvalidHarvestOverrideDamageType;                  // 0x130(0x8)(EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FTargetClassDamageScaler>      TargetClassDamageScalers;                          // 0x138(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        OverrideDamageForResourceHarvestingItems;          // 0x148(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        OverrideDamageForResourceHarvestingDamageTypes;    // 0x158(0x10)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UShooterDamageType* GetDefaultObj();

	class AActor* OverrideBuffToGiveVictimCharacter(float* IncomingDamage, struct FDamageEvent* TheDamageEvent, class UClass** ReturnValue);
	class AActor* BPAdjustHarvestingDamage(float* IncomingDamage, struct FDamageEvent* TheDamageEvent, float* ReturnValue);
	class AActor* BPAdjustDamage(float* IncomingDamage, struct FDamageEvent* TheDamageEvent, float* ReturnValue);
	class AActor* BPAdjustAggro(float* IncomingDamage, struct FDamageEvent* TheDamageEvent, float* ReturnValue);
};

// 0x48 (0x1070 - 0x1028)
// Class ShooterGame.ShooterEngine
class UShooterEngine : public UGameEngine
{
public:
	uint8                                        Pad_46EE[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	class UPrimalRichTextBlock*                  StartupScreenTextBlock;                            // 0x1048(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_46EF[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterEngine* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class ShooterGame.MusicDataAsset
class UMusicDataAsset : public UDataAsset
{
public:
	TMap<class FName, TSoftObjectPtr<class USoundWave>> NameToSoundWaveMap;                                // 0x30(0x50)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMusicDataAsset* GetDefaultObj();

};

// 0x88 (0xB0 - 0x28)
// Class ShooterGame.MusicPlayer
class UMusicPlayer : public UObject
{
public:
	TMap<class FName, struct FAudioComponentWrapper> PlayingMusicMap;                                   // 0x28(0x50)(BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UMusicDataAsset*                       MusicDataAsset;                                    // 0x78(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig)
	uint8                                        Pad_46F0[0x30];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMusicPlayer* GetDefaultObj();

};

// 0x720 (0x8E0 - 0x1C0)
// Class ShooterGame.ShooterGameInstance
class UShooterGameInstance : public UPrimalGameInstance
{
public:
	uint8                                        Pad_46F4[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnAsyncAssetLoaded;                                // 0x218(0x10)(BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_46F5[0x150];                                   // Fixing Size After Last Property  > TateDumper <
	class UOpenColorIODisplayExtensionWrapper*   OpenColorIOObject;                                 // 0x378(0x8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FAssetPathObjectPair>          AsyncLoadededAssetReferences;                      // 0x380(0x10)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UWorldModifiersContainer*              WorldModifiersContainer;                           // 0x390(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, GlobalConfig)
	uint8                                        Pad_46F6[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	class UMusicPlayer*                          MusicPlayer;                                       // 0x3E8(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig)
	class FString                                WelcomeScreenMap;                                  // 0x3F0(0x10)(ConstParm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                MainMenuMap;                                       // 0x400(0x10)(BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DuplicateTransient)
	int32                                        AutoPgoSweepInterval;                              // 0x410(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_46F7[0x204];                                   // Fixing Size After Last Property  > TateDumper <
	TArray<class UObject*>                       ObjectsPendingTimeShift;                           // 0x618(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_46F8[0x1E4];                                   // Fixing Size After Last Property  > TateDumper <
	class FName                                  ActiveEvent;                                       // 0x80C(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	uint8                                        Pad_46F9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                WorldModifierConfigOverride;                       // 0x818(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_46FA[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_3CD : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHasPlayedMainMenuIntroOnce : 1;                   // Mask: 0x2, PropSize: 0x10x878(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_46FB[0x67];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterGameInstance* GetDefaultObj();

	void LoadTheGameMedia();
	bool EnableOpenColorIOObject();
	void DisplayGlobalMainMenuNotification();
	class UUserWidget* CanUseUserGeneratedContent(bool* ReturnValue);
	bool AsyncUnloadAssetFromPath();
	bool AsyncUnloadAssetFromObject();
	void AsyncLoadAssetFromPath(const class FString& AssetPath);
};

// 0x3C0 (0x8A8 - 0x4E8)
// Class ShooterGame.ShooterGameSession
class AShooterGameSession : public AGameSession
{
public:
	uint8                                        Pad_46FD[0x3C0];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterGameSession* GetDefaultObj();

	bool OnRecreateSessionListenServerDestroy();
};

// 0x6A0 (0x7E8 - 0x148)
// Class ShooterGame.ShooterGameUserSettings
class UShooterGameUserSettings : public UGameUserSettings
{
public:
	int32                                        AdvancedGraphicsQuality;                           // 0x148(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, EditConst, SubobjectReference)
	float                                        MasterAudioVolume;                                 // 0x14C(0x4)(ExportObject, Net, ZeroConstructor, EditConst, SubobjectReference)
	float                                        MusicAudioVolume;                                  // 0x150(0x4)(Edit, ExportObject, Net, OutParm, EditConst, SubobjectReference)
	float                                        SFXAudioVolume;                                    // 0x154(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        VoiceAudioVolume;                                  // 0x158(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, EditConst, SubobjectReference)
	float                                        SoundUIAudioVolume;                                // 0x15C(0x4)(ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	float                                        CharacterAudioVolume;                              // 0x160(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, SubobjectReference)
	uint8                                        Pad_4700[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        ConsoleCommandHistory;                             // 0x168(0x10)(ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StructureTooltipMaxSpeedMultiply;                  // 0x178(0x4)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        UIScaling;                                         // 0x17C(0x4)(Edit, ConstParm, ExportObject, Parm, EditConst, SubobjectReference)
	float                                        UIQuickbarScaling;                                 // 0x180(0x4)(ConstParm, ExportObject, OutParm, ZeroConstructor, EditConst, SubobjectReference)
	float                                        CameraShakeScale;                                  // 0x184(0x4)(ExportObject, Parm, OutParm, ReturnParm, EditConst, SubobjectReference)
	bool                                         bFirstPersonRiding;                                // 0x188(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bThirdPersonPlayer;                                // 0x189(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bShowStatusNotificationMessages;                   // 0x18A(0x1)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, EditConst, SubobjectReference)
	uint8                                        Pad_4701[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TrueSkyQuality;                                    // 0x18C(0x4)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, EditConst, SubobjectReference)
	float                                        FOVMultiplier;                                     // 0x190(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	float                                        GroundClutterDensity;                              // 0x194(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         bFilmGrain;                                        // 0x198(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bMotionBlur;                                       // 0x199(0x1)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         bUseGamepadSpeaker;                                // 0x19A(0x1)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bUseDFAO;                                          // 0x19B(0x1)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         bUseSSAO;                                          // 0x19C(0x1)(Edit, EditFixedSize, Parm, ReturnParm, EditConst, SubobjectReference)
	bool                                         bShowChatBox;                                      // 0x19D(0x1)(ConstParm, BlueprintVisible, EditConst, SubobjectReference)
	bool                                         bCameraViewBob;                                    // 0x19E(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, EditConst, SubobjectReference)
	bool                                         bInvertLookY;                                      // 0x19F(0x1)(Edit, ConstParm, Net, EditFixedSize, OutParm, ReturnParm, EditConst, SubobjectReference)
	bool                                         bFloatingNames;                                    // 0x1A0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         bChatBubbles;                                      // 0x1A1(0x1)(Edit, Parm, OutParm, ReturnParm, EditConst, SubobjectReference)
	bool                                         bHideServerInfo;                                   // 0x1A2(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, EditConst, SubobjectReference)
	bool                                         bJoinNotifications;                                // 0x1A3(0x1)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         bDisableNameYourTamePopup;                         // 0x1A4(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         MinimalFloatingNameSetting;                        // 0x1A5(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         bCraftablesShowAllItems;                           // 0x1A6(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bLocalInventoryItemsShowAllItems;                  // 0x1A7(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, SubobjectReference)
	bool                                         bLocalInventoryCraftingShowAllItems;               // 0x1A8(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, EditConst, SubobjectReference)
	bool                                         bRemoteInventoryItemsShowAllItems;                 // 0x1A9(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bRemoteInventoryCraftingShowAllItems;              // 0x1AA(0x1)(Edit, ExportObject, Parm, OutParm, EditConst, SubobjectReference)
	bool                                         bRemoteInventoryShowEngrams;                       // 0x1AB(0x1)(ExportObject, EditFixedSize, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bEnableLowLightEnhancement;                        // 0x1AC(0x1)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         bEnableFluidInteraction;                           // 0x1AD(0x1)(BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bDisableHLOD;                                      // 0x1AE(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         bRequiresRestart;                                  // 0x1AF(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LookLeftRightSensitivity;                          // 0x1B0(0x4)(ExportObject, OutParm, ReturnParm, EditConst, SubobjectReference)
	float                                        LookUpDownSensitivity;                             // 0x1B4(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        TPVCameraHorizontalOffsetFactor;                   // 0x1B8(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, EditConst, SubobjectReference)
	int32                                        GraphicsQuality;                                   // 0x1BC(0x4)(Edit, EditFixedSize, Parm, EditConst, SubobjectReference)
	int32                                        ActiveLingeringWorldTiles;                         // 0x1C0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, SubobjectReference)
	int32                                        ClientNetQuality;                                  // 0x1C4(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        TheGammaCorrection;                                // 0x1C8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, SubobjectReference)
	int32                                        LastServerSearchType;                              // 0x1CC(0x4)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, EditConst, SubobjectReference)
	int32                                        LastServerSort;                                    // 0x1D0(0x4)(ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	int32                                        LastPVESearchType;                                 // 0x1D4(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, EditConst, SubobjectReference)
	int32                                        LastDLCTypeSearchType;                             // 0x1D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         LastServerSortAsc;                                 // 0x1DC(0x1)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         LastAutoFavorite;                                  // 0x1DD(0x1)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         ShowPlayerServers;                                 // 0x1DE(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         LastServerSearchHideFull;                          // 0x1DF(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, EditConst, SubobjectReference)
	bool                                         LastServerSearchProtected;                         // 0x1E0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         LastPlatformSpecificServerSearch;                  // 0x1E1(0x1)(Edit, ConstParm, ReturnParm, EditConst, SubobjectReference)
	bool                                         HideItemTextOverlay;                               // 0x1E2(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, EditConst, SubobjectReference)
	bool                                         bForceShowItemNames;                               // 0x1E3(0x1)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         bDistanceFieldShadowing;                           // 0x1E4(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, SubobjectReference)
	bool                                         bDisableShadows;                                   // 0x1E5(0x1)(ConstParm, BlueprintReadOnly, Net, OutParm, EditConst, SubobjectReference)
	uint8                                        Pad_4702[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LODScalar;                                         // 0x1E8(0x4)(Edit, ConstParm, BlueprintVisible, Parm, ReturnParm, EditConst, SubobjectReference)
	bool                                         bToggleToTalk;                                     // 0x1EC(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         HighQualityMaterials;                              // 0x1ED(0x1)(Edit, Parm, OutParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         HighQualitySurfaces;                               // 0x1EE(0x1)(Edit, BlueprintVisible, ExportObject, Parm, ReturnParm, EditConst, SubobjectReference)
	bool                                         bTemperatureF;                                     // 0x1EF(0x1)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         bDisableTorporEffect;                              // 0x1F0(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, SubobjectReference)
	bool                                         bChatShowSteamName;                                // 0x1F1(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         bChatShowTribeName;                                // 0x1F2(0x1)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bReverseTribeLogOrder;                             // 0x1F3(0x1)(Edit, BlueprintReadOnly, Parm, EditConst, SubobjectReference)
	int32                                        EmoteKeyBind1;                                     // 0x1F4(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	int32                                        EmoteKeyBind2;                                     // 0x1F8(0x4)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         bNoBloodEffects;                                   // 0x1FC(0x1)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         bLowQualityVFX;                                    // 0x1FD(0x1)(Edit, ConstParm, Net, EditConst, SubobjectReference)
	bool                                         bSpectatorManualFloatingNames;                     // 0x1FE(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         bSuppressAdminIcon;                                // 0x1FF(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bUseSimpleDistanceMovement;                        // 0x200(0x1)(Edit, BlueprintReadOnly, Parm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bHasSavedGame;                                     // 0x201(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, EditConst, SubobjectReference)
	bool                                         bDisableMeleeCameraSwingAnims;                     // 0x202(0x1)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, EditConst, SubobjectReference)
	bool                                         bPreventInventoryOpeningSounds;                    // 0x203(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bPreventBiomeWalls;                                // 0x204(0x1)(ConstParm, BlueprintVisible, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         bPreventHitMarkers;                                // 0x205(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bPreventCrosshair;                                 // 0x206(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         bPreventColorizedItemNames;                        // 0x207(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         bHighQualityLODs;                                  // 0x208(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         bExtraLevelStreamingDistance;                      // 0x209(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditConst, SubobjectReference)
	bool                                         bEnableColorGrading;                               // 0x20A(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, EditConst, SubobjectReference)
	uint8                                        Pad_4703[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        VSyncMode;                                         // 0x20C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, EditConst, SubobjectReference)
	float                                        DOFSettingInterpTime;                              // 0x210(0x4)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, EditConst, SubobjectReference)
	uint8                                        Pad_4704[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDepthOfFieldSetting>          DOFSettings;                                       // 0x218(0x10)(ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FString>                        LastJoinedSessionPerCategory;                      // 0x228(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, EditConst, SubobjectReference)
	int32                                        LastSessionCategoryJoined;                         // 0x238(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, EditConst, SubobjectReference)
	int32                                        PendingLastSessionCategoryJoined;                  // 0x23C(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDisableMenuTransitions;                           // 0x240(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, EditConst, SubobjectReference)
	bool                                         bEnableInventoryItemTooltips;                      // 0x241(0x1)(EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bRemoteInventoryShowCraftables;                    // 0x242(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bNoTooltipDelay;                                   // 0x243(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, EditConst, SubobjectReference)
	int32                                        LocalItemSortType;                                 // 0x244(0x4)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	int32                                        LocalCraftingSortType;                             // 0x248(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	int32                                        RemoteItemSortType;                                // 0x24C(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, EditConst, SubobjectReference)
	int32                                        RemoteCraftingSortType;                            // 0x250(0x4)(ConstParm, ExportObject, Net, OutParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	uint8                                        Pad_4705[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        VersionMetaTag;                                    // 0x258(0x4)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         ShowExplorerNoteSubtitles;                         // 0x25C(0x1)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, EditConst, SubobjectReference)
	bool                                         DisableMenuMusic;                                  // 0x25D(0x1)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         DisableDefaultCharacterItems;                      // 0x25E(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         DisableLoadScreenMusic;                            // 0x25F(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, EditConst, SubobjectReference)
	bool                                         bRequestDefaultCharacterItemsOnce;                 // 0x260(0x1)(EditFixedSize, Parm, OutParm, EditConst, SubobjectReference)
	bool                                         bHasSeenGen2Intro;                                 // 0x261(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	uint8                                        Pad_4706[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TMap<int32, bool>                            CinematicForNoteShouldReset;                       // 0x268(0x50)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         bHasSetupDifficultySP;                             // 0x2B8(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         bHasSetupVisualSettings;                           // 0x2B9(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	uint8                                        Pad_4707[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TMap<class FString, struct FDateTime>        AgreedToTerms;                                     // 0x2C0(0x50)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         bHasRunAutoSettings;                               // 0x310(0x1)(BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bHideFloatingPlayerNames;                          // 0x311(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bHideGamepadItemSelectionModifier;                 // 0x312(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         bToggleExtendedHUDInfo;                            // 0x313(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         PlayActionWheelClickSound;                         // 0x314(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, EditConst, SubobjectReference)
	bool                                         PlayHUDRolloverSound;                              // 0x315(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, EditConst, SubobjectReference)
	uint8                                        Pad_4708[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CompanionReactionVerbosity;                        // 0x318(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         EnableEnvironmentalReactions;                      // 0x31C(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         EnableRespawnReactions;                            // 0x31D(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         EnableDeathReactions;                              // 0x31E(0x1)(ExportObject, OutParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         EnableSayHelloReactions;                           // 0x31F(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, EditConst, SubobjectReference)
	bool                                         EnableEmoteReactions;                              // 0x320(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, SubobjectReference)
	bool                                         EnableMovementSounds;                              // 0x321(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         DisableSubtitles;                                  // 0x322(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bEnableASACamera;                                  // 0x323(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         ConsoleAccess;                                     // 0x324(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	uint8                                        Pad_4709[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CompanionSubtitleVerbosityLevel;                   // 0x328(0x4)(BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         CompanionIsHiddenState;                            // 0x32C(0x1)(Edit, ConstParm, EditFixedSize, EditConst, SubobjectReference)
	uint8                                        Pad_470A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxAscensionLevel;                                 // 0x330(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         bHostSessionHasBeenOpened;                         // 0x334(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bForceTPVCameraOffset;                             // 0x335(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         bDisableTPVCameraInterpolation;                    // 0x336(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, EditConst, SubobjectReference)
	bool                                         bEnableHDROutput;                                  // 0x337(0x1)(ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	float                                        HDRDisplayMinLuminance;                            // 0x338(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        HDRDisplayMidLuminance;                            // 0x33C(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        HDRDisplayMaxLuminance;                            // 0x340(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, EditConst, SubobjectReference)
	float                                        FoliageInteractionDistance;                        // 0x344(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        FoliageInteractionDistanceLimit;                   // 0x348(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        FoliageInteractionQuantityLimit;                   // 0x34C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        HDRDisplayMinLuminanceMinValue;                    // 0x350(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        HDRDisplayMidLuminanceMinValue;                    // 0x354(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        HDRDisplayMaxLuminanceMinValue;                    // 0x358(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        HDRDisplayMinLuminanceMaxValue;                    // 0x35C(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        HDRDisplayMidLuminanceMaxValue;                    // 0x360(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        HDRDisplayMaxLuminanceMaxValue;                    // 0x364(0x4)(BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GUI3DWidgetQuality;                                // 0x368(0x4)(ConstParm, Net, Parm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bFPVClimbingGear;                                  // 0x36C(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, EditConst, SubobjectReference)
	bool                                         bFPVGlidingGear;                                   // 0x36D(0x1)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         bHasInitializedScreenPercentage;                   // 0x36E(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, EditConst, SubobjectReference)
	uint8                                        Pad_470B[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	TMap<class FName, float>                     CameraZoomPerDinoNameTag;                          // 0x370(0x50)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, EditConst, SubobjectReference)
	TMap<class FName, float>                     CameraHeightPerDinoNameTag;                        // 0x3C0(0x50)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, EditConst, SubobjectReference)
	TMap<class FName, class FString>             PhotomodePresets_Camera;                           // 0x410(0x50)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, EditConst, SubobjectReference)
	TMap<class FName, class FString>             PhotomodePresets_Movement;                         // 0x460(0x50)(Edit, Net, EditFixedSize, ReturnParm, EditConst, SubobjectReference)
	TMap<class FName, class FString>             PhotomodePresets_Splines;                          // 0x4B0(0x50)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, EditConst, SubobjectReference)
	TMap<class FName, class FString>             PhotomodePresets_PPs;                              // 0x500(0x50)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, EditConst, SubobjectReference)
	TMap<class FName, class FString>             PhotomodePresets_Targeting;                        // 0x550(0x50)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	TMap<class FName, class FString>             PhotomodeLastUsedSettings;                         // 0x5A0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	TArray<struct FMinimapMark>                  SavedMinimapMarks;                                 // 0x5F0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxLastDeathMark;                                  // 0x600(0x4)(ConstParm, Parm, EditConst, SubobjectReference)
	bool                                         bSaveLastDeathMark;                                // 0x604(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bShowPingsOnMap;                                   // 0x605(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bShowDinosOnMap;                                   // 0x606(0x1)(ExportObject, Net, EditFixedSize, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bShowWaypointsOnMap;                               // 0x607(0x1)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         bShowPlayersOnMap;                                 // 0x608(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         bShowBedsOnMap;                                    // 0x609(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, EditConst, SubobjectReference)
	uint8                                        Pad_470C[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AimAssistStrengthMultiplier;                       // 0x60C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         bForceShowRadialWheelTexts;                        // 0x610(0x1)(ExportObject, BlueprintReadOnly, Parm, ReturnParm, EditConst, SubobjectReference)
	bool                                         bHideStructurePlacementCrosshair;                  // 0x611(0x1)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, EditConst, SubobjectReference)
	uint8                                        Pad_470D[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SavedMainMapZoom;                                  // 0x614(0x4)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	float                                        SavedOverlayMapZoom;                               // 0x618(0x4)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         bMinimalUI;                                        // 0x61C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, EditConst, SubobjectReference)
	enum class ETooltipMode                      FloatingTooltipStructureMode;                      // 0x61D(0x1)(BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	enum class ETooltipMode                      FloatingTooltipDinoMode;                           // 0x61E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, EditConst, SubobjectReference)
	enum class ETooltipMode                      FloatingTooltipDroppedItemsMode;                   // 0x61F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, EditConst, SubobjectReference)
	enum class ETooltipMode                      FloatingTooltipPlayerMode;                         // 0x620(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	enum class ENotificationMode                 TopNotificationMode;                               // 0x621(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, EditConst, SubobjectReference)
	enum class ENotificationMode                 ItemNotificationMode;                              // 0x622(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, EditConst, SubobjectReference)
	bool                                         bMinimapOverlayUseLowOpacity;                      // 0x623(0x1)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	int32                                        FilterTypeInventoryLocal;                          // 0x624(0x4)(Edit, Parm, ZeroConstructor, EditConst, SubobjectReference)
	int32                                        FilterTypeInventoryRemote;                         // 0x628(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	enum class EAimAssistType                    bUseGamepadAimAssist;                              // 0x62C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	uint8                                        Pad_470E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Gamma1;                                            // 0x630(0x4)(Edit, BlueprintVisible, OutParm, EditConst, SubobjectReference)
	float                                        Gamma2;                                            // 0x634(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bDisableBloom;                                     // 0x638(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bDisableLightShafts;                               // 0x639(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, EditConst, SubobjectReference)
	bool                                         bUseLowQualityLevelStreaming;                      // 0x63A(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         bUseDistanceFieldAmbientOcclusion;                 // 0x63B(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bPreventItemCraftingSounds;                        // 0x63C(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bHighQualityAnisotropicFiltering;                  // 0x63D(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, EditConst, SubobjectReference)
	uint8                                        Pad_470F[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AmbientSoundVolume;                                // 0x640(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         bUseOldThirdPersonCameraTrace;                     // 0x644(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, EditConst, SubobjectReference)
	bool                                         bUseOldThirdPersonCameraOffset;                    // 0x645(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, EditConst, SubobjectReference)
	bool                                         bShowedGenesisDLCBackground;                       // 0x646(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         bShowedGenesis2DLCBackground;                      // 0x647(0x1)(Edit, Net, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bHasStartedTheGameOnce;                            // 0x648(0x1)(BlueprintVisible, BlueprintReadOnly, ReturnParm, EditConst, SubobjectReference)
	bool                                         bViewedAnimatedSeriesTrailer;                      // 0x649(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bViewedARK2Trailer;                                // 0x64A(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, EditConst, SubobjectReference)
	bool                                         bShowRTSKeyBinds;                                  // 0x64B(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	float                                        TemporaryMusicStingerReductionMultiplier;          // 0x64C(0x4)(Edit, ExportObject, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bHasCompletedGen2;                                 // 0x650(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         bEnableFootstepDecals;                             // 0x651(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         bEnableFootstepParticles;                          // 0x652(0x1)(Edit, ExportObject, OutParm, EditConst, SubobjectReference)
	bool                                         bShowInfoButtons;                                  // 0x653(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         bDisablePaintings;                                 // 0x654(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         StopExplorerNoteAudioOnClose;                      // 0x655(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, EditConst, SubobjectReference)
	bool                                         bVibration;                                        // 0x656(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bUIVibration;                                      // 0x657(0x1)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	float                                        RadialSelectionSpeed;                              // 0x658(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         bDisableVirtualCursor;                             // 0x65C(0x1)(ConstParm, Net, Parm, OutParm, ReturnParm, EditConst, SubobjectReference)
	uint8                                        Pad_4710[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         PreventDetailGraphics;                             // 0x65E(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, EditConst, SubobjectReference)
	uint8                                        Pad_4711[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        GroundClutterRadius;                               // 0x660(0x4)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	int32                                        HFSQuality;                                        // 0x664(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, EditConst, SubobjectReference)
	bool                                         bMenuGyro;                                         // 0x668(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	uint8                                        Pad_4712[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        GyroSensitivity;                                   // 0x66C(0x4)(Edit, ConstParm, ExportObject, Net, EditConst, SubobjectReference)
	float                                        VirtualCursorSensitivity;                          // 0x670(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, EditConst, SubobjectReference)
	float                                        BubbleParticlesMultiplier;                         // 0x674(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        CrosshairScale;                                    // 0x678(0x4)(Edit, Parm, OutParm, EditConst, SubobjectReference)
	float                                        CrosshairOpacity;                                  // 0x67C(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, ReturnParm, EditConst, SubobjectReference)
	struct FLinearColor                          CrosshairColor;                                    // 0x680(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, EditConst, SubobjectReference)
	struct FVector2D                             CrosshairColorPickerValue;                         // 0x690(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	struct FLinearColor                          CrosshairColorOverEnemy;                           // 0x6A0(0x10)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	struct FVector2D                             CrosshairColorPickerValueOverEnemy;                // 0x6B0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, EditConst, SubobjectReference)
	struct FLinearColor                          CrosshairColorOverAlly;                            // 0x6C0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	struct FVector2D                             CrosshairColorPickerValueOverAlly;                 // 0x6D0(0x10)(BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	struct FLinearColor                          CrosshairColorHitmark;                             // 0x6E0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, EditConst, SubobjectReference)
	struct FVector2D                             CrosshairColorPickerValueHitmark;                  // 0x6F0(0x10)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	int32                                        CurrentCameraModeIndex;                            // 0x700(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, EditConst, SubobjectReference)
	int32                                        CurrentDinoCameraModeIndex;                        // 0x704(0x4)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bShowAmbientInsectsVFX;                            // 0x708(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditConst, SubobjectReference)
	uint8                                        Pad_4713[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        TextChatFilterType;                                // 0x70C(0x4)(BlueprintReadOnly, ZeroConstructor, EditConst, SubobjectReference)
	int32                                        VoiceChatFilterType;                               // 0x710(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, EditConst, SubobjectReference)
	bool                                         bAutomaticallyCreateWaypointOnTamingCreatures;     // 0x714(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, EditConst, SubobjectReference)
	bool                                         bAutomaticallyCreatePOIOnDeath;                    // 0x715(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bEnableDLSS;                                       // 0x716(0x1)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	bool                                         bEnableDLFG;                                       // 0x717(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bEnableReflex;                                     // 0x718(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        Pad_4714[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        SuperResolutionQualityLevel;                       // 0x71C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, EditConst, SubobjectReference)
	bool                                         bOCIOIsEnabled;                                    // 0x720(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, EditConst, SubobjectReference)
	uint8                                        Pad_4715[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                OCIOAsset;                                         // 0x728(0x10)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, DuplicateTransient)
	int32                                        OCIOColorSpace;                                    // 0x738(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	int32                                        OCIODisplayView;                                   // 0x73C(0x4)(ConstParm, Parm, DisableEditOnTemplate, EditConst, SubobjectReference)
	class UOpenColorIOConfiguration*             CurrentOCIOConfiguration;                          // 0x740(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FOpenColorIODisplayConfiguration      CurrenOCIODisplayConfiguration;                    // 0x748(0xA0)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UShooterGameUserSettings* GetDefaultObj();

	int32 SetSuperResolutionQualityLevel();
	bool SetEnableReflex();
	bool SetEnableDLSS();
	bool SetEnableDLFG();
	void GetUserSettings(class UShooterGameUserSettings** ReturnValue);
	void GetSupportedSuperResolutionQualityLevels(TArray<int32>* ReturnValue);
	int32 GetSuperResolutionQualityLevelName(class FString* ReturnValue);
	void GetSuperResolutionQualityLevel(int32* ReturnValue);
	void GetQualityLevelPostProcessing(int32* ReturnValue);
	void GetEnableReflex(bool* ReturnValue);
	void GetEnableDLSS(bool* ReturnValue);
	void GetEnableDLFG(bool* ReturnValue);
	void GetDLSSSupported(bool* ReturnValue);
	void GetDLSSModeIndex(const class FString& Value, int32* ReturnValue);
	void AddToAgreedToTerms();
};

// 0x140 (0x4F0 - 0x3B0)
// Class ShooterGame.ShooterGameViewportClient
class UShooterGameViewportClient : public UGameViewportClient
{
public:
	TArray<class UObject*>                       ViewPortWidgets;                                   // 0x3B0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4719[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            LoadingMusic;                                      // 0x3D0(0x8)(ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UFont*                                 InfoFont;                                          // 0x3D8(0x8)(Edit, ConstParm, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_471A[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	class UPrimalUI_Toast*                       UpdatingModsUI;                                    // 0x408(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_471B[0x9];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         VideoReplayEnabled;                                // 0x419(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_471C[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NumReplaySecondsToStore;                           // 0x41C(0x4)(BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, DuplicateTransient)
	uint8                                        Pad_471D[0xD0];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterGameViewportClient* GetDefaultObj();

	void IsAnyUIConsumingInput(class UClass** PrimalUIClass, class AShooterPlayerController** Owner, class UPrimalUI** ReturnValue);
	void GetViewportClient(class UWorld* ForWorld, class UShooterGameViewportClient** ReturnValue);
	void GetUIScenesFromClass(class UClass** PrimalUIClass, TArray<class UPrimalUI*>* ReturnValue);
	void GetUISceneFromClass(class UClass** PrimalUIClass, class ABasePlayerController** Owner, class UPrimalUI** ReturnValue);
	int32 GetTopUI(class UPrimalUI** ReturnValue);
	void GetGameWorld(class UWorld** ReturnValue);
	void GetAllUIScenesFromClass(class UClass** PrimalUIClass, class ABasePlayerController** Owner, TArray<class UPrimalUI*>* ReturnValue);
	void CloseAllUIsOnDie(class AShooterPlayerController** SPC, bool* ReturnValue);
	void AnyScenesWithMouseCapture(bool* ReturnValue);
	void AnyNonInventoryScenesWithMouseCapture(class AShooterPlayerController* ForPC, bool* ReturnValue);
};

// 0x28 (0x58 - 0x30)
// Class ShooterGame.ShooterGameLoadingScreenManager
class UShooterGameLoadingScreenManager : public UEngineSubsystem
{
public:
	uint8                                        Pad_471E[0x28];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterGameLoadingScreenManager* GetDefaultObj();

};

// 0xA8 (0x658 - 0x5B0)
// Class ShooterGame.ShooterGame_Menu
class AShooterGame_Menu : public AGameMode
{
public:
	class FString                                MenuMusic;                                         // 0x5B0(0x10)(BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, GlobalConfig)
	class UClass*                                SponsoredModsMenu;                                 // 0x5C0(0x8)(Edit, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ActiveEvent;                                       // 0x5C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	TArray<struct FActiveEventMainMenuOverride>  ActiveEventMainMenuOverrides;                      // 0x5D0(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    BackgroundTextureOverrides;                        // 0x5E0(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<class UTexture2D*, class FString>       SoundToPlayPerBackground;                          // 0x5F0(0x50)(ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         HasStartedMusic;                                   // 0x640(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4720[0x17];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterGame_Menu* GetDefaultObj();

	void PlayMusic();
	void GetMainMenuOverrideData(struct FActiveEventMainMenuOverride* OverrideData, bool* ReturnValue);
	void GetMainMenuBackgroundTexture(class UTexture2D** ReturnValue);
};

// 0x10 (0x40 - 0x30)
// Class ShooterGame.ShooterHaptics
class UShooterHaptics : public UDataAsset
{
public:
	TArray<struct FShooterForceFeedback>         ForceFeedbackTable;                                // 0x30(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UShooterHaptics* GetDefaultObj();

};

// 0x940 (0xF00 - 0x5C0)
// Class ShooterGame.ShooterHUD
class AShooterHUD : public AHUD
{
public:
	class UClass*                                HurtCameraShake;                                   // 0x5C0(0x8)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	class UUI_SavingOverlay*                     SavingOverlay;                                     // 0x5C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        MaxDamageCameraShakeScale;                         // 0x5D0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxDamageCameraShakeSpeedInverse;                  // 0x5D4(0x4)(Edit, ExportObject, Net, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShowAllPlayersWhenSpectating;                     // 0x5D8(0x1)(Edit, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_474A[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bShowAllPlayersWhenSpectatingLocal;                // 0x5DA(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_474B[0xD];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PlayerInfoRequestTimeInterval;                     // 0x5E8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_474C[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	class UTrackingItemUI*                       TrackingItemsHUD;                                  // 0x600(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UPlayerHUDUI*                          MyPlayerHUD;                                       // 0x608(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UPrimalUI*                             MyPlayerHUDSOTF;                                   // 0x610(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UPrimalUI*                             CurrentMinimapHUD;                                 // 0x618(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UPrimalUI*                             ChangeCameraModeUI;                                // 0x620(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UHUDCustomStatusWidget*                MyPlayerCustomStatusHUD;                           // 0x628(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UHUDActiveMissionWidget*               MyPlayerActiveMissionHUD;                          // 0x630(0x8)(BlueprintReadOnly, Net, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UHUDPointsOfInterestContainer*         MyPlayerPointsOfInterestHUD;                       // 0x638(0x8)(Edit, Net, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UHUDPingsContainer*                    MyPlayerPingHUD;                                   // 0x640(0x8)(ExportObject, BlueprintReadOnly, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UUI_LeaderboardWidget*                 MyPlayerLeaderboardHUD;                            // 0x648(0x8)(BlueprintVisible, ExportObject, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UUI_Subtitles*                         MySubtitlesHUD;                                    // 0x650(0x8)(BlueprintVisible, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UUI_HudOverlay*                        MyOverlayHUD;                                      // 0x658(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UUI_HudOverlay*                        MyTopOverlayHUD;                                   // 0x660(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UUI_ChatBox*                           ChatBoxUI;                                         // 0x668(0x8)(BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference)
	class UBuildingUI*                           BuildingUI;                                        // 0x670(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig)
	class UClass*                                HubUITemplate;                                     // 0x678(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                SurvivorProfileUITemplate;                         // 0x680(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                PlayerHUDUITemplate;                               // 0x688(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                PlayerHUDCustomStatusTemplate;                     // 0x690(0x8)(Edit, ConstParm, EditFixedSize, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                PlayerHUDActiveMissionTemplate;                    // 0x698(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                PlayerHUDPointsOfInterestTemplate;                 // 0x6A0(0x8)(Edit, Net, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                TrackingItemsTemplate;                             // 0x6A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                LeaderboardsUITemplate;                            // 0x6B0(0x8)(Edit, ExportObject, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                SubtitlesUITemplate;                               // 0x6B8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                SavingOverlayUITemplate;                           // 0x6C0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                OverlayHUDUITemplate;                              // 0x6C8(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                TopOverlayHUDUITemplate;                           // 0x6D0(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                InventoryUITemplate;                               // 0x6D8(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                MissionListUITemplate;                             // 0x6E0(0x8)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                AdminMangmentUITemplate;                           // 0x6E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ConsoleDedicatedUITemplate;                        // 0x6F0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                TribeManagerUITemplate;                            // 0x6F8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                TribeWarUITemplate;                                // 0x700(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                PinEntryUITemplate;                                // 0x708(0x8)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                TextEntryUITemplate;                               // 0x710(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                MapMarkersUITemplate;                              // 0x718(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                SpawnUITemplate;                                   // 0x720(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                AllPlayersListTemplate;                            // 0x728(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ChatBoxUITemplate;                                 // 0x730(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                TutorialUITemplate;                                // 0x738(0x8)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                MinimapUITemplate;                                 // 0x740(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                BuildingUITemplate;                                // 0x748(0x8)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                PlayerHUDSOTF;                                     // 0x750(0x8)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ChangeCameraModeTemplate;                          // 0x758(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShowChatBoxByDefault;                             // 0x760(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_474D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                InventoryRadialSelectorTemplate;                   // 0x768(0x8)(ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                MultiUseRadialSelectorTemplate;                    // 0x770(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                PlayerActionRadialSelectorTemplate;                // 0x778(0x8)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                WhistleRadialSelectorTemplate;                     // 0x780(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                EmoteRadialSelectorTemplate;                       // 0x788(0x8)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                CustomRadialSelectorTemplate;                      // 0x790(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                CustomTrackedDinoListUITemplate;                   // 0x798(0x8)(Edit, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class URadialSelectorHUD*                    CurrentRadialSelector;                             // 0x7A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class URadialSelectorHUD_Inventory*          InventoryRadialSelector;                           // 0x7A8(0x8)(ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class URadialSelectorHUD_MultiUse*           MultiUseRadialSelector;                            // 0x7B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class URadialSelectorHUD_PlayerAction*       PlayerActionRadialSelector;                        // 0x7B8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class URadialSelectorHUD_PlayerAction*       WhistleRadialSelector;                             // 0x7C0(0x8)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class URadialSelectorHUD_PlayerAction*       EmoteRadialSelector;                               // 0x7C8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class URadialSelectorHUD_Custom*             CustomRadialSelector;                              // 0x7D0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_474E[0xC8];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        FloatingMultiUseIconSize;                          // 0x8A0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_474F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             FloatingMultiUseIconOffset;                        // 0x8A8(0x10)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          FloatingMultiUseIconBGColor;                       // 0x8B8(0x10)(ConstParm, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FColor                                DisableUseIconColor;                               // 0x8C8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4750[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            GenericMultiUseIcon;                               // 0x8D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            GenericBackIcon;                                   // 0x8D8(0x8)(Edit, ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            GenericSubMenuMultiUseIcon;                        // 0x8E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            ItemAddedNotificationIcon;                         // 0x8E8(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            ItemRemovedNotificationIcon;                       // 0x8F0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          ItemAddedNotificationIconColor;                    // 0x8F8(0x10)(ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          ItemRemovedNotificationIconColor;                  // 0x908(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4751[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UFont*                                 BigFont;                                           // 0x920(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UFont*                                 NormalFont;                                        // 0x928(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class UFont*                                 SmallFont;                                         // 0x930(0x8)(Edit, BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class UTexture2D*                            HitNotifyTexture;                                  // 0x938(0x8)(Edit, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            HUDMainTextureAtlas;                               // 0x940(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            HUDAssets02TextureAtlas;                           // 0x948(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            LowHealthOverlayTexture;                           // 0x950(0x8)(BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            HitMarkerTexture;                                  // 0x958(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                MultiUseUITemplate;                                // 0x960(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TimeToHideChat;                                    // 0x968(0x4)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4752[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            DeathIcon;                                         // 0x970(0x8)(Edit, ConstParm, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            KilledIcon;                                        // 0x978(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ChatPopupInterval;                                 // 0x980(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4753[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            SpeechBubble;                                      // 0x988(0x8)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4754[0x38];                                    // Fixing Size After Last Property  > TateDumper <
	struct FCanvasIcon                           HitNotifyIcon[0x8];                                // 0x9C8(0xC0)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCanvasIcon                           Crosshair[0x5];                                    // 0xA88(0x78)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCanvasIcon                           HitNotifyCrosshair;                                // 0xB00(0x18)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4755[0x168];                                   // Fixing Size After Last Property  > TateDumper <
	TArray<struct FHUDNotification>              HUDNotifications;                                  // 0xC80(0x10)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FHUDNotification>              ItemHUDNotifications;                              // 0xC90(0x10)(Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FHUDNotification>              SingletonHUDNotifications;                         // 0xCA0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4756[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bHUDHidden;                                        // 0xCC0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowChatPopup;                                    // 0xCC1(0x1)(ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4757[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FCustomWheelSettings                  TeamPingWheelSettings;                             // 0xCC8(0x48)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<enum class ETeamPingType>             TeamPingTypes;                                     // 0xD10(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4758[0x40];                                    // Fixing Size After Last Property  > TateDumper <
	class UUI_Inventory*                         CurrentOpenedInventory;                            // 0xD60(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UUI_Hub*                               CurrentlyOpenedHubUI;                              // 0xD68(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bMultiUseIsDrawingUIHUD;                           // 0xD70(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4759[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AActor>                 LastTargetedActor;                                 // 0xD80(0x8)(ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FHintReplacementKeysForKeyboardControls> GenericGamepadReplacementsForKeyboardControls;     // 0xD88(0x10)(BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AdditionalDinoMultiuseCheckDistance;               // 0xD98(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_475A[0x134];                                   // Fixing Size After Last Property  > TateDumper <
	class UUI_Tutorial*                          TutorialUI;                                        // 0xED0(0x8)(BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference)
	uint8                                        Pad_475B[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class APrimalDinoCharacter*>          CachedFloatingOverlaps;                            // 0xEE8(0x10)(Edit, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_475C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bDefeatedBossPreventingSpawnUICreation : 1;        // Mask: 0x1, PropSize: 0x10xEFC(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3CE : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	bool                                         bShowingMinimapTooltip;                            // 0xEFD(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_475D[0x2];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterHUD* GetDefaultObj();

	bool StartCustomWheelRadialSelector(bool bFromGamepad, bool* ReturnValue);
	bool ShowTeamPingWheel();
	void ShowSurvivorProfileUI(class UUI_SurvivorProfile** ReturnValue);
	class APrimalStructure* ShowSpawnUI();
	int32 ShowPinEntryUI(bool* bIsSetting);
	class AShooterPlayerController* ShowNewMinimap(class UPrimalUI** ReturnValue);
	struct FMultiUseWheelOption ShowMultiUseUIFor(bool bFromGamepad);
	void ShowMissionList(class UObject** FromDispatcher, class UUI_MissionList** ReturnValue);
	bool ShowMissionAlert(enum class EMissionAlertType* AlertType, class FString* AlertTitle);
	void ShowMap(class UMinimapSubMenuUI** ReturnValue);
	class UPrimalInventoryComponent* ShowInventory(class UUI_Inventory** ReturnValue);
	bool ShowEngramsMenu(class UUI_EngramsMenu** ReturnValue);
	bool ShowChatBox();
	void ShowChangeCameraModeUI(class UPrimalUI** ReturnValue);
	void ShowBuildingUI(class UBuildingUI** ReturnValue);
	void SetAllowShowChatBox(bool bAllow);
	int32 ReplaceKeyboardControlsTextWithXboxControlIconPaths(class FString* ActionKey, class FString* ReturnValue);
	void RemoveBuildingUI();
	void NotifyOutOfAmmo();
	void IsUsingCustomWheelRadialSelector(bool* ReturnValue);
	void IsUsingBuildingUI(bool* ReturnValue);
	bool IsMissionAlertVisible(bool* ReturnValue);
	void IsChatBoxVisible(bool* ReturnValue);
	void HitchDetected(struct FSoftObjectPath* ForAsset, float* HitchTime);
	void HideTopMissionAlert();
	void HideMissionAlert();
	void HideChatBox();
	void GetSubtitlesWidget(class UUI_Subtitles** ReturnValue);
	void GetShooterPC(class AShooterPlayerController** ReturnValue);
	struct FCustomWheelEntry GetSelectedCustomWheelEntry(bool* ReturnValue);
	void GetPlayerOwner(class APlayerController** ReturnValue);
	void GetOrCreateSpawnMenu(class UPrimalUI** ReturnValue);
	void GetOrCreateActiveHub(class UUI_Hub** ReturnValue);
	void GetOffLineSmallFont(class UFont** ReturnValue);
	void GetOffLineNormalFont(class UFont** ReturnValue);
	void GetOffLineBigFont(class UFont** ReturnValue);
	struct FMultiUseEntry GetMultiUseRadialSelection(bool* bIncludeTimedEntries, bool* ReturnValue);
	void GetIconForKey(class FString* ActionKey, class UTexture2D** ReturnValue);
	struct FVector2D GetFloatingHUDScreenEdgeFadeAlpha(float* ReturnValue);
	void GetCurrentHubUI(class UUI_Hub** ReturnValue);
	void GetCurrentCrosshairScreenLocation(struct FVector2D* ReturnValue);
	void GetChatBoxWidget(class UUI_ChatBox** ReturnValue);
	void GetAdditionalExplorerNoteDynamicMaterialParams(struct FExplorerNoteEntry* ExplorerNote, TArray<struct FNameScalarPair>* ScalarMaterialParams, TArray<struct FNameColorPair>* ColorMaterialParams);
	class UTexture2D* FormatTextureAsRichText(class FString* ReturnValue);
	class FString FormatRichTextWithKeyBindings(bool* bIgnoreMarkup, class FString* ReturnValue);
	struct FLinearColor FormatRichTextWithColor(class FString* ReturnValue);
	void ForceHUDHidden(bool* bForcedHidden);
	void EndMultiUseRadialSelector();
	void EndCustomWheelRadialSelector();
	void EndAllRadialSelectors();
	struct FMultiUseEntry DrawMultiUseIcon(struct FVector2D* Vec, class UTexture2D** Icon, class UMaterialInterface** MatIcon, struct FColor* Color);
	void DrawCrosshairOnScreen(struct FVector2D* AtScreenLocation, float* WithCrossSpread, struct FColor* WithDrawColor, float* WithAlphaPercent, float* WithScale);
	void CreateOrGetTrackItemUI(class UTrackingItemUI** ReturnValue);
	void CloseSpawnMenu(bool* ReturnValue);
	void CloseChangeCameraModeUI();
	void CloseActiveHub(bool* ReturnValue);
	void ChatWindowHasFocus(bool* ReturnValue);
	void CancelCustomWheelRadialSelector();
	void BPUpdateHUDRichTextOverlaysByInstigator(class AActor** ByInstigator);
	int32 BPUpdateHUDRichTextOverlayAtIndex(struct FHUDRichTextOverlayData* InOverlay);
	void BPUpdateHUDRichTextOverlay(struct FHUDRichTextOverlayData* InOverlay);
	void BPUpdateAllHUDRichTextOverlays(TArray<struct FHUDRichTextOverlayData>* InOverlayData);
	void BPSimulateHit(float* DamageTaken, const struct FDamageEvent& DamageEvent, class APawn** PawnInstigator);
	int32 BPShowUIScene(class UClass** UISceneTemplate, class UObject** AssociatedObject2, class UPrimalUI** ReturnValue);
	void BPSetHUDRichTextOverlayVerticalWidgetAlignment(struct FHUDRichTextOverlayData* InOverlay, enum class EVerticalAlignment* InAlignV, struct FHUDRichTextOverlayData* OutOverlay, bool* bUpdateAfterSetting);
	void BPSetHUDRichTextOverlayVerticalScreenAnchor(struct FHUDRichTextOverlayData* InOverlay, enum class EVerticalAlignment* InAnchorV, struct FHUDRichTextOverlayData* OutOverlay, bool* bUpdateAfterSetting);
	void BPSetHUDRichTextOverlayUseAutoWrap(struct FHUDRichTextOverlayData* InOverlay, bool* InAutoWrap, struct FHUDRichTextOverlayData* OutOverlay, bool* bUpdateAfterSetting);
	float BPSetHUDRichTextOverlayScale(struct FHUDRichTextOverlayData* InOverlay, struct FHUDRichTextOverlayData* OutOverlay, bool* bUpdateAfterSetting);
	struct FVector2D BPSetHUDRichTextOverlayPosition(struct FHUDRichTextOverlayData* InOverlay, struct FHUDRichTextOverlayData* OutOverlay, bool* bUpdateAfterSetting);
	void BPSetHUDRichTextOverlayInstigator(struct FHUDRichTextOverlayData* InOverlay, class AActor** InInstigator, struct FHUDRichTextOverlayData* OutOverlay, bool* bUpdateAfterSetting);
	void BPSetHUDRichTextOverlayHorizontalWidgetAlignment(struct FHUDRichTextOverlayData* InOverlay, enum class EHorizontalAlignment* InAlignH, struct FHUDRichTextOverlayData* OutOverlay, bool* bUpdateAfterSetting);
	void BPSetHUDRichTextOverlayHorizontalScreenAnchor(struct FHUDRichTextOverlayData* InOverlay, enum class EHorizontalAlignment* InAnchorH, struct FHUDRichTextOverlayData* OutOverlay, bool* bUpdateAfterSetting);
	void BPSetHUDRichTextOverlayDisplayText(struct FHUDRichTextOverlayData* InOverlay, const class FString& InString, struct FHUDRichTextOverlayData* OutOverlay, bool* bUpdateAfterSetting);
	struct FLinearColor BPSetHUDRichTextOverlayDefaultTextColor(struct FHUDRichTextOverlayData* InOverlay, struct FHUDRichTextOverlayData* OutOverlay, bool* bUpdateAfterSetting);
	void BPRemoveHUDRichTextOverlaysByInstigator(class AActor** ByInstigator);
	int32 BPRemoveHUDRichTextOverlayAtIndex();
	void BPRemoveHUDRichTextOverlay(struct FHUDRichTextOverlayData* InOverlay);
	void BPRemoveAllHUDRichTextOverlays();
	void BPGetHUDRichTextOverlays(TArray<struct FHUDRichTextOverlayData>* ReturnValue);
	void BPForceReinitUI();
	int32 BPCustomAddHUDNotification(const class FString& NotificationString, const struct FColor& NotificationColor, class UMaterialInterface* NotificationMaterial, class UTexture2D* NotificationTexture, int32 MessageTypeID, bool* ReturnValue);
	void BPAddHUDRichTextOverlayAtIndex(struct FHUDRichTextOverlayData* InOverlay, int32* InsertAtIndex);
	void BPAddHUDRichTextOverlay(struct FHUDRichTextOverlayData* InOverlay);
	int32 BPAddHUDNotification(const class FString& NotificationString, const struct FColor& NotificationColor, class UMaterialInterface* NotificationMaterial, class UTexture2D* NotificationTexture, int32 MessageTypeID, int32 ItemMsgType, class UClass* ItemClass, class FString* ItemName, int32 ItemQuantity, float ItemQuantityFloat);
	void AcceptTeamPingWheel();
};

// 0x398 (0x860 - 0x4C8)
// Class ShooterGame.ShooterImpactEffect
class AShooterImpactEffect : public AActor
{
public:
	class UParticleSystem*                       SurfaceImpactFX[0x10];                             // 0x4C8(0x80)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            WaeponImpactSound;                                 // 0x548(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            SurfaceImpactSound[0x10];                          // 0x550(0x80)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxDecalRange;                                     // 0x5D0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_475F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDecalData                            SurfaceDecalData[0x10];                            // 0x5D8(0x200)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                SurfaceImpactSpawnActors[0x10];                    // 0x7D8(0x80)(ExportObject, EditFixedSize, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bOverridePawnHitDecal : 1;                         // Mask: 0x1, PropSize: 0x10x858(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bOverridePawnHitFX : 1;                            // Mask: 0x2, PropSize: 0x10x858(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bNoHitEffectOnPawns : 1;                           // Mask: 0x4, PropSize: 0x10x858(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bNoSoundEffectOnPawns : 1;                         // Mask: 0x8, PropSize: 0x10x858(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bNoSpawnActorOnPawns : 1;                          // Mask: 0x10, PropSize: 0x10x858(0x1)(BlueprintReadOnly, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bNoDecalOnPawns : 1;                               // Mask: 0x20, PropSize: 0x10x858(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4760[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterImpactEffect* GetDefaultObj();

	struct FVector StaticSpawnImpactEffects(class UClass** ImpactEffectClass, struct FHitResult* SurfaceHit, bool* UseShotDirectionForImpactEffectActorClassRotation, bool* AttachImpactEffectActorToSurfaceHitActor, class UParticleSystemComponent** ReturnValue);
};

// 0x18 (0xA00 - 0x9E8)
// Class ShooterGame.ShooterLaserBeamComponent
class UShooterLaserBeamComponent : public UParticleSystemComponent
{
public:
	bool                                         bIsOwnerWeapon;                                    // 0x9E8(0x1)(Edit, ConstParm, ExportObject, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4761[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LaserBeamRange;                                    // 0x9EC(0x4)(Edit, ConstParm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4762[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterLaserBeamComponent* GetDefaultObj();

};

// 0x1198 (0x1650 - 0x4B8)
// Class ShooterGame.ShooterLocalPlayer
class UShooterLocalPlayer : public ULocalPlayer
{
public:
	TSet<class UPrimalUI*>                       UITicks;                                           // 0x4B8(0x50)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UOnlineSession*                        OnlineSession;                                     // 0x508(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	class UShooterPersistentUser*                PersistentUser;                                    // 0x510(0x8)(ConstParm, EditFixedSize, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4763[0x1138];                                  // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterLocalPlayer* GetDefaultObj();

};

// 0x0 (0x1E0 - 0x1E0)
// Class ShooterGame.ShooterOnlineSessionClient
class UShooterOnlineSessionClient : public UOnlineSessionClient
{
public:

	static class UClass* StaticClass();
	static class UShooterOnlineSessionClient* GetDefaultObj();

};

// 0x28 (0xE8 - 0xC0)
// Class ShooterGame.ShooterPendingNetGame
class UShooterPendingNetGame : public UPendingNetGame
{
public:
	uint8                                        Pad_4764[0x28];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterPendingNetGame* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class ShooterGame.ShooterPersistentUser
class UShooterPersistentUser : public USaveGame
{
public:
	int32                                        Kills;                                             // 0x28(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Deaths;                                            // 0x2C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Wins;                                              // 0x30(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Losses;                                            // 0x34(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        BulletsFired;                                      // 0x38(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        RocketsFired;                                      // 0x3C(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        BotsCount;                                         // 0x40(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Gamma;                                             // 0x44(0x4)(Edit, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AimSensitivity;                                    // 0x48(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bInvertedYAxis;                                    // 0x4C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4765[0x1B];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterPersistentUser* GetDefaultObj();

};

// 0x23A0 (0x5D60 - 0x39C0)
// Class ShooterGame.ShooterPlayerCameraManager
class AShooterPlayerCameraManager : public APlayerCameraManager
{
public:
	TMap<class UMaterialInterface*, float>       MatFadeDown;                                       // 0x39C0(0x50)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FMinimalViewInfo                      LastPreModifierCameraCache;                        // 0x3A10(0x860)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        NormalFOV;                                         // 0x4270(0x4)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TargetingFOV;                                      // 0x4274(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TPVZOffsetInterpSpeed;                             // 0x4278(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4775[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPostProcessSettings                  PPMaterials;                                       // 0x4280(0x770)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4776[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bHasCustomDepthStencil;                            // 0x49FC(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bCustomDepthStencilIgnoreHealth;                   // 0x49FD(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCompleteCustomDepthStencilOverride;               // 0x49FE(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4777[0x19];                                    // Fixing Size After Last Property  > TateDumper <
	class FName                                  LastActualCameraStyle;                             // 0x4A18(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4778[0x10E8];                                  // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LastTPVCameraOffset;                               // 0x5B08(0x18)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LastTPVCollisionHeight;                            // 0x5B20(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TPVCollisionHeightInterpSpeed;                     // 0x5B24(0x4)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4779[0xC4];                                    // Fixing Size After Last Property  > TateDumper <
	struct FFloatSpringState                     CameraArmLengthSpringState;                        // 0x5BEC(0xC)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FFloatSpringState                     CameraPivotLocationSpringStateX;                   // 0x5BF8(0xC)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FFloatSpringState                     CameraPivotLocationSpringStateY;                   // 0x5C04(0xC)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FFloatSpringState                     CameraPivotLocationSpringStateZ;                   // 0x5C10(0xC)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_477A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FQuaternionSpringState                CameraPivotRotationSpringState;                    // 0x5C20(0x40)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_477B[0x100];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterPlayerCameraManager* GetDefaultObj();

	void UpdateCameraState(class APrimalCharacter* ForChar);
	void StartCameraTransition(float TransitionDuration, bool bUseFinalModifiedViewTarget, bool bAllowSpectorPawn);
	void ShouldUseSlowInterpToOldCamera(class APrimalCharacter* ForChar, bool* ReturnValue);
	void ShouldUseASACamera(class APrimalCharacter* ForChar, bool bCheckShouldSwitchToOldCamera, bool* ReturnValue);
	void SetLastTargetLocationLoc(const struct FVector& NewTargetLocationLoc);
	float PrimalCameraQuaternionSpringInterp(const struct FQuat& Current, const struct FQuat& Target, float CriticalDampingFactor, float* Mass, float TargetVelocityAmount, bool bInitializeFromTarget, struct FQuat* ReturnValue);
	bool PrimalCameraFloatSpringInterp(float Current, float Target, float CriticalDampingFactor, float* Mass, float TargetVelocityAmount, float MinValue, float MaxValue, bool bInitializeFromTarget, float* ReturnValue);
	enum class EPrimalCameraState OnCameraStateChanged(class APrimalCharacter* ForChar);
	void IsInFrustum(const struct FVector& BoxLocation, const struct FVector& BoxExtents, bool* ReturnValue);
	void IsFirstPerson(bool* ReturnValue);
	void HandleTurn(float Val, bool* ReturnValue);
	void HandleLook(float Val, bool* ReturnValue);
	void GetTPVCollisionHeight(class AActor* ForTarget, bool bIncludeHeightScalar, float* ReturnValue);
	void GetPrimalCameraState(enum class EPrimalCameraState* ReturnValue);
	void GetPrimalCameraCurrentPivotLocationOffset(class APrimalCharacter* ForChar, bool bCheckShouldSwitchToOldCamera, struct FVector* ReturnValue);
	void GetPrimalCameraCurrentPivotLocation(class APrimalCharacter* ForChar, bool bCheckShouldSwitchToOldCamera, struct FVector* ReturnValue);
	float GetColorCodedStencil(enum class EStencilAlliance InAlliance, uint8* ReturnValue);
	void GetCameraStyle(class FName* ReturnValue);
	void GetCameraAimViewPoint(const struct FVector& OutCamLoc, const struct FRotator& OutCamRot);
	void GetCahcedCameraStyle(class FName* ReturnValue);
	void GetBlendableFromMIC(class UMaterialInterface* InInterface, class UObject** ReturnValue);
	void CameraGetRotationForPawnMovementInput(class APrimalCharacter** ForPawn, const struct FRotator& InControlRotation, struct FRotator* ReturnValue);
};

// 0x8 (0xB40 - 0xB38)
// Class ShooterGame.ShooterPlayerController_Menu
class AShooterPlayerController_Menu : public ABasePlayerController
{
public:
	class UPrimalLocalProfile*                   PrimalLocalProfile;                                // 0xB38(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig)

	static class UClass* StaticClass();
	static class AShooterPlayerController_Menu* GetDefaultObj();

};

// 0xBC8 (0x11A8 - 0x5E0)
// Class ShooterGame.ShooterPlayerState
class AShooterPlayerState : public APlayerState
{
public:
	uint8                                        Pad_479D[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	class UPrimalPlayerData*                     MyPlayerData;                                      // 0x610(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FPrimalPlayerDataStruct               MyPlayerDataStruct;                                // 0x618(0x4F8)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                DefaultItemSlotClasses[0xA];                       // 0xB10(0x50)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        DefaultItemSlotEngrams[0xA];                       // 0xB60(0xA)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_479E[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTribeData                            MyTribeData;                                       // 0xB70(0x1A8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FTribeData                            LastTribeInviteData;                               // 0xD18(0x1A8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_479F[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSpawnPointInfo>               CachedSpawnPointInfos;                             // 0xF10(0x10)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        TotalEngramPoints;                                 // 0xF20(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        FreeEngramPoints;                                  // 0xF24(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        EngramItemBlueprints;                              // 0xF28(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47A0[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       NextAllowedRespawnTime;                            // 0xF88(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	float                                        AllowedRespawnInterval;                            // 0xF90(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_47A1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastTimeDiedToEnemyTeam;                           // 0xF98(0x8)(ConstParm, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	int32                                        CurrentlySelectedDinoOrderGroup;                   // 0xFA0(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_47A2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDinoOrderGroup                       DinoOrderGroups[0xA];                              // 0xFA8(0x1E0)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
	double                                       GenesisAbilityErrorLastTime;                       // 0x1188(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       NextAllowTurretCopySettingsTime;                   // 0x1190(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47A3[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bQuitter : 1;                                      // Mask: 0x1, PropSize: 0x10x11A0(0x1)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47A4[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterPlayerState* GetDefaultObj();

	void UpdatedPlayerData();
	bool ServerUnlockEngram();
	int32 ServerTribeRequestRemoveRankGroup();
	void ServerTribeRequestNewRallyPoint(struct FTeamPingData* RallyPointData);
	void ServerTribeRequestNewAlliance(const class FString& AllianceName);
	struct FTribeRankGroup ServerTribeRequestApplyRankGroupSettings();
	void ServerTribeRequestAddRankGroup(class FString* GroupName);
	int32 ServerSetSelectedDinoOrderGroup();
	int32 ServerSetDinoGroupName(class FString* GroupName);
	bool ServerSetDefaultItemSlotClass(class UClass* ItemClass);
	int32 ServerRequestTransferOwnershipInMyTribe();
	int32 ServerRequestSpawnPointsForDownloadedCharacters(uint64* PlayerDataID);
	int32 ServerRequestSetTribeMemberGroupRank();
	struct FTribeGovernment ServerRequestSetTribeGovernment();
	void ServerRequestRenameTribe(const class FString& ServerRequestRenameTribe);
	int32 ServerRequestRemovePlayerIndexFromMyTribe();
	uint32 ServerRequestRemoveAllianceMember(uint32 AllianceID);
	int32 ServerRequestPromotePlayerInMyTribe();
	uint32 ServerRequestPromoteAllianceMember(uint32 AllianceID);
	int32 ServerRequestMySpawnPoints(class UClass** FilterClass);
	void ServerRequestLeaveTribe();
	void ServerRequestLeaveAlliance(uint32 AllianceID);
	void ServerRequestDinoOrderGroups();
	int32 ServerRequestDemotePlayerInMyTribe();
	struct FTribeGovernment ServerRequestCreateNewTribe(class FString* TribeName);
	struct FPrimalPlayerCharacterConfigStructReplicated ServerRequestCreateNewPlayer();
	class UClass* ServerRequestApplyEngramPoints();
	int32 ServerRejectTribeWar();
	void ServerGetServerOptions();
	void ServerGetPlayerWhiteListedData();
	void ServerGetPlayerConnectedData();
	void ServerGetPlayerBannedData();
	void ServerGetPlayerAdministratorData();
	void ServerGetAllPlayerNamesAndLocations();
	void ServerGetAlivePlayerConnectedData();
	int32 ServerDinoOrderGroup_RemoveEntryByIndex();
	bool ServerDinoOrderGroup_Clear();
	bool ServerDinoOrderGroup_AddOrRemoveDinoClass();
	bool ServerDinoOrderGroup_AddOrRemoveDinoCharacter();
	float ServerDeclareTribeWar(int32 EndDayNumber);
	int32 ServerAcceptTribeWar();
	struct FTribeData SendTribeInviteData();
	void OnRep_UpdatedEngrams();
	class FString NotifyUniqueDinoDownloaded();
	class FString NotifyUniqueDinoDownloadAllowed();
	class FString NotifyTribememberLeft();
	class FString NotifyTribememberJoined();
	bool NotifyPlayerLeftTribe(class FString* TribeName);
	class FString NotifyPlayerLeft();
	bool NotifyPlayerJoinedTribe(class FString* TribeName);
	class FString NotifyPlayerJoined();
	void NotifyAllianceChanged();
	void IsTribeAdmin(bool* ReturnValue);
	void IsInTribe(bool* ReturnValue);
	int32 IsFriendly(bool* ReturnValue);
	int32 IsDinoInOrderGroup(class APrimalDinoCharacter** DinoChar, bool* ReturnValue);
	class UClass* IsDinoClassInOrderGroup(bool* ReturnValue);
	int32 IsAlliedWith(bool* ReturnValue);
	void HasEngram(class UClass* ItemClass, bool* ReturnValue);
	void GetUniqueNetIdAsString(class FString* ReturnValue);
	void GetUniqueIdString(class FString* ReturnValue);
	void GetTribeId(int32* ReturnValue);
	void GetHexCostToPurchaseNextEngramPoint(int32* ReturnValue);
	void GetDefaultItemSlotClasses(TArray<class UClass*>* ReturnValue);
	bool DoRespec();
	bool ClientUpdateNewRallyPoint(struct FTeamPingData* RallyPointData);
	int32 ClientRefreshDinoOrderGroup();
	TArray<struct FSpawnPointInfo> ClientReceiveSpawnPoints();
	void ClientNotifyLevelUpAvailable();
	struct FServerOptions ClientGetServerOptions();
	TArray<struct FAdminPlayerDataInfo> ClientGetPlayerWhiteListedData();
	TArray<struct FAdminPlayerDataInfo> ClientGetPlayerConnectedData();
	TArray<struct FAdminPlayerDataInfo> ClientGetPlayerBannedData();
	TArray<struct FAdminPlayerDataInfo> ClientGetPlayerAdministratorData();
	TArray<struct FAliveNameAndLocation> ClientGetAllPlayerNamesAndLocations();
	TArray<struct FAlivePlayerDataInfo> ClientGetAlivePlayerConnectedData();
	bool ClearTribe(bool bForce, class APlayerController* ForPC);
	class AShooterPlayerState* BroadcastDeath();
	void AllowTribeGroupPermission(enum class ETribeGroupPermission* TribeGroupPermission, class UObject** OnObject, bool* ReturnValue);
	class APrimalDinoCharacter* AllowDinoOrderByGroup(bool* ReturnValue);
	class APlayerController* AddToTribe(const struct FTribeData& MyNewTribe, bool bForce, bool bIsFromInvite, bool* ReturnValue);
};

// 0x0 (0x218 - 0x218)
// Class ShooterGame.ShooterProjectileMovement
class UShooterProjectileMovement : public UProjectileMovementComponent
{
public:

	static class UClass* StaticClass();
	static class UShooterProjectileMovement* GetDefaultObj();

};

// 0x218 (0x9B0 - 0x798)
// Class ShooterGame.ShooterProjectile_Swarm
class AShooterProjectile_Swarm : public AShooterProjectile
{
public:
	class USceneComponent*                       SwarmRoot;                                         // 0x798(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        SwarmSize;                                         // 0x7A0(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        SwarmLeaderCount;                                  // 0x7A4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BoidCollisionRadius;                               // 0x7A8(0x4)(BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47A7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBoidBehavior                         SwarmBehavior;                                     // 0x7B0(0x40)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DynamicAvoidanceDuration;                          // 0x7F0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47A8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FFlockPersistentData                  SwarmPersistentData;                               // 0x7F8(0x38)(BlueprintVisible, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       SwarmParticleSystem;                               // 0x830(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SwarmOpacityParticleParamName;                     // 0x838(0x8)(Edit, ExportObject, Net, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bFadeOutSwarmOverProjectileLife;                   // 0x840(0x1)(ExportObject, BlueprintReadOnly, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47A9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SwarmOpacityFadeTimeOnBoidImpact;                  // 0x844(0x4)(Edit, ConstParm, BlueprintVisible, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LifespanAfterImpact;                               // 0x848(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SwarmDelayedStartTime;                             // 0x84C(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BoidSpawnInterval;                                 // 0x850(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BoidInitialFollowProjectileTime;                   // 0x854(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BoidInitialDisableCollisionTime;                   // 0x858(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SwarmLifetimeAfterPrimaryProjectileDestruction;    // 0x85C(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SwarmSpawnRadius;                                  // 0x860(0x4)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47AA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             SwarmInitialSpeedRange;                            // 0x868(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             SwarmMaxSpeedRange;                                // 0x878(0x10)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             SwarmMaxForceRange;                                // 0x888(0x10)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             SwarmTurnRateRange;                                // 0x898(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SwarmTargetRadius;                                 // 0x8A8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SwarmTargetHelixSpeed;                             // 0x8AC(0x4)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FBoid>                         SwarmData;                                         // 0x8B0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UParticleSystemComponent*>      SwarmComps;                                        // 0x8C0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<double>                               BoidSpawnTimes;                                    // 0x8D0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<double>                               BoidExplodeTimes;                                  // 0x8E0(0x10)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<int32>                                FlockingWhitelist;                                 // 0x8F0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseCrazinessMultiplier;                           // 0x900(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47AB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CrazinessMultiplier;                               // 0x904(0x4)(BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseBPGetBoidSpawnLocationAndVelocity;             // 0x908(0x1)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47AC[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FProjectileArc                        LaunchArc;                                         // 0x910(0x58)(ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       ProjectileSpawnTime;                               // 0x968(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ProjectilePeakTime;                                // 0x970(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ProjectileImpactTime;                              // 0x974(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47AD[0x38];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterProjectile_Swarm* GetDefaultObj();

	void TimeSinceProjectileSpawn(float* ReturnValue);
	void SpawnSwarm();
	TArray<struct FBoid> MultiSyncSwarm();
	double MultiPrimaryProjectileDestroyed(struct FVector* ImpactLocation);
	void GetNumberOfBoidsInFlight(int32* ReturnValue);
	void DoSwarmSync();
	class UParticleSystemComponent* BPOnBoidExplode(const struct FHitResult& Hit);
	struct FVector BPGetBoidSpawnLocationAndVelocity(struct FVector* SpawnLocation);
};

// 0x0 (0x120 - 0x120)
// Class ShooterGame.ShooterGraphNode_AlwaysRelevant
class UShooterGraphNode_AlwaysRelevant : public UReplicationGraphNode_ActorList
{
public:

	static class UClass* StaticClass();
	static class UShooterGraphNode_AlwaysRelevant* GetDefaultObj();

};

// 0xF0 (0x140 - 0x50)
// Class ShooterGame.ShooterGraphNode_TeamAlwaysRelevant
class UShooterGraphNode_TeamAlwaysRelevant : public UReplicationGraphNode
{
public:
	TMap<int32, class UShooterGraphNode_AlwaysRelevant*> TeamNodes;                                         // 0x50(0x50)(BlueprintVisible, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47AE[0xA0];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterGraphNode_TeamAlwaysRelevant* GetDefaultObj();

};

// 0x50 (0x170 - 0x120)
// Class ShooterGame.ShooterGraphNode_Default
class UShooterGraphNode_Default : public UReplicationGraphNode_ActorList
{
public:
	uint8                                        Pad_47AF[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterGraphNode_Default* GetDefaultObj();

};

// 0x50 (0x170 - 0x120)
// Class ShooterGame.ShooterGraphNode_StaggeredByDistance
class UShooterGraphNode_StaggeredByDistance : public UReplicationGraphNode_ActorList
{
public:
	uint8                                        Pad_47B0[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterGraphNode_StaggeredByDistance* GetDefaultObj();

};

// 0x0 (0x270 - 0x270)
// Class ShooterGame.ShooterGraphNode_BaseSpatialGrid
class UShooterGraphNode_BaseSpatialGrid : public UReplicationGraphNode_GridSpatialization2D
{
public:

	static class UClass* StaticClass();
	static class UShooterGraphNode_BaseSpatialGrid* GetDefaultObj();

};

// 0x0 (0x170 - 0x170)
// Class ShooterGame.ShooterGraphNode_DynamicGridCell
class UShooterGraphNode_DynamicGridCell : public UReplicationGraphNode_GridCell
{
public:

	static class UClass* StaticClass();
	static class UShooterGraphNode_DynamicGridCell* GetDefaultObj();

};

// 0x0 (0x270 - 0x270)
// Class ShooterGame.ShooterGraphNode_DynamicSpatialGrid
class UShooterGraphNode_DynamicSpatialGrid : public UShooterGraphNode_BaseSpatialGrid
{
public:

	static class UClass* StaticClass();
	static class UShooterGraphNode_DynamicSpatialGrid* GetDefaultObj();

};

// 0x50 (0x1C0 - 0x170)
// Class ShooterGame.ShooterGraphNode_DormantGridCell
class UShooterGraphNode_DormantGridCell : public UReplicationGraphNode_GridCell
{
public:
	TSet<class AActor*>                          ActorSet;                                          // 0x170(0x50)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UShooterGraphNode_DormantGridCell* GetDefaultObj();

};

// 0x50 (0x2C0 - 0x270)
// Class ShooterGame.ShooterGraphNode_DormantSpatialGrid
class UShooterGraphNode_DormantSpatialGrid : public UShooterGraphNode_BaseSpatialGrid
{
public:
	uint8                                        Pad_47B1[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterGraphNode_DormantSpatialGrid* GetDefaultObj();

};

// 0x18 (0x388 - 0x370)
// Class ShooterGame.ShooterReplicationConnectionGraph
class UShooterReplicationConnectionGraph : public UNetReplicationGraphConnection
{
public:
	class UShooterGraphNode_AlwaysRelevant*      AlwaysRelevantNode;                                // 0x370(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UShooterGraphNode_DormantGridCell*> DormantCells;                                      // 0x378(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UShooterReplicationConnectionGraph* GetDefaultObj();

};

// 0x50 (0x5C0 - 0x570)
// Class ShooterGame.ShooterReplicationGraph
class UShooterReplicationGraph : public UReplicationGraph
{
public:
	float                                        DynamicCellSize;                                   // 0x570(0x4)(ConstParm, Net, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DormantCellSize;                                   // 0x574(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DistanceMultiplier;                                // 0x578(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47B2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bEnableSpatialRebuilds;                            // 0x580(0x1)(Edit, ConstParm, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47B3[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UShooterGraphNode_DynamicSpatialGrid*  DynamicGrid;                                       // 0x588(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UShooterGraphNode_DormantSpatialGrid*  DormantGrid;                                       // 0x590(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UShooterGraphNode_Default*             DefaultBehaviorNode;                               // 0x598(0x8)(ConstParm, ExportObject, Net, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UShooterGraphNode_AlwaysRelevant*      AlwaysRelevantNode;                                // 0x5A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UShooterGraphNode_TeamAlwaysRelevant*  TeamAlwaysRelevantNode;                            // 0x5A8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47B4[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShooterReplicationGraph* GetDefaultObj();

};

// 0x78 (0x620 - 0x5A8)
// Class ShooterGame.ShooterSpectatorPawn
class AShooterSpectatorPawn : public ASpectatorPawn
{
public:
	uint8                                        Pad_47B6[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        MaxOrbitRadius;                                    // 0x5C0(0x4)(ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinOrbitRadius;                                    // 0x5C4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47B7[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AActor>                 CurrentOrbitCamTarget;                             // 0x5F0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47B8[0x28];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterSpectatorPawn* GetDefaultObj();

	void SpectatorIncreaseBaseSpeedStart();
	void SpectatorIncreaseBaseSpeedEnd();
	void SpectatorDecreaseBaseSpeedStart();
	void SpectatorDecreaseBaseSpeedEnd();
	int32 SetSavedSpectatorPositionForIndex(const struct FVector& Position, struct FRotator* Rotation);
	int32 SaveSpectatorPositionForIndex();
	void OrbitCamOff();
	int32 LoadSpectatorPositionFromIndex();
	TArray<struct FRotator> GetSavedSpectatorPositions();
	void BPOrbitCamOn(class AActor* OrbitTarget);
};

// 0xB0 (0x10F8 - 0x1048)
// Class ShooterGame.ShooterWeapon_FlameThrower
class AShooterWeapon_FlameThrower : public AShooterWeapon
{
public:
	int32                                        InstantDamageAmount;                               // 0x1048(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DamageTestSphereRadius;                            // 0x104C(0x4)(ConstParm, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DamageTestBoxExtentSide;                           // 0x1050(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DamageTestMuzzleOffset;                            // 0x1054(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FlameHurtMaxDistance;                              // 0x1058(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47B9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FVector>                       DamageImpactPoints;                                // 0x1060(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               MuzzleDirectionOffset;                             // 0x1070(0x18)(BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ETickingGroup                     MuzzlePSCTickGroupOverride;                        // 0x1088(0x1)(ConstParm, Net, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47BA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseMuzzlePSCTickGroupOverride : 1;                // Mask: 0x1, PropSize: 0x10x108C(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3CF : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_47BB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                FlameThrowerFXDefaultColor;                        // 0x1090(0x4)(BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47BC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DamageType;                                        // 0x1098(0x8)(ExportObject, Parm, OutParm, Transient, GlobalConfig)
	class UParticleSystem*                       FlameThrowerFX;                                    // 0x10A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       FlameThrowerFX_FPV;                                // 0x10A8(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       OnFireFX;                                          // 0x10B0(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       HarvestFX;                                         // 0x10B8(0x8)(Edit, ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47BD[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        ShotDelay;                                         // 0x10D0(0x4)(Edit, Net, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47BE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FXDelay;                                           // 0x10D8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47BF[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bMuzzlePSC_IsTPV : 1;                              // Mask: 0x1, PropSize: 0x10x10F0(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47C0[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterWeapon_FlameThrower* GetDefaultObj();

	void TickShootFX();
	void StopShootFX();
	void SpawnImpactEffects();
	void ServerTickShootFX();
	void ServerStopShootFX();
	void ServerBeginShootFX();
	void EndFXDelay();
	void ClientSpawnHarvestFX(TArray<struct FVector>* Impacts);
	void BPSpawnHarvestEffects(TArray<struct FVector>* Impacts);
	void BeginShootFX();
};

// 0xE8 (0x11E0 - 0x10F8)
// Class ShooterGame.ShooterWeapon_Activated
class AShooterWeapon_Activated : public AShooterWeapon_FlameThrower
{
public:
	uint8                                        bIsActivated : 1;                                  // Mask: 0x1, PropSize: 0x10x10F8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3D0 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_47C3[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FWeaponAnim>                   ActivateAnim;                                      // 0x1108(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FWeaponAnim>                   DeactivateAnim;                                    // 0x1118(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           StopFireAnim;                                      // 0x1128(0x10)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           MovementFireAnim;                                  // 0x1138(0x10)(ConstParm, Net, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47C4[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bDamagePawns;                                      // 0x1150(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47C5[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ActivateCameraShake;                               // 0x1158(0x8)(BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ActivateCameraShakeSpeedScale;                     // 0x1160(0x4)(ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47C6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               FireOrigin;                                        // 0x1168(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               FireDirection;                                     // 0x1180(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               TargetLocation;                                    // 0x1198(0x18)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	class FName                                  BeamTargetParameterName;                           // 0x11B0(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             FireLoopSound;                                     // 0x11B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAudioComponent*                       FireLoopAC;                                        // 0x11C0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             IdleSound;                                         // 0x11C8(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAudioComponent*                       IdleAC;                                            // 0x11D0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             EmptySound;                                        // 0x11D8(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AShooterWeapon_Activated* GetDefaultObj();

	struct FVector ServerPreFire(struct FVector* ShootDir);
	void ServerCancelActivation();
	bool ServerActivateWeapon(int32* NAnimIndex);
	void IsActivationAnimPlaying(bool* ReturnValue);
	bool HandleActivation();
	void GetBeamTarget(struct FVector* ReturnValue);
	void EndActivationAnim();
	bool ClientHandleActivation();
	bool ClientActivateWeapon();
	struct FVector BPPreFireEvent(struct FVector* ShootDir);
	bool ActivateWeapon(int32* NAnimIndex);
};

// 0x38 (0x1080 - 0x1048)
// Class ShooterGame.ShooterWeapon_ChainSaw
class AShooterWeapon_ChainSaw : public AShooterWeapon
{
public:
	TArray<struct FWeaponAnim>                   ShootAnimList;                                     // 0x1048(0x10)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FWeaponAnim>                   ShootWithHitAnimList;                              // 0x1058(0x10)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             IdleSound;                                         // 0x1068(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAudioComponent*                       IdleAC;                                            // 0x1070(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47C7[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterWeapon_ChainSaw* GetDefaultObj();

	void ServerStopFireAnim();
	void ServerReloadWeapon();
	void ServerHit();
	void ClientSimulateChangeFireAnim();
};

// 0x740 (0x1790 - 0x1050)
// Class ShooterGame.ShooterWeapon_Climb
class AShooterWeapon_Climb : public AShooterWeapon_Melee
{
public:
	float                                        MinStaminaToClimb;                                 // 0x1050(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        ClimbingMode;                                      // 0x1054(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        PreviousClimbingMode;                              // 0x1055(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        ClimbingType;                                      // 0x1056(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        CurrentClimbingMovementType;                       // 0x1057(0x1)(ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bClimbingLeftArm : 1;                              // Mask: 0x1, PropSize: 0x10x1058(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bInitialAttach : 1;                                // Mask: 0x2, PropSize: 0x10x1058(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEarthquakeLocked : 1;                             // Mask: 0x4, PropSize: 0x10x1058(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3D1 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_47D6[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector_NetQuantize100                ClimbingAnchorPosition;                            // 0x1060(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector_NetQuantizeNormal             ClimbingAnchorNormal;                              // 0x1078(0x18)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47D7[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               PreviousClimbingAnchorPosition;                    // 0x1098(0x18)(BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               PreviousClimbingAnchorNormal;                      // 0x10B0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ClimbingDirection;                                 // 0x10C8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ClimbingAnchorDirection;                           // 0x10E0(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ClimbingOvershootTime;                             // 0x10F8(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ClimbingLookingToSide;                             // 0x10FC(0x4)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             ClimbLowStaminaLoopSC;                             // 0x1100(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAudioComponent*                       ClimbLowStaminaLoopAC;                             // 0x1108(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ClimbLowStaminaPercentagePlaySound;                // 0x1110(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47D8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FClimbingAnims                        ClimbAnims;                                        // 0x1118(0x400)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           TurnLeftAnim;                                      // 0x1518(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           TurnRightAnim;                                     // 0x1528(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           TurnLeftAnimHanging;                               // 0x1538(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           TurnRightAnimHanging;                              // 0x1548(0x10)(Edit, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimSequence*                         RightClimbingAnimation;                            // 0x1558(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimSequence*                         LeftClimbingAnimation;                             // 0x1560(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimSequence*                         RightClimbingHangAnimation;                        // 0x1568(0x8)(Edit, ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimSequence*                         LeftClimbingHangAnimation;                         // 0x1570(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimSequence*                         InventoryRightClimbAnimation;                      // 0x1578(0x8)(ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimSequence*                         InventoryLeftClimbAnimation;                       // 0x1580(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimSequence*                         InventoryRightClimbHangAnimation;                  // 0x1588(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAnimSequence*                         InventoryLeftClimbHangAnimation;                   // 0x1590(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           SlideDownLeftAnim;                                 // 0x1598(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           SlideDownRightAnim;                                // 0x15A8(0x10)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LeftMesh1PComponentName;                           // 0x15B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RightMesh1PComponentName;                          // 0x15C0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LeftMesh3PComponentName;                           // 0x15C8(0x8)(ConstParm, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RightMesh3PComponentName;                          // 0x15D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LeftPickAttachPoint3P;                             // 0x15D8(0x8)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  LeftMesh1P;                                        // 0x15E0(0x8)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  RightMesh1P;                                       // 0x15E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  LeftMesh3P;                                        // 0x15F0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  RightMesh3P;                                       // 0x15F8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ClimbPickHitCameraShake;                           // 0x1600(0x8)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FBiomeZoneImpactEffect                LeftClimbImpactEffects;                            // 0x1608(0x80)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FBiomeZoneImpactEffect                RightClimbImpactEffects;                           // 0x1688(0x80)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ImpactSocketName;                                  // 0x1708(0x8)(EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxSpawnedImpactEffects;                           // 0x1710(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        ServerCurrentClimbingType;                         // 0x1714(0x1)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47D9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ServerCurrentClimbingDirection;                    // 0x1718(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        UpdatingDirectionTime;                             // 0x1730(0x4)(Edit, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47DA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActiveImpactEffects;                               // 0x1738(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ClimbingSettingsClass;                             // 0x1748(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UCameraModifier*                       ActiveCameraModifer;                               // 0x1750(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ClimbingMinAttachedDurationBeforeAllowingDetach;   // 0x1758(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47DB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ClimbingLastAttachedStartedTime;                   // 0x1760(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47DC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bHasAValidClimbingTarget;                          // 0x176C(0x1)(BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47DD[0x23];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterWeapon_Climb* GetDefaultObj();

	void ShouldShowTargetingArray(bool* ReturnValue);
	struct FVector_NetQuantizeNormal SetClimbingAnchorPoint(const struct FVector_NetQuantize100& Position);
	void ServerSetClimbingLeftArm(bool ClimbingLeftArm);
	struct FVector ServerRequestClimbMove(bool ClimbingLeftArm);
	void ServerReleaseClimbingAnchor(bool bWithJump, const struct FVector_NetQuantizeNormal& InputDir, bool bForceMinTimeCheckBeforeReleasing);
	void ServerPerformTurn(bool ClimbingLeftArm);
	void ReleaseClimbingAnchor(bool bWithJump, const struct FVector& InputDir, bool bForceMinTimeCheckBeforeReleasing);
	void IsClimbingUp(bool* ReturnValue);
	void IsClimbingHanging(bool* ReturnValue);
	void GetViewLocation(struct FVector* ReturnValue);
	void GetViewDirection(struct FVector* ReturnValue);
	enum class ECollisionChannel ClimbTrace(const struct FHitResult& HitResult, bool* ReturnValue);
	void ClientNotifyNoClimbSurface();
	void CanLandOnSurface(const struct FHitResult& HitResult, bool* ReturnValue);
	void CanClimbOnSurface(const struct FHitResult& HitResult, bool* ReturnValue);
	float BPUpdateClimbTarget(bool bClimbing, const struct FVector& AnchorPosition, const struct FVector& AnchorNormal, bool bCanClimb, bool bCanLand, const struct FVector& ClimbLocation, const struct FVector& ClimbNormal, bool bHudVisible);
};

// 0x48 (0x1090 - 0x1048)
// Class ShooterGame.ShooterWeapon_Instant
class AShooterWeapon_Instant : public AShooterWeapon
{
public:
	uint8                                        Pad_47E0[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UParticleSystem*                       TrailFX;                                           // 0x1050(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystem*                       TrailFX_Local;                                     // 0x1058(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TrailTargetParam;                                  // 0x1060(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OriginCheckDistance;                               // 0x1068(0x4)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47E1[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        NumTracesPerShot;                                  // 0x1080(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47E2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bPlayFireSoundOnInstantHit : 1;                    // Mask: 0x1, PropSize: 0x10x1088(0x1)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bExecSpread : 1;                                   // Mask: 0x2, PropSize: 0x10x1088(0x1)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bFireFromMuzzle : 1;                               // Mask: 0x4, PropSize: 0x10x1088(0x1)(Edit, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreventSimulatingMultipleShots : 1;               // Mask: 0x8, PropSize: 0x10x1088(0x1)(BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPerformObstructionCheck : 1;                      // Mask: 0x10, PropSize: 0x10x1088(0x1)(Edit, ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSpawnTrailToHit : 1;                              // Mask: 0x20, PropSize: 0x10x1088(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bClampTrailToMaxWeaponRange : 1;                   // Mask: 0x40, PropSize: 0x10x1088(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSpawnImpactEffects : 1;                      // Mask: 0x80, PropSize: 0x10x1088(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowNativeWithSpawnedImpacts : 1;                // Mask: 0x1, PropSize: 0x10x1089(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bRotateTrailFXByFireDirection : 1;                 // Mask: 0x2, PropSize: 0x10x1089(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAttachTrailFXToFirstPersonMuzzle : 1;             // Mask: 0x4, PropSize: 0x10x1089(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPGetCurrentSpread : 1;                        // Mask: 0x8, PropSize: 0x10x1089(0x1)(Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPKillImpactEffects : 1;                       // Mask: 0x10, PropSize: 0x10x1089(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47E3[0x6];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterWeapon_Instant* GetDefaultObj();

	int32 SimulateInstantHit(struct FVector_NetQuantizeNormal* ShootDir);
	TArray<struct FVector_NetQuantizeNormal> ServerNotifyShotOrigin(TArray<struct FHitResult>* Impacts);
	TArray<struct FVector_NetQuantizeNormal> ServerNotifyShot(TArray<struct FHitResult>* Impacts);
	struct FVector ServerForceShot();
	struct FVector NetSimulateForceShot(struct FVector* ShootDir);
	struct FVector GetFireLocationAndDirection(struct FVector* Location);
	void GetCurrentSpread(float* ReturnValue);
	void CheckRefireTimer();
	float BPSpawnImpactEffects(struct FVector* ShootDir);
	struct FVector BPPostSpawnTrailEffect();
	void BPKillImpactEffects();
	void BPGetCurrentSpread(float* ReturnValue);
};

// 0x10 (0x10A0 - 0x1090)
// Class ShooterGame.ShooterWeapon_InstantCharging
class AShooterWeapon_InstantCharging : public AShooterWeapon_Instant
{
public:
	uint8                                        bDidFireWeapon : 1;                                // Mask: 0x1, PropSize: 0x10x1090(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3D2 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_47E4[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ChargeStartTime;                                   // 0x1098(0x8)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AShooterWeapon_InstantCharging* GetDefaultObj();

	double ServerSetCharging();
};

// 0x68 (0x10F8 - 0x1090)
// Class ShooterGame.ShooterWeapon_InstantPenetrating
class AShooterWeapon_InstantPenetrating : public AShooterWeapon_Instant
{
public:
	float                                        MaxPenetrationTraceDistance;                       // 0x1090(0x4)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PenaltyPerPenetration;                             // 0x1094(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PenaltyPerUnrealUnit;                              // 0x1098(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseBPStopPenetratingAtHit;                        // 0x109C(0x1)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47E9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bDebugPenetration : 1;                             // Mask: 0x1, PropSize: 0x10x10A0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47EA[0x57];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterWeapon_InstantPenetrating* GetDefaultObj();

	float WeaponPenetrationTrace(struct FVector* Start, const struct FVector& End, float* DebugDrawDuration);
	int32 PassiveUseAmmo(int32* ReturnValue);
	float BPStopPenetratingAtHit(bool* ReturnValue);
};

// 0xE8 (0x1138 - 0x1050)
// Class ShooterGame.ShooterWeapon_MeleeLock
class AShooterWeapon_MeleeLock : public AShooterWeapon_Melee
{
public:
	uint8                                        Pad_47EB[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LockValue;                                         // 0x1058(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LockVFXValue;                                      // 0x105C(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       LastAttackTime;                                    // 0x1060(0x8)(Edit, ConstParm, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	double                                       LastHitTime;                                       // 0x1068(0x8)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         HitThisAttack;                                     // 0x1070(0x1)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47EC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LockDecayValue;                                    // 0x1074(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LockHitIncrement;                                  // 0x1078(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LockMissDecrement;                                 // 0x107C(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ESimpleCurve                      AnimationRateCurve;                                // 0x1080(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47ED[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinAnimationRate;                                  // 0x1084(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxAnimationRate;                                  // 0x1088(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ESimpleCurve                      DamageCurve;                                       // 0x108C(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47EE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinDamageMultiplier;                               // 0x1090(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxDamageMultiplier;                               // 0x1094(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             TargetBuff_MaxDamage;                              // 0x1098(0x30)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             OwnerBuff_MaxDamage;                               // 0x10C8(0x30)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LockTurnRate;                                      // 0x10F8(0x4)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinPullDistance;                                   // 0x10FC(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxPullDistance;                                   // 0x1100(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxTargetDistance;                                 // 0x1104(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TargetAngle;                                       // 0x1108(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxLockTime;                                       // 0x110C(0x4)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AttackMoveSpeed;                                   // 0x1110(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AttackAirImpulse;                                  // 0x1114(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AttackMoveDuration;                                // 0x1118(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxPowerThreshold;                                 // 0x111C(0x4)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47EF[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bSteppingEnabled;                                  // 0x1134(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47F0[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterWeapon_MeleeLock* GetDefaultObj();

	void OnRep_LockValue();
	void EndMeleeAttack();
};

// 0x80 (0x10C8 - 0x1048)
// Class ShooterGame.ShooterWeapon_Placer
class AShooterWeapon_Placer : public AShooterWeapon
{
public:
	class UClass*                                StructureToPlace;                                  // 0x1048(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           SecondaryActionAnim;                               // 0x1050(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           UnableToPlaceAnim;                                 // 0x1060(0x10)(Net, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           PlaceOnSelfAnim;                                   // 0x1070(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWeaponAnim                           EquipItemAnim;                                     // 0x1080(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bCanDetonateExplosives : 1;                        // Mask: 0x1, PropSize: 0x10x1090(0x1)(Edit, ConstParm, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHideLeftArmFPVWhenNoAmmo : 1;                     // Mask: 0x2, PropSize: 0x10x1090(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPlaySecondaryActionAnim : 1;                      // Mask: 0x4, PropSize: 0x10x1090(0x1)(ExportObject, Net, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseAnimNotifyToPlaceStructure : 1;                // Mask: 0x8, PropSize: 0x10x1090(0x1)(ExportObject, BlueprintReadOnly, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bModifyDetonatorMaterial : 1;                      // Mask: 0x10, PropSize: 0x10x1090(0x1)(Edit, ConstParm, ExportObject, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPlacingStructureConsumeItemAmmo : 1;              // Mask: 0x20, PropSize: 0x10x1090(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDontPlaceStructureOnFire : 1;                     // Mask: 0x40, PropSize: 0x10x1090(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPSecondaryAction : 1;                         // Mask: 0x80, PropSize: 0x10x1090(0x1)(Net, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreFireAction : 1;                           // Mask: 0x1, PropSize: 0x10x1091(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSkipStartPlacingCheatCheck : 1;                   // Mask: 0x2, PropSize: 0x10x1091(0x1)(ConstParm, BlueprintVisible, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3D3 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_47F1[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TimeToHideLeftArmFPV;                              // 0x1094(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ExplosiveBoneName;                                 // 0x1098(0x8)(Edit, BlueprintReadOnly, Net, GlobalConfig, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                ItemToPlace3P;                                     // 0x10A0(0x8)(Edit, ExportObject, Net, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ItemAttachPoint3P;                                 // 0x10A8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DetonateExplosivesMaxRadius;                       // 0x10B0(0x4)(BlueprintReadOnly, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ChangeMaterialDiffrentBehaviour;                   // 0x10B4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bHiddenExplosive;                                  // 0x10B5(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bWaitingForPlacement;                              // 0x10B6(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47F2[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PlacementWaitTimeFromEquip;                        // 0x10B8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinimumTimeBetweenPlacements;                      // 0x10BC(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47F3[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterWeapon_Placer* GetDefaultObj();

	void ServerDetonateExplosives();
	void PlaceStructureWithSecondaryAction();
	struct FRotator GetPlacementOrigin();
	void BPSecondaryAction(bool* ReturnValue);
	void BPPrefireAction();
};

// 0x60 (0x10B0 - 0x1050)
// Class ShooterGame.ShooterWeapon_Whip
class AShooterWeapon_Whip : public AShooterWeapon_Melee
{
public:
	class UClass*                                StunBuff;                                          // 0x1050(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                BlockedByShieldBuff;                               // 0x1058(0x8)(ConstParm, Net, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                HerdDinoBuff;                                      // 0x1060(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               HarvestingBoxExtent;                               // 0x1068(0x18)(BlueprintReadOnly, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               HarvestingWhipTipOffset;                           // 0x1080(0x18)(Edit, ConstParm, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxDinoDragWeightToApplyBuff;                      // 0x1098(0x4)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxFlyerDinoDragWeightToApplyBuff;                 // 0x109C(0x4)(ConstParm, Net, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DurabilityMultiplierForFriendDinos;                // 0x10A0(0x4)(BlueprintReadOnly, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DurabilityMultiplierForHarvesting;                 // 0x10A4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47F4[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AShooterWeapon_Whip* GetDefaultObj();

};

// 0x0 (0x68 - 0x68)
// Class ShooterGame.SilentDamageType
class USilentDamageType : public UPrimalDamageType
{
public:

	static class UClass* StaticClass();
	static class USilentDamageType* GetDefaultObj();

};

// 0x0 (0x4C8 - 0x4C8)
// Class ShooterGame.HideActorList
class AHideActorList : public AActor
{
public:

	static class UClass* StaticClass();
	static class AHideActorList* GetDefaultObj();

	class UObject* HandleHideActorsList();
	void GetDomeTag(class FName* ReturnValue);
	void GetDomeState(enum class EDomeState* ReturnValue);
};

// 0x78 (0x540 - 0x4C8)
// Class ShooterGame.SkyBoxLoader
class ASkyBoxLoader : public AHideActorList
{
public:
	TArray<struct FSoftObjectPath>               SkyBoxStringReferences;                            // 0x4C8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FSoftObjectPath>               FogScatterStringReferences;                        // 0x4D8(0x10)(Edit, ExportObject, EditFixedSize, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FSoftObjectPath>               FogLossStringReferences;                           // 0x4E8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FSkyBoxLoadedStatus>           LoadedStatus;                                      // 0x4F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    LoadedSkyTextures;                                 // 0x508(0x10)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    LoadedFogScatterTextures;                          // 0x518(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    LoadedFogLossTextures;                             // 0x528(0x10)(ConstParm, BlueprintReadOnly, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47F8[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ASkyBoxLoader* GetDefaultObj();

	void SetSkyTextureIndices(int32* Texture0, int32* Texture1, bool* ReturnValue);
	void LoadSkyTextureIndexArray(TArray<int32>* TextureInices, bool* ReturnValue);
	void LoadSkyTextureIndex(int32* TextureIdx, bool* ReturnValue);
	void K2_OnTextureIndicesLoaded(TArray<int32>* TextureIndices);
};

// 0x2E0 (0x7A8 - 0x4C8)
// Class ShooterGame.SOTFNotification
class ASOTFNotification : public AActor
{
public:
	float                                        NightBloomMultiplier;                              // 0x4C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        EffectScale;                                       // 0x4CC(0x4)(ConstParm, BlueprintVisible, ExportObject, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               BackgroundOffset;                                  // 0x4D0(0x18)(Edit, BlueprintVisible, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UStaticMesh*                           BackgroundMesh;                                    // 0x4E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              BackgroundRotation;                                // 0x4F0(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BackgroundMeshScale;                               // 0x508(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BackgroundMeshDoubleScale;                         // 0x50C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PreviewImageBloom;                                 // 0x510(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FadeOutInterval;                                   // 0x514(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FadeInInterval;                                    // 0x518(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAnimateScaling : 1;                               // Mask: 0x1, PropSize: 0x10x51C(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3D4 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_47FB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LightBrightness;                                   // 0x520(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47FC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              LightRotation;                                     // 0x528(0x18)(Edit, ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GapBetweenPlayerImages;                            // 0x540(0x4)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	struct FColor                                BannerEliminationTextColor;                        // 0x544(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	struct FColor                                BannerVictoryTextColor;                            // 0x548(0x4)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BannerTextBloom;                                   // 0x54C(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BannerTextFontScale;                               // 0x550(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinSizePerPlayer;                                  // 0x554(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               BannerTextOffset;                                  // 0x558(0x18)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                EliminationText;                                   // 0x570(0x10)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                VictoryText;                                       // 0x580(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ScrollingTextFadePower;                            // 0x590(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ScrollingTextSpeed;                                // 0x594(0x4)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ScrollingTextBloom;                                // 0x598(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ScrollingTextInterval;                             // 0x59C(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ScrollingTextOffset;                               // 0x5A0(0x18)(Edit, ConstParm, Net, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ScrollingTextLifeTime;                             // 0x5B8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ScrollingTextDoubleMultiplier;                     // 0x5BC(0x4)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ScrollingTextScale;                                // 0x5C0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ScrollingTextCount;                                // 0x5C4(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	struct FColor                                ScrollingTextColor;                                // 0x5C8(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47FD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               PreviewCameraLocation;                             // 0x5D0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              PreviewCameraRotation;                             // 0x5E8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PreviewCameraFOV;                                  // 0x600(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_47FE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              PreviewMeshRotation;                               // 0x608(0x18)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ESkyLightSourceType               AmbientSourceType;                                 // 0x620(0x1)(ConstParm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47FF[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UTextureCube*                          AmbientCubemap;                                    // 0x628(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                AmbientLightColor;                                 // 0x630(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AmbientBrightness;                                 // 0x634(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UFont*                                 TextFont;                                          // 0x638(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterial*                             TextMaterial;                                      // 0x640(0x8)(ConstParm, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              TextRotation;                                      // 0x648(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerNameFontSize;                                // 0x660(0x4)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4800[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               PlayerNameOffset;                                  // 0x668(0x18)(ExportObject, Net, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerNameTextBloom;                               // 0x680(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4801[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               DeathReasonOffset;                                 // 0x688(0x18)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DeathReasonFontSize;                               // 0x6A0(0x4)(ExportObject, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	struct FColor                                DeathReasonTextColor;                              // 0x6A4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DeathReasonTextBloom;                              // 0x6A8(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	struct FColor                                PlayerNameTextColor;                               // 0x6AC(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class UStaticMesh*                           PlayerImageMesh;                                   // 0x6B0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             DeathSound;                                        // 0x6B8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             TribeEliminatedSound;                              // 0x6C0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            PlayerDeathMusic1;                                 // 0x6C8(0x8)(Edit, ExportObject, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            PlayerDeathMusic2;                                 // 0x6D0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            TribeEliminationMusic;                             // 0x6D8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            VictoryMusic;                                      // 0x6E0(0x8)(BlueprintVisible, ExportObject, Net, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DefaultNotificationInterval;                       // 0x6E8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4802[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSOTFNotificationInfo>         NotificationsQueue;                                // 0x6F0(0x10)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	struct FSOTFNotificationInfo                 CurrentNotification;                               // 0x700(0x78)(ExportObject, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class AShooterCharacter*>             PreviewCharacter;                                  // 0x778(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UPreviewImage*>                 PreviewImages;                                     // 0x788(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4803[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ASOTFNotification* GetDefaultObj();

	void ComputeHeadHairMorphTargetValue(bool* bFemale, uint8* HairIndex, float* PercentOfGrowth, float* ReturnValue);
	void ComputeFacialHairMorphTargetValue(bool* bFemale, uint8* HairIndex, float* PercentOfGrowth, float* ReturnValue);
	void ColorBG(struct FLinearColor* ReturnValue);
};

// 0x58 (0x520 - 0x4C8)
// Class ShooterGame.SOTFNotificationDisplay
class ASOTFNotificationDisplay : public AActor
{
public:
	class ASOTFNotification*                     NotificationSystem;                                // 0x4C8(0x8)(ConstParm, ExportObject, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FScrollingTextInfo>            ScrollableTexts;                                   // 0x4D0(0x10)(Edit, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FPlayerPreviewImage>           CachedPlayerImages;                                // 0x4E0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FBannerTextInfo                       BannerText;                                        // 0x4F0(0x18)(Edit, BlueprintReadOnly, Net, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       LastScrollingTextActivationTime;                   // 0x508(0x8)(Net, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4804[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ASOTFNotificationDisplay* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class ShooterGame.SoundNodeLocalPlayer
class USoundNodeLocalPlayer : public USoundNode
{
public:

	static class UClass* StaticClass();
	static class USoundNodeLocalPlayer* GetDefaultObj();

};

// 0x8 (0x80 - 0x78)
// Class ShooterGame.SoundNodeDelayedRandom
class USoundNodeDelayedRandom : public USoundNodeRandom
{
public:
	class USoundWave*                            RetainedWave;                                      // 0x78(0x8)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundNodeDelayedRandom* GetDefaultObj();

};

// 0x20 (0x68 - 0x48)
// Class ShooterGame.SoundNodeVehicleEngine
class USoundNodeVehicleEngine : public USoundNode
{
public:
	TArray<struct FVehicleEngineDatum>           EngineSamples;                                     // 0x48(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4805[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CurrentRPM;                                        // 0x5C(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4806[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USoundNodeVehicleEngine* GetDefaultObj();

};

// 0x80 (0x810 - 0x790)
// Class ShooterGame.SpawnMapWidget
class USpawnMapWidget : public UCustomCanvasWidget
{
public:
	class UMaterialInstance*                     MI;                                                // 0x790(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDisableMapDrawing;                                // 0x798(0x1)(BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDisableMarkersAndSpawnPoints;                     // 0x799(0x1)(BlueprintVisible, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4807[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  FogOfWarTextureParameterName;                      // 0x79C(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TimeToUpdateTooltipForEachSpawnPoint;              // 0x7A4(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SpawnPointAreaToMapAreaPercentage;                 // 0x7A8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4808[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                SpawnPointUITemplate;                              // 0x7B0(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              Map_DynamicMI;                                     // 0x7B8(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    RegionMarkerMI;                                    // 0x7C0(0x8)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             RegionMarkerSize;                                  // 0x7C8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4809[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	class UUI_Spawn*                             SpawnUI;                                           // 0x808(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference)

	static class UClass* StaticClass();
	static class USpawnMapWidget* GetDefaultObj();

};

// 0x10 (0x1C40 - 0x1C30)
// Class ShooterGame.SpherePostProcessVolume
class ASpherePostProcessVolume : public APostProcessVolume
{
public:
	float                                        SphereVolumeRadius;                                // 0x1C30(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_480A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USphereComponent*                      SphereComponent;                                   // 0x1C38(0x8)(Net, Parm, ZeroConstructor, DisableEditOnInstance, GlobalConfig)

	static class UClass* StaticClass();
	static class ASpherePostProcessVolume* GetDefaultObj();

};

// 0x0 (0x518 - 0x518)
// Class ShooterGame.FoliageInclusionVolume
class AFoliageInclusionVolume : public AVolume
{
public:

	static class UClass* StaticClass();
	static class AFoliageInclusionVolume* GetDefaultObj();

};

// 0x8 (0x4D0 - 0x4C8)
// Class ShooterGame.HierarchicalInstancedStaticMeshActor
class AHierarchicalInstancedStaticMeshActor : public AActor
{
public:
	class UHierarchicalInstancedStaticMeshComponent* InstancedStaticMeshComponent;                      // 0x4C8(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)

	static class UClass* StaticClass();
	static class AHierarchicalInstancedStaticMeshActor* GetDefaultObj();

};

// 0x4B8 (0xC10 - 0x758)
// Class ShooterGame.StatsPanelWidget
class UStatsPanelWidget : public UPrimalUI
{
public:
	class FName                                  MultiUseButton1Name;                               // 0x758(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MultiUseButton2Name;                               // 0x760(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MultiUseButton3Name;                               // 0x768(0x8)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MultiUseButton4Name;                               // 0x770(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MultiUseButton5Name;                               // 0x778(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MultiUseButton6Name;                               // 0x780(0x8)(ExportObject, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCustomButtonWidgetStyle              DefaultMultiuseButtonExtendedStyle;                // 0x788(0x48)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FButtonStyle                          DefaultMultiuseButtonStyle;                        // 0x7D0(0x3F0)(ExportObject, Net, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_480B[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStatsPanelWidget* GetDefaultObj();

};

// 0x360 (0xF70 - 0xC10)
// Class ShooterGame.StatsPanelWidget_Character
class UStatsPanelWidget_Character : public UStatsPanelWidget
{
public:
	class FName                                  PlayerStatusBoxName;                               // 0xC10(0x8)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ExperienceBoxName;                                 // 0xC18(0x8)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  UpgradesBoxName;                                   // 0xC20(0x8)(OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  EquipmentDataListPanelName;                        // 0xC28(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DisabledEquipmentPanelName;                        // 0xC30(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  GenderSwitcherName;                                // 0xC38(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  NameLabelName;                                     // 0xC40(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LevelLabelName;                                    // 0xC48(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TribeLabelName;                                    // 0xC50(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  BiomeRegionLabelName;                              // 0xC58(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SpawnRegionLabelName;                              // 0xC60(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TameLimitLabelName;                                // 0xC68(0x8)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ArmorLabelName;                                    // 0xC70(0x8)(ConstParm, Net, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  HypothermalInsulationLabelName;                    // 0xC78(0x8)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  HyperthermalInsulationLabelName;                   // 0xC80(0x8)(Edit, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  HypothermalInsulationNameLabelName;                // 0xC88(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  HyperthermalInsulationNameLabelName;               // 0xC90(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ExperienceBarName;                                 // 0xC98(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ExperienceLabelName;                               // 0xCA0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  StatWidgetNames[0xC];                              // 0xCA8(0x60)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ImprintingStatWidgetName;                          // 0xD08(0x8)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ShowAncestorsButtonName;                           // 0xD10(0x8)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  NumUpgradePointsAvailableLabelName;                // 0xD18(0x8)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  HyperthermalInsulationBoxName;                     // 0xD20(0x8)(ConstParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  HypothermalInsulationBoxName;                      // 0xD28(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TameLimitBoxName;                                  // 0xD30(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  StatDayValueTextBlockName;                         // 0xD38(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  StatTimeValueTextBlockName;                        // 0xD40(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  StatTmpValueTextBlockName;                         // 0xD48(0x8)(EditFixedSize, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  StatWindValueTextBlockName;                        // 0xD50(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_480C[0x1E8];                                   // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsOnBuffTab;                                      // 0xF40(0x1)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_480D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalCharacterStatusComponent*       StatusCharacter;                                   // 0xF48(0x8)(ConstParm, Net, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_480E[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                PanelBuffTemplate;                                 // 0xF60(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_480F[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStatsPanelWidget_Character* GetDefaultObj();

	bool SwitchTabStatsBuff();
	bool OnSwitchTabStatsBuffBP();
};

// 0x80 (0xC90 - 0xC10)
// Class ShooterGame.StatsPanelWidget_Obelisk
class UStatsPanelWidget_Obelisk : public UStatsPanelWidget
{
public:
	class FName                                  NameLabelName;                                     // 0xC10(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DescriptionLabelName;                              // 0xC18(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  UploadCharacterDataButtonName;                     // 0xC20(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TravelToAnotherServerButtonName;                   // 0xC28(0x8)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RefreshArkButtonName;                              // 0xC30(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ArkStorageStatName;                                // 0xC38(0x8)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ArkDinoStatName;                                   // 0xC40(0x8)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  StorageStatName;                                   // 0xC48(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4810[0x40];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStatsPanelWidget_Obelisk* GetDefaultObj();

};

// 0xB0 (0xCC0 - 0xC10)
// Class ShooterGame.StatsPanelWidget_Structure
class UStatsPanelWidget_Structure : public UStatsPanelWidget
{
public:
	class FName                                  EquipmentDataListPanelName;                        // 0xC10(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DisabledEquipmentPanelName;                        // 0xC18(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  StructureNameLabelName;                            // 0xC20(0x8)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  OwnerLabelName;                                    // 0xC28(0x8)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DescriptionLabelName;                              // 0xC30(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  HealthStatName;                                    // 0xC38(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  StorageStatName;                                   // 0xC40(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  WeightStatName;                                    // 0xC48(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4811[0x70];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStatsPanelWidget_Structure* GetDefaultObj();

};

// 0x98 (0x3C8 - 0x330)
// Class ShooterGame.StatWidget
class UStatWidget : public UPrimalUserWidget
{
public:
	class FText                                  StatName;                                          // 0x330(0x18)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            StatIcon;                                          // 0x348(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4812[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	class FName                                  StatTextBlockName;                                 // 0x364(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  StatValueBlockName;                                // 0x36C(0x8)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  StatImageName;                                     // 0x374(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  StatBarName;                                       // 0x37C(0x8)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  StatButtonName;                                    // 0x384(0x8)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4813[0x24];                                    // Fixing Size After Last Property  > TateDumper <
	class UButton*                               StatUpgradeButton;                                 // 0x3B0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UWidgetSwitcher*                       PulsatingSwitcher;                                 // 0x3B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4814[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStatWidget* GetDefaultObj();

	class UWidget* ClickedButton();
};

// 0x110 (0x8A0 - 0x790)
// Class ShooterGame.StoreItemWidget
class UStoreItemWidget : public UCustomCanvasWidget
{
public:
	float                                        ItemPrice;                                         // 0x790(0x4)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4815[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ItemName;                                          // 0x798(0x10)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4816[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSlateBrush                           ItemIcon;                                          // 0x7B0(0xD0)(Edit, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSlateColor                           ForegroundColor;                                   // 0x880(0x14)(BlueprintVisible, Net, ReturnParm, Config, DisableEditOnInstance)
	float                                        PriceOffset;                                       // 0x894(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        NameOffset;                                        // 0x898(0x4)(ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4817[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStoreItemWidget* GetDefaultObj();

};

// 0xE8 (0x1A0 - 0xB8)
// Class ShooterGame.StructurePaintingComponent
class UStructurePaintingComponent : public UActorComponent
{
public:
	uint8                                        Pad_4819[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        PaintingSizeX;                                     // 0xC8(0x4)(Edit, ConstParm, Net, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        PaintingSizeY;                                     // 0xCC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FColor>                        ColorTable;                                        // 0xD0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        PaintingTextureUVIndex;                            // 0xE0(0x4)(Edit, ExportObject, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        PaintingRevision;                                  // 0xE4(0x4)(Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        UniquePaintingId;                                  // 0xE8(0x4)(Edit, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        Pad_481A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              PreviewCameraRotation;                             // 0xF0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PreviewCameraPivotOffset;                          // 0x108(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PreviewCameraDistanceScaleFactor;                  // 0x120(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PreviewCameraDefaultZoomMultiplier;                // 0x124(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PreviewCameraMaxZoomMultiplier;                    // 0x128(0x4)(Edit, ConstParm, ExportObject, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMultiplicativeBlending : 1;                       // Mask: 0x1, PropSize: 0x10x12C(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMirroredTexCoordU : 1;                            // Mask: 0x2, PropSize: 0x10x12C(0x1)(Edit, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsExtraDinoSaddleCanvas : 1;                      // Mask: 0x4, PropSize: 0x10x12C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bApplyRootBoneTranslationsWhenPainting : 1;        // Mask: 0x8, PropSize: 0x10x12C(0x1)(ExportObject, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSaveToTribeFlagPainting : 1;                      // Mask: 0x10, PropSize: 0x10x12C(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3D5 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_481B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  PaintingTextureParamName;                          // 0x130(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       LastStreamRequestTime;                             // 0x138(0x8)(ConstParm, Net, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_481C[0x40];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnPaintingTextureSet;                              // 0x180(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ForceReplicateToServer;                            // 0x190(0x1)(Edit, ConstParm, ExportObject, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_481D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                TransparencyReplacedWithBackgroundColor;           // 0x194(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_481E[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStructurePaintingComponent* GetDefaultObj();

	void UnloadExtraPaintingComponent();
	void TryPaintExtraPaintingComponent();
	class FString SaveLocalPainting(class FString* PaintingClass, bool* OverrideExisting, bool* ReturnValue);
	void OnRep_PaintingRevision();
	int32 OnRep_PaintingId();
	void HasPaintingTexture(bool* ReturnValue);
	class AShooterPlayerController* ClientPaint(const TArray<struct FPaintItem>& Paints);
};

// 0x40 (0x558 - 0x518)
// Class ShooterGame.StructurePreventionZoneVolume
class AStructurePreventionZoneVolume : public AVolume
{
public:
	uint8                                        bOnlyPreventInPvE : 1;                             // Mask: 0x1, PropSize: 0x10x518(0x1)(Edit, ConstParm, Net, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bOnlyPreventInDedicated : 1;                       // Mask: 0x2, PropSize: 0x10x518(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreventAllStructures : 1;                         // Mask: 0x4, PropSize: 0x10x518(0x1)(ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDisabled : 1;                                     // Mask: 0x8, PropSize: 0x10x518(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3D6 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4820[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class APrimalStructure>> OnlyAllowStructuresOfType;                         // 0x520(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreventionVolumeForcePreventFlyers : 1;           // Mask: 0x1, PropSize: 0x10x530(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreventionVolumePreventsFlyers : 1;               // Mask: 0x2, PropSize: 0x10x530(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreventionVolumeForceAllowFlyers : 1;             // Mask: 0x4, PropSize: 0x10x530(0x1)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreventStructureDamageIncrease : 1;               // Mask: 0x8, PropSize: 0x10x530(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bStructurePreventionOnly : 1;                      // Mask: 0x10, PropSize: 0x10x530(0x1)(ExportObject, Net, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bOptionallyEnabled : 1;                            // Mask: 0x20, PropSize: 0x10x530(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceEnabledWhenAllowCaveBuildingPVPIsFalse : 1;  // Mask: 0x40, PropSize: 0x10x530(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceOnGenesis : 1;                               // Mask: 0x80, PropSize: 0x10x530(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsMissionZone : 1;                                // Mask: 0x1, PropSize: 0x10x531(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowUndergroundCheck : 1;                   // Mask: 0x2, PropSize: 0x10x531(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3D7 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4821[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        StructureDamageMultiplier;                         // 0x534(0x4)(BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	TArray<class FName>                          ForcePreventStructuresWithTheseTags;               // 0x538(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AShooterWeapon>>  PreventUsingWeapons;                               // 0x548(0x10)(Edit, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AStructurePreventionZoneVolume* GetDefaultObj();

	struct FVector BPIsWithinAnyStructurePreventionVolume(class UWorld* ForWorld, bool bCheckDisabled, bool bIsForDamageCheck, bool bIgnoreOptionalVolumes, class AStructurePreventionZoneVolume** ReturnValue);
};

// 0x60 (0x7B8 - 0x758)
// Class ShooterGame.StructureStatWidget
class UStructureStatWidget : public UPrimalUI
{
public:
	class FText                                  StatName;                                          // 0x758(0x18)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            StatIcon;                                          // 0x770(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  StatTextBlockName;                                 // 0x778(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  StatValueBlockName;                                // 0x780(0x8)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  StatImageName;                                     // 0x788(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  StatBarName;                                       // 0x790(0x8)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4822[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStructureStatWidget* GetDefaultObj();

};

// 0x48 (0x510 - 0x4C8)
// Class ShooterGame.SupplyCrateSpawningSettings
class ASupplyCrateSpawningSettings : public AActor
{
public:
	TArray<struct FSupplyCrateSpawnEntry>        LinkedSupplyCrateEntries;                          // 0x4C8(0x10)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseSpawnPointWeights : 1;                         // Mask: 0x1, PropSize: 0x10x4D8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3D8 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4823[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxNumCrates;                                      // 0x4DC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DelayBeforeFirstCrate;                             // 0x4E0(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxDelayBeforeFirstCrate;                          // 0x4E4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ZoneVolumeMaxNumberOfNPCBuffer;                    // 0x4E8(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IntervalBetweenCrateSpawns;                        // 0x4EC(0x4)(Net, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxIntervalBetweenCrateSpawns;                     // 0x4F0(0x4)(BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IntervalBetweenMaxedCrateSpawns;                   // 0x4F4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxIntervalBetweenMaxedCrateSpawns;                // 0x4F8(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinCrateDistanceFromPlayer;                        // 0x4FC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinCrateDistanceFromStructure;                     // 0x500(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        NoValidSpawnReCheckInterval;                       // 0x504(0x4)(EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinTimeBetweenCrateSpawnsAtSamePoint;              // 0x508(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4824[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ASupplyCrateSpawningSettings* GetDefaultObj();

};

// 0xA8 (0x5C0 - 0x518)
// Class ShooterGame.SupplyCrateSpawningVolume
class ASupplyCrateSpawningVolume : public AVolume
{
public:
	TArray<struct FSupplyCrateSpawnEntry>        LinkedSupplyCrateEntries;                          // 0x518(0x10)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4825[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSupplyCrateSpawnPointEntry>   LinkedSpawnPointEntries;                           // 0x538(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsEnabled : 1;                                    // Mask: 0x1, PropSize: 0x10x548(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, EditConst)
	uint8                                        bUseSpawnPointWeights : 1;                         // Mask: 0x2, PropSize: 0x10x548(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDoSpawnCrateOnTopOfStructures : 1;                // Mask: 0x4, PropSize: 0x10x548(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForcePreventCrateOnTopOfStructures : 1;           // Mask: 0x8, PropSize: 0x10x548(0x1)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bReallyUseCrateRequiresLoadedLevel : 1;            // Mask: 0x10, PropSize: 0x10x548(0x1)(Net, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3D9 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4826[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxNumCrates;                                      // 0x54C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DelayBeforeFirstCrate;                             // 0x550(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxDelayBeforeFirstCrate;                          // 0x554(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ZoneVolumeMaxNumberOfNPCBuffer;                    // 0x558(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IntervalBetweenCrateSpawns;                        // 0x55C(0x4)(Net, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxIntervalBetweenCrateSpawns;                     // 0x560(0x4)(BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IntervalBetweenMaxedCrateSpawns;                   // 0x564(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxIntervalBetweenMaxedCrateSpawns;                // 0x568(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SP_IntervalBetweenCrateSpawns;                     // 0x56C(0x4)(BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SP_MaxIntervalBetweenCrateSpawns;                  // 0x570(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SP_IntervalBetweenMaxedCrateSpawns;                // 0x574(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SP_MaxIntervalBetweenMaxedCrateSpawns;             // 0x578(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SP_NoValidSpawnRecheckInterval;                    // 0x57C(0x4)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SP_DelayBeforeFirstCrate;                          // 0x580(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SP_MaxDelayBeforeFirstCrate;                       // 0x584(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinCrateDistanceFromPlayer;                        // 0x588(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinCrateDistanceFromStructure;                     // 0x58C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        NoValidSpawnReCheckInterval;                       // 0x590(0x4)(EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinTimeBetweenCrateSpawnsAtSamePoint;              // 0x594(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinDistanceFromOtherCrate;                         // 0x598(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CrateSpawningRequiresLoadedDataLayer;              // 0x59C(0x8)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bForceRandomSupplyCratePoints;                     // 0x5A4(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4827[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class APrimalStructureItemContainer_SupplyCrate*> MyCrates;                                          // 0x5A8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4828[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ASupplyCrateSpawningVolume* GetDefaultObj();

	void SpawnCratesFromAllVolumes(class UWorld** TheWorld);
	void SpawnCratesFromAllPoints();
	bool SetSpawnEnabled();
	void CheckForSupplyCrateStart();
	void CheckCrateSpawn();
};

// 0x0 (0x60 - 0x60)
// Class ShooterGame.SwitchMountedDLCManager
class USwitchMountedDLCManager : public UMountedDLCManager
{
public:

	static class UClass* StaticClass();
	static class USwitchMountedDLCManager* GetDefaultObj();

};

// 0x168 (0x8C0 - 0x758)
// Class ShooterGame.TamingListEntryWidget
class UTamingListEntryWidget : public UBaseSelectableButtonWidget
{
public:
	class FString                                ItemLabelName;                                     // 0x758(0x10)(BlueprintVisible, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          NameLabelColor_Default;                            // 0x768(0x10)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          NameLabelColor_Female;                             // 0x778(0x10)(EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          NameLabelColor_Male;                               // 0x788(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          BackgroundColor_Default;                           // 0x798(0x10)(ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          BackgroundColor_Tracked;                           // 0x7A8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          BackgroundColor_Completed;                         // 0x7B8(0x10)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          SeparatorColor;                                    // 0x7C8(0x10)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            DistanceIconTexture;                               // 0x7D8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            CompletedIconTexture;                              // 0x7E0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            TooltipBackgroundTexture;                          // 0x7E8(0x8)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            GenderIcon_Male;                                   // 0x7F0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GenderIcon_Female;                                 // 0x7F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4829[0xC0];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTamingListEntryWidget* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.TargetableInterface
class ITargetableInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ITargetableInterface* GetDefaultObj();

	void ToUObject(class UObject** ReturnValue);
};

// 0x10 (0x4D8 - 0x4C8)
// Class ShooterGame.TargetArea
class ATargetArea : public AActor
{
public:
	float                                        Radius;                                            // 0x4C8(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	uint8                                        Pad_482A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USphereComponent*                      MySphereComponent;                                 // 0x4D0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ATargetArea* GetDefaultObj();

};

// 0x50 (0x408 - 0x3B8)
// Class ShooterGame.TargetingInfoToolTipWidget
class UTargetingInfoToolTipWidget : public UToolTipWidget
{
public:
	uint8                                        Pad_482B[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTargetingInfoToolTipWidget* GetDefaultObj();

};

// 0x10 (0x340 - 0x330)
// Class ShooterGame.TestItemWidget
class UTestItemWidget : public UPrimalUserWidget
{
public:
	class FString                                ItemLabelName;                                     // 0x330(0x10)(BlueprintVisible, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UTestItemWidget* GetDefaultObj();

};

// 0x40 (0xF8 - 0xB8)
// Class ShooterGame.TickingHelperComponent
class UTickingHelperComponent : public UActorComponent
{
public:
	struct FTimeRange                            ThrottledTickTimeRange;                            // 0xB8(0x8)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	enum class ETickingGroup                     InitWithTickGroup;                                 // 0xC0(0x1)(Edit, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUsePerFrameTickEvents;                            // 0xC1(0x1)(Edit, BlueprintVisible, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseThrottledTickEvents;                           // 0xC2(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_482C[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnPerFrameTickEvent;                               // 0xC8(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnThrottledTickEvent;                              // 0xD8(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_482D[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTickingHelperComponent* GetDefaultObj();

	void SetComponentTickGroup(enum class ETickingGroup NewTickGroup);
	float OnThrottledTick();
};

// 0x128 (0x640 - 0x518)
// Class ShooterGame.TogglePainVolume
class ATogglePainVolume : public AVolume
{
public:
	uint8                                        Pad_482E[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bEnabled;                                          // 0x568(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Transient, EditConst, GlobalConfig)
	uint8                                        Pad_482F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class UObject>>         ActorClassesToExclude;                             // 0x570(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UObject>>         ActorClassesToInclude;                             // 0x580(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class AEmitter*>                      ToggleEmitters;                                    // 0x590(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        StructureDamageOverlapPoints;                      // 0x5A0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       SavedStructureDamageOverlapPoints;                 // 0x5B0(0x10)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StructureDamageOverlapRadius;                      // 0x5C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4830[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bPainCausing : 1;                                  // Mask: 0x1, PropSize: 0x10x5D0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3DA : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4831[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DamagePerSec;                                      // 0x5D4(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StructureDamagePerSec;                             // 0x5D8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4832[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DamageType;                                        // 0x5E0(0x8)(ExportObject, Parm, OutParm, Transient, GlobalConfig)
	class UClass*                                StructureDamageType;                               // 0x5E8(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        PainInterval;                                      // 0x5F0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEntryPain : 1;                                    // Mask: 0x1, PropSize: 0x10x5F4(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPainWalkingOnly : 1;                              // Mask: 0x2, PropSize: 0x10x5F4(0x1)(Edit, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseBeginOverlapEvent : 1;                         // Mask: 0x4, PropSize: 0x10x5F4(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseEndOverlapEvent : 1;                           // Mask: 0x8, PropSize: 0x10x5F4(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseCausedPainEvent : 1;                           // Mask: 0x10, PropSize: 0x10x5F4(0x1)(Edit, ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreWildDinos : 1;                              // Mask: 0x20, PropSize: 0x10x5F4(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bTriggerUndermeshDetection : 1;                    // Mask: 0x40, PropSize: 0x10x5F4(0x1)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3DB : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4833[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class AController*                           DamageInstigator;                                  // 0x5F8(0x8)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            BeginOverlapEvent;                                 // 0x600(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            EndOverlapEvent;                                   // 0x610(0x10)(BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            CausedPainEvent;                                   // 0x620(0x10)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DelayTogglePainActive;                             // 0x630(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4834[0xC];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ATogglePainVolume* GetDefaultObj();

	bool SetPainVolumeEnabled();
	bool OnInterpToggle();
	class AActor* OnEndOverlap(class AActor** Actor);
	class AActor* OnBeginOverlap(class AActor** Actor);
	void GetOverlappedActors(const TArray<class AActor*>& OutActors);
	void GetOverlappedActorNum(int32* ReturnValue);
};

// 0x18 (0x348 - 0x330)
// Class ShooterGame.ToolTipWidgetPrimalStructureModuleItemsToDisplay
class UToolTipWidgetPrimalStructureModuleItemsToDisplay : public UPrimalUserWidget
{
public:
	class UClass*                                DisplayItemListEntryTemplate;                      // 0x330(0x8)(Edit, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4835[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UToolTipWidgetPrimalStructureModuleItemsToDisplay* GetDefaultObj();

};

// 0x10 (0x340 - 0x330)
// Class ShooterGame.ToolTipWidgetPrimalStructureModuleItemsToDisplayListItem
class UToolTipWidgetPrimalStructureModuleItemsToDisplayListItem : public UPrimalUserWidget
{
public:
	uint8                                        Pad_4836[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UToolTipWidgetPrimalStructureModuleItemsToDisplayListItem* GetDefaultObj();

};

// 0x9D8 (0x1130 - 0x758)
// Class ShooterGame.TrackedDinoListEntryWidget
class UTrackedDinoListEntryWidget : public UBaseSelectableButtonWidget
{
public:
	class FString                                ItemLabelName;                                     // 0x758(0x10)(BlueprintVisible, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          NameLabelColor_Default;                            // 0x768(0x10)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          NameLabelColor_Female;                             // 0x778(0x10)(EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          NameLabelColor_Male;                               // 0x788(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          BackgroundColor_Default;                           // 0x798(0x10)(ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          BackgroundColor_Tracked;                           // 0x7A8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          BackgroundColor_Completed;                         // 0x7B8(0x10)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          SeparatorColor;                                    // 0x7C8(0x10)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            DistanceIconTexture;                               // 0x7D8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            CompletedIconTexture;                              // 0x7E0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            TooltipBackgroundTexture;                          // 0x7E8(0x8)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            GenderIcon_Male;                                   // 0x7F0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            GenderIcon_Female;                                 // 0x7F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PlayerIcon;                                        // 0x800(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4837[0x138];                                   // Fixing Size After Last Property  > TateDumper <
	struct FButtonStyle                          DefaultButtonStyle;                                // 0x940(0x3F0)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FButtonStyle                          TrackedButtonStyle;                                // 0xD30(0x3F0)(Edit, Net, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        WidgetIndex;                                       // 0x1120(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4838[0xC];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTrackedDinoListEntryWidget* GetDefaultObj();

	void RecentlyUpdatedInfoTimerEnd();
	void OnPOIOptButtonPressed();
	void OnPOIOptButton_SelectedPressed();
	void OnFavoriteButtonPressed();
	void OnFavoriteButton_SelectedPressed();
	bool BPOnFavoriteButtonPressed(bool* Handled);
};

// 0xB0 (0x808 - 0x758)
// Class ShooterGame.TrackingItemUI
class UTrackingItemUI : public UPrimalUI
{
public:
	uint8                                        Pad_4839[0x98];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        TrackingResourcesItem;                             // 0x7F0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_483A[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTrackingItemUI* GetDefaultObj();

	void UpdateTrackingInfoBP();
	void StopTrackItem(class UClass* ItemClass);
	int32 RemoveInfoTrackIndex();
};

// 0x80 (0x7D8 - 0x758)
// Class ShooterGame.TradeItemButtonWidget
class UTradeItemButtonWidget : public UBaseSelectableButtonWidget
{
public:
	class FName                                  ItemCostTextBlockName;                             // 0x758(0x8)(Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ItemQuantityTextBlockName;                         // 0x760(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ItemImageName;                                     // 0x768(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ItemWeightTextBlockName;                           // 0x770(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          CanAffordPriceText;                                // 0x778(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          TooExpensivePriceText;                             // 0x788(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSelectOnClicked : 1;                              // Mask: 0x1, PropSize: 0x10x798(0x1)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_483B[0x3F];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTradeItemButtonWidget* GetDefaultObj();

};

// 0x18 (0x770 - 0x758)
// Class ShooterGame.TribeManagerListButton
class UTribeManagerListButton : public UBaseSelectableButtonWidget
{
public:
	uint8                                        bSelectOnClicked : 1;                              // Mask: 0x1, PropSize: 0x10x758(0x1)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_483C[0x17];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTribeManagerListButton* GetDefaultObj();

};

// 0x40 (0x798 - 0x758)
// Class ShooterGame.TribeMemberButtonWidget
class UTribeMemberButtonWidget : public UBaseSelectableButtonWidget
{
public:
	uint8                                        bSelectOnClicked : 1;                              // Mask: 0x1, PropSize: 0x10x758(0x1)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_483D[0x3F];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTribeMemberButtonWidget* GetDefaultObj();

};

// 0x30 (0x788 - 0x758)
// Class ShooterGame.TribeWarButtonWidget
class UTribeWarButtonWidget : public UBaseSelectableButtonWidget
{
public:
	uint8                                        bSelectOnClicked : 1;                              // Mask: 0x1, PropSize: 0x10x758(0x1)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_483E[0x2F];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTribeWarButtonWidget* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class ShooterGame.TriggerEffectLibrary
class UTriggerEffectLibrary : public UDataAsset
{
public:
	TArray<struct FTriggerEffectLibraryEntry>    Library;                                           // 0x30(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UTriggerEffectLibrary* GetDefaultObj();

};

// 0x10 (0x768 - 0x758)
// Class ShooterGame.UIMainModShop
class UUIMainModShop : public UPrimalUI
{
public:
	uint8                                        Pad_483F[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         ModUninstallDialogOpen;                            // 0x760(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4840[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUIMainModShop* GetDefaultObj();

	void OnUserAuthenticated();
	void IsModInstallPageOpen(bool* ReturnValue);
	bool GamepadChangeTab();
	void CloseModInstallPage();
};

// 0x498 (0xBF0 - 0x758)
// Class ShooterGame.UI_AdminMangment
class UUI_AdminMangment : public UPrimalUI
{
public:
	uint8                                        Pad_4845[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	class FName                                  FPSValueName;                                      // 0x7B0(0x8)(BlueprintReadOnly, Net, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  NumConnectedName;                                  // 0x7B8(0x8)(Edit, ConstParm, BlueprintVisible, Net, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  NumBannedName;                                     // 0x7C0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  NumWhiteListedName;                                // 0x7C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MaxStructuresInRangeName;                          // 0x7D0(0x8)(ExportObject, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RemoveFromWhiteListButtonName;                     // 0x7D8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CancelCheatCommandButtonName;                      // 0x7E0(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ExcuteCheatCommandButtonName;                      // 0x7E8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CopyPlayerIDCheatCommandButtonName;                // 0x7F0(0x8)(ExportObject, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CopySteamIDCheatCommandButtonName;                 // 0x7F8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CheatsScrollBoxName;                               // 0x800(0x8)(Edit, ConstParm, ExportObject, Net, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                CheatSlotButtonTemplate;                           // 0x808(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4846[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class FName                                  CancelManualBanButtonName;                         // 0x820(0x8)(BlueprintReadOnly, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ExcuteManualBanButtonName;                         // 0x828(0x8)(ConstParm, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CancelManualwhiteListedButtonName;                 // 0x830(0x8)(BlueprintReadOnly, Net, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ExcuteManualwhiteListedButtonName;                 // 0x838(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  KickButtonName;                                    // 0x840(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RefreshButtonName;                                 // 0x848(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ParamtersPanelName;                                // 0x850(0x8)(ConstParm, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ManualBanPanelName;                                // 0x858(0x8)(ExportObject, BlueprintReadOnly, Net, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ManualWhiteListedPaneName;                         // 0x860(0x8)(ConstParm, ExportObject, Net, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ConnectedPlayerPanelName;                          // 0x868(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RefreshingConnectedPlayerPanelName;                // 0x870(0x8)(Edit, ConstParm, ExportObject, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  BannedPlayerPanelName;                             // 0x878(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RefreshingBannedPlayerPanelName;                   // 0x880(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  WhiteListedPlayerPanelName;                        // 0x888(0x8)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RefreshingWhiteListedPlayerPanelName;              // 0x890(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ParmterTextFieldName;                              // 0x898(0x8)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ChetFunctionSelectedImageName;                     // 0x8A0(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DifficultyOffsetName;                              // 0x8A8(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  GlobalVoiceChatName;                               // 0x8B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ProximityChatName;                                 // 0x8B8(0x8)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  NoTributeDownloadsName;                            // 0x8C0(0x8)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AllowThirdPersonPlayerName;                        // 0x8C8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AlwaysNotifyPlayerLeftName;                        // 0x8D0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DontAlwaysNotifyPlayerJoinedName;                  // 0x8D8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AddToWhiteListButtonName;                          // 0x8E0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ManualAddToWhiteListButtonName;                    // 0x8E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ServerHardcoreName;                                // 0x8F0(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ServerPVEName;                                     // 0x8F8(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ServerCrosshairName;                               // 0x900(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ServerForceNoHUDName;                              // 0x908(0x8)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FunctionDiscriptionName;                           // 0x910(0x8)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ShowMapPlayerLocationName;                         // 0x918(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ServerPasswordName;                                // 0x920(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ServerAdminPasswordName;                           // 0x928(0x8)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PositionName;                                      // 0x930(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MessgaeOfTheDayName;                               // 0x938(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SetMessgaeOfTheDayName;                            // 0x940(0x8)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AllConnectedPlayerScrollBoxName;                   // 0x948(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AllBannedPlayerScrollBoxName;                      // 0x950(0x8)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AllWhiteListedPlayerScrollBoxName;                 // 0x958(0x8)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ServerScrollBoxName;                               // 0x960(0x8)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                SlotButtonTemplate;                                // 0x968(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ServerInfoButtonTemplate;                          // 0x970(0x8)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  BanButtonName;                                     // 0x978(0x8)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ManualBanButtonName;                               // 0x980(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  EnterPramterName;                                  // 0x988(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  UnBanButtonName;                                   // 0x990(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CloseButtonName;                                   // 0x998(0x8)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DirectMessageTextFieldName;                        // 0x9A0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DirectMessageButtonName;                           // 0x9A8(0x8)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ErrorBlockName;                                    // 0x9B0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ErrorBlockManualBanName;                           // 0x9B8(0x8)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ErrorBlockManualWhiteListedName;                   // 0x9C0(0x8)(Edit, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ErrorBlockMessageOfTheDayName;                     // 0x9C8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ManualBanningSteamIDTextFieldName;                 // 0x9D0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ManualWhiteListedSteamIDTextFieldName;             // 0x9D8(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              OwnerPlayerController;                             // 0x9E0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CustomGameUIButtonName;                            // 0x9E8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UServerInfoInfoEntryButton*            FPSEntry;                                          // 0x9F0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4847[0x40];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxDirectMessageChars;                             // 0xA38(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxSteamIDChars;                                   // 0xA3C(0x4)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxMessageofthedayChars;                           // 0xA40(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4848[0x1AC];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_AdminMangment* GetDefaultObj();

	class FText OnTextCommittedWhiteListed(enum class ETextCommit CommitMethod);
	class FText OnTextCommittedMessageOfTheDay(enum class ETextCommit CommitMethod);
	class FText OnTextCommittedManualBan(enum class ETextCommit CommitMethod);
	class FText OnTextCommitted(enum class ETextCommit CommitMethod);
	class FText OnTextChangedMessageOfTheDay();
	class FText OnTextChangedManulaBan();
	class FText OnTextChangedManualWhiteLised();
	class FText OnTextChanged();
};

// 0x90 (0x7E8 - 0x758)
// Class ShooterGame.UI_AllPlayersList
class UUI_AllPlayersList : public UPrimalUI
{
public:
	class FName                                  CloseButtonName;                                   // 0x758(0x8)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AllPlayersListBoxName;                             // 0x760(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                SlotButtonTemplate;                                // 0x768(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4849[0x78];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_AllPlayersList* GetDefaultObj();

	class FText OnTribeNameFilterChanged();
	class FText OnPlayerNameFilterChanged();
};

// 0xE0 (0x838 - 0x758)
// Class ShooterGame.UI_ChatBox
class UUI_ChatBox : public UPrimalUI
{
public:
	class UClass*                                ChatMessageUITemplate;                             // 0x758(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ServerBroadCastMessageUITemplate;                  // 0x760(0x8)(BlueprintVisible, ExportObject, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ChatBoxName;                                       // 0x768(0x10)(Edit, BlueprintVisible, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                EditTextBoxName;                                   // 0x778(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                SendingModelLabelName;                             // 0x788(0x10)(BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                InputBoxName;                                      // 0x798(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DisplayModeLabelName;                              // 0x7A8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CanavasPanelName;                                  // 0x7B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ServerSenderText;                                  // 0x7B8(0x10)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ChatHistoryLimit;                                  // 0x7C8(0x4)(Edit, ConstParm, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_484B[0x6C];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_ChatBox* GetDefaultObj();

	void SwitchChatMode();
	void OnChatUITapped();
	class FText HandleChatTextCommitted(enum class ETextCommit CommitMethod);
	class FText HandleChatTextChanged();
};

// 0x78 (0x7D0 - 0x758)
// Class ShooterGame.UI_ChatMessage
class UUI_ChatMessage : public UPrimalUI
{
public:
	class FString                                ChatBlockName;                                     // 0x758(0x10)(Edit, ExportObject, Net, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_484C[0x68];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_ChatMessage* GetDefaultObj();

};

// 0x8C8 (0x1020 - 0x758)
// Class ShooterGame.UI_ListSessions
class UUI_ListSessions : public UPrimalUI
{
public:
	struct FSlateColor                           SearchingColor;                                    // 0x758(0x14)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FSlateColor                           SearchingCompleteColor;                            // 0x76C(0x14)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  JoinButtonName;                                    // 0x780(0x8)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RefreshButtonName;                                 // 0x788(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FavoritesButtonName;                               // 0x790(0x8)(ExportObject, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FavoritesButtonLabelName;                          // 0x798(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CancelButtonName;                                  // 0x7A0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RentYourOwnServerButtonName;                       // 0x7A8(0x8)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MyScrollBoxName;                                   // 0x7B0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SearchingTextBlockName;                            // 0x7B8(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SessionsPanelName;                                 // 0x7C0(0x8)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FindSessionTextFieldName;                          // 0x7C8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PasswordAcceptButtonName;                          // 0x7D0(0x8)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DarkBGName;                                        // 0x7D8(0x8)(BlueprintVisible, Net, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PasswordCancelButtonName;                          // 0x7E0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PasswordTextFieldName;                             // 0x7E8(0x8)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PasswordPanelName;                                 // 0x7F0(0x8)(Edit, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ErrorBlockName;                                    // 0x7F8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ServersCountBlockName;                             // 0x800(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ShowProtectedSessionsCheckBoxName;                 // 0x808(0x8)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ShowAvailableServersCheckBoxName;                  // 0x810(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ShowServersTypeComboBoxName;                       // 0x818(0x8)(Edit, ConstParm, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ShowPlatformSpecificServersCheckBoxName;           // 0x820(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         PlatformSpecificHidesOfficialTab;                  // 0x828(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         PlatformSpecificHidesFavoritesTab;                 // 0x829(0x1)(Edit, ConstParm, ExportObject, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4853[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  OfficialStatusLabelName;                           // 0x82C(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4854[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                SlotButtonTemplate;                                // 0x838(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                TermsAndConditionsUITemplate;                      // 0x840(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxPasswordChars;                                  // 0x848(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4855[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSlateBrush                           AscendingIcon;                                     // 0x850(0xD0)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FSlateBrush                           DescendingIcon;                                    // 0x920(0xD0)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4856[0x608];                                   // Fixing Size After Last Property  > TateDumper <
	class FString                                ChineseLaunchURL;                                  // 0xFF8(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4857[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_ListSessions* GetDefaultObj();

	void SwapSortAscendingDescending();
	void SlotButtonSelected(class UWidget* TheWidget);
	void SetupLayout();
	void SetCurrentServerSearchType(int32* ServerType);
	void RefreshSlotButtons();
	class FText OnTextCommitted(enum class ETextCommit CommitMethod);
	class FText OnTextChanged();
	enum class ESelectInfo OnSortComboBoxSelectionChanged();
	enum class ESelectInfo OnServersFilterComboBoxSelectionChanged();
	void OnServerListingClickedModPopup(bool* bNeedInit, TArray<int64>* ModIds, const class FString& ServerName, int64 ServerID);
	void OnModPopupEventReport(class UPrimalUserWidget** WithUI, int64 ServerID);
	void OnModPopupEventJoin(class UPrimalUserWidget** WithUI, int64 ServerID);
	void OnModPopupEventFavorite(class UPrimalUserWidget** WithUI, int64 ServerID);
	void OnModPopupEventBack(class UPrimalUserWidget** WithUI, int64 ServerID);
	enum class ESelectInfo OnMapComboBoxSelectionChanged();
	enum class ESelectInfo OnGameModeComboBoxSelectionChanged();
	void OnDenyTermsOfServiceDialog();
	void OnCheckBoxChecked(bool* InNewState);
	void OnAutoFavoriteChecked(bool* InNewState);
	void ForceUpdateServerTypeSelection();
	void FailedLastPlayedShortcut();
	void ChangeSortAscendingDescending(bool* Ascending);
	void BPSetupLayout();
};

// 0x10 (0x1030 - 0x1020)
// Class ShooterGame.UI_ClusterServersListSessions
class UUI_ClusterServersListSessions : public UUI_ListSessions
{
public:
	class AShooterGameSession*                   ClustersServersListGameSession;                    // 0x1020(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4858[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_ClusterServersListSessions* GetDefaultObj();

};

// 0xC0 (0x3F0 - 0x330)
// Class ShooterGame.UI_Compass
class UUI_Compass : public UPrimalUserWidget
{
public:
	uint8                                        Pad_4859[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LatitudeOrigin;                                    // 0x338(0x4)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LatitudeScale;                                     // 0x33C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LongitudeOrigin;                                   // 0x340(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        LongitudeScale;                                    // 0x344(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        CompassNorthAngle;                                 // 0x348(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CompassInterpSpeed;                                // 0x34C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SwingSpeed;                                        // 0x350(0x4)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxSwingAngle;                                     // 0x354(0x4)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              CurrentCompassAngle;                               // 0x358(0x18)(Edit, ExportObject, Net, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CurrentSwingAngle;                                 // 0x370(0x4)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CurrentSwingFactor;                                // 0x374(0x4)(ExportObject, Net, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CurrentSwingTime;                                  // 0x378(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CompassCenterParameterName;                        // 0x37C(0x8)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PreviousPawnYaw;                                   // 0x384(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    CompassMI;                                         // 0x388(0x8)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              CompassMID;                                        // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalBuff>             buffRequiredForVisibility;                         // 0x398(0x30)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LongitudeText;                                     // 0x3C8(0x8)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LatitudeText;                                      // 0x3D0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_485A[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_Compass* GetDefaultObj();

};

// 0x68 (0x7C0 - 0x758)
// Class ShooterGame.UI_ConsoleCommand
class UUI_ConsoleCommand : public UPrimalUI
{
public:
	uint8                                        Pad_485C[0x60];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ButtonTemplate;                                    // 0x7B8(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UUI_ConsoleCommand* GetDefaultObj();

	class FText OnTextCommited(enum class ETextCommit CommitMethod);
	void ButtonSelected(class UWidget* TheWidget);
};

// 0x298 (0x9F0 - 0x758)
// Class ShooterGame.UI_ConsoleDedicated
class UUI_ConsoleDedicated : public UPrimalUI
{
public:
	uint8                                        Pad_485E[0x90];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                SlotButtonTemplate;                                // 0x7E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxDirectMessageChars;                             // 0x7F0(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ExitToMenuButtonName;                              // 0x7F4(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RemoveFromWhiteListButtonName;                     // 0x7FC(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AdminUIButtonName;                                 // 0x804(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  NumWhiteListedName;                                // 0x80C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  WhiteListedPlayerPanelName;                        // 0x814(0x8)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RefreshingWhiteListedPlayerPanelName;              // 0x81C(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AddToWhiteListButtonName;                          // 0x824(0x8)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AllWhiteListedPlayerScrollBoxName;                 // 0x82C(0x8)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  BannedPlayerPanelName;                             // 0x834(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RefreshingBannedPlayerPanelName;                   // 0x83C(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AllBannedPlayerScrollBoxName;                      // 0x844(0x8)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  UnBanButtonName;                                   // 0x84C(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TextMessageEditableBoxName;                        // 0x854(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  BroadcastingVoiceTextBlockName;                    // 0x85C(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ServerNameTextBlockName;                           // 0x864(0x8)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ServerPassTextBlockName;                           // 0x86C(0x8)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  InviteFriendsButtonName;                           // 0x874(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  BanButtonName;                                     // 0x87C(0x8)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  NumConnectedName;                                  // 0x884(0x8)(Edit, ConstParm, BlueprintVisible, Net, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AllConnectedPlayerScrollBoxName;                   // 0x88C(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ConnectedPlayerPanelName;                          // 0x894(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RefreshingConnectedPlayerPanelName;                // 0x89C(0x8)(Edit, ConstParm, ExportObject, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RefreshButtonName;                                 // 0x8A4(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DirectMessageTextFieldName;                        // 0x8AC(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DirectMessageButtonName;                           // 0x8B4(0x8)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ErrorBlockName;                                    // 0x8BC(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  KickButtonName;                                    // 0x8C4(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  NumBannedName;                                     // 0x8CC(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_485F[0x11C];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_ConsoleDedicated* GetDefaultObj();

	void PlayerDoubleClicked(class UDataListEntryButton** TheButton);
	class FText OnTextChanged();
	class FText HandleTextMessageTextCommitted(enum class ETextCommit CommitMethod);
};

// 0x158 (0x8B0 - 0x758)
// Class ShooterGame.UI_Cooking
class UUI_Cooking : public UPrimalUI
{
public:
	TArray<class UClass*>                        DrinkRecipeTemplates;                              // 0x758(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        FoodRecipeTemplates;                               // 0x768(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                NoteItemTemplate;                                  // 0x778(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4860[0x70];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FColor>                        PaletteColors;                                     // 0x7F0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4861[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	class UMaterialInstanceDynamic*              ItemIconMIC;                                       // 0x858(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4862[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_Cooking* GetDefaultObj();

	void RefreshItemLists();
	void RefreshInventoryViewer();
	void OnRefreshColorRegionSlidersBP();
	void OnRedSliderValueChanged(float* SliderValue);
	class FText OnItemNameChanged();
	class FText OnItemDescriptionChanged();
	void OnGreenSliderValueChanged(float* SliderValue);
	void OnBlueSliderValueChanged(float* SliderValue);
	void MyInventoryItemDoubleClicked(class UDataListEntryButton** TheButton);
};

// 0x0 (0x758 - 0x758)
// Class ShooterGame.UI_Cosmetics
class UUI_Cosmetics : public UPrimalUI
{
public:

	static class UClass* StaticClass();
	static class UUI_Cosmetics* GetDefaultObj();

};

// 0x48 (0x7A0 - 0x758)
// Class ShooterGame.UI_CustomOverlay
class UUI_CustomOverlay : public UPrimalUI
{
public:
	class UClass*                                MouseClass;                                        // 0x758(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UUserWidget*                           MouseObject;                                       // 0x760(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         UseArrow;                                          // 0x768(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4864[0x37];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_CustomOverlay* GetDefaultObj();

	void UseCirclePointer();
	void UseArrowPointer();
	bool ShowReticule();
	void SetupMouse();
	void SetPointerScale(float Scale);
	float SetPointerColorAdd();
	bool SetMouseVisibility();
	class APlayerController* SetMousePositionFromPC();
	struct FVector2D SetMousePosition();
	float SetInnerRingScales();
	float SetArrowAlpha();
	struct FVector2D AddChildToCanvas(int32* ZOrder);
};

// 0x228 (0x990 - 0x768)
// Class ShooterGame.UI_CustomTrackedDinoList
class UUI_CustomTrackedDinoList : public UPrimalSubMenuUI
{
public:
	class UClass*                                TrackedActorListEntryTemplate;                     // 0x768(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            POI_Icon;                                          // 0x770(0x8)(ExportObject, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FilterSelectionComboBoxName;                       // 0x778(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4869[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  DinoGroupSelectionComboBoxName;                    // 0x788(0x8)(Edit, ExportObject, Net, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_486A[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  AdditionalSearchTermsTextboxName;                  // 0x798(0x8)(ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_486B[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  AdditionalSearchInputTitleName;                    // 0x7A8(0x8)(ExportObject, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_486C[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  ObtainingLatestInfoTextName;                       // 0x7B8(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_486D[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        WaypointsFilterOptionIndex;                        // 0x7C8(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        FavoritesFilterOptionIndex;                        // 0x7CC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        TeammateFilterOptionIndex;                         // 0x7D0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        AllTamesFilterOptionIndex;                         // 0x7D4(0x4)(Edit, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_486E[0x1B8];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_CustomTrackedDinoList* GetDefaultObj();

	class FText SearchTextChanged();
	void OpenToSpecificEntry(int32 SpecificCharacterID, bool* IsPlayer, bool IsFavorite, bool IsWaypoint);
	enum class ESelectInfo OnFilterSelectionComboBoxSelectionChanged();
	enum class ESelectInfo OnActorGroupSelectionComboBoxSelectionChanged();
	void MarkDinoListEntryWidgetFavorite(int32* ID, bool* IsPlayer);
	class FText AdditionalSearchTermsTextboxChanged();
};

// 0x10 (0x330 - 0x320)
// Class ShooterGame.UI_DebugSpawnMenuEntry
class UUI_DebugSpawnMenuEntry : public UUserWidget
{
public:
	class FString                                EntryName;                                         // 0x320(0x10)(ConstParm, BlueprintVisible, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UUI_DebugSpawnMenuEntry* GetDefaultObj();

};

// 0x320 (0xA78 - 0x758)
// Class ShooterGame.UI_DebugSpawnMenu
class UUI_DebugSpawnMenu : public UPrimalUI
{
public:
	bool                                         Alphabetize_Rebuild;                               // 0x758(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_486F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UTexture2D*>                    FolderIcons;                                       // 0x760(0x10)(Net, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> DinoBlueprintIDs;                                  // 0x770(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     SaddleBlueprintIDs;                                // 0x780(0x10)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     SaddleBlueprintIDs2;                               // 0x790(0x10)(ConstParm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ResourceBlueprintIDs;                              // 0x7A0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     FoodBlueprintIDs;                                  // 0x7B0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     SeedBlueprintIDs;                                  // 0x7C0(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ClothingBlueprintIDs;                              // 0x7D0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     WeaponBlueprintIDs;                                // 0x7E0(0x10)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ToolBlueprintIDs;                                  // 0x7F0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     AmmoBlueprintIDs;                                  // 0x800(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ThatchStructureBlueprintIDs;                       // 0x810(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     WoodStructureBlueprintIDs;                         // 0x820(0x10)(Edit, Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     StoneStructureBlueprintIDs;                        // 0x830(0x10)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     MetalStructureBlueprintIDs;                        // 0x840(0x10)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ElectricStructureBlueprintIDs;                     // 0x850(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     MiscStructureBlueprintIDs;                         // 0x860(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     FurnatureStructureBlueprintIDs;                    // 0x870(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     DinoEggBlueprintIDs;                               // 0x880(0x10)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     DinoFertEggBlueprintIDs;                           // 0x890(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     KibbleBlueprintIDs;                                // 0x8A0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     DyeBlueprintIDs;                                   // 0x8B0(0x10)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ArtifactBlueprintIDs;                              // 0x8C0(0x10)(Edit, Net, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     SkinBlueprintIDs;                                  // 0x8D0(0x10)(ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     TekBlueprintIDs;                                   // 0x8E0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FCheatMenuCharacterPresetItems> CharacterPresetItems;                              // 0x8F0(0x10)(BlueprintVisible, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ScorchedEarthItemBlueprints;                       // 0x900(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ScorchedEarthStructureBlueprintIDs;                // 0x910(0x10)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ScorchedEarthDinoSaddles;                          // 0x920(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> ScorchedEarthDinos;                                // 0x930(0x10)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ScorchedEarthEggBlueprintIDs;                      // 0x940(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ScorchedEarthFertEggBlueprintIDs;                  // 0x950(0x10)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     AberrationItemBlueprints;                          // 0x960(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     AberrationDinoSaddles;                             // 0x970(0x10)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ExtraAberrationDinoSaddles;                        // 0x980(0x10)(Edit, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> AberrationUniqueDinos;                             // 0x990(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> AberrantDinos;                                     // 0x9A0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     AberrantDinoSaddles;                               // 0x9B0(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> CommunityDinos;                                    // 0x9C0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     CommunityDinoSaddles;                              // 0x9D0(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     CommunityItemBlueprints;                           // 0x9E0(0x10)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ExtinctionItemBlueprints;                          // 0x9F0(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ExtinctionDinoSaddles;                             // 0xA00(0x10)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> ExtinctionDinos;                                   // 0xA10(0x10)(BlueprintVisible, Net, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> ExtinctionCorruptedDinos;                          // 0xA20(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ExtinctionEggBlueprintIDs;                         // 0xA30(0x10)(Edit, ExportObject, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     ExtinctionFertEggBlueprintIDs;                     // 0xA40(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UPrimalItem>>     EventItemsBlueprintIDs;                            // 0xA50(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class APrimalDinoCharacter>> EventDinos;                                        // 0xA60(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4870[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_DebugSpawnMenu* GetDefaultObj();

	TArray<class UUI_DebugSpawnMenuEntry*> SortSelection();
};

// 0x198 (0x8F0 - 0x758)
// Class ShooterGame.UI_DepthOfFieldMenu
class UUI_DepthOfFieldMenu : public UPrimalUI
{
public:
	class FName                                  SaveButtonName;                                    // 0x758(0x8)(ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ApplyButtonName;                                   // 0x760(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CancelButtonName;                                  // 0x768(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  NearButtonName;                                    // 0x770(0x8)(Edit, ConstParm, BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MediumButtonName;                                  // 0x778(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FarButtonName;                                     // 0x780(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ClearButtonName;                                   // 0x788(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FocalDistanceSliderName;                           // 0x790(0x8)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FocalRegionSliderName;                             // 0x798(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  NearTransitionRegionSliderName;                    // 0x7A0(0x8)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FarTransitionRegionSliderName;                     // 0x7A8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ScaleSliderName;                                   // 0x7B0(0x8)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MaxBokehSliderName;                                // 0x7B8(0x8)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  OcclusionSliderName;                               // 0x7C0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FocalDistanceTextBoxName;                          // 0x7C8(0x8)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FocalRegionTextBoxName;                            // 0x7D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  NearTransitionRegionTextBoxName;                   // 0x7D8(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FarTransitionRegionTextBoxName;                    // 0x7E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ScaleTextBoxName;                                  // 0x7E8(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MaxBokehTextBoxName;                               // 0x7F0(0x8)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  OcclusionTextBoxName;                              // 0x7F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  BlurModeComboBoxName;                              // 0x800(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4872[0xE8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_DepthOfFieldMenu* GetDefaultObj();

	void OnSliderValueChanged(float* SliderValue);
	class FText OnNumericValueCommitted(enum class ETextCommit CommitMethod);
	bool OnCheckBoxChanged();
};

// 0xE8 (0x850 - 0x768)
// Class ShooterGame.UI_DinoOrderGroups
class UUI_DinoOrderGroups : public UPrimalSubMenuUI
{
public:
	class UClass*                                DinoOrderGroupEntryTemplate;                       // 0x768(0x8)(Edit, ExportObject, Net, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ContextMenuClass;                                  // 0x770(0x8)(Net, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4873[0xD8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_DinoOrderGroups* GetDefaultObj();

	void RefreshEntries();
	void DinoOrderGroupSelected(class UWidget* TheWidget);
	void DinoClassSelected(class UWidget* TheWidget);
	void DinoCharSelected(class UWidget* TheWidget);
};

// 0x2C0 (0xA18 - 0x758)
// Class ShooterGame.UI_DyeItem
class UUI_DyeItem : public UPrimalUI
{
public:
	class FString                                DyeItemsDataListName;                              // 0x758(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                BrushItemsDataListName;                            // 0x768(0x10)(Edit, ConstParm, ExportObject, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CloseButtonName;                                   // 0x778(0x8)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LoadPaintingsButtonName;                           // 0x780(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SavePaintingsButtonName;                           // 0x788(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ResetCameraButtonName;                             // 0x790(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ItemLabelName;                                     // 0x798(0x8)(BlueprintVisible, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DyeLabelName;                                      // 0x7A0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FName>                          DyeRegionButtonsNames;                             // 0x7A8(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DyeButtonName;                                     // 0x7B8(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DyeIconImageName;                                  // 0x7C0(0x8)(Edit, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DurabilityProgressBarName;                         // 0x7C8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ItemIconImageName;                                 // 0x7D0(0x8)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TitleLabelName;                                    // 0x7D8(0x8)(Edit, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PreviewWidgetName;                                 // 0x7E0(0x8)(Edit, ConstParm, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PaintLabelName;                                    // 0x7E8(0x8)(Edit, ConstParm, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  EraseAllButtonName;                                // 0x7F0(0x8)(Edit, Net, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  BackgroundImageName;                               // 0x7F8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                PantingListUITemplate;                             // 0x800(0x8)(ConstParm, ExportObject, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                SaveDialogUITemplate;                              // 0x808(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FName>                          PlayerPreviewMaterialFloatParameterNamesToReset;   // 0x810(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4875[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class FName                                  CursorWidgetName;                                  // 0x838(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bCosmeticFlagPainting;                             // 0x840(0x1)(Edit, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4876[0x1D7];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_DyeItem* GetDefaultObj();

	void ShowUploadTribeFlagWindow(bool AutoUploadLastPainting, bool bCloseParentUIAfterFinished);
	class FString SavePainting(bool* OverrideExisting, bool* ReturnValue);
	class FText HandleOnSearchTextChanged();
	void DyeItemDoubleClicked(class UDataListEntryButton** TheButton);
	void DrawWithNewDye(bool UploadingTribeFlag);
	void DeleteLastUploadedTribeFlag();
	void ClearTribeFlag();
};

// 0x128 (0x890 - 0x768)
// Class ShooterGame.UI_EngramsMenu
class UUI_EngramsMenu : public UPrimalSubMenuUI
{
public:
	class FName                                  ARKPrimeEngramsButtonName;                         // 0x768(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ScorchedEarthEngramsButtonName;                    // 0x770(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TekgramsButtonName;                                // 0x778(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LearnEngramButtonTextName;                         // 0x780(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AvailablePointsTextName;                           // 0x788(0x8)(ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  UnlearnedEngramsButtonName;                        // 0x790(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AberrationEngramsButtonName;                       // 0x798(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ExtinctionEngramsButtonName;                       // 0x7A0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  GenesisEngramsButtonName;                          // 0x7A8(0x8)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  EngramTitleLabelName;                              // 0x7B0(0x8)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  EngramsDataListName;                               // 0x7B8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  EngramFilterTextBoxName;                           // 0x7C0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LearnEngramButtonName;                             // 0x7C8(0x8)(ConstParm, Net, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4877[0xC0];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_EngramsMenu* GetDefaultObj();

	bool OnEngramsFilterChanged();
	class FText OnEngramFilterChanged();
	void EngramSelected(class UDataListEntryButton** TheButton);
	void EngramDoubleClicked(class UDataListEntryButton** TheButton);
};

// 0x78 (0x7D0 - 0x758)
// Class ShooterGame.UI_GenericConfirmationDialog
class UUI_GenericConfirmationDialog : public UPrimalUI
{
public:
	class FName                                  TitleLabelName;                                    // 0x758(0x8)(Edit, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MessageLabelName;                                  // 0x760(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  GamePadPanelName;                                  // 0x768(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ButtonAcceptConfirmationName;                      // 0x770(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ButtonDenyConfirmationName;                        // 0x778(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  GamepadImageAcceptName;                            // 0x780(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  GamepadImageDenyName;                              // 0x788(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4878[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnClosedEventObject;                               // 0x7C0(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UUI_GenericConfirmationDialog* GetDefaultObj();

	void OverrideCancelButtonText(class FText* CancelText);
	void OverrideAcceptButtonText(class FText* AcceptText);
	void GetSplitscreenLocalPlayerIndex(int32* ReturnValue);
};

// 0x250 (0x9A8 - 0x758)
// Class ShooterGame.UI_Hairstyle
class UUI_Hairstyle : public UPrimalUI
{
public:
	class FName                                  TabBgSwitcherName;                                 // 0x758(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  HeadHairEnabledEffectName;                         // 0x760(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FacialHairEnabledEffectName;                       // 0x768(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextActiveColor;                           // 0x770(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextInactiveColor;                         // 0x780(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                HairStyleEntryTemplate;                            // 0x790(0x8)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4879[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class AShooterCharacter>      TargetActor;                                       // 0x7F0(0x8)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_487A[0xC8];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            TheHairStyleSelectedDelegate;                      // 0x8C0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            ClearHeadHairButtonClickedDelegate;                // 0x8D0(0x10)(ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            ClearFacialHairButtonClickedDelegate;              // 0x8E0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_487B[0x40];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          HairMaterialsNames;                                // 0x930(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FName>                          HairDyeMaterialsNames;                             // 0x940(0x10)(Edit, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NewHeadHairIndex;                                  // 0x950(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NewEyebrowIndex;                                   // 0x954(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NewFacialHairIndex;                                // 0x958(0x4)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        NewHeadHairPercent;                                // 0x95C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        NewFacialHairPercent;                              // 0x960(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_487C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                HeadHairDyeID1;                                    // 0x968(0x10)(BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<int32>                                HeadHairDyeID2;                                    // 0x978(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<int32>                                FacialHairDyeID1;                                  // 0x988(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<int32>                                FacialHairDyeID2;                                  // 0x998(0x10)(ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UUI_Hairstyle* GetDefaultObj();

	int32 UpdateHeadHairStyleIndex();
	int32 UpdateFacialHairStyleIndex();
	int32 UpdateEyebrowStyleIndex();
	void OnHeadHairStyleButtonClicked(class UWidget* TheWidget);
	void OnFacialHairStyleButtonClicked(class UWidget* TheWidget);
	void OnEyebrowStyleButtonClicked(class UWidget* TheWidget);
	void GetDyeItemSelectors(TArray<class UDyeItemSelector*>* ReturnValue);
	void BPSetupForPreviewMesh();
};

// 0xF0 (0x848 - 0x758)
// Class ShooterGame.UI_HelpPage
class UUI_HelpPage : public UPrimalUI
{
public:
	uint8                                        Pad_487D[0xF0];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_HelpPage* GetDefaultObj();

};

// 0x8F8 (0x1050 - 0x758)
// Class ShooterGame.UI_HexagonConversion
class UUI_HexagonConversion : public UPrimalUI
{
public:
	uint8                                        Pad_487E[0x138];                                   // Fixing Size After Last Property  > TateDumper <
	class FName                                  ItemIconName;                                      // 0x890(0x8)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ItemIconPanelName;                                 // 0x898(0x8)(Edit, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ItemNameTextBoxName;                               // 0x8A0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CostPanelName;                                     // 0x8A8(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CostCountTextBoxName;                              // 0x8B0(0x8)(Edit, ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CurrentCountTextBoxName;                           // 0x8B8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SubtotalCountTextBoxName;                          // 0x8C0(0x8)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RemainingCountTextBoxName;                         // 0x8C8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AvailableItemsScrollboxName;                       // 0x8D0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ConvertButtonName;                                 // 0x8D8(0x8)(ConstParm, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CloseButtonName;                                   // 0x8E0(0x8)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ItemQuantityTextBoxName;                           // 0x8E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ItemDescriptionTextBoxName;                        // 0x8F0(0x8)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ItemWeightValueTextBlockName;                      // 0x8F8(0x8)(ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ItemInventoryQuantityValueTextBlockName;           // 0x900(0x8)(Edit, ConstParm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ConvertButtonItemIconName;                         // 0x908(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  QuantitySelectorTextBlockName;                     // 0x910(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ConvertButtonSubtotalTextBlockName;                // 0x918(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ConvertButtonQuantityTextBlockName;                // 0x920(0x8)(Edit, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  WeightBeforePurchaseTextBlockName;                 // 0x928(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  WeightAfterPurchaseTextBlockName;                  // 0x930(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  WeightBeforePurchaseProgressBarName;               // 0x938(0x8)(Edit, ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  WeightAfterPurchaseProgressBarName;                // 0x940(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  IncreaseQuantityButtonName;                        // 0x948(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  IncreaseQuantity10ButtonName;                      // 0x950(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MaxIncreaseQuantityButtonName;                     // 0x958(0x8)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DecreaseQuantityButtonName;                        // 0x960(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DecreaseQuantity10ButtonName;                      // 0x968(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MaxDecreaseQuantityButtonName;                     // 0x970(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SearchTextBoxName;                                 // 0x978(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        AvailableItemsPerRow;                              // 0x980(0x4)(BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_487F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<bool>                                 CurrentAvailableItems;                             // 0x988(0x10)(ExportObject, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4880[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                SlotButtonTemplate;                                // 0x9A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                EmptySlotButtonTemplate;                           // 0x9B0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCustomButtonWidgetStyle              UnavailableItemButtonStyle;                        // 0x9B8(0x48)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4881[0x48];                                    // Fixing Size After Last Property  > TateDumper <
	struct FCustomButtonWidgetStyle              UnavailableConvertButtonStyle;                     // 0xA48(0x48)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4882[0x48];                                    // Fixing Size After Last Property  > TateDumper <
	struct FSlateColor                           NotAbleToPurchaseTextColor;                        // 0xAD8(0x14)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FSlateColor                           AbleToPurchaseTextColor;                           // 0xAEC(0x14)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FSlateColor                           NeutralTextColor;                                  // 0xB00(0x14)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4883[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FCompanionReactionData                PurchaseItemReaction;                              // 0xB18(0xB0)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCompanionReactionData                CloseStoreReactionNoPurchase;                      // 0xBC8(0xB0)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCompanionReactionData                CloseStoreReactionDidPurchase;                     // 0xC78(0xB0)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCompanionReactionData                OpenStoreReaction;                                 // 0xD28(0xB0)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCompanionReactionData                OpenStoreReactionSale;                             // 0xDD8(0xB0)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCompanionReactionData                OpenStoreReactionChange;                           // 0xE88(0xB0)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCompanionReactionData                OpenStoreReactionNewItemUnlocked;                  // 0xF38(0xB0)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4884[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         DebugTestSaleReaction;                             // 0xFEA(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         DebugTestChangeReaction;                           // 0xFEB(0x1)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         DebugTestNewReaction;                              // 0xFEC(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4885[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundCue*                             StoreOpenSound;                                    // 0xFF0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             StoreCloseSound;                                   // 0xFF8(0x8)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        RequiredQuantity;                                  // 0x1000(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4886[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UHexagonTradableOption*                CurrentTradableItemOption;                         // 0x1008(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FSlateColor                           WeightTextColor;                                   // 0x1010(0x14)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FSlateColor                           OverencumberedTextColor;                           // 0x1024(0x14)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ItemRow;                                           // 0x1038(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ItemColumn;                                        // 0x103C(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4887[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_HexagonConversion* GetDefaultObj();

	void TradableItemSelected(class UWidget* TheWidget);
	void PopulateAvailableTradeItems(const TArray<bool>& AvailableItems);
	class FText OnSearchTextChanged();
	int32 HideItem();
	int32 GetWidgetIndexOfAssociatedItemIndex(int32* ReturnValue);
	void GetCurrentlySelectedTradeItemWidgetIndex(int32* ReturnValue);
	void FilterAvailableTradeItems(const TArray<bool>& AvailableTradableItems, const class FString& FilterText);
};

// 0x1178 (0x18D0 - 0x758)
// Class ShooterGame.UI_HostSession
class UUI_HostSession : public UPrimalUI
{
public:
	TArray<struct FMapDescription>               MapDescriptionsArray;                              // 0x758(0x10)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ProceduralButtonName;                              // 0x768(0x8)(Edit, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DeleteProceduralArkButtonName;                     // 0x770(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  HostButtonName;                                    // 0x778(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  HostDedicatedButtonName;                           // 0x780(0x8)(ExportObject, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  HostListenButtonName;                              // 0x788(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  UpdateModsButtonName;                              // 0x790(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ProgressTextName;                                  // 0x798(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CancelButtonName;                                  // 0x7A0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MyScrollBoxName;                                   // 0x7A8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4895[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  MySwitchScrollBoxName;                             // 0x7B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SessionsPanelName;                                 // 0x7C0(0x8)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ClearLocalDataButtonName;                          // 0x7C8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ConnectingPanelName;                               // 0x7D0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PasswordAcceptButtonName;                          // 0x7D8(0x8)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PasswordCancelButtonName;                          // 0x7E0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PasswordTextFieldName;                             // 0x7E8(0x8)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PasswordAdminTextFieldName;                        // 0x7F0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SessionNameTextFieldName;                          // 0x7F8(0x8)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PasswordPanelName;                                 // 0x800(0x8)(Edit, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ErrorBlockName;                                    // 0x808(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                SlotButtonTemplate;                                // 0x810(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ProceduralSettingsTemplate;                        // 0x818(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4896[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxPasswordChars;                                  // 0x828(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxSessionNameChars;                               // 0x82C(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextActiveColor;                           // 0x830(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextInactiveColor;                         // 0x840(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerDamageScale;                                 // 0x850(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerDamageOffset;                                // 0x854(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerDamageDefault;                               // 0x858(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerResistanceScale;                             // 0x85C(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerResistanceOffset;                            // 0x860(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerResistanceDefault;                           // 0x864(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerWaterDrainScale;                             // 0x868(0x4)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerWaterDrainOffset;                            // 0x86C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerWaterDrainDefault;                           // 0x870(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerFoodDrainScale;                              // 0x874(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerFoodDrainOffset;                             // 0x878(0x4)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerFoodDrainDefault;                            // 0x87C(0x4)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerStaminaDrainScale;                           // 0x880(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerStaminaDrainOffset;                          // 0x884(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerStaminaDrainDefault;                         // 0x888(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerHealthRecoveryScale;                         // 0x88C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerHealthRecoveryOffset;                        // 0x890(0x4)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerHealthRecoveryDefault;                       // 0x894(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerHarvestingDamageScale;                       // 0x898(0x4)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerHarvestingDamageOffset;                      // 0x89C(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlayerHarvestingDamageDefault;                     // 0x8A0(0x4)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoCountScale;                                    // 0x8A4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoCountOffset;                                   // 0x8A8(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoCountDefault;                                  // 0x8AC(0x4)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoDamageScale;                                   // 0x8B0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoDamageOffset;                                  // 0x8B4(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoDamageDefault;                                 // 0x8B8(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoResistanceScale;                               // 0x8BC(0x4)(Edit, ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoResistanceOffset;                              // 0x8C0(0x4)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoResistanceDefault;                             // 0x8C4(0x4)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoFoodDrainScale;                                // 0x8C8(0x4)(ConstParm, Net, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoFoodDrainOffset;                               // 0x8CC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoFoodDrainDefault;                              // 0x8D0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoStaminaDrainScale;                             // 0x8D4(0x4)(ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoStaminaDrainOffset;                            // 0x8D8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoStaminaDrainDefault;                           // 0x8DC(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoHealthRecoveryScale;                           // 0x8E0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoHealthRecoveryOffset;                          // 0x8E4(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoHealthRecoveryDefault;                         // 0x8E8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoHarvestingDamageScale;                         // 0x8EC(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoHarvestingDamageOffset;                        // 0x8F0(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoHarvestingDamageDefault;                       // 0x8F4(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoTurretDamageScale;                             // 0x8F8(0x4)(ExportObject, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoTurretDamageOffset;                            // 0x8FC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DinoTurretDamageDefault;                           // 0x900(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StructureDamageScale;                              // 0x904(0x4)(BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StructureDamageOffset;                             // 0x908(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StructureDamageDefault;                            // 0x90C(0x4)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StructureResistanceScale;                          // 0x910(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StructureResistanceOffset;                         // 0x914(0x4)(Edit, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StructureResistanceDefault;                        // 0x918(0x4)(Edit, ConstParm, Net, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StructureDamageRepairCDScale;                      // 0x91C(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StructureDamageRepairCDOffset;                     // 0x920(0x4)(BlueprintVisible, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StructureDamageRepairCDDefault;                    // 0x924(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StructureMaxInRangeScale;                          // 0x928(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StructureMaxInRangeOffset;                         // 0x92C(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StructureMaxInRangeDefault;                        // 0x930(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        XPMultiplierScale;                                 // 0x934(0x4)(Edit, EditFixedSize, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        XPMultiplierOffset;                                // 0x938(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        XPMultiplierDefault;                               // 0x93C(0x4)(BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TamingSpeedScale;                                  // 0x940(0x4)(Edit, ConstParm, Net, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TamingSpeedOffset;                                 // 0x944(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TamingSpeedDefault;                                // 0x948(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        HarvestAmountScale;                                // 0x94C(0x4)(Edit, BlueprintVisible, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        HarvestAmountOffset;                               // 0x950(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        HarvestAmountDefault;                              // 0x954(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DifficultyValueScale;                              // 0x958(0x4)(BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DifficultyValueOffset;                             // 0x95C(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DifficultyValueDefault;                            // 0x960(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ListenServerTetherDistanceScale;                   // 0x964(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ListenServerTetherDistanceOffset;                  // 0x968(0x4)(ConstParm, ExportObject, Net, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ListenServerTetherDistanceDefault;                 // 0x96C(0x4)(ExportObject, BlueprintReadOnly, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AutoStartTimeScale;                                // 0x970(0x4)(ConstParm, BlueprintVisible, ExportObject, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AutoStartTimeOffset;                               // 0x974(0x4)(Edit, ConstParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AutoStartTimeDefault;                              // 0x978(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AutoStopTimeScale;                                 // 0x97C(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AutoStopTimeOffset;                                // 0x980(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AutoStopTimeDefault;                               // 0x984(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PvEStructureDecayPeriodScale;                      // 0x988(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PvEStructureDecayPeriodOffset;                     // 0x98C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PvEStructureDecayPeriodDefault;                    // 0x990(0x4)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PvEDinoDecayPeriodScale;                           // 0x994(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PvEDinoDecayPeriodOffset;                          // 0x998(0x4)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PvEDinoDecayPeriodDefault;                         // 0x99C(0x4)(ConstParm, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalCheckPeriodScale;        // 0x9A0(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalCheckPeriodOffset;       // 0x9A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalCheckPeriodDefault;      // 0x9A8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalMultiplierScale;         // 0x9AC(0x4)(ExportObject, Net, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalMultiplierOffset;        // 0x9B0(0x4)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalMultiplierDefault;       // 0x9B4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalBaseAmountScale;         // 0x9B8(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalBaseAmountOffset;        // 0x9BC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        IncreasePvPRespawnIntervalBaseAmountDefault;       // 0x9C0(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PreventOfflinePvPIntervalScale;                    // 0x9C4(0x4)(ExportObject, Net, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PreventOfflinePvPIntervalOffset;                   // 0x9C8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PreventOfflinePvPIntervalDefault;                  // 0x9CC(0x4)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PvPZoneStructureDamageScale;                       // 0x9D0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PvPZoneStructureDamageOffset;                      // 0x9D4(0x4)(ExportObject, Net, EditFixedSize, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PvPZoneStructureDamageDefault;                     // 0x9D8(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StructurePreventResourceRadiusScale;               // 0x9DC(0x4)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StructurePreventResourceRadiusOffset;              // 0x9E0(0x4)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StructurePreventResourceRadiusDefault;             // 0x9E4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DayCycleSpeedScale;                                // 0x9E8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        DayCycleSpeedOffset;                               // 0x9EC(0x4)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DayCycleSpeedDefault;                              // 0x9F0(0x4)(ExportObject, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DayTimeSpeedScale;                                 // 0x9F4(0x4)(BlueprintVisible, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        DayTimeSpeedOffset;                                // 0x9F8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DayTimeSpeedDefault;                               // 0x9FC(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        NightTimeSpeedScale;                               // 0xA00(0x4)(ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        NightTimeSpeedOffset;                              // 0xA04(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        NightTimeSpeedDefault;                             // 0xA08(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StartTimeHourScale;                                // 0xA0C(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StartTimeHourOffset;                               // 0xA10(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StartTimeHourDefault;                              // 0xA14(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GlobalSpoilingTimeScale;                           // 0xA18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GlobalSpoilingTimeOffset;                          // 0xA1C(0x4)(ConstParm, Net, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GlobalSpoilingTimeDefault;                         // 0xA20(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GlobalItemDecompositionTimeScale;                  // 0xA24(0x4)(Edit, ConstParm, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GlobalItemDecompositionTimeOffset;                 // 0xA28(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GlobalItemDecompositionTimeDefault;                // 0xA2C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GlobalCorpseDecompositionTimeScale;                // 0xA30(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GlobalCorpseDecompositionTimeOffset;               // 0xA34(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GlobalCorpseDecompositionTimeDefault;              // 0xA38(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ResourceNoReplenishRadiusPlayersScale;             // 0xA3C(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ResourceNoReplenishRadiusPlayersOffset;            // 0xA40(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ResourceNoReplenishRadiusPlayersDefault;           // 0xA44(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ResourceNoReplenishRadiusStructuresScale;          // 0xA48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ResourceNoReplenishRadiusStructuresOffset;         // 0xA4C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ResourceNoReplenishRadiusStructuresDefault;        // 0xA50(0x4)(Edit, ExportObject, Net, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        HarvestHealthScale;                                // 0xA54(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        HarvestHealthOffset;                               // 0xA58(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        HarvestHealthDefault;                              // 0xA5C(0x4)(Edit, ExportObject, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ResourcesRespawnPeriodScale;                       // 0xA60(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ResourcesRespawnPeriodOffset;                      // 0xA64(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ResourcesRespawnPeriodDefault;                     // 0xA68(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CropGrowthSpeedScale;                              // 0xA6C(0x4)(BlueprintReadOnly, EditFixedSize, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CropGrowthSpeedOffset;                             // 0xA70(0x4)(BlueprintVisible, EditFixedSize, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CropGrowthSpeedDefault;                            // 0xA74(0x4)(ExportObject, BlueprintReadOnly, Net, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CropDecaySpeedScale;                               // 0xA78(0x4)(Edit, BlueprintVisible, ExportObject, Net, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CropDecaySpeedOffset;                              // 0xA7C(0x4)(ConstParm, Net, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CropDecaySpeedDefault;                             // 0xA80(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PoopIntervalScale;                                 // 0xA84(0x4)(BlueprintVisible, ExportObject, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PoopIntervalOffset;                                // 0xA88(0x4)(ConstParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PoopIntervalDefault;                               // 0xA8C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MatingIntervalScale;                               // 0xA90(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MatingIntervalOffset;                              // 0xA94(0x4)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MatingIntervalDefault;                             // 0xA98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LayEggIntervalScale;                               // 0xA9C(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LayEggIntervalOffset;                              // 0xAA0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LayEggIntervalDefault;                             // 0xAA4(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        EggHatchSpeedScale;                                // 0xAA8(0x4)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        EggHatchSpeedOffset;                               // 0xAAC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        EggHatchSpeedDefault;                              // 0xAB0(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BabyMatureSpeedScale;                              // 0xAB4(0x4)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BabyMatureSpeedOffset;                             // 0xAB8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BabyMatureSpeedDefault;                            // 0xABC(0x4)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BabyFoodConsumptionSpeedScale;                     // 0xAC0(0x4)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BabyFoodConsumptionSpeedOffset;                    // 0xAC4(0x4)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BabyFoodConsumptionSpeedDefault;                   // 0xAC8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BabyCuddleIntervalScale;                           // 0xACC(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BabyCuddleIntervalOffset;                          // 0xAD0(0x4)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BabyCuddleIntervalDefault;                         // 0xAD4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BabyCuddleGracePeriodScale;                        // 0xAD8(0x4)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BabyCuddleGracePeriodOffset;                       // 0xADC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BabyCuddleGracePeriodDefault;                      // 0xAE0(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BabyCuddleLoseImprintQualitySpeedScale;            // 0xAE4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BabyCuddleLoseImprintQualitySpeedOffset;           // 0xAE8(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BabyCuddleLoseImprintQualitySpeedDefault;          // 0xAEC(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BabyImprintingStatScaleScale;                      // 0xAF0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BabyImprintingStatScaleOffset;                     // 0xAF4(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BabyImprintingStatScaleDefault;                    // 0xAF8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildHealthScale;                   // 0xAFC(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildHealthOffset;                  // 0xB00(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildHealthDefault;                 // 0xB04(0x4)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildStaminaScale;                  // 0xB08(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildStaminaOffset;                 // 0xB0C(0x4)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildStaminaDefault;                // 0xB10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildTorpidityScale;                // 0xB14(0x4)(Edit, ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildTorpidityOffset;               // 0xB18(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildTorpidityDefault;              // 0xB1C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildOxygenScale;                   // 0xB20(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildOxygenOffset;                  // 0xB24(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildOxygenDefault;                 // 0xB28(0x4)(Edit, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildFoodScale;                     // 0xB2C(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildFoodOffset;                    // 0xB30(0x4)(Edit, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildFoodDefault;                   // 0xB34(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildWaterScale;                    // 0xB38(0x4)(ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildWaterOffset;                   // 0xB3C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildWaterDefault;                  // 0xB40(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildTemperatureScale;              // 0xB44(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildTemperatureOffset;             // 0xB48(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildTemperatureDefault;            // 0xB4C(0x4)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildWeightScale;                   // 0xB50(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildWeightOffset;                  // 0xB54(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildWeightDefault;                 // 0xB58(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildDamageScale;                   // 0xB5C(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildDamageOffset;                  // 0xB60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildDamageDefault;                 // 0xB64(0x4)(Edit, ConstParm, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildSpeedScale;                    // 0xB68(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildSpeedOffset;                   // 0xB6C(0x4)(ConstParm, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildSpeedDefault;                  // 0xB70(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildTemperatureFortitudeScale;     // 0xB74(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildTemperatureFortitudeOffset;    // 0xB78(0x4)(Edit, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoWildTemperatureFortitudeDefault;   // 0xB7C(0x4)(ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedHealthScale;                  // 0xB80(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedHealthOffset;                 // 0xB84(0x4)(Edit, BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedHealthDefault;                // 0xB88(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedStaminaScale;                 // 0xB8C(0x4)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedStaminaOffset;                // 0xB90(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedStaminaDefault;               // 0xB94(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedTorpidityScale;               // 0xB98(0x4)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedTorpidityOffset;              // 0xB9C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedTorpidityDefault;             // 0xBA0(0x4)(ConstParm, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedOxygenScale;                  // 0xBA4(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedOxygenOffset;                 // 0xBA8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedOxygenDefault;                // 0xBAC(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedFoodScale;                    // 0xBB0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedFoodOffset;                   // 0xBB4(0x4)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedFoodDefault;                  // 0xBB8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedWaterScale;                   // 0xBBC(0x4)(ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedWaterOffset;                  // 0xBC0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedWaterDefault;                 // 0xBC4(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedTemperatureScale;             // 0xBC8(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedTemperatureOffset;            // 0xBCC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedTemperatureDefault;           // 0xBD0(0x4)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedWeightScale;                  // 0xBD4(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedWeightOffset;                 // 0xBD8(0x4)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedWeightDefault;                // 0xBDC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedDamageScale;                  // 0xBE0(0x4)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedDamageOffset;                 // 0xBE4(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedDamageDefault;                // 0xBE8(0x4)(EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedSpeedScale;                   // 0xBEC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedSpeedOffset;                  // 0xBF0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedSpeedDefault;                 // 0xBF4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedTemperatureFortitudeScale;    // 0xBF8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedTemperatureFortitudeOffset;   // 0xBFC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedTemperatureFortitudeDefault;  // 0xC00(0x4)(ConstParm, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddHealthScale;               // 0xC04(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddHealthOffset;              // 0xC08(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddHealthDefault;             // 0xC0C(0x4)(ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddStaminaScale;              // 0xC10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddStaminaOffset;             // 0xC14(0x4)(Edit, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddStaminaDefault;            // 0xC18(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddTorpidityScale;            // 0xC1C(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddTorpidityOffset;           // 0xC20(0x4)(BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddTorpidityDefault;          // 0xC24(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddOxygenScale;               // 0xC28(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddOxygenOffset;              // 0xC2C(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddOxygenDefault;             // 0xC30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddFoodScale;                 // 0xC34(0x4)(Edit, ConstParm, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddFoodOffset;                // 0xC38(0x4)(Edit, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddFoodDefault;               // 0xC3C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddWaterScale;                // 0xC40(0x4)(BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddWaterOffset;               // 0xC44(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddWaterDefault;              // 0xC48(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddTemperatureScale;          // 0xC4C(0x4)(Edit, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddTemperatureOffset;         // 0xC50(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddTemperatureDefault;        // 0xC54(0x4)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddWeightScale;               // 0xC58(0x4)(ConstParm, BlueprintReadOnly, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddWeightOffset;              // 0xC5C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddWeightDefault;             // 0xC60(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddDamageScale;               // 0xC64(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddDamageOffset;              // 0xC68(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddDamageDefault;             // 0xC6C(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddSpeedScale;                // 0xC70(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddSpeedOffset;               // 0xC74(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddSpeedDefault;              // 0xC78(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddTemperatureFortitudeScale; // 0xC7C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddTemperatureFortitudeOffset; // 0xC80(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAddTemperatureFortitudeDefault; // 0xC84(0x4)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffHealthScale;               // 0xC88(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffHealthOffset;              // 0xC8C(0x4)(BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffHealthDefault;             // 0xC90(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffStaminaScale;              // 0xC94(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffStaminaOffset;             // 0xC98(0x4)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffStaminaDefault;            // 0xC9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffTorpidityScale;            // 0xCA0(0x4)(Edit, Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffTorpidityOffset;           // 0xCA4(0x4)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffTorpidityDefault;          // 0xCA8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffOxygenScale;               // 0xCAC(0x4)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffOxygenOffset;              // 0xCB0(0x4)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffOxygenDefault;             // 0xCB4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffFoodScale;                 // 0xCB8(0x4)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffFoodOffset;                // 0xCBC(0x4)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffFoodDefault;               // 0xCC0(0x4)(ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffWaterScale;                // 0xCC4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffWaterOffset;               // 0xCC8(0x4)(Edit, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffWaterDefault;              // 0xCCC(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffTemperatureScale;          // 0xCD0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffTemperatureOffset;         // 0xCD4(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffTemperatureDefault;        // 0xCD8(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffWeightScale;               // 0xCDC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffWeightOffset;              // 0xCE0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffWeightDefault;             // 0xCE4(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffDamageScale;               // 0xCE8(0x4)(EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffDamageOffset;              // 0xCEC(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffDamageDefault;             // 0xCF0(0x4)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffSpeedScale;                // 0xCF4(0x4)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffSpeedOffset;               // 0xCF8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffSpeedDefault;              // 0xCFC(0x4)(Edit, Net, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffTemperatureFortitudeScale; // 0xD00(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffTemperatureFortitudeOffset; // 0xD04(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatDinoTamedAffTemperatureFortitudeDefault; // 0xD08(0x4)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerHealthScale;                     // 0xD0C(0x4)(ConstParm, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerHealthOffset;                    // 0xD10(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerHealthDefault;                   // 0xD14(0x4)(Edit, Net, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerStaminaScale;                    // 0xD18(0x4)(Edit, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerStaminaOffset;                   // 0xD1C(0x4)(EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerStaminaDefault;                  // 0xD20(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerTorpidityScale;                  // 0xD24(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerTorpidityOffset;                 // 0xD28(0x4)(BlueprintVisible, ExportObject, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerTorpidityDefault;                // 0xD2C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerOxygenScale;                     // 0xD30(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerOxygenOffset;                    // 0xD34(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerOxygenDefault;                   // 0xD38(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerFoodScale;                       // 0xD3C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerFoodOffset;                      // 0xD40(0x4)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerFoodDefault;                     // 0xD44(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerWaterScale;                      // 0xD48(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerWaterOffset;                     // 0xD4C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerWaterDefault;                    // 0xD50(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerTemperatureScale;                // 0xD54(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerTemperatureOffset;               // 0xD58(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerTemperatureDefault;              // 0xD5C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerWeightScale;                     // 0xD60(0x4)(BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerWeightOffset;                    // 0xD64(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerWeightDefault;                   // 0xD68(0x4)(Edit, ConstParm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerDamageScale;                     // 0xD6C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerDamageOffset;                    // 0xD70(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerDamageDefault;                   // 0xD74(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerSpeedScale;                      // 0xD78(0x4)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerSpeedOffset;                     // 0xD7C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerSpeedDefault;                    // 0xD80(0x4)(Edit, ConstParm, Net, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerTemperatureFortitudeScale;       // 0xD84(0x4)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerTemperatureFortitudeOffset;      // 0xD88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerLevelStatPlayerTemperatureFortitudeDefault;     // 0xD8C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        KillXPMultiplierScale;                             // 0xD90(0x4)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        KillXPMultiplierOffset;                            // 0xD94(0x4)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        KillXPMultiplierDefault;                           // 0xD98(0x4)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        HarvestXPMultiplierScale;                          // 0xD9C(0x4)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        HarvestXPMultiplierOffset;                         // 0xDA0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        HarvestXPMultiplierDefault;                        // 0xDA4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CraftXPMultiplierScale;                            // 0xDA8(0x4)(Edit, ConstParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CraftXPMultiplierOffset;                           // 0xDAC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CraftXPMultiplierDefault;                          // 0xDB0(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GenericXPMultiplierScale;                          // 0xDB4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GenericXPMultiplierOffset;                         // 0xDB8(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GenericXPMultiplierDefault;                        // 0xDBC(0x4)(EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SpecialXPMultiplierScale;                          // 0xDC0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SpecialXPMultiplierOffset;                         // 0xDC4(0x4)(Edit, BlueprintVisible, Net, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SpecialXPMultiplierDefault;                        // 0xDC8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ExplorerNoteXPMultiplierScale;                     // 0xDCC(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ExplorerNoteXPMultiplierOffset;                    // 0xDD0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ExplorerNoteXPMultiplierDefault;                   // 0xDD4(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BossKillXPMultiplierScale;                         // 0xDD8(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BossKillXPMultiplierOffset;                        // 0xDDC(0x4)(ConstParm, ExportObject, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BossKillXPMultiplierDefault;                       // 0xDE0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AlphaKillXPMultiplierScale;                        // 0xDE4(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AlphaKillXPMultiplierOffset;                       // 0xDE8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AlphaKillXPMultiplierDefault;                      // 0xDEC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WildKillXPMultiplierScale;                         // 0xDF0(0x4)(Edit, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WildKillXPMultiplierOffset;                        // 0xDF4(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WildKillXPMultiplierDefault;                       // 0xDF8(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CaveKillXPMultiplierScale;                         // 0xDFC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CaveKillXPMultiplierOffset;                        // 0xE00(0x4)(ExportObject, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CaveKillXPMultiplierDefault;                       // 0xE04(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TamedKillXPMultiplierScale;                        // 0xE08(0x4)(Edit, ConstParm, ExportObject, Net, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TamedKillXPMultiplierOffset;                       // 0xE0C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TamedKillXPMultiplierDefault;                      // 0xE10(0x4)(Edit, BlueprintVisible, ExportObject, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        UnclaimedKillXPMultiplierScale;                    // 0xE14(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        UnclaimedKillXPMultiplierOffset;                   // 0xE18(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        UnclaimedKillXPMultiplierDefault;                  // 0xE1C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RaidDinoCharacterFoodDrainScale;                   // 0xE20(0x4)(ConstParm, ExportObject, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RaidDinoCharacterFoodDrainOffset;                  // 0xE24(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RaidDinoCharacterFoodDrainDefault;                 // 0xE28(0x4)(Edit, ConstParm, BlueprintVisible, Net, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FishingLootQualityScale;                           // 0xE2C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FishingLootQualityOffset;                          // 0xE30(0x4)(Edit, BlueprintVisible, ExportObject, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FishingLootQualityDefault;                         // 0xE34(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CustomRecipeEffectivenessScale;                    // 0xE38(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CustomRecipeEffectivenessOffset;                   // 0xE3C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CustomRecipeEffectivenessDefault;                  // 0xE40(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CustomRecipeSkillScale;                            // 0xE44(0x4)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CustomRecipeSkillOffset;                           // 0xE48(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CustomRecipeSkillDefault;                          // 0xE4C(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FuelConsumptionIntervalScale;                      // 0xE50(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FuelConsumptionIntervalOffset;                     // 0xE54(0x4)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FuelConsumptionIntervalDefault;                    // 0xE58(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerPlatformMaxStructuresScale;                     // 0xE5C(0x4)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerPlatformMaxStructuresOffset;                    // 0xE60(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PerPlatformMaxStructuresDefault;                   // 0xE64(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OverrideMaxExperiencePointsPlayerScale;            // 0xE68(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OverrideMaxExperiencePointsPlayerOffset;           // 0xE6C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OverrideMaxExperiencePointsPlayerDefault;          // 0xE70(0x4)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OverrideMaxExperiencePointsDinoScale;              // 0xE74(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OverrideMaxExperiencePointsDinoOffset;             // 0xE78(0x4)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OverrideMaxExperiencePointsDinoDefault;            // 0xE7C(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxNumberOfPlayersInTribeScale;                    // 0xE80(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxNumberOfPlayersInTribeOffset;                   // 0xE84(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxNumberOfPlayersInTribeDefault;                  // 0xE88(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CraftingSkillBonusScale;                           // 0xE8C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CraftingSkillBonusOffset;                          // 0xE90(0x4)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CraftingSkillBonusDefault;                         // 0xE94(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SupplyCrateLootQualityScale;                       // 0xE98(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SupplyCrateLootQualityOffset;                      // 0xE9C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SupplyCrateLootQualityDefault;                     // 0xEA0(0x4)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4897[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDifficultyValues>             DifficultyDefaultValues;                           // 0xEA8(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4898[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        EngramFilterIndex;                                 // 0xECC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4899[0x920];                                   // Fixing Size After Last Property  > TateDumper <
	TArray<class UTexture2DDynamic*>             ModPreviewGCStore;                                 // 0x17F0(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_489A[0xA8];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        MapSelectTimer;                                    // 0x18A8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        SwitchSelectedMapIndex;                            // 0x18AC(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        SwitchSelectedMapMode;                             // 0x18B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        SliderValueStoredSigDigits;                        // 0x18B4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_489B[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UWidget*                               LastHostWidgetClicked;                             // 0x18C0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_489C[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_HostSession* GetDefaultObj();

	void UpdateDifficultyRules(int32* Difficulty);
	void SlotButtonSelected(class UWidget* TheWidget);
	void ShowConfirmationForSettingsMedium();
	void ShowConfirmationForSettingsHard();
	void ShowConfirmationForSettingsEasy();
	void SetupLayout();
	class UEditableTextBox* SetTextIntFromSettingsData(int32 Value);
	bool SetSliderFromSettingsData(float Value, class UDataListValueGeneric* Slider, float Scale, float DefaultValue);
	class UPrimalGameSettingsData* SetSettingsWithSettingsDataAsset();
	int32 SetSelectedMapIndex();
	class UDataListValueGeneric* SetCheckBoxFromSettingsData(bool Value);
	void SelectMapButtonPressed();
	void QueueMapSelect();
	void OnSliderValueChanged(float* SliderValue);
	class FText OnSessionPasswordTextCommitted(enum class ETextCommit CommitMethod);
	class FText OnSessionPasswordTextChanged();
	class FText OnSessionNameTextCommitted(enum class ETextCommit CommitMethod);
	class FText OnSessionNameTextChanged();
	class FText OnNumericValueCommitted(enum class ETextCommit CommitMethod);
	void OnModInfoRequested(int64* ModId);
	void OnImageLoadFinish(class UTexture2DDynamic** NewTexture);
	void OnEngramTabOpened();
	void OnDeleteMapServerDataButtonClicked(class UWidget* TheWidget);
	void OnDeleteMapSaveGameButtonClicked(class UWidget* TheWidget);
	void OnCFCoreUIRegister();
	void OnCFCoreUIControllerInit();
	class FText OnAdminPasswordTextCommitted(enum class ETextCommit CommitMethod);
	class FText OnAdminPasswordTextChanged();
	void OnActiveModReorderButtonClicked(class UWidget* TheWidget);
	void MoveToMapScreen();
	void ModSelected(class UWidget* TheWidget);
	void IsInMapSelectView(bool* ReturnValue);
	class UCustomButtonWidget* HighlightPresetButton();
	int32 HasSaveForMapIndex(bool* ReturnValue);
	int32 HasDLCforMapIndex(bool* ReturnValue);
	int32 GetSwitchMapEntryForIndex(class UDataListEntryButton_HostSession** ReturnValue);
	void GetSelectedMapIndex(int32* ReturnValue);
	void GetModMaps(TArray<class UDataListEntryButton_HostSession*>* ReturnValue);
	void GetMapSelectScrollBox(class UScrollBox** ReturnValue);
	struct FMapDescription GetMapInfo();
	void EngramDoubleClicked(class UDataListEntryButton** TheButton);
	class UPrimalGameSettingsData* DoesSettingsMatchSettingsDataAsset(bool* ReturnValue);
	int32 DeleteSingleplayerData();
	void ConfirmedChangeSettingsToMedium();
	void ConfirmedChangeSettingsToHard();
	void ConfirmedChangeSettingsToEasy();
	void BPPostPopulateMods();
	void BPPopulateMods(TArray<struct FInstalledMod>* ReturnValue);
	void BPOnUpdateSavedDataButtons();
	void BPIsPresetDifficultyUIOpen(bool* ReturnValue);
	void ActiveModSelected(class UWidget* TheWidget);
};

// 0x250 (0x9A8 - 0x758)
// Class ShooterGame.UI_Hub
class UUI_Hub : public UPrimalUI
{
public:
	class FName                                  TopRecenteringSpacerName;                          // 0x758(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  InventoryMenuButtonName;                           // 0x760(0x8)(EditFixedSize, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  EngramsMenuButtonName;                             // 0x768(0x8)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TribeManagerMenuButtonName;                        // 0x770(0x8)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TameGroupsMenuButtonName;                          // 0x778(0x8)(Edit, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SurvivorProfileMenuButtonName;                     // 0x780(0x8)(Edit, ExportObject, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MissionListMenuButtonName;                         // 0x788(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MinimapMenuButtonName;                             // 0x790(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  OptionsMenuButtonName;                             // 0x798(0x8)(Edit, ConstParm, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SubMenuWidgetSwitcherName;                         // 0x7A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CloseHubButtonName;                                // 0x7A8(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  OpenPauseMenuName;                                 // 0x7B0(0x8)(Edit, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  HexagonCurrencyValuePanelName;                     // 0x7B8(0x8)(Edit, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  HexagonCurrencyValueTextBlockName;                 // 0x7C0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                InventoryUITemplate;                               // 0x7C8(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                TribeManagerUITemplate;                            // 0x7D0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                EngramsMenuUITemplate;                             // 0x7D8(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                TameGroupsUITemplate;                              // 0x7E0(0x8)(ExportObject, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                SurvivorProfileUITemplate;                         // 0x7E8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                MissionListUITemplate;                             // 0x7F0(0x8)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                MinimapUITemplate;                                 // 0x7F8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                OptionsMenuUITemplate;                             // 0x800(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                TamingListUITemplate;                              // 0x808(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                CustomTrackedDinoListUITemplate;                   // 0x810(0x8)(Edit, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             TabSwitchSound;                                    // 0x818(0x8)(Edit, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_489E[0x60];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        SelectedMissionEntryIndex;                         // 0x880(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        SelectedBiomeFilterMask;                           // 0x884(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_489F[0x120];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_Hub* GetDefaultObj();

	void RecenterHub();
	void IsSubMenuActive(enum class EHubSubMenu MenuType, bool* ReturnValue);
	void GetSurvivorProfileMenu(bool bAutoShow, class UUI_SurvivorProfile** ReturnValue);
};

// 0x28 (0x780 - 0x758)
// Class ShooterGame.UI_HudOverlay
class UUI_HudOverlay : public UPrimalUI
{
public:
	class FName                                  HudOverlayWidgetName;                              // 0x758(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UCanvasPanel*                          ToolTipPanel;                                      // 0x760(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48A2[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_HudOverlay* GetDefaultObj();

	enum class EAlignVerticalUI ShowOverlayTooltip(class AShooterPlayerController* HUDOwner, class UObject** SponsorObject, class UClass** ToolTipPrefab, struct FVector2D* ScreenPos, struct FVector2D* WithPadding, struct FVector2D* OverlayScale, bool* bRetainScreenProjectionFromWorld, struct FVector* ScreenProjectionWorldPosition, struct FVector2D* ScreenProjectionPositionOffset, class UToolTipWidget** ReturnValue);
};

// 0x380 (0xAE8 - 0x768)
// Class ShooterGame.UI_Inventory
class UUI_Inventory : public UPrimalSubMenuUI
{
public:
	class FName                                  PanelContainerLeftName;                            // 0x768(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PanelContainerCenterName;                          // 0x770(0x8)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PanelContainerRightName;                           // 0x778(0x8)(Edit, ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  WidgetSwitcherRightName;                           // 0x780(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  QuickActionSlotPanelName;                          // 0x788(0x8)(Edit, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  QuickActionSlotDataListName;                       // 0x790(0x8)(ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PlayerCharacterPanelName;                          // 0x798(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PlayerInventoryPanelName;                          // 0x7A0(0x8)(ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RemoteInventoryPanelName;                          // 0x7A8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  StatsPanelName;                                    // 0x7B0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DinoAncestryOverlayName;                           // 0x7B8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ListSessionsUITemplate;                            // 0x7C0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                SteamInventoryStatusUITemplate;                    // 0x7C8(0x8)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundCue*                             ErrorSound;                                        // 0x7D0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48A3[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bHasRemoteInventory;                               // 0x7F0(0x1)(Edit, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48A4[0x2F7];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_Inventory* GetDefaultObj();

	bool SetInventoryVisibility();
};

// 0x50 (0x7A8 - 0x758)
// Class ShooterGame.UI_LeaderboardWidget
class UUI_LeaderboardWidget : public UPrimalUI
{
public:
	class FName                                  LeaderboardHeaderContainerName;                    // 0x758(0x8)(BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LeaderboardRowContainerName;                       // 0x760(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CloseButtonName;                                   // 0x768(0x8)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TableWidth;                                        // 0x770(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48A5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UPanelWidget*                          HeaderContainer;                                   // 0x778(0x8)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class ULeaderboardRowWidget*                 HeaderRowWidget;                                   // 0x780(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UButton*                               CloseButton;                                       // 0x788(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UVerticalBox*                          RowContainer;                                      // 0x790(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class ULeaderboardRowWidget*>         RowWidgets;                                        // 0x798(0x10)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UUI_LeaderboardWidget* GetDefaultObj();

	TArray<struct FLeaderboardDisplayRow> SetRows(class UClass* LeaderboardRowWidget);
	bool SetLeaderboardWidgetVisible();
};

// 0x328 (0xA80 - 0x758)
// Class ShooterGame.UI_ListCharacterData
class UUI_ListCharacterData : public UPrimalUI
{
public:
	class FName                                  DownloadButtonName;                                // 0x758(0x8)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CancelButtonName;                                  // 0x760(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MyScrollBoxName;                                   // 0x768(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CharacterStatsPanelName;                           // 0x770(0x8)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                CharacterSlotButtonTemplate;                       // 0x778(0x8)(ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CharacterLabelName;                                // 0x780(0x8)(ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CharacterViewPanelName;                            // 0x788(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CharacterViewBlockerName;                          // 0x790(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ExperienceLabelName;                               // 0x798(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ExperienceBarName;                                 // 0x7A0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CharacterHypoThermalInsulationLabelName;           // 0x7A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CharacterHyperThermalInsulationLabelName;          // 0x7B0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  StatsWidgetNames[0xC];                             // 0x7B8(0x60)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CameraFocalOffset;                                 // 0x818(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48A6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                SteamInventoryStatusUITemplate;                    // 0x820(0x8)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48A7[0x258];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_ListCharacterData* GetDefaultObj();

	void CharacterSlotButtonSelected(class UWidget* TheWidget);
};

// 0x1D0 (0x928 - 0x758)
// Class ShooterGame.UI_ListTamedDinos
class UUI_ListTamedDinos : public UPrimalUI
{
public:
	class FName                                  DownloadButtonName;                                // 0x758(0x8)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  UploadButtonName;                                  // 0x760(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CancelButtonName;                                  // 0x768(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MyScrollBoxName;                                   // 0x770(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                DinoSlotButtonTemplate;                            // 0x778(0x8)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CharacterStatsPanelName;                           // 0x780(0x8)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CharacterLabelName;                                // 0x788(0x8)(ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ExperienceLabelName;                               // 0x790(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ExperienceBarName;                                 // 0x798(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CharacterHypoThermalInsulationLabelName;           // 0x7A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CharacterHyperThermalInsulationLabelName;          // 0x7A8(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  StatsLabelNames[0xC];                              // 0x7B0(0x60)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48A8[0x118];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_ListTamedDinos* GetDefaultObj();

};

// 0x2D0 (0xA28 - 0x758)
// Class ShooterGame.UI_MainMenu
class UUI_MainMenu : public UPrimalUI
{
public:
	class FString                                OptionsButtonName;                                 // 0x758(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                HostButtonName;                                    // 0x768(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                JoinButtonName;                                    // 0x778(0x10)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ExitButtonName;                                    // 0x788(0x10)(ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ListSessionsName;                                  // 0x798(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                HelpButtonName;                                    // 0x7A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                NewsLabelName;                                     // 0x7B8(0x10)(Edit, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ConnectingPanelName;                               // 0x7C8(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                EditableTextJoinName;                              // 0x7D0(0x10)(ConstParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  EditableTextJoinPanelName;                         // 0x7E0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ConnectingDialogPanelName;                         // 0x7E8(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ListSessionsUITemplate;                            // 0x7F0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                OptionsMenuUITemplate;                             // 0x7F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                OptionsMenuUITemplate_PC;                          // 0x800(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                OptionsMenuUITemplate_UWP;                         // 0x808(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                HostSessoinUITemplate;                             // 0x810(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                HelpPageUITemplate;                                // 0x818(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                SlotButtonTemplate;                                // 0x820(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                NotifClass;                                        // 0x828(0x8)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                WelcomeClass;                                      // 0x830(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ModShopUITemplate;                                 // 0x838(0x8)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                TermsAndConditionsUITemplate;                      // 0x840(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                UpdatingModsUITemplate;                            // 0x848(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIsNewMainMenu;                                    // 0x850(0x1)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIsPlayingIntroCinematic;                          // 0x851(0x1)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48AA[0x5E];                                    // Fixing Size After Last Property  > TateDumper <
	class UScrollBox*                            TotalConversionsScrollBox;                         // 0x8B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UDataListEntryButton_MainMenu*> TotalConversionsEntryWidgets;                      // 0x8B8(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48AB[0x156];                                   // Fixing Size After Last Property  > TateDumper <
	bool                                         WaitingForPrivileges;                              // 0xA1E(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48AC[0x9];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_MainMenu* GetDefaultObj();

	void TotalConversionSelected(class UWidget* TheWidget);
	void StopIntroCinematic();
	void StopAllCardAnims();
	void StartMainMenuPressed();
	void SettingsOverlayIsOpen(bool* ReturnValue);
	void SetMainJoinedButtonVisibility(enum class ESlateVisibility* NewVisibilty);
	void OverrideBGImage(class UTexture2D** BGOverrideTexture, bool* InstantChange);
	void OpenModShop();
	void OnLastPlayedButtonClicked();
	class UWidget* OnGamepadSelectionChanged();
	void OnCFCoreUIControllerInit();
	void JumpToNonDedicatedView();
	void JumpToListSessionView();
	void JumpToIslandSP();
	void JumpToFirstSP();
	void JoinLastPlayedServerShortcutSkip();
	void HighlightStartButton();
	void HandleDLCInstalledEvent();
	void ForceListSessionToTab();
	void EscapeMainMenuPressed();
};

// 0x1A8 (0x900 - 0x758)
// Class ShooterGame.UI_MapMarkersEntry
class UUI_MapMarkersEntry : public UPrimalUI
{
public:
	class UClass*                                SlotButtonTemplate;                                // 0x758(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TabBgSwitcherName;                                 // 0x760(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AddEnabledEffectName;                              // 0x768(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RemoveEnabledEffectName;                           // 0x770(0x8)(ConstParm, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CloseButtonName;                                   // 0x778(0x8)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AcceptButtonName;                                  // 0x780(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TitleLabelName;                                    // 0x788(0x8)(Edit, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CoordOneLabelName;                                 // 0x790(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CoordTwoLabelName;                                 // 0x798(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MarkerNameLabelName;                               // 0x7A0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MarkerNameTextBoxName;                             // 0x7A8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CoordOneTextBoxName;                               // 0x7B0(0x8)(Edit, ConstParm, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CoordTwoTextBoxName;                               // 0x7B8(0x8)(ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ErrorBlockName;                                    // 0x7C0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RemoveCloseButtonName;                             // 0x7C8(0x8)(BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RemoveAcceptButtonName;                            // 0x7D0(0x8)(Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RemoveMarkersListName;                             // 0x7D8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RemoveMarkersPanelName;                            // 0x7E0(0x8)(ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AddMarkersPanelName;                               // 0x7E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  GoToAddButtonName;                                 // 0x7F0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  GoToRemoveButtonName;                              // 0x7F8(0x8)(ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxOpenTime;                                       // 0x800(0x4)(Edit, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextActiveColor;                           // 0x804(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextInactiveColor;                         // 0x814(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_48AE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FLinearColor>                  ColorSetMarkers;                                   // 0x828(0x10)(ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48AF[0xC8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_MapMarkersEntry* GetDefaultObj();

	class FText OnTextCommitted(enum class ETextCommit CommitMethod);
	class FText OnTextChanged();
	void OnColorSliderValueChanged(float* SliderValue);
	void MarkerButtonSelected(class UWidget* TheWidget);
};

// 0x2A8 (0x5D8 - 0x330)
// Class ShooterGame.UI_MenuCarousel
class UUI_MenuCarousel : public UPrimalUserWidget
{
public:
	class FName                                  EntryContainerName;                                // 0x330(0x8)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PipContainerName;                                  // 0x338(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RolloverProgressName;                              // 0x340(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  NavButtonForwardName;                              // 0x348(0x8)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  NavButtonBackName;                                 // 0x350(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MainButtonCoverName;                               // 0x358(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FCarouselEntryData>            CarouselData;                                      // 0x360(0x10)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FCarouselEntryData>            CarouselData_WebSourced;                           // 0x370(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                DefaultCarouselEntryTemplateClass;                 // 0x380(0x8)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<class FName, class UClass*>             CarouselEntryTemplateClasses;                      // 0x388(0x50)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                DefaultCarouselPipTemplateClass;                   // 0x3D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<class FName, class UClass*>             CarouselPipTemplateClasses;                        // 0x3E0(0x50)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHasInitialized : 1;                               // Mask: 0x1, PropSize: 0x10x430(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHasStarted : 1;                                   // Mask: 0x2, PropSize: 0x10x430(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsDownloadingImages : 1;                          // Mask: 0x4, PropSize: 0x10x430(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseWebDataSource : 1;                             // Mask: 0x8, PropSize: 0x10x430(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseLocalizedWebDataSources : 1;                   // Mask: 0x10, PropSize: 0x10x430(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAddLocToWebRequestData : 1;                       // Mask: 0x20, PropSize: 0x10x430(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseAutoScrollInterval : 1;                        // Mask: 0x40, PropSize: 0x10x430(0x1)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3DC : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_48B0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AutoScrollInterval;                                // 0x434(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48B1[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                WebDataSourceDefaultURL;                           // 0x440(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                WebDataSourceLocalizedURLFormat;                   // 0x450(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                WebDataSourceKeyName;                              // 0x460(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<class FString, class FString>           WebDataSourceRequestHeaders;                       // 0x470(0x50)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<class FString, class FString>           WebDataSourceURLEncodedContent;                    // 0x4C0(0x50)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<class FString, class FString>           ExternalLinkURLEncodedContent;                     // 0x510(0x50)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48B2[0x78];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_MenuCarousel* GetDefaultObj();

	void OnNavForward(class UWidget* TheWidget);
	void OnNavBack(class UWidget* TheWidget);
	void OnMainClick(class UWidget* TheWidget);
	void OnImageDownloadSuccess(class UTexture2DDynamic** NewTexture);
	void OnImageDownloadFailure(class UTexture2DDynamic** NewTexture);
	void OnClickPip(class UWidget* TheWidget);
	class FString DoFocusActionStart(class FString* ActionKey);
	class FString DoFocusActionEnd(class FString* ActionKey);
	class FString DoClickAction(class FString* ActionKey);
	void BlueprintInit();
};

// 0x10 (0x768 - 0x758)
// Class ShooterGame.UI_MenuCarouselButtonWidget
class UUI_MenuCarouselButtonWidget : public UBaseSelectableButtonWidget
{
public:
	class FName                                  TheButtonWidgetName;                               // 0x758(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UCustomButtonWidget*                   TheButton;                                         // 0x760(0x8)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UUI_MenuCarouselButtonWidget* GetDefaultObj();

};

// 0x10 (0x340 - 0x330)
// Class ShooterGame.UI_MenuCarouselEntryWidget
class UUI_MenuCarouselEntryWidget : public UPrimalUserWidget
{
public:
	class FName                                  ResourceImageName;                                 // 0x330(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UImage*                                ResourceImage;                                     // 0x338(0x8)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UUI_MenuCarouselEntryWidget* GetDefaultObj();

	class FString Init();
	float EntryFocusTick();
	bool EntryFocusStart();
	bool EntryFocusEnd();
	class FString BlueprintInit();
	void AllowAutoscrollNavTo(bool* ReturnValue);
};

// 0x8 (0x770 - 0x768)
// Class ShooterGame.UI_MenuCarouselPipWidget
class UUI_MenuCarouselPipWidget : public UUI_MenuCarouselButtonWidget
{
public:
	uint8                                        Pad_48B3[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_MenuCarouselPipWidget* GetDefaultObj();

	bool SetPip();
	void PipStateChanged(bool* NewState);
	void IsPipActive(bool* ReturnValue);
	class FString Init();
	float EntryFocusTick();
	bool EntryFocusStart();
	bool EntryFocusEnd();
	class FString BlueprintInit();
};

// 0x580 (0xCE8 - 0x768)
// Class ShooterGame.UI_MissionList
class UUI_MissionList : public UPrimalSubMenuUI
{
public:
	class FName                                  CloseButtonName;                                   // 0x768(0x8)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TitleLabelName;                                    // 0x770(0x8)(Edit, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MissionListContainerName;                          // 0x778(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MissionDetailsContainerName;                       // 0x780(0x8)(ExportObject, BlueprintReadOnly, Net, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MissionDetails_MissionNameTextBlockName;           // 0x788(0x8)(Edit, ConstParm, Net, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MissionDetails_MissionDescriptionTextBlockName;    // 0x790(0x8)(Edit, ConstParm, ExportObject, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MissionDetails_StartMissionButtonName;             // 0x798(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MissionDetails_StartMissionButtonTextName;         // 0x7A0(0x8)(Edit, Net, EditFixedSize, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MissionDetails_LeaderboardsButtonName;             // 0x7A8(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MissionDetails_LeaderboardsButtonTextName;         // 0x7B0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MissionDetails_DifficultyTextBlockName;            // 0x7B8(0x8)(Edit, ConstParm, Net, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MissionStatusPanelName;                            // 0x7C0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                MetaTagInfoClass;                                  // 0x7C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                MissionList_WidgetType;                            // 0x7D0(0x8)(Edit, ConstParm, ExportObject, Parm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                MissionRequirement_WidgetType;                     // 0x7D8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                MissionObjective_WidgetType;                       // 0x7E0(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                MissionTimer_WidgetType;                           // 0x7E8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                WorldBuffEffectListEntry_WidgetType;               // 0x7F0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                MissionRequirementEntry_WidgetType;                // 0x7F8(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                StartButtonDisplayText_StartMission;               // 0x800(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                StartButtonDisplayText_LeaveMission;               // 0x810(0x10)(Edit, ConstParm, BlueprintVisible, Net, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                StartButtonDisplayText_EnableStatTracker;          // 0x820(0x10)(ConstParm, BlueprintReadOnly, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                StartButtonDisplayText_DisableStatTracker;         // 0x830(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MissionList_EntryButtonWidgetName;                 // 0x840(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MissionList_NameWidgetName;                        // 0x848(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MissionList_DescWidgetName;                        // 0x850(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MissionList_ErrorTextWidgetName;                   // 0x858(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MissionList_EligibilityWidgetName;                 // 0x860(0x8)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MissionList_StartButtonTextWidgetName;             // 0x868(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MissionList_StartButtonWidgetName;                 // 0x870(0x8)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            ArcticIcon;                                        // 0x878(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            BogIcon;                                           // 0x880(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            LunarIcon;                                         // 0x888(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            OceanIcon;                                         // 0x890(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            VolcanicIcon;                                      // 0x898(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            SoloIcon;                                          // 0x8A0(0x8)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            MultiplayerIcon;                                   // 0x8A8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TableWidth;                                        // 0x8B0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LatestScoreTableWidth;                             // 0x8B4(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxLeaderboardRowsToDisplay;                       // 0x8B8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextActiveColor;                           // 0x8BC(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextInactiveColor;                         // 0x8CC(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_48B4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            TabBackgroundTexture;                              // 0x8E0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            TabMirroredBackgroundTexture;                      // 0x8E8(0x8)(BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          AlphaMissionColor;                                 // 0x8F0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          BetaMissionColor;                                  // 0x900(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          GammaMissionColor;                                 // 0x910(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          ActiveMissionColor;                                // 0x920(0x10)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          InactiveMissionColor;                              // 0x930(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          AvailableMissionColor;                             // 0x940(0x10)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          UnavailableMissionColor;                           // 0x950(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          DefaultTextColor;                                  // 0x960(0x10)(Edit, BlueprintReadOnly, Net, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	struct FLinearColor                          GlitchTintColor;                                   // 0x970(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          GlitchTextColor;                                   // 0x980(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48B5[0x2C8];                                   // Fixing Size After Last Property  > TateDumper <
	class ULeaderboardRowWidget*                 HeaderRowWidget;                                   // 0xC58(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UVerticalBox*                          RowContainer;                                      // 0xC60(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class ULeaderboardRowWidget*>         RowWidgets;                                        // 0xC68(0x10)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class ULeaderboardRowWidget*                 LatestScoreRowWidget;                              // 0xC78(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UVerticalBox*                          LatestPlayerScoreRowContainer;                     // 0xC80(0x8)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48B6[0x60];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_MissionList* GetDefaultObj();

	class FText OnMissionFilterChanged();
};

// 0x48 (0x7A0 - 0x758)
// Class ShooterGame.UI_MultiUse
class UUI_MultiUse : public UPrimalUI
{
public:
	class FName                                  MyScrollBoxName;                                   // 0x758(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ActorDescriptionLabelName;                         // 0x760(0x8)(ConstParm, Net, EditFixedSize, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ButtonEntryWidgetTemplate;                         // 0x768(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48B7[0x30];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_MultiUse* GetDefaultObj();

	class UWidget* ClickedEntry();
};

// 0x60 (0x7B8 - 0x758)
// Class ShooterGame.UI_Notification
class UUI_Notification : public UPrimalUI
{
public:
	class FName                                  TitleLabelName;                                    // 0x758(0x8)(Edit, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MessageLabelName;                                  // 0x760(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  OkButtonName;                                      // 0x768(0x8)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  BoxCanvasPanelName;                                // 0x770(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bReturnToMainMenuOnClose;                          // 0x778(0x1)(BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48B8[0x3F];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_Notification* GetDefaultObj();

};

// 0x78 (0x7E0 - 0x768)
// Class ShooterGame.UI_OptionsMenu
class UUI_OptionsMenu : public UPrimalSubMenuUI
{
public:
	class UClass*                                EntryTemplate;                                     // 0x768(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FOptionsSet>                   OptionsSets;                                       // 0x770(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48B9[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class UPrimalUserWidget>       ModShopUIClass;                                    // 0x7B0(0x30)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UUI_OptionsMenu* GetDefaultObj();

	class UWidget* ResetTutorials();
	class UWidget* ResetCinematics();
	class UWidget* OpenModShop();
	class FString OnGraphicsQualityComboBoxChanged();
	void OnGraphicsPresetValueChanged();
};

// 0x438 (0xBA0 - 0x768)
// Class ShooterGame.UI_OptionsMenu_UWP
class UUI_OptionsMenu_UWP : public UPrimalSubMenuUI
{
public:
	class FName                                  SaveButtonName;                                    // 0x768(0x8)(ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ApplyButtonName;                                   // 0x770(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ResetButtonName;                                   // 0x778(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CancelButtonName;                                  // 0x780(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ResolutionWidthTextBoxName;                        // 0x788(0x8)(BlueprintReadOnly, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ResolutionHeightTextBoxName;                       // 0x790(0x8)(Edit, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ResolutionsComboBoxName;                           // 0x798(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  WindowModeComboBoxName;                            // 0x7A0(0x8)(ExportObject, Net, EditFixedSize, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  GraphicsQualityComboBoxName;                       // 0x7A8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ResolutionScaleSliderName;                         // 0x7B0(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ViewDistanceComboBoxName;                          // 0x7B8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AntiAliasingComboBoxName;                          // 0x7C0(0x8)(Edit, BlueprintReadOnly, Net, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PostProcessingComboBoxName;                        // 0x7C8(0x8)(Edit, ConstParm, Net, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ShadowsComboBoxName;                               // 0x7D0(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TexturesComboBoxName;                              // 0x7D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  EffectsComboBoxName;                               // 0x7E0(0x8)(ConstParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AudioVolumeSliderName;                             // 0x7E8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FKeyBindingItem>               KeyBindings;                                       // 0x7F0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  InvertMouseYCheckBoxName;                          // 0x800(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CameraShakeScaleSliderName;                        // 0x808(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FirstPersonRidingCheckboxName;                     // 0x810(0x8)(BlueprintVisible, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ToggleToTalkCheckBoxName;                          // 0x818(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ToggleExtendedHUDInfoCheckboxName;                 // 0x820(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48BC[0x378];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_OptionsMenu_UWP* GetDefaultObj();

	float OptionsGraphTick(const struct FGeometry& MyGeometry);
	class FText OnWidthChanged();
	enum class ESelectInfo OnViewDistanceComboBoxSelectionChanged();
	enum class ESelectInfo OnResolutionsComboBoxSelectionChanged();
	void OnResolutionScaleChanged(float* SliderValue);
	class FText OnHeightChanged();
	class FString OnGraphicsQualityComboBoxChanged();
	void OnGraphicsPresetValueChanged();
};

// 0x1A8 (0x900 - 0x758)
// Class ShooterGame.UI_PaintingsList
class UUI_PaintingsList : public UPrimalUI
{
public:
	class FName                                  PaintingListName;                                  // 0x758(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SelectButtonName;                                  // 0x760(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CloseButtonName;                                   // 0x768(0x8)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DeleteButtonName;                                  // 0x770(0x8)(Edit, ConstParm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FailCloseButtonName;                               // 0x778(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LoadingLabelName;                                  // 0x780(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LoadingCanvasName;                                 // 0x788(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MissingTextName;                                   // 0x790(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  NeededTextName;                                    // 0x798(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ResourcesScrollBoxName;                            // 0x7A0(0x8)(ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MissingScrollBoxName;                              // 0x7A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RenamePaintingName;                                // 0x7B0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                SlotButtonTemplate;                                // 0x7B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ResourceEntryTemplate;                             // 0x7C0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48BD[0xA4];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         UploadingTribeFlag;                                // 0x86C(0x1)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48BE[0x73];                                    // Fixing Size After Last Property  > TateDumper <
	class UPaintingTexture*                      Preview;                                           // 0x8E0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_48BF[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_PaintingsList* GetDefaultObj();

	void SetUploadingTribeFlag(bool AutoUploadLastPainting, bool bCloseParentUIAfterFinished);
};

// 0x0 (0x758 - 0x758)
// Class ShooterGame.UI_PartySystem
class UUI_PartySystem : public UPrimalUI
{
public:

	static class UClass* StaticClass();
	static class UUI_PartySystem* GetDefaultObj();

};

// 0x260 (0x9B8 - 0x758)
// Class ShooterGame.UI_PauseMenu
class UUI_PauseMenu : public UPrimalUI
{
public:
	class FString                                CloseButtonName;                                   // 0x758(0x10)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                QuitButtonName;                                    // 0x768(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                QuitButtonTextBlockName;                           // 0x778(0x10)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                TestWidgetName;                                    // 0x788(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  InventoryButtonName;                               // 0x798(0x8)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TribeManagerButtonName;                            // 0x7A0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  OptionsButtonName;                                 // 0x7A8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                InviteFriendsButtonName;                           // 0x7B0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ServerPingTextBlockName;                           // 0x7C0(0x8)(EditFixedSize, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                HelpButtonName;                                    // 0x7C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                LeaveSplitScreenButtonName;                        // 0x7D8(0x10)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TSoftClassPtr<class UUI_OptionsMenu>         OptionsMenuUITemplate;                             // 0x7E8(0x30)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ConsoleCommandUITemplate;                          // 0x818(0x8)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TSoftClassPtr<class UUI_OptionsMenu_UWP>     OptionsMenuUITemplate_UWP;                         // 0x820(0x30)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TSoftClassPtr<class UUI_PCOptionsMenu>       OptionsMenuUITemplate_PC;                          // 0x850(0x30)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AShooterWeapon>>  HandcuffList;                                      // 0x880(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48C0[0x128];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_PauseMenu* GetDefaultObj();

	void UpdateRespawnButtonLabel();
	class FString UpdatePlayerList();
	void OpenConsoleCommandUI();
};

// 0x7C8 (0xF30 - 0x768)
// Class ShooterGame.UI_PCOptionsMenu
class UUI_PCOptionsMenu : public UPrimalSubMenuUI
{
public:
	class FName                                  SaveButtonName;                                    // 0x768(0x8)(ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ApplyButtonName;                                   // 0x770(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ResetButtonName;                                   // 0x778(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CancelButtonName;                                  // 0x780(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ResolutionWidthTextBoxName;                        // 0x788(0x8)(BlueprintReadOnly, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ResolutionHeightTextBoxName;                       // 0x790(0x8)(Edit, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ResolutionsComboBoxName;                           // 0x798(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  WindowModeComboBoxName;                            // 0x7A0(0x8)(ExportObject, Net, EditFixedSize, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  GraphicsQualityComboBoxName;                       // 0x7A8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ResolutionScaleSliderName;                         // 0x7B0(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ViewDistanceComboBoxName;                          // 0x7B8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AntiAliasingComboBoxName;                          // 0x7C0(0x8)(Edit, BlueprintReadOnly, Net, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PostProcessingComboBoxName;                        // 0x7C8(0x8)(Edit, ConstParm, Net, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ShadowsComboBoxName;                               // 0x7D0(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TexturesComboBoxName;                              // 0x7D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  EffectsComboBoxName;                               // 0x7E0(0x8)(ConstParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AudioVolumeSliderName;                             // 0x7E8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FKeyBindingItem>               KeyBindings;                                       // 0x7F0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  InvertMouseYCheckBoxName;                          // 0x800(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CameraShakeScaleSliderName;                        // 0x808(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FirstPersonRidingCheckboxName;                     // 0x810(0x8)(BlueprintVisible, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ToggleToTalkCheckBoxName;                          // 0x818(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ToggleFluidInteractionCheckboxName;                // 0x820(0x8)(Edit, ConstParm, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ToggleExtendedHUDInfoCheckboxName;                 // 0x828(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CrosshairSizeSliderName;                           // 0x830(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CrosshairOpacitySliderName;                        // 0x838(0x8)(ExportObject, Net, EditFixedSize, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CrosshairColorSliderName_R;                        // 0x840(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CrosshairColorSliderName_G;                        // 0x848(0x8)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CrosshairColorSliderName_B;                        // 0x850(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FramecapTextBoxName;                               // 0x858(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  EnableFramecapCheckBoxName;                        // 0x860(0x8)(Edit, BlueprintVisible, Net, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bCancelButtonIsBackButton;                         // 0x868(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48C4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  TextChatFilterComboBoxName;                        // 0x86C(0x8)(Edit, ExportObject, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  VoiceChatFilterComboBoxName;                       // 0x874(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  VirtualCursorSensitivitySliderName;                // 0x87C(0x8)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  BubbleParticlesMultiplierSliderName;               // 0x884(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ControllerVibrationCheckboxName;                   // 0x88C(0x8)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ControllerUIVibrationCheckboxName;                 // 0x894(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DisablePaintingsCheckboxName;                      // 0x89C(0x8)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DisableVirtualCursorCheckboxName;                  // 0x8A4(0x8)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48C5[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class UPrimalUserWidget>       ModShopUIClass;                                    // 0x8B8(0x30)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48C6[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bHasChangedAnyValue;                               // 0x918(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48C7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ConfirmationDialogType;                            // 0x91C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48C8[0x328];                                   // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             CrosshairColorPickerValue;                         // 0xC48(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, EditConst, SubobjectReference)
	uint8                                        Pad_48C9[0x2D8];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_PCOptionsMenu* GetDefaultObj();

	void UseConsoleVideoOptions(bool* ReturnValue);
	bool UseAutoDetectSettingsCheckboxChanged();
	void UnblockAllModsCallback(bool* Accepted);
	void ShowFinalUnblockModsMessage();
	void ResetOptionsMenuValueChanged();
	void OptionsMenuValueChanged();
	float OptionsGraphTick(const struct FGeometry& MyGeometry);
	class UWidget* OpenModShop();
	class FText OnWidthChanged();
	enum class ESelectInfo OnViewDistanceComboBoxSelectionChanged();
	enum class ESelectInfo OnResolutionsComboBoxSelectionChanged();
	class FText OnHeightChanged();
	class FString OnGraphicsQualityComboBoxChanged();
	void OnGraphicsPresetValueChanged();
	class FText OnFPSCapChanged();
	enum class ESelectInfo OnComboBoxGenericChanged();
	void LoadSettings();
	void IsPC(bool* ReturnValue);
	void IsNvidiaGraphicCard(bool* ReturnValue);
	void InitializeUI();
	void GetLivePCOptionsMenu(class UUI_PCOptionsMenu** ReturnValue);
	void CancelUnblockAllMods(bool* bAccept);
	void BackButtonClicked();
};

// 0xC0 (0x818 - 0x758)
// Class ShooterGame.UI_PinEntry
class UUI_PinEntry : public UPrimalUI
{
public:
	class FName                                  CloseButtonName;                                   // 0x758(0x8)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  UseLastPinButtonName;                              // 0x760(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  UseLastPinButtonLabelName;                         // 0x768(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ToggleShowLastPinButtonName;                       // 0x770(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ToggleShowLastPinButtonLabelName;                  // 0x778(0x8)(Edit, BlueprintVisible, Net, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PinLabelName;                                      // 0x780(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TitleLabelName;                                    // 0x788(0x8)(Edit, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          PinButtonsNames;                                   // 0x790(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48CA[0x78];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_PinEntry* GetDefaultObj();

};

// 0x2B0 (0xA40 - 0x790)
// Class ShooterGame.UI_PreviewWidget
class UUI_PreviewWidget : public UCustomCanvasWidget
{
public:
	uint8                                        Pad_48CB[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    RenderMaterial;                                    // 0x798(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FOV;                                               // 0x7A0(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, GlobalConfig)
	uint8                                        Pad_48CC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UTextureRenderTarget2D*>        RenderTargets;                                     // 0x7A8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               MeshScale;                                         // 0x7B8(0x18)(BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              MeshRotation;                                      // 0x7D0(0x18)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CameraPivotOffset;                                 // 0x7E8(0x18)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               OverrideCameraOffset;                              // 0x800(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             PanExtents;                                        // 0x818(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CustomLimitedPanExtentsY;                          // 0x828(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PanSpeed;                                          // 0x82C(0x4)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PanBrakeSpeed;                                     // 0x830(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CameraDistance;                                    // 0x834(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaximumZoomMultiplier;                             // 0x838(0x4)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinimumZoomMultiplier;                             // 0x83C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DefaultZoomMultiplier;                             // 0x840(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PCRenderTargetScale;                               // 0x844(0x4)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bLimitPivotOffset;                                 // 0x848(0x1)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48CD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxLimitPivotOffset;                               // 0x84C(0x4)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FemalePivotOffsetMultiplier;                       // 0x850(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        BrakeSpeed;                                        // 0x854(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ZoomInterpSpeed;                                   // 0x858(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WheelDeltaMultiplier;                              // 0x85C(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RotationSpeed;                                     // 0x860(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinPitch;                                          // 0x864(0x4)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxPitch;                                          // 0x868(0x4)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAutoRotateWidget;                                 // 0x86C(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48CE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              AutoRotator;                                       // 0x870(0x18)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bCanResetCamera;                                   // 0x888(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ESkyLightSourceType               AmbientSourceType;                                 // 0x889(0x1)(ConstParm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_48CF[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UTextureCube*                          AmbientCubemap;                                    // 0x890(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                AmbientLightColor;                                 // 0x898(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AmbientBrightness;                                 // 0x89C(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSwapInput : 1;                                    // Mask: 0x1, PropSize: 0x10x8A0(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bChangeDirectionalLightRelativeRotation : 1;       // Mask: 0x2, PropSize: 0x10x8A0(0x1)(BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_3DD : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_48D0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              DirectionalLightRelativeRotation;                  // 0x8A8(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               DirectionalLightRelativeLocation;                  // 0x8C0(0x18)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FColor                                DirectionalLightColor;                             // 0x8D8(0x4)(ConstParm, Parm, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DirectionalLightBrightness;                        // 0x8DC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RTQualityMultiplier;                               // 0x8E0(0x4)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OverrideShadowBias;                                // 0x8E4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTextureRenderTarget2D*                RenderTarget;                                      // 0x8E8(0x8)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        ZoomMultiplier;                                    // 0x8F0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       UpdateSkyTickCount;                                // 0x8F4(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48D1[0x48];                                    // Fixing Size After Last Property  > TateDumper <
	class UWorld*                                GameWorld;                                         // 0x940(0x8)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TargetZoomMultiplier;                              // 0x948(0x4)(ConstParm, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48D2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class USceneComponent*>               PreviewComponents;                                 // 0x950(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             RotationVelocity;                                  // 0x960(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             PanVelocity;                                       // 0x970(0x10)(ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             Pan;                                               // 0x980(0x10)(Edit, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	class UMeshComponent*                        PreviewMesh;                                       // 0x990(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst)
	class UWorld*                                PreviewWorld;                                      // 0x998(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USceneCaptureComponent2D*              CaptureComponent;                                  // 0x9A0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UDirectionalLightComponent*            DirctionalLight;                                   // 0x9A8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USkyLightComponent*                    SkyLight;                                          // 0x9B0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, EditConst)
	class ULineBatchComponent*                   LineBatcher;                                       // 0x9B8(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          PreviewWidgetColorFactor;                          // 0x9C0(0x10)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48D3[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class APrimalPreviewSceneSetup*              PreviewSceneSetup;                                 // 0x9E0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                PreviewSceneSetupTemplate;                         // 0x9E8(0x8)(Edit, BlueprintVisible, ExportObject, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalPreviewSceneSetup> PreviewSceneSetupTemplateSoftRef;                  // 0x9F0(0x30)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bManuallyInitializePreviewSceneSetup;              // 0xA20(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48D4[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              OrbitRotation;                                     // 0xA28(0x18)(Edit, Net, EditFixedSize, Parm, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UUI_PreviewWidget* GetDefaultObj();

	void UpdateSkyCaptures();
	float SetTargetZoomMultiplier();
	void ResetZoomTo(float* Zoom);
	void InitializePreviewSceneSetup();
	void GetPreviewMesh(class UMeshComponent** ReturnValue);
	void GetMeshComponent(class UMeshComponent** ReturnValue);
	void GetCaptureComponent(class USceneCaptureComponent2D** ReturnValue);
	void ClearRotationVelocity();
};

// 0x20 (0x778 - 0x758)
// Class ShooterGame.UI_PrimalTest
class UUI_PrimalTest : public UPrimalUI
{
public:
	class FString                                VerticalBoxName;                                   // 0x758(0x10)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ChildWidgetTemplate;                               // 0x768(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48D5[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_PrimalTest* GetDefaultObj();

};

// 0xD90 (0x14E8 - 0x758)
// Class ShooterGame.UI_ProceduralSettings
class UUI_ProceduralSettings : public UPrimalUI
{
public:
	class FName                                  CancelButtonName;                                  // 0x758(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  HostButtonName;                                    // 0x760(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ResetButtonName;                                   // 0x768(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RandomizeButtonName;                               // 0x770(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LoadFavoriteButtonName;                            // 0x778(0x8)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SaveFavoriteButtonName;                            // 0x780(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PresetsComboBoxName;                               // 0x788(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FavoriteComboBoxName;                              // 0x790(0x8)(Edit, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ArkNameTextBoxName;                                // 0x798(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MapSeedTextBoxName;                                // 0x7A0(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LandscapeRadiusTextBoxName;                        // 0x7A8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  WaterFrequencyTextBoxName;                         // 0x7B0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MountainFrequencyTextBoxName;                      // 0x7B8(0x8)(ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MountainSlopeTextBoxName;                          // 0x7C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MountainHeightTextBoxName;                         // 0x7C8(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TurbulencePowerTextBoxName;                        // 0x7D0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ShoreSlopeTextBoxName;                             // 0x7D8(0x8)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  WaterLevelTextBoxName;                             // 0x7E0(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  GrassDensityTextBoxName;                           // 0x7E8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  JungleGrassDensityTextBoxName;                     // 0x7F0(0x8)(BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  OceanFloorLevelTextBoxName;                        // 0x7F8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SnowBiomeSizeTextBoxName;                          // 0x800(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RedwoodBiomeSizeTextBoxName;                       // 0x808(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MountainBiomeStartTextBoxName;                     // 0x810(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MountainTreeDensityTextBoxName;                    // 0x818(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  JungleBiomeStartTextBoxName;                       // 0x820(0x8)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  IslandBorderCurveTextBoxName;                      // 0x828(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MaxSawnHeightTextBoxName;                          // 0x830(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MountainGrassDensityTextBoxName;                   // 0x838(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SnowGrassDensityTextBoxName;                       // 0x840(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SnowMountainGrassDensityTextBoxName;               // 0x848(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SnowBiomeLocationXTextBoxName;                     // 0x850(0x8)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SnowBiomeLocationYTextBoxName;                     // 0x858(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RedwoodBiomeLocationXTextBoxName;                  // 0x860(0x8)(Edit, ConstParm, ExportObject, Net, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RedwoodBiomeLocationYTextBoxName;                  // 0x868(0x8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TerrainScaleXTextBoxName;                          // 0x870(0x8)(Edit, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TerrainScaleYTextBoxName;                          // 0x878(0x8)(OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TerrainScaleZTextBoxName;                          // 0x880(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  North1StartXTextBoxName;                           // 0x888(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  North1StartYTextBoxName;                           // 0x890(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  North1EndXTextBoxName;                             // 0x898(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  North1EndYTextBoxName;                             // 0x8A0(0x8)(Edit, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  North2StartXTextBoxName;                           // 0x8A8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  North2StartYTextBoxName;                           // 0x8B0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  North2EndXTextBoxName;                             // 0x8B8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  North2EndYTextBoxName;                             // 0x8C0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  North3StartXTextBoxName;                           // 0x8C8(0x8)(ConstParm, Parm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  North3StartYTextBoxName;                           // 0x8D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  North3EndXTextBoxName;                             // 0x8D8(0x8)(Edit, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  North3EndYTextBoxName;                             // 0x8E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  South1StartXTextBoxName;                           // 0x8E8(0x8)(BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  South1StartYTextBoxName;                           // 0x8F0(0x8)(Edit, ConstParm, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  South1EndXTextBoxName;                             // 0x8F8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  South1EndYTextBoxName;                             // 0x900(0x8)(Edit, ConstParm, ExportObject, Net, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  South2StartXTextBoxName;                           // 0x908(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  South2StartYTextBoxName;                           // 0x910(0x8)(Edit, BlueprintReadOnly, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  South2EndXTextBoxName;                             // 0x918(0x8)(Edit, BlueprintVisible, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  South2EndYTextBoxName;                             // 0x920(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  South3StartXTextBoxName;                           // 0x928(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  South3StartYTextBoxName;                           // 0x930(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  South3EndXTextBoxName;                             // 0x938(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  South3EndYTextBoxName;                             // 0x940(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  East1StartXTextBoxName;                            // 0x948(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  East1StartYTextBoxName;                            // 0x950(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  East1EndXTextBoxName;                              // 0x958(0x8)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  East1EndYTextBoxName;                              // 0x960(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  East2StartXTextBoxName;                            // 0x968(0x8)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  East2StartYTextBoxName;                            // 0x970(0x8)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  East2EndXTextBoxName;                              // 0x978(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  East2EndYTextBoxName;                              // 0x980(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  East3StartXTextBoxName;                            // 0x988(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  East3StartYTextBoxName;                            // 0x990(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  East3EndXTextBoxName;                              // 0x998(0x8)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  East3EndYTextBoxName;                              // 0x9A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  West1StartXTextBoxName;                            // 0x9A8(0x8)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  West1StartYTextBoxName;                            // 0x9B0(0x8)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  West1EndXTextBoxName;                              // 0x9B8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  West1EndYTextBoxName;                              // 0x9C0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  West2StartXTextBoxName;                            // 0x9C8(0x8)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  West2StartYTextBoxName;                            // 0x9D0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  West2EndXTextBoxName;                              // 0x9D8(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  West2EndYTextBoxName;                              // 0x9E0(0x8)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  West3StartXTextBoxName;                            // 0x9E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  West3StartYTextBoxName;                            // 0x9F0(0x8)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  West3EndXTextBoxName;                              // 0x9F8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  West3EndYTextBoxName;                              // 0xA00(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48D8[0xAE0];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_ProceduralSettings* GetDefaultObj();

	class FText OnTextCommitted(enum class ETextCommit CommitMethod);
	enum class ESelectInfo OnPresetSelectionChanged();
};

// 0x60 (0x7B8 - 0x758)
// Class ShooterGame.UI_SavePainting
class UUI_SavePainting : public UPrimalUI
{
public:
	class FName                                  CloseButtonName;                                   // 0x758(0x8)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SaveButtonName;                                    // 0x760(0x8)(ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FileNameTextBoxName;                               // 0x768(0x8)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ErrorTextBoxName;                                  // 0x770(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48DA[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         OverrideExisting;                                  // 0x780(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_48DB[0x37];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_SavePainting* GetDefaultObj();

	void HandleFilterStringTextCommitted(class FText* NewText, enum class ETextCommit CommitMethod);
	void HandleFilterStringTextChanged(class FText* NewText);
};

// 0x8 (0x760 - 0x758)
// Class ShooterGame.UI_SavingOverlay
class UUI_SavingOverlay : public UPrimalUI
{
public:
	uint8                                        Pad_48DC[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_SavingOverlay* GetDefaultObj();

};

// 0xC8 (0x820 - 0x758)
// Class ShooterGame.UI_ServerBroadcastMessage
class UUI_ServerBroadcastMessage : public UPrimalUI
{
public:
	class FString                                MessageTextBlockName;                              // 0x758(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FSlateFontInfo                        BoldFont;                                          // 0x768(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FSlateFontInfo                        RegularFont;                                       // 0x7C0(0x58)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48DD[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_ServerBroadcastMessage* GetDefaultObj();

};

// 0x38 (0x790 - 0x758)
// Class ShooterGame.UI_SessionSortArrow
class UUI_SessionSortArrow : public UPrimalUI
{
public:
	uint8                                        Pad_48DE[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  ImageName;                                         // 0x760(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            UpImage;                                           // 0x768(0x8)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            DownImage;                                         // 0x770(0x8)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            EmptyImage;                                        // 0x778(0x8)(Edit, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48DF[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_SessionSortArrow* GetDefaultObj();

};

// 0xA10 (0x1168 - 0x758)
// Class ShooterGame.UI_Spawn
class UUI_Spawn : public UPrimalUI
{
public:
	class FName                                  SkinColorPreviewName;                              // 0x758(0x8)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  HairColorPreviewName;                              // 0x760(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  EyeColorPreviewName;                               // 0x768(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SavedPresetListPanelName;                          // 0x770(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SavedBonePresetsListPanelName;                     // 0x778(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  IslandRgionButtonListPanelName;                    // 0x780(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LoadConfirmationButtonName;                        // 0x788(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CancelLoadButtonName;                              // 0x790(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LoadFromFileScrollBoxName;                         // 0x798(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LoadBonePresetsConfirmationButtonName;             // 0x7A0(0x8)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CancelLoadBonePresetsButtonName;                   // 0x7A8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LoadBonePresetsFromFileScrollBoxName;              // 0x7B0(0x8)(Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RandomizeButtonName;                               // 0x7B8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TabBgSwitcherName;                                 // 0x7C0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MaleEnabledEffectName;                             // 0x7C8(0x8)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FemaleEnabledEffectName;                           // 0x7D0(0x8)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SaveToFileButtonName;                              // 0x7D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LoadFromFileButtonName;                            // 0x7E0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LoadBonePresetFromFileButtonName;                  // 0x7E8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                PreviewWidgetName;                                 // 0x7F0(0x10)(Edit, ConstParm, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RespawnButtonName;                                 // 0x800(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CreateNewPlayerButtonName;                         // 0x808(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DefaultDestinationButtonName;                      // 0x810(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DefaultDestinationButtonLabelName;                 // 0x818(0x8)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RespawnLabelName;                                  // 0x820(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MyScrollBoxName;                                   // 0x828(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CharConfigMaleButtonName;                          // 0x830(0x8)(BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CharConfigFemaleButtonName;                        // 0x838(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DoCreateNewPlayerButtonName;                       // 0x840(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  NewCharacterPanelName;                             // 0x848(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RespawnPanelName;                                  // 0x850(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RespawnPanelButtonName;                            // 0x858(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RespawnPanelMapName;                               // 0x860(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  GenderLabelName;                                   // 0x868(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  BodyColorSliderName;                               // 0x870(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  HairColorSliderName;                               // 0x878(0x8)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  HairTipColorSliderName;                            // 0x880(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  BeardColorSliderName;                              // 0x888(0x8)(ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  BeardTipColorSliderName;                           // 0x890(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  EyeColorSliderName;                                // 0x898(0x8)(Edit, ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  EyeIrisColorSliderName;                            // 0x8A0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  EyebrowStyleSliderName;                            // 0x8A8(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  HairStyleSliderName;                               // 0x8B0(0x8)(Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  HairLengthSliderName;                              // 0x8B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  BeardLengthSliderName;                             // 0x8C0(0x8)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  BeardStyleSliderName;                              // 0x8C8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  GlobalMuscleMaterialSliderName;                    // 0x8D0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  GlobalFatMaterialSliderName;                       // 0x8D8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DebugLightsUIName;                                 // 0x8E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FBoneModifierSlider>           BoneModifiersSliders;                              // 0x8E8(0x10)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FDynamicMaterialSlider>        DynamicMaterialSliders;                            // 0x8F8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PlayerVoiceSelectorComboboxName;                   // 0x908(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48F0[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bPlayVoiceSample;                                  // 0x918(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48F1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  CharacterNameBoxName;                              // 0x91C(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RespawnButtonLabelName;                            // 0x924(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48F2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                SlotButtonTemplate;                                // 0x930(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RequestSpawnPointsInterval;                        // 0x938(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DownloadCharacterDataButtonName;                   // 0x93C(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ShowRegionsButtonName;                             // 0x944(0x8)(ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ShowBedsButtonName;                                // 0x94C(0x8)(ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48F3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ListCharacterDataSceneTemplate;                    // 0x958(0x8)(ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextActiveColor;                           // 0x960(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextInactiveColor;                         // 0x970(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_48F4[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FCameraLocationSetting>        CameraSettingsPerTab;                              // 0x988(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FCameraLocationSetting>        CameraSettingsPerTabFemale;                        // 0x998(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48F5[0x40];                                    // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class UAnimInstance>           OverwrittenAnimbpMale;                             // 0x9E8(0x30)(Edit, ConstParm, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TSoftClassPtr<class UAnimInstance>           OverwrittenAnimbpFemale;                           // 0xA18(0x30)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48F6[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsFastTravel;                                     // 0xA49(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bCharacterFirstSpawn;                              // 0xA4A(0x1)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIsRespawning;                                     // 0xA4B(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        CurrentSpawnPointID;                               // 0xA4C(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class APrimalStructure>       FastTravelIgnoreBed;                               // 0xA50(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48F7[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FCharacterPreset>              GenericCharacterPresets;                           // 0xA60(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48F8[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             MousePositionOverCharacterView;                    // 0xA80(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48F9[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	class AShooterCharacter*                     PreviewCharacter;                                  // 0xAB0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UUI_PreviewWidget*                     PreviewWidget;                                     // 0xAB8(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48FA[0xB8];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UDinoListButtonWidget*>         EntryWidgets;                                      // 0xB78(0x10)(Edit, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_48FB[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UDinoListButtonWidget*>         RespawnEntryWidgets;                               // 0xBB8(0x10)(ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UDinoListButtonWidget*>         SavedPresetWidgets;                                // 0xBC8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48FC[0x80];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        MaxDistanceForMultiSpawnPointSelect;               // 0xC58(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48FD[0x3C];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UDinoListButtonWidget*>         MultiSpawnPointWidgets;                            // 0xC98(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48FE[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bCharConfigIsFemale;                               // 0xCF8(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_48FF[0x1C7];                                   // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSavedVoiceCollectionActualIndex> MasculineVoiceOptions;                             // 0xEC0(0x10)(ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FSavedVoiceCollectionActualIndex> FeminineVoiceOptions;                              // 0xED0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FSavedVoiceCollectionActualIndex> AdditionalVoiceOptions;                            // 0xEE0(0x10)(Edit, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FSavedVoiceCollectionActualIndex> CustomModVoiceOptions;                             // 0xEF0(0x10)(Edit, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FSavedVoiceCollectionActualIndex> CurrentlyDisplayedVoiceOptions;                    // 0xF00(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FPlayerBoneBodyPreset>         MaleOnlyBodyBonePresetOptions;                     // 0xF10(0x10)(Edit, BlueprintVisible, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FPlayerBoneBodyPreset>         FemaleOnlyBodyBonePresetOptions;                   // 0xF20(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FPlayerBoneBodyPreset>         UniversalBodyBonePresetOptions;                    // 0xF30(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FPlayerBoneBodyPreset>         Custom_MaleOnlyBodyBonePresetOptions;              // 0xF40(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FPlayerBoneBodyPreset>         Custom_FemaleOnlyBodyBonePresetOptions;            // 0xF50(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FPlayerBoneBodyPreset>         Custom_UniversalBodyBonePresetOptions;             // 0xF60(0x10)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FPlayerBoneBodyPreset>         CurrentlyDisplayedBodyBonePresetOptions;           // 0xF70(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FPlayerBoneBodyPreset                 CachedBodyBonePreset;                              // 0xF80(0x60)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FCustomPreviewMeshInfo>        CustomPreviewMeshes;                               // 0xFE0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          SkinToneColor;                                     // 0xFF0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          EyeToneColor;                                      // 0x1000(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          HairToneColor;                                     // 0x1010(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UDataListValueGeneric*>         BoneSliderRefs;                                    // 0x1020(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4900[0x130];                                   // Fixing Size After Last Property  > TateDumper <
	class UCanvasPanel*                          SplitscreenBackdrop;                               // 0x1160(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UUI_Spawn* GetDefaultObj();

	void UpdateCharacterPreviewImage();
	bool UpdateCharacterFirstSpawnBP();
	bool UpdateCharacterFirstSpawn();
	void SwitchTheButton(bool* Next);
	void SpawnPointSelected(int32* SpawnPointID, class UUI_SpawnPoint** SpawnPoint);
	void SlotButtonSelected(class UWidget* TheWidget);
	void SetGenderVoiceOptions();
	void SetGenderBodyBoneOptions();
	void SavedPresetListButtonSelected(class UWidget* TheWidget);
	void SavedBonePresetListButtonSelected(class UWidget* TheWidget);
	void RespawnSlotButtonSelected(class UWidget* TheWidget);
	void ResetToDefault(bool* Recall);
	void PrintCharacterSettings();
	class FText OnSaveToFileEditableCommitted(enum class ETextCommit CommitMethod);
	void OnResetToDefault();
	bool OnMoviePlaybackFinished_SPDownload();
	bool OnMoviePlaybackFinished_SpawnAtPoint();
	bool OnMoviePlaybackFinished_Download();
	bool OnMoviePlaybackFinished();
	void OnMaterialSliderChanged(float* SliderValue);
	bool OnGenderChange();
	class FText OnBedFilterChanged();
	void MultiSelectSpawnPointButtonSelected(class UWidget* TheWidget);
	int32 GetSpawnPointName(class FString* ReturnValue);
	void GetRespawnPanelMap(class USpawnMapWidget** ReturnValue);
	void GetRealBedName(int32* ChachedID, class FString* ReturnValue);
	void GetIsSpawnPointIDDefaultDestination(int32* SpawnPointID, bool* ReturnValue);
	int32 GetDifficultRegionString(class FString* ReturnValue);
	void GetCurrentCharacterSetting(struct FCharacterPreset* ReturnValue);
	void GetCanvasLocationForRegionPoint(struct FVector* Location, struct FVector2D* ReturnValue);
	void GetCanvasLocationForMinimapPoint(struct FVector* Location, struct FVector2D* ReturnValue);
	void GetCameraSettingsForTab(int32* TabIndex, struct FCameraLocationSetting* ReturnValue);
	void GetAllVectorSliders(TArray<class UDataListValueGeneric*>* ReturnValue);
	void GetAllFloatSliders(TArray<class UDataListValueGeneric*>* ReturnValue);
	void GetAllColorSliders(TArray<class UDataListValueGeneric*>* ReturnValue);
	class FString BPSetupButtonDataForSpawnRegion(class FString* SecondText);
	void BPSetupBed(int32* BedIndex, int32* SpawnPointID, class FString* BedName, struct FVector* AtLocation, double* NextAllowedUseTime, bool* bAllowedUse, int32* NumBeds);
	int32 BPSetSelectedSpawnRegion(struct FVector* Location);
	void BPRemoveBed(int32* SpawnPointID);
	int32 BPCreatedSpawnRegionWidget(struct FVector* Location, int32* Difficult);
	void BP_FinalAdjustPlayerCharacterConfigBeforeSpawn(struct FPrimalPlayerCharacterConfigStruct* InPlayerCharacterConfig, struct FPrimalPlayerCharacterConfigStruct* ReturnValue);
	struct FCharacterPreset ApplyCharacterPreset();
	void ApplyBodyBonePreset(struct FPlayerBoneBodyPreset* BodyPreset);
};

// 0x68 (0x7C0 - 0x758)
// Class ShooterGame.UI_SpawnPoint
class UUI_SpawnPoint : public UPrimalUI
{
public:
	uint8                                        Pad_4901[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	class FName                                  SpawnPointImageName;                               // 0x76C(0x8)(Edit, ConstParm, BlueprintReadOnly, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4902[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            SpawnPointImageNormal;                             // 0x778(0x8)(Edit, ConstParm, BlueprintVisible, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            SpawnPointImageDisabled;                           // 0x780(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            SpawnPointImageSelected;                           // 0x788(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            CurrentLocation;                                   // 0x790(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            MarkerTexture;                                     // 0x798(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DefaultDestinationImageName;                       // 0x7A0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4903[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_SpawnPoint* GetDefaultObj();

};

// 0x90 (0x7E8 - 0x758)
// Class ShooterGame.UI_SteamInventoryStatusPopup
class UUI_SteamInventoryStatusPopup : public UPrimalUI
{
public:
	class FName                                  CloseButtonName;                                   // 0x758(0x8)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TitleLabelName;                                    // 0x760(0x8)(Edit, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DownloadMessageLabelName;                          // 0x768(0x8)(BlueprintVisible, EditFixedSize, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  UploadMessageLabelName;                            // 0x770(0x8)(ExportObject, BlueprintReadOnly, Net, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                TitleText;                                         // 0x778(0x10)(Edit, ConstParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                MessageText;                                       // 0x788(0x10)(ExportObject, BlueprintReadOnly, Net, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	int32                                        NumberOfDots;                                      // 0x798(0x4)(Edit, BlueprintReadOnly, Net, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TimeoutInterval;                                   // 0x79C(0x4)(ExportObject, Net, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DotsUpdateInterval;                                // 0x7A0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4904[0x44];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_SteamInventoryStatusPopup* GetDefaultObj();

};

// 0x90 (0x7E8 - 0x758)
// Class ShooterGame.UI_Subtitles
class UUI_Subtitles : public UPrimalUI
{
public:
	class FName                                  SubtitlesTextBoxName;                              // 0x758(0x8)(ExportObject, Net, EditFixedSize, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DialogueTextBoxName;                               // 0x760(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  DialogueIconImageName;                             // 0x768(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnProcessDynamicMaterialForDialogueIcon;           // 0x770(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FSubtitleCue>                  SoundWaveSubtitles;                                // 0x780(0x10)(ConstParm, BlueprintReadOnly, Net, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4909[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class USoundCue*                             CurrentlyPlayingSound;                             // 0x7A8(0x8)(ConstParm, BlueprintVisible, Net, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundWave*                            CurrentlyPlayingSoundWave;                         // 0x7B0(0x8)(ExportObject, BlueprintReadOnly, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_490A[0x30];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_Subtitles* GetDefaultObj();

	void SetSubtitleFromText(class FText SubtitleTextLine);
	void SetSubtitleFromStringWithDurationAndIcon(const class FString& SubtitleTextLine, float AutoHideAfterSeconds, class UMaterialInterface* DialogueIcon);
	void SetSubtitleFromString(const class FString& SubtitleTextLine);
	void SetSubtitleFromSoundWave(class USoundWave* SoundWave, float AutoHideAfterSeconds, class UMaterialInterface* DialogueIcon);
	void SetSubtitleFromSoundCue(class USoundCue* SoundCueWithSubtitles, float AutoHideAfterSeconds, class UMaterialInterface* DialogueIcon);
	void SetIconMaterialParams(const TArray<struct FNameScalarPair>& ScalarParams, const TArray<struct FNameColorPair>& ColorParams, class UTexture2D* CurrentAT);
	void OnShowSubtitles();
	void OnHideSubtitles();
	void IsIconVisible(bool* ReturnValue);
	void IsCurrentIconEqualToGivenIcon(class UMaterialInterface* DialogueIcon, bool* ReturnValue);
	void HideSubtitles();
	void ForceSetSubtitlesManualTime(float ManualGlobalStartTime);
};

// 0x458 (0xBC0 - 0x768)
// Class ShooterGame.UI_SurvivorProfile
class UUI_SurvivorProfile : public UPrimalSubMenuUI
{
public:
	uint8                                        Pad_490D[0x288];                                   // Fixing Size After Last Property  > TateDumper <
	class USoundWave*                            AsyncLoadedSoundWave;                              // 0x9F0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_490E[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UMaterialInstanceDynamic*>      ExplorerNoteDynamicMaterials;                      // 0xA50(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_490F[0x60];                                    // Fixing Size After Last Property  > TateDumper <
	class USoundCue*                             AsyncLoadedSoundCue;                               // 0xAC0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4910[0x70];                                    // Fixing Size After Last Property  > TateDumper <
	class UGenericDataListEntry*                 AsyncLoadingDinoEntry;                             // 0xB38(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            AsyncLoadedDinoTexture;                            // 0xB40(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            AsyncLoadedDialogueAnimTexture;                    // 0xB48(0x8)(Edit, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       DialogueSoundComponent;                            // 0xB50(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShowingDossiers;                                  // 0xB58(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShowingScorchedEarth;                             // 0xB59(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4911[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  ExplorerNoteMaterialParameterName;                 // 0xB5C(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ExplorerNoteAnimTextureParamName;                  // 0xB64(0x8)(ConstParm, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ExplorerNoteAnimTextureStartTimeParamName;         // 0xB6C(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ExplorerNoteAnimTextureDurationParamName;          // 0xB74(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ExplorerNoteAnimTextureDurationOffset;             // 0xB7C(0x4)(Edit, ConstParm, EditFixedSize, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ExplorerNoteFadeInSpeed;                           // 0xB80(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ExplorerNoteFadeOutSpeed;                          // 0xB84(0x4)(Edit, ExportObject, Net, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ShowDossierTitleDelayTime;                         // 0xB88(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ExplorerNoteExtraCloseTime;                        // 0xB8C(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FString>                        NoteCategoryNames;                                 // 0xB90(0x10)(Edit, ConstParm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FSlateBrush>                   CategoryIcons;                                     // 0xBA0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4912[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_SurvivorProfile* GetDefaultObj();

	void ShowExplorerNoteEntry(int32 ExplorerNoteIndex, bool bFromMainPanel);
	void SetFirstFitDisplay(int32* ID);
	void OnSubtitlesCheckboxChanged(bool* InNewState);
	class FText OnNoteNameFilterChanged();
	bool OnMoviePlaybackFinished();
	void HideDossier();
};

// 0x108 (0x870 - 0x768)
// Class ShooterGame.UI_TamingList
class UUI_TamingList : public UPrimalSubMenuUI
{
public:
	class UClass*                                TamingListEntryTemplate;                           // 0x768(0x8)(Edit, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            POI_Icon;                                          // 0x770(0x8)(ExportObject, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4913[0xF8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_TamingList* GetDefaultObj();

	class FText SearchTextChanged();
};

// 0x98 (0x7F0 - 0x758)
// Class ShooterGame.UI_TextEntry
class UUI_TextEntry : public UPrimalUI
{
public:
	class FName                                  CloseButtonName;                                   // 0x758(0x8)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AcceptButtonName;                                  // 0x760(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TitleLabelName;                                    // 0x768(0x8)(Edit, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  EditTextBoxName;                                   // 0x770(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CheckBoxName;                                      // 0x778(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CheckBoxLabelName;                                 // 0x780(0x8)(Edit, ConstParm, ExportObject, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxOpenTime;                                       // 0x788(0x4)(Edit, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4915[0x56];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bNumericValue;                                     // 0x7E2(0x1)(Edit, ConstParm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bLimitInput;                                       // 0x7E3(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        LimitCount;                                        // 0x7E4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bCanCommitEmptyString;                             // 0x7E8(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bNumericAndChar;                                   // 0x7E9(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4916[0x6];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_TextEntry* GetDefaultObj();

	class FText OnTextCommitted(enum class ETextCommit CommitMethod);
	class FText OnTextChanged();
};

// 0x4C8 (0xC30 - 0x768)
// Class ShooterGame.UI_TribeManager
class UUI_TribeManager : public UPrimalSubMenuUI
{
public:
	class FName                                  CreateNewTribeButtonName;                          // 0x768(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LeaveTribeButtonName;                              // 0x770(0x8)(ConstParm, EditFixedSize, Parm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TribeNameLabelName;                                // 0x778(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TribeNameEditBoxName;                              // 0x780(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  RemovePlayerFromTribeButtonName;                   // 0x788(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ManageTribePanelName;                              // 0x790(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  NewTribePanelName;                                 // 0x798(0x8)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  MyScrollBoxName;                                   // 0x7A0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ReverseLogOrderButtonName;                         // 0x7A8(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                TribePlayerEntryButtonTemplate;                    // 0x7B0(0x8)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                TribeWarEntryButtonTemplate;                       // 0x7B8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                TribeAllianceEntryButtonTemplate;                  // 0x7C0(0x8)(Edit, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                TribeAllianceMemberEntryButtonTemplate;            // 0x7C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                RankEntryButtonTemplate;                           // 0x7D0(0x8)(ExportObject, Net, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextActiveColor;                           // 0x7D8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SwitcherTextInactiveColor;                         // 0x7E8(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	double                                       LastPlayerRefreshTime;                             // 0x7F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4919[0x430];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_TribeManager* GetDefaultObj();

	void TribeWarEntryButtonSelected(class UWidget* TheWidget);
	void TribeAllianceMemberButtonSelected(class UWidget* TheWidget);
	void TribeAllianceEntryButtonSelected(class UWidget* TheWidget);
	void RankGroupButtonSelected(class UWidget* TheWidget);
	void PlayerEntryButtonSelected(class UWidget* TheWidget);
	enum class ESelectInfo OnGroupRankSelectedSelector();
	enum class ESelectInfo OnGroupRankSelected();
	int32 BPRankGroupIndexSelected();
	int32 BPRankGroupIndexApplied();
};

// 0x58 (0x7B0 - 0x758)
// Class ShooterGame.UI_TribeWarEntry
class UUI_TribeWarEntry : public UPrimalUI
{
public:
	uint8                                        Pad_491B[0x58];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_TribeWarEntry* GetDefaultObj();

	class FText OnTextCommitted(enum class ETextCommit CommitMethod);
	class FText OnTextChanged();
};

// 0x30 (0x788 - 0x758)
// Class ShooterGame.UI_Tutorial
class UUI_Tutorial : public UPrimalUI
{
public:
	class FName                                  TutorialTitleLabelName;                            // 0x758(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TutorialTextLabelName;                             // 0x760(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TutorialImageName;                                 // 0x768(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_491C[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_Tutorial* GetDefaultObj();

};

// 0x60 (0x7B8 - 0x758)
// Class ShooterGame.UI_Welcome
class UUI_Welcome : public UPrimalUI
{
public:
	class FName                                  NicknameLabelName;                                 // 0x758(0x8)(Edit, BlueprintVisible, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LoadingLabelName;                                  // 0x760(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  OkButtonName;                                      // 0x768(0x8)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                MainMenuTemplate;                                  // 0x770(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                NotifClass;                                        // 0x778(0x8)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_491D[0x38];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_Welcome* GetDefaultObj();

};

// 0x48 (0x7A0 - 0x758)
// Class ShooterGame.UI_XBoxFooter
class UUI_XBoxFooter : public UPrimalUI
{
public:
	uint8                                        Pad_491E[0x48];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUI_XBoxFooter* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.VictoryCoreHighest
class UVictoryCoreHighest : public UObject
{
public:

	static class UClass* StaticClass();
	static class UVictoryCoreHighest* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.VictoryCore
class UVictoryCore : public UVictoryCoreHighest
{
public:

	static class UClass* StaticClass();
	static class UVictoryCore* GetDefaultObj();

	class FName VTraceSphereBP_IgnoreActorsArray(struct FVector* Start, const struct FVector& End, float* Radius, class AActor* InIgnoreActor, int32 CollisionGroups, float* DebugDrawDuration, bool* ReturnValue);
	class AActor* VTraceSphereBP(struct FVector* Start, const struct FVector& End, float* Radius, class AActor** ActorToIgnore, int32 CollisionGroups, float* DebugDrawDuration, bool* ReturnValue);
	bool VTraceSingleBP_IgnoreActorsArray(struct FVector* Start, const struct FVector& End, class AActor* InIgnoreActor, int32 CollisionGroups, float* DebugDrawDuration, bool* ReturnValue);
	bool VTraceSingleBP(struct FVector* Start, const struct FVector& End, int32 CollisionGroups, class AActor** ActorToIgnore, float* DebugDrawDuration, bool* ReturnValue);
	class FName VTraceShapeMultiBP(struct FVector* Start, const struct FVector& End, class AActor* InIgnoreActor, int32 CollisionGroups, float* DebugDrawDuration, bool* ReturnValue);
	class FName VTraceShapeBP(struct FVector* Start, const struct FVector& End, class AActor* InIgnoreActor, int32 CollisionGroups, float* DebugDrawDuration, bool* ReturnValue);
	bool VTraceMultiBP_IgnoreActorsArray(struct FVector* Start, const struct FVector& End, class AActor* InIgnoreActor, int32 CollisionGroups, float* SphereRadius, float* DebugDrawDuration, bool* ReturnValue);
	bool VTraceMultiBP(struct FVector* Start, const struct FVector& End, class AActor* InIgnoreActor, int32 CollisionGroups, float* SphereRadius, float* DebugDrawDuration, bool* ReturnValue);
	bool VTraceAgainstActorExpensive(struct FVector* Start, const struct FVector& End, int64 CollisionGroups, float* SphereRadius, bool* ReturnValue);
	class UClass* VNewObjectTransient(class UObject** ReturnValue);
	class UClass* VNewObjectFromBlueprintOuter(class UObject** ReturnValue);
	class UClass* VNewObjectFromBlueprint(class UObject** ReturnValue);
	void VisualLog_Print(class AActor** Actor, const class FString& Message, bool bIsError);
	bool VisualLog_Location(class AActor** Actor, const class FString& Message, bool bIsError, struct FVector* Location, struct FLinearColor* PointColor);
	bool VisualLog_LineSegment(class AActor** Actor, const class FString& Message, bool bIsError, struct FVector* Start, const struct FVector& End, const struct FLinearColor& LineColor, float Thickness);
	class FName VisualLog_Histogram(class AActor** Actor, class FName GraphName);
	bool VisualLog_AxisAlignedBox(class AActor** Actor, const class FString& Message, bool bIsError);
	bool ViewTrailer();
	float ViewDirectionAngleOffset(struct FVector* ReturnValue);
	struct FVector VectorDistance(float* ReturnValue);
	double UseCooldown();
	void UnRegisterComponentBP(class UActorComponent** Component);
	bool TrimArray_Vector(TArray<struct FVector>* Array);
	bool TrimArray_Float(TArray<float>* Array);
	void TransformVectorByScreenProjectionGlobalTransform(struct FVector2D* OutVec, struct FVector2D* ReturnValue);
	bool TraceProjectileArc(const struct FHitResult& HitResult, struct FVector* EndLocation, const TArray<class AActor*>& ActorsToIgnore, bool* bDrawDebug, float* DebugDrawDuration, bool* ReturnValue);
	class UObject* ToggleFreezeLevelStreaming();
	void TimeSince_Utc(double* OldTime, float* ReturnValue);
	class UObject* TimeSince_Network(double* OldTime, float* ReturnValue);
	class UObject* TimeSince(double* OldTime, float* ReturnValue);
	class UObject* TimeSeconds(float* ReturnValue);
	void SupportsShaderModel5(bool* ReturnValue);
	int32 StringToIntAscii(int32* ReturnValue);
	class FString StringReferenceToClass(class UClass** ReturnValue);
	float StopMusic();
	void StopMovie();
	class APrimalCharacter* StopCompanionEventForPlayer();
	class UObject* StopAllMusicTracks();
	class FString SteamOverlayOpenURL();
	bool StaticPlaySoundAtLocation(struct FVector* Location, struct FRotator* Rotation, float VolumeMultiplier, float* PitchMultiplier, class USoundAttenuation* AttenuationSettings, class USoundConcurrency** ConcurrencySettings);
	double StaticGetTimeSince(float* ReturnValue);
	class FString StaticCheckForCommand(bool* ReturnValue);
	class AActor* StartCompanionEventForPlayer();
	bool SplineLineTrace(const TArray<class AActor*>& ActorsToIgnore, float* DebugDrawDuration, bool* ReturnValue);
	struct FVector SphereOverlapFast(float* Radius, bool* ReturnValue);
	class FName SpawnSaddleAttachedStructure(struct FVector* Location, struct FRotator* Rotation, class APrimalStructure** ReturnValue);
	float SpawnFollowerBasedOnRNG(TArray<class APrimalDinoCharacter*>* ReturnValue);
	float SpawnFollower(class APrimalDinoCharacter** ReturnValue);
	class UClass* SpawnCustomDino(struct FVector* SpawnLocation, float* DebugDrawDuration, class AMissionType** Mission, class APrimalDinoCharacter** ReturnValue);
	struct FVector SpawnBoxBrushActorFast(class ABrush** ReturnValue);
	struct FVector SpawnBoxBrushActor(class ABrush** ReturnValue);
	class APawn* SpawnActorInWorld(class UClass** AnActorClass, struct FVector* AtLocation, const struct FRotator& AtRotation, class AActor** ReturnValue);
	bool SpawnActorDeferred(class UClass* Class, struct FVector* Location, struct FRotator* Rotation, class AActor** Owner, class AActor** ReturnValue);
	struct FVector SortPointsByDistance(TArray<struct FVector>* Points, TArray<struct FVector>* ReturnValue);
	void SortActorsByType(TArray<class AActor*>* Actors, TArray<class AActor*>* ReturnValue);
	int32 SortActorsByTag(TArray<class AActor*>* Actors, TArray<class AActor*>* ReturnValue);
	bool SortActorsByDistanceReturnNearest(TArray<class AActor*>* Actors, class AActor** ReturnValue);
	struct FVector SortActorsByDistance(TArray<class AActor*>* Actors, TArray<class AActor*>* ReturnValue);
	class FString SimpleReplaceUnicodeWithSupportedAlternatives(class FString* ReturnValue);
	void SimpleFloatString(float* InputVal, class FString* ReturnValue);
	float SimpleCurveInterpClampedVector(enum class ESimpleCurve* CurveType, struct FVector* ReturnValue);
	float SimpleCurveInterpClampedTransform(enum class ESimpleCurve* CurveType, struct FTransform* ReturnValue);
	bool SimpleCurveInterpClampedRotator(enum class ESimpleCurve* CurveType, struct FRotator* ReturnValue);
	float SimpleCurveInterpClampedLinearColor(enum class ESimpleCurve* CurveType, struct FLinearColor* ReturnValue);
	float SimpleCurveInterpClamped(enum class ESimpleCurve* CurveType, float* ReturnValue);
	void SimpleCurveEval(float Value, enum class ESimpleCurve* CurveType, float* ReturnValue);
	float ShowEditorNotification(const class FString& Message, enum class EEditorMessageLogLevel* LogLevel, bool* bServerOnly);
	void SetTickGroupBP(class UActorComponent** Component, enum class ETickingGroup* TickGroup);
	class FString SetSessionPrefix();
	bool SetSelectedLevelActors();
	int32 SetMultiUseEntryPriority(bool* ReturnValue);
	void SetMousePosition(class APlayerController** Controller, float X, float Y);
	class UMaterialInstanceDynamic* SetMaterialColorizationFromItemColors();
	class FName SetLevelActorFolderPath(class AActor** Actor);
	class FString SetLastMapPlayed();
	bool SetGrassEnable();
	bool SetDinoSetupPointsPerStat(int32 Value);
	uint8 SetComponentCustomNavigableGeometry(class UPrimitiveComponent** Component);
	int32 SetBoolArrayElemTrue();
	int32 SetBoolArrayElemFalse();
	struct FTransform SetAnimBPOffsets();
	void SetAllowControllerInputWithCursor(bool bAllow);
	bool ServerSearchFoliageByResource(float* Radius, bool bSortByDistance, bool bReverseSort);
	bool ServerSearchFoliage(float* Radius, bool bSortByDistance, bool bReverseSort);
	bool ServerOctreeOverlapActorsClassBitMask(float* Radius, TArray<class AActor*>* ReturnValue);
	bool ServerOctreeOverlapActorsClass(float* Radius, TArray<class AActor*>* ReturnValue);
	bool ServerOctreeOverlapActorsBitMask(float* Radius, TArray<class AActor*>* ReturnValue);
	bool ServerOctreeOverlapActors(float* Radius, TArray<class AActor*>* ReturnValue);
	bool ServerCheckMeshingOnActor(bool* ReturnValue);
	float SelectVectorIfWithinRange(struct FVector* ReturnValue);
	bool SelectCloserVector(struct FVector* ReturnValue);
	bool RotateDirToTargetWithAngleLimits(struct FVector* ReturnValue);
	bool ReupdateCaptures();
	void ResetMousePositionToCenter(class APlayerController** Controller);
	double ResetCooldown();
	struct FRotator RemoveRollFromRotator(struct FRotator* ReturnValue);
	struct FRotator RemovePitchAndRollFromRotator(struct FRotator* ReturnValue);
	TArray<class APrimalDinoCharacter*> RemoveInvalidObjectsInContainer(TArray<class APrimalDinoCharacter*>* ReturnValue);
	class UObject* RemoveFromActorList(int32* ActorListNum, class AActor** ActorRef);
	class AActor* RemoveActorFromCustomActorList(class FName* SearchCustomTag, bool* ReturnValue);
	void RegisterComponentBP(class UActorComponent** Component);
	void RefreshApplySoundVolumes();
	void RefreshApplySoundAndMusicVolumes();
	TArray<class UTexture*> RecursivelyApplDynamicMaterialParamsToMeshAndChildren_Helper();
	bool RecordMeshingMetrics();
	void ReallySupportsShaderModel5(bool* ReturnValue);
	struct FRandomStream RandomPointInBoundingBoxFromStream(struct FVector* ReturnValue);
	class UObject* PureDefaultObject(class UObject** ReturnValue);
	void PureClassDefaultObject(class UClass* FromClass, class UObject** ReturnValue);
	struct FVector2D ProjectWorldLocationToScreenOrScreenEdgePosition(class APlayerController** PlayerController, float* ScreenMarginPercent, bool* WidgetSpace, bool* OnScreen, bool* bAdjustWithScreenDPI, bool* ReturnValue);
	struct FVector ProjectVectorOntoInsideOfSphere(struct FVector* ProjectVector, struct FVector* ProjectVectorLocation, bool* bOnlyProjectIfVectorIsLeavingSphere, struct FVector* ReturnValue);
	void ProjectScreenLocationIntoWorld(class APlayerController* ForPC, const struct FVector2D& ScreenLocation, float* ProjectionDist, struct FVector* ReturnValue);
	bool ProjectLocationToEdgeOfSphere(bool* bOutDidProject, const struct FVector& ForLocation, float* SphereRadius, bool* bOnlyProjectIfWithinRadius, bool* bForceProjection2D, class AActor** DebugContextActor, float* DebugDuration, struct FVector* ReturnValue);
	void PrintMessageInShippingBuild(const class FString& Msg);
	int32 PrecisionRound(float* InputVal, float* ReturnValue);
	void PointsRandomDist(struct FVector* Location, int32* NumPoints, float* Radius, float* PointRadius, TArray<struct FVector>* ReturnValue);
	float PointsOnAGrid(struct FRotator* Rotation, float* Radius, int32* NumPoints, float* DebugDrawDuration, TArray<struct FVector>* ReturnValue);
	struct FVector PointsOnACircle(float* Radius, int32* NumPoints, TArray<struct FVector>* ReturnValue);
	void PointOnSphere(float* Radius, float* DegreesI, float* DegreesJ, struct FVector* ReturnValue);
	void PointOnCircle(float* Radius, float AngleDegrees, struct FVector2D* ReturnValue);
	float PlayMusic(class FString* MusicFile, bool* bDontFadeInIfNoOtherTracks, bool* bPlayEvenIfCurrentlyPlaying, float* OverrideVolume);
	class FString PlayMovie(bool* bMovieIsSkippable, FDelegateProperty_* OnMoviePlaybackFinishedDelegate, bool* bPlayedOnClient, enum class EPlayMovieVolumeType* VolumeType, bool* ReturnValue);
	void PlayerOwnsScorchedEarthServer(class AShooterPlayerController** Controller, bool* ReturnValue);
	void PlayerOwnsGenesisSeasonPassServer(class AShooterPlayerController** Controller, bool* ReturnValue);
	void PlayerOwnsExtinctionServer(class AShooterPlayerController** Controller, bool* ReturnValue);
	void PlayerOwnsAberrationServer(class AShooterPlayerController** Controller, bool* ReturnValue);
	int32 PlayCompanionReactionToPlayers(TArray<class APrimalCharacter*>* PlayersWhoGetReaction, bool* ForcePlayNow, bool RestrictedEnvironmentalReaction);
	int32 PlayCompanionReactionOnSolePlayer(class APrimalCharacter** PlayersWhoGetReaction, bool* ForcePlayNow, bool RestrictedEnvironmentalReaction);
	void PlaceStructure(class AShooterCharacter* PlacingPawn, class UClass* StructureToPlace, struct FItemNetID* ItemID, bool DisplayFailMessage);
	void OwnsSteamAppID(int32 AppID, bool* ReturnValue);
	void OwnsScorchedEarth(bool* ReturnValue);
	void OwnsGenesisSeasonPass(bool* ReturnValue);
	void OwnsGenesis(bool* ReturnValue);
	void OwnsExtinction(bool* ReturnValue);
	void OwnsDLC(const class FString& DLCName, bool* ReturnValue);
	void OwnsCrystalIsles(bool* ReturnValue);
	void OwnsAberration(bool* ReturnValue);
	enum class ECollisionChannel OverlappingStationaryObjectsTraceBP(const TArray<struct FOverlapResult>& Overlaps, float* Radius, class AActor* InIgnoreActor, class FName TraceName, bool bComplexOverlapTest, bool* ReturnValue);
	enum class ECollisionChannel OverlappingActorsTraceBP(const TArray<struct FOverlapResult>& Overlaps, float* Radius, class AActor* InIgnoreActor, class FName TraceName, bool bComplexOverlapTest, bool* ReturnValue);
	struct FVector OverlappingActorsBP(const TArray<struct FOverlapResult>& Overlaps, float* Radius, int32 CollisionGroups, class AActor* InIgnoreActor, class FName TraceName, bool bComplexOverlapTest, bool* ReturnValue);
	void OpenStorePageForDLC(const class FString& DLCName);
	class UObject* ObjectRefToClassRef(class UClass** ReturnValue);
	TSoftClassPtr<class UObject> ObjectIsChildOfSoftRef(class UObject** Object, bool bExactMatch, bool* ReturnValue);
	class UClass* ObjectIsChildOf(class UObject** Object, bool bExactMatch, bool* ReturnValue);
	void NormalizeRotator(const struct FRotator& InRotator, struct FRotator* ReturnValue);
	class UObject* NetworkTimeToRealWorldUtcTime(double* NetworkTime, double* ReturnValue);
	int32 MultiTraceProjectSphere(TArray<struct FHitResult>* OutResults, int32 HorizResolution, int32 VertResolution, float NorthConeSubtractAngle, float SouthConeSubtractAngle, int32 PctChanceToTrace, bool bDrawDebugLines, float* DebugDrawDuration, bool bStopOnFirstHit);
	bool MultiLinePenetrationTraceByChannel(TArray<struct FPenetrationTraceHit>* OutResults, struct FVector* Start, const struct FVector& End, const TArray<class AActor*>& ActorsToIgnore, bool bDrawDebugLines, float* DebugDrawDuration);
	float MulticastDrawDebugString(class AActor* ReplicatedActor, struct FVector* TextLocation, class AActor** TestBaseActor, struct FLinearColor* TextColor);
	float MulticastDrawDebugSphere(class AActor* ReplicatedActor, float* Radius, int32* Segments, const struct FLinearColor& LineColor);
	float MulticastDrawDebugPoint(class AActor* ReplicatedActor, const struct FVector& Position, struct FLinearColor* PointColor);
	float MulticastDrawDebugLine(class AActor* ReplicatedActor, const struct FVector& LineStart, const struct FVector& LineEnd, const struct FLinearColor& LineColor, float Thickness, bool AllowInShipping);
	float MulticastDrawDebugCylinder(class AActor* ReplicatedActor, struct FVector* Start, const struct FVector& End, float* Radius, int32* Segments, const struct FLinearColor& LineColor);
	float MulticastDrawDebugCoordinateSystem(class AActor* ReplicatedActor, struct FVector* AxisLoc, struct FRotator* AxisRot, float Scale, float Thickness);
	float MulticastDrawDebugCapsuleWithExtents(class AActor* ReplicatedActor, float* Radius, const struct FLinearColor& LineColor, bool bPersistent);
	float MulticastDrawDebugCapsule(class AActor* ReplicatedActor, float* HalfHeight, float* Radius, struct FRotator* Rotation, const struct FLinearColor& LineColor);
	float MulticastDrawDebugCamera(class AActor* ReplicatedActor, class ACameraActor** CameraActor, const struct FLinearColor& CameraColor);
	float MulticastDrawDebugBox(class AActor* ReplicatedActor, const struct FLinearColor& LineColor, struct FRotator* Rotation);
	float MulticastDrawDebugArrow(class AActor* ReplicatedActor, const struct FVector& LineStart, const struct FVector& LineEnd, float ArrowSize, const struct FLinearColor& LineColor);
	int32 ModifyDinoSetupTargetLevel(int32* MaxLevel, struct FDinoSetup* ReturnValue);
	class UObject* MarkGen2IntroAsSeen();
	void MapRangeToCurveClamped(float Value, float InRangeA, float InRangeB, float OutRangeA, float OutRangeB, enum class ESimpleCurve* CurveType, float* ReturnValue);
	void MapAngleRangeToCurveClamped(float AngleDegrees, float InRangeA, float InRangeB, float OutRangeA, float OutRangeB, enum class ESimpleCurve* CurveType, float* ReturnValue);
	bool MakePlayerCharacterConfigStructReplicated(struct FPrimalPlayerCharacterConfigStructReplicated* ReturnValue);
	struct FVector MakePlaneWithPoints(const struct FVector& C, struct FPlane* ReturnValue);
	class AActor* MakeHitResult(struct FVector* Location, class UPrimitiveComponent* HitComponent, class FName HitBoneName, int32 HitItem, bool* bBlockingHit, struct FHitResult* ReturnValue);
	void LogStackTrace();
	void LeadTargetPosition(const struct FVector& ProjLocation, float ProjSpeed, struct FVector* TargetLocation, struct FVector* TargetVelocity, struct FVector* ReturnValue);
	void LeaderboardColumnNameToString(enum class ELeaderboardColumnName ColumnType, class FString* ReturnValue);
	class AActor* KillTargetCharacterOrStructure(class AActor* ActorToKill, bool bTryDestroyActor, bool* ReturnValue);
	void JoinStringArrayWithNewlines(const TArray<class FString>& SourceArray, class FString* ReturnValue);
	void IsXboxOneBuild(bool* ReturnValue);
	void IsWorkshopIDSubscribed(const class FString& WorkshopID, bool* ReturnValue);
	class UObject* IsVerboseDisplayEnabled(bool* ReturnValue);
	class UPrimalInventoryComponent* IsValidItemForGrinding(bool* ReturnValue);
	void IsUWPBuild(bool* ReturnValue);
	float IsUndermesh(class APrimalCharacter** Character, const struct FVector& CheckSevenHitLocation, bool* bOverlapping, class UActorComponent** CheckSevenResult, bool DebugDraw, bool* ReturnValue);
	bool IsTimeSince_Utc(double* OldTime, float CheckTimeSince, bool* ReturnValue);
	bool IsTimeSince_Network(double* OldTime, float CheckTimeSince, bool* ReturnValue);
	bool IsTimeSince(double* OldTime, float CheckTimeSince, bool* ReturnValue);
	void IsSplitscreen(bool* ReturnValue);
	void IsSOTFLobby(bool* ReturnValue);
	void IsSOTF(bool* ReturnValue);
	void IsShipping(bool* ReturnValue);
	void IsSavingSaveGame(bool* ReturnValue);
	void IsRunningTotalConversion(bool* ReturnValue);
	class UObject* IsPVEServer(bool* ReturnValue);
	void IsPS4Build(bool* ReturnValue);
	class UObject* IsPointStuckWithinMesh(struct FVector* TestPoint, int32* HemisphereSubdivisions, float* RayDistance, float* PercentageConsideredStuck, class AActor** ActorToIgnore, bool* ReturnValue);
	float IsPointInCone(struct FVector* ConeOrigin, struct FVector* ConeDir, float* ConeLength, bool* ReturnValue);
	void IsPlayingMovie(bool* ReturnValue);
	class UObject* IsPlayInEditor(bool* ReturnValue);
	void IsOfficialServer(bool* ReturnValue);
	class UObject* IsNonHostPlayer(class AController** PlayerController, bool* ReturnValue);
	class FName IsMissionTagActiveAnywhere(class AShooterPlayerController** FromPC, bool* ReturnValue);
	void IsMissionActiveAnywhere(class UClass* MissionType, bool* ReturnValue);
	void IsLowMemPlatform(bool* ReturnValue);
	void IsLockhart(bool* ReturnValue);
	class UObject* IsLocationLikelyWithinAnIncorrectlyPlacedWaterVolume(struct FVector* ImpactLocation, struct FVector* ImpactDirection, bool* ReturnValue);
	void IsLoadingSaveGame(bool* ReturnValue);
	void IsLinuxOrMacBuild(bool* ReturnValue);
	class UShapeComponent* IsInsideOrIntersectsBox(struct FVector* BoxOrigin, const struct FVector& BoxExtents, bool* ReturnValue);
	class UShapeComponent* IsInsideBox(struct FVector* BoxOrigin, const struct FVector& BoxExtents, bool* ReturnValue);
	class UObject* IsGameWorld(bool* ReturnValue);
	void IsGamePadConnected(bool* ReturnValue);
	void IsFluidInteractionEnabled(class UObject* WorldContext, bool* ReturnValue);
	void IsEpicClient(bool* ReturnValue);
	void IsEngramGroupAllowed(class AShooterPlayerController* ForPC, int32 EngramGroup, bool* ReturnValue);
	void IsEditor(bool* ReturnValue);
	struct FVector IsDistanceLessThan(float Distance, bool* ReturnValue);
	struct FVector IsDistanceGreaterThan(float Distance, bool* ReturnValue);
	int32 IsDinoDuped(bool* ReturnValue);
	float IsCryopodNerfEnabled(float* DamageMult, float* IncomingDamageMultPercent, bool* ReturnValue);
	float IsCooldownComplete(bool* ReturnValue);
	void IsConsoleServerBuild(bool* ReturnValue);
	void IsConsoleBuild(bool* ReturnValue);
	void IsChildOfClassesSoftRef(class UClass** ChildClass, TArray<TSoftClassPtr<class UObject>>* ParentClassesArray, int32* ReturnValue);
	void IsChildOfClassesSoft(class UClass** ChildClass, TArray<class FString>* ParentClassesArraySoft, int32* ReturnValue);
	void IsChildOfClasses(class UClass** ChildClass, TArray<class UClass*>* ParentClassesArray, int32* ReturnValue);
	void IsBrainControllingDinoAttached(class APrimalCharacter** Character, bool* ReturnValue);
	void InverseTransformVectorByScreenProjectionGlobalTransform(struct FVector2D* OutVec, struct FVector2D* ReturnValue);
	struct FTransform InverseTransform(struct FTransform* ReturnValue);
	void IntToStringAscii(int32* CharValue, class FString* ReturnValue);
	class UShapeComponent* IntersectsBox(struct FVector* BoxOrigin, const struct FVector& BoxExtents, bool* ReturnValue);
	TArray<class FName> InlineLoadLevels(TArray<class FName>* LevelNamesToUnload, bool* bDisableDistanceStreamingOnLevels);
	float Helix(float* Radius, struct FVector* ReturnValue);
	class UObject* HasPlayerSeenGen2Intro(bool* ReturnValue);
	class UPrimalItem* HasCraftingRequirementsGreaterThanOne(bool* ReturnValue);
	int32 GrindItemIntoInventory(bool* bGrindStack, bool* ReturnValue);
	int32 GrindAllItemsToInventory(bool* bGrindStack);
	bool GridTraceAroundPoint(TArray<struct FHitResult>* OutResults, const TArray<class AActor*>& ActorsToIgnore, int32* NumTracesX, int32* NumTracesY, float* ZStartOffset, float* ZEndOffset, bool* bDrawDebug, float* DebugDrawDuration);
	bool GiveItemToCharacter(class APrimalCharacter** Character, TArray<class UPrimalItem*>* ReturnValue);
	class UObject* GetWorldSublevels(TArray<class ULevelStreaming*>* ReturnValue);
	class UObject* GetWorldLoadedAtTime(double* ReturnValue);
	float GetWeightedRandomIndexFromArray(int32* ReturnValue);
	float GetVolumeOfCapsule(float CapsuleRadius, float* ReturnValue);
	void GetVelocityDeltaBetweenChars(class APrimalCharacter** CharA, class APrimalCharacter** CharB, struct FVector* ReturnValue);
	void GetUpsellIndex(int32* ReturnValue);
	void GetTwoLetterISOLanguageName(class FString* ReturnValue);
	float GetTimeSince(class APawn* Pawn, float* ReturnValue);
	void GetTimeSeconds(class APawn* Pawn, float* ReturnValue);
	void GetTeamColor(int32* TargetingTeam, struct FColor* ReturnValue);
	void GetStaticMeshBounds(class UStaticMesh** ForMesh, struct FBoxSphereBounds* ReturnValue);
	class UObject* GetSpecialActorList(enum class EActorListsBP* ActorListType, const TArray<class AActor*>& OutActors);
	class USoundWave* GetSoundWaveLocalizedSpokenText(class FString* ReturnValue);
	class USoundCue* GetSoundCueLocalizedSpokenText(class FString* ReturnValue);
	void GetSimpleMontageDuration(class UAnimMontage* GivenMontage, float* GivenPlayRate, float* ReturnValue);
	void GetShooterGameUserSettings(class UShooterGameUserSettings** ReturnValue);
	void GetShooterCharacterFromPawn(class APawn* Pawn, class AShooterCharacter** ReturnValue);
	void GetShooterCharacterFromController(class AController** Controller, class AShooterCharacter** ReturnValue);
	void GetSelectedLevelActors(TArray<class AActor*>* ReturnValue);
	void GetSecondsIntoDay(int32* ReturnValue);
	void GetScreenPercentLocation(class APlayerController* ForPC, struct FVector2D* ScreenPercentages, struct FVector2D* ReturnValue);
	void GetScreenPercentage(float* ReturnValue);
	void GetScreenFramePerfScalar(float* ReturnValue);
	void GetRealWorldUtcTimeInSeconds(double* ReturnValue);
	struct FDinoSetup GetRandomWeightedDinoSetup(const TArray<struct FDinoSetup>& DinoSetupEntries, bool* ReturnValue);
	void GetRandomCircleCenterPointEncompassingPointWithinOuterCircle(float RandomCircleRadius, const struct FVector2D& PointToEncompass, const struct FVector2D& OuterCircleCenterPoint, float OuterCircleRadius, int32 MaxRetries, struct FVector2D* ReturnValue);
	struct FProjectileArc GetProjectileArcPeakTime(float* ReturnValue);
	void GetPrimaryWorld(class UWorld** ReturnValue);
	void GetPrimaryCameraLocationDistanceFromPoint(const struct FVector& WorldPoint, float* ReturnValue);
	void GetPrimaryCameraLocation(struct FVector* ReturnValue);
	void GetPreviousTrackedActorLinkedEntry(TMap<int32, struct FTrackedActorOverallContainer> GivenTMap, int32* ID, int32* Category, int32 NextLinkedEntryID, int32 NextLinkedEntryCategory, const struct FTrackedActorPlusInfoStruct& FoundTrackedActorPlusInfoStruct, bool* ReturnValue);
	class UObject* GetPlayerCharacterByIndex(int32* PlayerIndex, class AShooterCharacter** ReturnValue);
	class APlayerController* GetPlayerCharacterByController(class AShooterCharacter** ReturnValue);
	void GetPlatformName(class FString* ReturnValue);
	void GetPlaneNormal(const struct FPlane& ForPlane, struct FVector* ReturnValue);
	TArray<int32> GetOverlappedHarvestActors(float AtRadius, const TArray<struct FVector>& OutHarvestLocations, bool* ReturnValue);
	class UObject* GetObjectString(class FString* ReturnValue);
	class UObject* GetObjectsReferencedBy(const TArray<class UObject*>& OutReferencedObjects, bool bIgnoreTransient);
	class UObject* GetObjectPathName(class FString* ReturnValue);
	class UObject* GetObjectName(class FName* ReturnValue);
	class UObject* GetObjectFName(class FName* ReturnValue);
	void GetNextTrackedActorLinkedEntry(TMap<int32, struct FTrackedActorOverallContainer> GivenTMap, int32* ID, int32* Category, int32 NextLinkedEntryID, int32 NextLinkedEntryCategory, const struct FTrackedActorPlusInfoStruct& FoundTrackedActorPlusInfoStruct, bool* ReturnValue);
	void GetNewlineCharacter(class FString* ReturnValue);
	class UObject* GetNetworkTimeInSeconds(double* ReturnValue);
	void GetNearestAnimSequenceFromBlendSpace(const struct FVector& BlendSpaceInput, class UBlendSpace** BlendSpace, class UAnimSequence** ReturnValue);
	class UObject* GetNearestAlliedPlayer(int32* TargetingTeam, struct FVector* Location, const TArray<class AActor*>& IgnoreActors, class AActor** ReturnValue);
	class UObject* GetNearestAlliedDinoElsePlayer(int32* TargetingTeam, struct FVector* Location, const TArray<class AActor*>& IgnoreActors, class AActor** ReturnValue);
	class UObject* GetNearestAllieDDino(int32* TargetingTeam, struct FVector* Location, const TArray<class AActor*>& IgnoreActors, class AActor** ReturnValue);
	void GetMontageGroupName(class UAnimMontage* GivenMontage, class FName* ReturnValue);
	void GetMontageFromAnimAsset(class UAnimationAsset* ForAnimAsset, const struct FVector& ForDirection, class UAnimMontage** ReturnValue);
	class FName GetMissionNetworkStartTime(double* ReturnValue);
	class UObject* GetMissionActorOfTypes(const TArray<class UClass*>& TheMissionTypes, class AActor** ReturnValue);
	class UObject* GetMissionActorOfType(class UClass* TheMissionType, bool bExactMatch, class AActor** ReturnValue);
	void GetMatineeLength(class AMatineeActor* MatineeActor, float* ReturnValue);
	class FString GetLocaleSpecificSoundWaveAnimTexturePairArrays(const TArray<struct FLocalizedSoundWaveAnimTexturePairArrays>& LocalizedSoundWaveAnimTextures, bool FoundLocalizedSoundWavesForThisLanguage, bool* ReturnValue);
	class FString GetLocaleSpecificAudio(const TArray<struct FLocalizedSoundCueEntry>& LocalizedSoundCues, bool* ReturnValue);
	void GetLoadedStreamingLevelNames(TArray<class FName>* ReturnValue);
	float GetLaunchVelocityAndGravity(struct FVector* TargetLocation, const struct FVector& LaunchVelocity);
	void GetLastMapPlayed(class FString* ReturnValue);
	void GetLastHostedMapPlayed(class FString* ReturnValue);
	class FName GetKeyNameFromActionName(class FString* ReturnValue);
	void GetKeyName(const struct FKey& Key, class FString* ReturnValue);
	class FName GetKeybindName(class FName* ReturnValue);
	class FName GetKeybindDisplayName(class FText* ReturnValue);
	class FName GetKeybindByPredicate(struct FKey* ReturnValue);
	struct FItemSetup GetItemClassFromItemSetup(class UClass** ReturnValue);
	class FName GetHitBoneNameFromDamageEvent(class APrimalCharacter** Character, const struct FDamageEvent& DamageEvent, bool* bIsPointDamage, class FName* ReturnValue);
	int32 GetHarvestingComponentFromHitBodyIndex(class UPrimalHarvestingComponent** ReturnValue);
	struct FVector GetGroundLocation(const struct FVector& TheGroundLoc, bool* ReturnValue);
	void GetGrinderReplacementItem(class UClass* Current, class UClass** ReturnValue);
	class UObject* GetFirstDirectionalLight(class ADirectionalLight** ReturnValue);
	void GetEditorBuildRevision(int32* ReturnValue);
	enum class EDLCSelector GetDLCNameFromSelector(class FString* ReturnValue);
	struct FVector GetDistanceToCollision(float* ReturnValue);
	struct FDinoSetup GetDinoStaticClass(class UClass** ReturnValue);
	bool GetDinoSetupPointsPerStat(int32* ReturnValue);
	struct FDinoSetupGroup GetDinoSetupGroup_WeightedRandom(bool* ReturnValue);
	struct FDinoSetupGroup GetDinoSetupGroup_ByName(class FName* GroupName, bool* ReturnValue);
	struct FDinoSetup GetDinoSetupDinoType(class UClass** ReturnValue);
	float GetDinoSetupCapsuleSize(float CapsuleRadius, bool* ReturnValue);
	bool GetDinoCharacterByID(int32 DinoID1, int32* DinoID2, class APrimalDinoCharacter** ReturnValue);
	class UObject* GetDefaultObject(class UObject** ReturnValue);
	bool GetCustomDinoSpawnLocation(struct FVector* SpawnLocation, float* DebugDrawDuration, struct FVector* ReturnValue);
	class UObject* GetCustomActorList(class FName* SearchCustomTag, class ACustomActorList** ReturnValue);
	void GetCurrentCameraExposure(float* ReturnValue);
	void GetControllerMovementInputs(class APlayerController* ForPC, struct FVector2D* ReturnValue);
	TArray<class AActor*> GetClosestActorArray(class AActor** ReturnValue);
	void GetClassString(class UClass* ForClass, class FString* ReturnValue);
	void GetClassPathName(class UObject* ForClass, class FString* ReturnValue);
	void GetClassFName(class UClass* ForClass, class FName* ReturnValue);
	void GetClassDefaultObjectFromAsset(struct FAssetData* ForAsset, class UObject** ReturnValue);
	void GetClassDefaultObject(class UClass* FromClass, class UObject** ReturnValue);
	float GetCharacterCapsuleSize(float CapsuleRadius, bool* ReturnValue);
	class FName GetBlockingMissionTag(class AShooterPlayerController** FromPC, class FName* ReturnValue);
	struct FVector GetBestHitInfoFromDamageEvent(const struct FDamageEvent& DamageEvent);
	bool GetArrayIndicesSorted_Int(TArray<int32>* Array, TArray<int32>* ReturnValue);
	bool GetArrayIndicesSorted_Float(TArray<float>* Array, TArray<int32>* ReturnValue);
	bool GetArrayIndicesSorted_Double(TArray<double>* Array, TArray<int32>* ReturnValue);
	struct FVector GetAngleBetweenVectorsPure(struct FVector* VectorA, struct FVector* VectorB, float* ReturnValue);
	struct FVector GetAngleBetweenVectors(struct FVector* VectorA, struct FVector* VectorB, float* ReturnValue);
	class UObject* GetAllPlayerStarts(TArray<class AActor*>* ReturnValue);
	class UObject* GetAllMissionDispatchers(TArray<class AActor*>* ReturnValue);
	class UObject* GetAllMissionDispatcherPoints(TArray<class AActor*>* ReturnValue);
	class UObject* GetAllMissionActors(TArray<class AActor*>* ReturnValue);
	class UObject* GetAllLocalPlayerControllers(TArray<class AShooterPlayerController*>* ReturnValue);
	class UObject* GetAllLocalPlayerCharacters(TArray<class AShooterCharacter*>* ReturnValue);
	class UObject* GetAllLocalPlayerCameraManagers(TArray<class APlayerCameraManager*>* ReturnValue);
	class FName GetAllKeybindsByPredicate(TArray<struct FKey>* ReturnValue);
	bool GetAllClassesOfType(const class FString& Path);
	TArray<struct FAssetData> GetAllBlueprintAssetsOfNativeClass(bool* ReturnValue);
	class UObject* GetAllAvailableMissionsAsTags(TArray<class FName>* ReturnValue);
	class UObject* GetAllAvailableMissions(TArray<struct FAvailableMission>* ReturnValue);
	TArray<class UAnimationAsset*> GetAllAnimationSequencesFromMontage(bool* ReturnValue);
	TSoftClassPtr<class AActor> GetAllActorsOfClassSoft(const TArray<class AActor*>& OutActors);
	void GetActorFromOverlapResult(const struct FOverlapResult& OverlapResult, class AActor** ReturnValue);
	float GenerateRandomLootItemFromLootTable(int32 ItemQuantity, class UClass** ReturnValue);
	enum class ELootItemType GenerateRandomLootItem(class UClass** ReturnValue);
	class APrimalDinoCharacter* GenerateDeathBlendSpacesForDino();
	void Generate_UUID(class FString* ReturnValue);
	TArray<class FString> FuseChunkedFString(class FString* ReturnValue);
	int32 FormatAsTimeLong(class FString* ReturnValue);
	bool FormatAsTime(class FString* ReturnValue);
	float ForceScreenColorFade(const struct FLinearColor& FadeColor);
	class UObject* ForceLevelStreamingToBlock(float* ForTime);
	void FloatToDouble(float Value, double* ReturnValue);
	struct FVector FlattenDirectionVectorInLocalSpace(struct FRotator* Rotation, struct FVector* ReturnValue);
	struct FVector FlattenDirectionVector(struct FVector* ReturnValue);
	void FinishSpawning(class AActor** Actor);
	class FName FindWorldActors(bool* ReturnValue);
	bool FindValidLocationNextToTarget(struct FVector* OutLocation, class AActor** ActorToIgnore, bool* bDrawDebug, float* DebugDrawDuration, bool* ReturnValue);
	bool FindValidLocationInFrontOfTarget(struct FVector* OutLocation, class AActor** ActorToIgnore, float* DebugDrawDuration, bool* ReturnValue);
	class FString FindSocketClosestToDirection(class USkeletalMeshComponent* Mesh, TArray<class FName>* Sockets, class FName* ReturnValue);
	bool FindNearbyCharactersOfClass(float* Radius, TArray<class APrimalCharacter*>* ReturnValue);
	struct FSoftObjectPath FindLocalizedVersionOfFilename(class FString* ReturnValue);
	TArray<struct FDinoAttackInfo> FindActorAIState(class UPrimalAIState** ReturnValue);
	void ExitApplication();
	float EvalProjectileArc(struct FVector* ReturnValue);
	enum class ECollisionChannel ECC_TO_BITFIELD_BP(int32* ReturnValue);
	float DrawDebugCapsuleWithExtents(float* Radius, const struct FLinearColor& LineColor, bool bPersistent);
	float DrawDebugCapsule(float* Radius, struct FColor* Color, uint8* DepthPriority);
	bool DoForceStreamComponents(bool bIsFirstPerson);
	enum class EDLCSelector DoesOwnSelectedDLC(bool* ReturnValue);
	class AActor* DisableGCM();
	class FName DestroyAllCharactersWithinMissionTileVolumes();
	bool DeferredSpawnAndFireProjectile_Start(struct FVector* ShootDir, class UClass* ProjectileClass, class APrimalCharacter* ForCharacter, struct FTransform* SpawnTransform, class AShooterProjectile** ReturnValue);
	void DeferredSpawnAndFireProjectile_Finish(class AShooterProjectile* TheProjectile, struct FTransform* SpawnTransform);
	float DebugDrawProjectileArc(const struct FLinearColor& LineColor, float* LineThickness, float* DebugDrawDuration);
	bool DeactivateMissionForPlayerCharacter(class AShooterCharacter* PlayerPawn);
	struct FDateTime DateTimeToSeconds(double* ReturnValue);
	float CreateBlendSpaceFromAnimationNameSubstring(class USkeletalMesh* Mesh, class UBlendSpace** ReturnValue);
	class APrimalDinoCharacter* CopyDinoColorSetIndicies();
	float CooldownTimeRemaining(float* ReturnValue);
	struct FRotator ConvertRotatorFromWorldToLocal(struct FRotator* ReturnValue);
	struct FRotator ConvertRotatorFromLocalToWorld(struct FRotator* ReturnValue);
	struct FPrimalPlayerCharacterConfigStruct ConvertPlayerCharacterConfigStructReplicated(struct FPrimalPlayerCharacterConfigStructReplicated* ReturnValue);
	int32 ConvertIntToStringWithCommas(class FString* ReturnValue);
	struct FVector Conv_VectorToVectorNetQuantizeNormal(struct FVector_NetQuantizeNormal* ReturnValue);
	struct FVector Conv_VectorToVectorNetQuantize(struct FVector_NetQuantize* ReturnValue);
	void ConstructObjectBP(class UClass* Class, class UObject* Outer, class FName* Name, class UObject** ReturnValue);
	void ConstructObjectAutoNameBP(class UClass* Class, class UObject* Outer, class UObject** ReturnValue);
	class UPrimitiveComponent* ComponentGetBoundsSphereRadius(float* ReturnValue);
	float ComponentBoundsEncompassesPoint(bool* ReturnValue);
	struct FVector ClipLineInsideBox(const struct FVector& LineStart, const struct FVector& LineEnd, bool* ReturnValue);
	void ClassToStringReference(class UClass* ForClass, class FString* ReturnValue);
	void ClassRefToObjectRef(class UClass* InClass, class UObject** ReturnValue);
	float ClampRotAxis(float* ReturnValue);
	struct FVector ClampLocation(struct FVector* ReturnValue);
	int32 ChunkFStringIntoArray(TArray<class FString>* ReturnValue);
	float ChangeSaturation(struct FLinearColor* ReturnValue);
	enum class ECollisionChannel CapsuleSweepProjectileArc(float CapsuleRadius, const struct FHitResult& HitResult, struct FVector* EndLocation, const TArray<class AActor*>& ActorsToIgnore, bool* bDrawDebug, float* DebugDrawDuration, bool* ReturnValue);
	bool CapsuleSweepMulti(struct FVector* Start, const struct FVector& End, float* Radius, float* HalfHeight, const TArray<class AActor*>& ActorsToIgnore, float* DebugDrawDuration, bool* ReturnValue);
	bool CapsuleSweepFast(struct FVector* Start, const struct FVector& End, float* Radius, float* HalfHeight, float* DebugDrawDuration, bool* ReturnValue);
	bool CapsuleOverlapFast(float* Radius, float* HalfHeight, float* DebugDrawDuration, bool* ReturnValue);
	void CanTeleport(class APrimalDinoCharacter* Target, bool* ReturnValue);
	bool CanSpawnCustomDino(struct FVector* SpawnLocation, float* DebugDrawDuration, bool* ReturnValue);
	class FName CallGlobalLevelEvent();
	struct FVector CalculateGPSCoordinates(struct FIntPoint* ReturnValue);
	bool BreakPlayerCharacterConfigStructReplicated();
	bool BPSweepComponent(class UPrimitiveComponent** Component, struct FVector* Start, const struct FVector& End, float* Radius, float* HalfHeight, bool* ReturnValue);
	struct FRotator BPRTransformInverse(struct FRotator* ReturnValue);
	struct FRotator BPRTransform(struct FRotator* ReturnValue);
	float BPRotatorLerp(struct FRotator* ReturnValue);
	class AShooterPlayerState* BPRequestRenameTribe(class FString* TribeName);
	class AShooterPlayerState* BPRequestLeaveTribe();
	class AShooterPlayerState* BPRequestCreateTribe(class FString* TribeName);
	bool BPProjectWorldToScreenPositionRaw(class APlayerController** ThePC, bool* ReturnValue);
	struct FVector BPProjectWorldToScreenPosition(class APlayerController** ThePC, struct FVector2D* ReturnValue);
	class FString BPLoadObject(class UObject** ReturnValue);
	class FString BPLoadClass(class UClass** ReturnValue);
	class UObject* BPIsTemplate(bool* ReturnValue);
	int32 BPIsDinoIDEqual(bool* ReturnValue);
	float BPGetWeightedRandomIndex(int32* ReturnValue);
	class UObject* BPGetPrimaryMapName(class FString* ReturnValue);
	float BPGetBiomeWind(float* ReturnValue);
	float BPGetBiomeTemperature(float* ReturnValue);
	int32 BPFormatAsTimeLong(class FString* ReturnValue);
	bool BPFormatAsTime(class FString* ReturnValue);
	float BPFLerpFastPure(float* InPercent, float* ReturnValue);
	float BPFLerpFast(float* InPercent, float* ReturnValue);
	float BPFLerp(float* InPercent, bool* bClampToMin, bool* bClampToMax, float* ReturnValue);
	class UObject* BPFastTrace(struct FVector* TraceEnd, struct FVector* TraceStart, class AActor** ActorToIgnore, float* DebugDrawDuration, bool* ReturnValue);
	struct FVector BoxFromOriginAndExtent(struct FVector* OutBoxMin, struct FVector* OutBoxMax);
	void BlockTillAllStreamingRequestsFinished();
	class APrimalDinoCharacter* AttemptToSpawnAWildFollower(TArray<float>* WeightedChanceArrayMultipliers, TArray<class APrimalDinoCharacter*>* ReturnValue);
	void AreVectorsNearlyEqual(struct FVector* VectorA, struct FVector* VectorB, float* WithinError, bool* ReturnValue);
	void AreVector2DsNearlyEqual(struct FVector2D* VectorA, struct FVector2D* VectorB, float* WithinError, bool* ReturnValue);
	void AreVector2DsEqual(struct FVector2D* VectorA, struct FVector2D* VectorB, bool* ReturnValue);
	void AreTransformsNearlyEqual(struct FTransform* TransformA, struct FTransform* TransformB, float* WithinError, bool* ReturnValue);
	void AreRotatorsNearlyEqual(struct FRotator* RotatorA, struct FRotator* RotatorB, float* WithinError, bool* ReturnValue);
	class UObject* AreAllSublevelsForDataLayerLoaded(class FName* DataLayerName, bool* ReturnValue);
	class UNiagaraSystem* ApplyEnvironmentalInteractionShotHit_Universal(struct FHitResult* ImpactHitInfo, struct FVector* VelocityOrShootDirection, float* Radius);
	class UNiagaraSystem* ApplyEnvironmentalInteractionExplosion_Universal(struct FVector* Location);
	void AmbientInsectsVFXEnabled(bool* ReturnValue);
	struct FVector2D AdjustScreenPositionWithScreenDPI();
	class UObject* AddToEditorMessageLog(const class FString& Message, enum class EEditorMessageLogLevel* LogLevel, bool* bServerOnly);
	class UObject* AddToActorList(int32* ActorListNum, class AActor** ActorRef);
	class UObject* AddFoliageInteraction(struct FVector* Location, float* Radius, const struct FVector& Velocity, float* FoliageInteractionStrength, float* Plasticity);
	class UObject* AddFoliageCapsuleInteractionEffect(struct FVector* Location, struct FVector* ExtraCapsuleLocation, float* Radius, const struct FVector& Velocity, float* FoliageInteractionStrength, float FoliagePlasticity);
	class UNiagaraSystem* AddFluidInteraction(struct FVector* Location, float* Radius, const struct FVector& Velocity, bool* bSplash, bool* bRipple, bool* PlaySplashSound, struct FVector* SplashLocation, float* SplashRadius);
	class UNiagaraSystem* AddEnvironmentInteractionEffect(struct FVector* Location, float* Radius, const struct FVector& Velocity, float* FoliageInteractionStrength, float FoliagePlasticity, bool* bFoliageInteraction, bool* bSplash, bool* bRipple, bool* PlaySplashSound, struct FVector* SplashLocation, float* SplashRadius);
	class UNiagaraSystem* AddEnvironmentCapsuleInteractionEffect(struct FVector* Location, struct FVector* ExtraCapsuleLocation, float* Radius, const struct FVector& Velocity, float* FoliageInteractionStrength, float FoliagePlasticity, bool* bFoliageInteraction, bool* bSplash, bool* bRipple, bool* PlaySplashSound, bool* DontAddIfOverLimits, struct FVector* SplashLocation, float* SplashRadius);
	class UNiagaraSystem* AddCombinedFoliageFluidInteraction(struct FVector* Location, float* Radius, const struct FVector& Velocity, float* FoliageInteractionStrength, float* Plasticity, bool* bSplash, bool* bRipple, bool* PlaySplashSound, struct FVector* SplashLocation, float* SplashRadius);
	class UNiagaraSystem* AddCombinedFoliageFluidCapsuleInteractionEffect(struct FVector* Location, struct FVector* ExtraCapsuleLocation, float* Radius, const struct FVector& Velocity, float* FoliageInteractionStrength, float FoliagePlasticity, bool* bSplash, bool* bRipple, bool* PlaySplashSound, struct FVector* SplashLocation, float* SplashRadius);
	class USkeleton* AddAnimSlotToSkeleton(class FName* SlotName, class FName* SlotGroup);
	class UObject* AddActorToCustomActorList(class FName* SearchCustomTag, class AActor** ActorToAdd, bool* CreateListIfMissing);
	enum class ECollisionChannel ActorHasLineOfSightToWorldLocation(class AActor* FromActor, struct FVector* ToLocation, class AActor** OutBlockingActor, float* DebugDrawDuration, bool* ReturnValue);
	enum class ECollisionChannel ActorHasLineOfSight(class AActor* FromActor, class AActor* ToActor, class AActor** OutBlockingActor, struct FVector* ToActorOffset, float* DebugDrawDuration, bool* ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class ShooterGame.VirtualCursor
class UVirtualCursor : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UVirtualCursor* GetDefaultObj();

	void IsVirtualCursorEnabled(class APlayerController** PlayerController, bool* ReturnValue);
	void IsOverInteractableWidget(class APlayerController** PlayerController, bool* ReturnValue);
	bool Enable(class APlayerController** PlayerController);
	void Disable(class APlayerController** PlayerController);
};

// 0x10 (0x40 - 0x30)
// Class ShooterGame.VirtualCursorManager
class UVirtualCursorManager : public ULocalPlayerSubsystem
{
public:
	uint8                                        Pad_4A74[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UVirtualCursorManager* GetDefaultObj();

	void IsCursorValid(bool* ReturnValue);
	void IsCursorOverInteractableWidget(bool* ReturnValue);
	bool EnableAnalogCursor();
	void DisableAnalogCursor();
	void ContainsGamepadCursorInputProcessor(bool* ReturnValue);
};

// 0x68 (0x7C0 - 0x758)
// Class ShooterGame.VisualSettingsUI
class UVisualSettingsUI : public UPrimalUI
{
public:
	uint8                                        Pad_4A77[0x48];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UOpenColorIOConfiguration*>     ArrayOCIODisplayConfiguration;                     // 0x7A0(0x10)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        HDRDisplayMinLuminance;                            // 0x7B0(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        HDRDisplayMidLuminance;                            // 0x7B4(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	float                                        HDRDisplayMaxLuminance;                            // 0x7B8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, EditConst, SubobjectReference)
	uint8                                        Pad_4A78[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UVisualSettingsUI* GetDefaultObj();

	enum class ESelectInfo OnOcioSettingUpdated();
	enum class ESelectInfo OnOcioSettingChanged();
	void ApplyDefaultSettings();
};

// 0x178 (0x640 - 0x4C8)
// Class ShooterGame.VolumetricDispatcher
class AVolumetricDispatcher : public AActor
{
public:
	TArray<struct FVolumetricDispatchDetailLevel> DetailLevels;                                      // 0x4C8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        CurrentDetailLevel;                                // 0x4D8(0x4)(Edit, BlueprintVisible, Net, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A8E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TWeakObjectPtr<class AActor>>         CachedActorList;                                   // 0x4E0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        LastListBuildFrames;                               // 0x4F0(0x4)(Edit, BlueprintReadOnly, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A8F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FComponentVolumetricDispatch>  ComponentDispatches;                               // 0x4F8(0x10)(ConstParm, BlueprintVisible, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FVolumetricDispatch>           PendingWaterDispatches;                            // 0x508(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FVolumetricDispatch>           PendingWaterDispatches_Delayed;                    // 0x518(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FVolumetricDispatch>           PendingOneTimeFoliageDispatches;                   // 0x528(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FVolumetricDispatch>           PendingOneTimeFoliageDispatches_Delayed;           // 0x538(0x10)(BlueprintVisible, EditFixedSize, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FVolumetricDispatch>           PendingOneTimeCombinedFoliageFluidDispatches;      // 0x548(0x10)(Edit, BlueprintVisible, ExportObject, Net, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FVolumetricDispatch>           PendingOneTimeCombinedFoliageFluidDispatches_Delayed; // 0x558(0x10)(ConstParm, BlueprintReadOnly, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UPrimalWindSourceComponent*>    WindSourceComponents;                              // 0x568(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A90[0xA0];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bEnableFluidInteraction;                           // 0x618(0x1)(BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bEnableFoliageInteraction;                         // 0x619(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDebug;                                            // 0x61A(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	bool                                         bEnabled;                                          // 0x61B(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Transient, EditConst, GlobalConfig)
	uint8                                        Pad_4A91[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NumFoliageInteractions;                            // 0x628(0x4)(ConstParm, BlueprintVisible, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NumFluidInteractions;                              // 0x62C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinimumBabyFluidScale;                             // 0x630(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         HasHandledBubblesForThisCompThisTick;              // 0x634(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         WithinBubbleDistanceLimit;                         // 0x635(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A92[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        GlobalMaxAllowedFrameDelayBuffer;                  // 0x638(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A93[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AVolumetricDispatcher* GetDefaultObj();

	void UnRegisterWindSource(class UPrimalWindSourceComponent* WindSource);
	bool SetEnabled();
	void RegisterWindSource(class UPrimalWindSourceComponent* WindSource);
	class UNiagaraSystem* FluidSpash(struct FVector* Location, float* Radius, const struct FVector& Velocity, bool* PlaySplashSound);
	class UObject* AddFoliageInteraction(struct FVector* Location, float* Radius, const struct FVector& Velocity, float InteractionStrength, float* Plasticity);
	class UNiagaraSystem* AddFluidInteraction(struct FVector* Location, float* Radius, const struct FVector& Velocity, bool* bSplash, bool* bRipple, bool* PlaySplashSound, struct FVector* SplashLocation, float* SplashRadius);
	class UNiagaraSystem* AddCombinedFoliageFluidInteraction(struct FVector* Location, float* Radius, const struct FVector& Velocity, float InteractionStrength, float* Plasticity, bool* bSplash, bool* bRipple, bool* PlaySplashSound, struct FVector* SplashLocation, float* SplashRadius);
	class UObject* AddCapsuleFoliageInteraction(struct FVector* Location, struct FVector* ExtraCapsuleLocation, float* Radius, const struct FVector& Velocity, float InteractionStrength, float* Plasticity, bool* DontAddIfOverLimits);
	class UNiagaraSystem* AddCapsuleFluidInteraction(struct FVector* Location, struct FVector* ExtraCapsuleLocation, float* Radius, const struct FVector& Velocity, bool* bSplash, bool* bRipple, bool* PlaySplashSound, struct FVector* SplashLocation, float* SplashRadius);
	class UNiagaraSystem* AddCapsuleCombinedFoliageFluidInteraction(struct FVector* Location, struct FVector* ExtraCapsuleLocation, float* Radius, const struct FVector& Velocity, float InteractionStrength, float* Plasticity, bool* bSplash, bool* bRipple, bool* PlaySplashSound, struct FVector* SplashLocation, float* SplashRadius);
};

// 0x18 (0x48 - 0x30)
// Class ShooterGame.VRBattleGroupDataAsset
class UVRBattleGroupDataAsset : public UDataAsset
{
public:
	TArray<struct FVRBattleWaveUnit>             Units;                                             // 0x30(0x10)(Edit, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceSpawnEntireGroup;                            // 0x40(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A94[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UVRBattleGroupDataAsset* GetDefaultObj();

};

// 0x10 (0x33D0 - 0x33C0)
// Class ShooterGame.VRMainBoss_Character
class AVRMainBoss_Character : public APrimalDinoCharacter
{
public:
	class AMissionType*                          CurrentMission;                                    // 0x33C0(0x8)(ConstParm, EditFixedSize, Parm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A95[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AVRMainBoss_Character* GetDefaultObj();

};

// 0x0 (0xB8 - 0xB8)
// Class ShooterGame.WaterVolumeWithFlowVisualizerComponent
class UWaterVolumeWithFlowVisualizerComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UWaterVolumeWithFlowVisualizerComponent* GetDefaultObj();

};

// 0xB0 (0x5E8 - 0x538)
// Class ShooterGame.WaterVolumeWithFlow
class AWaterVolumeWithFlow : public APhysicsVolume
{
public:
	float                                        CellSize;                                          // 0x538(0x4)(Edit, ConstParm, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig)
	uint8                                        Pad_4A9A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             FlowMagnitudeMinMax;                               // 0x540(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A9B[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FGridIndex>                    GridIDs;                                           // 0x5A0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FVector2D>                     FlowVectors;                                       // 0x5B0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bHasValidGridSize;                                 // 0x5C0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A9C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FGridIndex                            CachedGridSize;                                    // 0x5C4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A9D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        BuffsToApply;                                      // 0x5D0(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bApplyBuffsOnClient : 1;                           // Mask: 0x1, PropSize: 0x10x5E0(0x1)(Edit, ConstParm, EditFixedSize, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A9E[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AWaterVolumeWithFlow* GetDefaultObj();

	void SetStrengthFromSplineActor(class AActor** InSplineActor);
	enum class EColorChannelTarget SetPaintValueAtGridIndex();
	void SetDestinationsFromSplineActor(class AActor** InSplineActor);
	void SetDefaultPaintColors();
	void SetCellSize(float* NewCellSize);
	void PaintStrengthFromSpline();
	void PaintObstruction();
	void PaintDestinationFromSpline();
	struct FGridIndex IsGridIndexValid(bool* ReturnValue);
	struct FGridIndex GetPaintValueAtGridIndex(struct FColor* ReturnValue);
	void GetLocationForGridIndex(struct FGridIndex* ForIndex, struct FVector* ReturnValue);
	void GetGridSize(struct FGridIndex* ReturnValue);
	struct FGridIndex GetGridIndexForLocation(struct FVector* Location, bool* ReturnValue);
	void GetFlowVectorAtLocation(struct FVector* Location, bool* bInterpFlowVector, struct FVector* ReturnValue);
	void GenerateFlowField();
	void ClearAllPaintChannels();
	void BuildEverything();
};

// 0xC0 (0x3F0 - 0x330)
// Class ShooterGame.WorldBuffEntryWidget
class UWorldBuffEntryWidget : public UPrimalUserWidget
{
public:
	float                                        DefaultDisplayTime;                                // 0x330(0x4)(BlueprintVisible, Net, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ExpiringSoonDisplayTime;                           // 0x334(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AA0[0xB8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UWorldBuffEntryWidget* GetDefaultObj();

	void SyncData(struct FWorldBuffPersistantData* WorldBuffPersistantData, bool* bIsListEntry, bool* bShouldReinit, bool* bDurationIsStopped);
	void InitializeMe(bool* bIsListEntry);
	void FadeOut();
	void Collapse();
	void BeginExpiring();
};

// 0x10 (0x38 - 0x28)
// Class ShooterGame.WorldModifiersContainer
class UWorldModifiersContainer : public UObject
{
public:
	TArray<struct FPrimalWorldModifierList>      WorldModifiers;                                    // 0x28(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UWorldModifiersContainer* GetDefaultObj();

};

}


