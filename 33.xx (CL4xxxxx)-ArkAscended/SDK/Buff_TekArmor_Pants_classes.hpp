#pragma once

// Dumped with TateDumper!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x2A8 (0xF48 - 0xCA0)
// BlueprintGeneratedClass Buff_TekArmor_Pants.Buff_TekArmor_Pants_C
class ABuff_TekArmor_Pants_C : public ABuff_TekArmor_C
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0xCA0(0x8)(Edit, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, SubobjectReference)
	class UPrimalItemArmor_TekPants_C*           Ref_TekPants;                                      // 0xCA8(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsTEKRunCharging;                                 // 0xCB0(0x1)(ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_58AE[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       CurrentPlayerRunSpeed;                             // 0xCB8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       MaxAllowedTexRunVelocity;                          // 0xCC0(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       RunSpeedMult_AdditionRate;                         // 0xCC8(0x8)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TEKRunDamageType;                                  // 0xCD0(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TEKRunFoliageDamageType;                           // 0xCD8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       TEKRunBaseDamage;                                  // 0xCE0(0x8)(ExportObject, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       TEKRunDamageRadius;                                // 0xCE8(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       TEKRunImpulseStrength;                             // 0xCF0(0x8)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       TEKRunImpulseWeightLimit;                          // 0xCF8(0x8)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       TEKRunningDamageUpdateRate;                        // 0xD00(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       TEKRunningSecondsPerElementConsumed;               // 0xD08(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       TEKRunningHitPawnRefreshRate;                      // 0xD10(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       AdditionalRunSpeedMult;                            // 0xD18(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ForwardLocRelativeToSpeed;                         // 0xD20(0x18)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       TekRunDamage_current;                              // 0xD38(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class APrimalCharacter*>              ChargeHitPawns;                                    // 0xD40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class APrimalStructure*>              ChargeHitStructures;                               // 0xD50(0x10)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDebug;                                            // 0xD60(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_58AF[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       StructureBoxTraceZModifier;                        // 0xD68(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       PawnBoxTraceModifier;                              // 0xD70(0x8)(BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        DamageStructureElementCost;                        // 0xD78(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_58B0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UParticleSystem*                       WallUnbrokenImpactParticle;                        // 0xD80(0x8)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            WallUnbrokenImpactSound;                           // 0xD88(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       TEKRunningPostProcessIntensityScale;               // 0xD90(0x8)(BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       WallUnbrokenImpactDamage;                          // 0xD98(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       WallUnbrokenBounceImpulse;                         // 0xDA0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       RunSpeedMult_Base;                                 // 0xDA8(0x8)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWantsToCharge;                                    // 0xDB0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_58B1[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       CurrentPlayerVelocityLength;                       // 0xDB8(0x8)(BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PreviousTekRunDir;                                 // 0xDC0(0x18)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventVelocityConservationThisFrame;             // 0xDD8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_58B2[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              InterpControlRotation_target;                      // 0xDE0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       InterpControlRotation_speed;                       // 0xDF8(0x8)(ConstParm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       AccumulatedRunningTimeForElementCost;              // 0xE00(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       RunningTimeForElementCost;                         // 0xE08(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        DamageEnemyElementCost;                            // 0xE10(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        RunningElementCost;                                // 0xE14(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       HitPawn_Particle;                                  // 0xE18(0x8)(Edit, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            HitPawn_Sound;                                     // 0xE20(0x8)(Edit, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LastStructureImpactNormal;                         // 0xE28(0x18)(Edit, ExportObject, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       DustParticleIntensity;                             // 0xE40(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsDustTrailActive;                                // 0xE48(0x1)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAltFirePressed;                                   // 0xE49(0x1)(BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_58B3[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       TekRunServerTickInterval;                          // 0xE50(0x8)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class E_TekRunningState                 CurrentTekRunState;                                // 0xE58(0x1)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class E_TekRunningState                 PreviousTekRunState;                               // 0xE59(0x1)(ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_58B4[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       RequiredTekRunMaxVelocityRatio;                    // 0xE60(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          Anim_WaterRun_TPV;                                 // 0xE68(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       RunOnWaterImpulse;                                 // 0xE70(0x8)(ConstParm, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class APhysicsVolume*                        Ref_AboveWaterVolume;                              // 0xE78(0x8)(Edit, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       AboveWaterClientTickInterval;                      // 0xE80(0x8)(Edit, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastCheckForWaterTime;                             // 0xE88(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       WaterCheckInterval;                                // 0xE90(0x8)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRightFoot;                                        // 0xE98(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_58B5[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       FootSplashOffset;                                  // 0xEA0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastFootSplashTime;                                // 0xEA8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       FootSplashInterval;                                // 0xEB0(0x8)(ConstParm, BlueprintVisible, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWasRunningOnWater;                                // 0xEB8(0x1)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_58B6[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          Ref_WaterRun_FPV;                                  // 0xEC0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       WaterRunDownCheckDistance;                         // 0xEC8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCanRunOnWater;                                    // 0xED0(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowRunningOnWater;                              // 0xED1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_58B7[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       NewVar_0;                                          // 0xED8(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, SubobjectReference, RepNotify)
	double                                       MoveSpeedModifierScale;                            // 0xEE0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       TekRunningWaterSubmergedThreshold;                 // 0xEE8(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       RestoreFullTekSpeedVelocityRatio;                  // 0xEF0(0x8)(Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShouldSonicBoom;                                  // 0xEF8(0x1)(BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsTooSlowForTekRun;                               // 0xEF9(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_58B8[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastTooSlowForTekRunStartTime;                     // 0xF00(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       TimeAfterTooSlowToCancelTekRun;                    // 0xF08(0x8)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowJetpackStartTekRun;                          // 0xF10(0x1)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_58B9[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       JetpackThrustImpulse;                              // 0xF18(0x8)(ExportObject, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       SonicBoomTekVelocityRatio;                         // 0xF20(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       SonicBoomRequiredVelocityForwardDot;               // 0xF28(0x8)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        StartRunningElementCost;                           // 0xF30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_58BA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       WaterRunRequiredForwardVelocityDot;                // 0xF38(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       WaterImpactTemplate;                               // 0xF40(0x8)(Edit, ConstParm, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ABuff_TekArmor_Pants_C* GetDefaultObj();

	enum class E_TekRunningState ValidateRunningState(int32 CallFunc_Conv_ByteToInt_ReturnValue, int32 CallFunc_Conv_ByteToInt_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue);
	void IsPlayerUsingJetpack(bool Result, bool* CallFunc_IsTekArmorUsingAbility__result);
	bool SetPlayerIgnoreSpeedModifiers(bool* CallFunc_IsLocallyControlled_ReturnValue);
	void PlayerHasFistsEquipped(bool Result, bool* RetVal, class AWeapFists_C** K2Node_DynamicCast_AsWeap_Fists, bool* K2Node_DynamicCast_bSuccess);
	bool IsPlayerGrappled(bool Result);
	bool BPCheckPreventInput(enum class EPrimalCharacterInputType* InputType, bool* CallFunc_PlayerHasFistsEquipped_result, bool CallFunc_IsPlayerGrappled_result);
	float GetPlayerMoveSpeedModifier(double Result, double K2Node_FunctionResult_result_ImplicitCast);
	bool OnRep_bCanRunOnWater(class APrimalCharacter** CallFunc_GetDefaultPlayer_ref, class UPrimalCharacterMovement** CallFunc_CharacterMovementToPCM_ReturnValue, class UPrimalCharacterMovement** CallFunc_CharacterMovementToPCM_ReturnValue_1, float* K2Node_VariableSet_WaterSubmergedDepthThreshold_ImplicitCast);
	bool SetRunningOnWater(bool* IsRunning, const struct FWeaponAnim& K2Node_MakeStruct_WeaponAnim, bool* CallFunc_IsLocallyControlled_ReturnValue, bool* CallFunc_IsLocallyControlled_ReturnValue_1, class UAnimInstance** CallFunc_GetAnimInstance_ReturnValue, class UAnimInstance** CallFunc_GetAnimInstance_ReturnValue_1, bool* CallFunc_Montage_IsPlaying_ReturnValue, bool* CallFunc_Montage_IsPlaying_ReturnValue_1, bool* CallFunc_Montage_IsPlaying_ReturnValue_2, bool* CallFunc_Montage_IsPlaying_ReturnValue_3, float* CallFunc_PlayWeaponAnimation_ReturnValue);
	bool OnRep_CurrentTekRunState(bool* CallFunc_IsLocallyControlled_ReturnValue, double CallFunc_Get_Default_Player_Run_Speed_Mult_speedMult, class APrimalCharacter** CallFunc_GetDefaultPlayer_ref, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess_1, class UPrimalCharacterMovement** CallFunc_CharacterMovementToPCM_ReturnValue, class UPrimalCharacterMovement** CallFunc_CharacterMovementToPCM_ReturnValue_1, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, float* K2Node_VariableSet_RunningSpeedModifier_ImplicitCast, float* K2Node_VariableSet_RunningSpeedModifier_ImplicitCast_1);
	class APrimalBuff* AreGlovesEquippedAndActive(bool Result, class ABuff_TekArmor_Gloves_C** GlovesRef, bool* RetVal, class UPrimalItemArmor_TekGloves_C* K2Node_DynamicCast_AsPrimal_Item_Armor_Tek_Gloves, bool* K2Node_DynamicCast_bSuccess, class ABuff_TekArmor_Gloves_C* K2Node_DynamicCast_AsBuff_Tek_Armor_Gloves, bool* K2Node_DynamicCast_bSuccess_1);
	class AShooterCharacter* Get_Player_Max_Tek_Run_Velocity(double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast);
	float GetBuffPostprocessIntensity(double CurrentIntensity, double CallFunc_SelectFloat_ReturnValue, class UPrimalItemArmor_TekGloves_C* K2Node_DynamicCast_AsPrimal_Item_Armor_Tek_Gloves, bool* K2Node_DynamicCast_bSuccess, class ABuff_TekArmor_Gloves_C* K2Node_DynamicCast_AsBuff_Tek_Armor_Gloves, bool* K2Node_DynamicCast_bSuccess_1, double CallFunc_SelectFloat_ReturnValue_1);
	bool CanStartTekRun(bool Result, bool* RetVal, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AShooterGameState** K2Node_DynamicCast_AsShooter_Game_State, bool* K2Node_DynamicCast_bSuccess, bool CallFunc_IsPlayerInWaterVolume_result, bool* CallFunc_IsTekArmorUsingAbility__result, bool CallFunc_IsPlayerGrounded_result, bool CallFunc_CanUseTekAbility_bResult);
	double NetSetRunningSpeedModifier(float* K2Node_VariableSet_RunningSpeedModifier_ImplicitCast);
	float RunDamageActor(bool* DidRebound, class APrimalCharacter** K2Node_DynamicCast_AsPrimal_Character, bool* K2Node_DynamicCast_bSuccess, bool* K2Node_DynamicCast_bSuccess_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue, bool CallFunc_Should_Damage_Actor_result, bool* K2Node_DynamicCast_bSuccess_2, const struct FVector& CallFunc_GetModifiedForward_newForward, const struct FTransform& CallFunc_MakeTransform_ReturnValue_1, bool CallFunc_RunDamageActor_DidRebound, struct FVector* CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_CalculateDeflectingImpulse_ReturnValue, double CallFunc_SelectFloat_ReturnValue, float CallFunc_ApplyDamage_ReturnValue, double* CallFunc_LessEqual_DoubleDouble_A_ImplicitCast, double K2Node_VariableSet_TekRunDamage_current_ImplicitCast);
	float NetSetTekRunningState(bool K2Node_SwitchEnum_CmpSuccess, float* K2Node_VariableSet_BuffTickServerMinTime_ImplicitCast);
	bool SetDustParticlesActive(float* CallFunc_SetFloatParameter_Param_ImplicitCast);
	struct FRotator UpdateLocalVarsByState(bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_Can_Element_Decrease_CanDecrease, struct FVector* CallFunc_GetActorForwardVector_ReturnValue);
	bool LocalSetTekRunningState(bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_Can_Element_Decrease_CanDecrease, bool CallFunc_Can_Element_Decrease_CanDecrease_1);
	bool BuffTickServer(struct FVector* ForwardVector, bool* CallFunc_PlayerHasFistsEquipped_result, double CallFunc_Multiply_DoubleDouble_ReturnValue, bool CallFunc_IsPlayerInWaterVolume_result, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool* CallFunc_IsSubmerged_ReturnValue, struct FVector* CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue_1, struct FVector* CallFunc_GetActorForwardVector_ReturnValue_1, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1, bool CallFunc_IsPlayerGrounded_result, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2, struct FVector* CallFunc_GetActorForwardVector_ReturnValue_2, bool* CallFunc_IsTekArmorUsingAbility__result, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, double CallFunc_Multiply_DoubleDouble_ReturnValue_3, bool CallFunc_Less_DoubleDouble_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_Less_DoubleDouble_ReturnValue_1, bool CallFunc_Can_Element_Decrease_CanDecrease, double CallFunc_Multiply_DoubleDouble_ReturnValue_4, double CallFunc_Multiply_DoubleDouble_ReturnValue_5, struct FVector* CallFunc_GetActorForwardVector_ReturnValue_3, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FVector& CallFunc_Normal_ReturnValue_2, bool CallFunc_Less_DoubleDouble_ReturnValue_2, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3, double CallFunc_Multiply_DoubleDouble_B_ImplicitCast, double CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast);
	void InitGloves();
	void ForceWalkForward();
	void UpdatePlayerControlRotation(double* DeltaSeconds);
	void BPDeactivated(class AActor** ForInstigator, class APrimalCharacter** CallFunc_GetDefaultPlayer_ref, double CallFunc_Get_Default_Player_Run_Speed_Mult_speedMult, class UPrimalCharacterMovement** CallFunc_CharacterMovementToPCM_ReturnValue, float* K2Node_VariableSet_RunningSpeedModifier_ImplicitCast);
	double GetPlayerTekRunVelocityRatio();
	float Get_Player_MaxRunVelocity(double CallFunc_Get_Default_Player_Run_Speed_Mult_speedMult, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_B_ImplicitCast, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast);
	bool MaintainFullSpeed(const struct FVector& OverrideDirection, bool WasMaintained, bool* RetVal, const struct FVector& NewDirection, double CallFunc_Multiply_DoubleDouble_ReturnValue, struct FVector* CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue_1);
	double GetPlayerMaxTekRunVelocity_Pure();
	double StoreCurrentVelocityLength(struct FVector* CallFunc_GetActorForwardVector_ReturnValue);
	double SetChargeStartVariables(const struct FVector& CallFunc_Normal_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue);
	double Get_Default_Player_Run_Speed_Mult(class APrimalCharacter** CallFunc_GetDefaultPlayer_ref);
	void Tick_Update_Tek_Run(double* DeltaSeconds);
	struct FVector RedirectPlayerVelocity(const struct FVector& CallFunc_MakeVector_ReturnValue);
	float BuffTickClient(struct FVector* CurrentFootOffset, bool* CallFunc_IsAbilityValid_OutValid, bool CallFunc_IsPlayerInWaterVolume_result, struct FVector* CallFunc_GetActorForwardVector_ReturnValue, bool CallFunc_IsPlayerUsingJetpack_result, struct FVector* CallFunc_GetActorForwardVector_ReturnValue_1, bool* CallFunc_IsLocallyControlled_ReturnValue, bool* CallFunc_IsFirstPerson_ReturnValue, double CallFunc_FClamp_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, double* CallFunc_Add_DoubleDouble_ReturnValue, bool* CallFunc_IsTekArmorUsingAbility__result, double CallFunc_FClamp_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1, TArray<enum class EObjectTypeQuery>* K2Node_MakeArray_Array, struct FVector* CallFunc_GetActorBounds_BoxExtent, TArray<class AActor*>* K2Node_MakeArray_Array_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, struct FVector* CallFunc_Subtract_VectorVector_ReturnValue, double* CallFunc_Add_DoubleDouble_ReturnValue_1, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3, const struct FVector& CallFunc_MakeVector_ReturnValue_1, double* CallFunc_Add_DoubleDouble_ReturnValue_2, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_4, double* CallFunc_Add_DoubleDouble_ReturnValue_3, bool CallFunc_BreakHitResult_bBlockingHit, bool* CallFunc_BreakHitResult_bInitialOverlap, float* CallFunc_BreakHitResult_Distance, struct FVector* CallFunc_BreakHitResult_Location, struct FVector* CallFunc_BreakHitResult_ImpactPoint, struct FVector* CallFunc_BreakHitResult_Normal, struct FVector* CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial** CallFunc_BreakHitResult_PhysMat, class AActor** CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent** CallFunc_BreakHitResult_HitComponent, class FName* CallFunc_BreakHitResult_HitBoneName, class FName* CallFunc_BreakHitResult_BoneName, int32* CallFunc_BreakHitResult_HitItem, int32* CallFunc_BreakHitResult_ElementIndex, int32* CallFunc_BreakHitResult_FaceIndex, class APhysicsVolume* K2Node_DynamicCast_AsPhysics_Volume, bool* K2Node_DynamicCast_bSuccess, bool CallFunc_CanStartTekRun_result, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess_1, const struct FRotator& CallFunc_GetControlRotation_ReturnValue, bool CallFunc_IsPlayerGrounded_result, double CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast, double CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1, double CallFunc_EqualEqual_DoubleDouble_B_ImplicitCast);
	bool SetPreventEquipWeapons();
	struct FVector CalculateDeflectingImpulse(double* Impulse, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, struct FVector* CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue);
	double SetPlayerRunSpeed();
	void ClearHitActors();
	struct FVector Trace_and_Damage_ForwardPawns(const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, int32 Temp_int_Loop_Counter_Variable, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, struct FVector* CallFunc_GetActorForwardVector_ReturnValue, TArray<class AActor*>* K2Node_MakeArray_Array, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, int32 Temp_int_Array_Index_Variable, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_1, bool* CallFunc_BoxTraceSingle_ReturnValue, const struct FHitResult& CallFunc_Array_Get_Item, bool CallFunc_BreakHitResult_bBlockingHit, bool* CallFunc_BreakHitResult_bInitialOverlap, float* CallFunc_BreakHitResult_Distance, struct FVector* CallFunc_BreakHitResult_Location, struct FVector* CallFunc_BreakHitResult_ImpactPoint, struct FVector* CallFunc_BreakHitResult_Normal, struct FVector* CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial** CallFunc_BreakHitResult_PhysMat, class AActor** CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent** CallFunc_BreakHitResult_HitComponent, class FName* CallFunc_BreakHitResult_HitBoneName, class FName* CallFunc_BreakHitResult_BoneName, int32* CallFunc_BreakHitResult_HitItem, int32* CallFunc_BreakHitResult_ElementIndex, int32* CallFunc_BreakHitResult_FaceIndex, class APrimalCharacter** K2Node_DynamicCast_AsPrimal_Character, bool* K2Node_DynamicCast_bSuccess, bool CallFunc_Should_Damage_Actor_result, struct FHitResult* CallFunc_VTraceSingleBP_OutHit, bool* CallFunc_VTraceSingleBP_ReturnValue, struct FVector* CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, float* CallFunc_ApplyPointDamage_ReturnValue, float CallFunc_ApplyPointDamage_BaseDamage_ImplicitCast, float CallFunc_ApplyPointDamage_Impulse_ImplicitCast, double CallFunc_MakeVector_Y_ImplicitCast, double CallFunc_MakeVector_X_ImplicitCast, double CallFunc_MakeVector_Z_ImplicitCast);
	struct FVector GetModifiedForward(double* ForwardScale, const struct FVector& AdditionalOffset, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, struct FVector* CallFunc_Subtract_VectorVector_ReturnValue);
	double Trace_And_Damage_Forward_StationaryActors(int32 Temp_int_Array_Index_Variable, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, double CallFunc_SelectFloat_ReturnValue, TArray<class AActor*>* K2Node_MakeArray_Array, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue, double* CallFunc_Add_DoubleDouble_ReturnValue, int32 Temp_int_Loop_Counter_Variable, const struct FVector& CallFunc_MakeVector_ReturnValue_1, bool* CallFunc_BoxTraceSingle_ReturnValue, const struct FHitResult& CallFunc_Array_Get_Item, bool CallFunc_BreakHitResult_bBlockingHit, bool* CallFunc_BreakHitResult_bInitialOverlap, float* CallFunc_BreakHitResult_Distance, struct FVector* CallFunc_BreakHitResult_Location, struct FVector* CallFunc_BreakHitResult_ImpactPoint, struct FVector* CallFunc_BreakHitResult_Normal, struct FVector* CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial** CallFunc_BreakHitResult_PhysMat, class AActor** CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent** CallFunc_BreakHitResult_HitComponent, class FName* CallFunc_BreakHitResult_HitBoneName, class FName* CallFunc_BreakHitResult_BoneName, int32* CallFunc_BreakHitResult_HitItem, int32* CallFunc_BreakHitResult_ElementIndex, int32* CallFunc_BreakHitResult_FaceIndex, class UInstancedStaticMeshComponent* K2Node_DynamicCast_AsInstanced_Static_Mesh_Component, bool* K2Node_DynamicCast_bSuccess, class AInstancedFoliageActor** K2Node_DynamicCast_AsInstanced_Foliage_Actor, bool* K2Node_DynamicCast_bSuccess_1, bool* K2Node_DynamicCast_bSuccess_2, struct FVector* CallFunc_Cross_VectorVector_ReturnValue, bool CallFunc_RunDamageActor_DidRebound, struct FVector* CallFunc_Subtract_VectorVector_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue, double CallFunc_MakeVector_Y_ImplicitCast, double CallFunc_MakeVector_X_ImplicitCast, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1);
	void CalculateForwardRelativeToSpeed(double* DeltaSeconds, struct FVector* ForwardVector);
	bool CanUseTekAbility(bool* bNotifyIfOutOfElement, bool* RetVal, bool CallFunc_CanUseTekAbility_bResult, bool CallFunc_IsPlacingActive_ReturnValue, bool* CallFunc_IsSubmerged_ReturnValue, bool CallFunc_IsPlayerGrappled_result, bool* CallFunc_IsTekArmorUsingAbility__result);
	void SetCastedArmorPieceRef(class UPrimalItemArmor_Base_Tek_C* CallFunc_GetRelatedTekArmorRef_tekArmorRef, class UPrimalItemArmor_TekPants_C* K2Node_DynamicCast_AsPrimal_Item_Armor_Tek_Pants, bool* K2Node_DynamicCast_bSuccess);
	void InpActEvt_AltFire_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_AltFire_K2Node_InputActionEvent_0(const struct FKey& Key);
	void Server_SetTekRunningState(enum class E_TekRunningState* NewRunState);
	double Client_SyncRunModifier();
	void Pants_AltFirePressed();
	void Pants_AltFireReleased();
	bool ExecuteUbergraph_Buff_TekArmor_Pants(int32* EntryPoint, struct FKey* K2Node_InputActionEvent_Key_1, struct FKey* K2Node_InputActionEvent_Key, enum class E_TekRunningState* K2Node_CustomEvent_newRunState, bool* CallFunc_ValidateRunningState_bStateValid, bool CallFunc_CanStartTekRun_result, bool* CallFunc_AreGlovesEquippedAndActive_result, class ABuff_TekArmor_Gloves_C** CallFunc_AreGlovesEquippedAndActive_glovesRef, bool CallFunc_IsPlayerGrappled_result, bool* CallFunc_PlayerHasFistsEquipped_result, float* K2Node_VariableSet_RunningSpeedModifier_ImplicitCast);
};

}


