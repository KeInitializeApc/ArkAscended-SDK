#pragma once

// Dumped with TateDumper!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x192 (0x4C2 - 0x330)
// WidgetBlueprintGeneratedClass MinimapWidget_ASA.MinimapWidget_ASA_C
class UMinimapWidget_ASA_C : public UPrimalUserWidget
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x330(0x8)(Edit, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, SubobjectReference)
	class UCanvasPanel*                          CanvasExtra;                                       // 0x338(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UCanvasPanel*                          MainCanvas;                                        // 0x340(0x8)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, EditConst, SubobjectReference)
	class UImage*                                Minimap_Image;                                     // 0x348(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UMapMarkWidget_ASA_C*                  PlayerMark_Owner;                                  // 0x350(0x8)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UCanvasPanel*                          PoiCanvas;                                         // 0x358(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              MiniMapMAT;                                        // 0x360(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPointOfInterestData>          MarkPOIs;                                          // 0x368(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      PrimalChar;                                        // 0x378(0x8)(Edit, BlueprintVisible, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	double                                       ScaleMinimap;                                      // 0x380(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UMapMarkWidget_ASA_C*>          _MapMarksWidgets;                                  // 0x388(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        NextPlayerMarkIndex;                               // 0x398(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_535E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             PlayerLocation;                                    // 0x3A0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FMapData                              CachedMinimapData;                                 // 0x3B0(0x78)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       LasTimeUpdate;                                     // 0x428(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             ScalePOI;                                          // 0x430(0x10)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       OriginalScaleMinimap;                              // 0x440(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             OriginalScaleOverridePOI;                          // 0x448(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             MaxScaleOverridePOI;                               // 0x458(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            RefreshTracking;                                   // 0x468(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            RefreshCachedData;                                 // 0x478(0x10)(EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        OverrideSelectedCacheMap;                          // 0x488(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsOverridingCacheMap;                              // 0x48C(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_535F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TimeShowLastDeath;                                 // 0x490(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LastDeathMarkRemoveTime;                           // 0x494(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsCornerMinimap;                                   // 0x498(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_5360[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            HandleEditMark;                                    // 0x4A0(0x10)(ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             PlayerCoords;                                      // 0x4B0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDontShowPOI;                                      // 0x4C0(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsSpawnUI;                                         // 0x4C1(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMinimapWidget_ASA_C* GetDefaultObj();

	double TraceGroundLocation(const struct FVector& WithLocation, bool* Found, TArray<class AActor*>* K2Node_MakeArray_Array, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_1, bool CallFunc_BreakHitResult_bBlockingHit, bool* CallFunc_BreakHitResult_bInitialOverlap, float* CallFunc_BreakHitResult_Distance, struct FVector* CallFunc_BreakHitResult_Location, struct FVector* CallFunc_BreakHitResult_ImpactPoint, struct FVector* CallFunc_BreakHitResult_Normal, struct FVector* CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial** CallFunc_BreakHitResult_PhysMat, class AActor** CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent** CallFunc_BreakHitResult_HitComponent, class FName* CallFunc_BreakHitResult_HitBoneName, class FName* CallFunc_BreakHitResult_BoneName, int32* CallFunc_BreakHitResult_HitItem, int32* CallFunc_BreakHitResult_ElementIndex, int32* CallFunc_BreakHitResult_FaceIndex, double CallFunc_SelectFloat_ReturnValue);
	float Get_Render_Scale_for_POI(bool Temp_bool_Variable, double CallFunc_FClamp_ReturnValue, struct FVector2D* CallFunc_MakeVector2D_ReturnValue, const struct FVector2D& K2Node_Select_Default);
	int32 IncrementCacheOverride(int32 Qty);
	bool UpdateCachedData(struct FMapData* CallFunc_Get_Current_MiniMap_Data_CurrentMinimapData);
	double GetLocationWIthCoords(struct FVector2D* Coords, struct FVector* Location, const struct FVector& CallFunc_MakeVector_ReturnValue);
	float CalculateWorldLocationMinimap(struct FVector2D* Vector, double CallFunc_Multiply_DoubleFloat_ReturnValue, double CallFunc_Multiply_DoubleFloat_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue);
	int32 GetAllPois(TArray<struct FPointOfInterestData_ForCompanion>* Local_nearby_POI, bool HasTrackingAPoi, const TArray<struct FPointOfInterestData>& LocalPointOfinterest, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Array_Index_Variable_1, class UShooterGameUserSettings* CallFunc_GetShooterGameUserSettings_ReturnValue, const struct FPointOfInterestData_ForCompanion& CallFunc_Array_Get_Item, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class UShooterGameUserSettings* CallFunc_GetShooterGameUserSettings_ReturnValue_1, class UShooterGameUserSettings* CallFunc_GetShooterGameUserSettings_ReturnValue_2, class UShooterGameUserSettings* CallFunc_GetShooterGameUserSettings_ReturnValue_3, int32 Temp_int_Loop_Counter_Variable_1, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class AShooterPlayerController** K2Node_DynamicCast_AsShooter_Player_Controller, bool* K2Node_DynamicCast_bSuccess, bool* CallFunc_Greater_IntInt_ReturnValue, class FString* CallFunc_BPGetPrimaryMapName_ReturnValue, class UShooterGameUserSettings* CallFunc_GetShooterGameUserSettings_ReturnValue_4, const struct FMinimapMark& CallFunc_Array_Get_Item_1, bool* CallFunc_EqualEqual_IntInt_ReturnValue);
	float LocAndRotYourself(struct FVector2D* InPosition, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, enum class ESlateVisibility* CallFunc_GetVisibility_ReturnValue, const struct FRotator& CallFunc_GetCameraRotation_ReturnValue, float* CallFunc_BreakRotator_Roll, float* CallFunc_BreakRotator_Pitch, float* CallFunc_BreakRotator_Yaw, class UCanvasPanelSlot** CallFunc_SlotAsCanvasSlot_ReturnValue, double* CallFunc_Add_DoubleDouble_ReturnValue, double* CallFunc_Add_DoubleDouble_A_ImplicitCast);
	bool UpdateOwnPlayerMark(struct FVector* CallFunc_Vector_Zero_ReturnValue, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue, class APrimalCharacter** K2Node_DynamicCast_AsPrimal_Character, bool* K2Node_DynamicCast_bSuccess, const struct FVector& CallFunc_GetPawnLoc_WorldLocation, bool* CallFunc_EqualEqual_VectorVector_ReturnValue, struct FVector2D* CallFunc_GetMinimapLocation_ReturnValue, struct FVector2D* CallFunc_GetMinimapLocation_Coords);
	int32 GeneratePOIs(const TArray<class FName>& TagsUsed, class FString* CallFunc_BPGetPrimaryMapName_ReturnValue, class UMapMarkWidget_ASA_C* CallFunc_Create_ReturnValue, int32 Temp_int_Array_Index_Variable, class UCanvasPanelSlot** CallFunc_SlotAsCanvasSlot_ReturnValue, int32 Temp_int_Loop_Counter_Variable, const struct FPointOfInterestData& CallFunc_Array_Get_Item, int32 CallFunc_Conv_ByteToInt_ReturnValue, bool* CallFunc_EqualEqual_IntInt_ReturnValue, struct FMinimapMark* K2Node_MakeStruct_MinimapMark, int32* CallFunc_Array_LastIndex_ReturnValue, class UMapMarkWidget_ASA_C* CallFunc_Array_Get_Item_1, bool* CallFunc_GreaterEqual_IntInt_ReturnValue, class UMapMarkWidget_ASA_C* CallFunc_Array_Get_Item_2, bool* CallFunc_Array_IsValidIndex_ReturnValue, struct FVector2D* CallFunc_GetMinimapLocation_ReturnValue, struct FVector2D* CallFunc_GetMinimapLocation_Coords, struct FVector2D* CallFunc_GetMinimapLocation_ReturnValue_1, struct FVector2D* CallFunc_GetMinimapLocation_Coords_1, class UCanvasPanelSlot** CallFunc_SlotAsCanvasSlot_ReturnValue_1, const TArray<struct FPointOfInterestData>& CallFunc_GetAllPois_MarkPOIs, class UPanelSlot** CallFunc_AddChild_ReturnValue, double CallFunc_SetProgressPercent_Percent_ImplicitCast, double CallFunc_SetProgressPercent_Percent_ImplicitCast_1);
	double GetMinimapLocation(struct FVector* InputPin, struct FVector2D* Coords, double CallFunc_SelectFloat_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, struct FVector2D* CallFunc_MakeVector2D_ReturnValue, struct FVector2D* CallFunc_MakeVector2D_ReturnValue_1);
	int32 Get_Current_MiniMap_Data(const struct FMapData& CurrentMinimapData, struct FMapData* LocalMinimap, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, bool Temp_bool_True_if_break_was_hit_Variable, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue, class APrimalCharacter** CallFunc_PawnToPrimalCharacter_ReturnValue, TArray<struct FMapData>* CallFunc_GetMiniMapData_Minimaps, const struct FVector& CallFunc_GetPawnLoc_WorldLocation, const struct FMapData& CallFunc_Array_Get_Item, int32* CallFunc_Array_LastIndex_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue, bool* CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue_1, bool CallFunc_Less_DoubleDouble_ReturnValue_2, bool* CallFunc_Greater_IntInt_ReturnValue_1);
	class UMinimapData* GetMiniMapData(TArray<struct FMapData>* Minimaps, bool* K2Node_DynamicCast_bSuccess, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class UWorld** CallFunc_K2_GetWorld_ReturnValue, class AWorldSettings** CallFunc_K2_GetWorldSettings_ReturnValue, class APrimalWorldSettings* K2Node_DynamicCast_AsPrimal_World_Settings, bool* K2Node_DynamicCast_bSuccess_1, bool* K2Node_DynamicCast_bSuccess_2);
	struct FVector GetPawnLoc(class APrimalCharacter* Pawn, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue);
	void Construct();
	float Tick(struct FGeometry* MyGeometry);
	double UpdateZoomMap();
	class UMapMarkWidget_ASA_C* AssignOnHandleMark();
	bool HandleTracking_Event();
	bool PreConstruct();
	struct FMinimapMark HaandleEditMark_Event();
	FDelegateProperty_ ExecuteUbergraph_MinimapWidget_ASA(int32* EntryPoint, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, double* K2Node_CustomEvent_Zoom, bool CallFunc_IsTimeSince_ReturnValue, class UMapMarkWidget_ASA_C* K2Node_CustomEvent_Ref, struct FMinimapMark* K2Node_CustomEvent_Mark_1, bool K2Node_CustomEvent_IsTracking, struct FMinimapMark* K2Node_CustomEvent_Mark, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class AShooterPlayerController** K2Node_DynamicCast_AsShooter_Player_Controller, bool* K2Node_DynamicCast_bSuccess, int32 Temp_int_Array_Index_Variable, class UMapMarkWidget_ASA_C* CallFunc_Array_Get_Item, class UCanvasPanelSlot** CallFunc_SlotAsCanvasSlot_ReturnValue, class UCanvasPanelSlot** CallFunc_SlotAsCanvasSlot_ReturnValue_1, struct FVector2D* CallFunc_GetMinimapLocation_ReturnValue, struct FVector2D* CallFunc_GetMinimapLocation_Coords, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue_1, class AShooterPlayerController** K2Node_DynamicCast_AsShooter_Player_Controller_1, bool* K2Node_DynamicCast_bSuccess_1, int32 Temp_int_Loop_Counter_Variable);
	struct FMinimapMark HandleEditMark__DelegateSignature();
	void RefreshCachedData__DelegateSignature();
	bool RefreshTracking__DelegateSignature();
};

}


